{
 "bad": [
  "ObjectDetectionEvaluation",
  "PIL.Image",
  "PIL.Image.composite",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "PIL.ImageColor",
  "PIL.ImageColor.getrgb",
  "PIL.ImageDraw",
  "PIL.ImageDraw.Draw",
  "PIL.ImageFont",
  "PIL.ImageFont.load_default",
  "PIL.ImageFont.truetype",
  "StringIO",
  "StringIO.StringIO",
  "_VRDDetectionEvaluation",
  "_batch_gather_kept_indices",
  "_build_activation_fn",
  "_build_initializer",
  "_bytes_feature",
  "_copy_extra_fields",
  "_flip_image",
  "_get_or_create_preprocess_rand_vars",
  "_image_to_gray",
  "_lin_space_weights",
  "_match_when_rows_are_empty",
  "_match_when_rows_are_non_empty",
  "_rot90_image",
  "box_prediction_head",
  "class_prediction_head",
  "classification_loss",
  "compare_results",
  "conv_box_predictor",
  "conv_box_predictor._sorted_head_names",
  "conv_op",
  "coverage_box",
  "create_eval_input_fn",
  "create_pipeline_proto_from_configs",
  "create_predict_input_fn",
  "create_train_input_fn",
  "data_augmentation_fn",
  "deployment.model_deploy",
  "deployment.model_deploy.DeploymentConfig",
  "deployment.model_deploy.create_clones",
  "deployment.model_deploy.optimize_clones",
  "depth",
  "depth_fn",
  "detection_model_fn",
  "eval_input_fn",
  "execute_fn",
  "feature_extractor",
  "feature_extractor.extract_features",
  "feature_extractor_class",
  "feature_map_generator",
  "filter_scores_greater_than",
  "focal_loss_op",
  "func",
  "gather",
  "gather_op",
  "get_arg",
  "get_box_inds",
  "get_configs_from_pipeline_file",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor.OneofDescriptor",
  "google.protobuf.internal.enum_type_wrapper",
  "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
  "google.protobuf.message",
  "google.protobuf.message.Message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "google.protobuf.text_format",
  "google.protobuf.text_format.Merge",
  "google.protobuf.text_format.MessageToString",
  "google.protobuf.text_format.Parse",
  "google.protobuf.text_format.ParseError",
  "graph_fn",
  "graph_rewrite_fn",
  "graph_rewriter_fn",
  "hashlib.sha256",
  "head_obj",
  "image_resizer_fn",
  "image_summary_or_default_string",
  "input_transformation_fn",
  "itertools",
  "itertools.count",
  "itertools.izip",
  "json.encoder.FLOAT_REPR",
  "layer",
  "layer_one",
  "layer_two",
  "localization_loss",
  "loss_op",
  "loss_op.summarize",
  "lxml.etree.fromstring",
  "mask_prediction_head",
  "merge_external_params_with_configs",
  "mock.patch.object",
  "model",
  "model.get_layer",
  "model_fn",
  "nets.inception_resnet_v2",
  "nets.inception_resnet_v2.block8",
  "nets.inception_resnet_v2.inception_resnet_v2_arg_scope",
  "nets.inception_resnet_v2.inception_resnet_v2_base",
  "nets.inception_v2",
  "nets.inception_v2.inception_v2_base",
  "nets.inception_v3",
  "nets.inception_v3.inception_v3_base",
  "nets.mobilenet.mobilenet",
  "nets.mobilenet.mobilenet.depth_multiplier",
  "nets.mobilenet.mobilenet.op",
  "nets.mobilenet.mobilenet_v2",
  "nets.mobilenet.mobilenet_v2.V2_DEF",
  "nets.mobilenet.mobilenet_v2.mobilenet_base",
  "nets.mobilenet.mobilenet_v2.training_scope",
  "nets.mobilenet_v1",
  "nets.mobilenet_v1.Conv",
  "nets.mobilenet_v1.DepthSepConv",
  "nets.mobilenet_v1.MOBILENETV1_CONV_DEFS",
  "nets.mobilenet_v1.mobilenet_v1_arg_scope",
  "nets.mobilenet_v1.mobilenet_v1_base",
  "nets.nasnet.nasnet",
  "nets.nasnet.nasnet.build_nasnet_large",
  "nets.nasnet.nasnet.large_imagenet_config",
  "nets.nasnet.nasnet.nasnet_large_arg_scope",
  "nets.nasnet.nasnet_utils",
  "nets.nasnet.nasnet_utils.NasNetANormalCell",
  "nets.nasnet.nasnet_utils.NasNetAReductionCell",
  "nets.nasnet.nasnet_utils.calc_reduction_layers",
  "nets.nasnet.nasnet_utils.drop_path",
  "nets.nasnet.nasnet_utils.factorized_reduction",
  "nets.nasnet.nasnet_utils.get_channel_dim",
  "nets.nasnet.nasnet_utils.get_channel_index",
  "nets.nasnet.nasnet_utils.global_avg_pool",
  "nets.nasnet.pnasnet",
  "nets.nasnet.pnasnet.PNasNetNormalCell",
  "nets.nasnet.pnasnet.build_pnasnet_large",
  "nets.nasnet.pnasnet.large_imagenet_config",
  "nets.nasnet.pnasnet.pnasnet_large_arg_scope",
  "nets.resnet_utils",
  "nets.resnet_utils.Block",
  "nets.resnet_utils.resnet_arg_scope",
  "nets.resnet_utils.stack_blocks_dense",
  "nets.resnet_v1",
  "nets.resnet_v1.bottleneck",
  "nets.resnet_v1.resnet_arg_scope",
  "norm",
  "norm.beta",
  "norm.gamma",
  "numpy.divide",
  "numpy.float32",
  "numpy.fmax",
  "numpy.fmin",
  "numpy.greater",
  "numpy.less",
  "numpy.log",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.maximum",
  "numpy.minimum",
  "numpy.nan",
  "numpy.power",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.string_",
  "object_detection.core.box_list_ops.SortOrder.ascend",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ADD_BLACK_PATCH",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ADJUST_BRIGHTNESS",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ADJUST_CONTRAST",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ADJUST_HUE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ADJUST_SATURATION",
  "object_detection.core.preprocessor_cache.PreprocessorCache.BLACK_PATCHES",
  "object_detection.core.preprocessor_cache.PreprocessorCache.CROP_IMAGE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.CROP_TO_ASPECT_RATIO",
  "object_detection.core.preprocessor_cache.PreprocessorCache.HORIZONTAL_FLIP",
  "object_detection.core.preprocessor_cache.PreprocessorCache.IMAGE_SCALE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.PAD_IMAGE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.PAD_TO_ASPECT_RATIO",
  "object_detection.core.preprocessor_cache.PreprocessorCache.PIXEL_VALUE_SCALE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.RESIZE_METHOD",
  "object_detection.core.preprocessor_cache.PreprocessorCache.RGB_TO_GRAY",
  "object_detection.core.preprocessor_cache.PreprocessorCache.ROTATION90",
  "object_detection.core.preprocessor_cache.PreprocessorCache.SELECTOR",
  "object_detection.core.preprocessor_cache.PreprocessorCache.SELECTOR_TUPLES",
  "object_detection.core.preprocessor_cache.PreprocessorCache.SSD_CROP_PAD_SELECTOR_ID",
  "object_detection.core.preprocessor_cache.PreprocessorCache.SSD_CROP_SELECTOR_ID",
  "object_detection.core.preprocessor_cache.PreprocessorCache.STRICT_CROP_IMAGE",
  "object_detection.core.preprocessor_cache.PreprocessorCache.VERTICAL_FLIP",
  "object_detection.core.standard_fields.BoxListFields.boundaries",
  "object_detection.core.standard_fields.BoxListFields.boxes",
  "object_detection.core.standard_fields.BoxListFields.classes",
  "object_detection.core.standard_fields.BoxListFields.confidences",
  "object_detection.core.standard_fields.BoxListFields.is_crowd",
  "object_detection.core.standard_fields.BoxListFields.keypoint_heatmaps",
  "object_detection.core.standard_fields.BoxListFields.keypoints",
  "object_detection.core.standard_fields.BoxListFields.masks",
  "object_detection.core.standard_fields.BoxListFields.scores",
  "object_detection.core.standard_fields.BoxListFields.weights",
  "object_detection.core.standard_fields.DetectionResultFields.detection_boxes",
  "object_detection.core.standard_fields.DetectionResultFields.detection_boxes.shape",
  "object_detection.core.standard_fields.DetectionResultFields.detection_classes",
  "object_detection.core.standard_fields.DetectionResultFields.detection_keypoints",
  "object_detection.core.standard_fields.DetectionResultFields.detection_masks",
  "object_detection.core.standard_fields.DetectionResultFields.detection_scores",
  "object_detection.core.standard_fields.DetectionResultFields.key",
  "object_detection.core.standard_fields.DetectionResultFields.num_detections",
  "object_detection.core.standard_fields.InputDataFields.filename",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_area",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_area.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_area.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_area.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_boxes",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_boxes.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_boxes.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_boxes.shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_boxes.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_classes",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_classes.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_classes.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_classes.shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_classes.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_confidences",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_confidences.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_confidences.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_difficult",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_difficult.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_difficult.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_difficult.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_difficult.size",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_group_of",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_group_of.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_group_of.size",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_image_classes",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_image_confidences",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_instance_masks",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_instance_masks.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_instance_masks.shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_is_crowd",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_is_crowd.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_is_crowd.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_is_crowd.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoint_visibilities",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoint_visibilities.shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoint_visibilities.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoints",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoints.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoints.shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_keypoints.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_label_types",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_label_weights",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_weights",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_weights.dtype",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_weights.get_shape",
  "object_detection.core.standard_fields.InputDataFields.groundtruth_weights.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.image",
  "object_detection.core.standard_fields.InputDataFields.image.dtype",
  "object_detection.core.standard_fields.InputDataFields.image.get_shape",
  "object_detection.core.standard_fields.InputDataFields.image.set_shape",
  "object_detection.core.standard_fields.InputDataFields.image.shape",
  "object_detection.core.standard_fields.InputDataFields.image.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.image.shape.value",
  "object_detection.core.standard_fields.InputDataFields.image_additional_channels",
  "object_detection.core.standard_fields.InputDataFields.image_additional_channels.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.image_additional_channels.shape.value",
  "object_detection.core.standard_fields.InputDataFields.is_annotated",
  "object_detection.core.standard_fields.InputDataFields.key",
  "object_detection.core.standard_fields.InputDataFields.multiclass_scores",
  "object_detection.core.standard_fields.InputDataFields.num_groundtruth_boxes",
  "object_detection.core.standard_fields.InputDataFields.num_groundtruth_boxes.dtype",
  "object_detection.core.standard_fields.InputDataFields.num_groundtruth_boxes.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.original_image",
  "object_detection.core.standard_fields.InputDataFields.original_image.dtype",
  "object_detection.core.standard_fields.InputDataFields.original_image.shape",
  "object_detection.core.standard_fields.InputDataFields.original_image.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.original_image_spatial_shape",
  "object_detection.core.standard_fields.InputDataFields.original_image_spatial_shape.get_shape",
  "object_detection.core.standard_fields.InputDataFields.original_image_spatial_shape.shape.as_list",
  "object_detection.core.standard_fields.InputDataFields.source_id",
  "object_detection.core.standard_fields.InputDataFields.true_image_shape",
  "object_detection.core.standard_fields.InputDataFields.true_image_shape.shape.as_list",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_xmax",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_xmax.float_list.value",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_xmin",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_xmin.float_list.value",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_ymax",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_ymax.float_list.value",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_ymin",
  "object_detection.core.standard_fields.TfExampleFields.detection_bbox_ymin.float_list.value",
  "object_detection.core.standard_fields.TfExampleFields.detection_class_label",
  "object_detection.core.standard_fields.TfExampleFields.detection_class_label.int64_list.value",
  "object_detection.core.standard_fields.TfExampleFields.detection_score",
  "object_detection.core.standard_fields.TfExampleFields.detection_score.float_list.value",
  "object_detection.core.standard_fields.TfExampleFields.filename",
  "object_detection.core.standard_fields.TfExampleFields.image_class_label",
  "object_detection.core.standard_fields.TfExampleFields.image_class_text",
  "object_detection.core.standard_fields.TfExampleFields.image_encoded",
  "object_detection.core.standard_fields.TfExampleFields.object_bbox_xmax",
  "object_detection.core.standard_fields.TfExampleFields.object_bbox_xmin",
  "object_detection.core.standard_fields.TfExampleFields.object_bbox_ymax",
  "object_detection.core.standard_fields.TfExampleFields.object_bbox_ymin",
  "object_detection.core.standard_fields.TfExampleFields.object_class_label",
  "object_detection.core.standard_fields.TfExampleFields.object_class_text",
  "object_detection.core.standard_fields.TfExampleFields.object_depiction",
  "object_detection.core.standard_fields.TfExampleFields.object_difficult",
  "object_detection.core.standard_fields.TfExampleFields.object_group_of",
  "object_detection.core.standard_fields.TfExampleFields.object_occluded",
  "object_detection.core.standard_fields.TfExampleFields.object_truncated",
  "object_detection.core.standard_fields.TfExampleFields.source_id",
  "object_detection.core.target_assigner.assign",
  "object_detection.inputs.HASH_KEY.dtype",
  "object_detection.inputs.HASH_KEY.shape.as_list",
  "object_detection.predictors.mask_rcnn_box_predictor.MASK_PREDICTIONS._convolve_then_upsample",
  "object_detection.predictors.mask_rcnn_box_predictor.MASK_PREDICTIONS._mask_prediction_conv_depth",
  "object_detection.predictors.rfcn_box_predictor.predict",
  "object_detection.protos.box_predictor_pb2.WeightSharedConvolutionalBoxPredictor.IDENTITY",
  "object_detection.protos.box_predictor_pb2.WeightSharedConvolutionalBoxPredictor.SIGMOID",
  "object_detection.protos.hyperparams_pb2.Hyperparams.CONV",
  "object_detection.protos.hyperparams_pb2.Hyperparams.FC",
  "object_detection.protos.hyperparams_pb2.Hyperparams.NONE",
  "object_detection.protos.hyperparams_pb2.Hyperparams.RELU",
  "object_detection.protos.hyperparams_pb2.Hyperparams.RELU_6",
  "object_detection.protos.hyperparams_pb2.VarianceScalingInitializer.DESCRIPTOR.enum_types_by_name",
  "object_detection.protos.losses_pb2.HardExampleMiner.BOTH",
  "object_detection.protos.losses_pb2.HardExampleMiner.CLASSIFICATION",
  "object_detection.protos.losses_pb2.HardExampleMiner.LOCALIZATION",
  "object_detection.protos.post_processing_pb2.PostProcessing.IDENTITY",
  "object_detection.protos.post_processing_pb2.PostProcessing.SIGMOID",
  "object_detection.protos.post_processing_pb2.PostProcessing.SOFTMAX",
  "object_detection.protos.preprocessor_pb2.ResizeImage.AREA",
  "object_detection.protos.preprocessor_pb2.ResizeImage.BICUBIC",
  "object_detection.protos.preprocessor_pb2.ResizeImage.BILINEAR",
  "object_detection.protos.preprocessor_pb2.ResizeImage.NEAREST_NEIGHBOR",
  "object_detection.utils.np_box_list_ops.SortOrder.ASCEND",
  "object_detection.utils.np_box_list_ops.SortOrder.DESCEND",
  "object_detection.utils.ops.expected_classification_loss_by_expected_sampling",
  "object_detection.utils.ops.expected_classification_loss_by_reweighting_unmatched_anchors",
  "os.environ.get",
  "os.path.basename",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "predict_input_fn",
  "random_jitter_box",
  "re.I",
  "re.MULTILINE",
  "regularizer",
  "scope_fn",
  "score_conversion_fn",
  "score_converter",
  "score_converter.__name__",
  "sigmoid_loss_op",
  "ssd_meta_arch_fn",
  "strict_random_crop_image_fn",
  "sys",
  "sys.float_info.min",
  "tensorflow.GraphKeys.GLOBAL_STEP",
  "tensorflow.GraphKeys.GLOBAL_VARIABLES",
  "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
  "tensorflow.GraphKeys.SAVERS",
  "tensorflow.GraphKeys.SUMMARIES",
  "tensorflow.GraphKeys.TABLE_INITIALIZERS",
  "tensorflow.GraphKeys.UPDATE_OPS",
  "tensorflow.Summary.Image",
  "tensorflow.Summary.Value",
  "tensorflow.app.flags",
  "tensorflow.app.flags.DEFINE_integer",
  "tensorflow.app.flags.DEFINE_string",
  "tensorflow.app.flags.FLAGS",
  "tensorflow.app.flags.mark_flag_as_required",
  "tensorflow.app.run",
  "tensorflow.contrib.framework.arg_scope",
  "tensorflow.contrib.framework.deprecated",
  "tensorflow.contrib.framework.filter_variables",
  "tensorflow.contrib.framework.get_variables",
  "tensorflow.contrib.framework.is_tensor",
  "tensorflow.contrib.framework.model_variable",
  "tensorflow.contrib.layers.flatten",
  "tensorflow.contrib.layers.fully_connected",
  "tensorflow.contrib.layers.group_norm",
  "tensorflow.contrib.layers.optimize_loss",
  "tensorflow.contrib.layers.summarize_collection",
  "tensorflow.contrib.learn.Experiment",
  "tensorflow.contrib.learn.utils.saved_model_export_utils.make_export_strategy",
  "tensorflow.contrib.lookup.HashTable",
  "tensorflow.contrib.lookup.KeyValueTensorInitializer",
  "tensorflow.contrib.opt.MovingAverageOptimizer",
  "tensorflow.contrib.quantize.create_eval_graph",
  "tensorflow.contrib.quantize.create_training_graph",
  "tensorflow.contrib.slim.arg_scope",
  "tensorflow.contrib.slim.conv2d",
  "tensorflow.contrib.slim.queues.QueueRunners",
  "tensorflow.contrib.tpu.CrossShardOptimizer",
  "tensorflow.contrib.tpu.RunConfig",
  "tensorflow.contrib.tpu.TPUConfig",
  "tensorflow.contrib.tpu.TPUEstimator",
  "tensorflow.contrib.tpu.TPUEstimatorSpec",
  "tensorflow.contrib.tpu.bfloat16_scope",
  "tensorflow.contrib.tpu.initialize_system",
  "tensorflow.contrib.tpu.rewrite",
  "tensorflow.contrib.tpu.shutdown_system",
  "tensorflow.contrib.training.HParams",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
  "tensorflow.data.Dataset.from_tensor_slices",
  "tensorflow.data.TFRecordDataset",
  "tensorflow.data.TextLineDataset",
  "tensorflow.errors.InvalidArgumentError",
  "tensorflow.errors.NotFoundError",
  "tensorflow.errors.OutOfRangeError",
  "tensorflow.estimator.Estimator",
  "tensorflow.estimator.EstimatorSpec",
  "tensorflow.estimator.EvalSpec",
  "tensorflow.estimator.FinalExporter",
  "tensorflow.estimator.ModeKeys.EVAL",
  "tensorflow.estimator.ModeKeys.PREDICT",
  "tensorflow.estimator.ModeKeys.TRAIN",
  "tensorflow.estimator.RunConfig",
  "tensorflow.estimator.TrainSpec",
  "tensorflow.estimator.export.PredictOutput",
  "tensorflow.estimator.export.ServingInputReceiver",
  "tensorflow.estimator.train_and_evaluate",
  "tensorflow.flags.DEFINE_bool",
  "tensorflow.flags.DEFINE_boolean",
  "tensorflow.flags.DEFINE_integer",
  "tensorflow.flags.DEFINE_string",
  "tensorflow.flags.FLAGS",
  "tensorflow.gfile.Copy",
  "tensorflow.gfile.GFile",
  "tensorflow.gfile.Glob",
  "tensorflow.gfile.IsDirectory",
  "tensorflow.gfile.ListDirectory",
  "tensorflow.gfile.MakeDirs",
  "tensorflow.gfile.Open",
  "tensorflow.image.ResizeMethod.AREA",
  "tensorflow.image.ResizeMethod.BICUBIC",
  "tensorflow.image.ResizeMethod.BILINEAR",
  "tensorflow.image.ResizeMethod.NEAREST_NEIGHBOR",
  "tensorflow.image.adjust_brightness",
  "tensorflow.image.adjust_contrast",
  "tensorflow.image.adjust_hue",
  "tensorflow.image.adjust_saturation",
  "tensorflow.image.convert_image_dtype",
  "tensorflow.image.crop_and_resize",
  "tensorflow.image.crop_to_bounding_box",
  "tensorflow.image.decode_image",
  "tensorflow.image.decode_jpeg",
  "tensorflow.image.decode_png",
  "tensorflow.image.draw_bounding_boxes",
  "tensorflow.image.encode_jpeg",
  "tensorflow.image.encode_png",
  "tensorflow.image.flip_left_right",
  "tensorflow.image.flip_up_down",
  "tensorflow.image.grayscale_to_rgb",
  "tensorflow.image.non_max_suppression",
  "tensorflow.image.non_max_suppression_padded",
  "tensorflow.image.pad_to_bounding_box",
  "tensorflow.image.resize_bilinear",
  "tensorflow.image.resize_images",
  "tensorflow.image.resize_nearest_neighbor",
  "tensorflow.image.rgb_to_grayscale",
  "tensorflow.image.rot90",
  "tensorflow.image.sample_distorted_bounding_box",
  "tensorflow.keras.Model",
  "tensorflow.keras.applications.MobileNetV2",
  "tensorflow.keras.backend.eval",
  "tensorflow.keras.backend.set_learning_phase",
  "tensorflow.keras.layers",
  "tensorflow.keras.layers.BatchNormalization",
  "tensorflow.keras.layers.Conv2D",
  "tensorflow.keras.layers.DepthwiseConv2D",
  "tensorflow.keras.layers.Input",
  "tensorflow.keras.layers.Lambda",
  "tensorflow.keras.models.Sequential",
  "tensorflow.keras.regularizers.l1",
  "tensorflow.keras.regularizers.l2",
  "tensorflow.layers.conv2d",
  "tensorflow.logging.INFO",
  "tensorflow.logging.info",
  "tensorflow.logging.log",
  "tensorflow.logging.log_every_n",
  "tensorflow.logging.set_verbosity",
  "tensorflow.logging.warning",
  "tensorflow.losses.Reduction.NONE",
  "tensorflow.losses.add_loss",
  "tensorflow.losses.get_losses",
  "tensorflow.losses.get_total_loss",
  "tensorflow.losses.huber_loss",
  "tensorflow.metrics.mean",
  "tensorflow.nn.relu",
  "tensorflow.nn.relu6",
  "tensorflow.nn.sigmoid",
  "tensorflow.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.nn.softmax",
  "tensorflow.nn.softmax_cross_entropy_with_logits",
  "tensorflow.nn.top_k",
  "tensorflow.python.training.saver.as_saver_def",
  "tensorflow.python.training.saver.restore",
  "tensorflow.python.training.saver.save",
  "tensorflow.python_io.TFRecordWriter",
  "tensorflow.python_io.tf_record_iterator",
  "tensorflow.resource_loader.get_data_files_path",
  "tensorflow.saved_model.builder.SavedModelBuilder",
  "tensorflow.saved_model.loader.load",
  "tensorflow.saved_model.signature_constants.PREDICT_METHOD_NAME",
  "tensorflow.saved_model.signature_def_utils.build_signature_def",
  "tensorflow.saved_model.tag_constants.SERVING",
  "tensorflow.saved_model.utils.build_tensor_info",
  "tensorflow.summary.FileWriterCache.get",
  "tensorflow.summary.histogram",
  "tensorflow.summary.image",
  "tensorflow.summary.merge",
  "tensorflow.summary.scalar",
  "tensorflow.test.TestCase",
  "tensorflow.test.get_temp_dir",
  "tensorflow.test.main",
  "tensorflow.train.AdamOptimizer",
  "tensorflow.train.BytesList",
  "tensorflow.train.ClusterSpec",
  "tensorflow.train.Example",
  "tensorflow.train.ExponentialMovingAverage",
  "tensorflow.train.Feature",
  "tensorflow.train.Features",
  "tensorflow.train.FloatList",
  "tensorflow.train.Int64List",
  "tensorflow.train.MomentumOptimizer",
  "tensorflow.train.MonitoredSession",
  "tensorflow.train.NewCheckpointReader",
  "tensorflow.train.RMSPropOptimizer",
  "tensorflow.train.Saver",
  "tensorflow.train.Scaffold",
  "tensorflow.train.Server",
  "tensorflow.train.SyncReplicasOptimizer",
  "tensorflow.train.exponential_decay",
  "tensorflow.train.get_global_step",
  "tensorflow.train.get_or_create_global_step",
  "tensorflow.train.global_step",
  "tensorflow.train.import_meta_graph",
  "tensorflow.train.init_from_checkpoint",
  "tensorflow.train.latest_checkpoint",
  "tensorflow.train.list_variables",
  "tensorflow.train.queue_runner.QueueRunner",
  "tensorflow.train.queue_runner.add_queue_runner",
  "tensorflow.train.start_queue_runners",
  "tensorflow.train.string_input_producer",
  "tensorflow.train.write_graph",
  "tf_score_converter_fn",
  "tf_score_converter_fn.__name__",
  "time",
  "time.gmtime",
  "time.sleep",
  "time.strftime",
  "time.time",
  "train_input_fn",
  "transform_boxes_relative_to_boxes",
  "transform_data_fn",
  "transform_fn",
  "transform_input_data_fn",
  "trunc_normal",
  "unicode",
  "unittest.mock.patch.object",
  "value_func_factory",
  "visualize_boxes_and_labels_on_image_array"
 ],
 "deps": {
  "ObjectDetectionEvaluation": [],
  "PIL": [],
  "StringIO": [],
  "_VRDDetectionEvaluation": [],
  "__future__": [
   "python/conda-forge/linux-64/python-2.7.14-0",
   "python/conda-forge/linux-64/python-2.7.15-h33da82c_4",
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "_batch_gather_kept_indices": [],
  "_build_activation_fn": [],
  "_build_initializer": [],
  "_bytes_feature": [],
  "_copy_extra_fields": [],
  "_flip_image": [],
  "_get_or_create_preprocess_rand_vars": [],
  "_image_to_gray": [],
  "_lin_space_weights": [],
  "_match_when_rows_are_empty": [],
  "_match_when_rows_are_non_empty": [],
  "_rot90_image": [],
  "abc": [
   "python/conda-forge/linux-64/python-2.7.14-0",
   "python/conda-forge/linux-64/python-2.7.15-h33da82c_4",
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "absl": [
   "absl-py/conda-forge/linux-64/absl-py-0.8.0-py27_0",
   "absl-py/conda-forge/noarch/absl-py-0.1.10-py_0",
   "absl-py/conda-forge/noarch/absl-py-0.11.0-pyhd8ed1ab_0",
   "absl-py/conda-forge/noarch/absl-py-0.2.2-py_0",
   "absl-py/conda-forge/noarch/absl-py-0.4.0-py_0",
   "absl-py/conda-forge/noarch/absl-py-0.5.0-py_0"
  ],
  "argparse": [
   "argparse/conda-forge/linux-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "box_prediction_head": [],
  "class_prediction_head": [],
  "classification_loss": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "compare_results": [],
  "contextlib2": [
   "contextlib2/conda-forge/noarch/contextlib2-0.5.5-py_2",
   "contextlib2/conda-forge/noarch/contextlib2-0.6.0-py_0",
   "contextlib2/conda-forge/noarch/contextlib2-0.6.0.post1-py_0"
  ],
  "conv_box_predictor": [],
  "conv_op": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "coverage_box": [],
  "create_eval_input_fn": [],
  "create_pipeline_proto_from_configs": [],
  "create_predict_input_fn": [],
  "create_train_input_fn": [],
  "csv": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "data_augmentation_fn": [],
  "deployment": [],
  "depth": [],
  "depth_fn": [],
  "detection_model_fn": [],
  "eval_input_fn": [],
  "execute_fn": [],
  "feature_extractor": [],
  "feature_extractor_class": [],
  "feature_map_generator": [],
  "filter_scores_greater_than": [],
  "focal_loss_op": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "gather": [],
  "gather_op": [],
  "get_arg": [],
  "get_box_inds": [],
  "get_configs_from_pipeline_file": [],
  "google": [],
  "graph_fn": [],
  "graph_rewrite_fn": [],
  "graph_rewriter_fn": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "head_obj": [],
  "image_resizer_fn": [],
  "image_summary_or_default_string": [],
  "input_transformation_fn": [],
  "inspect": [
   "python/conda-forge/linux-64/python-2.7.14-0",
   "python/conda-forge/linux-64/python-2.7.15-h33da82c_4",
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-2.7.14-0",
   "python/conda-forge/linux-64/python-2.7.15-h33da82c_4",
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "layer": [],
  "layer_one": [],
  "layer_two": [],
  "localization_loss": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "loss_op": [],
  "lxml": [
   "lxml/conda-forge/linux-64/lxml-4.3.0-py37h23eabaa_1000",
   "lxml/conda-forge/linux-64/lxml-4.4.2-py37h7ec2d77_0",
   "lxml/conda-forge/linux-64/lxml-4.5.2-py36h17c4326_1",
   "lxml/conda-forge/linux-64/lxml-4.6.0-py37he3881c9_0",
   "lxml/conda-forge/linux-64/lxml-4.6.3-py37h77fd288_0"
  ],
  "mask_prediction_head": [],
  "math": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-2.1.2-py37h250f245_1",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-2.2.5-py39h369595b_2",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.0.2-py37h167e16e_1002",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.1.0-py37h5f35d83_0",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.0-py36h2451756_1",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.2-py38h5c7f4ab_1",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py38h5c7f4ab_0"
  ],
  "merge_external_params_with_configs": [],
  "mock": [
   "mock/conda-forge/linux-64/mock-1.0.1-py27_0"
  ],
  "model": [],
  "model_fn": [],
  "nets": [],
  "norm": [],
  "numpy": [],
  "object_detection": [],
  "os": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-1.1.3-py37hb33c840_2",
   "pandas/conda-forge/linux-64/pandas-1.2.2-py39hde0f152_0"
  ],
  "predict_input_fn": [],
  "pycocotools": [
   "pycocotools/conda-forge/linux-64/pycocotools-2.0.0-py37h470a237_0",
   "pycocotools/conda-forge/linux-64/pycocotools-2.0.2-py36h8f6f2f9_1"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "random_jitter_box": [],
  "re": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "regularizer": [],
  "scope_fn": [],
  "score_conversion_fn": [],
  "score_converter": [],
  "sigmoid_loss_op": [],
  "six": [
   "bleach/conda-forge/noarch/bleach-3.0.2-py_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.1-pyh9f0ad1d_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.11.0-py27_1001",
   "six/conda-forge/noarch/six-1.14.0-py_1",
   "six/conda-forge/noarch/six-1.15.0-pyh9f0ad1d_0",
   "six/conda-forge/noarch/six-1.16.0-pyh6c4a22f_0"
  ],
  "ssd_meta_arch_fn": [],
  "strict_random_crop_image_fn": [],
  "sys": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "tensorflow": [
   "tensorflow-base/conda-forge/linux-64/tensorflow-base-1.13.1-py36h5ece82f_4",
   "tensorflow-base/conda-forge/linux-64/tensorflow-base-1.13.1-py37_2",
   "tensorflow-base/conda-forge/linux-64/tensorflow-base-1.13.2-py27h76b4ce7_0"
  ],
  "tf_score_converter_fn": [],
  "time": [],
  "train_input_fn": [],
  "transform_boxes_relative_to_boxes": [],
  "transform_data_fn": [],
  "transform_fn": [],
  "transform_input_data_fn": [],
  "trunc_normal": [],
  "unicode": [],
  "unicodedata": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "value_func_factory": [],
  "visualize_boxes_and_labels_on_image_array": []
 }
}