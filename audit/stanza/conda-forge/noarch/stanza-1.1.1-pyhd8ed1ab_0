{
 "bad": [
  "Alignment",
  "AlignmentWord",
  "Document",
  "Score",
  "UDRepresentation",
  "UDSpan",
  "UDWord",
  "Word",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "abc.ABC",
  "abc.abstractmethod",
  "align_words",
  "alignment_score",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.FileType",
  "ast",
  "ast.literal_eval",
  "atexit",
  "atexit.register",
  "beyond_end",
  "bisect.bisect_right",
  "case",
  "char_case",
  "clf",
  "clffunc",
  "collections",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "compare_ignoring_whitespace",
  "composite_func",
  "compute_lcs",
  "contextlib",
  "contextlib.closing",
  "conv",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "corenlp",
  "corenlp.CoreNLPClient",
  "criterion",
  "csv",
  "datetime.datetime",
  "datetime.datetime.now",
  "decode_all",
  "dir.strip",
  "distutils.util.strtobool",
  "extend_end",
  "f",
  "f1",
  "fc",
  "find_multiword_span",
  "flush",
  "from_model",
  "ga",
  "glob",
  "glob.glob",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.internal.decoder._DecodeVarint",
  "google.protobuf.internal.encoder._EncodeVarint",
  "google.protobuf.internal.enum_type_wrapper",
  "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
  "google.protobuf.message",
  "google.protobuf.message.DecodeError",
  "google.protobuf.message.Message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "hashlib",
  "hashlib.md5",
  "highway_func",
  "id.setter",
  "input.batch_sizes",
  "input.batch_sizes.item",
  "input.data",
  "input.data.new_zeros",
  "input.new_zeros",
  "input.size",
  "input.transpose",
  "input.unsqueeze",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "itertools",
  "json",
  "json.JSONDecodeError",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "l",
  "logging",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.getLogger",
  "loss_function",
  "lzma",
  "lzma.LZMAError",
  "lzma.open",
  "math",
  "math.ceil",
  "math.exp",
  "math.log",
  "multiprocessing.Process",
  "nlp",
  "nlp.processors._variant.__class__.__name__",
  "numbers.Number",
  "numpy",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.concatenate",
  "numpy.equal",
  "numpy.expand_dims",
  "numpy.fill_diagonal",
  "numpy.float32",
  "numpy.float64",
  "numpy.inf",
  "numpy.inf.all",
  "numpy.int32",
  "numpy.int64",
  "numpy.log",
  "numpy.logical_not",
  "numpy.max",
  "numpy.ndarray",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.random.normal",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.unique",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "os",
  "os.chdir",
  "os.devnull",
  "os.getenv",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.rmdir",
  "os.unlink",
  "pack",
  "pad",
  "pathlib.Path",
  "pathlib.Path.home",
  "pickle",
  "pickle.dumps",
  "pickle.loads",
  "pipeline",
  "process_sentence",
  "process_word",
  "pytest",
  "pytest.approx",
  "pytest.fixture",
  "pytest.mark.client",
  "pytest.mark.pipeline",
  "pytest.mark.travis",
  "pytest.raises",
  "random",
  "random.randint",
  "random.random",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "re",
  "re.UNICODE",
  "re.compile",
  "re.match",
  "re.sub",
  "regex_matches_to_indexed_words",
  "rnn_loop",
  "set.union",
  "set_root",
  "shlex",
  "shlex.split",
  "shutil",
  "shutil.copy",
  "shutil.move",
  "shutil.rmtree",
  "six.moves.BaseHTTPServer.BaseHTTPRequestHandler",
  "six.moves.BaseHTTPServer.HTTPServer",
  "six.moves.http_client",
  "six.moves.http_client.BAD_REQUEST",
  "six.moves.http_client.OK",
  "six.moves.urllib.parse.urlparse",
  "socket",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.error",
  "socket.socket",
  "spacy",
  "spans_score",
  "stanza.__init__.log_formatter",
  "stanza.__init__.log_handler",
  "stanza.__init__.logger",
  "stanza.models.classifiers.classifier_args.ExtraVectors.CONCAT",
  "stanza.models.classifiers.classifier_args.ExtraVectors.SUM",
  "stanza.models.classifiers.classifier_args.WVType.FASTTEXT",
  "stanza.models.classifiers.classifier_args.WVType.GOOGLE",
  "stanza.models.classifiers.classifier_args.WVType.OTHER",
  "stanza.models.classifiers.classifier_args.WVType.WORD2VEC",
  "stanza.models.common.doc.Document.add_property",
  "stanza.models.common.doc.Sentence.add_property",
  "stanza.models.common.doc.Word.add_property",
  "stanza.models.common.loss.backward",
  "stanza.models.common.loss.data.item",
  "stanza.models.common.seq2seq_constant.EOS_TOKEN",
  "stanza.models.mwt.vocab.Vocab.load_state_dict",
  "stanza.models.pos.vocab.CharVocab.load_state_dict",
  "stanza.pipeline.registry.PIPELINE_NAMES.append",
  "stanza.server.StartServer.DONT_START",
  "stanza.server.StartServer.FORCE_START",
  "stanza.server.StartServer.TRY_START",
  "stanza.server.client.stop",
  "strings_starting",
  "strong_connect",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.TimeoutExpired",
  "subprocess.run",
  "sudachidict_core",
  "sudachipy",
  "sys",
  "sys.argv",
  "sys.exit",
  "sys.stderr",
  "sys.stdin",
  "sys.stdout",
  "sys.version_info",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "test_data_to_batches",
  "tests.__init__.DEPPARSE_MODEL",
  "tests.__init__.DEPPARSE_PRETRAIN",
  "tests.__init__.EN_MODELS_DIR",
  "tests.__init__.EN_SHORTHAND",
  "tests.__init__.FR_MODELS_DIR",
  "tests.__init__.FR_SHORTHAND",
  "tests.__init__.LEMMA_MODEL",
  "tests.__init__.MODEL_FILES",
  "tests.__init__.MWT_MODEL",
  "tests.__init__.POS_MODEL",
  "tests.__init__.POS_PRETRAIN",
  "tests.__init__.REMOVABLE_PATHS",
  "tests.__init__.TEST_DIR_BASE_NAME",
  "tests.__init__.TEST_HOME_VAR",
  "tests.__init__.TEST_WORKING_DIR",
  "tests.__init__.TOKENIZE_MODEL",
  "time",
  "time.sleep",
  "time.time",
  "torch",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.Tensor",
  "torch.abs",
  "torch.arange",
  "torch.argmax",
  "torch.bmm",
  "torch.bool",
  "torch.cat",
  "torch.cuda.is_available",
  "torch.cuda.manual_seed",
  "torch.eq",
  "torch.exp",
  "torch.eye",
  "torch.from_numpy",
  "torch.gather",
  "torch.load",
  "torch.log",
  "torch.manual_seed",
  "torch.max",
  "torch.mm",
  "torch.nn",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.Module",
  "torch.nn.NLLLoss",
  "torch.nn.functional",
  "torch.nn.functional.log_softmax",
  "torch.nn.functional.logsigmoid",
  "torch.nn.functional.max_pool1d",
  "torch.nn.functional.relu",
  "torch.nn.functional.sigmoid",
  "torch.nn.functional.softplus",
  "torch.nn.functional.tanh",
  "torch.nn.init",
  "torch.nn.modules.rnn.RNNCellBase",
  "torch.nn.utils.clip_grad_norm_",
  "torch.nn.utils.rnn.PackedSequence",
  "torch.nn.utils.rnn.pack_padded_sequence",
  "torch.nn.utils.rnn.pack_sequence",
  "torch.nn.utils.rnn.pad_packed_sequence",
  "torch.no_grad",
  "torch.ones",
  "torch.optim",
  "torch.optim.Adadelta",
  "torch.optim.Adagrad",
  "torch.optim.Adam",
  "torch.optim.Adamax",
  "torch.optim.SGD",
  "torch.optim.lr_scheduler.ReduceLROnPlateau",
  "torch.rand",
  "torch.randn",
  "torch.save",
  "torch.sigmoid",
  "torch.sign",
  "torch.sort",
  "torch.stack",
  "torch.sum",
  "torch.tensor",
  "torch.utils.tensorboard.SummaryWriter",
  "torch.zeros",
  "type.setter",
  "types.GeneratorType",
  "types.SimpleNamespace",
  "unicodedata",
  "unicodedata.category",
  "unicodedata.normalize",
  "unittest",
  "unittest.TestCase",
  "update_state",
  "uuid",
  "uuid.uuid4",
  "vocab.Vocab.load_state_dict",
  "warnings",
  "warnings.warn",
  "zipfile",
  "zipfile.ZIP_DEFLATED",
  "zipfile.ZipFile"
 ],
 "deps": {
  "Alignment": [],
  "AlignmentWord": [],
  "Document": [],
  "Score": [],
  "UDRepresentation": [],
  "UDSpan": [],
  "UDWord": [],
  "Word": [],
  "__future__": [],
  "abc": [],
  "align_words": [],
  "alignment_score": [],
  "argparse": [],
  "ast": [],
  "atexit": [],
  "beyond_end": [],
  "bisect": [],
  "case": [],
  "char_case": [],
  "clf": [],
  "clffunc": [],
  "collections": [],
  "compare_ignoring_whitespace": [],
  "composite_func": [],
  "compute_lcs": [],
  "contextlib": [],
  "conv": [],
  "copy": [],
  "corenlp": [],
  "criterion": [],
  "csv": [],
  "datetime": [],
  "decode_all": [],
  "dir": [],
  "distutils": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "extend_end": [],
  "f": [],
  "f1": [],
  "fc": [],
  "find_multiword_span": [],
  "flush": [],
  "from_model": [],
  "ga": [],
  "glob": [],
  "google": [],
  "hashlib": [],
  "highway_func": [],
  "id": [],
  "input": [],
  "io": [],
  "itertools": [],
  "jieba": [
   "jieba/conda-forge/noarch/jieba-0.42.1-pyhd8ed1ab_0"
  ],
  "json": [],
  "l": [],
  "logging": [],
  "loss_function": [],
  "lzma": [],
  "math": [],
  "multiprocessing": [],
  "nlp": [],
  "numbers": [],
  "numpy": [],
  "os": [],
  "pack": [],
  "pad": [],
  "pathlib": [],
  "pickle": [],
  "pipeline": [],
  "process_sentence": [],
  "process_word": [],
  "pytest": [],
  "random": [],
  "re": [],
  "regex_matches_to_indexed_words": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "rnn_loop": [],
  "set": [],
  "set_root": [],
  "shlex": [],
  "shutil": [],
  "six": [],
  "socket": [],
  "spacy": [],
  "spans_score": [],
  "stanza": [],
  "strings_starting": [],
  "strong_connect": [],
  "subprocess": [],
  "sudachidict_core": [],
  "sudachipy": [],
  "sys": [],
  "tempfile": [],
  "test_data_to_batches": [],
  "tests": [],
  "time": [],
  "torch": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "type": [],
  "types": [],
  "unicodedata": [],
  "unittest": [],
  "update_state": [],
  "uuid": [],
  "vocab": [],
  "warnings": [],
  "zipfile": []
 }
}