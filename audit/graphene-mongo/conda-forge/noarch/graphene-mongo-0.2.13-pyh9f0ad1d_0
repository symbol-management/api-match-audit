{
 "bad": [
  "ArticleLoader",
  "CreateArticle",
  "CreateArticle.Field",
  "UpdateEditor",
  "UpdateEditor.Field",
  "advanced_types.FileFieldType",
  "advanced_types.MultiPolygonFieldType",
  "advanced_types.PointFieldType",
  "advanced_types.PolygonFieldType",
  "base64.b64encode",
  "collections.OrderedDict",
  "converter.MongoEngineConversionError",
  "converter.convert_mongoengine_field",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "fields.MongoengineConnectionField",
  "func",
  "functools.partial",
  "functools.reduce",
  "functools.singledispatch",
  "get_filter_type",
  "graphene.Argument",
  "graphene.Boolean",
  "graphene.ConnectionField",
  "graphene.DateTime",
  "graphene.Dynamic",
  "graphene.Field",
  "graphene.Float",
  "graphene.ID",
  "graphene.Int",
  "graphene.Interface",
  "graphene.JSONString",
  "graphene.List",
  "graphene.Mutation",
  "graphene.Node",
  "graphene.Node.get_node_from_global_id",
  "graphene.NonNull",
  "graphene.ObjectType",
  "graphene.PageInfo",
  "graphene.Schema",
  "graphene.String",
  "graphene.Union",
  "graphene.is_node",
  "graphene.relay.Connection",
  "graphene.relay.ConnectionField",
  "graphene.relay.Node",
  "graphene.relay.Node.Field",
  "graphene.relay.is_node",
  "graphene.types.dynamic.Dynamic",
  "graphene.types.json.JSONString",
  "graphene.types.objecttype.ObjectType",
  "graphene.types.objecttype.ObjectTypeOptions",
  "graphene.types.structures.Structure",
  "graphene.types.utils.yank_fields_from_attrs",
  "graphene.utils.trim_docstring.trim_docstring",
  "graphene_mongo.MongoengineConnectionField",
  "graphene_mongo.advanced_types.FileFieldType",
  "graphene_mongo.advanced_types._CoordinatesTypeField",
  "graphene_mongo.converter.MongoEngineConversionError",
  "graphene_mongo.converter.convert_mongoengine_field",
  "graphene_mongo.converter.singledispatch",
  "graphene_mongo.fields.MongoengineConnectionField",
  "graphene_mongo.fields.graphene",
  "graphene_mongo.registry.Registry",
  "graphene_mongo.registry.registry",
  "graphene_mongo.tests.conftest.current_dirname",
  "graphene_mongo.tests.models.Article",
  "graphene_mongo.tests.models.Bar",
  "graphene_mongo.tests.models.Editor",
  "graphene_mongo.tests.models.EmbeddedArticle",
  "graphene_mongo.tests.models.EmbeddedFoo",
  "graphene_mongo.tests.models.Parent",
  "graphene_mongo.tests.models.ParentWithRelationship",
  "graphene_mongo.tests.models.ProfessorMetadata",
  "graphene_mongo.tests.models.Publisher",
  "graphene_mongo.tests.test_converter.assert_conversion",
  "graphene_mongo.tests.test_types.Character",
  "graphene_mongo.tests.test_types.Dad",
  "graphene_mongo.tests.test_types.Human",
  "graphene_mongo.tests.test_types.Son",
  "graphene_mongo.tests.test_types.registry",
  "graphene_mongo.types.MongoengineObjectType",
  "graphene_mongo.types.MongoengineObjectTypeOptions",
  "graphene_mongo.types.construct_fields",
  "graphene_mongo.types.construct_self_referenced_fields",
  "inspect.isclass",
  "is_filterable",
  "json.dumps",
  "json.loads",
  "models.Article",
  "models.Article._fields",
  "models.Article.drop_collection",
  "models.Article.objects",
  "models.Bar",
  "models.CellTower",
  "models.CellTower.drop_collection",
  "models.CellTower.objects.all",
  "models.Child",
  "models.Child.drop_collection",
  "models.Child.objects.all",
  "models.ChildRegisteredAfter",
  "models.ChildRegisteredAfter.drop_collection",
  "models.ChildRegisteredBefore",
  "models.ChildRegisteredBefore.drop_collection",
  "models.Editor",
  "models.Editor._fields",
  "models.Editor.drop_collection",
  "models.Editor.objects",
  "models.Editor.objects.all",
  "models.Editor.objects.first",
  "models.Editor.objects.get",
  "models.EmbeddedArticle",
  "models.EmbeddedArticle._fields",
  "models.EmbeddedFoo",
  "models.ErroneousModel",
  "models.Foo",
  "models.Foo.objects.all",
  "models.Parent",
  "models.ParentWithRelationship",
  "models.ParentWithRelationship.drop_collection",
  "models.Player",
  "models.Player._fields",
  "models.Player.drop_collection",
  "models.Player.objects.all",
  "models.Player.objects.get",
  "models.ProfessorMetadata",
  "models.ProfessorVector",
  "models.ProfessorVector._fields",
  "models.ProfessorVector.drop_collection",
  "models.ProfessorVector.objects",
  "models.Publisher",
  "models.Publisher.drop_collection",
  "models.Reporter",
  "models.Reporter._fields",
  "models.Reporter.drop_collection",
  "models.Reporter.objects.first",
  "mongoengine.BooleanField",
  "mongoengine.CachedReferenceField",
  "mongoengine.DateTimeField",
  "mongoengine.DecimalField",
  "mongoengine.DictField",
  "mongoengine.Document",
  "mongoengine.EmailField",
  "mongoengine.EmbeddedDocument",
  "mongoengine.EmbeddedDocumentField",
  "mongoengine.EmbeddedDocumentListField",
  "mongoengine.FileField",
  "mongoengine.FloatField",
  "mongoengine.GenericEmbeddedDocumentField",
  "mongoengine.GenericReferenceField",
  "mongoengine.GridFSProxy",
  "mongoengine.IntField",
  "mongoengine.LazyReferenceField",
  "mongoengine.ListField",
  "mongoengine.LongField",
  "mongoengine.MapField",
  "mongoengine.MultiPolygonField",
  "mongoengine.ObjectIdField",
  "mongoengine.PointField",
  "mongoengine.PolygonField",
  "mongoengine.QuerySet",
  "mongoengine.ReferenceField",
  "mongoengine.SequenceField",
  "mongoengine.StringField",
  "mongoengine.URLField",
  "mongoengine.UUIDField",
  "mongoengine.base.get_document",
  "mongoengine.connect",
  "nodes.ArticleNode",
  "nodes.ChildNode",
  "nodes.EditorNode",
  "nodes.ErroneousModelNode",
  "nodes.FooNode",
  "nodes.ParentWithRelationshipNode",
  "nodes.PlayerNode",
  "nodes.ProfessorVectorNode",
  "nodes.PublisherNode",
  "nodes.ReporterNode",
  "on_resolve",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.join",
  "promise.Promise.is_thenable",
  "promise.Promise.resolve",
  "promise.dataloader.DataLoader",
  "py.test.raises",
  "pytest.fixture",
  "registry.Registry",
  "registry.get_global_registry",
  "registry.registry",
  "registry.reset_global_registry",
  "types.CellTowerType",
  "types.ChildType",
  "types.EditorType",
  "types.MongoengineObjectType",
  "types.MongoengineObjectTypeOptions",
  "types.PlayerType",
  "types.ProfessorVectorType",
  "types.ReporterType",
  "utils.get_field_description",
  "utils.get_model_fields",
  "utils.get_model_reference_fields",
  "utils.get_node_from_global_id",
  "utils.import_single_dispatch",
  "utils.is_valid_mongoengine_model",
  "utils.with_local_registry",
  "uuid.uuid1"
 ],
 "deps": {
  "ArticleLoader": [],
  "CreateArticle": [],
  "UpdateEditor": [],
  "advanced_types": [],
  "base64": [],
  "collections": [],
  "converter": [],
  "datetime": [],
  "fields": [],
  "func": [],
  "functools": [],
  "get_filter_type": [],
  "graphene": [],
  "graphene_mongo": [],
  "graphql_relay": [
   "graphql-relay/conda-forge/noarch/graphql-relay-3.0.0-py_0"
  ],
  "inspect": [],
  "is_filterable": [],
  "json": [],
  "models": [],
  "mongoengine": [
   "mongoengine/conda-forge/noarch/mongoengine-0.16.1-py_0"
  ],
  "mongomock": [
   "mongomock/conda-forge/noarch/mongomock-3.20.0-pyh9f0ad1d_0"
  ],
  "nodes": [],
  "on_resolve": [],
  "os": [],
  "promise": [],
  "py": [],
  "pytest": [],
  "registry": [],
  "singledispatch": [
   "singledispatch/conda-forge/noarch/singledispatch-3.5.0-pyh44b312d_0"
  ],
  "types": [],
  "utils": [],
  "uuid": []
 }
}