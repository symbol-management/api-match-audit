{
 "bad": [
  "R",
  "__version__",
  "_shrink",
  "abc.ABC",
  "abc.abstractmethod",
  "ase.Atoms",
  "ase.build.bulk",
  "ase.calculators.calculator.Calculator",
  "ase.calculators.calculator.Calculator.__init__",
  "ase.calculators.calculator.Calculator.calculate",
  "ase.calculators.calculator.all_changes",
  "ase.calculators.emt.EMT",
  "ase.calculators.singlepoint.SinglePointCalculator",
  "ase.data.chemical_symbols",
  "ase.geometry.find_mic",
  "ase.geometry.get_distances",
  "ase.io.read",
  "ase.io.write",
  "ase.neighborlist.NeighborList",
  "ase.neighborlist.neighbor_list",
  "ase.units.J",
  "ase.units.kB",
  "ase.units.kg",
  "atoms",
  "atoms.Atom",
  "atoms.Atom.spos_to_atom",
  "atoms.Atoms",
  "atoms.cell",
  "atoms.cell.T",
  "atoms.copy",
  "atoms.get_scaled_positions",
  "atoms.numbers",
  "atoms.pbc",
  "atoms.positions",
  "atoms.positions.T",
  "atoms.wrap",
  "base_optimizer.BaseOptimizer",
  "calculators.numba_calc.cluster_force_contribution",
  "calculators.numba_calc.clusters_force_contribution",
  "cluster_space.ClusterSpace",
  "cluster_space.ClusterSpace.read",
  "clusters.get_clusters",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "config.Config",
  "copy.deepcopy",
  "core.atoms.Atom",
  "core.atoms.Atoms",
  "core.atoms.Atoms.read",
  "core.atoms.atom_to_spos",
  "core.atoms.spos_to_atom",
  "core.cluster_space_builder.build_cluster_space",
  "core.orbits.Orbit",
  "core.orbits.Orbit.read",
  "core.orbits.OrientationFamily",
  "core.structure_alignment.align_supercell",
  "core.structures.Supercell",
  "core.tensors.rotate_tensor",
  "core.tensors.rotate_tensor_precalc",
  "core.tensors.rotation_tensor_as_matrix",
  "core.tensors.rotation_to_cart_coord",
  "core.utilities.BiMap",
  "core.utilities.Progress",
  "cross_validation.CrossValidationEstimator",
  "cutoffs.BaseClusterFilter",
  "cutoffs.CutoffMaximumBody",
  "cutoffs.Cutoffs",
  "cutoffs.Cutoffs.read",
  "datetime.datetime.now",
  "distutils.version.StrictVersion",
  "eigentensors.create_eigentensors",
  "fit_func",
  "fit_methods.available_fit_methods",
  "fit_methods.fit",
  "force_constant_model.ForceConstantModel",
  "force_constant_model.ForceConstantModel.read",
  "force_constants.ForceConstants",
  "force_constants.SortedForceConstants",
  "get_atom_index",
  "get_clusters.get_clusters",
  "get_mapped_cluster",
  "getpass.getuser",
  "h5py.File",
  "hiphive.ForceConstants",
  "hiphive.StructureContainer",
  "hiphive.calculators.numba_calc.cluster_force_contribution",
  "hiphive.calculators.numba_calc.cluster_force_contribution_einsum",
  "hiphive.calculators.numba_calc.cluster_force_contribution_numba",
  "hiphive.calculators.numba_calc.clusters_force_contribution_numba",
  "hiphive.calculators.numba_calc.contraction",
  "hiphive.calculators.numba_calc.tvl",
  "hiphive.calculators.numba_calc.tvr",
  "hiphive.cluster_space.ClusterSpace",
  "hiphive.config.default_config",
  "hiphive.core.atoms.Atom",
  "hiphive.core.atoms.atom_to_spos",
  "hiphive.core.cluster_space_builder._create_atom_list",
  "hiphive.core.cluster_space_builder._create_cluster_list",
  "hiphive.core.cluster_space_builder._create_orbits",
  "hiphive.core.cluster_space_builder._create_permutations",
  "hiphive.core.cluster_space_builder._create_primitive_cell",
  "hiphive.core.cluster_space_builder._create_symmetry_dataset",
  "hiphive.core.cluster_space_builder._drop_orbits",
  "hiphive.core.cluster_space_builder._normalize_constraint_vectors",
  "hiphive.core.cluster_space_builder._populate_ofs_with_ets",
  "hiphive.core.cluster_space_builder._rescale_eigentensors",
  "hiphive.core.cluster_space_builder._rotate_eigentensors",
  "hiphive.core.clusters.create_neighbor_matrices",
  "hiphive.core.clusters.extend_cluster",
  "hiphive.core.clusters.generate_geometrical_clusters",
  "hiphive.core.eigentensors.assemble_new_eigentensor",
  "hiphive.core.eigentensors.init_ets_from_label_symmetry",
  "hiphive.core.eigentensors.populate_constraint_matrix",
  "hiphive.core.eigentensors.renormalize_to_integer",
  "hiphive.core.orbits.Orbit",
  "hiphive.core.orbits.OrientationFamily",
  "hiphive.core.orbits.OrientationFamily.read",
  "hiphive.core.orbits._get_orbits",
  "hiphive.core.orbits.generate_translated_clusters",
  "hiphive.core.orbits.get_geometrical_radius",
  "hiphive.core.orbits.get_maximum_distance",
  "hiphive.core.orbits.get_permutation_map",
  "hiphive.core.orbits.populate_orbit",
  "hiphive.core.orbits.prepare_atoms",
  "hiphive.core.orbits.prepare_clusters",
  "hiphive.core.orbits.prepare_permutations",
  "hiphive.core.orbits.prepare_rotations",
  "hiphive.core.orbits.prepare_translations",
  "hiphive.core.rotational_constraints._create_Born_Huang_constraint",
  "hiphive.core.rotational_constraints._create_Huang_constraint",
  "hiphive.core.rotational_constraints._get_fc_lookup",
  "hiphive.core.rotational_constraints._get_orbit_parameter_map",
  "hiphive.core.rotational_constraints.get_rotational_constraint_matrix",
  "hiphive.core.structure_alignment._assert_structures_match",
  "hiphive.core.structure_alignment._debug_log_atoms",
  "hiphive.core.structure_alignment._find_rotations",
  "hiphive.core.structure_alignment._find_translation",
  "hiphive.core.structure_alignment.are_nonpaired_configurations_equal",
  "hiphive.core.structure_alignment.get_primitive_cell",
  "hiphive.core.structure_alignment.is_rotation",
  "hiphive.core.structure_alignment.relate_structures",
  "hiphive.core.structure_alignment.rotate_atoms",
  "hiphive.core.structures.Atom",
  "hiphive.core.structures.BaseAtom",
  "hiphive.core.structures.Structure",
  "hiphive.core.structures.SupercellAtom",
  "hiphive.core.structures.pos_to_site_offset",
  "hiphive.core.structures.pos_to_spos",
  "hiphive.core.structures.site_offset_to_pos",
  "hiphive.core.structures.site_offset_to_spos",
  "hiphive.core.structures.spos_to_pos",
  "hiphive.core.structures.spos_to_site_offset",
  "hiphive.core.tensors._paths",
  "hiphive.core.translational_constraints.get_translational_constraint_matrix",
  "hiphive.core.utilities.BiMap",
  "hiphive.core.utilities.SparseMatrix",
  "hiphive.cutoffs.Cutoffs",
  "hiphive.cutoffs.is_cutoff_allowed",
  "hiphive.fitting.Optimizer",
  "hiphive.fitting.cross_validation.validation_methods",
  "hiphive.fitting.fit_methods._Estimator",
  "hiphive.fitting.fit_methods._fit_adaptive_lasso",
  "hiphive.fitting.fit_methods._fit_adaptive_lasso_line_scan",
  "hiphive.fitting.fit_methods._fit_ardr",
  "hiphive.fitting.fit_methods._fit_ardr_line_scan",
  "hiphive.fitting.fit_methods._fit_bayesian_ridge",
  "hiphive.fitting.fit_methods._fit_elasticnet",
  "hiphive.fitting.fit_methods._fit_elasticnetCV",
  "hiphive.fitting.fit_methods._fit_lasso",
  "hiphive.fitting.fit_methods._fit_lassoCV",
  "hiphive.fitting.fit_methods._fit_least_squares",
  "hiphive.fitting.fit_methods._fit_omp",
  "hiphive.fitting.fit_methods._fit_rfe",
  "hiphive.fitting.fit_methods._fit_ridge",
  "hiphive.fitting.fit_methods.fit",
  "hiphive.fitting.fit_methods.fit_methods",
  "hiphive.fitting.model_selection.get_aic",
  "hiphive.fitting.model_selection.get_bic",
  "hiphive.fitting.split_bregman._get_right_preconditioner",
  "hiphive.fitting.split_bregman._minimize_cg",
  "hiphive.fitting.split_bregman._split_bregman",
  "hiphive.force_constant_model.ForceConstantModel",
  "hiphive.force_constants.ForceConstants",
  "hiphive.force_constants.ForceConstants.from_arrays",
  "hiphive.force_constants.RawForceConstants",
  "hiphive.force_constants.SortedForceConstants",
  "hiphive.force_constants._compute_gamma_frequencies",
  "hiphive.force_constants.array_to_dense_dict",
  "hiphive.force_constants.check_label_symmetries",
  "hiphive.force_constants.dense_dict_to_sparse_dict",
  "hiphive.input_output.gpumd._get_lookup_data_smart",
  "hiphive.input_output.gpumd._write_clusters",
  "hiphive.input_output.gpumd._write_fc_lookup",
  "hiphive.input_output.logging_tools.ch",
  "hiphive.input_output.logging_tools.continuous_logging",
  "hiphive.input_output.logging_tools.logger",
  "hiphive.input_output.logging_tools.logger.getChild",
  "hiphive.input_output.logging_tools.logger.info",
  "hiphive.input_output.logging_tools.logger.warning",
  "hiphive.input_output.phonopy._filename_to_format",
  "hiphive.input_output.pretty_table_prints._array2str",
  "hiphive.input_output.pretty_table_prints._build_table_frame",
  "hiphive.input_output.pretty_table_prints._generate_table_array",
  "hiphive.input_output.pretty_table_prints._generate_table_str",
  "hiphive.input_output.pretty_table_prints._obj2str",
  "hiphive.input_output.pretty_table_prints.cluster_counts",
  "hiphive.input_output.pretty_table_prints.cutoffs",
  "hiphive.input_output.pretty_table_prints.print_table",
  "hiphive.input_output.pretty_table_prints.table_array_to_string",
  "hiphive.input_output.shengBTE._ShengEntry",
  "hiphive.input_output.shengBTE._fancy_to_raw",
  "hiphive.input_output.shengBTE._fcs_to_sheng",
  "hiphive.input_output.shengBTE._raw_to_fancy",
  "hiphive.input_output.shengBTE._read_raw_sheng",
  "hiphive.input_output.shengBTE._sheng_to_fcs",
  "hiphive.input_output.shengBTE._write_raw_sheng",
  "hiphive.md_tools.spectral_energy_density._index_offset",
  "hiphive.structure_container.FitStructure",
  "hiphive.structure_container.StructureContainer",
  "hiphive.structure_container.are_configurations_equal",
  "hiphive.structure_generation.generate_phonon_rattled_structures",
  "hiphive.structure_generation.generate_rattled_structures",
  "hiphive.structure_generation.phonon._PhononRattler",
  "hiphive.structure_generation.phonon._phonon_rattle",
  "hiphive.structure_generation.rattle._probability_mc_rattle",
  "hiphive.structure_generation.rattle.mc_rattle",
  "hiphive.utilities.Shell",
  "hiphive.utilities.find_permutation",
  "hiphive.utilities.get_displacements",
  "hiphive.utilities.prepare_structure",
  "hiphive.utilities.prepare_structures",
  "input_output.gpumd.write_fcs_gpumd",
  "input_output.logging_tools.logger",
  "input_output.logging_tools.logger.debug",
  "input_output.logging_tools.logger.getChild",
  "input_output.logging_tools.logger.info",
  "input_output.logging_tools.logger.warning",
  "input_output.phonopy.read_phonopy_fc2",
  "input_output.phonopy.read_phonopy_fc3",
  "input_output.phonopy.write_phonopy_fc2",
  "input_output.phonopy.write_phonopy_fc3",
  "input_output.pretty_table_prints.print_table",
  "input_output.read_write_files.add_ase_atoms_to_tarfile",
  "input_output.read_write_files.add_items_to_tarfile_custom",
  "input_output.read_write_files.add_items_to_tarfile_hdf5",
  "input_output.read_write_files.add_items_to_tarfile_pickle",
  "input_output.read_write_files.add_list_to_tarfile_custom",
  "input_output.read_write_files.read_ase_atoms_from_tarfile",
  "input_output.read_write_files.read_items_hdf5",
  "input_output.read_write_files.read_items_pickle",
  "input_output.read_write_files.read_list_custom",
  "input_output.shengBTE.read_shengBTE_fc3",
  "input_output.shengBTE.write_shengBTE_fc3",
  "itertools.combinations",
  "itertools.combinations_with_replacement",
  "itertools.permutations",
  "itertools.product",
  "logging.FileHandler",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.getLogger",
  "logging_tools.logger",
  "logging_tools.logger.getChild",
  "math.factorial",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "model_selection.get_model_metrics",
  "multiply_and_add_row",
  "numba.jit",
  "numba_calc._get_forces",
  "numpy.NaN",
  "numpy.__version__",
  "numpy.abs",
  "numpy.add",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_str",
  "numpy.complex",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.diag",
  "numpy.dot",
  "numpy.einsum",
  "numpy.empty",
  "numpy.exp",
  "numpy.eye",
  "numpy.fft.fft",
  "numpy.float",
  "numpy.float64",
  "numpy.full",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int",
  "numpy.int64",
  "numpy.integer",
  "numpy.intersect1d",
  "numpy.isclose",
  "numpy.linalg.cond",
  "numpy.linalg.det",
  "numpy.linalg.eigh",
  "numpy.linalg.inv",
  "numpy.linalg.lstsq",
  "numpy.linalg.multi_dot",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.log",
  "numpy.logspace",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.random.random",
  "numpy.random.uniform",
  "numpy.round",
  "numpy.setdiff1d",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.std",
  "numpy.subtract",
  "numpy.sum",
  "numpy.tensordot",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "oi._write_pickle",
  "optimizer.Optimizer",
  "orbits.get_orbits",
  "os.path.basename",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dump",
  "pickle.load",
  "pr",
  "scipy.linalg.eig",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.vstack",
  "scipy.special.erf",
  "sklearn.base._DEFAULT_TAGS",
  "sklearn.feature_selection.RFE",
  "sklearn.feature_selection.RFECV",
  "sklearn.linear_model.ARDRegression",
  "sklearn.linear_model.BayesianRidge",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.OrthogonalMatchingPursuit",
  "sklearn.linear_model.OrthogonalMatchingPursuitCV",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.RidgeCV",
  "sklearn.metrics.r2_score",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.train_test_split",
  "sklearn.preprocessing.StandardScaler",
  "socket.gethostname",
  "spglib.get_spacegroup",
  "spglib.get_symmetry_dataset",
  "spglib.standardize_cell",
  "split_bregman.fit_split_bregman",
  "str_orbit",
  "str_order",
  "str_structure",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "sympy.SparseMatrix",
  "sympy.core.S.One",
  "sympy.core.S.Zero",
  "sympy.gcd",
  "sympy.nsimplify",
  "sys.stdout",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tensors.rotate_tensor",
  "tensors.rotate_tensor_precalc",
  "tensors.rotation_tensor_as_matrix",
  "tensors.rotation_to_cart_coord",
  "timeit.default_timer",
  "tools.ScatterData",
  "translational_constraints.create_constraint_map",
  "typing.Any",
  "typing.Dict",
  "typing.IO",
  "typing.List",
  "typing.Optional",
  "typing.Tuple",
  "typing.Union",
  "update_weights",
  "utilities.BiMap",
  "utilities.SparseMatrix",
  "utilities.SparseMatrix.rref",
  "utilities.SparseMatrix.vstack",
  "utilities.SparseMatrix.zeros",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn"
 ],
 "deps": {
  "R": [],
  "__version__": [],
  "_shrink": [],
  "abc": [],
  "ase": [],
  "atoms": [],
  "base_optimizer": [],
  "calculators": [],
  "cluster_space": [],
  "clusters": [],
  "collections": [],
  "config": [],
  "copy": [],
  "core": [],
  "cross_validation": [],
  "cutoffs": [],
  "datetime": [],
  "distutils": [],
  "eigentensors": [],
  "fit_func": [],
  "fit_methods": [],
  "force_constant_model": [],
  "force_constants": [],
  "get_atom_index": [],
  "get_clusters": [],
  "get_mapped_cluster": [],
  "getpass": [],
  "h5py": [],
  "hiphive": [],
  "input_output": [],
  "itertools": [],
  "logging": [],
  "logging_tools": [],
  "math": [],
  "matplotlib": [],
  "model_selection": [],
  "multiply_and_add_row": [],
  "numba": [],
  "numba_calc": [],
  "numpy": [],
  "oi": [],
  "optimizer": [],
  "orbits": [],
  "os": [],
  "pickle": [],
  "pr": [],
  "scipy": [],
  "sklearn": [],
  "socket": [],
  "spglib": [],
  "split_bregman": [],
  "str_orbit": [],
  "str_order": [],
  "str_structure": [],
  "string": [],
  "sympy": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "tensors": [],
  "timeit": [],
  "tools": [],
  "translational_constraints": [],
  "typing": [],
  "update_weights": [],
  "utilities": [],
  "warnings": []
 }
}