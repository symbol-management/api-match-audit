{
 "bad": [
  "add_char",
  "amax",
  "amin",
  "builtins.range",
  "calamari_ocr.ocr.Codec.from_texts",
  "calamari_ocr.ocr.Evaluator.evaluate",
  "calamari_ocr.ocr.text_processing.TextProcessorParams.BIDI_LTR",
  "calamari_ocr.ocr.text_processing.TextProcessorParams.BIDI_RTL",
  "calamari_ocr.ocr.text_processing.TextProcessorParams.NFC",
  "calamari_ocr.ocr.text_processing.TextProcessorParams.TEXT_NORMALIZER",
  "calamari_ocr.ocr.text_processing.TextProcessorParams.UnicodeNormalizationType.Name",
  "calamari_ocr.ocr.voting.VoterParams.Type.Value",
  "calamari_ocr.proto.BackendParams.TENSORFLOW",
  "calamari_ocr.proto.DataPreprocessorParams.CENTER_NORMALIZER",
  "calamari_ocr.proto.DataPreprocessorParams.DEFAULT_NORMALIZER",
  "calamari_ocr.proto.DataPreprocessorParams.FINAL_PREPARATION",
  "calamari_ocr.proto.DataPreprocessorParams.MULTI_NORMALIZER",
  "calamari_ocr.proto.DataPreprocessorParams.NOOP_NORMALIZER",
  "calamari_ocr.proto.DataPreprocessorParams.RANGE_NORMALIZER",
  "calamari_ocr.proto.LayerParams.CONVOLUTIONAL",
  "calamari_ocr.proto.LayerParams.LSTM",
  "calamari_ocr.proto.LayerParams.MAX_POOLING",
  "calamari_ocr.proto.NetworkParams.ADAM_SOLVER",
  "calamari_ocr.proto.NetworkParams.CTC_DEFAULT",
  "calamari_ocr.proto.NetworkParams.CTC_FUZZY",
  "calamari_ocr.proto.NetworkParams.MOMENTUM_SOLVER",
  "calamari_ocr.proto.TextProcessorParams.BIDI_LTR",
  "calamari_ocr.proto.TextProcessorParams.BIDI_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.BIDI_RTL",
  "calamari_ocr.proto.TextProcessorParams.DEFAULT_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.DEFAULT_POST_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.DEFAULT_PRE_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.MULTI_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.NOOP_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.STRIP_NORMALIZER",
  "calamari_ocr.proto.TextProcessorParams.TEXT_NORMALIZER",
  "calamari_ocr.proto.VoterParams.CONFIDENCE_VOTER_DEFAULT_CTC",
  "calamari_ocr.proto.VoterParams.CONFIDENCE_VOTER_FUZZY_CTC",
  "calamari_ocr.proto.VoterParams.SEQUENCE_VOTER",
  "calamari_ocr.proto.VoterParams.Type.Value",
  "calamari_ocr.proto.calamari_pb2.LayerParams.BIDIRECTIONAL_LSTM",
  "calamari_ocr.proto.calamari_pb2.LayerParams.CONVOLUTIONAL",
  "calamari_ocr.proto.calamari_pb2.LayerParams.LSTM",
  "calamari_ocr.proto.calamari_pb2.LayerParams.MAX_POOLING",
  "calamari_ocr.proto.calamari_pb2.NetworkParams.ADAM_SOLVER",
  "calamari_ocr.proto.calamari_pb2.NetworkParams.CTCType.Value",
  "calamari_ocr.proto.calamari_pb2.NetworkParams.MOMENTUM_SOLVER",
  "clip",
  "cos",
  "cpu_cudnn_compatible_lstm_backend",
  "dtype",
  "edit_distance.edit_distance",
  "extract_data",
  "get_ema_ops",
  "get_lstm_cell",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor._ParseOptions",
  "google.protobuf.descriptor_pb2",
  "google.protobuf.descriptor_pb2.FieldOptions",
  "google.protobuf.json_format",
  "google.protobuf.json_format.MessageToJson",
  "google.protobuf.json_format.Parse",
  "google.protobuf.message",
  "google.protobuf.message.Message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "gpu_cudnn_lstm_backend",
  "init",
  "log10",
  "longest_match",
  "make_checkpoint",
  "maximum",
  "minimum",
  "multiprocessing.Pool",
  "numpy.isfinite",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.standard_cauchy",
  "numpy.random.uniform",
  "os.cpu_count",
  "os.listdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.join",
  "os.path.split",
  "percentile",
  "place_vote",
  "prod",
  "recursive_sync",
  "replacement",
  "replacement.new",
  "replacement.old",
  "replacement.regex",
  "rnn_lstm",
  "save_match",
  "sin",
  "single_evaluation",
  "skimage.io",
  "skimage.io.imread",
  "str.split",
  "sys",
  "sys.version_info",
  "tensorflow.ConfigProto",
  "tensorflow.Graph",
  "tensorflow.Session",
  "tensorflow.SparseTensor",
  "tensorflow.assign",
  "tensorflow.cast",
  "tensorflow.clip_by_value",
  "tensorflow.constant",
  "tensorflow.contrib.cudnn_rnn.CudnnCompatibleLSTMCell",
  "tensorflow.contrib.cudnn_rnn.CudnnLSTMSaveable",
  "tensorflow.contrib.rnn.DropoutWrapper",
  "tensorflow.contrib.rnn.LSTMBlockCell",
  "tensorflow.contrib.rnn.LSTMBlockFusedCell",
  "tensorflow.contrib.rnn.LSTMCell",
  "tensorflow.contrib.rnn.MultiRNNCell",
  "tensorflow.contrib.rnn.stack_bidirectional_dynamic_rnn",
  "tensorflow.edit_distance",
  "tensorflow.errors.NotFoundError",
  "tensorflow.expand_dims",
  "tensorflow.float32",
  "tensorflow.get_variable",
  "tensorflow.global_variables",
  "tensorflow.global_variables_initializer",
  "tensorflow.group",
  "tensorflow.identity",
  "tensorflow.initializers.random_uniform",
  "tensorflow.int32",
  "tensorflow.is_variable_initialized",
  "tensorflow.layers.conv2d",
  "tensorflow.layers.max_pooling2d",
  "tensorflow.load_op_library",
  "tensorflow.local_variables_initializer",
  "tensorflow.matmul",
  "tensorflow.nn.dropout",
  "tensorflow.nn.l2_loss",
  "tensorflow.nn.relu",
  "tensorflow.nn.softmax",
  "tensorflow.placeholder",
  "tensorflow.python.ops.array_ops.prevent_gradient",
  "tensorflow.random_uniform",
  "tensorflow.reduce_mean",
  "tensorflow.reshape",
  "tensorflow.set_random_seed",
  "tensorflow.shape",
  "tensorflow.sparse_placeholder",
  "tensorflow.to_int32",
  "tensorflow.train.AdamOptimizer",
  "tensorflow.train.ExponentialMovingAverage",
  "tensorflow.train.MomentumOptimizer",
  "tensorflow.train.Saver",
  "tensorflow.train.import_meta_graph",
  "tensorflow.trainable_variables",
  "tensorflow.transpose",
  "tensorflow.variable_scope",
  "tensorflow.variables_initializer",
  "time",
  "time.sleep",
  "time.time",
  "winner",
  "zeros"
 ],
 "deps": {
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "add_char": [],
  "amax": [],
  "amin": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "array": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bidi": [
   "python-bidi/conda-forge/noarch/python-bidi-0.4.2-py_0"
  ],
  "builtins": [],
  "calamari_ocr": [],
  "clip": [],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cos": [],
  "cpu_cudnn_compatible_lstm_backend": [],
  "dtype": [],
  "edit_distance": [],
  "extract_data": [],
  "get_ema_ops": [],
  "get_lstm_cell": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "google": [],
  "gpu_cudnn_lstm_backend": [],
  "init": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "log10": [],
  "longest_match": [],
  "make_checkpoint": [],
  "maximum": [],
  "minimum": [],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "percentile": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "place_vote": [],
  "prod": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "recursive_sync": [],
  "replacement": [],
  "rnn_lstm": [],
  "save_match": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "sin": [],
  "single_evaluation": [],
  "skimage": [],
  "str": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tensorflow": [
   "tensorflow/conda-forge/linux-64/tensorflow-0.12.1-py27_2"
  ],
  "time": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "unicodedata": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "winner": [],
  "zeros": []
 }
}