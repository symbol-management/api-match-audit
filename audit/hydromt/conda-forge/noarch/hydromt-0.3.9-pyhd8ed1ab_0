{
 "bad": [
  "GeoDataFrameAdapter",
  "GeoDatasetAdapter",
  "MODELS",
  "RasterDatasetAdapter",
  "_parse_data_dict",
  "_reindex2d",
  "_reproj",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "adapter",
  "ast.literal_eval",
  "bottleneck",
  "bottleneck.nanrankdata",
  "calendar",
  "cli_utils.parse_config",
  "cli_utils.parse_json",
  "cli_utils.parse_opt",
  "codecs",
  "codecs.open",
  "collections",
  "config.configread",
  "config.configwrite",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "copyto",
  "dask",
  "dask.config.set",
  "datetime.datetime",
  "datetime.timedelta",
  "entrypoints",
  "entrypoints.get_group_all",
  "entrypoints.get_group_named",
  "f",
  "flw.flwdir_from_da",
  "flw.upscale_flwdir",
  "func",
  "function",
  "functools.wraps",
  "gdf_to_coords",
  "gen_zonal_stat",
  "geopandas.GeoDataFrame.from_features",
  "geopandas.options.use_pygeos",
  "gis_utils.GDAL_DRIVER_CODE_MAP.values",
  "gis_utils.GDAL_EXT_CODE_MAP",
  "gis_utils.GDAL_EXT_CODE_MAP.get",
  "gis_utils.PCR_VS_MAP",
  "gis_utils.affine_to_coords",
  "gis_utils.axes_attrs",
  "gis_utils.filter_gdf",
  "gis_utils.meridian_offset",
  "gis_utils.reggrid_area",
  "gis_utils.utm_crs",
  "gis_utils.write_clone",
  "gis_utils.write_map",
  "glob",
  "glob.glob",
  "hydromt.models.__init__.MODELS",
  "hydromt.models.__init__.thismodule",
  "inspect",
  "inspect.Parameter.empty",
  "inspect.signature",
  "io.open_geodataset",
  "io.open_mfraster",
  "io.open_raster_from_tindex",
  "io.open_vector",
  "itertools",
  "itertools.groupby",
  "itertools.product",
  "json",
  "json.JSONDecodeError",
  "json.load",
  "json.loads",
  "log.setuplog",
  "logging",
  "logging.FileHandler",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.captureWarnings",
  "logging.getLogger",
  "logging.handlers",
  "merge.merge",
  "model_plugins.discover",
  "models.MODELS.get",
  "models.MODELS.keys",
  "numpy",
  "numpy.abs",
  "numpy.add.outer",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.bool",
  "numpy.ceil",
  "numpy.copy",
  "numpy.cos",
  "numpy.datetime64",
  "numpy.diff",
  "numpy.dtype",
  "numpy.empty",
  "numpy.float32",
  "numpy.float64",
  "numpy.full",
  "numpy.int32",
  "numpy.int64",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.logical_and",
  "numpy.logical_and.reduce",
  "numpy.logical_or",
  "numpy.ma.masked_equal",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nanmean",
  "numpy.nanstd",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.number",
  "numpy.ones",
  "numpy.power",
  "numpy.radians",
  "numpy.repeat",
  "numpy.round",
  "numpy.savetxt",
  "numpy.sin",
  "numpy.stack",
  "numpy.sum",
  "numpy.tile",
  "numpy.uint8",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonpath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.path.splitdrive",
  "os.unlink",
  "osgeo.gdal",
  "osgeo.gdal.AllRegister",
  "osgeo.gdal.GDT_Float32",
  "osgeo.gdal.GetDriverByName",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.concat",
  "pandas.period_range",
  "pandas.read_csv",
  "pandas.read_excel",
  "pandas.to_datetime",
  "pandas.to_timedelta",
  "pathlib.Path",
  "pathlib.Path.home",
  "pathlib.PurePath",
  "pcraster",
  "pcraster.Boolean",
  "pcraster.Ldd",
  "pcraster.Nominal",
  "pcraster.Ordinal",
  "pcraster.Scalar",
  "pcraster.lddrepair",
  "pcraster.numpy2pcr",
  "pcraster.report",
  "pcraster.setclone",
  "pkg_resources",
  "pprint",
  "pprint.pformat",
  "press_correction",
  "pyflwdir.FlwdirRaster",
  "pyflwdir.from_array",
  "pyflwdir.pyflwdir.FTYPES._pv",
  "pygeos",
  "pyproj",
  "pyproj.CRS.from_user_input",
  "pyproj.transformer.Transformer.from_crs",
  "raster.UNWANTED_RIO_ATTRS",
  "raster.XDIMS",
  "raster.XGeoBase",
  "raster.YDIMS",
  "rasterio",
  "rasterio.crs.CRS",
  "rasterio.crs.CRS.from_epsg",
  "rasterio.crs.CRS.from_user_input",
  "rasterio.crs.CRS.from_wkt",
  "rasterio.enums.Resampling",
  "rasterio.features",
  "rasterio.features.geometry_mask",
  "rasterio.features.rasterize",
  "rasterio.features.shapes",
  "rasterio.transform.Affine",
  "rasterio.transform.from_bounds",
  "rasterio.warp",
  "rasterio.warp.aligned_target",
  "rasterio.warp.calculate_default_transform",
  "re",
  "re.search",
  "resample_time",
  "rmd",
  "scipy.interpolate.griddata",
  "scipy.ndimage",
  "scipy.ndimage.find_objects",
  "scipy.spatial.cKDTree",
  "shutil",
  "shutil.copyfileobj",
  "shutil.unpack_archive",
  "str.isdigit",
  "sys",
  "sys.modules",
  "sys.stdout",
  "tempfile",
  "tempfile.TemporaryDirectory",
  "to_timedelta",
  "vector.GeoDataset.from_gdf",
  "warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "xarray.ufuncs.exp",
  "xarray.ufuncs.fmax",
  "xarray.ufuncs.log",
  "xarray.ufuncs.sqrt"
 ],
 "deps": {
  "GeoDataFrameAdapter": [],
  "GeoDatasetAdapter": [],
  "MODELS": [],
  "RasterDatasetAdapter": [],
  "_parse_data_dict": [],
  "_reindex2d": [],
  "_reproj": [],
  "abc": [],
  "adapter": [],
  "affine": [
   "affine/conda-forge/noarch/affine-2.3.0-py_0"
  ],
  "ast": [],
  "bottleneck": [],
  "calendar": [],
  "cli_utils": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "codecs": [],
  "collections": [],
  "config": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "copy": [],
  "copyto": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "datetime": [],
  "entrypoints": [],
  "f": [],
  "flw": [],
  "func": [],
  "function": [],
  "functools": [],
  "gdf_to_coords": [],
  "gen_zonal_stat": [],
  "geopandas": [
   "geopandas-base/conda-forge/noarch/geopandas-base-0.9.0-pyhd8ed1ab_1",
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "gis_utils": [],
  "glob": [],
  "hydromt": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "log": [],
  "logging": [],
  "merge": [],
  "model_plugins": [],
  "models": [],
  "numpy": [],
  "os": [],
  "osgeo": [],
  "pandas": [],
  "pathlib": [],
  "pcraster": [],
  "pkg_resources": [],
  "pprint": [],
  "press_correction": [],
  "pyflwdir": [
   "pyflwdir/conda-forge/noarch/pyflwdir-0.4.3-pyhd8ed1ab_0"
  ],
  "pygeos": [],
  "pyproj": [],
  "raster": [],
  "rasterio": [],
  "re": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "resample_time": [],
  "rmd": [],
  "scipy": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "shutil": [],
  "str": [],
  "sys": [],
  "tempfile": [],
  "to_timedelta": [],
  "vector": [],
  "warnings": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.15.0-py_0"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ]
 }
}