{
 "bad": [
  "A",
  "A.args_cnc",
  "A.as_ordered_factors",
  "A.comm",
  "A.data",
  "A.index_types",
  "A.name",
  "A.one",
  "A.rank",
  "A.symmetry",
  "A1",
  "AB",
  "APPLY",
  "AT",
  "ATNDeserializer",
  "AccumBounds",
  "ActivateTrig",
  "Add",
  "Add.fromiter",
  "Add.make_args",
  "ArrayType",
  "ArrayType.zeros",
  "B",
  "B.T",
  "B.data",
  "B.joint_distribution",
  "BA",
  "BM",
  "BadRepr",
  "Bar",
  "C",
  "C.data",
  "C1",
  "C2",
  "CNF.all_and",
  "CNF.all_or",
  "CalculusQ",
  "CartesianComplexRegion",
  "Chi",
  "Circle",
  "CodeGenClass",
  "CodeGenError",
  "CodeWrapperClass",
  "CodegenArrayTensorProduct",
  "CoefficientList",
  "CommonFactors",
  "Complement",
  "ComplexInterval",
  "Conv",
  "CustomClass1",
  "CustomClass2",
  "CustomPermutation",
  "CustomPrinter",
  "CustomStrPrinter",
  "Cython.Compiler.Main.CompilationOptions",
  "Cython.Compiler.Main.compile",
  "Cython.Compiler.Main.default_options",
  "D",
  "D.expand",
  "DFA",
  "DIM_OF",
  "DMFdiff",
  "DMFsubs",
  "Dimension",
  "DirectSumHilbertSpace",
  "Dummy",
  "E",
  "EV",
  "EllipticCurvePoint",
  "EllipticCurvePoint.point_at_infinity",
  "Equivalent",
  "ExpandToSum",
  "Expression",
  "ExtElem",
  "F",
  "F.args",
  "F.cancel",
  "F.cofactors",
  "F.content",
  "F.data",
  "F.decompose",
  "F.diff",
  "F.discriminant",
  "F.div",
  "F.dtype",
  "F.exquo",
  "F.factor_list",
  "F.factor_list_include",
  "F.from_expr",
  "F.gcd",
  "F.gcdex",
  "F.get_ring",
  "F.half_gcdex",
  "F.invert",
  "F.lcm",
  "F.monic",
  "F.pdiv",
  "F.pexquo",
  "F.pquo",
  "F.prem",
  "F.primitive",
  "F.quo",
  "F.rem",
  "F.resultant",
  "F.ring.gens",
  "F.sqf_list",
  "F.sqf_list_include",
  "F.sqf_part",
  "F.sturm",
  "F.subresultants",
  "F.to_domain",
  "F.trunc",
  "F.xreplace",
  "F.zero",
  "F1",
  "F1_1",
  "F1_1b",
  "F1_1c",
  "F2",
  "F3",
  "F3.dtype",
  "F5",
  "F5.dtype",
  "F7",
  "F7.dtype",
  "FCCW",
  "FCW",
  "FT",
  "Fake",
  "FiniteSet",
  "First",
  "FixSimplify",
  "Flatten",
  "Float",
  "Float._new",
  "Foo",
  "Formula",
  "FpGroup",
  "Fperp",
  "FracField",
  "FractionQ",
  "FreeGroup",
  "FunctionOfExponentialTest",
  "FunctionOfTanQ",
  "G",
  "GH",
  "G_Function",
  "Gamma",
  "Gamma2",
  "Gamma3",
  "GeneralizedBinomialParts",
  "GeneralizedTrinomialParts",
  "GroebnerBasis",
  "H",
  "HadamardPower",
  "Hm",
  "Hp",
  "Hyper_Function",
  "I5",
  "I5b",
  "I5c",
  "IFT",
  "ILT",
  "IMT",
  "IPython",
  "IPython.Shell.make_IPython",
  "IPython.__version__",
  "IPython.core.interactiveshell.InteractiveShell",
  "IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell",
  "IPython.frontend.terminal.ipapp",
  "IPython.frontend.terminal.ipapp.TerminalIPythonApp",
  "IPython.get_ipython",
  "IPython.iplib.InteractiveShell",
  "IPython.lib.latextools.latex_to_png",
  "IPython.terminal.interactiveshell.TerminalInteractiveShell",
  "IPython.terminal.ipapp",
  "Identity",
  "Implies",
  "Index1",
  "Index2",
  "IndexedBase._set_assumptions",
  "InnerProduct",
  "Int",
  "Integer",
  "Intersection",
  "InverseFunction",
  "IsNonPositiveInteger",
  "JxOp",
  "JyOp",
  "JzKet",
  "JzKetCoupled",
  "JzOp",
  "K",
  "K0",
  "KD",
  "L",
  "LE",
  "LHS_CEMS",
  "LT",
  "Level",
  "Li",
  "Limit",
  "Line",
  "ListedColormap",
  "Log",
  "M",
  "M.C",
  "M.D",
  "M.H",
  "M.LUsolve",
  "M.T",
  "M.T.C",
  "M.T.T",
  "M.charpoly",
  "M.cholesky_solve",
  "M.cofactor",
  "M.cofactor_matrix",
  "M.col",
  "M.col_del",
  "M.col_insert",
  "M.col_op",
  "M.columnspace",
  "M.condition_number",
  "M.conjugate",
  "M.copy",
  "M.det",
  "M.diagonalize",
  "M.echelon_form",
  "M.eigenvals",
  "M.eigenvects",
  "M.exp",
  "M.gauss_jordan_solve",
  "M.inv",
  "M.is_diagonalizable",
  "M.is_nilpotent",
  "M.jordan_form",
  "M.norm",
  "M.nullspace",
  "M.rank",
  "M.replace",
  "M.row",
  "M.row_del",
  "M.row_insert",
  "M.row_op",
  "M.rowspace",
  "M.rref",
  "M.shape",
  "M.simplify",
  "M.singular_values",
  "M.tolist",
  "M.trace",
  "M.transpose",
  "M.zip_row_op",
  "MGR",
  "MT",
  "MatAdd",
  "MatMul",
  "MatPow",
  "Matrix",
  "Matrix._new",
  "Matrix.diag",
  "Matrix.eye",
  "Matrix.jordan_block",
  "Matrix.ones",
  "Matrix.zeros",
  "MatrixClass",
  "MatrixType",
  "MightyNumeric",
  "MockExpr",
  "Mod",
  "Mul",
  "Mul.make_args",
  "MutableSparseMatrix",
  "My",
  "MyAssoc",
  "MyClass",
  "MyExpr",
  "MyFancyFCodePrinter",
  "MyFunc",
  "MyInt",
  "MyOp",
  "MyPrinter",
  "MyReferenceFrame",
  "MySingleton",
  "MySingleton_sub",
  "MySymbol",
  "MyType",
  "MyUnevaluatedOnFree",
  "NA",
  "NS",
  "NoViableAltException",
  "Node",
  "NonElementaryIntegral",
  "NormalizeLeadTermSigns",
  "Not",
  "NumericQ",
  "O",
  "Or",
  "OrderedQ",
  "P",
  "P.is_global",
  "P1",
  "P2",
  "PIL.Image",
  "PIL.Image.FLIP_TOP_BOTTOM",
  "PIL.Image.frombuffer",
  "PermGroup",
  "Permutation",
  "Phi",
  "PiPrinter",
  "Plm",
  "Point",
  "PolyRing",
  "PolynomialQuotient",
  "PolynomialRemainder",
  "Pow",
  "PredictionContextCache",
  "ProductQ",
  "ProductSet",
  "PyTestReporter",
  "Q",
  "Q1",
  "Qasm",
  "Qgate",
  "QuotientModule",
  "R",
  "R.add",
  "R.add_gens",
  "R.compose",
  "R.convert",
  "R.domain",
  "R.domain.from_sympy",
  "R.domain_new",
  "R.drop",
  "R.dtype",
  "R.fateman_poly_F_1",
  "R.fateman_poly_F_2",
  "R.fateman_poly_F_3",
  "R.free_module",
  "R.from_expr",
  "R.from_sympy",
  "R.gens",
  "R.gens.index",
  "R.get_field",
  "R.ideal",
  "R.index",
  "R.is_multivariate",
  "R.is_univariate",
  "R.is_upper",
  "R.mul",
  "R.ngens",
  "R.one",
  "R.ring_new",
  "R.symbols",
  "R.to_domain",
  "R.to_ground",
  "R.x",
  "R.y",
  "R.z",
  "R.zero",
  "R.zero_monom",
  "RHS_CEMS",
  "RR2",
  "RandomSymbol",
  "Range",
  "Rational",
  "Rational.__mod__",
  "RationalFunctionQ",
  "RawText",
  "Rest",
  "Rt",
  "S",
  "SHOKet",
  "Segment",
  "Segment2D",
  "SeqAdd",
  "Shi",
  "SigmaZ",
  "SignOfFactor",
  "Signifier",
  "Simp",
  "SimpFixFactor",
  "SimplifyAntiderivative",
  "SimplifyTerm",
  "Sort",
  "SparseArrayType",
  "SpecialOp",
  "SplitProduct",
  "Ssugar",
  "StdOut",
  "StringIO.StringIO",
  "SubClass",
  "Subs",
  "SumQ",
  "SymPyConsole",
  "SymPyDocTestRunner",
  "SymPyOutputChecker",
  "Symbol",
  "Symmetric",
  "SymmetricDifference",
  "T",
  "T.codomain",
  "T.compose",
  "T.domain",
  "T.image",
  "T.invert",
  "T.is_injective",
  "T.is_isomorphism",
  "T.is_trivial",
  "T.kernel",
  "T1",
  "T2",
  "TP",
  "Tanh",
  "TensAdd",
  "TensMul",
  "TensMul._get_indices_permutation",
  "TensMul._tensMul_contract_indices",
  "TensMul.fromiter",
  "TensorHead",
  "TensorIndex",
  "TensorPowerHilbertSpace",
  "TensorProductHilbertSpace",
  "TensorSymmetry",
  "Test",
  "Test1",
  "Test2",
  "Test3",
  "Test4",
  "Test5",
  "Test6",
  "TestAssocOp",
  "TestF",
  "TestMemoize",
  "TestSingleton",
  "TestTimeDepKet",
  "TogetherSimplify",
  "Transform",
  "TrigSimplifyAux",
  "Tuple2",
  "U",
  "UCCW",
  "UCW",
  "UndefinedFunction",
  "UnifySum",
  "UnimplementedExpr",
  "Union",
  "UnrecognizedCondition",
  "UnsameQ",
  "V",
  "V1",
  "V2",
  "Variable",
  "WignerD",
  "Wrapper",
  "X",
  "X.state_space",
  "Xor",
  "Xor._to_anf",
  "Y",
  "YGate",
  "Z",
  "Z0",
  "Z1",
  "Z2",
  "Z3",
  "ZGate",
  "ZeroMatrix",
  "_Add",
  "_ITE",
  "_Mul",
  "_Pow",
  "_Q",
  "__builtin__",
  "__eq__",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.division.compiler_flag",
  "__future__.print_function",
  "__future__.unicode_literals",
  "__my_hessian",
  "__my_jacobian",
  "__my_wronskian",
  "__refactor",
  "_a",
  "_abs",
  "_add_lists",
  "_align",
  "_ans",
  "_append_eq",
  "_append_new_soln",
  "_apply",
  "_apply_recursively_over_nested_lists",
  "_are_similar",
  "_aresame",
  "_as_base_q",
  "_bessel_simp_recursion",
  "_blessed",
  "_block",
  "_bottom_up_scan",
  "_bounded_convergent_test",
  "_build_push_indices_down_func_transformation",
  "_build_push_indices_up_func_transformation",
  "_c1",
  "_calc_limit",
  "_calc_limit_1",
  "_can_print_latex",
  "_canonical",
  "_cg_simp_sum",
  "_check",
  "_check_cg_simp",
  "_check_dyadic",
  "_check_exclude",
  "_check_frame",
  "_check_iter",
  "_check_vector",
  "_choose_one_to_keep",
  "_clean",
  "_clear",
  "_clip",
  "_cond",
  "_conditional_term_factoring",
  "_confignum_to_difflist",
  "_constant_renumber",
  "_convert",
  "_coord_to_index",
  "_cospi257",
  "_cov",
  "_define",
  "_deflation",
  "_degree",
  "_delete_cases",
  "_delta",
  "_denest_pow",
  "_derivation",
  "_det",
  "_diop_ternary_quadratic_normal",
  "_dirichlet_test",
  "_distribute",
  "_dmp_simplify_gcd",
  "_dn",
  "_do",
  "_do_dict",
  "_eis",
  "_enumerate_continuous_1D",
  "_eval",
  "_eval_endpoint",
  "_eval_simplify",
  "_eval_transpose",
  "_eval_trigsimp",
  "_expand",
  "_exponent",
  "_exponents_",
  "_extend_y0",
  "_extract_main_soln",
  "_factor_group_by_rels",
  "_factors",
  "_fermatCoords",
  "_field",
  "_final_coeffs",
  "_find_DN",
  "_find_conditions",
  "_find_opts",
  "_find_predicates",
  "_find_repeated",
  "_find_x",
  "_flatten",
  "_format_ineq",
  "_gather",
  "_gen",
  "_get_all_examples",
  "_get_bsgs",
  "_get_compar_comp",
  "_get_indices",
  "_get_mapping_from_subranks",
  "_get_mpmath_func",
  "_get_possible_outcomes",
  "_get_shape",
  "_get_subranks",
  "_get_trial_set",
  "_groebner",
  "_half",
  "_handle",
  "_handle_Integral",
  "_handle_for_oo",
  "_has_matcher",
  "_has_piecewise",
  "_has_simple_delta",
  "_has_square_roots",
  "_i",
  "_image",
  "_include_sign",
  "_integrate",
  "_interactive_traversal",
  "_invert",
  "_is_coeff",
  "_is_coprime_set",
  "_is_expandable_pow",
  "_is_form",
  "_is_int",
  "_is_one",
  "_is_simple_delta",
  "_is_subword",
  "_is_wrapper",
  "_iter0a",
  "_iter0b",
  "_iter1",
  "_iter2",
  "_iter3",
  "_iter4",
  "_join_lines",
  "_keep_coeff",
  "_label_wrap",
  "_len",
  "_linear",
  "_listener_autolev_antlr.MyListener",
  "_lowercase_labels",
  "_makeDE",
  "_make_find_query",
  "_manualintegrate",
  "_matplotlib_wrapper",
  "_matrix_derivative",
  "_matrixify",
  "_meijerint_definite_4",
  "_minpoly_compose",
  "_mul_Dxi_b",
  "_mul_Sni_b",
  "_mul_dmp_diffop",
  "_mult_thm",
  "_my_unpolarify",
  "_mytype",
  "_n2",
  "_ncsplit",
  "_new_order_result",
  "_norm2",
  "_normalize",
  "_normalize_slices",
  "_num",
  "_number_blocks",
  "_ok_syms",
  "_one_vector",
  "_orbit",
  "_orbit_transversal",
  "_orbits",
  "_orientation",
  "_overlaps",
  "_p",
  "_parametrize_ternary_quadratic",
  "_pemexpand",
  "_permute_complexity_right",
  "_pgroup_of_double",
  "_pole_degree",
  "_poly",
  "_power_counting",
  "_powers",
  "_preview_wrapper",
  "_print",
  "_process",
  "_process_overlap",
  "_process_vector_differential",
  "_pytest.outcomes.Failed",
  "_query",
  "_rads_bases_lcm",
  "_range_tuple",
  "_rank1",
  "_ranklex",
  "_ratsimpmodprime",
  "_real_isolate_and_disjoin",
  "_rebuild",
  "_recurser",
  "_recursive_walk",
  "_reduce_inverses",
  "_refine_reim",
  "_remove_coefficient",
  "_restore_imgset",
  "_rf",
  "_rot",
  "_run",
  "_sage_method",
  "_scan_and_fill",
  "_select",
  "_setexpr_apply_operation",
  "_shift",
  "_simplify",
  "_simplify_gpgp",
  "_simplify_single_line",
  "_solve_even_degree_expr",
  "_solve_reduced_system",
  "_solve_relational",
  "_solve_using_known_values",
  "_solve_variation_of_parameters",
  "_sort_anticommuting_fermions",
  "_splitter",
  "_sqrt",
  "_sqrtdenest1",
  "_square_and_reduce",
  "_stabilizer",
  "_string_to_perm",
  "_stringify_func",
  "_strong_test",
  "_subs_root",
  "_subset",
  "_substitute",
  "_svg_wrapper",
  "_sylow_reduce",
  "_sympified_list",
  "_sympify",
  "_t",
  "_take",
  "_term_factors",
  "_terms",
  "_test",
  "_test_global_traversal",
  "_test_particular_example",
  "_test_stop_on_non_basics",
  "_test_subgroup",
  "_test_term",
  "_to_matrix",
  "_together",
  "_trace_single_line1",
  "_transformation_to_DN",
  "_try_decompose",
  "_try_heuristics",
  "_try_rescale",
  "_try_translate",
  "_undetermined_coefficients_match",
  "_unrank",
  "_unrank1",
  "_unsolved_syms",
  "_update_dict",
  "_uppercase_labels",
  "_use",
  "_use_recursion",
  "_validate",
  "_value",
  "_variables",
  "_warn_deprecation",
  "_word_break",
  "_xab_tostr",
  "_xreplace",
  "_zero_vector",
  "a",
  "a.append",
  "a1",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abs2",
  "abs_xrange",
  "absfunc",
  "acos",
  "acot",
  "acsc",
  "add",
  "add.Add",
  "add.Add._from_args",
  "add.Add.fromiter",
  "add.Add.identity",
  "add.Add.make_args",
  "add._unevaluated_Add",
  "add_columns",
  "add_delta",
  "add_intersection_complement",
  "add_raises",
  "add_rows",
  "add_text",
  "add_type",
  "addb",
  "addi",
  "adjoint",
  "adjust",
  "airybiprime",
  "all.run_examples",
  "all_in_both",
  "almosteq",
  "alpha",
  "analyse_gens",
  "and_func",
  "and_func_3",
  "anp",
  "antlr4",
  "antlr4.error.Errors.FailedPredicateException",
  "append",
  "append_symbol",
  "applyfunc.ElementwiseApplyFunction",
  "arg_expand",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "args_cancel",
  "array",
  "array.Array",
  "array.MutableDenseNDimArray",
  "array.NDimArray",
  "array.array",
  "array.arrayop.Flatten",
  "array.derive_by_array",
  "array.permutedims",
  "array.tensorcontraction",
  "array.tensorproduct",
  "array_type",
  "arrayop.permutedims",
  "as_real_imag",
  "asec",
  "assign",
  "assignment_attempt",
  "assumptions",
  "assumptions.BasicMeta",
  "assumptions.ManagedProperties",
  "ast",
  "ast.Add",
  "ast.Assert",
  "ast.Assign",
  "ast.BinOp",
  "ast.BitAnd",
  "ast.BitOr",
  "ast.BitXor",
  "ast.Call",
  "ast.ClassDef",
  "ast.Compare",
  "ast.Div",
  "ast.Expression",
  "ast.FunctionDef",
  "ast.Load",
  "ast.Mod",
  "ast.Mult",
  "ast.Name",
  "ast.NameConstant",
  "ast.NodeTransformer",
  "ast.Num",
  "ast.Pow",
  "ast.Store",
  "ast.Str",
  "ast.Sub",
  "ast.Token",
  "ast.Tuple",
  "ast.USub",
  "ast.UnaryOp",
  "ast.fix_missing_locations",
  "ast.keyword",
  "ast.parse",
  "ast.walk",
  "asum",
  "atan",
  "atexit",
  "atexit.register",
  "atom",
  "atoms",
  "att",
  "autocorr",
  "b",
  "b.__doc__",
  "b.__name__",
  "b1",
  "b2",
  "backward_substitution",
  "bad",
  "bareiss",
  "base",
  "base_exp",
  "base_seq",
  "basic.Atom",
  "basic.Basic",
  "basic.Basic.__new__",
  "basic.Basic.compare",
  "basic.S",
  "basic.S.ImaginaryUnit",
  "basic.S.Infinity",
  "basic.S.NaN",
  "basic.S.Reals",
  "basic.S.Zero",
  "basic.S.false",
  "basic.S.true",
  "basic.S.zero",
  "basic._atomic",
  "besseli",
  "besselx",
  "bigger",
  "binomial",
  "bisect",
  "bisect.bisect",
  "bisect.bisect_left",
  "bisect.bisect_right",
  "bkey",
  "blockmatrix.BlockDiagMatrix",
  "blocks_from_nullity_chain",
  "blowup",
  "boldpretty",
  "bottom_rl",
  "bottom_up",
  "bottom_up_scan",
  "breakup",
  "brl",
  "brule",
  "build_ideal",
  "builtin_range",
  "builtins",
  "c",
  "c.args",
  "c.is_integer",
  "c.list",
  "cStringIO.StringIO",
  "cache.cacheit",
  "cache.clear_cache",
  "cache_get",
  "calc_part",
  "calculus.finite_diff._as_finite_diff",
  "call_visitor",
  "can",
  "can_do",
  "canon_bp",
  "canonical",
  "canonicalize",
  "carryout_plan",
  "cartan_type.CartanType",
  "cartan_type.Standard_Cartan",
  "cartan_type.Standard_Cartan.__new__",
  "cb",
  "cc",
  "ccode.C89CodePrinter",
  "ccode.C99CodePrinter",
  "ccode.C99CodePrinter._kf",
  "ccw",
  "ceiling",
  "cf",
  "cf1",
  "cf2",
  "cfunc",
  "chebyshevu",
  "check",
  "check_all",
  "check_arguments",
  "check_denominator_zeros",
  "check_exact",
  "check_fx",
  "check_prec_and_relerr",
  "check_sincos",
  "check_solutions",
  "check_type",
  "check_unit_consistency",
  "chi",
  "children",
  "class_to_install",
  "classifier",
  "classify",
  "classify_diop",
  "classof",
  "clear_column",
  "clear_row",
  "cls",
  "cls.__name__",
  "cls._af_new",
  "cls.eye",
  "cls.hstack",
  "cls.zeros",
  "cnt",
  "code.InteractiveConsole",
  "codeprinter.CodePrinter",
  "codeprinter.CodePrinter._default_settings",
  "codeprinter.CodePrinter._print_not_supported",
  "coeffs_generator",
  "coerce",
  "collections",
  "collections.Callable",
  "collections.ChainMap",
  "collections.Counter",
  "collections.Hashable",
  "collections.Iterable",
  "collections.Mapping",
  "collections.MutableMapping",
  "collections.MutableSet",
  "collections.OrderedDict",
  "collections.abc.Callable",
  "collections.abc.Hashable",
  "collections.abc.Iterable",
  "collections.abc.Mapping",
  "collections.abc.MutableMapping",
  "collections.abc.MutableSet",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "combine",
  "common.MatrixCommon",
  "common.MatrixError",
  "common.NonInvertibleMatrixError",
  "common.NonPositiveDefiniteMatrixError",
  "common.NonSquareMatrixError",
  "common.ShapeError",
  "common.a2idx",
  "commutes_with_gens",
  "compare",
  "compatibility.HAS_GMPY",
  "compatibility.Iterable",
  "compatibility.Mapping",
  "compatibility.SYMPY_INTS",
  "compatibility.as_int",
  "compatibility.default_sort_key",
  "compatibility.gmpy.iroot",
  "compatibility.gmpy.root",
  "compatibility.is_sequence",
  "compatibility.iterable",
  "compatibility.ordered",
  "compatibility.reduce",
  "compilation.compile_run_strings",
  "complex_extended_negative",
  "complexfield.ComplexField",
  "complexity",
  "compute",
  "compute_ST",
  "compute_innermost",
  "concurrent.futures",
  "cond",
  "condition",
  "conflict.AmbiguityWarning",
  "conflict.ambiguities",
  "conflict.ordering",
  "conflict.super_signature",
  "conj",
  "conjugate",
  "cons",
  "constant",
  "contain",
  "container",
  "containers.Tuple",
  "contains",
  "contains.Contains",
  "contextlib",
  "contextlib.contextmanager",
  "contract_one_dims",
  "contravariant_order",
  "conv",
  "convert",
  "convert_atom",
  "converter",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "core.Registry",
  "core.Symbol",
  "core.alphabets.greeks",
  "core.chain",
  "core.compatibility.exec_",
  "core.do_one",
  "core.evalf._create_evalf_table",
  "core.exhaust",
  "core.identity",
  "core.multiplex",
  "core.singleton.S.Complexes",
  "core.singleton.S.EmptySet",
  "core.singleton.S.Integers",
  "core.singleton.S.Naturals",
  "core.singleton.S.Naturals0",
  "core.singleton.S.Rationals",
  "core.singleton.S.Reals",
  "core.singleton.S.UniversalSet",
  "core.switch",
  "core.symbols",
  "cos",
  "cosh",
  "cot",
  "coth",
  "count",
  "count_morphisms_filtered",
  "count_morphisms_undirected",
  "count_ops_alg",
  "coupled_evect",
  "covariant_order",
  "cprint",
  "create_inverse_map",
  "critical_angle",
  "cross",
  "cross.__doc__",
  "cross_cancel",
  "cross_product",
  "crt_",
  "csc",
  "cse_opts.sub_post",
  "cse_opts.sub_pre",
  "ctypes",
  "ctypes.CFUNCTYPE",
  "ctypes.POINTER",
  "ctypes.c_double",
  "ctypes.c_float",
  "ctypes.c_int",
  "ctypes.c_ubyte",
  "ctypes.c_void_p",
  "ctypes.create_string_buffer",
  "ctypes.py_object",
  "ctypes.sizeof",
  "ctypes.windll",
  "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
  "ctypes.windll.kernel32.GetStdHandle",
  "curses",
  "curses.error",
  "curses.setupterm",
  "curses.tigetnum",
  "cvd",
  "cw",
  "d",
  "d.get",
  "dagger",
  "decimal",
  "decimal.Decimal",
  "decimal.InvalidOperation",
  "decompose",
  "decompositions._LDLdecomposition",
  "decompositions._LDLdecomposition.__doc__",
  "decompositions._LDLdecomposition_sparse",
  "decompositions._LDLdecomposition_sparse.__doc__",
  "decompositions._LUdecomposition",
  "decompositions._LUdecomposition.__doc__",
  "decompositions._LUdecompositionFF",
  "decompositions._LUdecompositionFF.__doc__",
  "decompositions._LUdecomposition_Simple",
  "decompositions._LUdecomposition_Simple.__doc__",
  "decompositions._QRdecomposition",
  "decompositions._QRdecomposition.__doc__",
  "decompositions._cholesky",
  "decompositions._cholesky.__doc__",
  "decompositions._cholesky_sparse",
  "decompositions._cholesky_sparse.__doc__",
  "decompositions._liupc",
  "decompositions._liupc.__doc__",
  "decompositions._rank_decomposition",
  "decompositions._rank_decomposition.__doc__",
  "decompositions._row_structure_symbolic_cholesky",
  "decompositions._row_structure_symbolic_cholesky.__doc__",
  "decons",
  "decorators._sympifyit",
  "decorators.call_highest_priority",
  "decorators.sympify_method_args",
  "decorators.sympify_return",
  "decorators.wraps",
  "definitions.dimension_definitions.amount_of_substance",
  "definitions.dimension_definitions.luminous_intensity",
  "definitions.dimension_definitions.magnetic_density",
  "definitions.dimension_definitions.velocity",
  "defl",
  "deg",
  "delete_tensmul_data",
  "delop",
  "delta",
  "denom",
  "denom.append",
  "denom_clean",
  "dens",
  "dens.pdf",
  "dense.Matrix",
  "dense.Matrix._handle_creation_inputs",
  "dense.Matrix.eye",
  "dense.Matrix.hstack",
  "dense.MutableDenseMatrix",
  "dense.MutableDenseMatrix.eye",
  "dense.MutableDenseMatrix.zeros",
  "dense.matrix2numpy",
  "dense_ndim_array.ImmutableDenseNDimArray",
  "density_inv",
  "derivation",
  "det",
  "determinant.Determinant",
  "determinant._adjugate",
  "determinant._adjugate.__doc__",
  "determinant._charpoly",
  "determinant._charpoly.__doc__",
  "determinant._cofactor",
  "determinant._cofactor.__doc__",
  "determinant._cofactor_matrix",
  "determinant._cofactor_matrix.__doc__",
  "determinant._det",
  "determinant._det.__doc__",
  "determinant._det_LU",
  "determinant._det_LU.__doc__",
  "determinant._det_bareiss",
  "determinant._det_bareiss.__doc__",
  "determinant._det_berkowitz",
  "determinant._det_berkowitz.__doc__",
  "determinant._find_reasonable_pivot",
  "determinant._find_reasonable_pivot.__doc__",
  "determinant._find_reasonable_pivot_naive",
  "determinant._find_reasonable_pivot_naive.__doc__",
  "determinant._minor",
  "determinant._minor.__doc__",
  "determinant._minor_submatrix",
  "determinant._minor_submatrix.__doc__",
  "determinant.det",
  "df",
  "dg",
  "diagonal",
  "dict.__eq__",
  "dict.__getitem__",
  "dict.__new__",
  "dict.items",
  "dict.iteritems",
  "diffgeom.CoordSystem",
  "diffgeom.Manifold",
  "diffgeom.Patch",
  "diffx",
  "digits.digits",
  "dill",
  "dill.dump",
  "dill.load",
  "dimensions",
  "dimensions.Dimension",
  "diop_class",
  "dir.distance",
  "dirac",
  "dirichlet_eta",
  "discrete_log",
  "dispatcher.Dispatcher",
  "dispatcher.MethodDispatcher",
  "dispatcher.ambiguity_warn",
  "distance",
  "distribute_mul",
  "distribute_t12",
  "distribute_xor_over_and",
  "distutils.errors.CompileError",
  "distutils.spawn.find_executable",
  "distutils.sysconfig",
  "distutils.sysconfig.get_config_var",
  "distutils.sysconfig.get_python_inc",
  "distutils.version.LooseVersion",
  "dmp_LC",
  "dmp_TC",
  "dmp_mul",
  "dmp_primitive",
  "dmp_zero",
  "dmp_zero_p",
  "do",
  "do_shifts",
  "do_shifts_a",
  "do_shifts_b",
  "do_slater",
  "doctest",
  "doctest.DocTestFinder",
  "doctest.DocTestRunner",
  "doctest.DocTestRunner.report_failure",
  "doctest._encoding",
  "doctest._indent",
  "doit",
  "dom",
  "dom.to_sympy",
  "domain",
  "domain.cofactors",
  "domain.domain",
  "domain.domain.get_ring",
  "domain.from_sympy",
  "domain.is_Algebraic",
  "domain.mod",
  "domain.mod.rep",
  "domain.sqrt",
  "domain_new",
  "domain_quo",
  "done",
  "dont",
  "dosubs",
  "dot",
  "dot.__doc__",
  "double",
  "dps",
  "drop_const",
  "dtype",
  "dummy",
  "dummy_name_gen",
  "dump_fn",
  "dump_fn.extension",
  "dums",
  "dup_LC",
  "dup_TC",
  "dup_mul",
  "dx",
  "dxdy",
  "dyadic.Dyadic",
  "e",
  "e.base.func",
  "e.diff",
  "e.doit",
  "e.expand",
  "e.func",
  "e.is_comparable",
  "e.is_positive",
  "e2int",
  "e3",
  "eig_mat",
  "eigen._bidiagonal_decomposition",
  "eigen._bidiagonal_decomposition.__doc__",
  "eigen._bidiagonalize",
  "eigen._bidiagonalize.__doc__",
  "eigen._diagonalize",
  "eigen._diagonalize.__doc__",
  "eigen._eigenvals",
  "eigen._eigenvals.__doc__",
  "eigen._eigenvects",
  "eigen._eigenvects.__doc__",
  "eigen._fuzzy_positive_definite",
  "eigen._is_diagonalizable",
  "eigen._is_diagonalizable.__doc__",
  "eigen._is_indefinite",
  "eigen._is_indefinite.__doc__",
  "eigen._is_negative_definite",
  "eigen._is_negative_definite.__doc__",
  "eigen._is_negative_semidefinite",
  "eigen._is_negative_semidefinite.__doc__",
  "eigen._is_positive_definite",
  "eigen._is_positive_definite.__doc__",
  "eigen._is_positive_semidefinite",
  "eigen._is_positive_semidefinite.__doc__",
  "eigen._jordan_form",
  "eigen._jordan_form.__doc__",
  "eigen._left_eigenvects",
  "eigen._left_eigenvects.__doc__",
  "eigen._singular_values",
  "eigen._singular_values.__doc__",
  "el",
  "eliminate_implications",
  "ellipse.Circle",
  "elliptic_e",
  "elm_domain",
  "encode",
  "entity.GeometryEntity",
  "entity.GeometryEntity.__new__",
  "entity.GeometryEntity.rotate",
  "entity.GeometrySet",
  "entry",
  "enumerate_states",
  "epsilon",
  "eq",
  "eq.diff",
  "eq.subs",
  "eqn",
  "equal",
  "erfi",
  "errors.LaTeXParsingError",
  "esses",
  "eta",
  "eval_",
  "eval_factored",
  "eval_power",
  "evalf",
  "evalf.EvalfMixin",
  "evalf.PrecisionExhausted",
  "evalf.pure_complex",
  "evaluate",
  "evaluator",
  "evect",
  "exception",
  "exceptions.GeometryError",
  "exhaust_brl",
  "exp",
  "expander",
  "experimental_lambdify",
  "experimental_lambdify.experimental_lambdify",
  "experimental_lambdify.lambdify",
  "experimental_lambdify.vectorized_lambdify",
  "expint",
  "explicate",
  "exponential",
  "expr",
  "expr.Add",
  "expr.AtomicExpr",
  "expr.AtomicExpr.__add__",
  "expr.AtomicExpr.__div__",
  "expr.AtomicExpr.__mul__",
  "expr.AtomicExpr.__new__",
  "expr.AtomicExpr.__sub__",
  "expr.Expr",
  "expr.Expr.__ge__",
  "expr.Expr.__gt__",
  "expr.Expr.__le__",
  "expr.Expr.__lt__",
  "expr.Expr.__new__",
  "expr.Expr._from_mpmath",
  "expr.Expr.matches",
  "expr.args",
  "expr.atoms",
  "expr.base",
  "expr.exp",
  "expr.expand",
  "expr.rcall",
  "expr.subs",
  "expr_method",
  "expressiondomain.ExpressionDomain",
  "exprtools.decompose_power",
  "ext",
  "eye",
  "f",
  "f.__doc__",
  "f.__doc__.find",
  "f.__name__",
  "f._diff_wrt",
  "f._help",
  "f._imp_",
  "f._sage_",
  "f._source",
  "f.add",
  "f.ak.variables",
  "f.all_roots",
  "f.args",
  "f.as_expr",
  "f.as_independent",
  "f.as_leading_term",
  "f.as_ordered_terms",
  "f.as_poly",
  "f.atoms",
  "f.cancel",
  "f.compose",
  "f.content",
  "f.decompose",
  "f.derivative_count",
  "f.diff",
  "f.discriminant",
  "f.dispatch",
  "f.div",
  "f.evalf",
  "f.evaluate",
  "f.expand",
  "f.expr",
  "f.expr.subs",
  "f.exquo",
  "f.factor_list",
  "f.find",
  "f.free_symbols",
  "f.func",
  "f.function",
  "f.gcdex",
  "f.gff_list",
  "f.half_gcdex",
  "f.has",
  "f.infinite",
  "f.integrate",
  "f.intervals",
  "f.is_Add",
  "f.is_cyclotomic",
  "f.match",
  "f.name",
  "f.nargs",
  "f.norm",
  "f.normalize",
  "f.nroots",
  "f.ordering",
  "f.pdiv",
  "f.pexquo",
  "f.polynomial",
  "f.pquo",
  "f.prem",
  "f.primitive",
  "f.quo",
  "f.read",
  "f.readlines",
  "f.refine_root",
  "f.register",
  "f.rem",
  "f.replace",
  "f.resultant",
  "f.returns",
  "f.revert",
  "f.rewrite",
  "f.root",
  "f.series",
  "f.source",
  "f.sqf_list",
  "f.sqf_part",
  "f.startswith",
  "f.sturm",
  "f.subresultants",
  "f.subs",
  "f.theano_function",
  "f.theano_function.input_storage",
  "f.trunc",
  "f.truncate",
  "f.variables",
  "f.xreplace",
  "f0",
  "f1",
  "f1b",
  "f2",
  "f3",
  "f4",
  "fRL1",
  "fRL2",
  "f_",
  "f_callback",
  "f_dot1",
  "f_dot2",
  "f_func",
  "f_im",
  "f_matsolve",
  "f_re",
  "f_real",
  "f_real2",
  "f_real_inherit",
  "f_real_inherit.name",
  "f_x",
  "f_y",
  "fabc",
  "fabs",
  "facb",
  "factor_.divisors",
  "factor_.factorint",
  "factor_.multiplicity",
  "factor_.totient",
  "factor_.trailing",
  "factor_nc_test",
  "factorint",
  "factorize",
  "fallback",
  "fastcache",
  "fastcache.__version__",
  "fastcache.clru_cache",
  "fblocked",
  "fccw",
  "fcw",
  "feq",
  "fi",
  "field",
  "find",
  "find_fuzzy",
  "find_index_that_is_projected",
  "find_non_syms",
  "find_symbols",
  "findout_terminal_width",
  "finish",
  "fjlkd",
  "flam",
  "flat",
  "flat_indexes",
  "flist_iter",
  "fm",
  "fn",
  "fnmatch",
  "fnmatch.fnmatch",
  "foo",
  "foo.could_extract_minus_sign",
  "foo1",
  "foo2",
  "formatter",
  "forward_substitution",
  "fp",
  "fpoint",
  "fprint",
  "frac",
  "frac_in",
  "fraction",
  "fractions",
  "fractions.Fraction",
  "fractions.gcd",
  "frame.CoordinateSym",
  "frame._check_frame",
  "freepres",
  "fresnelc",
  "fresnels",
  "fro",
  "fs_test",
  "fu",
  "fun",
  "func",
  "func.__doc__",
  "func.__doc__.splitlines",
  "func.__doc__.strip",
  "func.__name__",
  "func._slow",
  "func.find",
  "func.free_symbols",
  "func.is_zero",
  "func.match",
  "func.subs",
  "func0",
  "func1",
  "func2",
  "func3",
  "func4",
  "func_numexpr",
  "function",
  "function.AppliedUndef",
  "function.Derivative",
  "function.Function",
  "function.FunctionClass",
  "function.UndefinedFunction",
  "function.WildFunction",
  "function._coeff_isneg",
  "function.count_ops",
  "function.expand_complex",
  "function.expand_mul",
  "function.expand_multinomial",
  "function.free_symbols",
  "functions.express",
  "functools",
  "functools.cmp_to_key",
  "functools.lru_cache",
  "functools.partial",
  "functools.reduce",
  "functools.update_wrapper",
  "functools.wraps",
  "futrig",
  "fv",
  "fw",
  "fx",
  "fy",
  "fz",
  "g",
  "g.args",
  "g.as_coeff_mul",
  "g.atoms",
  "g.coeff",
  "g.data",
  "g.expand",
  "g.expr",
  "g.func",
  "g.integrate",
  "g.is_even",
  "g.is_hypergeometric",
  "g.is_number",
  "g.order",
  "g.size",
  "g.subs",
  "g.xreplace",
  "g1",
  "g2",
  "g_func",
  "gamma",
  "gamma_factor",
  "gamma_rat",
  "gate",
  "gaunt_ref",
  "gcd",
  "gen",
  "gen._array_form",
  "gener",
  "gener.order",
  "generate.nextprime",
  "generate.primerange",
  "generate.sieve.primerange",
  "generate_dummy_name",
  "generate_forms",
  "get",
  "get_basis",
  "get_col",
  "get_differential_var",
  "get_differential_var_str",
  "get_equations",
  "get_for_name",
  "get_indices",
  "get_indices_set",
  "get_ipython",
  "get_partial_velocity",
  "get_rank",
  "get_reps",
  "get_score",
  "get_symsetmap",
  "get_total_scale_factor",
  "get_transversals",
  "getargs",
  "getd",
  "getl",
  "getr",
  "getroot",
  "getu",
  "gf_monic",
  "gf_pow_mod",
  "give",
  "given_fn",
  "gl",
  "gl.startswith",
  "glob",
  "glob.glob",
  "gmpy",
  "gmpy.denom",
  "gmpy.fac",
  "gmpy.gcd",
  "gmpy.gcdext",
  "gmpy.lcm",
  "gmpy.mpq",
  "gmpy.mpz",
  "gmpy.numer",
  "gmpy.qdiv",
  "gmpy.sqrt",
  "gmpy2",
  "gmpy2.denom",
  "gmpy2.fac",
  "gmpy2.gcd",
  "gmpy2.gcdext",
  "gmpy2.is_strong_prp",
  "gmpy2.is_strong_selfridge_prp",
  "gmpy2.isqrt",
  "gmpy2.lcm",
  "gmpy2.mpq",
  "gmpy2.mpz",
  "gmpy2.numer",
  "gmpy2.qdiv",
  "gmpy2.version",
  "gmpyfinitefield.GMPYFiniteField",
  "gmpyintegerring.GMPYIntegerRing",
  "gmpyrationalfield.GMPYRationalField",
  "good_autocorr",
  "good_triangle",
  "gooda",
  "goodlog",
  "gradient",
  "gradient_terms",
  "graph._connected_components",
  "graph._connected_components.__doc__",
  "graph._connected_components_decomposition",
  "graph._connected_components_decomposition.__doc__",
  "gray_to_bin",
  "groebnersimp",
  "ground_abs",
  "ground_gcd",
  "ground_quo",
  "group_size",
  "group_to_finiteset",
  "gruntz.gruntz",
  "h",
  "h.image",
  "h.is_injective",
  "h.is_isomorphism",
  "h.is_surjective",
  "h.kernel",
  "h.quotient_codomain",
  "h.quotient_domain",
  "h.restrict_codomain",
  "h.restrict_domain",
  "h.simplify",
  "h1",
  "h1.domain.submodule",
  "h1.restrict_domain",
  "h2",
  "handle",
  "handle_match",
  "handler",
  "has",
  "hashlib.sha256",
  "head",
  "heapq.heappop",
  "heapq.heappush",
  "hermite",
  "hi_type",
  "highest",
  "hit",
  "holonomicerrors.NotHolonomicError",
  "holonomicerrors.NotHyperSeriesError",
  "holonomicerrors.NotPowerSeriesError",
  "holonomicerrors.SingularityError",
  "how",
  "i",
  "icdf",
  "identity_func",
  "idn",
  "if1",
  "if2",
  "im",
  "imag_count",
  "immutable.ImmutableDenseMatrix",
  "immutable.ImmutableDenseMatrix._handle_creation_inputs",
  "immutable.ImmutableDenseMatrix._new",
  "immutable.ImmutableSparseMatrix",
  "imp",
  "imp.find_module",
  "imp.load_module",
  "importable",
  "importlib.util",
  "inc",
  "indent",
  "inflate",
  "inner_key",
  "inner_print_max",
  "inner_print_min",
  "inspect",
  "inspect.Parameter",
  "inspect.currentframe",
  "inspect.getfile",
  "inspect.getframeinfo",
  "inspect.getmro",
  "inspect.getsource",
  "inspect.getsourcefile",
  "inspect.getsourcelines",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.isgeneratorfunction",
  "inspect.ismethod",
  "inspect.ismodule",
  "inspect.signature",
  "inspect.unwrap",
  "integral_is_subclass",
  "integral_steps",
  "integrate",
  "integration_reduction_dynamic",
  "intersect_parallel_ray_and_segment",
  "intersect_parallel_rays",
  "intersect_parallel_segments",
  "intersection",
  "interval_membership.intervalMembership",
  "intervalmath.interval",
  "inv",
  "inverse.Inverse",
  "inverse._inv",
  "inverse._inv.__doc__",
  "inverse._inv_ADJ",
  "inverse._inv_ADJ.__doc__",
  "inverse._inv_CH",
  "inverse._inv_CH.__doc__",
  "inverse._inv_GE",
  "inverse._inv_GE.__doc__",
  "inverse._inv_LDL",
  "inverse._inv_LDL.__doc__",
  "inverse._inv_LU",
  "inverse._inv_LU.__doc__",
  "inverse._inv_QR",
  "inverse._inv_QR.__doc__",
  "inverse._inv_block",
  "inverse._inv_block.__doc__",
  "inverse._inv_mod",
  "inverse._inv_mod.__doc__",
  "inverse._pinv",
  "inverse._pinv.__doc__",
  "inverter",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "io.UnsupportedOperation",
  "io.open",
  "ipartfrac",
  "iperm",
  "ireal",
  "is2pow",
  "isMat",
  "is_algebraic",
  "is_args",
  "is_associative",
  "is_commutative",
  "is_digit",
  "is_homogeneous_solution",
  "is_indef_int",
  "is_independent",
  "is_iterator",
  "is_literal",
  "is_p_group",
  "is_redundant",
  "is_seq_and_not_point",
  "is_similar1",
  "is_similar2",
  "is_special_case_of",
  "is_sqrt",
  "is_valid",
  "isconstant",
  "isimp",
  "isiter",
  "ismat",
  "ispow2",
  "isubs",
  "iszerofunc",
  "iter_vfield",
  "iterator",
  "itertools",
  "itertools.accumulate",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.combinations_with_replacement",
  "itertools.count",
  "itertools.cycle",
  "itertools.islice",
  "itertools.permutations",
  "itertools.product",
  "itertools.product.append",
  "itertools.product.extend",
  "itertools.repeat",
  "itertools.takewhile",
  "itertools.zip_longest",
  "jindex",
  "jn",
  "join",
  "jordan_cell_power",
  "jordan_chains",
  "jordan_pow",
  "key",
  "key.add",
  "key.name",
  "keys",
  "keyword",
  "keyword.iskeyword",
  "kls",
  "l",
  "l1",
  "l2",
  "lam",
  "lambda_lame",
  "lambda_s0",
  "lamda",
  "lamda.args",
  "latex.latex",
  "latexslice",
  "lay_out_group",
  "lcim",
  "lcm",
  "lcm_divides",
  "leaf",
  "left",
  "legendre",
  "letter_form_to_array_form",
  "lib_interval.exp",
  "lib_interval.log",
  "lime_recur",
  "limitinf",
  "line.Line",
  "line.Line3D",
  "line.Ray",
  "line.Ray3D",
  "line.Segment",
  "line.Segment.is_perpendicular",
  "line.Segment3D",
  "line_list_close",
  "linear_arg",
  "linearity_check",
  "linearsolver.NewMatrix",
  "linecache",
  "linecache.cache",
  "linecache.getlines",
  "lines_close",
  "list.__new__",
  "list.append",
  "literal",
  "ln",
  "locale.getpreferredencoding",
  "log",
  "loggamma",
  "logging",
  "logging.CRITICAL",
  "logging.WARNING",
  "logging.getLogger",
  "logic.And",
  "logic.Logic",
  "logic.Not",
  "logic.Or",
  "logic._fuzzy_group",
  "logic.fuzzy_and",
  "logic.fuzzy_bool",
  "logic.fuzzy_not",
  "logic.fuzzy_or",
  "lowest",
  "lxml.etree",
  "lxml.etree.XML",
  "lxml.etree.XSLT",
  "mainloop",
  "make_expression",
  "make_inverse_trig",
  "make_key",
  "make_log1",
  "make_log2",
  "make_second_step",
  "makelambda",
  "maketree",
  "mask",
  "mat",
  "mat_build",
  "mat_class",
  "mat_func",
  "matadd.MatAdd",
  "matarray",
  "match",
  "match.get",
  "match.pop",
  "match.subs",
  "match.update",
  "matchpy.Arity",
  "matchpy.Arity.variadic",
  "matchpy.AssociativeOperation",
  "matchpy.AssociativeOperation.register",
  "matchpy.CommutativeOperation",
  "matchpy.CommutativeOperation.register",
  "matchpy.CustomConstraint",
  "matchpy.ManyToOneMatcher",
  "matchpy.ManyToOneReplacer",
  "matchpy.OneIdentityOperation",
  "matchpy.OneIdentityOperation.register",
  "matchpy.Operation",
  "matchpy.Operation.register",
  "matchpy.Pattern",
  "matchpy.ReplacementRule",
  "matchpy.Wildcard",
  "matchpy.expressions.functions.create_operation_expression",
  "matchpy.expressions.functions.create_operation_expression.register",
  "matchpy.expressions.functions.op_iter",
  "matchpy.expressions.functions.op_len",
  "matchpy.expressions.functions.op_len.register",
  "matchpy.is_match",
  "matchpy.replace_all",
  "matexpr.GenericIdentity",
  "matexpr.Identity",
  "matexpr.MatrixElement",
  "matexpr.MatrixExpr",
  "matexpr.OneMatrix",
  "matexpr.ZeroMatrix",
  "math",
  "math.T",
  "math.T.row",
  "math.__dict__",
  "math.acos",
  "math.ceil",
  "math.col",
  "math.cols",
  "math.cos",
  "math.det",
  "math.eigenvals",
  "math.exp",
  "math.floor",
  "math.gcd",
  "math.hypot",
  "math.isinf",
  "math.isnan",
  "math.log",
  "math.log10",
  "math.pi",
  "math.row",
  "math.row_insert",
  "math.shape",
  "math.sin",
  "math.sqrt",
  "math.trunc",
  "matmat",
  "matmul.MatMul",
  "matmul.MatMul.fromiter",
  "matplotlib",
  "matplotlib.testing.compare.compare_images",
  "matplotlib.use",
  "matpow.MatPow",
  "matrices.MatrixBase",
  "matrices.ShapeError",
  "matrix",
  "max.evalf",
  "max.is_comparable",
  "max.is_extended_real",
  "mcrt",
  "measure",
  "measure1",
  "measure2",
  "medium.Medium",
  "meta",
  "meth",
  "method",
  "metric",
  "metric_symmetry_to_msym",
  "migcdex",
  "min.is_comparable",
  "min.is_extended_real",
  "missing_or_other_newer",
  "mkinexact",
  "mksa",
  "mksa.print_dim_base",
  "mod.Mod",
  "modular.crt",
  "modversion",
  "monom_key",
  "monomial_div",
  "monomial_gcd",
  "monomial_ldiv",
  "monomial_mul",
  "monomial_mulpow",
  "mpmath",
  "mpmath.__dict__",
  "mpmath.bernfrac",
  "mpmath.besselj",
  "mpmath.besseljzero",
  "mpmath.cos",
  "mpmath.ctx_mp.mpnumeric",
  "mpmath.ctx_mp_python.PythonMPContext",
  "mpmath.ctx_mp_python._constant",
  "mpmath.ctx_mp_python._mpc",
  "mpmath.ctx_mp_python._mpf",
  "mpmath.diff",
  "mpmath.fac",
  "mpmath.ff",
  "mpmath.findroot",
  "mpmath.identify",
  "mpmath.inf",
  "mpmath.j",
  "mpmath.lambertw",
  "mpmath.libmp",
  "mpmath.libmp.ComplexResult",
  "mpmath.libmp.MPZ_ONE",
  "mpmath.libmp.backend.MPZ",
  "mpmath.libmp.bitcount",
  "mpmath.libmp.catalan_fixed",
  "mpmath.libmp.fhalf",
  "mpmath.libmp.finf",
  "mpmath.libmp.fnan",
  "mpmath.libmp.fninf",
  "mpmath.libmp.fnone",
  "mpmath.libmp.fone",
  "mpmath.libmp.from_float",
  "mpmath.libmp.from_int",
  "mpmath.libmp.from_man_exp",
  "mpmath.libmp.from_rational",
  "mpmath.libmp.from_str",
  "mpmath.libmp.fzero",
  "mpmath.libmp.gammazeta.mpf_bernoulli",
  "mpmath.libmp.ifac",
  "mpmath.libmp.ifib",
  "mpmath.libmp.int_types",
  "mpmath.libmp.isqrt",
  "mpmath.libmp.libhyper.NoConvergence",
  "mpmath.libmp.libhyper.euler_fixed",
  "mpmath.libmp.libintmath.bitcount",
  "mpmath.libmp.libintmath.giant_steps",
  "mpmath.libmp.libintmath.ifac",
  "mpmath.libmp.libmpc._infs_nan",
  "mpmath.libmp.libmpf._normalize",
  "mpmath.libmp.libmpf.dps_to_prec",
  "mpmath.libmp.libmpf.finf",
  "mpmath.libmp.libmpf.fnan",
  "mpmath.libmp.libmpf.fninf",
  "mpmath.libmp.libmpf.from_float",
  "mpmath.libmp.libmpf.fzero",
  "mpmath.libmp.libmpf.prec_to_dps",
  "mpmath.libmp.mpc_abs",
  "mpmath.libmp.mpc_exp",
  "mpmath.libmp.mpc_pow",
  "mpmath.libmp.mpc_pow_int",
  "mpmath.libmp.mpc_pow_mpf",
  "mpmath.libmp.mpc_sqrt",
  "mpmath.libmp.mpf_abs",
  "mpmath.libmp.mpf_add",
  "mpmath.libmp.mpf_atan",
  "mpmath.libmp.mpf_atan2",
  "mpmath.libmp.mpf_ceil",
  "mpmath.libmp.mpf_cmp",
  "mpmath.libmp.mpf_cos",
  "mpmath.libmp.mpf_cosh_sinh",
  "mpmath.libmp.mpf_div",
  "mpmath.libmp.mpf_e",
  "mpmath.libmp.mpf_eq",
  "mpmath.libmp.mpf_exp",
  "mpmath.libmp.mpf_floor",
  "mpmath.libmp.mpf_ge",
  "mpmath.libmp.mpf_gt",
  "mpmath.libmp.mpf_le",
  "mpmath.libmp.mpf_log",
  "mpmath.libmp.mpf_lt",
  "mpmath.libmp.mpf_mod",
  "mpmath.libmp.mpf_mul",
  "mpmath.libmp.mpf_neg",
  "mpmath.libmp.mpf_pi",
  "mpmath.libmp.mpf_pow",
  "mpmath.libmp.mpf_pow_int",
  "mpmath.libmp.mpf_shift",
  "mpmath.libmp.mpf_sin",
  "mpmath.libmp.mpf_sqrt",
  "mpmath.libmp.mpf_sub",
  "mpmath.libmp.normalize",
  "mpmath.libmp.phi_fixed",
  "mpmath.libmp.prec_to_dps",
  "mpmath.libmp.repr_dps",
  "mpmath.libmp.round_nearest",
  "mpmath.libmp.sqrtrem",
  "mpmath.libmp.to_float",
  "mpmath.libmp.to_int",
  "mpmath.libmp.to_pickable",
  "mpmath.libmp.to_rational",
  "mpmath.libmp.to_str",
  "mpmath.log",
  "mpmath.make_mpc",
  "mpmath.make_mpf",
  "mpmath.matrices.matrices._matrix",
  "mpmath.matrix",
  "mpmath.meijerg",
  "mpmath.mnorm",
  "mpmath.mp",
  "mpmath.mp.NoConvergence",
  "mpmath.mp.airyai",
  "mpmath.mp.airybi",
  "mpmath.mp.dps",
  "mpmath.mp.eig",
  "mpmath.mp.eulernum",
  "mpmath.mp.eulerpoly",
  "mpmath.mp.fabs",
  "mpmath.mp.gammainc",
  "mpmath.mp.im",
  "mpmath.mp.inf",
  "mpmath.mp.matrix",
  "mpmath.mp.prec",
  "mpmath.mp.re",
  "mpmath.mp.spherharm",
  "mpmath.mp.sqrt",
  "mpmath.mp.subs",
  "mpmath.mpc",
  "mpmath.mpf",
  "mpmath.mpi",
  "mpmath.mpmathify",
  "mpmath.ninf",
  "mpmath.nsum",
  "mpmath.pi",
  "mpmath.polyroots",
  "mpmath.pslq",
  "mpmath.quad",
  "mpmath.quadosc",
  "mpmath.quadts",
  "mpmath.rational.mpq",
  "mpmath.rf",
  "mpmath.sqrt",
  "mpmath.workprec",
  "mrv_leadterm",
  "mul",
  "mul.Mul",
  "mul.Mul.identity",
  "mul.Mul.make_args",
  "mul._unevaluated_Mul",
  "mul2",
  "mul_symbol_selection",
  "multiply",
  "multjoin",
  "mv",
  "my",
  "my_function",
  "my_function2",
  "my_imt",
  "mybeta",
  "myfunc",
  "myfunc.nargs",
  "mygamma",
  "myprod",
  "myrep",
  "mysimp",
  "mystr",
  "mytanh",
  "n",
  "name_h",
  "ndiv",
  "nefunc",
  "neg",
  "new",
  "newpermutation",
  "next.add",
  "next.args",
  "next.base",
  "next.col_join",
  "next.derived_subgroup",
  "nf",
  "nint",
  "no",
  "nodef_func",
  "nona",
  "nonalg_subs_dummies",
  "none_handler",
  "nonsymfail",
  "nonz",
  "norm",
  "norm2",
  "normal",
  "not_func",
  "npfunc",
  "nsimplify",
  "nsimplify_real",
  "nu",
  "nullity_chain",
  "numbered_names",
  "numberfields.minimal_polynomial",
  "numbers",
  "numbers.Float",
  "numbers.Number",
  "numbers.Number.register",
  "numbers.NumberSymbol",
  "numbers.Rational",
  "numbers.Rational.register",
  "numbers.Real",
  "numbers.Real.register",
  "numbers.igcd",
  "numbers.ilcm",
  "numer",
  "numer.append",
  "numpy",
  "numpy.allclose",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.deg2rad",
  "numpy.empty",
  "numpy.eye",
  "numpy.finfo",
  "numpy.floating",
  "numpy.iscomplex",
  "numpy.isscalar",
  "numpy.linalg.eigvals",
  "numpy.linalg.norm",
  "numpy.log",
  "numpy.matrix",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndindex",
  "numpy.number",
  "numpy.ones",
  "numpy.random.rand",
  "numpy.reshape",
  "numpy.size",
  "numpy.sum",
  "numpy.testing",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "o",
  "o1",
  "o2",
  "object.__new__",
  "object.name",
  "ok",
  "old_run_cell",
  "omega",
  "omega1",
  "on_close",
  "onequbitgate",
  "op",
  "open_file",
  "operations.AssocOp",
  "operations.AssocOp._eval_evalf",
  "operations.LatticeOp",
  "operator",
  "operator.add",
  "operator.attrgetter",
  "operator.eq",
  "operator.ge",
  "operator.gt",
  "operator.index",
  "operator.le",
  "operator.lt",
  "operator.mul",
  "operator.ne",
  "operatorset.state_to_operators",
  "optim",
  "optim.cost_function",
  "optparse",
  "optparse.OptionGroup",
  "optparse.OptionParser",
  "or_func",
  "or_func_3",
  "ord.lower",
  "order",
  "order.Order",
  "order.append",
  "os",
  "os.EX_OK",
  "os.F_OK",
  "os.access",
  "os.chdir",
  "os.chmod",
  "os.curdir",
  "os.devnull",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.environ.lower",
  "os.getcwd",
  "os.getenv",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.name",
  "os.pardir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.getmtime",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.normcase",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.remove",
  "os.rmdir",
  "os.sep",
  "os.unlink",
  "os.walk",
  "other",
  "others",
  "out_array_type",
  "p",
  "p._array_form",
  "p._cyclic_form",
  "p._rank",
  "p.apply",
  "p.args",
  "p.array_form",
  "p.ascents",
  "p.atoms",
  "p.cardinality",
  "p.commutator",
  "p.cyclic_form",
  "p.descents",
  "p.func",
  "p.get_adjacency_distance",
  "p.get_positional_distance",
  "p.get_precedence_distance",
  "p.index",
  "p.inversion_vector",
  "p.inversions",
  "p.is_Identity",
  "p.length",
  "p.max",
  "p.min",
  "p.next_lex",
  "p.next_nonlex",
  "p.order",
  "p.rank",
  "p.rank_nonlex",
  "p.rank_trotterjohnson",
  "p.resize",
  "p.runs",
  "p.signature",
  "p.size",
  "p.support",
  "p.transpositions",
  "param_rischDE",
  "parameters.global_parameters.distribute",
  "parameters.global_parameters.evaluate",
  "parens",
  "parent",
  "parse_derivative",
  "parse_dict",
  "parse_dim",
  "parse_dim_name",
  "parse_expression",
  "parse_hints",
  "parse_term",
  "partition",
  "pb",
  "pdb",
  "pdb.post_mortem",
  "pdb.set_trace",
  "pdf",
  "per",
  "perm",
  "perm2tensor",
  "permutation",
  "permutation.PermutationMatrix",
  "perp",
  "perp_to_subspace",
  "ph",
  "phi",
  "piab",
  "piab.expr",
  "piab.normalize",
  "pick_vec",
  "pickle",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "piecewise_fold",
  "place_objects",
  "platform",
  "platform.python_implementation",
  "plot.BaseSeries",
  "plot.Plot",
  "plot_interval.PlotInterval",
  "plot_interval.PlotInterval.try_parse",
  "plot_object.PlotObject",
  "point.Point",
  "point.Point._normalize_dimension",
  "point.Point.affine_rank",
  "point.Point.distance",
  "point.Point.is_collinear",
  "point.Point.midpoint",
  "point.Point.project",
  "point.Point2D",
  "point.Point3D",
  "point.Point3D.are_collinear",
  "poly_func",
  "polyerrors.HeuristicGCDFailed",
  "polygon.Polygon",
  "polygon.Triangle",
  "polylog",
  "possible_subterms",
  "post",
  "pow.as_base_exp",
  "pow.free_symbols",
  "pow.is_Pow",
  "pow.is_Symbol",
  "pow.multiply",
  "pow_cos_sin",
  "pow_xin",
  "power",
  "powerset.PowerSet",
  "ppslice",
  "pr",
  "pre",
  "precedence",
  "precedence.precedence",
  "pred",
  "predicate",
  "preorder_traversal",
  "pretty.pprint_try_use_unicode",
  "pretty_list",
  "pretty_negative",
  "pretty_symbology.hobj",
  "pretty_symbology.is_combining",
  "pretty_symbology.pretty_use_unicode",
  "pretty_symbology.vobj",
  "pretty_symbology.xobj",
  "pretty_symbology.xsym",
  "primetest.isprime",
  "print_counter",
  "print_data",
  "print_dims",
  "print_rule",
  "print_start",
  "print_string_list",
  "printer",
  "printer.Printer",
  "printing.VectorLatexPrinter",
  "printing.VectorPrettyPrinter",
  "printing.VectorStrPrinter",
  "prntr",
  "process_common_addends",
  "process_conds",
  "process_new_rule",
  "prod_term",
  "proj_point",
  "project",
  "prop_comm_g",
  "propfunc",
  "protocol",
  "protocol.dumps",
  "protocol.loads",
  "psi",
  "pspace",
  "pspace_independent",
  "pull_out_u",
  "py",
  "py.__.test.defaultconftest",
  "py.__.test.defaultconftest.Directory",
  "py.__.test.defaultconftest.Function",
  "py.__.test.defaultconftest.Module",
  "py.__.test.item.Function",
  "py.__.test.item.Item",
  "py.__.test.terminal.terminal.TerminalSession",
  "py.test.cmdline.main",
  "py.test.collect.Directory",
  "py.test.collect.Module",
  "py.test.config",
  "pycode.PythonCodePrinter",
  "pycosat",
  "pycosat.itersolve",
  "pycosat.solve",
  "pydoc.pager",
  "pyglet",
  "pyglet.clock.Clock",
  "pyglet.font",
  "pyglet.font.Text",
  "pyglet.font.Text.BASELINE",
  "pyglet.font.Text.CENTER",
  "pyglet.font.load",
  "pyglet.gl",
  "pyglet.gl.Config",
  "pyglet.gl.GL_BLEND",
  "pyglet.gl.GL_COLOR_BUFFER_BIT",
  "pyglet.gl.GL_COMPILE",
  "pyglet.gl.GL_DEPTH_BUFFER_BIT",
  "pyglet.gl.GL_DEPTH_TEST",
  "pyglet.gl.GL_ENABLE_BIT",
  "pyglet.gl.GL_FILL",
  "pyglet.gl.GL_FRONT_AND_BACK",
  "pyglet.gl.GL_LESS",
  "pyglet.gl.GL_LINE",
  "pyglet.gl.GL_LINES",
  "pyglet.gl.GL_LINE_SMOOTH",
  "pyglet.gl.GL_LINE_SMOOTH_HINT",
  "pyglet.gl.GL_LINE_STRIP",
  "pyglet.gl.GL_MODELVIEW",
  "pyglet.gl.GL_MODELVIEW_MATRIX",
  "pyglet.gl.GL_NICEST",
  "pyglet.gl.GL_ONE_MINUS_SRC_ALPHA",
  "pyglet.gl.GL_POLYGON_BIT",
  "pyglet.gl.GL_POLYGON_OFFSET_LINE",
  "pyglet.gl.GL_POLYGON_SMOOTH_HINT",
  "pyglet.gl.GL_PROJECTION",
  "pyglet.gl.GL_PROJECTION_MATRIX",
  "pyglet.gl.GL_QUAD_STRIP",
  "pyglet.gl.GL_RGBA",
  "pyglet.gl.GL_SMOOTH",
  "pyglet.gl.GL_SRC_ALPHA",
  "pyglet.gl.GL_TRUE",
  "pyglet.gl.GL_UNSIGNED_BYTE",
  "pyglet.gl.GL_VIEWPORT",
  "pyglet.gl.glBegin",
  "pyglet.gl.glBlendFunc",
  "pyglet.gl.glCallList",
  "pyglet.gl.glClear",
  "pyglet.gl.glClearColor",
  "pyglet.gl.glClearDepth",
  "pyglet.gl.glColor3f",
  "pyglet.gl.glColor4f",
  "pyglet.gl.glDepthFunc",
  "pyglet.gl.glDisable",
  "pyglet.gl.glEnable",
  "pyglet.gl.glEnd",
  "pyglet.gl.glEndList",
  "pyglet.gl.glGenLists",
  "pyglet.gl.glGetDoublev",
  "pyglet.gl.glGetFloatv",
  "pyglet.gl.glGetIntegerv",
  "pyglet.gl.glHint",
  "pyglet.gl.glIsList",
  "pyglet.gl.glLineWidth",
  "pyglet.gl.glLoadIdentity",
  "pyglet.gl.glLoadMatrixf",
  "pyglet.gl.glMatrixMode",
  "pyglet.gl.glMultMatrixf",
  "pyglet.gl.glNewList",
  "pyglet.gl.glPolygonMode",
  "pyglet.gl.glPolygonOffset",
  "pyglet.gl.glPopAttrib",
  "pyglet.gl.glPopMatrix",
  "pyglet.gl.glPushAttrib",
  "pyglet.gl.glPushMatrix",
  "pyglet.gl.glReadPixels",
  "pyglet.gl.glRotatef",
  "pyglet.gl.glScalef",
  "pyglet.gl.glShadeModel",
  "pyglet.gl.glTranslatef",
  "pyglet.gl.glVertex3f",
  "pyglet.gl.gluPerspective",
  "pyglet.gl.gluProject",
  "pyglet.gl.gluUnProject",
  "pyglet.image",
  "pyglet.image.codecs.png.PNGImageDecoder",
  "pyglet.image.load",
  "pyglet.window",
  "pyglet.window.Window",
  "pyglet.window.key",
  "pyglet.window.key.A",
  "pyglet.window.key.C",
  "pyglet.window.key.D",
  "pyglet.window.key.DOWN",
  "pyglet.window.key.E",
  "pyglet.window.key.ESCAPE",
  "pyglet.window.key.F",
  "pyglet.window.key.F1",
  "pyglet.window.key.F2",
  "pyglet.window.key.F3",
  "pyglet.window.key.F4",
  "pyglet.window.key.F5",
  "pyglet.window.key.F6",
  "pyglet.window.key.F8",
  "pyglet.window.key.LEFT",
  "pyglet.window.key.LSHIFT",
  "pyglet.window.key.NUM_1",
  "pyglet.window.key.NUM_2",
  "pyglet.window.key.NUM_3",
  "pyglet.window.key.NUM_4",
  "pyglet.window.key.NUM_5",
  "pyglet.window.key.NUM_6",
  "pyglet.window.key.NUM_7",
  "pyglet.window.key.NUM_8",
  "pyglet.window.key.NUM_9",
  "pyglet.window.key.NUM_ADD",
  "pyglet.window.key.NUM_SUBTRACT",
  "pyglet.window.key.PAGEDOWN",
  "pyglet.window.key.PAGEUP",
  "pyglet.window.key.Q",
  "pyglet.window.key.R",
  "pyglet.window.key.RIGHT",
  "pyglet.window.key.RSHIFT",
  "pyglet.window.key.S",
  "pyglet.window.key.UP",
  "pyglet.window.key.W",
  "pyglet.window.key.X",
  "pyglet.window.key.Z",
  "pyglet.window.mouse.LEFT",
  "pyglet.window.mouse.MIDDLE",
  "pyglet.window.mouse.RIGHT",
  "pytest",
  "pytest.__version__",
  "pytest.config.getvalue",
  "pytest.fixture",
  "pytest.mark.nocache_fail",
  "pytest.mark.skip",
  "pytest.mark.slow",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pythonfinitefield.PythonFiniteField",
  "pythonintegerring.PythonIntegerRing",
  "pythonrationalfield.PythonRationalField",
  "q",
  "q.array_form",
  "q.rank",
  "q.rank_nonlex",
  "q.rank_trotterjohnson",
  "q1",
  "q2",
  "q3",
  "qh",
  "quantities.Quantity",
  "query",
  "quo",
  "r",
  "r.has",
  "r.subs",
  "rand",
  "randcplx",
  "randint",
  "random",
  "random.Random",
  "random.betavariate",
  "random.choice",
  "random.expovariate",
  "random.gammavariate",
  "random.lognormvariate",
  "random.normalvariate",
  "random.paretovariate",
  "random.randint",
  "random.random",
  "random.randrange",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "random.uniform",
  "random.weibullvariate",
  "random_number_generator",
  "random_symbols",
  "randomize_graph",
  "randrange",
  "range.is_integer",
  "ratq",
  "raw",
  "rc",
  "rcheck",
  "re",
  "re.M",
  "re.MULTILINE",
  "re.VERBOSE",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.sub",
  "realfield.RealField",
  "rec_gen",
  "reconstruction",
  "recur_len",
  "recurr",
  "recurrence.HolonomicSequence",
  "recurrence.RecurrenceOperator",
  "recurrence.RecurrenceOperators",
  "recurse",
  "recurse_expr",
  "recurse_sub_blocks",
  "recursor",
  "reduce_rational_inequalities_wrap",
  "reducible",
  "reduction",
  "reductions._echelon_form",
  "reductions._echelon_form.__doc__",
  "reductions._is_echelon",
  "reductions._is_echelon.__doc__",
  "reductions._rank",
  "reductions._rank.__doc__",
  "reductions._rref",
  "reductions._rref.__doc__",
  "ref_list",
  "refine_pixels",
  "rejoin",
  "remove_literal",
  "remove_matelement",
  "remove_something",
  "removethis",
  "rep",
  "repeat_string_cond",
  "repl",
  "repl_match",
  "replace",
  "replace_dummies",
  "replacer",
  "replie",
  "repr.ReprPrinter",
  "representing_matrix",
  "res",
  "residue_ntheory._sqrt_mod_prime_power",
  "residue_ntheory.is_quad_residue",
  "residue_ntheory.jacobi_symbol",
  "residue_ntheory.legendre_symbol",
  "residue_ntheory.polynomial_congruence",
  "restore_floats",
  "result",
  "result.add",
  "result.parameters",
  "return_generator",
  "rev",
  "rewrite",
  "rf",
  "ri",
  "right",
  "ring",
  "ring.clone",
  "ring.dmp_LC",
  "ring.domain",
  "ring.domain.domain",
  "ring.domain.gcd",
  "ring.domain.gens",
  "ring.domain.get_field",
  "ring.domain.one",
  "ring.domain.ring",
  "ring.domain.zero",
  "ring.from_dense",
  "ring.gens",
  "ring.ground_new",
  "ring.ngens",
  "ring.one",
  "ring.symbols",
  "ring.to_field",
  "ring.zero",
  "rischDE",
  "rl",
  "rl.subs",
  "rmatch",
  "rmzeros",
  "roots",
  "roots.append",
  "roots_fun",
  "rotatingCalipers",
  "row_swap",
  "rs_func",
  "rule",
  "rule.__class__",
  "rule.u",
  "rule.v_step",
  "rule_gamma",
  "rules.Transform",
  "runners.CCompilerRunner",
  "runners.CppCompilerRunner",
  "runners.FortranCompilerRunner",
  "rv.cdf",
  "rv.cdf.items",
  "rv.density",
  "rv.expectation",
  "rv.probability",
  "rv.pspace",
  "s",
  "s.an.formula",
  "s.bn.formula.subs",
  "s.bn.variables",
  "s3",
  "s3.add",
  "s3.subs",
  "s_check",
  "safe_remove",
  "safe_rl",
  "sage.all",
  "sage.all.I",
  "sage.all.Integer",
  "sage.all.NaN",
  "sage.all.RealNumber",
  "sage.all.UnsignedInfinityRing.gen",
  "sage.all.abs_symbolic",
  "sage.all.bessel_I",
  "sage.all.bessel_J",
  "sage.all.bessel_K",
  "sage.all.bessel_Y",
  "sage.all.catalan",
  "sage.all.cos_integral",
  "sage.all.cosh_integral",
  "sage.all.csch",
  "sage.all.derivative",
  "sage.all.dirac_delta",
  "sage.all.e",
  "sage.all.elliptic_kc",
  "sage.all.euler_gamma",
  "sage.all.exp_integral_e",
  "sage.all.falling_factorial",
  "sage.all.function",
  "sage.all.gamma",
  "sage.all.golden_ratio",
  "sage.all.heaviside",
  "sage.all.hypergeometric",
  "sage.all.imag_part",
  "sage.all.integral",
  "sage.all.kronecker_delta",
  "sage.all.log_gamma",
  "sage.all.oo",
  "sage.all.pi",
  "sage.all.real_part",
  "sage.all.rising_factorial",
  "sage.all.sech",
  "sage.all.sgn",
  "sage.all.sin_integral",
  "sage.all.sinh_integral",
  "sage.all.spherical_harmonic",
  "sage.all.var",
  "sage.symbolic.expression.Expression",
  "sall",
  "sample",
  "sbs",
  "scipy.optimize.newton",
  "scipy.sparse",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.linalg.inv",
  "scipy.special.sph_jn",
  "scipy.special.spherical_jn",
  "scipy.stats",
  "scipy.stats.geom",
  "scipy.stats.geom.rvs",
  "scipy.stats.invgamma",
  "scipy.stats.invgamma.rvs",
  "scipy.stats.invgauss",
  "scipy.stats.invgauss.rvs",
  "scipy.stats.logser",
  "scipy.stats.logser.rvs",
  "scipy.stats.poisson",
  "scipy.stats.poisson.rvs",
  "scipy.stats.skellam",
  "scipy.stats.skellam.rvs",
  "scipy.stats.yulesimon",
  "scipy.stats.yulesimon.rvs",
  "scipy.stats.zipf",
  "scipy.stats.zipf.rvs",
  "scipy_fn",
  "sec",
  "select",
  "set._eval_evalf",
  "set._inf",
  "set._sup",
  "set.as_relational",
  "set.base_sets",
  "set.contains",
  "set.inf",
  "set.intersection",
  "set.is_Complement",
  "set.is_Intersection",
  "set.is_ProductSet",
  "set.is_Union",
  "set.is_empty",
  "set.is_finite_set",
  "set.is_iterable",
  "set.lamda.expr",
  "set.lamda.variables",
  "set.sup",
  "set.union",
  "set_label_position",
  "set_work_len",
  "setd",
  "setl",
  "setr",
  "sets.EmptySet",
  "sets.FiniteSet",
  "sets.Set",
  "sets.Union",
  "setu",
  "sf",
  "sh",
  "shift",
  "shorter",
  "shutil",
  "shutil.copy",
  "shutil.copyfile",
  "shutil.copystat",
  "shutil.move",
  "shutil.rmtree",
  "sign_invariant",
  "signal",
  "signal.SIGALRM",
  "signal.alarm",
  "signal.signal",
  "signlog",
  "simp",
  "simp_hyp",
  "simp_pows",
  "simpler_inverse",
  "simplify.bottom_up",
  "simplify_logic",
  "sinc",
  "single_var",
  "singleton.S",
  "singleton.S.Catalan",
  "singleton.S.ComplexInfinity",
  "singleton.S.EulerGamma",
  "singleton.S.Exp1",
  "singleton.S.GoldenRatio",
  "singleton.S.Half",
  "singleton.S.IdentityFunction",
  "singleton.S.ImaginaryUnit",
  "singleton.S.ImaginaryUnit.is_extended_real",
  "singleton.S.Infinity",
  "singleton.S.NaN",
  "singleton.S.NaN.is_infinite",
  "singleton.S.Naturals0",
  "singleton.S.NegativeInfinity",
  "singleton.S.NegativeOne",
  "singleton.S.One",
  "singleton.S.One.sort_key",
  "singleton.S.Pi",
  "singleton.S.Pi.is_integer",
  "singleton.S.TribonacciConstant",
  "singleton.S.UniversalSet",
  "singleton.S.Zero",
  "singleton.S.false",
  "singleton.S.true",
  "singleton.Singleton",
  "sink",
  "sm",
  "solve_ics",
  "solve_linear_system",
  "solve_x",
  "solve_y",
  "solvefunc",
  "solvefunc.get_general_solution",
  "solver",
  "solvercls",
  "solvercls.has_integral",
  "solvers._LDLsolve",
  "solvers._LDLsolve.__doc__",
  "solvers._LUsolve",
  "solvers._LUsolve.__doc__",
  "solvers._QRsolve",
  "solvers._QRsolve.__doc__",
  "solvers._cholesky_solve",
  "solvers._cholesky_solve.__doc__",
  "solvers._diagonal_solve",
  "solvers._diagonal_solve.__doc__",
  "solvers._gauss_jordan_solve",
  "solvers._gauss_jordan_solve.__doc__",
  "solvers._lower_triangular_solve",
  "solvers._lower_triangular_solve.__doc__",
  "solvers._lower_triangular_solve_sparse",
  "solvers._pinv_solve",
  "solvers._pinv_solve.__doc__",
  "solvers._solve",
  "solvers._solve.__doc__",
  "solvers._solve_least_squares",
  "solvers._solve_least_squares.__doc__",
  "solvers._upper_triangular_solve",
  "solvers._upper_triangular_solve.__doc__",
  "solvers._upper_triangular_solve_sparse",
  "solveset",
  "solveset_real",
  "some_function",
  "sort",
  "sorted_compo",
  "sorted_recursive",
  "space",
  "space.values",
  "sparse.MutableSparseMatrix",
  "sparse_eye",
  "sparse_zeros",
  "sparsetools.banded",
  "split",
  "split_list",
  "split_pos_code",
  "split_real_imag",
  "square_factor",
  "srange",
  "ssym",
  "staircase",
  "start",
  "startswith",
  "stat",
  "stat.S_IREAD",
  "stat.S_IWRITE",
  "stat.S_IXUSR",
  "state",
  "state_class",
  "statement",
  "statement_half",
  "stdNormalcdf",
  "step",
  "stop",
  "str.StrPrinter",
  "str.StrPrinter._print_Function",
  "str.StrPrinter._print_Symbol",
  "str.join",
  "str.maketrans",
  "str.rstrip",
  "str.sstr",
  "str.strip",
  "str_signature",
  "string",
  "string.Template",
  "string.ascii_letters",
  "string.ascii_letters.index",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "string.digits",
  "string.printable",
  "string.whitespace",
  "stringify_func",
  "strslice",
  "strtype",
  "struct",
  "struct.calcsize",
  "struct.unpack",
  "sub_args",
  "sub_expr",
  "sub_term",
  "subprocess",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
  "subs",
  "subscheck.sub_func_doit",
  "subspaces._columnspace",
  "subspaces._columnspace.__doc__",
  "subspaces._nullspace",
  "subspaces._nullspace.__doc__",
  "subspaces._orthogonalize",
  "subspaces._orthogonalize.__doc__",
  "subspaces._rowspace",
  "subspaces._rowspace.__doc__",
  "sum.append",
  "sum.function",
  "sum.limits",
  "sum.subs",
  "summations._dummy_with_inherited_properties_concrete",
  "sym",
  "symbol.Dummy",
  "symbol.Symbol",
  "symbol.Wild",
  "symbol._filter_assumptions",
  "symbol.symbols",
  "symbols_list",
  "symengine.Add",
  "symengine.AppliedUndef",
  "symengine.Basic",
  "symengine.Derivative",
  "symengine.E",
  "symengine.Function",
  "symengine.I",
  "symengine.ImmutableMatrix",
  "symengine.Integer",
  "symengine.Matrix",
  "symengine.MatrixBase",
  "symengine.Mul",
  "symengine.Rational",
  "symengine.S",
  "symengine.Symbol",
  "symengine.SympifyError",
  "symengine.acos",
  "symengine.acosh",
  "symengine.acot",
  "symengine.acoth",
  "symengine.acsc",
  "symengine.asec",
  "symengine.asin",
  "symengine.asinh",
  "symengine.atan",
  "symengine.atanh",
  "symengine.cos",
  "symengine.cosh",
  "symengine.cot",
  "symengine.coth",
  "symengine.csc",
  "symengine.diag",
  "symengine.diff",
  "symengine.exp",
  "symengine.expand",
  "symengine.eye",
  "symengine.gamma",
  "symengine.lambdify",
  "symengine.lib.symengine_wrapper.gcd",
  "symengine.log",
  "symengine.ones",
  "symengine.pi",
  "symengine.sec",
  "symengine.sin",
  "symengine.sinh",
  "symengine.sqrt",
  "symengine.symarray",
  "symengine.symbols",
  "symengine.sympify",
  "symengine.tan",
  "symengine.tanh",
  "symengine.var",
  "symengine.zeros",
  "sympify.SympifyError",
  "sympify._convert_numpy_types",
  "sympify._is_numpy_instance",
  "sympify._sympify",
  "sympify.converter",
  "sympify.sympify",
  "sympify_nested_list",
  "sympy.Add._combine_inverse",
  "sympy.Add._from_args",
  "sympy.Add.fromiter",
  "sympy.Add.make_args",
  "sympy.AtomicExpr.__new__",
  "sympy.Basic.__hash__",
  "sympy.Basic.__new__",
  "sympy.Basic._compare_pretty",
  "sympy.Basic._constructor_postprocessor_mapping",
  "sympy.Basic._eval_derivative_n_times",
  "sympy.Basic.compare",
  "sympy.CRootOf.all_roots",
  "sympy.Catalan._evalf",
  "sympy.Catalan.evalf",
  "sympy.Catalan.rewrite",
  "sympy.Derivative._sort_variable_count",
  "sympy.E._evalf",
  "sympy.E.evalf",
  "sympy.E.expand",
  "sympy.E.n",
  "sympy.E.round",
  "sympy.EulerGamma._evalf",
  "sympy.EulerGamma.evalf",
  "sympy.EulerGamma.round",
  "sympy.Expr.__mul__",
  "sympy.Expr.__new__",
  "sympy.Expr.__rmul__",
  "sympy.Expr._eval_adjoint",
  "sympy.Expr._from_mpmath",
  "sympy.Float._new",
  "sympy.GoldenRatio._evalf",
  "sympy.GoldenRatio.evalf",
  "sympy.GoldenRatio.expand",
  "sympy.GoldenRatio.rewrite",
  "sympy.I._to_mpmath",
  "sympy.I.as_ordered_terms",
  "sympy.I.as_real_imag",
  "sympy.I.atoms",
  "sympy.I.conjugate",
  "sympy.I.doit",
  "sympy.I.evalf",
  "sympy.I.expand",
  "sympy.I.extract_multiplicatively",
  "sympy.I.intersect",
  "sympy.I.is_Mul",
  "sympy.I.is_Rational",
  "sympy.I.is_complex",
  "sympy.I.is_extended_real",
  "sympy.I.is_finite",
  "sympy.I.is_imaginary",
  "sympy.I.is_irrational",
  "sympy.I.is_nonnegative",
  "sympy.I.is_positive",
  "sympy.I.is_real",
  "sympy.I.is_subset",
  "sympy.I.is_zero",
  "sympy.I.match",
  "sympy.I.n",
  "sympy.I.rewrite",
  "sympy.I.round",
  "sympy.I.simplify",
  "sympy.I.subs",
  "sympy.ImmutableDenseMatrix.ones",
  "sympy.Integral.__new__",
  "sympy.Intersection._handle_finite_sets",
  "sympy.Interval.Lopen",
  "sympy.Interval.Ropen",
  "sympy.Interval.open",
  "sympy.MatMul.fromiter",
  "sympy.Matrix.__mul__",
  "sympy.Matrix.__new__",
  "sympy.Matrix.eye",
  "sympy.Matrix.orthogonalize",
  "sympy.Matrix.zeros",
  "sympy.MatrixSymbol.from_index_summation",
  "sympy.Mul._combine_inverse",
  "sympy.Mul._from_args",
  "sympy.Mul.flatten",
  "sympy.Mul.fromiter",
  "sympy.Mul.make_args",
  "sympy.N.base_scalars",
  "sympy.N.base_vectors",
  "sympy.N.bidiagonal_decomposition",
  "sympy.N.bidiagonalize",
  "sympy.Pi",
  "sympy.Point.is_collinear",
  "sympy.Poly.new",
  "sympy.Pow._eval_derivative",
  "sympy.PurePoly.new",
  "sympy.Q.complex",
  "sympy.Q.complex_elements",
  "sympy.Q.composite",
  "sympy.Q.diagonal",
  "sympy.Q.even",
  "sympy.Q.fullrank",
  "sympy.Q.imaginary",
  "sympy.Q.integer",
  "sympy.Q.integer_elements",
  "sympy.Q.invertible",
  "sympy.Q.irrational",
  "sympy.Q.is_true",
  "sympy.Q.lower_triangular",
  "sympy.Q.negative",
  "sympy.Q.nonnegative",
  "sympy.Q.nonpositive",
  "sympy.Q.nonzero",
  "sympy.Q.odd",
  "sympy.Q.orthogonal",
  "sympy.Q.positive",
  "sympy.Q.positive.rcall",
  "sympy.Q.positive_definite",
  "sympy.Q.prime",
  "sympy.Q.rational",
  "sympy.Q.real",
  "sympy.Q.real.rcall",
  "sympy.Q.real_elements",
  "sympy.Q.singular",
  "sympy.Q.square",
  "sympy.Q.symmetric",
  "sympy.Q.triangular",
  "sympy.Q.unit_triangular",
  "sympy.Q.unitary",
  "sympy.Q.upper_triangular",
  "sympy.Q.zero",
  "sympy.QQ.algebraic_field",
  "sympy.QQ.frac_field",
  "sympy.QQ.get_field",
  "sympy.QQ.old_poly_ring",
  "sympy.QQ.poly_ring",
  "sympy.RR.almosteq",
  "sympy.RR.old_poly_ring",
  "sympy.S.Catalan",
  "sympy.S.ComplexInfinity",
  "sympy.S.ComplexInfinity.is_number",
  "sympy.S.ComplexInfinity.is_rational_function",
  "sympy.S.ComplexInfinity.round",
  "sympy.S.Complexes",
  "sympy.S.Complexes.contains",
  "sympy.S.Complexes.intersect",
  "sympy.S.Complexes.union",
  "sympy.S.EmptySequence",
  "sympy.S.EmptySequence.coeff_mul",
  "sympy.S.EmptySequence.interval",
  "sympy.S.EmptySequence.length",
  "sympy.S.EmptySet",
  "sympy.S.EmptySet.as_relational",
  "sympy.S.EmptySet.boundary",
  "sympy.S.EmptySet.complement",
  "sympy.S.EmptySet.contains",
  "sympy.S.EmptySet.intersect",
  "sympy.S.EmptySet.is_EmptySet",
  "sympy.S.EmptySet.is_empty",
  "sympy.S.EmptySet.is_finite_set",
  "sympy.S.EmptySet.is_proper_subset",
  "sympy.S.EmptySet.is_subset",
  "sympy.S.EmptySet.is_superset",
  "sympy.S.EmptySet.issubset",
  "sympy.S.EmptySet.issuperset",
  "sympy.S.EmptySet.measure",
  "sympy.S.EulerGamma",
  "sympy.S.Exp1",
  "sympy.S.GoldenRatio",
  "sympy.S.GoldenRatio.expand",
  "sympy.S.Half",
  "sympy.S.Half.as_content_primitive",
  "sympy.S.Half.as_numer_denom",
  "sympy.S.Half.atoms",
  "sympy.S.Half.cofactors",
  "sympy.S.Half.extract_multiplicatively",
  "sympy.S.Half.gcd",
  "sympy.S.Half.lcm",
  "sympy.S.Half.simplify",
  "sympy.S.Half.subs",
  "sympy.S.IdentityFunction",
  "sympy.S.ImaginaryUnit",
  "sympy.S.Infinity",
  "sympy.S.Infinity.as_content_primitive",
  "sympy.S.Infinity.as_numer_denom",
  "sympy.S.Infinity.is_number",
  "sympy.S.Infinity.is_rational",
  "sympy.S.Infinity.is_rational_function",
  "sympy.S.Infinity.primitive",
  "sympy.S.Infinity.round",
  "sympy.S.Integers",
  "sympy.S.Integers.intersect",
  "sympy.S.Integers.intersection",
  "sympy.S.Integers.is_subset",
  "sympy.S.NaN",
  "sympy.S.NaN.is_number",
  "sympy.S.NaN.is_rational",
  "sympy.S.NaN.is_rational_function",
  "sympy.S.NaN.round",
  "sympy.S.Naturals",
  "sympy.S.Naturals.intersect",
  "sympy.S.Naturals.intersection",
  "sympy.S.Naturals.is_subset",
  "sympy.S.Naturals0",
  "sympy.S.Naturals0.is_subset",
  "sympy.S.NegativeInfinity",
  "sympy.S.NegativeInfinity.is_number",
  "sympy.S.NegativeInfinity.is_rational",
  "sympy.S.NegativeInfinity.is_rational_function",
  "sympy.S.NegativeInfinity.round",
  "sympy.S.NegativeOne",
  "sympy.S.One",
  "sympy.S.One.free_symbols",
  "sympy.S.One.is_polar",
  "sympy.S.One.lseries",
  "sympy.S.One.round",
  "sympy.S.One.simplify",
  "sympy.S.Pi",
  "sympy.S.Pi.evalf",
  "sympy.S.Pi.is_finite",
  "sympy.S.Pi.is_polynomial",
  "sympy.S.Rationals",
  "sympy.S.Rationals.boundary",
  "sympy.S.Rationals.closure",
  "sympy.S.Rationals.inf",
  "sympy.S.Rationals.is_closed",
  "sympy.S.Rationals.is_open",
  "sympy.S.Rationals.is_subset",
  "sympy.S.Rationals.sup",
  "sympy.S.Reals",
  "sympy.S.Reals.as_relational",
  "sympy.S.Reals.flatten",
  "sympy.S.Reals.intersect",
  "sympy.S.Reals.is_subset",
  "sympy.S.TribonacciConstant",
  "sympy.S.UniversalSet",
  "sympy.S.UniversalSet.complement",
  "sympy.S.Zero",
  "sympy.S.Zero.as_coeff_Mul",
  "sympy.S.Zero.as_content_primitive",
  "sympy.S.Zero.as_independent",
  "sympy.S.Zero.is_zero",
  "sympy.S.Zero.lseries",
  "sympy.S.Zero.primitive",
  "sympy.S.Zero.replace",
  "sympy.S.Zero.round",
  "sympy.S.append",
  "sympy.S.change_index",
  "sympy.S.col_del",
  "sympy.S.col_swap",
  "sympy.S.det",
  "sympy.S.false",
  "sympy.S.index",
  "sympy.S.is_convergent",
  "sympy.S.order",
  "sympy.S.remove",
  "sympy.S.reorder",
  "sympy.S.reorder_limit",
  "sympy.S.row_del",
  "sympy.S.simplify",
  "sympy.S.subs",
  "sympy.S.true",
  "sympy.Symbol.__new__",
  "sympy.Symbol.__xnew__",
  "sympy.TribonacciConstant._evalf",
  "sympy.TribonacciConstant.evalf",
  "sympy.TribonacciConstant.expand",
  "sympy.TribonacciConstant.rewrite",
  "sympy.Tuple.__radd__",
  "sympy.Tuple.fromiter",
  "sympy.ZZ.frac_field",
  "sympy.ZZ.invert",
  "sympy.ZZ.old_poly_ring",
  "sympy.ZZ.zero",
  "sympy.__dict__",
  "sympy.__init__.DeprecatedImportModule",
  "sympy.__init__.__all__",
  "sympy.__init__.__sympy_debug",
  "sympy.__init__.enable_warnings",
  "sympy.abc.A",
  "sympy.abc.B",
  "sympy.abc.H",
  "sympy.abc.H.evalf",
  "sympy.abc.R",
  "sympy.abc.Z",
  "sympy.abc.a",
  "sympy.abc.a.T",
  "sympy.abc.a.__div__",
  "sympy.abc.a.__rdiv__",
  "sympy.abc.a._eval_interval",
  "sympy.abc.a._new_rawargs",
  "sympy.abc.a._svg",
  "sympy.abc.a.add",
  "sympy.abc.a.args",
  "sympy.abc.a.args_cnc",
  "sympy.abc.a.as_expr",
  "sympy.abc.a.as_numer_denom",
  "sympy.abc.a.closing_angle",
  "sympy.abc.a.collect",
  "sympy.abc.a.cols",
  "sympy.abc.a.diagonalize",
  "sympy.abc.a.diff",
  "sympy.abc.a.div",
  "sympy.abc.a.doit",
  "sympy.abc.a.dot",
  "sympy.abc.a.eq",
  "sympy.abc.a.equals",
  "sympy.abc.a.evalf",
  "sympy.abc.a.expand",
  "sympy.abc.a.extract",
  "sympy.abc.a.extract_additively",
  "sympy.abc.a.extract_multiplicatively",
  "sympy.abc.a.fill",
  "sympy.abc.a.func",
  "sympy.abc.a.gcd",
  "sympy.abc.a.get_diag_blocks",
  "sympy.abc.a.has",
  "sympy.abc.a.integrate",
  "sympy.abc.a.intersection",
  "sympy.abc.a.inv",
  "sympy.abc.a.is_Mul",
  "sympy.abc.a.is_Number",
  "sympy.abc.a.is_commutative",
  "sympy.abc.a.is_diagonalizable",
  "sympy.abc.a.is_hermitian",
  "sympy.abc.a.is_lower",
  "sympy.abc.a.is_nilpotent",
  "sympy.abc.a.is_number",
  "sympy.abc.a.is_subset",
  "sympy.abc.a.is_symbolic",
  "sympy.abc.a.is_upper",
  "sympy.abc.a.lcm",
  "sympy.abc.a.mul",
  "sympy.abc.a.multiply_elementwise",
  "sympy.abc.a.n",
  "sympy.abc.a.normal",
  "sympy.abc.a.origin",
  "sympy.abc.a.orthogonal_direction",
  "sympy.abc.a.pow",
  "sympy.abc.a.quo",
  "sympy.abc.a.radsimp",
  "sympy.abc.a.rem",
  "sympy.abc.a.round",
  "sympy.abc.a.rows",
  "sympy.abc.a.shape",
  "sympy.abc.a.simplify",
  "sympy.abc.a.smallest_angle_between",
  "sympy.abc.a.subs",
  "sympy.abc.a.xreplace",
  "sympy.abc.alpha",
  "sympy.abc.b",
  "sympy.abc.b.as_expr",
  "sympy.abc.b.as_numer_denom",
  "sympy.abc.b.closing_angle",
  "sympy.abc.b.collect",
  "sympy.abc.b.cols",
  "sympy.abc.b.expand",
  "sympy.abc.b.get_diag_blocks",
  "sympy.abc.b.inv",
  "sympy.abc.b.is_Integer",
  "sympy.abc.b.is_subset",
  "sympy.abc.b.pow",
  "sympy.abc.b.radsimp",
  "sympy.abc.b.rows",
  "sympy.abc.b.shape",
  "sympy.abc.b.subs",
  "sympy.abc.beta",
  "sympy.abc.c",
  "sympy.abc.c.as_immutable",
  "sympy.abc.c.as_numer_denom",
  "sympy.abc.c.collect",
  "sympy.abc.c.cols",
  "sympy.abc.c.get_diag_blocks",
  "sympy.abc.c.inv",
  "sympy.abc.c.rows",
  "sympy.abc.d",
  "sympy.abc.d.is_extended_nonnegative",
  "sympy.abc.d.is_integer",
  "sympy.abc.d.is_nonnegative",
  "sympy.abc.d.is_odd",
  "sympy.abc.d.is_positive",
  "sympy.abc.d.is_real",
  "sympy.abc.e",
  "sympy.abc.e.is_Pow",
  "sympy.abc.epsilon",
  "sympy.abc.f",
  "sympy.abc.f.diff",
  "sympy.abc.f.subs",
  "sympy.abc.g",
  "sympy.abc.gamma",
  "sympy.abc.h",
  "sympy.abc.i",
  "sympy.abc.i.append",
  "sympy.abc.i.n",
  "sympy.abc.j",
  "sympy.abc.j.append",
  "sympy.abc.k",
  "sympy.abc.l",
  "sympy.abc.lamda",
  "sympy.abc.m",
  "sympy.abc.m.charpoly",
  "sympy.abc.m.conjugate",
  "sympy.abc.m.det",
  "sympy.abc.mu",
  "sympy.abc.mu.expand",
  "sympy.abc.n",
  "sympy.abc.n.as_ordered_factors",
  "sympy.abc.n.charpoly",
  "sympy.abc.n.coeff",
  "sympy.abc.n.conjugate",
  "sympy.abc.n.could_extract_minus_sign",
  "sympy.abc.n.round",
  "sympy.abc.n.subs",
  "sympy.abc.nu",
  "sympy.abc.o",
  "sympy.abc.omega",
  "sympy.abc.p",
  "sympy.abc.p.as_expr",
  "sympy.abc.p.coeff",
  "sympy.abc.p.coeff_monomial",
  "sympy.abc.phi",
  "sympy.abc.q",
  "sympy.abc.q.get_domain",
  "sympy.abc.r",
  "sympy.abc.r._get_interval",
  "sympy.abc.r._reset",
  "sympy.abc.r.eval_rational",
  "sympy.abc.r.free_symbols",
  "sympy.abc.r.is_imaginary",
  "sympy.abc.r.is_number",
  "sympy.abc.r.n",
  "sympy.abc.s",
  "sympy.abc.s.inv",
  "sympy.abc.t",
  "sympy.abc.t.exp",
  "sympy.abc.t.powsimp",
  "sympy.abc.t.simplify",
  "sympy.abc.t.subs",
  "sympy.abc.tau",
  "sympy.abc.theta",
  "sympy.abc.u",
  "sympy.abc.u.is_Integer",
  "sympy.abc.u.is_Symbol",
  "sympy.abc.v",
  "sympy.abc.w",
  "sympy.abc.w.n",
  "sympy.abc.x",
  "sympy.abc.x._diff_wrt",
  "sympy.abc.x._eval_interval",
  "sympy.abc.x.analytic_func",
  "sympy.abc.x.args",
  "sympy.abc.x.args_cnc",
  "sympy.abc.x.as_base_exp",
  "sympy.abc.x.as_coeff_Add",
  "sympy.abc.x.as_coeff_Mul",
  "sympy.abc.x.as_coeff_add",
  "sympy.abc.x.as_coeff_exponent",
  "sympy.abc.x.as_coeff_mul",
  "sympy.abc.x.as_coefficients_dict",
  "sympy.abc.x.as_content_primitive",
  "sympy.abc.x.as_independent",
  "sympy.abc.x.as_leading_term",
  "sympy.abc.x.as_numer_denom",
  "sympy.abc.x.as_ordered_factors",
  "sympy.abc.x.as_ordered_terms",
  "sympy.abc.x.as_powers_dict",
  "sympy.abc.x.atoms",
  "sympy.abc.x.cancel",
  "sympy.abc.x.coeff",
  "sympy.abc.x.collect",
  "sympy.abc.x.cols",
  "sympy.abc.x.combsimp",
  "sympy.abc.x.cos",
  "sympy.abc.x.could_extract_minus_sign",
  "sympy.abc.x.count_ops",
  "sympy.abc.x.diff",
  "sympy.abc.x.equals",
  "sympy.abc.x.evalf",
  "sympy.abc.x.exp",
  "sympy.abc.x.expand",
  "sympy.abc.x.expr",
  "sympy.abc.x.extract_additively",
  "sympy.abc.x.extract_leading_order",
  "sympy.abc.x.extract_multiplicatively",
  "sympy.abc.x.factor",
  "sympy.abc.x.free_symbols",
  "sympy.abc.x.func",
  "sympy.abc.x.getO",
  "sympy.abc.x.get_exact",
  "sympy.abc.x.get_field",
  "sympy.abc.x.get_ring",
  "sympy.abc.x.getn",
  "sympy.abc.x.has",
  "sympy.abc.x.has_assoc_Field",
  "sympy.abc.x.has_assoc_Ring",
  "sympy.abc.x.inject",
  "sympy.abc.x.integrate",
  "sympy.abc.x.is_Add",
  "sympy.abc.x.is_Integer",
  "sympy.abc.x.is_Mul",
  "sympy.abc.x.is_Piecewise",
  "sympy.abc.x.is_Pow",
  "sympy.abc.x.is_algebraic",
  "sympy.abc.x.is_constant",
  "sympy.abc.x.is_even",
  "sympy.abc.x.is_integer",
  "sympy.abc.x.is_irrational",
  "sympy.abc.x.is_noninteger",
  "sympy.abc.x.is_number",
  "sympy.abc.x.is_odd",
  "sympy.abc.x.is_polynomial",
  "sympy.abc.x.is_positive",
  "sympy.abc.x.is_prime",
  "sympy.abc.x.is_rational",
  "sympy.abc.x.is_rational_function",
  "sympy.abc.x.is_real",
  "sympy.abc.x.is_transcendental",
  "sympy.abc.x.leadterm",
  "sympy.abc.x.limit",
  "sympy.abc.x.lseries",
  "sympy.abc.x.match",
  "sympy.abc.x.my_member",
  "sympy.abc.x.n",
  "sympy.abc.x.name",
  "sympy.abc.x.nseries",
  "sympy.abc.x.powsimp",
  "sympy.abc.x.primitive",
  "sympy.abc.x.ratsimp",
  "sympy.abc.x.removeO",
  "sympy.abc.x.replace",
  "sympy.abc.x.rewrite",
  "sympy.abc.x.round",
  "sympy.abc.x.rows",
  "sympy.abc.x.series",
  "sympy.abc.x.shape",
  "sympy.abc.x.simplify",
  "sympy.abc.x.sin",
  "sympy.abc.x.subs",
  "sympy.abc.x.together",
  "sympy.abc.x.unify",
  "sympy.abc.x.unify_with_symbols",
  "sympy.abc.y",
  "sympy.abc.y.apart",
  "sympy.abc.y.args",
  "sympy.abc.y.args_cnc",
  "sympy.abc.y.as_base_exp",
  "sympy.abc.y.as_coeff_Add",
  "sympy.abc.y.as_coeff_Mul",
  "sympy.abc.y.as_coeff_add",
  "sympy.abc.y.as_coeff_mul",
  "sympy.abc.y.as_coefficients_dict",
  "sympy.abc.y.as_content_primitive",
  "sympy.abc.y.as_independent",
  "sympy.abc.y.as_numer_denom",
  "sympy.abc.y.as_powers_dict",
  "sympy.abc.y.atoms",
  "sympy.abc.y.coeff",
  "sympy.abc.y.combsimp",
  "sympy.abc.y.could_extract_minus_sign",
  "sympy.abc.y.diff",
  "sympy.abc.y.expand",
  "sympy.abc.y.extract_additively",
  "sympy.abc.y.extract_multiplicatively",
  "sympy.abc.y.get_exact",
  "sympy.abc.y.get_field",
  "sympy.abc.y.get_ring",
  "sympy.abc.y.has",
  "sympy.abc.y.has_assoc_Field",
  "sympy.abc.y.has_assoc_Ring",
  "sympy.abc.y.is_algebraic",
  "sympy.abc.y.is_algebraic_expr",
  "sympy.abc.y.is_even",
  "sympy.abc.y.is_integer",
  "sympy.abc.y.is_irrational",
  "sympy.abc.y.is_noninteger",
  "sympy.abc.y.is_number",
  "sympy.abc.y.is_odd",
  "sympy.abc.y.is_polynomial",
  "sympy.abc.y.is_positive",
  "sympy.abc.y.is_prime",
  "sympy.abc.y.is_rational",
  "sympy.abc.y.is_rational_function",
  "sympy.abc.y.is_transcendental",
  "sympy.abc.y.leadterm",
  "sympy.abc.y.lseries",
  "sympy.abc.y.n",
  "sympy.abc.y.nseries",
  "sympy.abc.y.powsimp",
  "sympy.abc.y.primitive",
  "sympy.abc.y.ratsimp",
  "sympy.abc.y.replace",
  "sympy.abc.y.series",
  "sympy.abc.y.simplify",
  "sympy.abc.y.subs",
  "sympy.abc.y.together",
  "sympy.abc.y.unify",
  "sympy.abc.y.unify_with_symbols",
  "sympy.abc.z",
  "sympy.abc.z.args",
  "sympy.abc.z.as_base_exp",
  "sympy.abc.z.as_numer_denom",
  "sympy.abc.z.as_powers_dict",
  "sympy.abc.z.coeff",
  "sympy.abc.z.conjugate",
  "sympy.abc.z.det",
  "sympy.abc.z.equals",
  "sympy.abc.z.expand",
  "sympy.abc.z.getO",
  "sympy.abc.z.has",
  "sympy.abc.z.is_positive",
  "sympy.abc.z.leadterm",
  "sympy.abc.z.normal",
  "sympy.abc.z.powsimp",
  "sympy.abc.z.removeO",
  "sympy.abc.z.simplify",
  "sympy.abc.z.subs",
  "sympy.acos.nargs",
  "sympy.acot.nargs",
  "sympy.add",
  "sympy.add.Add",
  "sympy.arg.args",
  "sympy.arg.base",
  "sympy.arg.base.free_symbols",
  "sympy.arg.compute_leading_term",
  "sympy.arg.exp",
  "sympy.arg.expr",
  "sympy.arg.is_Order",
  "sympy.arg.is_Pow",
  "sympy.arg.is_finite",
  "sympy.arg.is_zero",
  "sympy.arg.match",
  "sympy.arg.subs",
  "sympy.asin.nargs",
  "sympy.assumptions.Q.H",
  "sympy.assumptions.Q.algebraic",
  "sympy.assumptions.Q.antihermitian",
  "sympy.assumptions.Q.col_del",
  "sympy.assumptions.Q.commutative",
  "sympy.assumptions.Q.complex",
  "sympy.assumptions.Q.complex_elements",
  "sympy.assumptions.Q.composite",
  "sympy.assumptions.Q.diagonal",
  "sympy.assumptions.Q.even",
  "sympy.assumptions.Q.extended_real",
  "sympy.assumptions.Q.finite",
  "sympy.assumptions.Q.fullrank",
  "sympy.assumptions.Q.hermitian",
  "sympy.assumptions.Q.imaginary",
  "sympy.assumptions.Q.integer",
  "sympy.assumptions.Q.integer_elements",
  "sympy.assumptions.Q.invertible",
  "sympy.assumptions.Q.irrational",
  "sympy.assumptions.Q.is_true",
  "sympy.assumptions.Q.lower_triangular",
  "sympy.assumptions.Q.mersenne",
  "sympy.assumptions.Q.my_key",
  "sympy.assumptions.Q.negative",
  "sympy.assumptions.Q.nonnegative",
  "sympy.assumptions.Q.nonpositive",
  "sympy.assumptions.Q.nonzero",
  "sympy.assumptions.Q.odd",
  "sympy.assumptions.Q.orthogonal",
  "sympy.assumptions.Q.positive",
  "sympy.assumptions.Q.positive_definite",
  "sympy.assumptions.Q.prime",
  "sympy.assumptions.Q.rational",
  "sympy.assumptions.Q.real",
  "sympy.assumptions.Q.real_elements",
  "sympy.assumptions.Q.row_del",
  "sympy.assumptions.Q.square",
  "sympy.assumptions.Q.symmetric",
  "sympy.assumptions.Q.transcendental",
  "sympy.assumptions.Q.unitary",
  "sympy.assumptions.Q.upper_triangular",
  "sympy.assumptions.Q.zero",
  "sympy.assumptions.ask.Q.algebraic",
  "sympy.assumptions.ask.Q.antihermitian",
  "sympy.assumptions.ask.Q.commutative",
  "sympy.assumptions.ask.Q.complex",
  "sympy.assumptions.ask.Q.complex_elements",
  "sympy.assumptions.ask.Q.composite",
  "sympy.assumptions.ask.Q.diagonal",
  "sympy.assumptions.ask.Q.even",
  "sympy.assumptions.ask.Q.extended_real",
  "sympy.assumptions.ask.Q.finite",
  "sympy.assumptions.ask.Q.fullrank",
  "sympy.assumptions.ask.Q.hermitian",
  "sympy.assumptions.ask.Q.imaginary",
  "sympy.assumptions.ask.Q.infinite",
  "sympy.assumptions.ask.Q.integer",
  "sympy.assumptions.ask.Q.integer_elements",
  "sympy.assumptions.ask.Q.invertible",
  "sympy.assumptions.ask.Q.irrational",
  "sympy.assumptions.ask.Q.is_true",
  "sympy.assumptions.ask.Q.lower_triangular",
  "sympy.assumptions.ask.Q.negative",
  "sympy.assumptions.ask.Q.nonnegative",
  "sympy.assumptions.ask.Q.nonpositive",
  "sympy.assumptions.ask.Q.nonzero",
  "sympy.assumptions.ask.Q.normal",
  "sympy.assumptions.ask.Q.odd",
  "sympy.assumptions.ask.Q.orthogonal",
  "sympy.assumptions.ask.Q.positive",
  "sympy.assumptions.ask.Q.positive_definite",
  "sympy.assumptions.ask.Q.prime",
  "sympy.assumptions.ask.Q.rational",
  "sympy.assumptions.ask.Q.real",
  "sympy.assumptions.ask.Q.real_elements",
  "sympy.assumptions.ask.Q.singular",
  "sympy.assumptions.ask.Q.square",
  "sympy.assumptions.ask.Q.symmetric",
  "sympy.assumptions.ask.Q.transcendental",
  "sympy.assumptions.ask.Q.triangular",
  "sympy.assumptions.ask.Q.unit_triangular",
  "sympy.assumptions.ask.Q.unitary",
  "sympy.assumptions.ask.Q.upper_triangular",
  "sympy.assumptions.ask.Q.zero",
  "sympy.assumptions.assume.global_assumptions.add",
  "sympy.assumptions.assume.global_assumptions.clear",
  "sympy.assumptions.assume.global_assumptions.remove",
  "sympy.assumptions.handlers.CommonHandler.AlwaysFalse",
  "sympy.assumptions.handlers.CommonHandler.AlwaysNone",
  "sympy.assumptions.handlers.CommonHandler.AlwaysTrue",
  "sympy.atan.nargs",
  "sympy.atan2.nargs",
  "sympy.carmichael.find_carmichael_numbers_in_range",
  "sympy.carmichael.find_first_n_carmichaels",
  "sympy.carmichael.is_carmichael",
  "sympy.carmichael.is_prime",
  "sympy.codegen.ast.Pointer.deduced",
  "sympy.codegen.ast.complex128.cast_check",
  "sympy.codegen.ast.complex128.items",
  "sympy.codegen.ast.complex64.cast_check",
  "sympy.codegen.ast.complex64.items",
  "sympy.codegen.ast.float128.decimal_dig",
  "sympy.codegen.ast.float128.dig",
  "sympy.codegen.ast.float128.eps",
  "sympy.codegen.ast.float128.max",
  "sympy.codegen.ast.float128.max_exponent",
  "sympy.codegen.ast.float128.min_exponent",
  "sympy.codegen.ast.float128.nbits",
  "sympy.codegen.ast.float128.nexp",
  "sympy.codegen.ast.float128.nmant",
  "sympy.codegen.ast.float128.tiny",
  "sympy.codegen.ast.float16.decimal_dig",
  "sympy.codegen.ast.float16.dig",
  "sympy.codegen.ast.float16.eps",
  "sympy.codegen.ast.float16.max",
  "sympy.codegen.ast.float16.max_exponent",
  "sympy.codegen.ast.float16.min_exponent",
  "sympy.codegen.ast.float16.tiny",
  "sympy.codegen.ast.float32.cast_check",
  "sympy.codegen.ast.float32.decimal_dig",
  "sympy.codegen.ast.float32.dig",
  "sympy.codegen.ast.float32.eps",
  "sympy.codegen.ast.float32.max",
  "sympy.codegen.ast.float32.max_exponent",
  "sympy.codegen.ast.float32.min_exponent",
  "sympy.codegen.ast.float32.tiny",
  "sympy.codegen.ast.float64.args",
  "sympy.codegen.ast.float64.cast_check",
  "sympy.codegen.ast.float64.cast_nocheck",
  "sympy.codegen.ast.float64.decimal_dig",
  "sympy.codegen.ast.float64.dig",
  "sympy.codegen.ast.float64.eps",
  "sympy.codegen.ast.float64.func",
  "sympy.codegen.ast.float64.max",
  "sympy.codegen.ast.float64.max_exponent",
  "sympy.codegen.ast.float64.min_exponent",
  "sympy.codegen.ast.float64.tiny",
  "sympy.codegen.ast.float80.cast_check",
  "sympy.codegen.ast.float80.decimal_dig",
  "sympy.codegen.ast.float80.dig",
  "sympy.codegen.ast.float80.eps",
  "sympy.codegen.ast.float80.max",
  "sympy.codegen.ast.float80.max_exponent",
  "sympy.codegen.ast.float80.min_exponent",
  "sympy.codegen.ast.float80.tiny",
  "sympy.codegen.ast.int8.cast_check",
  "sympy.codegen.ast.intc.args",
  "sympy.codegen.ast.intc.name",
  "sympy.codegen.ast.integer.cast_check",
  "sympy.codegen.ast.none.args",
  "sympy.codegen.ast.none.func",
  "sympy.codegen.ast.none.is_Atom",
  "sympy.codegen.ast.uint8.cast_check",
  "sympy.combinatorics.Permutation._af_new",
  "sympy.combinatorics.Permutation.rmul",
  "sympy.combinatorics.Permutation.rmul_with_af",
  "sympy.combinatorics.coset_table.CosetTable.coset_table_max_limit",
  "sympy.combinatorics.coset_table.CosetTable.max_stack_size",
  "sympy.combinatorics.free_groups.free_group.dtype",
  "sympy.combinatorics.free_groups.free_group.generators",
  "sympy.combinatorics.free_groups.free_group.identity",
  "sympy.combinatorics.permutations.Permutation.print_cyclic",
  "sympy.combinatorics.polyhedron.cube.array_form",
  "sympy.combinatorics.polyhedron.cube.corners",
  "sympy.combinatorics.polyhedron.cube.cyclic_form",
  "sympy.combinatorics.polyhedron.cube.edges",
  "sympy.combinatorics.polyhedron.cube.pgroup",
  "sympy.combinatorics.polyhedron.cube.pgroup.make_perm",
  "sympy.combinatorics.polyhedron.cube.reset",
  "sympy.combinatorics.polyhedron.cube.rotate",
  "sympy.combinatorics.polyhedron.tetrahedron.pgroup.base",
  "sympy.combinatorics.polyhedron.tetrahedron.pgroup.minimal_block",
  "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.__new__",
  "sympy.concrete.expr_with_limits.AddWithLimits.free_symbols.fget",
  "sympy.core.Add._from_args",
  "sympy.core.Add.fromiter",
  "sympy.core.Add.make_args",
  "sympy.core.AtomicExpr.__new__",
  "sympy.core.Basic.__hash__",
  "sympy.core.Basic.__new__",
  "sympy.core.Basic._constructor_postprocessor_mapping",
  "sympy.core.Basic._eval_derivative_n_times",
  "sympy.core.Catalan.evalf",
  "sympy.core.Catalan.n",
  "sympy.core.EulerGamma.evalf",
  "sympy.core.Expr.__new__",
  "sympy.core.Float._new",
  "sympy.core.Function.fdiff",
  "sympy.core.GoldenRatio.evalf",
  "sympy.core.I._eval_evalf",
  "sympy.core.I.exp",
  "sympy.core.I.expand",
  "sympy.core.I.is_imaginary",
  "sympy.core.I.is_real",
  "sympy.core.I.rewrite",
  "sympy.core.Mul._from_args",
  "sympy.core.Mul.fromiter",
  "sympy.core.Mul.make_args",
  "sympy.core.S.BooleanTrue",
  "sympy.core.S.Catalan",
  "sympy.core.S.ComplexInfinity",
  "sympy.core.S.Complexes",
  "sympy.core.S.EmptySet",
  "sympy.core.S.EulerGamma",
  "sympy.core.S.Exp1",
  "sympy.core.S.GoldenRatio",
  "sympy.core.S.Half",
  "sympy.core.S.Half.is_positive",
  "sympy.core.S.IdentityFunction",
  "sympy.core.S.ImaginaryUnit",
  "sympy.core.S.ImaginaryUnit.is_Integer",
  "sympy.core.S.ImaginaryUnit.is_extended_real",
  "sympy.core.S.ImaginaryUnit.is_real",
  "sympy.core.S.Infinity",
  "sympy.core.S.Infinity.as_base_exp",
  "sympy.core.S.Infinity.is_extended_negative",
  "sympy.core.S.Integers",
  "sympy.core.S.NaN",
  "sympy.core.S.NaN.is_infinite",
  "sympy.core.S.Naturals0",
  "sympy.core.S.NegativeInfinity",
  "sympy.core.S.NegativeOne",
  "sympy.core.S.NegativeOne.is_composite",
  "sympy.core.S.NegativeOne.is_positive",
  "sympy.core.S.NegativeOne.is_prime",
  "sympy.core.S.One",
  "sympy.core.S.One.append",
  "sympy.core.S.One.as_numer_denom",
  "sympy.core.S.One.is_nonnegative",
  "sympy.core.S.One.is_positive",
  "sympy.core.S.One.is_prime",
  "sympy.core.S.One.n",
  "sympy.core.S.Pi",
  "sympy.core.S.Pi.is_imaginary",
  "sympy.core.S.Pi.is_integer",
  "sympy.core.S.Pi.is_rational",
  "sympy.core.S.Pi.is_real",
  "sympy.core.S.Pi.n",
  "sympy.core.S.Reals",
  "sympy.core.S.TribonacciConstant",
  "sympy.core.S.UniversalSet",
  "sympy.core.S.Zero",
  "sympy.core.S.Zero.equals",
  "sympy.core.S.Zero.is_composite",
  "sympy.core.S.Zero.is_positive",
  "sympy.core.S.Zero.is_prime",
  "sympy.core.S.false",
  "sympy.core.S.true",
  "sympy.core.S.zero",
  "sympy.core.Symbol._sanitize",
  "sympy.core.Tuple.__new__",
  "sympy.core.add.Add._from_args",
  "sympy.core.add.Add.make_args",
  "sympy.core.backend.Basic.__new__",
  "sympy.core.backend.S.Half",
  "sympy.core.backend.S.One",
  "sympy.core.backend.S.Zero",
  "sympy.core.basic.S.Half",
  "sympy.core.basic.S.ImaginaryUnit",
  "sympy.core.basic.S.NegativeOne",
  "sympy.core.basic.S.One",
  "sympy.core.basic.S.One.append",
  "sympy.core.basic.S.Pi",
  "sympy.core.basic.S.Pi.is_positive",
  "sympy.core.compatibility.builtins._",
  "sympy.core.compatibility.builtins.__import__",
  "sympy.core.compatibility.builtins.complex",
  "sympy.core.compatibility.builtins.float",
  "sympy.core.compatibility.builtins.int",
  "sympy.core.compatibility.gmpy.bincoef",
  "sympy.core.compatibility.gmpy.fac",
  "sympy.core.compatibility.gmpy.gcd",
  "sympy.core.compatibility.gmpy.mpq",
  "sympy.core.compatibility.gmpy.mpz",
  "sympy.core.compatibility.int_info.bits_per_digit",
  "sympy.core.compatibility.unicode.join",
  "sympy.core.containers.Tuple.fromiter",
  "sympy.core.core.BasicMeta.__new__",
  "sympy.core.core.all_classes.add",
  "sympy.core.core.all_classes.remove",
  "sympy.core.diff.is_commutative",
  "sympy.core.diff.is_zero",
  "sympy.core.expr.Expr.__new__",
  "sympy.core.expr.Expr.evalf.__doc__",
  "sympy.core.function.Function._eval_subs",
  "sympy.core.mul.Mul._from_args",
  "sympy.core.mul.Mul.fromiter",
  "sympy.core.mul.Mul.make_args",
  "sympy.core.numbers.I.append",
  "sympy.core.numbers.I.diff",
  "sympy.core.numbers.I.subs",
  "sympy.core.numbers.oo.as_set",
  "sympy.core.numbers.pi.diff",
  "sympy.core.numbers.pi.is_integer",
  "sympy.core.oo.is_extended_positive",
  "sympy.core.parameters.global_parameters.evaluate",
  "sympy.core.pi._eval_evalf",
  "sympy.core.pi.doit",
  "sympy.core.pi.evalf",
  "sympy.core.pi.is_Rational",
  "sympy.core.pi.is_extended_positive",
  "sympy.core.pi.is_real",
  "sympy.core.pi.is_zero",
  "sympy.core.pi.n",
  "sympy.core.singleton.S.ComplexInfinity",
  "sympy.core.singleton.S.Complexes",
  "sympy.core.singleton.S.EmptySequence",
  "sympy.core.singleton.S.EmptySet",
  "sympy.core.singleton.S.EulerGamma",
  "sympy.core.singleton.S.Exp1",
  "sympy.core.singleton.S.Exp1.is_nonnegative",
  "sympy.core.singleton.S.Exp1.is_nonpositive",
  "sympy.core.singleton.S.Exp1.is_positive",
  "sympy.core.singleton.S.GoldenRatio",
  "sympy.core.singleton.S.Half",
  "sympy.core.singleton.S.Half.is_even",
  "sympy.core.singleton.S.Half.is_integer",
  "sympy.core.singleton.S.Half.is_odd",
  "sympy.core.singleton.S.IdentityFunction",
  "sympy.core.singleton.S.ImaginaryUnit",
  "sympy.core.singleton.S.Infinity",
  "sympy.core.singleton.S.Integers",
  "sympy.core.singleton.S.MySingleton",
  "sympy.core.singleton.S.NaN",
  "sympy.core.singleton.S.Naturals",
  "sympy.core.singleton.S.Naturals0",
  "sympy.core.singleton.S.NegativeInfinity",
  "sympy.core.singleton.S.NegativeOne",
  "sympy.core.singleton.S.One",
  "sympy.core.singleton.S.One.is_nonnegative",
  "sympy.core.singleton.S.One.is_zero",
  "sympy.core.singleton.S.One.sort_key",
  "sympy.core.singleton.S.Pi",
  "sympy.core.singleton.S.Pi._eval_nseries",
  "sympy.core.singleton.S.Pi.is_integer",
  "sympy.core.singleton.S.Pi.is_rational",
  "sympy.core.singleton.S.Rationals",
  "sympy.core.singleton.S.Reals",
  "sympy.core.singleton.S.TestSingleton",
  "sympy.core.singleton.S.TribonacciConstant",
  "sympy.core.singleton.S.UniversalSet",
  "sympy.core.singleton.S.Zero",
  "sympy.core.singleton.S.Zero.has",
  "sympy.core.singleton.S._classes_to_install",
  "sympy.core.singleton.S.append",
  "sympy.core.singleton.S.false",
  "sympy.core.singleton.S.false.binary_symbols",
  "sympy.core.singleton.S.false.is_Atom",
  "sympy.core.singleton.S.true",
  "sympy.core.singleton.S.true.binary_symbols",
  "sympy.core.singleton.S.true.is_Atom",
  "sympy.cos.nargs",
  "sympy.cot.nargs",
  "sympy.csc.nargs",
  "sympy.deprecated.class_registry.C.Add",
  "sympy.diff.__doc__",
  "sympy.diff.equals",
  "sympy.diff.subs",
  "sympy.diffgeom.rn.R2.dr",
  "sympy.diffgeom.rn.R2.dtheta",
  "sympy.diffgeom.rn.R2.dx",
  "sympy.diffgeom.rn.R2.dy",
  "sympy.diffgeom.rn.R2.e_r",
  "sympy.diffgeom.rn.R2.e_theta.rcall",
  "sympy.diffgeom.rn.R2.e_x",
  "sympy.diffgeom.rn.R2.e_y",
  "sympy.diffgeom.rn.R2.r",
  "sympy.diffgeom.rn.R2.r.rcall",
  "sympy.diffgeom.rn.R2.theta",
  "sympy.diffgeom.rn.R2.x",
  "sympy.diffgeom.rn.R2.x.rcall",
  "sympy.diffgeom.rn.R2.y",
  "sympy.diffgeom.rn.R2.y.rcall",
  "sympy.diffgeom.rn.R2_p.coord_tuple_transform_to",
  "sympy.diffgeom.rn.R2_p.jacobian",
  "sympy.diffgeom.rn.R2_p.point",
  "sympy.diffgeom.rn.R2_p.point_to_coords",
  "sympy.diffgeom.rn.R2_r.base_oneforms",
  "sympy.diffgeom.rn.R2_r.base_vectors",
  "sympy.diffgeom.rn.R2_r.coord_functions",
  "sympy.diffgeom.rn.R2_r.coord_tuple_transform_to",
  "sympy.diffgeom.rn.R2_r.point",
  "sympy.diffgeom.rn.R2_r.point_to_coords",
  "sympy.diffgeom.rn.R3_c.coord_tuple_transform_to",
  "sympy.diffgeom.rn.R3_r.coord_tuple_transform_to",
  "sympy.diffgeom.rn.R3_r.dx",
  "sympy.diffgeom.rn.R3_r.dy",
  "sympy.diffgeom.rn.R3_r.dz",
  "sympy.diffgeom.rn.R3_r.e_x",
  "sympy.diffgeom.rn.R3_r.e_y",
  "sympy.diffgeom.rn.R3_r.e_z",
  "sympy.diffgeom.rn.R3_r.x",
  "sympy.diffgeom.rn.R3_r.y",
  "sympy.diffgeom.rn.R3_r.z",
  "sympy.diffgeom.rn.R3_s.coord_tuple_transform_to",
  "sympy.evalf.N",
  "sympy.exp._evalf",
  "sympy.exp.args",
  "sympy.exp.is_Add",
  "sympy.exp.is_Integer",
  "sympy.exp.is_Rational",
  "sympy.exp.is_infinite",
  "sympy.exp.is_integer",
  "sympy.exp.is_negative",
  "sympy.exp.is_number",
  "sympy.exp.is_positive",
  "sympy.exp.p",
  "sympy.exp.q",
  "sympy.factor.__doc__",
  "sympy.factorial.__dict__",
  "sympy.functions.arg.has",
  "sympy.functions.elementary.complexes.adjoint.__name__",
  "sympy.functions.elementary.complexes.adjoint._sympyrepr",
  "sympy.functions.elementary.complexes.arg.args",
  "sympy.functions.elementary.complexes.arg.has",
  "sympy.functions.elementary.complexes.arg.is_Mul",
  "sympy.functions.elementary.complexes.arg.is_number",
  "sympy.functions.elementary.complexes.arg.is_polar",
  "sympy.functions.elementary.complexes.arg.is_positive",
  "sympy.functions.elementary.complexes.conjugate.args.is_Number",
  "sympy.functions.elementary.complexes.conjugate.as_coeff_Add",
  "sympy.functions.elementary.complexes.conjugate.as_leading_term",
  "sympy.functions.elementary.complexes.conjugate.as_two_terms",
  "sympy.functions.elementary.complexes.conjugate.base",
  "sympy.functions.elementary.complexes.conjugate.exp",
  "sympy.functions.elementary.complexes.conjugate.extract_additively",
  "sympy.functions.elementary.complexes.conjugate.free_symbols",
  "sympy.functions.elementary.complexes.conjugate.is_Add",
  "sympy.functions.elementary.complexes.conjugate.is_Mul",
  "sympy.functions.elementary.complexes.conjugate.is_Number",
  "sympy.functions.elementary.complexes.conjugate.is_Pow",
  "sympy.functions.elementary.complexes.conjugate.is_Rational",
  "sympy.functions.elementary.complexes.conjugate.is_extended_negative",
  "sympy.functions.elementary.complexes.conjugate.is_negative",
  "sympy.functions.elementary.complexes.conjugate.is_positive",
  "sympy.functions.elementary.complexes.conjugate.is_zero",
  "sympy.functions.elementary.complexes.conjugate.primitive",
  "sympy.functions.elementary.complexes.conjugate.subs",
  "sympy.functions.elementary.complexes.sign.count",
  "sympy.functions.elementary.exponential.exp.as_expr",
  "sympy.functions.exp.is_Integer",
  "sympy.functions.exp.is_integer",
  "sympy.functions.re.is_Number",
  "sympy.geometry.Line.angle_between",
  "sympy.geometry.Line.are_concurrent",
  "sympy.geometry.Line.is_parallel",
  "sympy.geometry.Line.is_perpendicular",
  "sympy.geometry.Line3D.angle_between",
  "sympy.geometry.Line3D.are_concurrent",
  "sympy.geometry.Line3D.is_perpendicular",
  "sympy.geometry.Plane.are_concurrent",
  "sympy.geometry.Point._normalize_dimension",
  "sympy.geometry.Point.are_coplanar",
  "sympy.geometry.Point.canberra_distance",
  "sympy.geometry.Point.distance",
  "sympy.geometry.Point.is_collinear",
  "sympy.geometry.Point.is_concyclic",
  "sympy.geometry.Point.midpoint",
  "sympy.geometry.Point.taxicab_distance",
  "sympy.geometry.Point2D.are_coplanar",
  "sympy.geometry.Point3D.are_collinear",
  "sympy.geometry.Point3D.are_coplanar",
  "sympy.geometry.Point3D.distance",
  "sympy.geometry.Point3D.midpoint",
  "sympy.im._mpf_",
  "sympy.im._to_mpmath",
  "sympy.im.expand",
  "sympy.im.has",
  "sympy.im.is_Float",
  "sympy.im.is_Integer",
  "sympy.im.is_number",
  "sympy.im.p",
  "sympy.integrals.rubi.rubi.rubi_integrate",
  "sympy.integrals.rubi.utility_function.exp",
  "sympy.integrals.rubi.utility_function.log",
  "sympy.integrals.rubi.utility_function.sympy_op_factory",
  "sympy.interactive.printing.init_printing.__doc__.split",
  "sympy.log.nargs",
  "sympy.logic.boolalg.And.make_args",
  "sympy.logic.boolalg.Boolean.__new__",
  "sympy.logic.boolalg.BooleanFunction.__new__",
  "sympy.logic.boolalg.Or.make_args",
  "sympy.logic.boolalg.false.as_set",
  "sympy.logic.boolalg.false.canonical",
  "sympy.logic.boolalg.false.negated",
  "sympy.logic.boolalg.true.as_set",
  "sympy.logic.boolalg.true.canonical",
  "sympy.logic.boolalg.true.is_Boolean",
  "sympy.logic.boolalg.true.negated",
  "sympy.matrices.ImmutableMatrix.eye",
  "sympy.matrices.ImmutableMatrix.ones",
  "sympy.matrices.ImmutableMatrix.zeros",
  "sympy.matrices.Matrix",
  "sympy.matrices.Matrix.diag",
  "sympy.matrices.Matrix.eye",
  "sympy.matrices.Matrix.hstack",
  "sympy.matrices.Matrix.irregular",
  "sympy.matrices.Matrix.jordan_block",
  "sympy.matrices.Matrix.orthogonalize",
  "sympy.matrices.Matrix.vstack",
  "sympy.matrices.Matrix.zeros",
  "sympy.matrices.MutableMatrix",
  "sympy.matrices.SparseMatrix.diag",
  "sympy.matrices.SparseMatrix.eye",
  "sympy.matrices.SparseMatrix.hstack",
  "sympy.matrices.SparseMatrix.vstack",
  "sympy.matrices.SparseMatrix.zeros",
  "sympy.matrices.dense.DenseMatrix.is_diagonalizable.__doc__",
  "sympy.matrices.dense.Matrix",
  "sympy.matrices.dense.Matrix.eye",
  "sympy.matrices.dense.Matrix.ones",
  "sympy.matrices.dense.MutableDenseMatrix.eye",
  "sympy.matrices.expressions.MatAdd.identity",
  "sympy.matrices.expressions.MatMul.fromiter",
  "sympy.matrices.expressions.MatrixExpr.__hash__",
  "sympy.matrices.expressions.MatrixExpr.__new__",
  "sympy.matrices.expressions.matmul.MatMul.identity",
  "sympy.matrices.sparse.SparseMatrix.is_diagonalizable.__doc__",
  "sympy.matrices.utilities._dotprodsimp_state.state",
  "sympy.nan.as_numer_denom",
  "sympy.nan.extract_additively",
  "sympy.nan.extract_multiplicatively",
  "sympy.ntheory.generate.sieve._list",
  "sympy.ntheory.generate.sieve._reset",
  "sympy.ntheory.generate.sieve.extend",
  "sympy.ntheory.generate.sieve.extend_to_no",
  "sympy.ntheory.generate.sieve.mobiusrange",
  "sympy.ntheory.generate.sieve.primerange",
  "sympy.ntheory.generate.sieve.search",
  "sympy.ntheory.generate.sieve.totientrange",
  "sympy.ntheory.sieve.primerange",
  "sympy.oo.as_coeff_Mul",
  "sympy.oo.as_coeff_mul",
  "sympy.oo.as_leading_term",
  "sympy.oo.as_numer_denom",
  "sympy.oo.ceiling",
  "sympy.oo.coeff",
  "sympy.oo.dummy_eq",
  "sympy.oo.evalf",
  "sympy.oo.extract_multiplicatively",
  "sympy.oo.floor",
  "sympy.oo.is_Add",
  "sympy.oo.is_Mul",
  "sympy.oo.is_Rational",
  "sympy.oo.is_algebraic",
  "sympy.oo.is_commutative",
  "sympy.oo.is_comparable",
  "sympy.oo.is_complex",
  "sympy.oo.is_composite",
  "sympy.oo.is_even",
  "sympy.oo.is_extended_negative",
  "sympy.oo.is_extended_nonnegative",
  "sympy.oo.is_extended_nonpositive",
  "sympy.oo.is_extended_nonzero",
  "sympy.oo.is_extended_positive",
  "sympy.oo.is_extended_real",
  "sympy.oo.is_finite",
  "sympy.oo.is_imaginary",
  "sympy.oo.is_infinite",
  "sympy.oo.is_integer",
  "sympy.oo.is_irrational",
  "sympy.oo.is_negative",
  "sympy.oo.is_noninteger",
  "sympy.oo.is_nonnegative",
  "sympy.oo.is_nonpositive",
  "sympy.oo.is_nonzero",
  "sympy.oo.is_number",
  "sympy.oo.is_odd",
  "sympy.oo.is_positive",
  "sympy.oo.is_prime",
  "sympy.oo.is_rational",
  "sympy.oo.is_real",
  "sympy.oo.is_transcendental",
  "sympy.oo.match",
  "sympy.oo.n",
  "sympy.oo.series",
  "sympy.oo.subs",
  "sympy.physics.hep.gamma_matrices.LorentzIndex.metric",
  "sympy.physics.mechanics.dynamicsymbols._t",
  "sympy.physics.quantum.Bra.__new__",
  "sympy.physics.quantum.Ket.__new__",
  "sympy.physics.quantum.Operator.__new__",
  "sympy.physics.quantum.cartesian.Px.hilbert_space",
  "sympy.physics.quantum.cartesian.X.hilbert_space",
  "sympy.physics.quantum.cartesian.Y.hilbert_space",
  "sympy.physics.quantum.cartesian.Z.hilbert_space",
  "sympy.physics.quantum.constants.hbar.evalf",
  "sympy.physics.quantum.constants.hbar.expand",
  "sympy.physics.quantum.constants.hbar.is_commutative",
  "sympy.physics.quantum.constants.hbar.is_irrational",
  "sympy.physics.quantum.constants.hbar.is_negative",
  "sympy.physics.quantum.constants.hbar.is_positive",
  "sympy.physics.quantum.constants.hbar.is_real",
  "sympy.physics.quantum.gate.S",
  "sympy.physics.quantum.matrixcache.matrix_cache.get_matrix",
  "sympy.physics.quantum.operator.UnitaryOperator._eval_args",
  "sympy.physics.quantum.spin.J2.matrix_element",
  "sympy.physics.quantum.spin.Jminus.matrix_element",
  "sympy.physics.quantum.spin.Jminus.rewrite",
  "sympy.physics.quantum.spin.Jplus.matrix_element",
  "sympy.physics.quantum.spin.Jplus.rewrite",
  "sympy.physics.quantum.spin.Jx.rewrite",
  "sympy.physics.quantum.spin.Jy.rewrite",
  "sympy.physics.quantum.state.State.__new__",
  "sympy.physics.units.DimensionSystem.equivalent_dims",
  "sympy.physics.units.K.simplify",
  "sympy.physics.units.UnitSystem._quantity_dimensional_equivalence_map_global",
  "sympy.physics.units.UnitSystem._quantity_scale_factors_global",
  "sympy.physics.units.UnitSystem.get_default_unit_system",
  "sympy.physics.units.UnitSystem.get_unit_system",
  "sympy.physics.units.cm.simplify",
  "sympy.physics.units.definitions.byte.convert_to",
  "sympy.physics.units.definitions.day.convert_to",
  "sympy.physics.units.definitions.dimension_definitions.length.has_integer_powers",
  "sympy.physics.units.definitions.dimension_definitions.length.name",
  "sympy.physics.units.definitions.dimension_definitions.length.symbol",
  "sympy.physics.units.definitions.dimension_definitions.time.name",
  "sympy.physics.units.definitions.kibibyte.convert_to",
  "sympy.physics.units.definitions.km.args",
  "sympy.physics.units.definitions.km.func",
  "sympy.physics.units.definitions.km.scale_factor",
  "sympy.physics.units.definitions.km.set_global_relative_scale_factor",
  "sympy.physics.units.definitions.m.integrate",
  "sympy.physics.units.definitions.m.is_Relational",
  "sympy.physics.units.definitions.s.integrate",
  "sympy.physics.units.definitions.s.is_Relational",
  "sympy.physics.units.definitions.speed_of_light.convert_to",
  "sympy.physics.units.definitions.unit_definitions.ampere",
  "sympy.physics.units.definitions.unit_definitions.centimeter",
  "sympy.physics.units.definitions.unit_definitions.coulomb",
  "sympy.physics.units.definitions.unit_definitions.coulomb_constant",
  "sympy.physics.units.definitions.unit_definitions.farad",
  "sympy.physics.units.definitions.unit_definitions.gram",
  "sympy.physics.units.definitions.unit_definitions.henry",
  "sympy.physics.units.definitions.unit_definitions.joule",
  "sympy.physics.units.definitions.unit_definitions.meter",
  "sympy.physics.units.definitions.unit_definitions.newton",
  "sympy.physics.units.definitions.unit_definitions.ohm",
  "sympy.physics.units.definitions.unit_definitions.second",
  "sympy.physics.units.definitions.unit_definitions.speed_of_light",
  "sympy.physics.units.definitions.unit_definitions.statcoulomb",
  "sympy.physics.units.definitions.unit_definitions.tesla",
  "sympy.physics.units.definitions.unit_definitions.volt",
  "sympy.physics.units.definitions.unit_definitions.weber",
  "sympy.physics.units.dimensions._QuantityMapper._quantity_dimension_global",
  "sympy.physics.units.e0.convert_to",
  "sympy.physics.units.kilo.simplify",
  "sympy.physics.units.kilometer.simplify",
  "sympy.physics.units.km.simplify",
  "sympy.physics.units.length.subs",
  "sympy.physics.units.m._new_rawargs",
  "sympy.physics.units.m.coeff",
  "sympy.physics.units.m.has",
  "sympy.physics.units.m.is_commutative",
  "sympy.physics.units.m.simplify",
  "sympy.physics.units.meter.equals",
  "sympy.physics.units.meter.free_symbols",
  "sympy.physics.units.meter.is_constant",
  "sympy.physics.units.meter.simplify",
  "sympy.physics.units.mm.simplify",
  "sympy.physics.units.prefixes.kibi.base",
  "sympy.physics.units.prefixes.kilo.base",
  "sympy.physics.units.s.has",
  "sympy.physics.units.s.round",
  "sympy.physics.units.speed_of_light.convert_to",
  "sympy.physics.units.systems.SI._collect_factor_and_dimension",
  "sympy.physics.units.systems.SI.get_dimension_system",
  "sympy.physics.units.systems.SI.get_dimensional_expr",
  "sympy.physics.units.systems.SI.set_quantity_dimension",
  "sympy.physics.units.systems.SI.set_quantity_scale_factor",
  "sympy.physics.units.systems.mks.MKS.extend",
  "sympy.physics.units.systems.mks.dimsys_length_weight_time.extend",
  "sympy.physics.units.systems.mksa.MKSA.extend",
  "sympy.physics.units.systems.mksa.dimsys_MKSA.extend",
  "sympy.physics.units.systems.si.dimsys_SI.get_dimensional_dependencies",
  "sympy.physics.units.systems.si.dimsys_SI.is_dimensionless",
  "sympy.physics.units.systems.si.dimsys_default.get_dimensional_dependencies",
  "sympy.physics.units.u0.convert_to",
  "sympy.physics.vector.Vector.simp",
  "sympy.physics.vector.dynamicsymbols._t",
  "sympy.physics.vector.functions.dynamicsymbols._str",
  "sympy.physics.vector.functions.dynamicsymbols._t",
  "sympy.physics.vector.printing.init_vprinting.__doc__",
  "sympy.physics.vector.vector.Vector.simp",
  "sympy.pi._evalf",
  "sympy.pi.analytic_func",
  "sympy.pi.args",
  "sympy.pi.as_coeff_exponent",
  "sympy.pi.as_leading_term",
  "sympy.pi.as_ordered_terms",
  "sympy.pi.atoms",
  "sympy.pi.canonical",
  "sympy.pi.equals",
  "sympy.pi.evalf",
  "sympy.pi.expand",
  "sympy.pi.extract_leading_order",
  "sympy.pi.is_algebraic",
  "sympy.pi.is_irrational",
  "sympy.pi.is_positive",
  "sympy.pi.is_rational",
  "sympy.pi.is_real",
  "sympy.pi.n",
  "sympy.pi.round",
  "sympy.pi.simplify",
  "sympy.plotting.plot.ScreenShot",
  "sympy.polys.Poly.from_list",
  "sympy.polys.QQ.frac_field",
  "sympy.polys.QQ.old_poly_ring",
  "sympy.polys.ZZ.old_poly_ring",
  "sympy.polys.densebasic.dmp_LC",
  "sympy.polys.densebasic.dmp_TC",
  "sympy.polys.densebasic.dup_LC",
  "sympy.polys.densebasic.dup_TC",
  "sympy.polys.domains.CC.frac_field",
  "sympy.polys.domains.EX.get_exact",
  "sympy.polys.domains.EX.get_field",
  "sympy.polys.domains.EX.get_ring",
  "sympy.polys.domains.EX.has_assoc_Field",
  "sympy.polys.domains.EX.has_assoc_Ring",
  "sympy.polys.domains.FF",
  "sympy.polys.domains.QQ",
  "sympy.polys.domains.QQ.algebraic_field",
  "sympy.polys.domains.QQ.convert",
  "sympy.polys.domains.QQ.frac_field",
  "sympy.polys.domains.QQ.from_sympy",
  "sympy.polys.domains.QQ.get_exact",
  "sympy.polys.domains.QQ.get_field",
  "sympy.polys.domains.QQ.get_ring",
  "sympy.polys.domains.QQ.has_assoc_Field",
  "sympy.polys.domains.QQ.has_assoc_Ring",
  "sympy.polys.domains.QQ.old_frac_field",
  "sympy.polys.domains.QQ.old_poly_ring",
  "sympy.polys.domains.QQ.poly_ring",
  "sympy.polys.domains.QQ.to_sympy",
  "sympy.polys.domains.QQ.zero",
  "sympy.polys.domains.RR.convert",
  "sympy.polys.domains.RR.dtype",
  "sympy.polys.domains.RR.frac_field",
  "sympy.polys.domains.RR.get_exact",
  "sympy.polys.domains.RR.get_field",
  "sympy.polys.domains.RR.get_ring",
  "sympy.polys.domains.RR.has_assoc_Field",
  "sympy.polys.domains.RR.has_assoc_Ring",
  "sympy.polys.domains.RR.to_rational",
  "sympy.polys.domains.RR.unify",
  "sympy.polys.domains.ZZ",
  "sympy.polys.domains.ZZ.algebraic_field",
  "sympy.polys.domains.ZZ.convert",
  "sympy.polys.domains.ZZ.frac_field",
  "sympy.polys.domains.ZZ.get_exact",
  "sympy.polys.domains.ZZ.get_field",
  "sympy.polys.domains.ZZ.get_ring",
  "sympy.polys.domains.ZZ.has_assoc_Field",
  "sympy.polys.domains.ZZ.has_assoc_Ring",
  "sympy.polys.domains.ZZ.inject",
  "sympy.polys.domains.ZZ.map",
  "sympy.polys.domains.ZZ.of_type",
  "sympy.polys.domains.ZZ.old_poly_ring",
  "sympy.polys.domains.ZZ.poly_ring",
  "sympy.polys.domains.ZZ.to_sympy",
  "sympy.polys.domains.ZZ.unify_with_symbols",
  "sympy.polys.domains.__init__.FF_gmpy",
  "sympy.polys.domains.__init__.FF_python",
  "sympy.polys.domains.__init__.QQ_gmpy",
  "sympy.polys.domains.__init__.QQ_python",
  "sympy.polys.domains.__init__.ZZ_gmpy",
  "sympy.polys.domains.__init__.ZZ_python",
  "sympy.polys.domains.__init__._GROUND_TYPES_MAP",
  "sympy.polys.domains.__init__.__all__",
  "sympy.polys.orderings.grevlex.is_global",
  "sympy.polys.orderings.grlex.is_global",
  "sympy.polys.orderings.igrlex.is_global",
  "sympy.polys.orderings.ilex.is_global",
  "sympy.polys.orderings.lex.is_global",
  "sympy.polys.poly.all_coeffs",
  "sympy.polys.poly.degree",
  "sympy.polys.polymatrix.PolyMatrix",
  "sympy.polys.polyoptions.All.postprocess",
  "sympy.polys.polyoptions.All.preprocess",
  "sympy.polys.polyoptions.Auto.preprocess",
  "sympy.polys.polyoptions.Expand.postprocess",
  "sympy.polys.polyoptions.Expand.preprocess",
  "sympy.polys.polyoptions.Field.postprocess",
  "sympy.polys.polyoptions.Field.preprocess",
  "sympy.polys.polyoptions.Formal.postprocess",
  "sympy.polys.polyoptions.Formal.preprocess",
  "sympy.polys.polyoptions.Frac.postprocess",
  "sympy.polys.polyoptions.Frac.preprocess",
  "sympy.polys.polyoptions.Gaussian.preprocess",
  "sympy.polys.polyoptions.Gen.postprocess",
  "sympy.polys.polyoptions.Gens.postprocess",
  "sympy.polys.polyoptions.Greedy.postprocess",
  "sympy.polys.polyoptions.Greedy.preprocess",
  "sympy.polys.polyoptions.Include.postprocess",
  "sympy.polys.polyoptions.Include.preprocess",
  "sympy.polys.polyoptions.Method.postprocess",
  "sympy.polys.polyoptions.Order.postprocess",
  "sympy.polys.polyoptions.Polys.postprocess",
  "sympy.polys.polyoptions.Polys.preprocess",
  "sympy.polys.polyoptions.Sort.postprocess",
  "sympy.polys.polyoptions.Split.preprocess",
  "sympy.polys.polyoptions.Strict.postprocess",
  "sympy.polys.polyoptions.Strict.preprocess",
  "sympy.polys.polyoptions.Symbols.postprocess",
  "sympy.polys.polyoptions.Symmetric.postprocess",
  "sympy.polys.polyoptions.Symmetric.preprocess",
  "sympy.polys.polyoptions.Wrt.postprocess",
  "sympy.polys.polyroots.roots.append",
  "sympy.polys.polytools.PurePoly.new",
  "sympy.polys.polytools.factor.diff",
  "sympy.polys.polytools.factor.free_symbols",
  "sympy.polys.polytools.factor.has",
  "sympy.polys.polytools.gcd.is_Number",
  "sympy.polys.polytools.gcd.is_Poly",
  "sympy.polys.polytools.gcd.is_zero",
  "sympy.polys.polytools.lcm.is_Number",
  "sympy.polys.polytools.lcm.is_Poly",
  "sympy.polys.polytools.lcm.is_one",
  "sympy.polys.polytools.poly.get_domain",
  "sympy.polys.rootoftools.CRootOf.clear_cache",
  "sympy.printing.codeprinter.CodePrinter._print_Add",
  "sympy.printing.codeprinter.CodePrinter._print_Float",
  "sympy.printing.codeprinter.CodePrinter._print_ImmutableSparseMatrix.__name__",
  "sympy.printing.codeprinter.CodePrinter._print_MutableSparseMatrix.__name__",
  "sympy.printing.codeprinter.CodePrinter._print_Pow",
  "sympy.printing.codeprinter.CodePrinter._print_not_supported.__name__",
  "sympy.printing.fcode.FCodePrinter._default_settings.copy",
  "sympy.printing.lambdarepr.NumExprPrinter._numexpr_functions.keys",
  "sympy.printing.latex.tex_greek_dictionary.keys",
  "sympy.printing.pretty.pretty_symbology.greek_unicode.get",
  "sympy.printing.pretty.stringpict.prettyForm.ADD",
  "sympy.printing.pretty.stringpict.prettyForm.FUNC",
  "sympy.printing.pretty.stringpict.prettyForm.LINE",
  "sympy.printing.pretty.stringpict.prettyForm.MUL",
  "sympy.printing.pretty.stringpict.prettyForm.NEG",
  "sympy.printing.pretty.stringpict.prettyForm.OPEN",
  "sympy.printing.pretty.stringpict.prettyForm.POW",
  "sympy.printing.pretty.stringpict.stringPict.LINE",
  "sympy.printing.pycode.AbstractPythonCodePrinter._default_settings",
  "sympy.printing.str.StrPrinter._print_MatrixBase.__name__",
  "sympy.printing.str.StrPrinter.doprint",
  "sympy.printing.theanocode.global_cache.clear",
  "sympy.printing.theanocode.global_cache.update",
  "sympy.re._mpf_",
  "sympy.re._to_mpmath",
  "sympy.re.expand",
  "sympy.re.has",
  "sympy.re.is_Float",
  "sympy.re.is_Integer",
  "sympy.re.is_number",
  "sympy.re.p",
  "sympy.sec.nargs",
  "sympy.series.limit.is_finite",
  "sympy.sets.Interval.Lopen",
  "sympy.sets.Interval.Ropen",
  "sympy.sets.Interval.open",
  "sympy.sets.sets.Set.__new__",
  "sympy.sieve.extend",
  "sympy.simplify.denom.as_coeff_mul",
  "sympy.simplify.simplify.__doc__",
  "sympy.simplify.trigsimp.__doc__",
  "sympy.sin.nargs",
  "sympy.stats.rv.PSpace.__new__",
  "sympy.symbols.pop",
  "sympy.tan.nargs",
  "sympy.tensor.array.Array.zeros",
  "sympy.tensor.array.dense_ndim_array.ImmutableDenseNDimArray.zeros",
  "sympy.tensor.array.dense_ndim_array.MutableDenseNDimArray.zeros",
  "sympy.tensor.array.sparse_ndim_array.ImmutableSparseNDimArray.zeros",
  "sympy.tensor.array.sparse_ndim_array.MutableSparseNDimArray.zeros",
  "sympy.tensor.tensor.TensAdd.fromiter",
  "sympy.tensor.tensor.TensExpr.__new__",
  "sympy.tensor.tensor.TensorManager._comm_i2symbol",
  "sympy.tensor.tensor.TensorManager._comm_symbols2i",
  "sympy.tensor.tensor.TensorManager.clear",
  "sympy.tensor.tensor.TensorManager.comm",
  "sympy.tensor.tensor.TensorManager.comm_i2symbol",
  "sympy.tensor.tensor.TensorManager.comm_symbols2i",
  "sympy.tensor.tensor.TensorManager.get_comm",
  "sympy.tensor.tensor.TensorManager.set_comm",
  "sympy.tensor.tensor.TensorManager.set_comms",
  "sympy.utilities.autowrap.CodeWrapper._module_counter",
  "sympy.utilities.lambdify.MATH_TRANSLATIONS.items",
  "sympy.utilities.lambdify.MPMATH_TRANSLATIONS.get",
  "sympy.utilities.lambdify.MPMATH_TRANSLATIONS.items",
  "sympy.utilities.lambdify.NUMPY_TRANSLATIONS.items",
  "sympy.utilities.lambdify.SCIPY_TRANSLATIONS.items",
  "sympy.utilities.mathml.__init__.add_mathml_headers",
  "sympy.utilities.mathml.__init__.apply_xsl",
  "sympy.vector.Dyadic.zero",
  "sympy.vector.Vector.zero",
  "sympy.vector.Vector.zero.cross",
  "sympy.vector.Vector.zero.dot",
  "sympy.vector.dyadic.Dyadic.zero",
  "sympy.vector.operators.gradient.__doc__",
  "sympy.vector.vector.Vector.zero",
  "sympy.vector.vector.Vector.zero.cross",
  "sympy.vector.vector.Vector.zero.doit",
  "sympy.vector.vector.Vector.zero.dot",
  "sympy.vector.vector.Vector.zero.magnitude",
  "sympy.vector.vector.Vector.zero.normalize",
  "sympy.vector.vector.VectorAdd.fromiter",
  "sympy.zoo.as_numer_denom",
  "sympy.zoo.ceiling",
  "sympy.zoo.floor",
  "sympy.zoo.is_Add",
  "sympy.zoo.is_Mul",
  "sympy_fn",
  "sympy_func",
  "sys",
  "sys._getframe",
  "sys._running_pytest",
  "sys.argv",
  "sys.builtin_module_names",
  "sys.displayhook",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.flags",
  "sys.hexversion",
  "sys.int_info",
  "sys.long_info",
  "sys.modules",
  "sys.modules.__dict__",
  "sys.path",
  "sys.path.append",
  "sys.path.insert",
  "sys.path.remove",
  "sys.platform",
  "sys.platform.lower",
  "sys.pypy_version_info",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.encoding",
  "sys.stdout.encoding.lower",
  "sys.stdout.flush",
  "sys.stdout.isatty",
  "sys.stdout.write",
  "sys.version_info",
  "sys.version_info.major",
  "t",
  "t.contract_metric",
  "t.free_symbols",
  "t.substitute_indices",
  "tN",
  "tableau2bsgs",
  "take",
  "tan",
  "tanh",
  "taylor_terms_per_coord",
  "temp",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile.mkdtemp",
  "tensor.array.Array",
  "tensor_metric",
  "tensor_prod",
  "teq",
  "term_div",
  "terms",
  "test",
  "test1",
  "test2",
  "test_cf",
  "test_different_forms",
  "test_equality",
  "test_func",
  "test_row",
  "test_simplification_numerically_function",
  "test_subterm",
  "test_table",
  "test_the_product",
  "test_the_sum",
  "test_this_file",
  "testit",
  "textwrap",
  "textwrap.dedent",
  "textwrap.fill",
  "textwrap.wrap",
  "tf",
  "the_call_method_is_overridden",
  "theano.Constant",
  "theano.sandbox.linalg",
  "theano.sandbox.linalg.det",
  "theano.sandbox.linalg.matrix_inverse",
  "theano.sandbox.linalg.trace",
  "theano.tensor.as_tensor_variable",
  "theano.tensor.complex",
  "theq_slice",
  "theta",
  "theta1",
  "threading.Event",
  "threading.Lock",
  "threading.RLock",
  "threading.Thread",
  "threading.local",
  "ti",
  "time",
  "time.perf_counter",
  "time.sleep",
  "time.time",
  "timeit",
  "timeit.Timer",
  "timeit.default_timer",
  "tmpadd",
  "tn",
  "to",
  "to_anf",
  "to_mathematica_index",
  "to_sympy",
  "tokenize.ENDMARKER",
  "tokenize.ERRORTOKEN",
  "tokenize.NAME",
  "tokenize.NEWLINE",
  "tokenize.NUMBER",
  "tokenize.OP",
  "tokenize.STRING",
  "tokenize.TokenError",
  "tokenize.generate_tokens",
  "tokenize.untokenize",
  "tol",
  "tominus",
  "top_rl",
  "torewrite",
  "tr",
  "trace",
  "trace.Trace",
  "trace.trace",
  "traceback",
  "traceback.format_exception",
  "traceback.print_exc",
  "trans_probs",
  "trans_probs.__getitem__",
  "trans_probs.shape",
  "trans_probs.tolist",
  "transform",
  "translate",
  "translate_data",
  "translate_literal",
  "transpose.Transpose",
  "transpose.transpose",
  "traverse",
  "traverse.top_down",
  "traverse_component",
  "tree",
  "trig_split",
  "trigsimpfunc",
  "try_meijerg",
  "try_non_polynomial_gcd",
  "try_non_polynomial_lcm",
  "try_shift",
  "tuple.__eq__",
  "type.__ne__",
  "type.__new__",
  "type.mro",
  "type_a.TypeA",
  "type_b.TypeB",
  "type_c.TypeC",
  "type_d.TypeD",
  "type_e.TypeE",
  "type_f.TypeF",
  "type_g.TypeG",
  "types",
  "types.FunctionType",
  "types.GeneratorType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "u",
  "u.data",
  "u.diff",
  "u.subs",
  "uf",
  "unfold",
  "unicodedata",
  "unicodedata.lookup",
  "unimplemented_expr",
  "unimplemented_expr_sup_sub",
  "uniq",
  "unitsystem.UnitSystem.get_unit_system",
  "unpack_lhs",
  "unpack_sol",
  "unreplace",
  "untillist",
  "unzip",
  "update",
  "update_ST",
  "update_mapping",
  "update_nu",
  "update_sets",
  "uppergamma",
  "user_function",
  "util.ArbitraryDepthGlob",
  "util.CompilerNotFoundError",
  "util.Glob",
  "util.convert_to",
  "util.copy",
  "util.create_bounds",
  "util.find_binary_of_command",
  "util.get_abspath",
  "util.glob_at_depth",
  "util.idiff",
  "util.import_module_from_file",
  "util.interpolate",
  "util.make_dirs",
  "util.new",
  "util.parse_option_string",
  "util.pyx_is_cplus",
  "util.rinterpolate",
  "util.sha256_of_file",
  "util.sha256_of_string",
  "util.unique_list",
  "util.update_bounds",
  "utilities._get_intermediate_simp",
  "utilities._get_intermediate_simp_bool",
  "utilities._is_zero_after_expand_mul",
  "utilities._iszero",
  "utils._toposort",
  "utils.expand_tuples",
  "utils.groupby",
  "v",
  "v._coord_sys",
  "v._coord_sys.base_vector",
  "v._coord_sys.dim",
  "v._index",
  "v.rcall",
  "v.subs",
  "valid",
  "validate",
  "var",
  "var_count_error",
  "vars.add",
  "vars.append",
  "vdiff",
  "vector.Vector",
  "vector.Vector.cross.__doc__",
  "vector.Vector.dot.__doc__",
  "vector.Vector.outer.__doc__",
  "vector.Vector.simp",
  "vector.VectorTypeError",
  "vector._check_vector",
  "verify_row_null_space",
  "vsin",
  "vsort",
  "vsort0",
  "w",
  "w.subs",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "warnings.warn_explicit",
  "weight",
  "wicks",
  "wp",
  "wrap_tuples_and_return",
  "wrapped",
  "wrapped_test_Permutation",
  "wrt_vector",
  "wrt_vector._index",
  "x",
  "x.args",
  "x.diff",
  "x.expand",
  "x.has",
  "x.is_even",
  "x.is_number",
  "x.subs",
  "x0",
  "x1",
  "x2",
  "x_axis_cut",
  "xi",
  "xml.dom.minidom",
  "xml.dom.minidom.Element",
  "xml.dom.minidom.Element.writexml",
  "xml.dom.minidom.Node",
  "xml.dom.minidom.Text",
  "xml.dom.minidom.Text.writexml",
  "xml.dom.minidom._write_data",
  "xreplace",
  "y",
  "y.append",
  "y.has",
  "y.sort",
  "y0",
  "y1",
  "y1_",
  "y_axis_cut",
  "yfcn",
  "yield_lseries",
  "yinc",
  "yn",
  "z",
  "zero_all_symbols",
  "zero_onelevel",
  "zero_uaux",
  "zero_udot_uaux",
  "zeros",
  "zeta"
 ],
 "deps": {
  "A": [],
  "A1": [],
  "AB": [],
  "APPLY": [],
  "AT": [],
  "ATNDeserializer": [],
  "AccumBounds": [],
  "ActivateTrig": [],
  "Add": [],
  "ArrayType": [],
  "B": [],
  "BA": [],
  "BM": [],
  "BadRepr": [],
  "Bar": [],
  "C": [],
  "C1": [],
  "C2": [],
  "CNF": [],
  "CalculusQ": [],
  "CartesianComplexRegion": [],
  "Chi": [],
  "Circle": [],
  "CodeGenClass": [],
  "CodeGenError": [],
  "CodeWrapperClass": [],
  "CodegenArrayTensorProduct": [],
  "CoefficientList": [],
  "CommonFactors": [],
  "Complement": [],
  "ComplexInterval": [],
  "Conv": [],
  "CustomClass1": [],
  "CustomClass2": [],
  "CustomPermutation": [],
  "CustomPrinter": [],
  "CustomStrPrinter": [],
  "Cython": [],
  "D": [],
  "DFA": [],
  "DIM_OF": [],
  "DMFdiff": [],
  "DMFsubs": [],
  "Dimension": [],
  "DirectSumHilbertSpace": [],
  "Dummy": [],
  "E": [],
  "EV": [],
  "EllipticCurvePoint": [],
  "Equivalent": [],
  "ExpandToSum": [],
  "Expression": [],
  "ExtElem": [],
  "F": [],
  "F1": [],
  "F1_1": [],
  "F1_1b": [],
  "F1_1c": [],
  "F2": [],
  "F3": [],
  "F5": [],
  "F7": [],
  "FCCW": [],
  "FCW": [],
  "FT": [],
  "Fake": [],
  "FiniteSet": [],
  "First": [],
  "FixSimplify": [],
  "Flatten": [],
  "Float": [],
  "Foo": [],
  "Formula": [],
  "FpGroup": [],
  "Fperp": [],
  "FracField": [],
  "FractionQ": [],
  "FreeGroup": [],
  "FunctionOfExponentialTest": [],
  "FunctionOfTanQ": [],
  "G": [],
  "GH": [],
  "G_Function": [],
  "Gamma": [],
  "Gamma2": [],
  "Gamma3": [],
  "GeneralizedBinomialParts": [],
  "GeneralizedTrinomialParts": [],
  "GroebnerBasis": [],
  "H": [],
  "HadamardPower": [],
  "Hm": [],
  "Hp": [],
  "Hyper_Function": [],
  "I5": [],
  "I5b": [],
  "I5c": [],
  "IFT": [],
  "ILT": [],
  "IMT": [],
  "IPython": [],
  "Identity": [],
  "Implies": [],
  "Index1": [],
  "Index2": [],
  "IndexedBase": [],
  "InnerProduct": [],
  "Int": [],
  "Integer": [],
  "Intersection": [],
  "InverseFunction": [],
  "IsNonPositiveInteger": [],
  "JxOp": [],
  "JyOp": [],
  "JzKet": [],
  "JzKetCoupled": [],
  "JzOp": [],
  "K": [],
  "K0": [],
  "KD": [],
  "L": [],
  "LE": [],
  "LHS_CEMS": [],
  "LT": [],
  "Level": [],
  "Li": [],
  "Limit": [],
  "Line": [],
  "ListedColormap": [],
  "Log": [],
  "M": [],
  "MGR": [],
  "MT": [],
  "MatAdd": [],
  "MatMul": [],
  "MatPow": [],
  "Matrix": [],
  "MatrixClass": [],
  "MatrixType": [],
  "MightyNumeric": [],
  "MockExpr": [],
  "Mod": [],
  "Mul": [],
  "MutableSparseMatrix": [],
  "My": [],
  "MyAssoc": [],
  "MyClass": [],
  "MyExpr": [],
  "MyFancyFCodePrinter": [],
  "MyFunc": [],
  "MyInt": [],
  "MyOp": [],
  "MyPrinter": [],
  "MyReferenceFrame": [],
  "MySingleton": [],
  "MySingleton_sub": [],
  "MySymbol": [],
  "MyType": [],
  "MyUnevaluatedOnFree": [],
  "NA": [],
  "NS": [],
  "NoViableAltException": [],
  "Node": [],
  "NonElementaryIntegral": [],
  "NormalizeLeadTermSigns": [],
  "Not": [],
  "NumericQ": [],
  "O": [],
  "Or": [],
  "OrderedQ": [],
  "P": [],
  "P1": [],
  "P2": [],
  "PIL": [],
  "PermGroup": [],
  "Permutation": [],
  "Phi": [],
  "PiPrinter": [],
  "Plm": [],
  "Point": [],
  "PolyRing": [],
  "PolynomialQuotient": [],
  "PolynomialRemainder": [],
  "Pow": [],
  "PredictionContextCache": [],
  "ProductQ": [],
  "ProductSet": [],
  "PyTestReporter": [],
  "Q": [],
  "Q1": [],
  "Qasm": [],
  "Qgate": [],
  "QuotientModule": [],
  "R": [],
  "RHS_CEMS": [],
  "RR2": [],
  "RandomSymbol": [],
  "Range": [],
  "Rational": [],
  "RationalFunctionQ": [],
  "RawText": [],
  "Rest": [],
  "Rt": [],
  "S": [],
  "SHOKet": [],
  "Segment": [],
  "Segment2D": [],
  "SeqAdd": [],
  "Shi": [],
  "SigmaZ": [],
  "SignOfFactor": [],
  "Signifier": [],
  "Simp": [],
  "SimpFixFactor": [],
  "SimplifyAntiderivative": [],
  "SimplifyTerm": [],
  "Sort": [],
  "SparseArrayType": [],
  "SpecialOp": [],
  "SplitProduct": [],
  "Ssugar": [],
  "StdOut": [],
  "StringIO": [],
  "SubClass": [],
  "Subs": [],
  "SumQ": [],
  "SymPyConsole": [],
  "SymPyDocTestRunner": [],
  "SymPyOutputChecker": [],
  "Symbol": [],
  "Symmetric": [],
  "SymmetricDifference": [],
  "T": [],
  "T1": [],
  "T2": [],
  "TP": [],
  "Tanh": [],
  "TensAdd": [],
  "TensMul": [],
  "TensorHead": [],
  "TensorIndex": [],
  "TensorPowerHilbertSpace": [],
  "TensorProductHilbertSpace": [],
  "TensorSymmetry": [],
  "Test": [],
  "Test1": [],
  "Test2": [],
  "Test3": [],
  "Test4": [],
  "Test5": [],
  "Test6": [],
  "TestAssocOp": [],
  "TestF": [],
  "TestMemoize": [],
  "TestSingleton": [],
  "TestTimeDepKet": [],
  "TogetherSimplify": [],
  "Transform": [],
  "TrigSimplifyAux": [],
  "Tuple2": [],
  "U": [],
  "UCCW": [],
  "UCW": [],
  "UndefinedFunction": [],
  "UnifySum": [],
  "UnimplementedExpr": [],
  "Union": [],
  "UnrecognizedCondition": [],
  "UnsameQ": [],
  "V": [],
  "V1": [],
  "V2": [],
  "Variable": [],
  "WignerD": [],
  "Wrapper": [],
  "X": [],
  "Xor": [],
  "Y": [],
  "YGate": [],
  "Z": [],
  "Z0": [],
  "Z1": [],
  "Z2": [],
  "Z3": [],
  "ZGate": [],
  "ZeroMatrix": [],
  "_Add": [],
  "_ITE": [],
  "_Mul": [],
  "_Pow": [],
  "_Q": [],
  "__builtin__": [],
  "__eq__": [],
  "__future__": [],
  "__my_hessian": [],
  "__my_jacobian": [],
  "__my_wronskian": [],
  "__refactor": [],
  "_a": [],
  "_abs": [],
  "_add_lists": [],
  "_align": [],
  "_ans": [],
  "_append_eq": [],
  "_append_new_soln": [],
  "_apply": [],
  "_apply_recursively_over_nested_lists": [],
  "_are_similar": [],
  "_aresame": [],
  "_as_base_q": [],
  "_bessel_simp_recursion": [],
  "_blessed": [],
  "_block": [],
  "_bottom_up_scan": [],
  "_bounded_convergent_test": [],
  "_build_push_indices_down_func_transformation": [],
  "_build_push_indices_up_func_transformation": [],
  "_c1": [],
  "_calc_limit": [],
  "_calc_limit_1": [],
  "_can_print_latex": [],
  "_canonical": [],
  "_cg_simp_sum": [],
  "_check": [],
  "_check_cg_simp": [],
  "_check_dyadic": [],
  "_check_exclude": [],
  "_check_frame": [],
  "_check_iter": [],
  "_check_vector": [],
  "_choose_one_to_keep": [],
  "_clean": [],
  "_clear": [],
  "_clip": [],
  "_cond": [],
  "_conditional_term_factoring": [],
  "_confignum_to_difflist": [],
  "_constant_renumber": [],
  "_convert": [],
  "_coord_to_index": [],
  "_cospi257": [],
  "_cov": [],
  "_define": [],
  "_deflation": [],
  "_degree": [],
  "_delete_cases": [],
  "_delta": [],
  "_denest_pow": [],
  "_derivation": [],
  "_det": [],
  "_diop_ternary_quadratic_normal": [],
  "_dirichlet_test": [],
  "_distribute": [],
  "_dmp_simplify_gcd": [],
  "_dn": [],
  "_do": [],
  "_do_dict": [],
  "_eis": [],
  "_enumerate_continuous_1D": [],
  "_eval": [],
  "_eval_endpoint": [],
  "_eval_simplify": [],
  "_eval_transpose": [],
  "_eval_trigsimp": [],
  "_expand": [],
  "_exponent": [],
  "_exponents_": [],
  "_extend_y0": [],
  "_extract_main_soln": [],
  "_factor_group_by_rels": [],
  "_factors": [],
  "_fermatCoords": [],
  "_field": [],
  "_final_coeffs": [],
  "_find_DN": [],
  "_find_conditions": [],
  "_find_opts": [],
  "_find_predicates": [],
  "_find_repeated": [],
  "_find_x": [],
  "_flatten": [],
  "_format_ineq": [],
  "_gather": [],
  "_gen": [],
  "_get_all_examples": [],
  "_get_bsgs": [],
  "_get_compar_comp": [],
  "_get_indices": [],
  "_get_mapping_from_subranks": [],
  "_get_mpmath_func": [],
  "_get_possible_outcomes": [],
  "_get_shape": [],
  "_get_subranks": [],
  "_get_trial_set": [],
  "_groebner": [],
  "_half": [],
  "_handle": [],
  "_handle_Integral": [],
  "_handle_for_oo": [],
  "_has_matcher": [],
  "_has_piecewise": [],
  "_has_simple_delta": [],
  "_has_square_roots": [],
  "_i": [],
  "_image": [],
  "_include_sign": [],
  "_integrate": [],
  "_interactive_traversal": [],
  "_invert": [],
  "_is_coeff": [],
  "_is_coprime_set": [],
  "_is_expandable_pow": [],
  "_is_form": [],
  "_is_int": [],
  "_is_one": [],
  "_is_simple_delta": [],
  "_is_subword": [],
  "_is_wrapper": [],
  "_iter0a": [],
  "_iter0b": [],
  "_iter1": [],
  "_iter2": [],
  "_iter3": [],
  "_iter4": [],
  "_join_lines": [],
  "_keep_coeff": [],
  "_label_wrap": [],
  "_len": [],
  "_linear": [],
  "_listener_autolev_antlr": [],
  "_lowercase_labels": [],
  "_makeDE": [],
  "_make_find_query": [],
  "_manualintegrate": [],
  "_matplotlib_wrapper": [],
  "_matrix_derivative": [],
  "_matrixify": [],
  "_meijerint_definite_4": [],
  "_minpoly_compose": [],
  "_mul_Dxi_b": [],
  "_mul_Sni_b": [],
  "_mul_dmp_diffop": [],
  "_mult_thm": [],
  "_my_unpolarify": [],
  "_mytype": [],
  "_n2": [],
  "_ncsplit": [],
  "_new_order_result": [],
  "_norm2": [],
  "_normalize": [],
  "_normalize_slices": [],
  "_num": [],
  "_number_blocks": [],
  "_ok_syms": [],
  "_one_vector": [],
  "_orbit": [],
  "_orbit_transversal": [],
  "_orbits": [],
  "_orientation": [],
  "_overlaps": [],
  "_p": [],
  "_parametrize_ternary_quadratic": [],
  "_pemexpand": [],
  "_permute_complexity_right": [],
  "_pgroup_of_double": [],
  "_pole_degree": [],
  "_poly": [],
  "_power_counting": [],
  "_powers": [],
  "_preview_wrapper": [],
  "_print": [],
  "_process": [],
  "_process_overlap": [],
  "_process_vector_differential": [],
  "_pytest": [],
  "_query": [],
  "_rads_bases_lcm": [],
  "_range_tuple": [],
  "_rank1": [],
  "_ranklex": [],
  "_ratsimpmodprime": [],
  "_real_isolate_and_disjoin": [],
  "_rebuild": [],
  "_recurser": [],
  "_recursive_walk": [],
  "_reduce_inverses": [],
  "_refine_reim": [],
  "_remove_coefficient": [],
  "_restore_imgset": [],
  "_rf": [],
  "_rot": [],
  "_run": [],
  "_sage_method": [],
  "_scan_and_fill": [],
  "_select": [],
  "_setexpr_apply_operation": [],
  "_shift": [],
  "_simplify": [],
  "_simplify_gpgp": [],
  "_simplify_single_line": [],
  "_solve_even_degree_expr": [],
  "_solve_reduced_system": [],
  "_solve_relational": [],
  "_solve_using_known_values": [],
  "_solve_variation_of_parameters": [],
  "_sort_anticommuting_fermions": [],
  "_splitter": [],
  "_sqrt": [],
  "_sqrtdenest1": [],
  "_square_and_reduce": [],
  "_stabilizer": [],
  "_string_to_perm": [],
  "_stringify_func": [],
  "_strong_test": [],
  "_subs_root": [],
  "_subset": [],
  "_substitute": [],
  "_svg_wrapper": [],
  "_sylow_reduce": [],
  "_sympified_list": [],
  "_sympify": [],
  "_t": [],
  "_take": [],
  "_term_factors": [],
  "_terms": [],
  "_test": [],
  "_test_global_traversal": [],
  "_test_particular_example": [],
  "_test_stop_on_non_basics": [],
  "_test_subgroup": [],
  "_test_term": [],
  "_to_matrix": [],
  "_together": [],
  "_trace_single_line1": [],
  "_transformation_to_DN": [],
  "_try_decompose": [],
  "_try_heuristics": [],
  "_try_rescale": [],
  "_try_translate": [],
  "_undetermined_coefficients_match": [],
  "_unrank": [],
  "_unrank1": [],
  "_unsolved_syms": [],
  "_update_dict": [],
  "_uppercase_labels": [],
  "_use": [],
  "_use_recursion": [],
  "_validate": [],
  "_value": [],
  "_variables": [],
  "_warn_deprecation": [],
  "_word_break": [],
  "_xab_tostr": [],
  "_xreplace": [],
  "_zero_vector": [],
  "a": [],
  "a1": [],
  "abc": [],
  "abs2": [],
  "abs_xrange": [],
  "absfunc": [],
  "acos": [],
  "acot": [],
  "acsc": [],
  "add": [],
  "add_columns": [],
  "add_delta": [],
  "add_intersection_complement": [],
  "add_raises": [],
  "add_rows": [],
  "add_text": [],
  "add_type": [],
  "addb": [],
  "addi": [],
  "adjoint": [],
  "adjust": [],
  "airybiprime": [],
  "all": [],
  "all_in_both": [],
  "almosteq": [],
  "alpha": [],
  "analyse_gens": [],
  "and_func": [],
  "and_func_3": [],
  "anp": [],
  "antlr4": [],
  "append": [],
  "append_symbol": [],
  "applyfunc": [],
  "arg_expand": [],
  "argparse": [],
  "args_cancel": [],
  "array": [],
  "array_type": [],
  "arrayop": [],
  "as_real_imag": [],
  "asec": [],
  "assign": [],
  "assignment_attempt": [],
  "assumptions": [],
  "ast": [],
  "asum": [],
  "atan": [],
  "atexit": [],
  "atom": [],
  "atoms": [],
  "att": [],
  "autocorr": [],
  "b": [],
  "b1": [],
  "b2": [],
  "backward_substitution": [],
  "bad": [],
  "bareiss": [],
  "base": [],
  "base_exp": [],
  "base_seq": [],
  "basic": [],
  "besseli": [],
  "besselx": [],
  "bigger": [],
  "binomial": [],
  "bisect": [],
  "bkey": [],
  "blockmatrix": [],
  "blocks_from_nullity_chain": [],
  "blowup": [],
  "boldpretty": [],
  "bottom_rl": [],
  "bottom_up": [],
  "bottom_up_scan": [],
  "breakup": [],
  "brl": [],
  "brule": [],
  "build_ideal": [],
  "builtin_range": [],
  "builtins": [],
  "c": [],
  "cStringIO": [],
  "cache": [],
  "cache_get": [],
  "calc_part": [],
  "calculus": [],
  "call_visitor": [],
  "can": [],
  "can_do": [],
  "canon_bp": [],
  "canonical": [],
  "canonicalize": [],
  "carryout_plan": [],
  "cartan_type": [],
  "cb": [],
  "cc": [],
  "ccode": [],
  "ccw": [],
  "ceiling": [],
  "cf": [],
  "cf1": [],
  "cf2": [],
  "cfunc": [],
  "chebyshevu": [],
  "check": [],
  "check_all": [],
  "check_arguments": [],
  "check_denominator_zeros": [],
  "check_exact": [],
  "check_fx": [],
  "check_prec_and_relerr": [],
  "check_sincos": [],
  "check_solutions": [],
  "check_type": [],
  "check_unit_consistency": [],
  "chi": [],
  "children": [],
  "class_to_install": [],
  "classifier": [],
  "classify": [],
  "classify_diop": [],
  "classof": [],
  "clear_column": [],
  "clear_row": [],
  "cls": [],
  "cnt": [],
  "code": [],
  "codeprinter": [],
  "coeffs_generator": [],
  "coerce": [],
  "collections": [],
  "combine": [],
  "common": [],
  "commutes_with_gens": [],
  "compare": [],
  "compatibility": [],
  "compilation": [],
  "complex_extended_negative": [],
  "complexfield": [],
  "complexity": [],
  "compute": [],
  "compute_ST": [],
  "compute_innermost": [],
  "concurrent": [],
  "cond": [],
  "condition": [],
  "conflict": [],
  "conj": [],
  "conjugate": [],
  "cons": [],
  "constant": [],
  "contain": [],
  "container": [],
  "containers": [],
  "contains": [],
  "contextlib": [],
  "contract_one_dims": [],
  "contravariant_order": [],
  "conv": [],
  "convert": [],
  "convert_atom": [],
  "converter": [],
  "copy": [],
  "core": [],
  "cos": [],
  "cosh": [],
  "cot": [],
  "coth": [],
  "count": [],
  "count_morphisms_filtered": [],
  "count_morphisms_undirected": [],
  "count_ops_alg": [],
  "coupled_evect": [],
  "covariant_order": [],
  "cprint": [],
  "create_inverse_map": [],
  "critical_angle": [],
  "cross": [],
  "cross_cancel": [],
  "cross_product": [],
  "crt_": [],
  "csc": [],
  "cse_opts": [],
  "ctypes": [],
  "curses": [],
  "cvd": [],
  "cw": [],
  "d": [],
  "dagger": [],
  "decimal": [],
  "decompose": [],
  "decompositions": [],
  "decons": [],
  "decorators": [],
  "definitions": [],
  "defl": [],
  "deg": [],
  "delete_tensmul_data": [],
  "delop": [],
  "delta": [],
  "denom": [],
  "denom_clean": [],
  "dens": [],
  "dense": [],
  "dense_ndim_array": [],
  "density_inv": [],
  "derivation": [],
  "det": [],
  "determinant": [],
  "df": [],
  "dg": [],
  "diagonal": [],
  "dict": [],
  "diffgeom": [],
  "diffx": [],
  "digits": [],
  "dill": [],
  "dimensions": [],
  "diop_class": [],
  "dir": [],
  "dirac": [],
  "dirichlet_eta": [],
  "discrete_log": [],
  "dispatcher": [],
  "distance": [],
  "distribute_mul": [],
  "distribute_t12": [],
  "distribute_xor_over_and": [],
  "distutils": [],
  "dmp_LC": [],
  "dmp_TC": [],
  "dmp_mul": [],
  "dmp_primitive": [],
  "dmp_zero": [],
  "dmp_zero_p": [],
  "do": [],
  "do_shifts": [],
  "do_shifts_a": [],
  "do_shifts_b": [],
  "do_slater": [],
  "doctest": [],
  "doit": [],
  "dom": [],
  "domain": [],
  "domain_new": [],
  "domain_quo": [],
  "done": [],
  "dont": [],
  "dosubs": [],
  "dot": [],
  "double": [],
  "dps": [],
  "drop_const": [],
  "dtype": [],
  "dummy": [],
  "dummy_name_gen": [],
  "dump_fn": [],
  "dums": [],
  "dup_LC": [],
  "dup_TC": [],
  "dup_mul": [],
  "dx": [],
  "dxdy": [],
  "dyadic": [],
  "e": [],
  "e2int": [],
  "e3": [],
  "eig_mat": [],
  "eigen": [],
  "el": [],
  "eliminate_implications": [],
  "ellipse": [],
  "elliptic_e": [],
  "elm_domain": [],
  "encode": [],
  "entity": [],
  "entry": [],
  "enumerate_states": [],
  "epsilon": [],
  "eq": [],
  "eqn": [],
  "equal": [],
  "erfi": [],
  "errors": [],
  "esses": [],
  "eta": [],
  "eval_": [],
  "eval_factored": [],
  "eval_power": [],
  "evalf": [],
  "evaluate": [],
  "evaluator": [],
  "evect": [],
  "exception": [],
  "exceptions": [],
  "exhaust_brl": [],
  "exp": [],
  "expander": [],
  "experimental_lambdify": [],
  "expint": [],
  "explicate": [],
  "exponential": [],
  "expr": [],
  "expr_method": [],
  "expressiondomain": [],
  "exprtools": [],
  "ext": [],
  "eye": [],
  "f": [],
  "f0": [],
  "f1": [],
  "f1b": [],
  "f2": [],
  "f3": [],
  "f4": [],
  "fRL1": [],
  "fRL2": [],
  "f_": [],
  "f_callback": [],
  "f_dot1": [],
  "f_dot2": [],
  "f_func": [],
  "f_im": [],
  "f_matsolve": [],
  "f_re": [],
  "f_real": [],
  "f_real2": [],
  "f_real_inherit": [],
  "f_x": [],
  "f_y": [],
  "fabc": [],
  "fabs": [],
  "facb": [],
  "factor_": [],
  "factor_nc_test": [],
  "factorint": [],
  "factorize": [],
  "fallback": [],
  "fastcache": [],
  "fblocked": [],
  "fccw": [],
  "fcw": [],
  "feq": [],
  "fi": [],
  "field": [],
  "find": [],
  "find_fuzzy": [],
  "find_index_that_is_projected": [],
  "find_non_syms": [],
  "find_symbols": [],
  "findout_terminal_width": [],
  "finish": [],
  "fjlkd": [],
  "flam": [],
  "flat": [],
  "flat_indexes": [],
  "flist_iter": [],
  "fm": [],
  "fn": [],
  "fnmatch": [],
  "foo": [],
  "foo1": [],
  "foo2": [],
  "formatter": [],
  "forward_substitution": [],
  "fp": [],
  "fpoint": [],
  "fprint": [],
  "frac": [],
  "frac_in": [],
  "fraction": [],
  "fractions": [],
  "frame": [],
  "freepres": [],
  "fresnelc": [],
  "fresnels": [],
  "fro": [],
  "fs_test": [],
  "fu": [],
  "fun": [],
  "func": [],
  "func0": [],
  "func1": [],
  "func2": [],
  "func3": [],
  "func4": [],
  "func_numexpr": [],
  "function": [],
  "functions": [],
  "functools": [],
  "futrig": [],
  "fv": [],
  "fw": [],
  "fx": [],
  "fy": [],
  "fz": [],
  "g": [],
  "g1": [],
  "g2": [],
  "g_func": [],
  "gamma": [],
  "gamma_factor": [],
  "gamma_rat": [],
  "gate": [],
  "gaunt_ref": [],
  "gcd": [],
  "gen": [],
  "gener": [],
  "generate": [],
  "generate_dummy_name": [],
  "generate_forms": [],
  "get": [],
  "get_basis": [],
  "get_col": [],
  "get_differential_var": [],
  "get_differential_var_str": [],
  "get_equations": [],
  "get_for_name": [],
  "get_indices": [],
  "get_indices_set": [],
  "get_ipython": [],
  "get_partial_velocity": [],
  "get_rank": [],
  "get_reps": [],
  "get_score": [],
  "get_symsetmap": [],
  "get_total_scale_factor": [],
  "get_transversals": [],
  "getargs": [],
  "getd": [],
  "getl": [],
  "getr": [],
  "getroot": [],
  "getu": [],
  "gf_monic": [],
  "gf_pow_mod": [],
  "give": [],
  "given_fn": [],
  "gl": [],
  "glob": [],
  "gmpy": [],
  "gmpy2": [],
  "gmpyfinitefield": [],
  "gmpyintegerring": [],
  "gmpyrationalfield": [],
  "good_autocorr": [],
  "good_triangle": [],
  "gooda": [],
  "goodlog": [],
  "gradient": [],
  "gradient_terms": [],
  "graph": [],
  "gray_to_bin": [],
  "groebnersimp": [],
  "ground_abs": [],
  "ground_gcd": [],
  "ground_quo": [],
  "group_size": [],
  "group_to_finiteset": [],
  "gruntz": [],
  "h": [],
  "h1": [],
  "h2": [],
  "handle": [],
  "handle_match": [],
  "handler": [],
  "has": [],
  "hashlib": [],
  "head": [],
  "heapq": [],
  "hermite": [],
  "hi_type": [],
  "highest": [],
  "hit": [],
  "holonomicerrors": [],
  "how": [],
  "i": [],
  "icdf": [],
  "identity_func": [],
  "idn": [],
  "if1": [],
  "if2": [],
  "im": [],
  "imag_count": [],
  "immutable": [],
  "imp": [],
  "importable": [],
  "importlib": [],
  "inc": [],
  "indent": [],
  "inflate": [],
  "inner_key": [],
  "inner_print_max": [],
  "inner_print_min": [],
  "inspect": [],
  "integral_is_subclass": [],
  "integral_steps": [],
  "integrate": [],
  "integration_reduction_dynamic": [],
  "intersect_parallel_ray_and_segment": [],
  "intersect_parallel_rays": [],
  "intersect_parallel_segments": [],
  "intersection": [],
  "interval_membership": [],
  "intervalmath": [],
  "inv": [],
  "inverse": [],
  "inverter": [],
  "io": [],
  "ipartfrac": [],
  "iperm": [],
  "ireal": [],
  "is2pow": [],
  "isMat": [],
  "is_algebraic": [],
  "is_args": [],
  "is_associative": [],
  "is_commutative": [],
  "is_digit": [],
  "is_homogeneous_solution": [],
  "is_indef_int": [],
  "is_independent": [],
  "is_iterator": [],
  "is_literal": [],
  "is_p_group": [],
  "is_redundant": [],
  "is_seq_and_not_point": [],
  "is_similar1": [],
  "is_similar2": [],
  "is_special_case_of": [],
  "is_sqrt": [],
  "is_valid": [],
  "isconstant": [],
  "isimp": [],
  "isiter": [],
  "ismat": [],
  "ispow2": [],
  "isubs": [],
  "iszerofunc": [],
  "iter_vfield": [],
  "iterator": [],
  "itertools": [],
  "jindex": [],
  "jn": [],
  "join": [],
  "jordan_cell_power": [],
  "jordan_chains": [],
  "jordan_pow": [],
  "key": [],
  "keys": [],
  "keyword": [],
  "kls": [],
  "l": [],
  "l1": [],
  "l2": [],
  "lam": [],
  "lambda_lame": [],
  "lambda_s0": [],
  "lamda": [],
  "latex": [],
  "latexslice": [],
  "lay_out_group": [],
  "lcim": [],
  "lcm": [],
  "lcm_divides": [],
  "leaf": [],
  "left": [],
  "legendre": [],
  "letter_form_to_array_form": [],
  "lib_interval": [],
  "lime_recur": [],
  "limitinf": [],
  "line": [],
  "line_list_close": [],
  "linear_arg": [],
  "linearity_check": [],
  "linearsolver": [],
  "linecache": [],
  "lines_close": [],
  "list": [],
  "literal": [],
  "ln": [],
  "locale": [],
  "log": [],
  "loggamma": [],
  "logging": [],
  "logic": [],
  "lowest": [],
  "lxml": [],
  "mainloop": [],
  "make_expression": [],
  "make_inverse_trig": [],
  "make_key": [],
  "make_log1": [],
  "make_log2": [],
  "make_second_step": [],
  "makelambda": [],
  "maketree": [],
  "mask": [],
  "mat": [],
  "mat_build": [],
  "mat_class": [],
  "mat_func": [],
  "matadd": [],
  "matarray": [],
  "match": [],
  "matchpy": [],
  "matexpr": [],
  "math": [],
  "matmat": [],
  "matmul": [],
  "matplotlib": [],
  "matpow": [],
  "matrices": [],
  "matrix": [],
  "max": [],
  "mcrt": [],
  "measure": [],
  "measure1": [],
  "measure2": [],
  "medium": [],
  "meta": [],
  "meth": [],
  "method": [],
  "metric": [],
  "metric_symmetry_to_msym": [],
  "migcdex": [],
  "min": [],
  "missing_or_other_newer": [],
  "mkinexact": [],
  "mksa": [],
  "mod": [],
  "modular": [],
  "modversion": [],
  "monom_key": [],
  "monomial_div": [],
  "monomial_gcd": [],
  "monomial_ldiv": [],
  "monomial_mul": [],
  "monomial_mulpow": [],
  "mpmath": [],
  "mrv_leadterm": [],
  "mul": [],
  "mul2": [],
  "mul_symbol_selection": [],
  "multiply": [],
  "multjoin": [],
  "mv": [],
  "my": [],
  "my_function": [],
  "my_function2": [],
  "my_imt": [],
  "mybeta": [],
  "myfunc": [],
  "mygamma": [],
  "myprod": [],
  "myrep": [],
  "mysimp": [],
  "mystr": [],
  "mytanh": [],
  "n": [],
  "name_h": [],
  "ndiv": [],
  "nefunc": [],
  "neg": [],
  "new": [],
  "newpermutation": [],
  "next": [],
  "nf": [],
  "nint": [],
  "no": [],
  "nodef_func": [],
  "nona": [],
  "nonalg_subs_dummies": [],
  "none_handler": [],
  "nonsymfail": [],
  "nonz": [],
  "norm": [],
  "norm2": [],
  "normal": [],
  "not_func": [],
  "npfunc": [],
  "nsimplify": [],
  "nsimplify_real": [],
  "nu": [],
  "nullity_chain": [],
  "numbered_names": [],
  "numberfields": [],
  "numbers": [],
  "numer": [],
  "numpy": [],
  "o": [],
  "o1": [],
  "o2": [],
  "object": [],
  "ok": [],
  "old_run_cell": [],
  "omega": [],
  "omega1": [],
  "on_close": [],
  "onequbitgate": [],
  "op": [],
  "open_file": [],
  "operations": [],
  "operator": [],
  "operatorset": [],
  "optim": [],
  "optparse": [],
  "or_func": [],
  "or_func_3": [],
  "ord": [],
  "order": [],
  "os": [],
  "other": [],
  "others": [],
  "out_array_type": [],
  "p": [],
  "param_rischDE": [],
  "parameters": [],
  "parens": [],
  "parent": [],
  "parse_derivative": [],
  "parse_dict": [],
  "parse_dim": [],
  "parse_dim_name": [],
  "parse_expression": [],
  "parse_hints": [],
  "parse_term": [],
  "partition": [],
  "pb": [],
  "pdb": [],
  "pdf": [],
  "per": [],
  "perm": [],
  "perm2tensor": [],
  "permutation": [],
  "perp": [],
  "perp_to_subspace": [],
  "ph": [],
  "phi": [],
  "piab": [],
  "pick_vec": [],
  "pickle": [],
  "piecewise_fold": [],
  "place_objects": [],
  "platform": [],
  "plot": [],
  "plot_interval": [],
  "plot_object": [],
  "point": [],
  "poly_func": [],
  "polyerrors": [],
  "polygon": [],
  "polylog": [],
  "possible_subterms": [],
  "post": [],
  "pow": [],
  "pow_cos_sin": [],
  "pow_xin": [],
  "power": [],
  "powerset": [],
  "ppslice": [],
  "pr": [],
  "pre": [],
  "precedence": [],
  "pred": [],
  "predicate": [],
  "preorder_traversal": [],
  "pretty": [],
  "pretty_list": [],
  "pretty_negative": [],
  "pretty_symbology": [],
  "primetest": [],
  "print_counter": [],
  "print_data": [],
  "print_dims": [],
  "print_rule": [],
  "print_start": [],
  "print_string_list": [],
  "printer": [],
  "printing": [],
  "prntr": [],
  "process_common_addends": [],
  "process_conds": [],
  "process_new_rule": [],
  "prod_term": [],
  "proj_point": [],
  "project": [],
  "prop_comm_g": [],
  "propfunc": [],
  "protocol": [],
  "psi": [],
  "pspace": [],
  "pspace_independent": [],
  "pull_out_u": [],
  "py": [],
  "pycode": [],
  "pycosat": [],
  "pydoc": [],
  "pyglet": [],
  "pytest": [],
  "pythonfinitefield": [],
  "pythonintegerring": [],
  "pythonrationalfield": [],
  "q": [],
  "q1": [],
  "q2": [],
  "q3": [],
  "qh": [],
  "quantities": [],
  "query": [],
  "quo": [],
  "r": [],
  "rand": [],
  "randcplx": [],
  "randint": [],
  "random": [],
  "random_number_generator": [],
  "random_symbols": [],
  "randomize_graph": [],
  "randrange": [],
  "range": [],
  "ratq": [],
  "raw": [],
  "rc": [],
  "rcheck": [],
  "re": [],
  "realfield": [],
  "rec_gen": [],
  "reconstruction": [],
  "recur_len": [],
  "recurr": [],
  "recurrence": [],
  "recurse": [],
  "recurse_expr": [],
  "recurse_sub_blocks": [],
  "recursor": [],
  "reduce_rational_inequalities_wrap": [],
  "reducible": [],
  "reduction": [],
  "reductions": [],
  "ref_list": [],
  "refine_pixels": [],
  "rejoin": [],
  "remove_literal": [],
  "remove_matelement": [],
  "remove_something": [],
  "removethis": [],
  "rep": [],
  "repeat_string_cond": [],
  "repl": [],
  "repl_match": [],
  "replace": [],
  "replace_dummies": [],
  "replacer": [],
  "replie": [],
  "repr": [],
  "representing_matrix": [],
  "res": [],
  "residue_ntheory": [],
  "restore_floats": [],
  "result": [],
  "return_generator": [],
  "rev": [],
  "rewrite": [],
  "rf": [],
  "ri": [],
  "right": [],
  "ring": [],
  "rischDE": [],
  "rl": [],
  "rmatch": [],
  "rmzeros": [],
  "roots": [],
  "roots_fun": [],
  "rotatingCalipers": [],
  "row_swap": [],
  "rs_func": [],
  "rule": [],
  "rule_gamma": [],
  "rules": [],
  "runners": [],
  "rv": [],
  "s": [],
  "s3": [],
  "s_check": [],
  "safe_remove": [],
  "safe_rl": [],
  "sage": [],
  "sall": [],
  "sample": [],
  "sbs": [],
  "scipy": [],
  "scipy_fn": [],
  "sec": [],
  "select": [],
  "set": [],
  "set_label_position": [],
  "set_work_len": [],
  "setd": [],
  "setl": [],
  "setr": [],
  "sets": [],
  "setu": [],
  "sf": [],
  "sh": [],
  "shift": [],
  "shorter": [],
  "shutil": [],
  "sign_invariant": [],
  "signal": [],
  "signlog": [],
  "simp": [],
  "simp_hyp": [],
  "simp_pows": [],
  "simpler_inverse": [],
  "simplify": [],
  "simplify_logic": [],
  "sinc": [],
  "single_var": [],
  "singleton": [],
  "sink": [],
  "sm": [],
  "solve_ics": [],
  "solve_linear_system": [],
  "solve_x": [],
  "solve_y": [],
  "solvefunc": [],
  "solver": [],
  "solvercls": [],
  "solvers": [],
  "solveset": [],
  "solveset_real": [],
  "some_function": [],
  "sort": [],
  "sorted_compo": [],
  "sorted_recursive": [],
  "space": [],
  "sparse": [],
  "sparse_eye": [],
  "sparse_zeros": [],
  "sparsetools": [],
  "split": [],
  "split_list": [],
  "split_pos_code": [],
  "split_real_imag": [],
  "square_factor": [],
  "srange": [],
  "ssym": [],
  "staircase": [],
  "start": [],
  "startswith": [],
  "stat": [],
  "state": [],
  "state_class": [],
  "statement": [],
  "statement_half": [],
  "stdNormalcdf": [],
  "step": [],
  "stop": [],
  "str": [],
  "str_signature": [],
  "string": [],
  "stringify_func": [],
  "strslice": [],
  "strtype": [],
  "struct": [],
  "sub_args": [],
  "sub_expr": [],
  "sub_term": [],
  "subprocess": [],
  "subs": [],
  "subscheck": [],
  "subspaces": [],
  "sum": [],
  "summations": [],
  "sym": [],
  "symbol": [],
  "symbols_list": [],
  "symengine": [],
  "sympify": [],
  "sympify_nested_list": [],
  "sympy": [],
  "sympy_fn": [],
  "sympy_func": [],
  "sys": [],
  "t": [],
  "tN": [],
  "tableau2bsgs": [],
  "take": [],
  "tan": [],
  "tanh": [],
  "taylor_terms_per_coord": [],
  "temp": [],
  "tempfile": [],
  "tensor": [],
  "tensor_metric": [],
  "tensor_prod": [],
  "teq": [],
  "term_div": [],
  "terms": [],
  "test": [],
  "test1": [],
  "test2": [],
  "test_cf": [],
  "test_different_forms": [],
  "test_equality": [],
  "test_func": [],
  "test_row": [],
  "test_simplification_numerically_function": [],
  "test_subterm": [],
  "test_table": [],
  "test_the_product": [],
  "test_the_sum": [],
  "test_this_file": [],
  "testit": [],
  "textwrap": [],
  "tf": [],
  "the_call_method_is_overridden": [],
  "theano": [],
  "theq_slice": [],
  "theta": [],
  "theta1": [],
  "threading": [],
  "ti": [],
  "time": [],
  "timeit": [],
  "tmpadd": [],
  "tn": [],
  "to": [],
  "to_anf": [],
  "to_mathematica_index": [],
  "to_sympy": [],
  "tokenize": [],
  "tol": [],
  "tominus": [],
  "top_rl": [],
  "torewrite": [],
  "tr": [],
  "trace": [],
  "traceback": [],
  "trans_probs": [],
  "transform": [],
  "translate": [],
  "translate_data": [],
  "translate_literal": [],
  "transpose": [],
  "traverse": [],
  "traverse_component": [],
  "tree": [],
  "trig_split": [],
  "trigsimpfunc": [],
  "try_meijerg": [],
  "try_non_polynomial_gcd": [],
  "try_non_polynomial_lcm": [],
  "try_shift": [],
  "tuple": [],
  "type": [],
  "type_a": [],
  "type_b": [],
  "type_c": [],
  "type_d": [],
  "type_e": [],
  "type_f": [],
  "type_g": [],
  "types": [],
  "typing": [],
  "u": [],
  "uf": [],
  "unfold": [],
  "unicodedata": [],
  "unimplemented_expr": [],
  "unimplemented_expr_sup_sub": [],
  "uniq": [],
  "unitsystem": [],
  "unpack_lhs": [],
  "unpack_sol": [],
  "unreplace": [],
  "untillist": [],
  "unzip": [],
  "update": [],
  "update_ST": [],
  "update_mapping": [],
  "update_nu": [],
  "update_sets": [],
  "uppergamma": [],
  "user_function": [],
  "util": [],
  "utilities": [],
  "utils": [],
  "v": [],
  "valid": [],
  "validate": [],
  "var": [],
  "var_count_error": [],
  "vars": [],
  "vdiff": [],
  "vector": [],
  "verify_row_null_space": [],
  "vsin": [],
  "vsort": [],
  "vsort0": [],
  "w": [],
  "warnings": [],
  "weight": [],
  "wicks": [],
  "wp": [],
  "wrap_tuples_and_return": [],
  "wrapped": [],
  "wrapped_test_Permutation": [],
  "wrt_vector": [],
  "x": [],
  "x0": [],
  "x1": [],
  "x2": [],
  "x_axis_cut": [],
  "xi": [],
  "xml": [],
  "xreplace": [],
  "y": [],
  "y0": [],
  "y1": [],
  "y1_": [],
  "y_axis_cut": [],
  "yfcn": [],
  "yield_lseries": [],
  "yinc": [],
  "yn": [],
  "z": [],
  "zero_all_symbols": [],
  "zero_onelevel": [],
  "zero_uaux": [],
  "zero_udot_uaux": [],
  "zeros": [],
  "zeta": []
 }
}