{
 "bad": [
  "_find_lower_upper_bounds",
  "_is_direct_lambda_call",
  "_is_float_nan",
  "_is_nan",
  "_is_numpy_nan",
  "_is_singleton_const",
  "_is_used_in_except_block",
  "_looks_like_infinite_iterator",
  "_metaclass_name",
  "_no_context_variadic",
  "_normalized_path",
  "_pytest.config.Config",
  "_should_exempt_from_invalid_name",
  "_string",
  "_string.formatter_field_name_split",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "astroid",
  "astroid.AnnAssign",
  "astroid.Arguments",
  "astroid.Assert",
  "astroid.Assign",
  "astroid.AssignAttr",
  "astroid.AssignName",
  "astroid.AstroidBuildingException",
  "astroid.AstroidIndexError",
  "astroid.AstroidSyntaxError",
  "astroid.AstroidTypeError",
  "astroid.AsyncFunctionDef",
  "astroid.Attribute",
  "astroid.AttributeInferenceError",
  "astroid.AugAssign",
  "astroid.Await",
  "astroid.BaseInstance",
  "astroid.BinOp",
  "astroid.BoolOp",
  "astroid.BoundMethod",
  "astroid.Break",
  "astroid.Call",
  "astroid.ClassDef",
  "astroid.Compare",
  "astroid.Comprehension",
  "astroid.Const",
  "astroid.Continue",
  "astroid.Decorators",
  "astroid.Del",
  "astroid.DelName",
  "astroid.Delete",
  "astroid.Dict",
  "astroid.DictComp",
  "astroid.DuplicateBasesError",
  "astroid.ExceptHandler",
  "astroid.Expr",
  "astroid.ExtSlice",
  "astroid.For",
  "astroid.FormattedValue",
  "astroid.FunctionDef",
  "astroid.GeneratorExp",
  "astroid.Global",
  "astroid.If",
  "astroid.IfExp",
  "astroid.Import",
  "astroid.ImportFrom",
  "astroid.InconsistentMroError",
  "astroid.InferenceError",
  "astroid.Instance",
  "astroid.JoinedStr",
  "astroid.Keyword",
  "astroid.Lambda",
  "astroid.List",
  "astroid.ListComp",
  "astroid.Load",
  "astroid.MANAGER",
  "astroid.Module",
  "astroid.Module.scope_attrs",
  "astroid.MroError",
  "astroid.Name",
  "astroid.NamedExpr",
  "astroid.NoDefault",
  "astroid.NodeNG",
  "astroid.Nonlocal",
  "astroid.NotFoundError",
  "astroid.Raise",
  "astroid.ResolveError",
  "astroid.Return",
  "astroid.Set",
  "astroid.SetComp",
  "astroid.Slice",
  "astroid.Starred",
  "astroid.Store",
  "astroid.Subscript",
  "astroid.SuperError",
  "astroid.TooManyLevelsError",
  "astroid.TryExcept",
  "astroid.TryFinally",
  "astroid.Tuple",
  "astroid.UnaryOp",
  "astroid.UnboundMethod",
  "astroid.Uninferable",
  "astroid.Unknown",
  "astroid.While",
  "astroid.With",
  "astroid.Yield",
  "astroid.YieldFrom",
  "astroid.__version__",
  "astroid.are_exclusive",
  "astroid.arguments.CallSite.from_call",
  "astroid.bases",
  "astroid.bases.AsyncGenerator",
  "astroid.bases.BUILTINS",
  "astroid.bases.Generator",
  "astroid.bases.Instance",
  "astroid.bases.Proxy",
  "astroid.builder.AstroidBuilder",
  "astroid.builtin_lookup",
  "astroid.context.CallContext",
  "astroid.context.InferenceContext",
  "astroid.decorators.cached",
  "astroid.decorators.cachedproperty",
  "astroid.exceptions.AstroidBuildingException",
  "astroid.exceptions.InferenceError",
  "astroid.exceptions.NoDefault",
  "astroid.exceptions.NotFoundError",
  "astroid.exceptions._NonDeducibleTypeHierarchy",
  "astroid.extract_node",
  "astroid.helpers.is_subtype",
  "astroid.helpers.object_type",
  "astroid.helpers.safe_infer",
  "astroid.interpreter.dunder_lookup.lookup",
  "astroid.manager.AstroidManager",
  "astroid.modutils",
  "astroid.modutils.check_modpath_has_init",
  "astroid.modutils.file_from_modpath",
  "astroid.modutils.file_info_from_modpath",
  "astroid.modutils.get_module_files",
  "astroid.modutils.get_module_part",
  "astroid.modutils.is_directory",
  "astroid.modutils.is_namespace",
  "astroid.modutils.is_relative",
  "astroid.modutils.is_standard_module",
  "astroid.modutils.load_module_from_file",
  "astroid.modutils.load_module_from_name",
  "astroid.modutils.modpath_from_file",
  "astroid.modutils.modpath_from_file_with_callback",
  "astroid.node_classes",
  "astroid.node_classes.AssignAttr",
  "astroid.node_classes.AssignName",
  "astroid.node_classes.Comprehension",
  "astroid.node_classes.Dict",
  "astroid.node_classes.For",
  "astroid.node_classes.If",
  "astroid.node_classes.Import",
  "astroid.node_classes.ImportFrom",
  "astroid.node_classes.Name",
  "astroid.node_classes.NodeNG",
  "astroid.node_classes.Tuple",
  "astroid.node_classes.While",
  "astroid.node_classes.With",
  "astroid.node_classes.unpack_infer",
  "astroid.nodes",
  "astroid.nodes.ALL_NODE_CLASSES",
  "astroid.nodes.ClassDef",
  "astroid.nodes.Const",
  "astroid.nodes.Expr",
  "astroid.nodes.FunctionDef",
  "astroid.nodes.If",
  "astroid.nodes.Module",
  "astroid.nodes.TryExcept",
  "astroid.nodes.TryFinally",
  "astroid.nodes.Unknown",
  "astroid.nodes.With",
  "astroid.objects.DictItems",
  "astroid.objects.FrozenSet",
  "astroid.objects.Super",
  "astroid.parse",
  "astroid.scoped_nodes.ClassDef",
  "astroid.scoped_nodes.ComprehensionScope",
  "astroid.scoped_nodes.FunctionDef",
  "astroid.scoped_nodes.GeneratorExp",
  "astroid.scoped_nodes.ListComp",
  "astroid.scoped_nodes.LocalsDictNodeNG",
  "astroid.scoped_nodes.function_to_method",
  "astroid.unpack_infer",
  "builtins",
  "builtins.__name__",
  "callback",
  "cb",
  "check",
  "codecs",
  "codecs.getreader",
  "codecs.open",
  "collections",
  "collections.Counter",
  "collections.OrderedDict.fromkeys",
  "collections.abc.Iterable",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "configparser",
  "configparser.ConfigParser",
  "contextlib",
  "contextlib.ExitStack",
  "contextlib.contextmanager",
  "conv",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "csv",
  "csv.reader",
  "dispatch_meth",
  "distutils.sysconfig",
  "distutils.sysconfig.get_python_lib",
  "distutils.sysconfig.get_python_version",
  "docstring_type",
  "enchant",
  "enchant.tokenize.Chunker",
  "enchant.tokenize.EmailFilter",
  "enchant.tokenize.Filter",
  "enchant.tokenize.URLFilter",
  "enchant.tokenize.WikiWordFilter",
  "enchant.tokenize.get_tokenizer",
  "find",
  "fnmatch",
  "fnmatch.fnmatch",
  "form_annotations",
  "from_iter",
  "fun",
  "func",
  "func.attrname",
  "func.expr.infer",
  "functools",
  "functools.lru_cache",
  "functools.partial",
  "functools.reduce",
  "functools.singledispatch",
  "functools.total_ordering",
  "functools.wraps",
  "gather_exceptions_from_handler",
  "get_curline_index_start",
  "getopt.getopt",
  "glob.glob",
  "handler",
  "heapq",
  "heapq.nsmallest",
  "inspect",
  "inspect.cleandoc",
  "inspect.getmembers",
  "io.StringIO",
  "io.TextIOWrapper",
  "is_iterable",
  "is_logger_class",
  "is_logging_name",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.groupby",
  "itertools.islice",
  "itertools.takewhile",
  "itertools.zip_longest",
  "json",
  "json.dumps",
  "linecache",
  "linecache.getline",
  "lines1",
  "lines2",
  "mccabe.PathGraph",
  "mccabe.PathGraphingAstVisitor",
  "meth",
  "method",
  "multiprocessing",
  "next_char",
  "normalize_node_id",
  "numbers",
  "numbers.Number",
  "object.__name__",
  "operator",
  "operator.attrgetter",
  "operator.ge",
  "operator.gt",
  "operator.itemgetter",
  "operator.le",
  "operator.lt",
  "optparse",
  "optparse.BadOptionError",
  "optparse.HelpFormatter",
  "optparse.HelpFormatter.expand_default",
  "optparse.NO_DEFAULT",
  "optparse.Option",
  "optparse.Option.ATTRS",
  "optparse.Option.CHECK_METHODS",
  "optparse.Option.TYPES",
  "optparse.Option.TYPE_CHECKER",
  "optparse.OptionContainer.format_option_help",
  "optparse.OptionError",
  "optparse.OptionGroup",
  "optparse.OptionParser",
  "optparse.OptionValueError",
  "optparse.SUPPRESS_HELP",
  "os",
  "os.PathLike",
  "os.close",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.linesep",
  "os.linesep.join",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normcase",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.splitext",
  "os.pathsep.join",
  "os.sep",
  "os.unlink",
  "pathlib.Path",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "platform",
  "platform.python_implementation",
  "pylint.checkers.BaseChecker.set_option",
  "pylint.checkers.BaseTokenChecker.set_option",
  "pylint.checkers.utils.get_global_option",
  "pylint.config.__init__.PYLINT_HOME",
  "pylint.config.__init__.USER_HOME",
  "pylint.config.__init__._get_pdata_path",
  "pylint.config.__init__.find_pylintrc",
  "pylint.constants.MSG_TYPES.values",
  "pylint.constants.MSG_TYPES_LONG.get",
  "pylint.constants.WarningScope.LINE",
  "pylint.constants.WarningScope.NODE",
  "pylint.constants._MSG_ORDER.index",
  "pylint.extensions.__file__",
  "pylint.interfaces.HIGH.name",
  "pylint.message.MessagesHandlerMixIn.clear_by_id_managed_msgs",
  "pylint.message.MessagesHandlerMixIn.get_by_id_managed_msgs",
  "pylint.testutils.constants._EXPECTED_RE.search",
  "pylint.testutils.global_test_linter.linter.options_providers",
  "pylint.utils.pragma_parser.OPTION_PO.search",
  "pytest",
  "pytest.skip",
  "pytype",
  "r_cb",
  "re",
  "re.DOTALL",
  "re.I",
  "re.M",
  "re.S",
  "re.VERBOSE",
  "re.X",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.split",
  "reader_cls",
  "readlines",
  "reporter_class",
  "reporter_class.name",
  "same_scope",
  "sched_getaffinity",
  "shlex",
  "shlex.shlex",
  "shlex.split",
  "shutil",
  "shutil.which",
  "string",
  "string.Formatter",
  "string.digits",
  "stringify_error",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "supported_protocol",
  "sys",
  "sys.argv",
  "sys.argv.insert",
  "sys.builtin_module_names",
  "sys.executable",
  "sys.exit",
  "sys.getdefaultencoding",
  "sys.maxsize",
  "sys.path",
  "sys.path.copy",
  "sys.path.insert",
  "sys.path.pop",
  "sys.platform",
  "sys.platform.lower",
  "sys.platform.startswith",
  "sys.prefix",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdin.detach",
  "sys.stdin.read",
  "sys.stdout",
  "sys.version",
  "sys.version.split",
  "sys.version_info",
  "tempfile",
  "tempfile.mkstemp",
  "textwrap",
  "textwrap.wrap",
  "time",
  "time.localtime",
  "tokenize",
  "tokenize.COMMA",
  "tokenize.COMMENT",
  "tokenize.DEDENT",
  "tokenize.ENCODING",
  "tokenize.ENDMARKER",
  "tokenize.INDENT",
  "tokenize.NEWLINE",
  "tokenize.NL",
  "tokenize.NUMBER",
  "tokenize.STRING",
  "tokenize.TokenError",
  "tokenize.TokenInfo",
  "tokenize.generate_tokens",
  "tokenize.tokenize",
  "toml.decoder.TomlDecodeError",
  "traceback",
  "traceback.print_exc",
  "tuple.__new__",
  "types",
  "types.GeneratorType",
  "typing",
  "typing.Any",
  "typing.AnyStr",
  "typing.Callable",
  "typing.Container",
  "typing.Counter",
  "typing.Dict",
  "typing.Generator",
  "typing.IO",
  "typing.Iterable",
  "typing.List",
  "typing.Mapping",
  "typing.Match",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Pattern",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "typing.ValuesView",
  "typing.cast",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "_find_lower_upper_bounds": [],
  "_is_direct_lambda_call": [],
  "_is_float_nan": [],
  "_is_nan": [],
  "_is_numpy_nan": [],
  "_is_singleton_const": [],
  "_is_used_in_except_block": [],
  "_looks_like_infinite_iterator": [],
  "_metaclass_name": [],
  "_no_context_variadic": [],
  "_normalized_path": [],
  "_pytest": [],
  "_should_exempt_from_invalid_name": [],
  "_string": [],
  "abc": [],
  "astroid": [],
  "builtins": [],
  "callback": [],
  "cb": [],
  "check": [],
  "codecs": [],
  "collections": [],
  "configparser": [],
  "contextlib": [],
  "conv": [],
  "copy": [],
  "csv": [],
  "dispatch_meth": [],
  "distutils": [],
  "docstring_type": [],
  "enchant": [],
  "find": [],
  "fnmatch": [],
  "form_annotations": [],
  "from_iter": [],
  "fun": [],
  "func": [],
  "functools": [],
  "gather_exceptions_from_handler": [],
  "get_curline_index_start": [],
  "getopt": [],
  "glob": [],
  "handler": [],
  "heapq": [],
  "inspect": [],
  "io": [],
  "is_iterable": [],
  "is_logger_class": [],
  "is_logging_name": [],
  "isort": [
   "isort/conda-forge/noarch/isort-5.9.1-pyhd8ed1ab_0"
  ],
  "itertools": [],
  "json": [],
  "linecache": [],
  "lines1": [],
  "lines2": [],
  "mccabe": [],
  "meth": [],
  "method": [],
  "multiprocessing": [],
  "next_char": [],
  "normalize_node_id": [],
  "numbers": [],
  "object": [],
  "operator": [],
  "optparse": [],
  "os": [],
  "pathlib": [],
  "pickle": [],
  "platform": [],
  "pylint": [],
  "pytest": [],
  "pytype": [],
  "r_cb": [],
  "re": [],
  "reader_cls": [],
  "readlines": [],
  "reporter_class": [],
  "same_scope": [],
  "sched_getaffinity": [],
  "shlex": [],
  "shutil": [],
  "string": [],
  "stringify_error": [],
  "subprocess": [],
  "supported_protocol": [],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "time": [],
  "tokenize": [],
  "toml": [
   "toml/conda-forge/noarch/toml-0.9.4-py_0"
  ],
  "traceback": [],
  "tuple": [],
  "types": [],
  "typing": [],
  "warnings": []
 }
}