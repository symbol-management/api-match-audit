{
 "bad": [
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "add_case_if_soluble",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.Namespace",
  "binstar_client",
  "binstar_client.NotFound",
  "binstar_client.errors.NotFound",
  "binstar_client.utils",
  "binstar_client.utils.detect.detect_package_type",
  "binstar_client.utils.detect.get_attrs",
  "binstar_client.utils.get_binstar",
  "build.build",
  "build.upload",
  "collections",
  "collections.defaultdict",
  "collections.namedtuple",
  "conda.__version__",
  "conda.__version__.split",
  "conda.console.setup_verbose_handlers",
  "conda.exports.MatchSpec",
  "conda.exports.NoPackagesFound",
  "conda.exports.Resolve",
  "conda.exports.Unsatisfiable",
  "conda.exports.get_index",
  "conda.exports.string_types",
  "conda.exports.subdir",
  "conda.fetch",
  "conda.gateways.logging.initialize_logging",
  "conda.lock.Locked",
  "conda.models.dist.Dist",
  "conda.resolve",
  "conda_build",
  "conda_build.api",
  "conda_build.api.Config",
  "conda_build.api.build",
  "conda_build.api.get_output_file_path",
  "conda_build.api.render",
  "conda_build.build",
  "conda_build.build.bldpkg_path",
  "conda_build.build.build",
  "conda_build.build.test",
  "conda_build.build.verbose",
  "conda_build.config",
  "conda_build.config.config",
  "conda_build.index.write_repodata",
  "conda_build.metadata.MetaData",
  "conda_build.render",
  "conda_build.source",
  "conda_build.utils.get_lock",
  "conda_build_all.__init__.get_versions",
  "conda_build_all.artefact_destination.log.addHandler",
  "conda_build_all.artefact_destination.log.setLevel",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "functools",
  "functools.wraps",
  "get_pkgs",
  "glob",
  "glob.glob",
  "inspect_binstar.add_distribution_to_channel",
  "inspect_binstar.copy_distribution_to_owner",
  "inspect_binstar.distribution_exists",
  "inspect_binstar.distribution_exists_on_channel",
  "json",
  "json.loads",
  "logging",
  "logging.Handler",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.WARNING",
  "logging.getLogger",
  "minor_vn",
  "mock",
  "order_deps.resolve_dependencies",
  "orig_result",
  "os",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.join",
  "os.path.normpath",
  "os.path.sep",
  "os.remove",
  "os.symlink",
  "os.walk",
  "posixpath",
  "posixpath.basename",
  "posixpath.dirname",
  "re",
  "re.match",
  "resolved_distribution.ResolvedDistribution.resolve_all",
  "shutil",
  "shutil.copy",
  "shutil.rmtree",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "sys",
  "sys.executable",
  "sys.stdout.flush",
  "sys.stdout.write",
  "tempfile",
  "tempfile.mkdtemp",
  "textwrap",
  "textwrap.dedent",
  "unittest",
  "unittest.TestCase",
  "unittest.main",
  "unittest.mock",
  "unittest.mock.Mock",
  "unittest.mock.call",
  "unittest.mock.patch",
  "unittest.mock.sentinel.channel",
  "unittest.mock.sentinel.client",
  "unittest.mock.sentinel.dist_path",
  "unittest.mock.sentinel.dummy_meta",
  "unittest.mock.sentinel.dummy_path1",
  "unittest.mock.sentinel.dummy_path2",
  "unittest.mock.sentinel.owner",
  "unittest.mock.sentinel.token",
  "unittest.skipIf",
  "version_matrix.keep_top_n_major_versions",
  "version_matrix.keep_top_n_minor_versions"
 ],
 "deps": {
  "__future__": [],
  "add_case_if_soluble": [],
  "argparse": [],
  "binstar_client": [],
  "build": [],
  "collections": [],
  "conda": [],
  "conda_build": [],
  "conda_build_all": [],
  "contextlib": [],
  "copy": [],
  "functools": [],
  "get_pkgs": [],
  "glob": [],
  "inspect_binstar": [],
  "json": [],
  "logging": [],
  "minor_vn": [],
  "mock": [],
  "order_deps": [],
  "orig_result": [],
  "os": [],
  "posixpath": [],
  "re": [],
  "resolved_distribution": [],
  "shutil": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "unittest": [],
  "version_matrix": []
 }
}