{
 "bad": [
  "_compare_dict",
  "_format_multiline",
  "_get_array_check_statistics",
  "_get_array_type",
  "_handle_check_results",
  "_index_stats",
  "_pandas_obj_to_validate",
  "_set_column_handler",
  "_try_coercion",
  "_wrapper",
  "_write_yaml",
  "black",
  "black.FileMode",
  "black.format_str",
  "bool.get",
  "build_complex",
  "check",
  "check._check_fn",
  "check.element_wise",
  "check.name",
  "check.statistics",
  "check.strategy",
  "check_constructor",
  "check_fn",
  "check_fn.__name__",
  "checks.Check.REGISTERED_CUSTOM_CHECKS",
  "checks.Check.equal_to",
  "checks.Check.greater_than",
  "checks.Check.greater_than_or_equal_to",
  "checks.Check.in_range",
  "checks.Check.isin",
  "checks.Check.less_than",
  "checks.Check.less_than_or_equal_to",
  "checks.Check.not_equal_to",
  "checks.Check.notin",
  "checks.Check.str_contains",
  "checks.Check.str_endswith",
  "checks.Check.str_length",
  "checks.Check.str_matches",
  "checks.Check.str_startswith",
  "class_method",
  "class_method.__name__",
  "col_constructor",
  "collections.defaultdict",
  "compat_kwargs",
  "complex.get",
  "constants.N_FAILURE_CASES",
  "dict.fromkeys",
  "dtype_",
  "dtype_.str_alias",
  "dtypes.NUMPY_NONNULLABLE_INT_DTYPES",
  "dtypes.PandasDtype.Bool",
  "dtypes.PandasDtype.Category",
  "dtypes.PandasDtype.DateTime",
  "dtypes.PandasDtype.Float",
  "dtypes.PandasDtype.Float16",
  "dtypes.PandasDtype.Float32",
  "dtypes.PandasDtype.Float64",
  "dtypes.PandasDtype.INT16",
  "dtypes.PandasDtype.INT32",
  "dtypes.PandasDtype.INT64",
  "dtypes.PandasDtype.INT8",
  "dtypes.PandasDtype.Int",
  "dtypes.PandasDtype.Int16",
  "dtypes.PandasDtype.Int32",
  "dtypes.PandasDtype.Int64",
  "dtypes.PandasDtype.Int8",
  "dtypes.PandasDtype.Object",
  "dtypes.PandasDtype.STRING",
  "dtypes.PandasDtype.String",
  "dtypes.PandasDtype.Timedelta",
  "dtypes.PandasDtype.UINT16",
  "dtypes.PandasDtype.UINT32",
  "dtypes.PandasDtype.UINT64",
  "dtypes.PandasDtype.UINT8",
  "dtypes.PandasDtype.UInt16",
  "dtypes.PandasDtype.UInt32",
  "dtypes.PandasDtype.UInt64",
  "dtypes.PandasDtype.UInt8",
  "dtypes.PandasDtype.from_pandas_api_type",
  "dtypes.PandasDtype.from_str_alias",
  "dtypes.PandasDtype.get_str_dtype",
  "enum.Enum",
  "errors.SchemaDefinitionError",
  "errors.SchemaError",
  "errors.SchemaErrors",
  "errors.SchemaInitError",
  "float.get",
  "fn",
  "formatter",
  "functools.partial",
  "handle_stat_dtype",
  "hypothesis",
  "hypothesis.assume",
  "hypothesis.errors.NonInteractiveExampleWarning",
  "hypothesis.extra.numpy",
  "hypothesis.extra.numpy.TIME_RESOLUTIONS",
  "hypothesis.extra.numpy.from_dtype",
  "hypothesis.extra.pandas",
  "hypothesis.extra.pandas.column",
  "hypothesis.extra.pandas.data_frames",
  "hypothesis.extra.pandas.indexes",
  "hypothesis.extra.pandas.range_indexes",
  "hypothesis.extra.pandas.series",
  "hypothesis.strategies",
  "hypothesis.strategies.SearchStrategy",
  "hypothesis.strategies.booleans",
  "hypothesis.strategies.builds",
  "hypothesis.strategies.composite",
  "hypothesis.strategies.fixed_dictionaries",
  "hypothesis.strategies.floats",
  "hypothesis.strategies.from_regex",
  "hypothesis.strategies.integers",
  "hypothesis.strategies.just",
  "hypothesis.strategies.lists",
  "hypothesis.strategies.sampled_from",
  "hypothesis.strategies.text",
  "index_constructor",
  "int.get",
  "itertools",
  "left_op",
  "make_row_strategy",
  "max_op",
  "method",
  "min_op",
  "numpy.complex",
  "numpy.dtype",
  "numpy.float",
  "numpy.int",
  "numpy.int64",
  "numpy.sctypes.values",
  "numpy.uint",
  "obj_getter",
  "object.get",
  "packaging.version",
  "packaging.version.parse",
  "pandas.api.types.infer_dtype",
  "pandas.api.types.is_extension_array_dtype",
  "pandas.core.dtypes.dtypes.registry",
  "parse_checks",
  "pathlib.Path",
  "register_check_wrapper",
  "right_op",
  "schema_component",
  "schema_component.has_subcomponents",
  "schema_components.Column",
  "schema_components.Index",
  "schema_components.MultiIndex",
  "schemas.DataFrameSchema",
  "schemas.DataFrameSchema.strategy.__doc__",
  "schemas.DataFrameSchema.validate.__doc__",
  "schemas.SeriesSchema",
  "str.get",
  "strategies.column_strategy",
  "strategies.dataframe_strategy",
  "strategies.eq_strategy",
  "strategies.ge_strategy",
  "strategies.gt_strategy",
  "strategies.in_range_strategy",
  "strategies.index_strategy",
  "strategies.isin_strategy",
  "strategies.le_strategy",
  "strategies.lt_strategy",
  "strategies.multiindex_strategy",
  "strategies.ne_strategy",
  "strategies.notin_strategy",
  "strategies.register_check_strategy",
  "strategies.series_strategy",
  "strategies.str_contains_strategy",
  "strategies.str_endswith_strategy",
  "strategies.str_length_strategy",
  "strategies.str_matches_strategy",
  "strategies.str_startswith_strategy",
  "strategies.strategy_import_error",
  "sys",
  "to_dataframe",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Generic",
  "typing.Iterable",
  "typing.List",
  "typing.Literal",
  "typing.NoReturn",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "typing.get_type_hints",
  "undefined_check_strategy",
  "validate_check_kwargs",
  "validate_column",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "wrapped_fn"
 ],
 "deps": {
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.17.5-py36h95a1406_0",
   "numpy/conda-forge/linux-64/numpy-1.18.4-py37h8960a57_0",
   "numpy/conda-forge/linux-64/numpy-1.19.2-py36h68c22af_1"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pandas": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.17.1-np110py27_blas_openblas_202",
   "scipy/conda-forge/linux-64/scipy-1.7.0-py37h29e03ee_0",
   "scipy/conda-forge/linux-64/scipy-1.7.0-py37ha768fb6_1"
  ],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.10.0.0-pyha770c72_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.2-py_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "typing_inspect": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "typing_inspect/conda-forge/noarch/typing_inspect-0.5.0-py_0",
   "typing_inspect/conda-forge/noarch/typing_inspect-0.5.0-py_1",
   "typing_inspect/conda-forge/noarch/typing_inspect-0.7.1-pyh6c4a22f_0"
  ],
  "wrapt": [
   "wrapt/conda-forge/linux-64/wrapt-1.12.1-py36h8c4c3a4_1",
   "wrapt/conda-forge/linux-64/wrapt-1.12.1-py38h25fe258_2"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "pyyaml/conda-forge/linux-64/pyyaml-3.11-py35_0",
   "pyyaml/conda-forge/win-64/pyyaml-5.2-py36hfa6e2cd_0"
  ]
 }
}