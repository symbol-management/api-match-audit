{
 "bad": [
  "CompoundSpectralModel",
  "ConstantSpectralModel",
  "MPLPlotCheck",
  "MapAxis",
  "MapAxis.from_edges",
  "MapAxis.from_nodes",
  "StringIO.StringIO",
  "_calc_fap",
  "_col",
  "_del_nan_col",
  "_make_parname",
  "_skycoord_from_table",
  "analysis.cli_make_config",
  "analysis.cli_run_analysis",
  "astropy.coordinates.SkyCoord.from_pixel",
  "astropy.io.fits.BinTableHDU.from_columns",
  "astropy.modeling.models.Gaussian1D.evaluate",
  "astropy.table.Table.read",
  "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
  "astropy.timeseries.LombScargle",
  "astropy.units.G",
  "astropy.units.GeV",
  "astropy.units.MeV",
  "astropy.units.TeV",
  "astropy.units.TeV.value",
  "astropy.units.W",
  "astropy.units.cm",
  "astropy.units.day.to",
  "astropy.units.deg",
  "astropy.units.deg.to",
  "astropy.units.eV",
  "astropy.units.h",
  "astropy.units.hour",
  "astropy.units.hr",
  "astropy.units.km",
  "astropy.units.kpc",
  "astropy.units.m",
  "astropy.units.rad.to",
  "astropy.units.second",
  "astropy.units.steradian",
  "astropy.units.yr",
  "background.Background3D.read",
  "cStringIO.StringIO",
  "check.cli_check",
  "cls",
  "cls_out",
  "cls_out.from_hdulist",
  "component",
  "component._sigma2",
  "component.containment_fraction",
  "component.dpdtheta2",
  "compute",
  "conv_function",
  "core.SourceCatalogObject._row_index_key",
  "cr_spectrum",
  "cr_spectrum.integral",
  "cr_spectrum.spectral_index",
  "crab_spectrum",
  "crab_spectrum.integral",
  "crab_spectrum.spectral_index",
  "data_store.CalDBIRF",
  "dict.fromkeys",
  "disk",
  "docutils.parsers.rst.directives.body.CodeBlock",
  "docutils.parsers.rst.directives.misc.Include",
  "docutils.parsers.rst.directives.register_directive",
  "download.cli_download_datasets",
  "download.cli_download_notebooks",
  "download.cli_download_scripts",
  "download.cli_download_tutorials",
  "effective_area.EffectiveAreaTable2D.peek",
  "effective_area.EffectiveAreaTable2D.read",
  "energy_dispersion.EnergyDispersion2D.read",
  "environment",
  "eval.compute_npred",
  "eval.geom",
  "exposure",
  "f",
  "fit.MIGRA_AXIS_DEFAULT",
  "fn",
  "func",
  "g",
  "g.containment_fraction",
  "g.containment_radius",
  "g.dpdtheta2",
  "g.sigma",
  "gammapy.analysis.AnalysisConfig._get_doc_sections",
  "gammapy.analysis.AnalysisConfig.read",
  "gammapy.cube.EDispMap.from_diagonal_response",
  "gammapy.cube.EDispMap.from_hdulist",
  "gammapy.cube.EDispMap.read",
  "gammapy.cube.MapDataset.create",
  "gammapy.cube.MapDataset.from_geoms",
  "gammapy.cube.MapDataset.read",
  "gammapy.cube.MapDatasetMaker.available_selection",
  "gammapy.cube.MapDatasetOnOff.create",
  "gammapy.cube.MapDatasetOnOff.read",
  "gammapy.cube.PSFKernel.from_gauss",
  "gammapy.cube.PSFKernel.from_table_psf",
  "gammapy.cube.PSFKernel.read",
  "gammapy.cube.PSFMap.from_energy_dependent_table_psf",
  "gammapy.cube.PSFMap.from_hdulist",
  "gammapy.cube.PSFMap.read",
  "gammapy.cube.fit.MapDatasetOnOff.create",
  "gammapy.data.DataStore.from_dir",
  "gammapy.data.DataStore.from_events_files",
  "gammapy.data.DataStore.from_file",
  "gammapy.data.EventList.read",
  "gammapy.data.EventList.stack",
  "gammapy.data.EventListBase.read",
  "gammapy.data.EventListLAT.read",
  "gammapy.data.FixedPointingInfo.read",
  "gammapy.data.GTI.create",
  "gammapy.data.GTI.read",
  "gammapy.data.HDUIndexTable.read",
  "gammapy.data.Observation.create",
  "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES.values",
  "gammapy.data.PointingInfo.read",
  "gammapy.detect.ASmooth.make_scales",
  "gammapy.detect._test_statistics_cython._amplitude_bounds_cython",
  "gammapy.detect._test_statistics_cython._f_cash_root_cython",
  "gammapy.detect._test_statistics_cython._x_best_leastsq",
  "gammapy.irf.Background2D.read",
  "gammapy.irf.Background3D.read",
  "gammapy.irf.EffectiveAreaTable.from_constant",
  "gammapy.irf.EffectiveAreaTable.from_parametrization",
  "gammapy.irf.EffectiveAreaTable.read",
  "gammapy.irf.EffectiveAreaTable2D.read",
  "gammapy.irf.EnergyDependentMultiGaussPSF.read",
  "gammapy.irf.EnergyDependentTablePSF.read",
  "gammapy.irf.EnergyDispersion.from_diagonal_response",
  "gammapy.irf.EnergyDispersion.from_gauss",
  "gammapy.irf.EnergyDispersion.from_hdulist",
  "gammapy.irf.EnergyDispersion.read",
  "gammapy.irf.EnergyDispersion2D.from_gauss",
  "gammapy.irf.EnergyDispersion2D.read",
  "gammapy.irf.PSF3D.read",
  "gammapy.irf.PSFKing.read",
  "gammapy.irf.TablePSF.from_shape",
  "gammapy.maps.HpxGeom.create",
  "gammapy.maps.HpxMap.read",
  "gammapy.maps.HpxNDMap.create",
  "gammapy.maps.HpxNDMap.read",
  "gammapy.maps.Map.create",
  "gammapy.maps.Map.from_geom",
  "gammapy.maps.Map.from_hdulist",
  "gammapy.maps.Map.read",
  "gammapy.maps.MapAxis.from_bounds",
  "gammapy.maps.MapAxis.from_edges",
  "gammapy.maps.MapAxis.from_energy_bounds",
  "gammapy.maps.MapAxis.from_nodes",
  "gammapy.maps.MapCoord.create",
  "gammapy.maps.WcsGeom.create",
  "gammapy.maps.WcsGeom.from_header",
  "gammapy.maps.WcsNDMap.create",
  "gammapy.maps.WcsNDMap.from_geom",
  "gammapy.maps.WcsNDMap.read",
  "gammapy.modeling.Dataset.stat_sum",
  "gammapy.modeling.Datasets.read",
  "gammapy.modeling.Model.create",
  "gammapy.modeling.Parameters.from_stack",
  "gammapy.modeling.Parameters.from_values",
  "gammapy.modeling.models.AbsorbedSpectralModel.from_dict",
  "gammapy.modeling.models.Absorption.read_builtin",
  "gammapy.modeling.models.BackgroundModel.from_dict",
  "gammapy.modeling.models.LightCurveTemplateTemporalModel.read",
  "gammapy.modeling.models.LogParabolaSpectralModel.from_log10",
  "gammapy.modeling.models.Model.create",
  "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral",
  "gammapy.modeling.models.SPATIAL_MODELS.get_cls",
  "gammapy.modeling.models.SPECTRAL_MODELS.get_cls",
  "gammapy.modeling.models.SkyDiffuseCube.read",
  "gammapy.modeling.models.SkyModels.read",
  "gammapy.modeling.models.TemplateSpatialModel.read",
  "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model",
  "gammapy.modeling.models.__init__.Registry",
  "gammapy.modeling.models.__init__.SPATIAL_MODELS",
  "gammapy.modeling.models.__init__.SPECTRAL_MODELS",
  "gammapy.modeling.models.__init__.TEMPORAL_MODELS",
  "gammapy.modeling.models.__init__.__all__",
  "gammapy.spectrum.CountsSpectrum.read",
  "gammapy.spectrum.FluxPoints._dnde_from_flux",
  "gammapy.spectrum.FluxPoints._e_ref_lafferty",
  "gammapy.spectrum.FluxPoints.read",
  "gammapy.spectrum.FluxPoints.stack",
  "gammapy.spectrum.PhaseBackgroundMaker._check_intervals",
  "gammapy.spectrum.SpectrumDataset.create",
  "gammapy.spectrum.SpectrumDatasetOnOff.create",
  "gammapy.spectrum.SpectrumDatasetOnOff.from_ogip_files",
  "gammapy.stats.cash_sum_cython",
  "gammapy.time.LightCurve.read",
  "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.value",
  "gauss2d_pdf",
  "geom.MapCoord.create",
  "get_angle",
  "get_nonentry_keys",
  "gti.GTI.create",
  "hashlib.md5",
  "hdu_index_table.HDUIndexTable.read",
  "hpx.HpxConv.create",
  "hpx.HpxGeom",
  "hpx.HpxGeom.create",
  "hpx.HpxGeom.from_header",
  "hpx.HpxGeom.identify_hpx_convention",
  "hpx.HpxToWcsMapping.create",
  "hpxmap.HpxMap.create",
  "hpxnd.HpxNDMap",
  "iminuit.Minuit",
  "info.cli_info",
  "integral_fcn",
  "interp",
  "interp_fn",
  "interp_norm",
  "interp_sigma",
  "inverse_cdf.InverseCDFSampler",
  "itertools",
  "itertools.chain",
  "itertools.product",
  "jupyter.cli_jupyter_black",
  "jupyter.cli_jupyter_run",
  "jupyter.cli_jupyter_strip",
  "jupyter.cli_jupyter_test",
  "log10",
  "log_scale",
  "log_scale.inverse",
  "make_path",
  "map.geom.get_axis_by_name",
  "map.geom.wcs",
  "map.plot",
  "map.plot_rgb",
  "marshal",
  "marshal.dump",
  "max.setter",
  "method",
  "min.setter",
  "model",
  "model.alpha_norm.value",
  "model.amplitude.value",
  "model.e_peak",
  "model.edge.quantity",
  "model.energy_flux",
  "model.evaluate",
  "model.evaluate_error",
  "model.evaluate_geom",
  "model.evaluation_radius",
  "model.frame",
  "model.integral",
  "model.inverse",
  "model.normalize",
  "model.parameters",
  "model.parameters.covariance",
  "model.parameters.set_error",
  "model.position.dec.value",
  "model.position.ra.value",
  "model.position_error",
  "model.spectral_model.amplitude.value",
  "model.spectral_model.parameters.set_error",
  "model.tag",
  "model.to_dict",
  "model.to_region",
  "model_1",
  "model_1.evaluation_radius",
  "model_2",
  "model_3",
  "model_rot_test",
  "models.MODELS.get_cls",
  "models.SkyDiffuseCube.from_dict",
  "models.SkyModel.from_dict",
  "naima",
  "naima.models.ExponentialCutoffBrokenPowerLaw",
  "naima.models.LogParabola",
  "naima.models.PowerLaw",
  "naima.radiative.InverseCompton",
  "naima.radiative.PionDecay",
  "naima.radiative.Synchrotron",
  "notebook_test",
  "numpy.add.reduce",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.broadcast_to",
  "numpy.degrees",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.log",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.math.factorial",
  "numpy.maximum",
  "numpy.modf",
  "numpy.nan",
  "numpy.not_equal",
  "numpy.pi.to_value",
  "numpy.pi.value",
  "numpy.power",
  "numpy.radians",
  "numpy.random.RandomState",
  "numpy.random.mtrand._rand",
  "numpy.random.rand",
  "numpy.random.uniform",
  "numpy.remainder",
  "numpy.rint",
  "numpy.sign",
  "numpy.stack",
  "numpy.subtract",
  "numpy.true_divide",
  "numpy.uint16",
  "obs_table.ObservationTable.read",
  "ordereddict.OrderedDict",
  "os.environ.get",
  "os.path.isfile",
  "os.path.join",
  "p",
  "p.DISTANCE_GC",
  "p.LOCAL_DENSITY",
  "parameter.Parameters.from_stack",
  "pkg_resources.working_set.require",
  "polynomial",
  "psf",
  "psf_gauss",
  "psf_gauss.EnergyDependentMultiGaussPSF.read",
  "psf_kernel.PSFKernel.from_table_psf",
  "pwl",
  "pwl.parameters.covariance",
  "pwl.parameters.set_error",
  "pwl.pivot_energy",
  "pwl.plot",
  "pwl.plot_error",
  "pydantic.utils.deep_update",
  "pytest.mark.parametrize",
  "pytest.mark.remote_data",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "re.I",
  "re.M",
  "regions",
  "regions.CircleAnnulusSkyRegion",
  "regions.CirclePixelRegion",
  "regions.CircleSkyRegion",
  "regions.CompoundSkyRegion",
  "regions.DS9Parser",
  "regions.EllipseAnnulusSkyRegion",
  "regions.EllipseSkyRegion",
  "regions.PixCoord",
  "regions.PixCoord.from_sky",
  "regions.PixelRegion",
  "regions.PointSkyRegion",
  "regions.PolygonSkyRegion",
  "regions.RectangleSkyRegion",
  "regions.Region",
  "regions.SkyRegion",
  "scale",
  "scale.inverse",
  "scipy.stats.norm.pdf",
  "self",
  "self.__class__.__name__",
  "self._convert_evaluate_unit",
  "self._evaluate",
  "self._parameters",
  "self._parameters.to_dict",
  "self._particle_distribution",
  "self._plot_format_ax",
  "self._plot_scale_flux",
  "self.absorption.evaluate",
  "self.absorption.to_dict",
  "self.alpha_norm.value",
  "self.amplitude.quantity",
  "self.data.data.tolist",
  "self.data.unit",
  "self.distance",
  "self.energy",
  "self.energy.data.tolist",
  "self.energy.unit",
  "self.evaluate",
  "self.evaluate_energy_flux",
  "self.evaluate_error",
  "self.evaluate_integral",
  "self.filename",
  "self.model",
  "self.model1",
  "self.model1.parameters",
  "self.model1.to_dict",
  "self.model2",
  "self.model2.parameters",
  "self.model2.to_dict",
  "self.operator",
  "self.param.data.tolist",
  "self.param.unit",
  "self.parameter",
  "self.parameter_name",
  "self.parameters",
  "self.parameters.covariance",
  "self.parameters.error",
  "self.parameters.to_dict",
  "self.radiative_model.flux",
  "self.reference.quantity",
  "self.seed",
  "self.spectral_model.evaluate",
  "self.spectral_model.parameters",
  "self.spectral_model.to_dict",
  "self.tag",
  "self.values.data.tolist",
  "self.values.unit",
  "serialize.datasets_to_dict",
  "serialize.dict_to_datasets",
  "sherpa.astro.ui",
  "sherpa.astro.ui.fit",
  "sherpa.astro.ui.load_pha",
  "sherpa.astro.ui.set_model",
  "sherpa.astro.ui.set_stat",
  "sherpa.models.PowLaw1D",
  "sherpa.optmethods.GridSearch",
  "sherpa.optmethods.LevMar",
  "sherpa.optmethods.MonCar",
  "sherpa.optmethods.NelderMead",
  "sigma_energy_theta",
  "spatial.ConstantSpatialModel",
  "spatial.RMAX.to_value",
  "spatial.RMIN.to_value",
  "spatial.SpatialModel",
  "spatial.ZMAX.to_value",
  "spatial.ZMIN.to_value",
  "spectral.SpectralModel",
  "spectral.TemplateSpectralModel",
  "spectral_model",
  "spectral_model.energy_flux",
  "spectral_model.evaluate_error",
  "spectral_model.integral",
  "sys",
  "sys.argv",
  "sys.executable",
  "sys.exit",
  "sys.modules.__path__",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdout",
  "sys.stdout.write",
  "time",
  "time.time",
  "utils.INVALID_INDEX.float",
  "utils.INVALID_INDEX.int",
  "velocity.VMAX.to_value",
  "velocity.VMIN.to_value",
  "wcs.WcsGeom",
  "wcs.WcsGeom.create",
  "wcsmap.WcsGeom.from_header",
  "wcsmap.WcsMap.create",
  "wcsnd.WcsNDMap",
  "xml.parsers.expat.ParserCreate"
 ],
 "deps": {
  "CompoundSpectralModel": [],
  "ConstantSpectralModel": [],
  "MPLPlotCheck": [],
  "MapAxis": [],
  "StringIO": [],
  "_calc_fap": [],
  "_col": [],
  "_del_nan_col": [],
  "_make_parname": [],
  "_skycoord_from_table": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "analysis": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "astropy": [
   "astropy/conda-forge/linux-64/astropy-2.0.4-py27_0"
  ],
  "background": [],
  "black": [
   "black/conda-forge/noarch/black-18.5b1-py_0"
  ],
  "cStringIO": [],
  "check": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "cls": [],
  "cls_out": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "colorsys": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "component": [],
  "compute": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "conv_function": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "core": [],
  "corner": [
   "corner/conda-forge/noarch/corner-2.2.1-pyhd8ed1ab_0"
  ],
  "cr_spectrum": [],
  "crab_spectrum": [],
  "data_store": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dict": [],
  "disk": [],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "docutils": [
   "docutils/conda-forge/linux-64/docutils-0.14-py27_0"
  ],
  "download": [],
  "effective_area": [],
  "emcee": [
   "emcee/conda-forge/noarch/emcee-3.0.1-pyh5ca1d4c_0"
  ],
  "energy_dispersion": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "environment": [],
  "eval": [],
  "exposure": [],
  "f": [],
  "fit": [],
  "fn": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "g": [],
  "gammapy": [],
  "gauss2d_pdf": [],
  "geom": [],
  "get_angle": [],
  "get_nonentry_keys": [],
  "gti": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "hdu_index_table": [],
  "healpy": [
   "healpy/conda-forge/linux-64/healpy-1.12.9-py27h313ec66_0"
  ],
  "hpx": [],
  "hpxmap": [],
  "hpxnd": [],
  "iminuit": [],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "info": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "integral_fcn": [],
  "interp": [],
  "interp_fn": [],
  "interp_norm": [],
  "interp_sigma": [],
  "inverse_cdf": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ipywidgets": [
   "ipywidgets/conda-forge/noarch/ipywidgets-7.5.0-py_0"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jupyter": [],
  "log10": [],
  "log_scale": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "make_path": [],
  "map": [],
  "marshal": [],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "max": [],
  "method": [],
  "min": [],
  "model": [],
  "model_1": [],
  "model_2": [],
  "model_3": [],
  "model_rot_test": [],
  "models": [],
  "naima": [],
  "nbformat": [
   "nbformat/conda-forge/noarch/nbformat-5.1.3-pyhd8ed1ab_0"
  ],
  "notebook_test": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "obs_table": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ordereddict": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "p": [],
  "parameter": [],
  "parfive": [
   "parfive/conda-forge/noarch/parfive-1.0.2-py_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "polynomial": [],
  "psf": [],
  "psf_gauss": [],
  "psf_kernel": [],
  "pwl": [],
  "pydantic": [
   "pydantic/conda-forge/noarch/pydantic-0.18.1-py_1"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "regions": [],
  "scale": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200"
  ],
  "self": [],
  "serialize": [],
  "sherpa": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sigma_energy_theta": [],
  "spatial": [],
  "spectral": [],
  "spectral_model": [],
  "sphinx": [
   "sphinx/conda-forge/noarch/sphinx-3.4.2-pyhd8ed1ab_0"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "time": [],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "utils": [],
  "velocity": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wcs": [],
  "wcsmap": [],
  "wcsnd": [],
  "webbrowser": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ]
 }
}