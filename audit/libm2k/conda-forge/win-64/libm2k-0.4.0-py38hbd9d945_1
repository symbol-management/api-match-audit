{
 "bad": [
  "__builtin__",
  "_libm2k",
  "_libm2k.ADC_GND",
  "_libm2k.ADC_REF1",
  "_libm2k.ADC_REF2",
  "_libm2k.ALWAYS",
  "_libm2k.ANALOG",
  "_libm2k.ANALOG_DEV",
  "_libm2k.ANALOG_IN_CHANNEL_1",
  "_libm2k.ANALOG_IN_CHANNEL_2",
  "_libm2k.ANY_EDGE_DIGITAL",
  "_libm2k.BOTH",
  "_libm2k.CALIBRATION_PARAMETERS_adc_gain_ch_1_get",
  "_libm2k.CALIBRATION_PARAMETERS_adc_gain_ch_1_set",
  "_libm2k.CALIBRATION_PARAMETERS_adc_gain_ch_2_get",
  "_libm2k.CALIBRATION_PARAMETERS_adc_gain_ch_2_set",
  "_libm2k.CALIBRATION_PARAMETERS_adc_offset_ch_1_get",
  "_libm2k.CALIBRATION_PARAMETERS_adc_offset_ch_1_set",
  "_libm2k.CALIBRATION_PARAMETERS_adc_offset_ch_2_get",
  "_libm2k.CALIBRATION_PARAMETERS_adc_offset_ch_2_set",
  "_libm2k.CALIBRATION_PARAMETERS_dac_a_gain_get",
  "_libm2k.CALIBRATION_PARAMETERS_dac_a_gain_set",
  "_libm2k.CALIBRATION_PARAMETERS_dac_a_offset_get",
  "_libm2k.CALIBRATION_PARAMETERS_dac_a_offset_set",
  "_libm2k.CALIBRATION_PARAMETERS_dac_b_gain_get",
  "_libm2k.CALIBRATION_PARAMETERS_dac_b_gain_set",
  "_libm2k.CALIBRATION_PARAMETERS_dac_b_offset_get",
  "_libm2k.CALIBRATION_PARAMETERS_dac_b_offset_set",
  "_libm2k.CALIBRATION_PARAMETERS_swigregister",
  "_libm2k.CHANNEL_1",
  "_libm2k.CHANNEL_1_AND_CHANNEL_2",
  "_libm2k.CHANNEL_1_OR_CHANNEL_2",
  "_libm2k.CHANNEL_1_OR_CHANNEL_2_OR_SRC_LOGIC_ANALYZER",
  "_libm2k.CHANNEL_1_OR_SRC_LOGIC_ANALYZER",
  "_libm2k.CHANNEL_1_XOR_CHANNEL_2",
  "_libm2k.CHANNEL_2",
  "_libm2k.CHANNEL_2_OR_SRC_LOGIC_ANALYZER",
  "_libm2k.CONTEXT_INFO_id_product_get",
  "_libm2k.CONTEXT_INFO_id_product_set",
  "_libm2k.CONTEXT_INFO_id_vendor_get",
  "_libm2k.CONTEXT_INFO_id_vendor_set",
  "_libm2k.CONTEXT_INFO_manufacturer_get",
  "_libm2k.CONTEXT_INFO_manufacturer_set",
  "_libm2k.CONTEXT_INFO_product_get",
  "_libm2k.CONTEXT_INFO_product_set",
  "_libm2k.CONTEXT_INFO_serial_get",
  "_libm2k.CONTEXT_INFO_serial_set",
  "_libm2k.CONTEXT_INFO_swigregister",
  "_libm2k.CONTEXT_INFO_uri_get",
  "_libm2k.CONTEXT_INFO_uri_set",
  "_libm2k.ContextBuilder_contextClose",
  "_libm2k.ContextBuilder_contextCloseAll",
  "_libm2k.ContextBuilder_contextOpen",
  "_libm2k.ContextBuilder_enableLogging",
  "_libm2k.ContextBuilder_getAllContexts",
  "_libm2k.ContextBuilder_getContextsInfo",
  "_libm2k.ContextBuilder_getVersion",
  "_libm2k.ContextBuilder_m2kOpen",
  "_libm2k.ContextBuilder_swigregister",
  "_libm2k.Context_deinitialize",
  "_libm2k.Context_getAllDevices",
  "_libm2k.Context_getAllDmm",
  "_libm2k.Context_getAvailableContextAttributes",
  "_libm2k.Context_getContextAttributeValue",
  "_libm2k.Context_getContextDescription",
  "_libm2k.Context_getDMM",
  "_libm2k.Context_getDmmCount",
  "_libm2k.Context_getFirmwareVersion",
  "_libm2k.Context_getIioContext",
  "_libm2k.Context_getIioContextVersion",
  "_libm2k.Context_getSerialNumber",
  "_libm2k.Context_getUri",
  "_libm2k.Context_logAllAttributes",
  "_libm2k.Context_reset",
  "_libm2k.Context_setTimeout",
  "_libm2k.Context_swigregister",
  "_libm2k.Context_toGeneric",
  "_libm2k.Context_toLidar",
  "_libm2k.Context_toM2k",
  "_libm2k.CtxFMCOMMS",
  "_libm2k.CtxLIDAR",
  "_libm2k.CtxM2K",
  "_libm2k.DAC",
  "_libm2k.DIGITAL_AND_ANALOG",
  "_libm2k.DIGITAL_DEV",
  "_libm2k.DIGITAL_OR_ANALOG",
  "_libm2k.DIGITAL_XOR_ANALOG",
  "_libm2k.DIO_AND",
  "_libm2k.DIO_CHANNEL_0",
  "_libm2k.DIO_CHANNEL_1",
  "_libm2k.DIO_CHANNEL_10",
  "_libm2k.DIO_CHANNEL_11",
  "_libm2k.DIO_CHANNEL_12",
  "_libm2k.DIO_CHANNEL_13",
  "_libm2k.DIO_CHANNEL_14",
  "_libm2k.DIO_CHANNEL_15",
  "_libm2k.DIO_CHANNEL_2",
  "_libm2k.DIO_CHANNEL_3",
  "_libm2k.DIO_CHANNEL_4",
  "_libm2k.DIO_CHANNEL_5",
  "_libm2k.DIO_CHANNEL_6",
  "_libm2k.DIO_CHANNEL_7",
  "_libm2k.DIO_CHANNEL_8",
  "_libm2k.DIO_CHANNEL_9",
  "_libm2k.DIO_INPUT",
  "_libm2k.DIO_OPENDRAIN",
  "_libm2k.DIO_OR",
  "_libm2k.DIO_OUTPUT",
  "_libm2k.DIO_PUSHPULL",
  "_libm2k.DMMReading___bool__",
  "_libm2k.DMMReading___delitem__",
  "_libm2k.DMMReading___delslice__",
  "_libm2k.DMMReading___getitem__",
  "_libm2k.DMMReading___getslice__",
  "_libm2k.DMMReading___len__",
  "_libm2k.DMMReading___nonzero__",
  "_libm2k.DMMReading___setitem__",
  "_libm2k.DMMReading___setslice__",
  "_libm2k.DMMReading_append",
  "_libm2k.DMMReading_assign",
  "_libm2k.DMMReading_back",
  "_libm2k.DMMReading_begin",
  "_libm2k.DMMReading_capacity",
  "_libm2k.DMMReading_clear",
  "_libm2k.DMMReading_empty",
  "_libm2k.DMMReading_end",
  "_libm2k.DMMReading_erase",
  "_libm2k.DMMReading_front",
  "_libm2k.DMMReading_get_allocator",
  "_libm2k.DMMReading_insert",
  "_libm2k.DMMReading_iterator",
  "_libm2k.DMMReading_pop",
  "_libm2k.DMMReading_pop_back",
  "_libm2k.DMMReading_push_back",
  "_libm2k.DMMReading_rbegin",
  "_libm2k.DMMReading_rend",
  "_libm2k.DMMReading_reserve",
  "_libm2k.DMMReading_resize",
  "_libm2k.DMMReading_size",
  "_libm2k.DMMReading_swap",
  "_libm2k.DMMReading_swigregister",
  "_libm2k.DMM_READING_id_get",
  "_libm2k.DMM_READING_id_set",
  "_libm2k.DMM_READING_name_get",
  "_libm2k.DMM_READING_name_set",
  "_libm2k.DMM_READING_swigregister",
  "_libm2k.DMM_READING_unit_get",
  "_libm2k.DMM_READING_unit_set",
  "_libm2k.DMM_READING_value_get",
  "_libm2k.DMM_READING_value_set",
  "_libm2k.DMM_getAllChannels",
  "_libm2k.DMM_getName",
  "_libm2k.DMM_readAll",
  "_libm2k.DMM_readChannel",
  "_libm2k.DMM_reset",
  "_libm2k.DMM_swigregister",
  "_libm2k.DMMs___bool__",
  "_libm2k.DMMs___delitem__",
  "_libm2k.DMMs___delslice__",
  "_libm2k.DMMs___getitem__",
  "_libm2k.DMMs___getslice__",
  "_libm2k.DMMs___len__",
  "_libm2k.DMMs___nonzero__",
  "_libm2k.DMMs___setitem__",
  "_libm2k.DMMs___setslice__",
  "_libm2k.DMMs_append",
  "_libm2k.DMMs_assign",
  "_libm2k.DMMs_back",
  "_libm2k.DMMs_begin",
  "_libm2k.DMMs_capacity",
  "_libm2k.DMMs_clear",
  "_libm2k.DMMs_empty",
  "_libm2k.DMMs_end",
  "_libm2k.DMMs_erase",
  "_libm2k.DMMs_front",
  "_libm2k.DMMs_get_allocator",
  "_libm2k.DMMs_insert",
  "_libm2k.DMMs_iterator",
  "_libm2k.DMMs_pop",
  "_libm2k.DMMs_pop_back",
  "_libm2k.DMMs_push_back",
  "_libm2k.DMMs_rbegin",
  "_libm2k.DMMs_rend",
  "_libm2k.DMMs_reserve",
  "_libm2k.DMMs_resize",
  "_libm2k.DMMs_size",
  "_libm2k.DMMs_swap",
  "_libm2k.DMMs_swigregister",
  "_libm2k.ERROR",
  "_libm2k.EVEN",
  "_libm2k.EXC_INVALID_FIRMWARE_VERSION",
  "_libm2k.EXC_INVALID_PARAMETER",
  "_libm2k.EXC_OUT_OF_RANGE",
  "_libm2k.EXC_RUNTIME_ERROR",
  "_libm2k.EXC_TIMEOUT",
  "_libm2k.EXTERNAL",
  "_libm2k.FALLING_EDGE_ANALOG",
  "_libm2k.FALLING_EDGE_DIGITAL",
  "_libm2k.FATAL",
  "_libm2k.FMCOMMS_swigregister",
  "_libm2k.GenericAnalogIn_enableChannel",
  "_libm2k.GenericAnalogIn_getAvailableSampleRates",
  "_libm2k.GenericAnalogIn_getDeviceName",
  "_libm2k.GenericAnalogIn_getIioObjects",
  "_libm2k.GenericAnalogIn_getMaximumSamplerate",
  "_libm2k.GenericAnalogIn_getNbChannels",
  "_libm2k.GenericAnalogIn_getSampleRate",
  "_libm2k.GenericAnalogIn_getSamplesInterleaved",
  "_libm2k.GenericAnalogIn_getSamplesRawInterleaved",
  "_libm2k.GenericAnalogIn_setKernelBuffersCount",
  "_libm2k.GenericAnalogIn_setSampleRate",
  "_libm2k.GenericAnalogIn_swigregister",
  "_libm2k.GenericAnalogOut_enableChannel",
  "_libm2k.GenericAnalogOut_getAvailableSampleRates",
  "_libm2k.GenericAnalogOut_getCyclic",
  "_libm2k.GenericAnalogOut_getName",
  "_libm2k.GenericAnalogOut_getSampleRate",
  "_libm2k.GenericAnalogOut_isChannelEnabled",
  "_libm2k.GenericAnalogOut_push",
  "_libm2k.GenericAnalogOut_pushRaw",
  "_libm2k.GenericAnalogOut_setCyclic",
  "_libm2k.GenericAnalogOut_setSampleRate",
  "_libm2k.GenericAnalogOut_stop",
  "_libm2k.GenericAnalogOut_swigregister",
  "_libm2k.Generic_getAnalogIn",
  "_libm2k.Generic_getAnalogInCount",
  "_libm2k.Generic_getAnalogOut",
  "_libm2k.Generic_getAnalogOutCount",
  "_libm2k.Generic_swigregister",
  "_libm2k.HIGH",
  "_libm2k.HIGH_GAIN",
  "_libm2k.HIGH_LEVEL_ANALOG",
  "_libm2k.HIGH_LEVEL_DIGITAL",
  "_libm2k.IIO_CONTEXT_VERSION_git_tag_get",
  "_libm2k.IIO_CONTEXT_VERSION_git_tag_set",
  "_libm2k.IIO_CONTEXT_VERSION_major_get",
  "_libm2k.IIO_CONTEXT_VERSION_major_set",
  "_libm2k.IIO_CONTEXT_VERSION_minor_get",
  "_libm2k.IIO_CONTEXT_VERSION_minor_set",
  "_libm2k.IIO_CONTEXT_VERSION_swigregister",
  "_libm2k.IIO_OBJECTS_buffers_rx_get",
  "_libm2k.IIO_OBJECTS_buffers_rx_set",
  "_libm2k.IIO_OBJECTS_buffers_tx_get",
  "_libm2k.IIO_OBJECTS_buffers_tx_set",
  "_libm2k.IIO_OBJECTS_channels_in_get",
  "_libm2k.IIO_OBJECTS_channels_in_set",
  "_libm2k.IIO_OBJECTS_channels_out_get",
  "_libm2k.IIO_OBJECTS_channels_out_set",
  "_libm2k.IIO_OBJECTS_context_get",
  "_libm2k.IIO_OBJECTS_context_set",
  "_libm2k.IIO_OBJECTS_devices_get",
  "_libm2k.IIO_OBJECTS_devices_set",
  "_libm2k.IIO_OBJECTS_swigregister",
  "_libm2k.INFO",
  "_libm2k.INPUT",
  "_libm2k.IioBuffers___bool__",
  "_libm2k.IioBuffers___delitem__",
  "_libm2k.IioBuffers___delslice__",
  "_libm2k.IioBuffers___getitem__",
  "_libm2k.IioBuffers___getslice__",
  "_libm2k.IioBuffers___len__",
  "_libm2k.IioBuffers___nonzero__",
  "_libm2k.IioBuffers___setitem__",
  "_libm2k.IioBuffers___setslice__",
  "_libm2k.IioBuffers_append",
  "_libm2k.IioBuffers_assign",
  "_libm2k.IioBuffers_back",
  "_libm2k.IioBuffers_begin",
  "_libm2k.IioBuffers_capacity",
  "_libm2k.IioBuffers_clear",
  "_libm2k.IioBuffers_empty",
  "_libm2k.IioBuffers_end",
  "_libm2k.IioBuffers_erase",
  "_libm2k.IioBuffers_front",
  "_libm2k.IioBuffers_get_allocator",
  "_libm2k.IioBuffers_insert",
  "_libm2k.IioBuffers_iterator",
  "_libm2k.IioBuffers_pop",
  "_libm2k.IioBuffers_pop_back",
  "_libm2k.IioBuffers_push_back",
  "_libm2k.IioBuffers_rbegin",
  "_libm2k.IioBuffers_rend",
  "_libm2k.IioBuffers_reserve",
  "_libm2k.IioBuffers_resize",
  "_libm2k.IioBuffers_size",
  "_libm2k.IioBuffers_swap",
  "_libm2k.IioBuffers_swigregister",
  "_libm2k.IioChannels___bool__",
  "_libm2k.IioChannels___delitem__",
  "_libm2k.IioChannels___delslice__",
  "_libm2k.IioChannels___getitem__",
  "_libm2k.IioChannels___getslice__",
  "_libm2k.IioChannels___len__",
  "_libm2k.IioChannels___nonzero__",
  "_libm2k.IioChannels___setitem__",
  "_libm2k.IioChannels___setslice__",
  "_libm2k.IioChannels_append",
  "_libm2k.IioChannels_assign",
  "_libm2k.IioChannels_back",
  "_libm2k.IioChannels_begin",
  "_libm2k.IioChannels_capacity",
  "_libm2k.IioChannels_clear",
  "_libm2k.IioChannels_empty",
  "_libm2k.IioChannels_end",
  "_libm2k.IioChannels_erase",
  "_libm2k.IioChannels_front",
  "_libm2k.IioChannels_get_allocator",
  "_libm2k.IioChannels_insert",
  "_libm2k.IioChannels_iterator",
  "_libm2k.IioChannels_pop",
  "_libm2k.IioChannels_pop_back",
  "_libm2k.IioChannels_push_back",
  "_libm2k.IioChannels_rbegin",
  "_libm2k.IioChannels_rend",
  "_libm2k.IioChannels_reserve",
  "_libm2k.IioChannels_resize",
  "_libm2k.IioChannels_size",
  "_libm2k.IioChannels_swap",
  "_libm2k.IioChannels_swigregister",
  "_libm2k.IioDevices___bool__",
  "_libm2k.IioDevices___delitem__",
  "_libm2k.IioDevices___delslice__",
  "_libm2k.IioDevices___getitem__",
  "_libm2k.IioDevices___getslice__",
  "_libm2k.IioDevices___len__",
  "_libm2k.IioDevices___nonzero__",
  "_libm2k.IioDevices___setitem__",
  "_libm2k.IioDevices___setslice__",
  "_libm2k.IioDevices_append",
  "_libm2k.IioDevices_assign",
  "_libm2k.IioDevices_back",
  "_libm2k.IioDevices_begin",
  "_libm2k.IioDevices_capacity",
  "_libm2k.IioDevices_clear",
  "_libm2k.IioDevices_empty",
  "_libm2k.IioDevices_end",
  "_libm2k.IioDevices_erase",
  "_libm2k.IioDevices_front",
  "_libm2k.IioDevices_get_allocator",
  "_libm2k.IioDevices_insert",
  "_libm2k.IioDevices_iterator",
  "_libm2k.IioDevices_pop",
  "_libm2k.IioDevices_pop_back",
  "_libm2k.IioDevices_push_back",
  "_libm2k.IioDevices_rbegin",
  "_libm2k.IioDevices_rend",
  "_libm2k.IioDevices_reserve",
  "_libm2k.IioDevices_resize",
  "_libm2k.IioDevices_size",
  "_libm2k.IioDevices_swap",
  "_libm2k.IioDevices_swigregister",
  "_libm2k.LIBM2K_ATTRIBUTE_READ",
  "_libm2k.LIBM2K_ATTRIBUTE_WRITE",
  "_libm2k.LOW",
  "_libm2k.LOW_GAIN",
  "_libm2k.LOW_LEVEL_ANALOG",
  "_libm2k.LOW_LEVEL_DIGITAL",
  "_libm2k.LSB",
  "_libm2k.Lidar_channelEnableDisable",
  "_libm2k.Lidar_disableChannelSequencer",
  "_libm2k.Lidar_enableChannelSequencer",
  "_libm2k.Lidar_laserDisable",
  "_libm2k.Lidar_laserEnable",
  "_libm2k.Lidar_readChannels",
  "_libm2k.Lidar_setApdBias",
  "_libm2k.Lidar_setChannelSequencerOpModeAuto",
  "_libm2k.Lidar_setChannelSequencerOpModeManual",
  "_libm2k.Lidar_setChannelSequencerOrderAutoMode",
  "_libm2k.Lidar_setChannelSequencerOrderManualMode",
  "_libm2k.Lidar_setLaserFrequency",
  "_libm2k.Lidar_setLaserPulseWidth",
  "_libm2k.Lidar_setSequencerPulseDelay",
  "_libm2k.Lidar_setTiltVoltage",
  "_libm2k.Lidar_swigregister",
  "_libm2k.M2kAnalogIn_cancelAcquisition",
  "_libm2k.M2kAnalogIn_convertRawToVolts",
  "_libm2k.M2kAnalogIn_convertVoltsToRaw",
  "_libm2k.M2kAnalogIn_enableChannel",
  "_libm2k.M2kAnalogIn_getAvailableRanges",
  "_libm2k.M2kAnalogIn_getAvailableSampleRates",
  "_libm2k.M2kAnalogIn_getChannelName",
  "_libm2k.M2kAnalogIn_getFilterCompensation",
  "_libm2k.M2kAnalogIn_getHysteresisRange",
  "_libm2k.M2kAnalogIn_getIioObjects",
  "_libm2k.M2kAnalogIn_getKernelBuffersCount",
  "_libm2k.M2kAnalogIn_getMaximumSamplerate",
  "_libm2k.M2kAnalogIn_getName",
  "_libm2k.M2kAnalogIn_getNbChannels",
  "_libm2k.M2kAnalogIn_getOversamplingRatio",
  "_libm2k.M2kAnalogIn_getRange",
  "_libm2k.M2kAnalogIn_getRangeLimits",
  "_libm2k.M2kAnalogIn_getSampleRate",
  "_libm2k.M2kAnalogIn_getSamples",
  "_libm2k.M2kAnalogIn_getSamplesInterleaved",
  "_libm2k.M2kAnalogIn_getSamplesRaw",
  "_libm2k.M2kAnalogIn_getSamplesRawInterleaved",
  "_libm2k.M2kAnalogIn_getScalingFactor",
  "_libm2k.M2kAnalogIn_getTrigger",
  "_libm2k.M2kAnalogIn_getValueForRange",
  "_libm2k.M2kAnalogIn_getVerticalOffset",
  "_libm2k.M2kAnalogIn_getVoltage",
  "_libm2k.M2kAnalogIn_getVoltageRaw",
  "_libm2k.M2kAnalogIn_isChannelEnabled",
  "_libm2k.M2kAnalogIn_reset",
  "_libm2k.M2kAnalogIn_setKernelBuffersCount",
  "_libm2k.M2kAnalogIn_setOversamplingRatio",
  "_libm2k.M2kAnalogIn_setRange",
  "_libm2k.M2kAnalogIn_setSampleRate",
  "_libm2k.M2kAnalogIn_setVerticalOffset",
  "_libm2k.M2kAnalogIn_startAcquisition",
  "_libm2k.M2kAnalogIn_stopAcquisition",
  "_libm2k.M2kAnalogIn_swigregister",
  "_libm2k.M2kAnalogIns___bool__",
  "_libm2k.M2kAnalogIns___delitem__",
  "_libm2k.M2kAnalogIns___delslice__",
  "_libm2k.M2kAnalogIns___getitem__",
  "_libm2k.M2kAnalogIns___getslice__",
  "_libm2k.M2kAnalogIns___len__",
  "_libm2k.M2kAnalogIns___nonzero__",
  "_libm2k.M2kAnalogIns___setitem__",
  "_libm2k.M2kAnalogIns___setslice__",
  "_libm2k.M2kAnalogIns_append",
  "_libm2k.M2kAnalogIns_assign",
  "_libm2k.M2kAnalogIns_back",
  "_libm2k.M2kAnalogIns_begin",
  "_libm2k.M2kAnalogIns_capacity",
  "_libm2k.M2kAnalogIns_clear",
  "_libm2k.M2kAnalogIns_empty",
  "_libm2k.M2kAnalogIns_end",
  "_libm2k.M2kAnalogIns_erase",
  "_libm2k.M2kAnalogIns_front",
  "_libm2k.M2kAnalogIns_get_allocator",
  "_libm2k.M2kAnalogIns_insert",
  "_libm2k.M2kAnalogIns_iterator",
  "_libm2k.M2kAnalogIns_pop",
  "_libm2k.M2kAnalogIns_pop_back",
  "_libm2k.M2kAnalogIns_push_back",
  "_libm2k.M2kAnalogIns_rbegin",
  "_libm2k.M2kAnalogIns_rend",
  "_libm2k.M2kAnalogIns_reserve",
  "_libm2k.M2kAnalogIns_resize",
  "_libm2k.M2kAnalogIns_size",
  "_libm2k.M2kAnalogIns_swap",
  "_libm2k.M2kAnalogIns_swigregister",
  "_libm2k.M2kAnalogOut_cancelBuffer",
  "_libm2k.M2kAnalogOut_convertRawToVolts",
  "_libm2k.M2kAnalogOut_convertVoltsToRaw",
  "_libm2k.M2kAnalogOut_enableChannel",
  "_libm2k.M2kAnalogOut_getAvailableSampleRates",
  "_libm2k.M2kAnalogOut_getChannelName",
  "_libm2k.M2kAnalogOut_getCyclic",
  "_libm2k.M2kAnalogOut_getFilterCompensation",
  "_libm2k.M2kAnalogOut_getIioObjects",
  "_libm2k.M2kAnalogOut_getKernelBuffersCount",
  "_libm2k.M2kAnalogOut_getMaximumSamplerate",
  "_libm2k.M2kAnalogOut_getNbChannels",
  "_libm2k.M2kAnalogOut_getOversamplingRatio",
  "_libm2k.M2kAnalogOut_getSampleRate",
  "_libm2k.M2kAnalogOut_getScalingFactor",
  "_libm2k.M2kAnalogOut_getSyncedDma",
  "_libm2k.M2kAnalogOut_getSyncedStartDma",
  "_libm2k.M2kAnalogOut_isChannelEnabled",
  "_libm2k.M2kAnalogOut_isPushDone",
  "_libm2k.M2kAnalogOut_push",
  "_libm2k.M2kAnalogOut_pushRaw",
  "_libm2k.M2kAnalogOut_pushRawBytes",
  "_libm2k.M2kAnalogOut_reset",
  "_libm2k.M2kAnalogOut_setCyclic",
  "_libm2k.M2kAnalogOut_setKernelBuffersCount",
  "_libm2k.M2kAnalogOut_setOversamplingRatio",
  "_libm2k.M2kAnalogOut_setSampleRate",
  "_libm2k.M2kAnalogOut_setSyncedDma",
  "_libm2k.M2kAnalogOut_setSyncedStartDma",
  "_libm2k.M2kAnalogOut_stop",
  "_libm2k.M2kAnalogOut_swigregister",
  "_libm2k.M2kAnalogOuts___bool__",
  "_libm2k.M2kAnalogOuts___delitem__",
  "_libm2k.M2kAnalogOuts___delslice__",
  "_libm2k.M2kAnalogOuts___getitem__",
  "_libm2k.M2kAnalogOuts___getslice__",
  "_libm2k.M2kAnalogOuts___len__",
  "_libm2k.M2kAnalogOuts___nonzero__",
  "_libm2k.M2kAnalogOuts___setitem__",
  "_libm2k.M2kAnalogOuts___setslice__",
  "_libm2k.M2kAnalogOuts_append",
  "_libm2k.M2kAnalogOuts_assign",
  "_libm2k.M2kAnalogOuts_back",
  "_libm2k.M2kAnalogOuts_begin",
  "_libm2k.M2kAnalogOuts_capacity",
  "_libm2k.M2kAnalogOuts_clear",
  "_libm2k.M2kAnalogOuts_empty",
  "_libm2k.M2kAnalogOuts_end",
  "_libm2k.M2kAnalogOuts_erase",
  "_libm2k.M2kAnalogOuts_front",
  "_libm2k.M2kAnalogOuts_get_allocator",
  "_libm2k.M2kAnalogOuts_insert",
  "_libm2k.M2kAnalogOuts_iterator",
  "_libm2k.M2kAnalogOuts_pop",
  "_libm2k.M2kAnalogOuts_pop_back",
  "_libm2k.M2kAnalogOuts_push_back",
  "_libm2k.M2kAnalogOuts_rbegin",
  "_libm2k.M2kAnalogOuts_rend",
  "_libm2k.M2kAnalogOuts_reserve",
  "_libm2k.M2kAnalogOuts_resize",
  "_libm2k.M2kAnalogOuts_size",
  "_libm2k.M2kAnalogOuts_swap",
  "_libm2k.M2kAnalogOuts_swigregister",
  "_libm2k.M2kCalibration_calibrateADC",
  "_libm2k.M2kCalibration_calibrateAll",
  "_libm2k.M2kCalibration_calibrateDAC",
  "_libm2k.M2kCalibration_cancelCalibration",
  "_libm2k.M2kCalibration_getAdcCalibrated",
  "_libm2k.M2kCalibration_getAdcGain",
  "_libm2k.M2kCalibration_getAdcOffset",
  "_libm2k.M2kCalibration_getDacCalibrated",
  "_libm2k.M2kCalibration_getDacGain",
  "_libm2k.M2kCalibration_getDacOffset",
  "_libm2k.M2kCalibration_initialize",
  "_libm2k.M2kCalibration_isInitialized",
  "_libm2k.M2kCalibration_resetCalibration",
  "_libm2k.M2kCalibration_setAdcGain",
  "_libm2k.M2kCalibration_setAdcOffset",
  "_libm2k.M2kCalibration_setDacGain",
  "_libm2k.M2kCalibration_setDacOffset",
  "_libm2k.M2kCalibration_swigregister",
  "_libm2k.M2kConditionAnalog___bool__",
  "_libm2k.M2kConditionAnalog___delitem__",
  "_libm2k.M2kConditionAnalog___delslice__",
  "_libm2k.M2kConditionAnalog___getitem__",
  "_libm2k.M2kConditionAnalog___getslice__",
  "_libm2k.M2kConditionAnalog___len__",
  "_libm2k.M2kConditionAnalog___nonzero__",
  "_libm2k.M2kConditionAnalog___setitem__",
  "_libm2k.M2kConditionAnalog___setslice__",
  "_libm2k.M2kConditionAnalog_append",
  "_libm2k.M2kConditionAnalog_assign",
  "_libm2k.M2kConditionAnalog_back",
  "_libm2k.M2kConditionAnalog_begin",
  "_libm2k.M2kConditionAnalog_capacity",
  "_libm2k.M2kConditionAnalog_clear",
  "_libm2k.M2kConditionAnalog_empty",
  "_libm2k.M2kConditionAnalog_end",
  "_libm2k.M2kConditionAnalog_erase",
  "_libm2k.M2kConditionAnalog_front",
  "_libm2k.M2kConditionAnalog_get_allocator",
  "_libm2k.M2kConditionAnalog_insert",
  "_libm2k.M2kConditionAnalog_iterator",
  "_libm2k.M2kConditionAnalog_pop",
  "_libm2k.M2kConditionAnalog_pop_back",
  "_libm2k.M2kConditionAnalog_push_back",
  "_libm2k.M2kConditionAnalog_rbegin",
  "_libm2k.M2kConditionAnalog_rend",
  "_libm2k.M2kConditionAnalog_reserve",
  "_libm2k.M2kConditionAnalog_resize",
  "_libm2k.M2kConditionAnalog_size",
  "_libm2k.M2kConditionAnalog_swap",
  "_libm2k.M2kConditionAnalog_swigregister",
  "_libm2k.M2kConditionDigital___bool__",
  "_libm2k.M2kConditionDigital___delitem__",
  "_libm2k.M2kConditionDigital___delslice__",
  "_libm2k.M2kConditionDigital___getitem__",
  "_libm2k.M2kConditionDigital___getslice__",
  "_libm2k.M2kConditionDigital___len__",
  "_libm2k.M2kConditionDigital___nonzero__",
  "_libm2k.M2kConditionDigital___setitem__",
  "_libm2k.M2kConditionDigital___setslice__",
  "_libm2k.M2kConditionDigital_append",
  "_libm2k.M2kConditionDigital_assign",
  "_libm2k.M2kConditionDigital_back",
  "_libm2k.M2kConditionDigital_begin",
  "_libm2k.M2kConditionDigital_capacity",
  "_libm2k.M2kConditionDigital_clear",
  "_libm2k.M2kConditionDigital_empty",
  "_libm2k.M2kConditionDigital_end",
  "_libm2k.M2kConditionDigital_erase",
  "_libm2k.M2kConditionDigital_front",
  "_libm2k.M2kConditionDigital_get_allocator",
  "_libm2k.M2kConditionDigital_insert",
  "_libm2k.M2kConditionDigital_iterator",
  "_libm2k.M2kConditionDigital_pop",
  "_libm2k.M2kConditionDigital_pop_back",
  "_libm2k.M2kConditionDigital_push_back",
  "_libm2k.M2kConditionDigital_rbegin",
  "_libm2k.M2kConditionDigital_rend",
  "_libm2k.M2kConditionDigital_reserve",
  "_libm2k.M2kConditionDigital_resize",
  "_libm2k.M2kConditionDigital_size",
  "_libm2k.M2kConditionDigital_swap",
  "_libm2k.M2kConditionDigital_swigregister",
  "_libm2k.M2kDigital_anyChannelEnabled",
  "_libm2k.M2kDigital_cancelAcquisition",
  "_libm2k.M2kDigital_cancelBufferOut",
  "_libm2k.M2kDigital_enableAllOut",
  "_libm2k.M2kDigital_enableChannel",
  "_libm2k.M2kDigital_getCyclic",
  "_libm2k.M2kDigital_getDirection",
  "_libm2k.M2kDigital_getIioObjects",
  "_libm2k.M2kDigital_getNbChannelsIn",
  "_libm2k.M2kDigital_getNbChannelsOut",
  "_libm2k.M2kDigital_getOutputMode",
  "_libm2k.M2kDigital_getSampleRateIn",
  "_libm2k.M2kDigital_getSampleRateOut",
  "_libm2k.M2kDigital_getSamples",
  "_libm2k.M2kDigital_getSamplesP",
  "_libm2k.M2kDigital_getTrigger",
  "_libm2k.M2kDigital_getValueRaw",
  "_libm2k.M2kDigital_push",
  "_libm2k.M2kDigital_pushBytes",
  "_libm2k.M2kDigital_reset",
  "_libm2k.M2kDigital_resetRateMux",
  "_libm2k.M2kDigital_setCyclic",
  "_libm2k.M2kDigital_setDirection",
  "_libm2k.M2kDigital_setKernelBuffersCountIn",
  "_libm2k.M2kDigital_setKernelBuffersCountOut",
  "_libm2k.M2kDigital_setOutputMode",
  "_libm2k.M2kDigital_setRateMux",
  "_libm2k.M2kDigital_setSampleRateIn",
  "_libm2k.M2kDigital_setSampleRateOut",
  "_libm2k.M2kDigital_setValueRaw",
  "_libm2k.M2kDigital_startAcquisition",
  "_libm2k.M2kDigital_stopAcquisition",
  "_libm2k.M2kDigital_stopBufferOut",
  "_libm2k.M2kDigital_swigregister",
  "_libm2k.M2kHardwareTrigger_getAnalogCondition",
  "_libm2k.M2kHardwareTrigger_getAnalogDelay",
  "_libm2k.M2kHardwareTrigger_getAnalogExternalCondition",
  "_libm2k.M2kHardwareTrigger_getAnalogExternalOutSelect",
  "_libm2k.M2kHardwareTrigger_getAnalogHysteresis",
  "_libm2k.M2kHardwareTrigger_getAnalogLevel",
  "_libm2k.M2kHardwareTrigger_getAnalogLevelRaw",
  "_libm2k.M2kHardwareTrigger_getAnalogMode",
  "_libm2k.M2kHardwareTrigger_getAnalogSource",
  "_libm2k.M2kHardwareTrigger_getAnalogSourceChannel",
  "_libm2k.M2kHardwareTrigger_getAnalogStreamingFlag",
  "_libm2k.M2kHardwareTrigger_getCurrentHwSettings",
  "_libm2k.M2kHardwareTrigger_getDigitalCondition",
  "_libm2k.M2kHardwareTrigger_getDigitalDelay",
  "_libm2k.M2kHardwareTrigger_getDigitalExternalCondition",
  "_libm2k.M2kHardwareTrigger_getDigitalMode",
  "_libm2k.M2kHardwareTrigger_getDigitalSource",
  "_libm2k.M2kHardwareTrigger_getDigitalStreamingFlag",
  "_libm2k.M2kHardwareTrigger_hasCrossInstrumentTrigger",
  "_libm2k.M2kHardwareTrigger_hasExternalTriggerIn",
  "_libm2k.M2kHardwareTrigger_hasExternalTriggerOut",
  "_libm2k.M2kHardwareTrigger_reset",
  "_libm2k.M2kHardwareTrigger_setAnalogCondition",
  "_libm2k.M2kHardwareTrigger_setAnalogDelay",
  "_libm2k.M2kHardwareTrigger_setAnalogExternalCondition",
  "_libm2k.M2kHardwareTrigger_setAnalogExternalOutSelect",
  "_libm2k.M2kHardwareTrigger_setAnalogHysteresis",
  "_libm2k.M2kHardwareTrigger_setAnalogLevel",
  "_libm2k.M2kHardwareTrigger_setAnalogLevelRaw",
  "_libm2k.M2kHardwareTrigger_setAnalogMode",
  "_libm2k.M2kHardwareTrigger_setAnalogSource",
  "_libm2k.M2kHardwareTrigger_setAnalogSourceChannel",
  "_libm2k.M2kHardwareTrigger_setAnalogStreamingFlag",
  "_libm2k.M2kHardwareTrigger_setCalibParameters",
  "_libm2k.M2kHardwareTrigger_setDigitalCondition",
  "_libm2k.M2kHardwareTrigger_setDigitalDelay",
  "_libm2k.M2kHardwareTrigger_setDigitalExternalCondition",
  "_libm2k.M2kHardwareTrigger_setDigitalMode",
  "_libm2k.M2kHardwareTrigger_setDigitalSource",
  "_libm2k.M2kHardwareTrigger_setDigitalStreamingFlag",
  "_libm2k.M2kHardwareTrigger_setHwTriggerSettings",
  "_libm2k.M2kHardwareTrigger_swigregister",
  "_libm2k.M2kModes___bool__",
  "_libm2k.M2kModes___delitem__",
  "_libm2k.M2kModes___delslice__",
  "_libm2k.M2kModes___getitem__",
  "_libm2k.M2kModes___getslice__",
  "_libm2k.M2kModes___len__",
  "_libm2k.M2kModes___nonzero__",
  "_libm2k.M2kModes___setitem__",
  "_libm2k.M2kModes___setslice__",
  "_libm2k.M2kModes_append",
  "_libm2k.M2kModes_assign",
  "_libm2k.M2kModes_back",
  "_libm2k.M2kModes_begin",
  "_libm2k.M2kModes_capacity",
  "_libm2k.M2kModes_clear",
  "_libm2k.M2kModes_empty",
  "_libm2k.M2kModes_end",
  "_libm2k.M2kModes_erase",
  "_libm2k.M2kModes_front",
  "_libm2k.M2kModes_get_allocator",
  "_libm2k.M2kModes_insert",
  "_libm2k.M2kModes_iterator",
  "_libm2k.M2kModes_pop",
  "_libm2k.M2kModes_pop_back",
  "_libm2k.M2kModes_push_back",
  "_libm2k.M2kModes_rbegin",
  "_libm2k.M2kModes_rend",
  "_libm2k.M2kModes_reserve",
  "_libm2k.M2kModes_resize",
  "_libm2k.M2kModes_size",
  "_libm2k.M2kModes_swap",
  "_libm2k.M2kModes_swigregister",
  "_libm2k.M2kPowerSupply_anyChannelEnabled",
  "_libm2k.M2kPowerSupply_enableAll",
  "_libm2k.M2kPowerSupply_enableChannel",
  "_libm2k.M2kPowerSupply_powerDownDacs",
  "_libm2k.M2kPowerSupply_pushChannel",
  "_libm2k.M2kPowerSupply_readChannel",
  "_libm2k.M2kPowerSupply_reset",
  "_libm2k.M2kPowerSupply_swigregister",
  "_libm2k.M2k_calibrate",
  "_libm2k.M2k_calibrateADC",
  "_libm2k.M2k_calibrateDAC",
  "_libm2k.M2k_calibrateFromContext",
  "_libm2k.M2k_deinitialize",
  "_libm2k.M2k_getAdcCalibrationGain",
  "_libm2k.M2k_getAdcCalibrationOffset",
  "_libm2k.M2k_getAllAnalogIn",
  "_libm2k.M2k_getAllAnalogOut",
  "_libm2k.M2k_getAnalogIn",
  "_libm2k.M2k_getAnalogOut",
  "_libm2k.M2k_getDacCalibrationGain",
  "_libm2k.M2k_getDacCalibrationOffset",
  "_libm2k.M2k_getDigital",
  "_libm2k.M2k_getLUT",
  "_libm2k.M2k_getLed",
  "_libm2k.M2k_getPowerSupply",
  "_libm2k.M2k_hasContextCalibration",
  "_libm2k.M2k_hasMixedSignal",
  "_libm2k.M2k_isCalibrated",
  "_libm2k.M2k_reset",
  "_libm2k.M2k_resetCalibration",
  "_libm2k.M2k_setAdcCalibrationGain",
  "_libm2k.M2k_setAdcCalibrationOffset",
  "_libm2k.M2k_setDacCalibrationGain",
  "_libm2k.M2k_setDacCalibrationOffset",
  "_libm2k.M2k_setLed",
  "_libm2k.M2k_startMixedSignalAcquisition",
  "_libm2k.M2k_stopMixedSignalAcquisition",
  "_libm2k.M2k_swigregister",
  "_libm2k.MARK",
  "_libm2k.MSB",
  "_libm2k.NONE",
  "_libm2k.NO_DEV",
  "_libm2k.NO_DIRECTION",
  "_libm2k.NO_PARITY",
  "_libm2k.NO_SOURCE",
  "_libm2k.NO_TRIGGER_DIGITAL",
  "_libm2k.N_DIGITAL_AND_ANALOG",
  "_libm2k.N_DIGITAL_OR_ANALOG",
  "_libm2k.N_DIGITAL_XOR_ANALOG",
  "_libm2k.ODD",
  "_libm2k.ONE",
  "_libm2k.ONE_AND_A_HALF",
  "_libm2k.OUTPUT",
  "_libm2k.Other",
  "_libm2k.PLUS_MINUS_25V",
  "_libm2k.PLUS_MINUS_2_5V",
  "_libm2k.PairDD_first_get",
  "_libm2k.PairDD_first_set",
  "_libm2k.PairDD_second_get",
  "_libm2k.PairDD_second_set",
  "_libm2k.PairDD_swigregister",
  "_libm2k.RISING_EDGE_ANALOG",
  "_libm2k.RISING_EDGE_DIGITAL",
  "_libm2k.SELECT_ANALOG_IN",
  "_libm2k.SELECT_DIGITAL_IN",
  "_libm2k.SELECT_NONE",
  "_libm2k.SELECT_TRIGGER_IN",
  "_libm2k.SELECT_TRIGGER_I_SAME_CHAN",
  "_libm2k.SETTINGS_analog_condition_get",
  "_libm2k.SETTINGS_analog_condition_set",
  "_libm2k.SETTINGS_delay_get",
  "_libm2k.SETTINGS_delay_set",
  "_libm2k.SETTINGS_digital_condition_get",
  "_libm2k.SETTINGS_digital_condition_set",
  "_libm2k.SETTINGS_hysteresis_get",
  "_libm2k.SETTINGS_hysteresis_set",
  "_libm2k.SETTINGS_level_get",
  "_libm2k.SETTINGS_level_set",
  "_libm2k.SETTINGS_mode_get",
  "_libm2k.SETTINGS_mode_set",
  "_libm2k.SETTINGS_raw_level_get",
  "_libm2k.SETTINGS_raw_level_set",
  "_libm2k.SETTINGS_swigregister",
  "_libm2k.SETTINGS_trigger_source_get",
  "_libm2k.SETTINGS_trigger_source_set",
  "_libm2k.SHARED_PTR_DISOWN",
  "_libm2k.SPACE",
  "_libm2k.SPI_CPHA",
  "_libm2k.SPI_CPOL",
  "_libm2k.SPI_MODE_0",
  "_libm2k.SPI_MODE_1",
  "_libm2k.SPI_MODE_2",
  "_libm2k.SPI_MODE_3",
  "_libm2k.SRC_ANALOG_IN",
  "_libm2k.SRC_DIGITAL_IN",
  "_libm2k.SRC_DISABLED",
  "_libm2k.SRC_NONE",
  "_libm2k.SRC_TRIGGER_IN",
  "_libm2k.SWIG_ON",
  "_libm2k.SwigPyIterator___add__",
  "_libm2k.SwigPyIterator___eq__",
  "_libm2k.SwigPyIterator___iadd__",
  "_libm2k.SwigPyIterator___isub__",
  "_libm2k.SwigPyIterator___ne__",
  "_libm2k.SwigPyIterator___next__",
  "_libm2k.SwigPyIterator___sub__",
  "_libm2k.SwigPyIterator_advance",
  "_libm2k.SwigPyIterator_copy",
  "_libm2k.SwigPyIterator_decr",
  "_libm2k.SwigPyIterator_distance",
  "_libm2k.SwigPyIterator_equal",
  "_libm2k.SwigPyIterator_incr",
  "_libm2k.SwigPyIterator_next",
  "_libm2k.SwigPyIterator_previous",
  "_libm2k.SwigPyIterator_swigregister",
  "_libm2k.SwigPyIterator_value",
  "_libm2k.TWO",
  "_libm2k.VectorD___bool__",
  "_libm2k.VectorD___delitem__",
  "_libm2k.VectorD___delslice__",
  "_libm2k.VectorD___getitem__",
  "_libm2k.VectorD___getslice__",
  "_libm2k.VectorD___len__",
  "_libm2k.VectorD___nonzero__",
  "_libm2k.VectorD___setitem__",
  "_libm2k.VectorD___setslice__",
  "_libm2k.VectorD_append",
  "_libm2k.VectorD_assign",
  "_libm2k.VectorD_back",
  "_libm2k.VectorD_begin",
  "_libm2k.VectorD_capacity",
  "_libm2k.VectorD_clear",
  "_libm2k.VectorD_empty",
  "_libm2k.VectorD_end",
  "_libm2k.VectorD_erase",
  "_libm2k.VectorD_front",
  "_libm2k.VectorD_get_allocator",
  "_libm2k.VectorD_insert",
  "_libm2k.VectorD_iterator",
  "_libm2k.VectorD_pop",
  "_libm2k.VectorD_pop_back",
  "_libm2k.VectorD_push_back",
  "_libm2k.VectorD_rbegin",
  "_libm2k.VectorD_rend",
  "_libm2k.VectorD_reserve",
  "_libm2k.VectorD_resize",
  "_libm2k.VectorD_size",
  "_libm2k.VectorD_swap",
  "_libm2k.VectorD_swigregister",
  "_libm2k.VectorI___bool__",
  "_libm2k.VectorI___delitem__",
  "_libm2k.VectorI___delslice__",
  "_libm2k.VectorI___getitem__",
  "_libm2k.VectorI___getslice__",
  "_libm2k.VectorI___len__",
  "_libm2k.VectorI___nonzero__",
  "_libm2k.VectorI___setitem__",
  "_libm2k.VectorI___setslice__",
  "_libm2k.VectorI_append",
  "_libm2k.VectorI_assign",
  "_libm2k.VectorI_back",
  "_libm2k.VectorI_begin",
  "_libm2k.VectorI_capacity",
  "_libm2k.VectorI_clear",
  "_libm2k.VectorI_empty",
  "_libm2k.VectorI_end",
  "_libm2k.VectorI_erase",
  "_libm2k.VectorI_front",
  "_libm2k.VectorI_get_allocator",
  "_libm2k.VectorI_insert",
  "_libm2k.VectorI_iterator",
  "_libm2k.VectorI_pop",
  "_libm2k.VectorI_pop_back",
  "_libm2k.VectorI_push_back",
  "_libm2k.VectorI_rbegin",
  "_libm2k.VectorI_rend",
  "_libm2k.VectorI_reserve",
  "_libm2k.VectorI_resize",
  "_libm2k.VectorI_size",
  "_libm2k.VectorI_swap",
  "_libm2k.VectorI_swigregister",
  "_libm2k.VectorPairDD___bool__",
  "_libm2k.VectorPairDD___delitem__",
  "_libm2k.VectorPairDD___delslice__",
  "_libm2k.VectorPairDD___getitem__",
  "_libm2k.VectorPairDD___getslice__",
  "_libm2k.VectorPairDD___len__",
  "_libm2k.VectorPairDD___nonzero__",
  "_libm2k.VectorPairDD___setitem__",
  "_libm2k.VectorPairDD___setslice__",
  "_libm2k.VectorPairDD_append",
  "_libm2k.VectorPairDD_assign",
  "_libm2k.VectorPairDD_back",
  "_libm2k.VectorPairDD_begin",
  "_libm2k.VectorPairDD_capacity",
  "_libm2k.VectorPairDD_clear",
  "_libm2k.VectorPairDD_empty",
  "_libm2k.VectorPairDD_end",
  "_libm2k.VectorPairDD_erase",
  "_libm2k.VectorPairDD_front",
  "_libm2k.VectorPairDD_get_allocator",
  "_libm2k.VectorPairDD_insert",
  "_libm2k.VectorPairDD_iterator",
  "_libm2k.VectorPairDD_pop",
  "_libm2k.VectorPairDD_pop_back",
  "_libm2k.VectorPairDD_push_back",
  "_libm2k.VectorPairDD_rbegin",
  "_libm2k.VectorPairDD_rend",
  "_libm2k.VectorPairDD_reserve",
  "_libm2k.VectorPairDD_resize",
  "_libm2k.VectorPairDD_size",
  "_libm2k.VectorPairDD_swap",
  "_libm2k.VectorPairDD_swigregister",
  "_libm2k.VectorS___bool__",
  "_libm2k.VectorS___delitem__",
  "_libm2k.VectorS___delslice__",
  "_libm2k.VectorS___getitem__",
  "_libm2k.VectorS___getslice__",
  "_libm2k.VectorS___len__",
  "_libm2k.VectorS___nonzero__",
  "_libm2k.VectorS___setitem__",
  "_libm2k.VectorS___setslice__",
  "_libm2k.VectorS_append",
  "_libm2k.VectorS_assign",
  "_libm2k.VectorS_back",
  "_libm2k.VectorS_begin",
  "_libm2k.VectorS_capacity",
  "_libm2k.VectorS_clear",
  "_libm2k.VectorS_empty",
  "_libm2k.VectorS_end",
  "_libm2k.VectorS_erase",
  "_libm2k.VectorS_front",
  "_libm2k.VectorS_get_allocator",
  "_libm2k.VectorS_insert",
  "_libm2k.VectorS_iterator",
  "_libm2k.VectorS_pop",
  "_libm2k.VectorS_pop_back",
  "_libm2k.VectorS_push_back",
  "_libm2k.VectorS_rbegin",
  "_libm2k.VectorS_rend",
  "_libm2k.VectorS_reserve",
  "_libm2k.VectorS_resize",
  "_libm2k.VectorS_size",
  "_libm2k.VectorS_swap",
  "_libm2k.VectorS_swigregister",
  "_libm2k.VectorStr___bool__",
  "_libm2k.VectorStr___delitem__",
  "_libm2k.VectorStr___delslice__",
  "_libm2k.VectorStr___getitem__",
  "_libm2k.VectorStr___getslice__",
  "_libm2k.VectorStr___len__",
  "_libm2k.VectorStr___nonzero__",
  "_libm2k.VectorStr___setitem__",
  "_libm2k.VectorStr___setslice__",
  "_libm2k.VectorStr_append",
  "_libm2k.VectorStr_assign",
  "_libm2k.VectorStr_back",
  "_libm2k.VectorStr_begin",
  "_libm2k.VectorStr_capacity",
  "_libm2k.VectorStr_clear",
  "_libm2k.VectorStr_empty",
  "_libm2k.VectorStr_end",
  "_libm2k.VectorStr_erase",
  "_libm2k.VectorStr_front",
  "_libm2k.VectorStr_get_allocator",
  "_libm2k.VectorStr_insert",
  "_libm2k.VectorStr_iterator",
  "_libm2k.VectorStr_pop",
  "_libm2k.VectorStr_pop_back",
  "_libm2k.VectorStr_push_back",
  "_libm2k.VectorStr_rbegin",
  "_libm2k.VectorStr_rend",
  "_libm2k.VectorStr_reserve",
  "_libm2k.VectorStr_resize",
  "_libm2k.VectorStr_size",
  "_libm2k.VectorStr_swap",
  "_libm2k.VectorStr_swigregister",
  "_libm2k.VectorUS___bool__",
  "_libm2k.VectorUS___delitem__",
  "_libm2k.VectorUS___delslice__",
  "_libm2k.VectorUS___getitem__",
  "_libm2k.VectorUS___getslice__",
  "_libm2k.VectorUS___len__",
  "_libm2k.VectorUS___nonzero__",
  "_libm2k.VectorUS___setitem__",
  "_libm2k.VectorUS___setslice__",
  "_libm2k.VectorUS_append",
  "_libm2k.VectorUS_assign",
  "_libm2k.VectorUS_back",
  "_libm2k.VectorUS_begin",
  "_libm2k.VectorUS_capacity",
  "_libm2k.VectorUS_clear",
  "_libm2k.VectorUS_empty",
  "_libm2k.VectorUS_end",
  "_libm2k.VectorUS_erase",
  "_libm2k.VectorUS_front",
  "_libm2k.VectorUS_get_allocator",
  "_libm2k.VectorUS_insert",
  "_libm2k.VectorUS_iterator",
  "_libm2k.VectorUS_pop",
  "_libm2k.VectorUS_pop_back",
  "_libm2k.VectorUS_push_back",
  "_libm2k.VectorUS_rbegin",
  "_libm2k.VectorUS_rend",
  "_libm2k.VectorUS_reserve",
  "_libm2k.VectorUS_resize",
  "_libm2k.VectorUS_size",
  "_libm2k.VectorUS_swap",
  "_libm2k.VectorUS_swigregister",
  "_libm2k.VectorVectorD___bool__",
  "_libm2k.VectorVectorD___delitem__",
  "_libm2k.VectorVectorD___delslice__",
  "_libm2k.VectorVectorD___getitem__",
  "_libm2k.VectorVectorD___getslice__",
  "_libm2k.VectorVectorD___len__",
  "_libm2k.VectorVectorD___nonzero__",
  "_libm2k.VectorVectorD___setitem__",
  "_libm2k.VectorVectorD___setslice__",
  "_libm2k.VectorVectorD_append",
  "_libm2k.VectorVectorD_assign",
  "_libm2k.VectorVectorD_back",
  "_libm2k.VectorVectorD_begin",
  "_libm2k.VectorVectorD_capacity",
  "_libm2k.VectorVectorD_clear",
  "_libm2k.VectorVectorD_empty",
  "_libm2k.VectorVectorD_end",
  "_libm2k.VectorVectorD_erase",
  "_libm2k.VectorVectorD_front",
  "_libm2k.VectorVectorD_get_allocator",
  "_libm2k.VectorVectorD_insert",
  "_libm2k.VectorVectorD_iterator",
  "_libm2k.VectorVectorD_pop",
  "_libm2k.VectorVectorD_pop_back",
  "_libm2k.VectorVectorD_push_back",
  "_libm2k.VectorVectorD_rbegin",
  "_libm2k.VectorVectorD_rend",
  "_libm2k.VectorVectorD_reserve",
  "_libm2k.VectorVectorD_resize",
  "_libm2k.VectorVectorD_size",
  "_libm2k.VectorVectorD_swap",
  "_libm2k.VectorVectorD_swigregister",
  "_libm2k.VectorVectorS___bool__",
  "_libm2k.VectorVectorS___delitem__",
  "_libm2k.VectorVectorS___delslice__",
  "_libm2k.VectorVectorS___getitem__",
  "_libm2k.VectorVectorS___getslice__",
  "_libm2k.VectorVectorS___len__",
  "_libm2k.VectorVectorS___nonzero__",
  "_libm2k.VectorVectorS___setitem__",
  "_libm2k.VectorVectorS___setslice__",
  "_libm2k.VectorVectorS_append",
  "_libm2k.VectorVectorS_assign",
  "_libm2k.VectorVectorS_back",
  "_libm2k.VectorVectorS_begin",
  "_libm2k.VectorVectorS_capacity",
  "_libm2k.VectorVectorS_clear",
  "_libm2k.VectorVectorS_empty",
  "_libm2k.VectorVectorS_end",
  "_libm2k.VectorVectorS_erase",
  "_libm2k.VectorVectorS_front",
  "_libm2k.VectorVectorS_get_allocator",
  "_libm2k.VectorVectorS_insert",
  "_libm2k.VectorVectorS_iterator",
  "_libm2k.VectorVectorS_pop",
  "_libm2k.VectorVectorS_pop_back",
  "_libm2k.VectorVectorS_push_back",
  "_libm2k.VectorVectorS_rbegin",
  "_libm2k.VectorVectorS_rend",
  "_libm2k.VectorVectorS_reserve",
  "_libm2k.VectorVectorS_resize",
  "_libm2k.VectorVectorS_size",
  "_libm2k.VectorVectorS_swap",
  "_libm2k.VectorVectorS_swigregister",
  "_libm2k.VectorVectorUS___bool__",
  "_libm2k.VectorVectorUS___delitem__",
  "_libm2k.VectorVectorUS___delslice__",
  "_libm2k.VectorVectorUS___getitem__",
  "_libm2k.VectorVectorUS___getslice__",
  "_libm2k.VectorVectorUS___len__",
  "_libm2k.VectorVectorUS___nonzero__",
  "_libm2k.VectorVectorUS___setitem__",
  "_libm2k.VectorVectorUS___setslice__",
  "_libm2k.VectorVectorUS_append",
  "_libm2k.VectorVectorUS_assign",
  "_libm2k.VectorVectorUS_back",
  "_libm2k.VectorVectorUS_begin",
  "_libm2k.VectorVectorUS_capacity",
  "_libm2k.VectorVectorUS_clear",
  "_libm2k.VectorVectorUS_empty",
  "_libm2k.VectorVectorUS_end",
  "_libm2k.VectorVectorUS_erase",
  "_libm2k.VectorVectorUS_front",
  "_libm2k.VectorVectorUS_get_allocator",
  "_libm2k.VectorVectorUS_insert",
  "_libm2k.VectorVectorUS_iterator",
  "_libm2k.VectorVectorUS_pop",
  "_libm2k.VectorVectorUS_pop_back",
  "_libm2k.VectorVectorUS_push_back",
  "_libm2k.VectorVectorUS_rbegin",
  "_libm2k.VectorVectorUS_rend",
  "_libm2k.VectorVectorUS_reserve",
  "_libm2k.VectorVectorUS_resize",
  "_libm2k.VectorVectorUS_size",
  "_libm2k.VectorVectorUS_swap",
  "_libm2k.VectorVectorUS_swigregister",
  "_libm2k.WARNING",
  "_libm2k.channel_m_channel_get",
  "_libm2k.channel_m_channel_set",
  "_libm2k.channel_m_direction_get",
  "_libm2k.channel_m_direction_set",
  "_libm2k.channel_swigregister",
  "_libm2k.contextClose",
  "_libm2k.contextCloseAll",
  "_libm2k.contextOpen",
  "_libm2k.delete_CALIBRATION_PARAMETERS",
  "_libm2k.delete_CONTEXT_INFO",
  "_libm2k.delete_Context",
  "_libm2k.delete_ContextBuilder",
  "_libm2k.delete_DMM",
  "_libm2k.delete_DMMReading",
  "_libm2k.delete_DMM_READING",
  "_libm2k.delete_DMMs",
  "_libm2k.delete_FMCOMMS",
  "_libm2k.delete_Generic",
  "_libm2k.delete_GenericAnalogIn",
  "_libm2k.delete_GenericAnalogOut",
  "_libm2k.delete_IIO_CONTEXT_VERSION",
  "_libm2k.delete_IIO_OBJECTS",
  "_libm2k.delete_IioBuffers",
  "_libm2k.delete_IioChannels",
  "_libm2k.delete_IioDevices",
  "_libm2k.delete_Lidar",
  "_libm2k.delete_M2k",
  "_libm2k.delete_M2kAnalogIn",
  "_libm2k.delete_M2kAnalogIns",
  "_libm2k.delete_M2kAnalogOut",
  "_libm2k.delete_M2kAnalogOuts",
  "_libm2k.delete_M2kCalibration",
  "_libm2k.delete_M2kConditionAnalog",
  "_libm2k.delete_M2kConditionDigital",
  "_libm2k.delete_M2kDigital",
  "_libm2k.delete_M2kHardwareTrigger",
  "_libm2k.delete_M2kModes",
  "_libm2k.delete_M2kPowerSupply",
  "_libm2k.delete_PairDD",
  "_libm2k.delete_SETTINGS",
  "_libm2k.delete_SwigPyIterator",
  "_libm2k.delete_VectorD",
  "_libm2k.delete_VectorI",
  "_libm2k.delete_VectorPairDD",
  "_libm2k.delete_VectorS",
  "_libm2k.delete_VectorStr",
  "_libm2k.delete_VectorUS",
  "_libm2k.delete_VectorVectorD",
  "_libm2k.delete_VectorVectorS",
  "_libm2k.delete_VectorVectorUS",
  "_libm2k.delete_channel",
  "_libm2k.delete_i2c_desc",
  "_libm2k.delete_i2c_init_param",
  "_libm2k.delete_ini_device_struct",
  "_libm2k.delete_m2k_exception",
  "_libm2k.delete_m2k_exception_builder",
  "_libm2k.delete_m2k_i2c_desc",
  "_libm2k.delete_m2k_i2c_init",
  "_libm2k.delete_m2k_spi_desc",
  "_libm2k.delete_m2k_spi_init",
  "_libm2k.delete_m2k_uart_desc",
  "_libm2k.delete_m2k_uart_init",
  "_libm2k.delete_spi_desc",
  "_libm2k.delete_spi_init_param",
  "_libm2k.delete_uart_desc",
  "_libm2k.delete_uart_init_param",
  "_libm2k.enableLogging",
  "_libm2k.getAllContexts",
  "_libm2k.getContextsInfo",
  "_libm2k.getVersion",
  "_libm2k.i2c_10_bit_transfer",
  "_libm2k.i2c_desc_extra_get",
  "_libm2k.i2c_desc_extra_set",
  "_libm2k.i2c_desc_max_speed_hz_get",
  "_libm2k.i2c_desc_max_speed_hz_set",
  "_libm2k.i2c_desc_slave_address_get",
  "_libm2k.i2c_desc_slave_address_set",
  "_libm2k.i2c_desc_swigregister",
  "_libm2k.i2c_general_call",
  "_libm2k.i2c_init",
  "_libm2k.i2c_init_param_extra_get",
  "_libm2k.i2c_init_param_extra_set",
  "_libm2k.i2c_init_param_max_speed_hz_get",
  "_libm2k.i2c_init_param_max_speed_hz_set",
  "_libm2k.i2c_init_param_slave_address_get",
  "_libm2k.i2c_init_param_slave_address_set",
  "_libm2k.i2c_init_param_swigregister",
  "_libm2k.i2c_init_write_only",
  "_libm2k.i2c_read",
  "_libm2k.i2c_remove",
  "_libm2k.i2c_repeated_start",
  "_libm2k.i2c_write",
  "_libm2k.i2c_write_only",
  "_libm2k.ini_device_struct_hw_name_get",
  "_libm2k.ini_device_struct_hw_name_set",
  "_libm2k.ini_device_struct_key_val_pairs_get",
  "_libm2k.ini_device_struct_key_val_pairs_set",
  "_libm2k.ini_device_struct_swigregister",
  "_libm2k.m2kOpen",
  "_libm2k.m2k_exception_builder_build",
  "_libm2k.m2k_exception_builder_file",
  "_libm2k.m2k_exception_builder_iioCode",
  "_libm2k.m2k_exception_builder_line",
  "_libm2k.m2k_exception_builder_swigregister",
  "_libm2k.m2k_exception_builder_type",
  "_libm2k.m2k_exception_file",
  "_libm2k.m2k_exception_iioCode",
  "_libm2k.m2k_exception_line",
  "_libm2k.m2k_exception_make",
  "_libm2k.m2k_exception_swigregister",
  "_libm2k.m2k_exception_type",
  "_libm2k.m2k_exception_what",
  "_libm2k.m2k_i2c_desc_context_get",
  "_libm2k.m2k_i2c_desc_context_set",
  "_libm2k.m2k_i2c_desc_digital_get",
  "_libm2k.m2k_i2c_desc_digital_set",
  "_libm2k.m2k_i2c_desc_sample_rate_get",
  "_libm2k.m2k_i2c_desc_sample_rate_set",
  "_libm2k.m2k_i2c_desc_scl_get",
  "_libm2k.m2k_i2c_desc_scl_set",
  "_libm2k.m2k_i2c_desc_sda_get",
  "_libm2k.m2k_i2c_desc_sda_set",
  "_libm2k.m2k_i2c_desc_swigregister",
  "_libm2k.m2k_i2c_init_context_get",
  "_libm2k.m2k_i2c_init_context_set",
  "_libm2k.m2k_i2c_init_scl_get",
  "_libm2k.m2k_i2c_init_scl_set",
  "_libm2k.m2k_i2c_init_sda_get",
  "_libm2k.m2k_i2c_init_sda_set",
  "_libm2k.m2k_i2c_init_swigregister",
  "_libm2k.m2k_spi_desc_bit_numbering_get",
  "_libm2k.m2k_spi_desc_bit_numbering_set",
  "_libm2k.m2k_spi_desc_clock_get",
  "_libm2k.m2k_spi_desc_clock_set",
  "_libm2k.m2k_spi_desc_context_get",
  "_libm2k.m2k_spi_desc_context_set",
  "_libm2k.m2k_spi_desc_digital_get",
  "_libm2k.m2k_spi_desc_digital_set",
  "_libm2k.m2k_spi_desc_miso_get",
  "_libm2k.m2k_spi_desc_miso_set",
  "_libm2k.m2k_spi_desc_mosi_get",
  "_libm2k.m2k_spi_desc_mosi_set",
  "_libm2k.m2k_spi_desc_sample_rate_get",
  "_libm2k.m2k_spi_desc_sample_rate_set",
  "_libm2k.m2k_spi_desc_swigregister",
  "_libm2k.m2k_spi_init_bit_numbering_get",
  "_libm2k.m2k_spi_init_bit_numbering_set",
  "_libm2k.m2k_spi_init_clock_get",
  "_libm2k.m2k_spi_init_clock_set",
  "_libm2k.m2k_spi_init_context_get",
  "_libm2k.m2k_spi_init_context_set",
  "_libm2k.m2k_spi_init_miso_get",
  "_libm2k.m2k_spi_init_miso_set",
  "_libm2k.m2k_spi_init_mosi_get",
  "_libm2k.m2k_spi_init_mosi_set",
  "_libm2k.m2k_spi_init_swigregister",
  "_libm2k.m2k_uart_desc_bits_number_get",
  "_libm2k.m2k_uart_desc_bits_number_set",
  "_libm2k.m2k_uart_desc_context_get",
  "_libm2k.m2k_uart_desc_context_set",
  "_libm2k.m2k_uart_desc_digital_get",
  "_libm2k.m2k_uart_desc_digital_set",
  "_libm2k.m2k_uart_desc_parity_get",
  "_libm2k.m2k_uart_desc_parity_set",
  "_libm2k.m2k_uart_desc_sample_rate_get",
  "_libm2k.m2k_uart_desc_sample_rate_set",
  "_libm2k.m2k_uart_desc_stop_bits_get",
  "_libm2k.m2k_uart_desc_stop_bits_set",
  "_libm2k.m2k_uart_desc_swigregister",
  "_libm2k.m2k_uart_desc_total_error_count_get",
  "_libm2k.m2k_uart_desc_total_error_count_set",
  "_libm2k.m2k_uart_init_bits_number_get",
  "_libm2k.m2k_uart_init_bits_number_set",
  "_libm2k.m2k_uart_init_context_get",
  "_libm2k.m2k_uart_init_context_set",
  "_libm2k.m2k_uart_init_parity_get",
  "_libm2k.m2k_uart_init_parity_set",
  "_libm2k.m2k_uart_init_stop_bits_get",
  "_libm2k.m2k_uart_init_stop_bits_set",
  "_libm2k.m2k_uart_init_swigregister",
  "_libm2k.spi_desc_chip_select_get",
  "_libm2k.spi_desc_chip_select_set",
  "_libm2k.spi_desc_extra_get",
  "_libm2k.spi_desc_extra_set",
  "_libm2k.spi_desc_max_speed_hz_get",
  "_libm2k.spi_desc_max_speed_hz_set",
  "_libm2k.spi_desc_mode_get",
  "_libm2k.spi_desc_mode_set",
  "_libm2k.spi_desc_swigregister",
  "_libm2k.spi_init",
  "_libm2k.spi_init_param_chip_select_get",
  "_libm2k.spi_init_param_chip_select_set",
  "_libm2k.spi_init_param_extra_get",
  "_libm2k.spi_init_param_extra_set",
  "_libm2k.spi_init_param_max_speed_hz_get",
  "_libm2k.spi_init_param_max_speed_hz_set",
  "_libm2k.spi_init_param_mode_get",
  "_libm2k.spi_init_param_mode_set",
  "_libm2k.spi_init_param_swigregister",
  "_libm2k.spi_init_write_only",
  "_libm2k.spi_remove",
  "_libm2k.spi_write_and_read",
  "_libm2k.spi_write_only",
  "_libm2k.throw_exception",
  "_libm2k.uart_desc_baud_rate_get",
  "_libm2k.uart_desc_baud_rate_set",
  "_libm2k.uart_desc_device_id_get",
  "_libm2k.uart_desc_device_id_set",
  "_libm2k.uart_desc_extra_get",
  "_libm2k.uart_desc_extra_set",
  "_libm2k.uart_desc_swigregister",
  "_libm2k.uart_get_errors",
  "_libm2k.uart_init",
  "_libm2k.uart_init_param_baud_rate_get",
  "_libm2k.uart_init_param_baud_rate_set",
  "_libm2k.uart_init_param_device_id_get",
  "_libm2k.uart_init_param_device_id_set",
  "_libm2k.uart_init_param_extra_get",
  "_libm2k.uart_init_param_extra_set",
  "_libm2k.uart_init_param_swigregister",
  "_libm2k.uart_read",
  "_libm2k.uart_remove",
  "_libm2k.uart_write",
  "metaclass",
  "type.__setattr__"
 ],
 "deps": []
}