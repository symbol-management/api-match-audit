{
 "bad": [
  "JaggedArray",
  "arraytype",
  "arraytype.contenttype",
  "arraytype.contenttype.dtype",
  "arraytype.contenttype.layout",
  "arraytype.startstype",
  "arraytype.startstype.ndim",
  "arraytype.stopstype",
  "base.AwkwardArrayType",
  "base.ISADVANCED",
  "base.NOTADVANCED",
  "base.NumbaMethods",
  "base.clsrepr",
  "base.sliceval2",
  "collections.Iterable",
  "contenttype",
  "contenttype.return_type",
  "getitem",
  "headtype",
  "headtype.members",
  "numba.extending.typeof_impl.register",
  "numba.types.Array",
  "numba.types.BaseTuple",
  "numba.types.Boolean",
  "numba.types.EphemeralPointer",
  "numba.types.Integer",
  "numba.types.NoneType",
  "numba.types.SliceType",
  "numba.types.StringLiteral",
  "numba.types.Tuple",
  "numba.types.Type",
  "numba.types.intp.maxval",
  "numpy.array",
  "numpy.array_equal",
  "numpy.bool_",
  "numpy.empty",
  "numpy.float64",
  "numpy.full",
  "numpy.inf",
  "numpy.int64",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.uint8",
  "numpy.where",
  "numpy.zeros",
  "outstartstype",
  "outstopstype",
  "outtype",
  "slice.step",
  "startstype",
  "stopstype",
  "tailtype"
 ],
 "deps": {
  "JaggedArray": [],
  "arraytype": [],
  "awkward": [
   "awkward/conda-forge/noarch/awkward-0.12.21-pyh9f0ad1d_0"
  ],
  "base": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "contenttype": [],
  "getitem": [],
  "headtype": [],
  "math": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "new": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "numba": [
   "numba/conda-forge/linux-64/numba-0.43.0-py37hf484d3e_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblas_203"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "outstartstype": [],
  "outstopstype": [],
  "outtype": [],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "slice": [],
  "startstype": [],
  "stopstype": [],
  "tailtype": []
 }
}