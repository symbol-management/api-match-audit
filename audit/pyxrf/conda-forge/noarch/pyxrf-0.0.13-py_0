{
 "bad": [
  "PIL.Image.open",
  "_adjust_data_range_using_min_ratio",
  "_compute_equal_axes_ranges",
  "_norm_data",
  "_reset_eline_plot",
  "_stretch_range",
  "_version.get_versions",
  "ast.literal_eval",
  "atom.api.Atom",
  "atom.api.Bool",
  "atom.api.Dict",
  "atom.api.Enum",
  "atom.api.Float",
  "atom.api.Int",
  "atom.api.List",
  "atom.api.Str",
  "atom.api.Typed",
  "atom.api.observe",
  "collections.OrderedDict",
  "collections.deque",
  "copy.deepcopy",
  "data_to_analysis_store.get_analysis_result",
  "data_to_analysis_store.save_data_to_db",
  "databroker.Broker.named",
  "databroker._core.register_builtin_handlers",
  "databroker.assets.handlers.HandlerBase",
  "distutils.version.LooseVersion",
  "enaml.imports",
  "enaml.qt.qt_application.QtApplication",
  "event_model.compose_run",
  "f",
  "fileio.output_data",
  "fileio.output_data_to_tiff",
  "fileio.read_MAPS",
  "fileio.read_hdf_APS",
  "fileio.save_fitdata_to_hdf",
  "fileio.sep_v",
  "fit_spectrum.save_fitdata_to_hdf",
  "fit_spectrum.single_pixel_fitting_controller",
  "glob.glob",
  "guessparam.ElementController",
  "guessparam.PreFitStatus",
  "guessparam.calculate_profile",
  "guessparam.define_range",
  "guessparam.fit_strategy_list",
  "guessparam.get_Z",
  "guessparam.get_energy",
  "guessparam.trim_escape_peak",
  "guessparam.update_param_from_element",
  "h5py.File",
  "hxntools.handlers.timepix.TimepixHDF5Handler",
  "hxntools.handlers.timepix.TimepixHDF5Handler._handler_name",
  "hxntools.handlers.xspress3.Xspress3HDF5Handler",
  "hxntools.handlers.xspress3.Xspress3HDF5Handler.HANDLER_NAME",
  "json.dump",
  "json.load",
  "json.loads",
  "lmfit.Parameters",
  "lmfit.fit_report",
  "lmfit.minimize",
  "load_data_from_db.db",
  "load_data_from_db.fetch_data_from_db",
  "load_data_from_db.flip_data",
  "load_data_from_db.helper_decode_list",
  "load_data_from_db.helper_encode_list",
  "load_data_from_db.write_db_to_hdf",
  "logging.Formatter",
  "logging.Handler",
  "logging.INFO",
  "logging.NullHandler",
  "logging.StreamHandler",
  "logging.getLogger",
  "math.ceil",
  "math.fabs",
  "math.floor",
  "math.isclose",
  "math.log10",
  "matplotlib.animation.FuncAnimation",
  "matplotlib.animation.writers",
  "matplotlib.axes.Axes",
  "matplotlib.colors.LogNorm",
  "matplotlib.colors.cnames.keys",
  "matplotlib.figure.Axes",
  "matplotlib.figure.Figure",
  "matplotlib.lines.Line2D",
  "matplotlib.patches.Patch",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.scatter",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.rcParams",
  "matplotlib.ticker.LogFormatter",
  "matplotlib.ticker.MaxNLocator",
  "model.draw_image.DrawImageAdvanced",
  "model.draw_image_rgb.DrawImageRGB",
  "model.fileio.FileIOModel",
  "model.fit_spectrum.Fit1D",
  "model.guessparam.GuessParamModel",
  "model.lineplot.LinePlotModel",
  "model.load_data_from_db.db",
  "model.load_data_from_db.db_analysis",
  "model.param_data.param_data",
  "model.setting.SettingModel",
  "mpl_toolkits.axes_grid1.ImageGrid",
  "mpl_toolkits.axes_grid1.axes_rgb.make_rgb_axes",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "numpy.abs",
  "numpy.append",
  "numpy.arange",
  "numpy.around",
  "numpy.array",
  "numpy.asarray",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.convolve",
  "numpy.count_nonzero",
  "numpy.diag",
  "numpy.diff",
  "numpy.fliplr",
  "numpy.flipud",
  "numpy.float32",
  "numpy.hstack",
  "numpy.isnan",
  "numpy.linspace",
  "numpy.load",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.max",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.mgrid",
  "numpy.min",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.reshape",
  "numpy.rot90",
  "numpy.round",
  "numpy.savetxt",
  "numpy.seterr",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.transpose",
  "numpy.vstack",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.mkdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.join",
  "os.path.realpath",
  "os.path.splitext",
  "os.sep",
  "os.system",
  "pandas.DataFrame",
  "pandas.read_csv",
  "processor",
  "pyxrf.__version__",
  "pyxrf._version.version_json",
  "pyxrf.api.db",
  "pyxrf.api.db_analysis",
  "pyxrf.api.db_analysis.insert",
  "pyxrf.api.logger",
  "pyxrf.db_config.hxn_db_config.db",
  "pyxrf.db_config.srx_db_config.BulkDexela",
  "pyxrf.db_config.srx_db_config.BulkMerlin",
  "pyxrf.db_config.srx_db_config.BulkXSPRESS",
  "pyxrf.db_config.srx_db_config.SISHDF5Handler",
  "pyxrf.db_config.srx_db_config.ZebraHDF5Handler",
  "pyxrf.db_config.srx_db_config.db",
  "pyxrf.db_config.tes_db_config.BulkXSPRESS",
  "pyxrf.db_config.tes_db_config.db",
  "pyxrf.db_config.tes_db_config.db.fill_event",
  "pyxrf.db_config.tes_db_config.db.fs._handler_cache.values",
  "pyxrf.db_config.tes_db_config.db.get_table",
  "pyxrf.db_config.xfm_db_config.BulkXSPRESS",
  "pyxrf.db_config.xfm_db_config.SISHDF5Handler",
  "pyxrf.db_config.xfm_db_config.ZebraHDF5Handler",
  "pyxrf.db_config.xfm_db_config.db",
  "pyxrf.gui.GuiHandler",
  "pyxrf.gui.LogModel",
  "pyxrf.gui.get_defaults",
  "pyxrf.gui.logger",
  "pyxrf.gui.run",
  "pyxrf.logger",
  "pyxrf.model.command_tools.fit_pixel_data_and_save",
  "pyxrf.model.command_tools.fit_pixel_per_file_no_multi",
  "pyxrf.model.command_tools.logger",
  "pyxrf.model.data_to_analysis_store.ComposeDataForDB",
  "pyxrf.model.data_to_analysis_store.fitting_result_sender",
  "pyxrf.model.draw_image.logger",
  "pyxrf.model.draw_image_rgb.logger",
  "pyxrf.model.draw_image_rgb.make_cube",
  "pyxrf.model.fileio.DataSelection",
  "pyxrf.model.fileio.SpectrumCalculator",
  "pyxrf.model.fileio.file_handler",
  "pyxrf.model.fileio.get_data_from_folder_helper",
  "pyxrf.model.fileio.get_data_from_multiple_folders_helper",
  "pyxrf.model.fileio.get_fit_data",
  "pyxrf.model.fileio.get_header",
  "pyxrf.model.fileio.logger",
  "pyxrf.model.fileio.output_data_to_tiff",
  "pyxrf.model.fileio.plot_as",
  "pyxrf.model.fileio.pyxrf_version",
  "pyxrf.model.fileio.read_MAPS",
  "pyxrf.model.fileio.read_hdf_APS",
  "pyxrf.model.fileio.read_hdf_to_stitch",
  "pyxrf.model.fileio.render_data_to_gui",
  "pyxrf.model.fileio.retrieve_data_from_hdf_suitcase",
  "pyxrf.model.fileio.save_fitdata_to_hdf",
  "pyxrf.model.fileio.sep_v",
  "pyxrf.model.fit_spectrum.bin_data_spacial",
  "pyxrf.model.fit_spectrum.cal_r2",
  "pyxrf.model.fit_spectrum.calculate_area",
  "pyxrf.model.fit_spectrum.combine_lines",
  "pyxrf.model.fit_spectrum.conv_expdata_energy",
  "pyxrf.model.fit_spectrum.extract_strategy",
  "pyxrf.model.fit_spectrum.fit_per_line_nnls",
  "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nnls",
  "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nonlinear",
  "pyxrf.model.fit_spectrum.fit_pixel_nonlinear_per_line",
  "pyxrf.model.fit_spectrum.fly2d_grid",
  "pyxrf.model.fit_spectrum.get_area_and_error_nonlinear_fit",
  "pyxrf.model.fit_spectrum.get_branching_ratio",
  "pyxrf.model.fit_spectrum.get_cutted_spectrum_in3D",
  "pyxrf.model.fit_spectrum.interp1d_scan",
  "pyxrf.model.fit_spectrum.logger",
  "pyxrf.model.fit_spectrum.residual_nonlinear_fit",
  "pyxrf.model.fit_spectrum.roi_sum_calculation",
  "pyxrf.model.fit_spectrum.save_fitted_fig",
  "pyxrf.model.fit_spectrum.single_pixel_fitting_controller",
  "pyxrf.model.fit_spectrum.spectrum_nonlinear_fit",
  "pyxrf.model.guessparam.ElementController",
  "pyxrf.model.guessparam.PreFitStatus",
  "pyxrf.model.guessparam.calculate_profile",
  "pyxrf.model.guessparam.create_full_dict",
  "pyxrf.model.guessparam.define_range",
  "pyxrf.model.guessparam.fit_strategy_list",
  "pyxrf.model.guessparam.get_Z",
  "pyxrf.model.guessparam.get_element",
  "pyxrf.model.guessparam.get_energy",
  "pyxrf.model.guessparam.logger",
  "pyxrf.model.guessparam.param_dict_cleaner",
  "pyxrf.model.guessparam.strip_line",
  "pyxrf.model.guessparam.trim_escape_peak",
  "pyxrf.model.guessparam.update_param_from_element",
  "pyxrf.model.lineplot.get_color_name",
  "pyxrf.model.lineplot.logger",
  "pyxrf.model.load_data_from_db.beamline_config_pyxrf",
  "pyxrf.model.load_data_from_db.beamline_name",
  "pyxrf.model.load_data_from_db.config_path",
  "pyxrf.model.load_data_from_db.fetch_data_from_db",
  "pyxrf.model.load_data_from_db.flip_data",
  "pyxrf.model.load_data_from_db.free_memory_from_handler",
  "pyxrf.model.load_data_from_db.get_name_value_from_db",
  "pyxrf.model.load_data_from_db.get_total_scan_point",
  "pyxrf.model.load_data_from_db.helper_encode_list",
  "pyxrf.model.load_data_from_db.logger",
  "pyxrf.model.load_data_from_db.map_data2D",
  "pyxrf.model.load_data_from_db.map_data2D_hxn",
  "pyxrf.model.load_data_from_db.map_data2D_srx",
  "pyxrf.model.load_data_from_db.map_data2D_tes",
  "pyxrf.model.load_data_from_db.map_data2D_xfm",
  "pyxrf.model.load_data_from_db.sep_v",
  "pyxrf.model.load_data_from_db.write_db_to_hdf",
  "pyxrf.model.load_data_from_db.write_db_to_hdf_base",
  "pyxrf.model.setting.ROIModel",
  "pyxrf.model.setting.calculate_roi",
  "pyxrf.model.setting.logger",
  "pyxrf.model.utils.logger",
  "requests.get",
  "scipy.interpolate.griddata",
  "scipy.interpolate.interp1d",
  "scipy.interpolate.interp2d",
  "six.iteritems",
  "six.iterkeys",
  "six.itervalues",
  "six.string_types",
  "skbeam.core.fitting.background.snip_method",
  "skbeam.core.fitting.xrf_model.K_LINE",
  "skbeam.core.fitting.xrf_model.K_TRANSITIONS",
  "skbeam.core.fitting.xrf_model.L_LINE",
  "skbeam.core.fitting.xrf_model.L_TRANSITIONS",
  "skbeam.core.fitting.xrf_model.M_LINE",
  "skbeam.core.fitting.xrf_model.M_TRANSITIONS",
  "skbeam.core.fitting.xrf_model.ModelSpectrum",
  "skbeam.core.fitting.xrf_model.ParamController",
  "skbeam.core.fitting.xrf_model.TRANSITIONS_LOOKUP",
  "skbeam.core.fitting.xrf_model.compute_escape_peak",
  "skbeam.core.fitting.xrf_model.construct_linear_model",
  "skbeam.core.fitting.xrf_model.define_range",
  "skbeam.core.fitting.xrf_model.linear_spectrum_fitting",
  "skbeam.core.fitting.xrf_model.nnls_fit",
  "skbeam.core.fitting.xrf_model.register_strategy",
  "skbeam.core.fitting.xrf_model.set_parameter_bound",
  "skbeam.core.fitting.xrf_model.trim",
  "skbeam.core.fitting.xrf_model.update_parameter_dict",
  "skbeam.fluorescence.XrfElement",
  "skimage.io.imsave",
  "sys.exc_info",
  "time.time",
  "utils.grid_interpolate",
  "utils.normalize_data_by_scaler",
  "view.main_window.XRFGui",
  "warnings.filterwarnings"
 ],
 "deps": {
  "PIL": [],
  "_adjust_data_range_using_min_ratio": [],
  "_compute_equal_axes_ranges": [],
  "_norm_data": [],
  "_reset_eline_plot": [],
  "_stretch_range": [],
  "_version": [],
  "ast": [],
  "atom": [],
  "collections": [],
  "copy": [],
  "data_to_analysis_store": [],
  "databroker": [],
  "distutils": [],
  "enaml": [],
  "event_model": [],
  "f": [],
  "fileio": [],
  "fit_spectrum": [],
  "glob": [],
  "guessparam": [],
  "h5py": [],
  "hxntools": [],
  "json": [],
  "lmfit": [],
  "load_data_from_db": [],
  "logging": [],
  "math": [],
  "matplotlib": [],
  "model": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "processor": [],
  "pyxrf": [],
  "requests": [],
  "scipy": [],
  "six": [],
  "skbeam": [],
  "skimage": [],
  "sys": [],
  "time": [],
  "utils": [],
  "view": [],
  "warnings": []
 }
}