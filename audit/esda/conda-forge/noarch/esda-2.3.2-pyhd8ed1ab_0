{
 "bad": [
  "__future__.division",
  "_remap_lbls_single",
  "_setup_pool",
  "_swap_ending",
  "adbscan.ADBSCAN",
  "adbscan.ensemble",
  "adbscan.get_cluster_boundary",
  "adbscan.remap_lbls",
  "collections.Counter",
  "doctest",
  "functools.reduce",
  "gamma.Gamma.by_col",
  "geary.Geary",
  "geary.Geary.by_col",
  "getisord.G",
  "getisord.G.by_col",
  "getisord.G_Local",
  "getisord.G_Local.by_col",
  "itertools",
  "itertools.product",
  "join_counts.Join_Counts.by_col",
  "lbl_type",
  "libpysal.common.np.append",
  "libpysal.common.np.arange",
  "libpysal.common.np.array",
  "libpysal.common.np.asarray",
  "libpysal.common.np.exp",
  "libpysal.common.np.log",
  "libpysal.common.np.median",
  "libpysal.common.np.ones",
  "libpysal.common.np.random.permutation",
  "libpysal.common.np.random.shuffle",
  "libpysal.common.np.sort",
  "libpysal.common.np.sqrt",
  "libpysal.common.np.square",
  "libpysal.common.np.zeros",
  "libpysal.common.pandas.DataFrame",
  "libpysal.weights.Queen.from_dataframe",
  "libpysal.weights.Rook.from_shapefile",
  "math",
  "math.fabs",
  "mixture_smoothing.NP_Mixture_Smoother",
  "moran.Moran",
  "moran.Moran.by_col",
  "moran.Moran_BV_matrix",
  "moran.Moran_Local",
  "moran.Moran_Local.by_col",
  "moran.Moran_Local_BV",
  "moran.Moran_Local_BV.by_col",
  "moran.Moran_Local_Rate",
  "moran.Moran_Local_Rate.by_col",
  "moran.Moran_Rate",
  "moran.Moran_Rate.by_col",
  "multiprocessing",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "numba.boolean",
  "numba.jit",
  "numba.njit",
  "numba.prange",
  "numpy",
  "numpy.arange",
  "numpy.argmin",
  "numpy.array",
  "numpy.asarray",
  "numpy.column_stack",
  "numpy.empty",
  "numpy.eye",
  "numpy.fabs",
  "numpy.float64",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int64",
  "numpy.int8",
  "numpy.isfinite",
  "numpy.log",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.random.choice",
  "numpy.random.permutation",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.round",
  "numpy.row_stack",
  "numpy.seterr",
  "numpy.sort",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os",
  "os.cpu_count",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Index.tolist",
  "pandas.Series",
  "pandas.concat",
  "scipy.interpolate.interp1d",
  "scipy.sparse",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csgraph",
  "scipy.sparse.csgraph.shortest_path",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.eye",
  "scipy.spatial.cKDTree",
  "scipy.stats",
  "scipy.stats.chi2",
  "scipy.stats.chi2.ppf",
  "scipy.stats.chi2_contingency",
  "scipy.stats.gamma",
  "scipy.stats.gamma.ppf",
  "scipy.stats.norm",
  "scipy.stats.norm.ppf",
  "scipy.stats.poisson",
  "scipy.stats.poisson.cdf",
  "scipy.stats.poisson.pmf",
  "silhouettes.boundary_silhouette",
  "silhouettes.nearest_label",
  "silhouettes.path_silhouette",
  "silhouettes.silhouette_alist",
  "sklearn",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClusterMixin",
  "sklearn.cluster.DBSCAN",
  "sklearn.metrics",
  "sklearn.metrics.pairwise",
  "sklearn.metrics.pairwise.euclidean_distances",
  "sklearn.metrics.pairwise.manhattan_distances",
  "sklearn.metrics.silhouette_samples",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.preprocessing",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.utils",
  "sklearn.utils.check_array",
  "smoothing.Age_Adjusted_Smoother",
  "smoothing.Age_Adjusted_Smoother.by_col",
  "smoothing.Disk_Smoother",
  "smoothing.Disk_Smoother.by_col",
  "smoothing.Empirical_Bayes",
  "smoothing.Empirical_Bayes.by_col",
  "smoothing.Excess_Risk",
  "smoothing.Excess_Risk.by_col",
  "smoothing.Headbanging_Median_Rate",
  "smoothing.Headbanging_Median_Rate.by_col",
  "smoothing.Headbanging_Triples",
  "smoothing.Kernel_Smoother",
  "smoothing.Spatial_Empirical_Bayes",
  "smoothing.Spatial_Empirical_Bayes.by_col",
  "smoothing.Spatial_Filtering",
  "smoothing.Spatial_Filtering.by_col",
  "smoothing.Spatial_Median_Rate",
  "smoothing.Spatial_Median_Rate.by_col",
  "smoothing.Spatial_Rate",
  "smoothing.Spatial_Rate.by_col",
  "smoothing.assuncao_rate",
  "smoothing.choynowski",
  "smoothing.crude_age_standardization",
  "smoothing.direct_age_standardization",
  "smoothing.flatten",
  "smoothing.indirect_age_standardization",
  "smoothing.standardized_mortality_ratio",
  "smoothing.sum_by_n",
  "smoothing.weighted_median",
  "stat",
  "tempfile",
  "unittest",
  "unittest.TestCase",
  "unittest.TestLoader",
  "unittest.TestSuite",
  "unittest.TextTestRunner",
  "unittest.main",
  "unittest.skip",
  "unittest.skipIf",
  "util.fdr",
  "warn",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "__future__": [],
  "_remap_lbls_single": [],
  "_setup_pool": [],
  "_swap_ending": [],
  "adbscan": [],
  "collections": [],
  "doctest": [],
  "functools": [],
  "gamma": [],
  "geary": [],
  "geopandas": [
   "geopandas-base/conda-forge/noarch/geopandas-base-0.9.0-pyhd8ed1ab_1",
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "getisord": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-0.14.0-py_0"
  ],
  "join_counts": [],
  "lbl_type": [],
  "libpysal": [
   "libpysal/conda-forge/noarch/libpysal-4.2.0-py_0"
  ],
  "math": [],
  "mixture_smoothing": [],
  "moran": [],
  "multiprocessing": [],
  "numba": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "scipy": [],
  "silhouettes": [],
  "sklearn": [],
  "smoothing": [],
  "stat": [],
  "tempfile": [],
  "unittest": [],
  "util": [],
  "warn": [],
  "warnings": []
 }
}