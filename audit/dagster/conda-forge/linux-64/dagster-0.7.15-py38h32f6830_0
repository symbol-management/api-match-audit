{
 "bad": [
  "DagsterTypeSnap",
  "EngineEventData",
  "ExecutionConfig.from_dict",
  "InputDefSnap",
  "InvokedSolidOutputHandle",
  "JsonFormatter",
  "OutputDefSnap",
  "ScopedResources",
  "SolidInvocationSnap",
  "_ExecuteRunWithPlanIterable",
  "_ExecutionTargetHandleData",
  "_List",
  "_check_list_items",
  "_check_tuple_items",
  "_convert_potential_field",
  "_expand_fields_dict",
  "_fileno",
  "_gen_thing",
  "_get_python_file_from_previous_stack_frame",
  "_module_name",
  "_msg",
  "_recursively_process_config",
  "_thread",
  "_unpack_value",
  "_warn",
  "_with_header",
  "_wrap",
  "active.ActiveExecution",
  "alembic.context.config",
  "alembic.context.is_offline_mode",
  "alembic.migration.MigrationContext",
  "alembic.migration.MigrationContext.configure",
  "alembic.op.get_context",
  "alembic.script.ScriptDirectory.from_config",
  "api.create_execution_plan",
  "atexit",
  "build_composite_solid_def_snap",
  "build_core_solid_def_snap",
  "click_param",
  "collections.Callable",
  "collections.Container",
  "collections.Hashable",
  "collections.ItemsView",
  "collections.Iterable",
  "collections.Iterator",
  "collections.KeysView",
  "collections.Mapping",
  "collections.MappingView",
  "collections.MutableMapping",
  "collections.MutableSequence",
  "collections.MutableSet",
  "collections.Sequence",
  "collections.Set",
  "collections.Sized",
  "collections.ValuesView",
  "collections.abc.Callable",
  "collections.abc.Container",
  "collections.abc.Hashable",
  "collections.abc.ItemsView",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.abc.KeysView",
  "collections.abc.Mapping",
  "collections.abc.MappingView",
  "collections.abc.MutableMapping",
  "collections.abc.MutableSequence",
  "collections.abc.MutableSet",
  "collections.abc.Sequence",
  "collections.abc.Set",
  "collections.abc.Sized",
  "collections.abc.ValuesView",
  "collections.defaultdict.__getitem__",
  "collections.defaultdict.__setitem__",
  "composite_descent.composite_descent",
  "composition.CallableSolidNode",
  "compute_fn",
  "compute_log_manager.ComputeIOType.STDERR",
  "compute_log_manager.ComputeIOType.STDOUT",
  "config_type.Array",
  "config_type.ConfigScalarKind.BOOL",
  "config_type.ConfigScalarKind.FLOAT",
  "config_type.ConfigScalarKind.INT",
  "config_type.ConfigScalarKind.STRING",
  "config_type.ConfigType.from_builtin_enum",
  "config_type.ConfigTypeKind.ANY",
  "config_type.ConfigTypeKind.ARRAY",
  "config_type.ConfigTypeKind.ENUM",
  "config_type.ConfigTypeKind.NONEABLE",
  "config_type.ConfigTypeKind.PERMISSIVE_SHAPE",
  "config_type.ConfigTypeKind.SCALAR",
  "config_type.ConfigTypeKind.SCALAR_UNION",
  "config_type.ConfigTypeKind.SELECTOR",
  "config_type.ConfigTypeKind.STRICT_SHAPE",
  "config_type.ConfigTypeKind.has_fields",
  "config_type.ConfigTypeKind.is_closed_generic",
  "config_type.ConfigTypeKind.is_shape",
  "construct_config_type_from_snap",
  "create_value_solid",
  "create_wrap",
  "dagster.EventMetadataEntry.text",
  "dagster.builtins.BuiltinEnum.ANY",
  "dagster.builtins.BuiltinEnum.BOOL",
  "dagster.builtins.BuiltinEnum.FLOAT",
  "dagster.builtins.BuiltinEnum.INT",
  "dagster.builtins.BuiltinEnum.NOTHING",
  "dagster.builtins.BuiltinEnum.STRING",
  "dagster.check.__init__.CheckError",
  "dagster.check.__init__.ElementCheckError",
  "dagster.check.__init__.NotImplementedCheckError",
  "dagster.check.__init__.ParameterCheckError",
  "dagster.check.__init__._check_key_value_types",
  "dagster.check.__init__._check_list_items",
  "dagster.check.__init__._check_set_items",
  "dagster.check.__init__._check_tuple_items",
  "dagster.check.__init__._check_two_dim_key_value_types",
  "dagster.check.__init__._element_check_error",
  "dagster.check.__init__._not_callable_exception",
  "dagster.check.__init__._not_type_param_subclass_mismatch_exception",
  "dagster.check.__init__._param_invariant_exception",
  "dagster.check.__init__._param_subclass_mismatch_exception",
  "dagster.check.__init__._param_type_mismatch_exception",
  "dagster.check.__init__._type_mismatch_error",
  "dagster.check.__init__.dict_param",
  "dagster.check.__init__.is_str",
  "dagster.check.__init__.list_param",
  "dagster.check.__init__.opt_type_param",
  "dagster.check.__init__.str_param",
  "dagster.check.__init__.type_param",
  "dagster.check.__init__.type_types",
  "dagster.cli.__init__.cli",
  "dagster.cli.__init__.create_dagster_cli",
  "dagster.config.config_type.ConfigTypeKind.ANY",
  "dagster.config.config_type.ConfigTypeKind.ARRAY",
  "dagster.config.config_type.ConfigTypeKind.ENUM",
  "dagster.config.config_type.ConfigTypeKind.NONEABLE",
  "dagster.config.config_type.ConfigTypeKind.PERMISSIVE_SHAPE",
  "dagster.config.config_type.ConfigTypeKind.SCALAR",
  "dagster.config.config_type.ConfigTypeKind.SCALAR_UNION",
  "dagster.config.config_type.ConfigTypeKind.SELECTOR",
  "dagster.config.config_type.ConfigTypeKind.STRICT_SHAPE",
  "dagster.core.definitions.EventMetadataEntry.path",
  "dagster.core.definitions.EventMetadataEntry.python_artifact",
  "dagster.core.definitions.EventMetadataEntry.text",
  "dagster.core.definitions.ExecutionTargetHandle.for_pipeline_module",
  "dagster.core.definitions.ExecutionTargetHandle.for_pipeline_python_file",
  "dagster.core.definitions.ExecutionTargetHandle.for_repo_module",
  "dagster.core.definitions.ExecutionTargetHandle.for_repo_python_file",
  "dagster.core.definitions.ExecutionTargetHandle.for_repo_yaml",
  "dagster.core.definitions.ExecutionTargetHandle.get_handle",
  "dagster.core.definitions.SolidHandle.from_string",
  "dagster.core.definitions.events.ObjectStoreOperationType.CP_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.GET_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.RM_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.SET_OBJECT",
  "dagster.core.events.DagsterEventType.ENGINE_EVENT.value",
  "dagster.core.events.DagsterEventType.OBJECT_STORE_OPERATION.value",
  "dagster.core.events.DagsterEventType.PIPELINE_FAILURE",
  "dagster.core.events.DagsterEventType.PIPELINE_FAILURE.value",
  "dagster.core.events.DagsterEventType.PIPELINE_START",
  "dagster.core.events.DagsterEventType.PIPELINE_START.value",
  "dagster.core.events.DagsterEventType.PIPELINE_SUCCESS",
  "dagster.core.events.DagsterEventType.PIPELINE_SUCCESS.value",
  "dagster.core.events.DagsterEventType.STEP_EXPECTATION_RESULT",
  "dagster.core.events.DagsterEventType.STEP_EXPECTATION_RESULT.value",
  "dagster.core.events.DagsterEventType.STEP_FAILURE",
  "dagster.core.events.DagsterEventType.STEP_FAILURE.value",
  "dagster.core.events.DagsterEventType.STEP_INPUT",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION.value",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.events.DagsterEventType.STEP_SKIPPED",
  "dagster.core.events.DagsterEventType.STEP_SKIPPED.value",
  "dagster.core.events.DagsterEventType.STEP_START",
  "dagster.core.events.DagsterEventType.STEP_START.value",
  "dagster.core.events.DagsterEventType.STEP_SUCCESS",
  "dagster.core.events.DagsterEventType.STEP_SUCCESS.value",
  "dagster.core.events.Materialization.file",
  "dagster.core.events.__init__.DagsterEvent",
  "dagster.core.events.__init__.DagsterEventType",
  "dagster.core.events.__init__.EngineEventData",
  "dagster.core.events.__init__.FAILURE_EVENTS",
  "dagster.core.events.__init__.ObjectStoreOperationResultData",
  "dagster.core.events.__init__.PIPELINE_EVENTS",
  "dagster.core.events.__init__.PipelineInitFailureData",
  "dagster.core.events.__init__.STEP_EVENTS",
  "dagster.core.events.__init__.StepExpectationResultData",
  "dagster.core.events.__init__.StepMaterializationData",
  "dagster.core.events.__init__._assert_type",
  "dagster.core.events.__init__._handle_back_compat",
  "dagster.core.events.__init__._validate_event_specific_data",
  "dagster.core.events.__init__.log_pipeline_event",
  "dagster.core.events.__init__.log_resource_event",
  "dagster.core.events.__init__.log_step_event",
  "dagster.core.execution.plan.objects.StepInputSourceType.CONFIG",
  "dagster.core.execution.plan.objects.StepKind.COMPUTE",
  "dagster.core.execution.poll_compute_logs.__file__",
  "dagster.core.execution.stats.StepEventStatus.FAILURE",
  "dagster.core.execution.stats.StepEventStatus.SKIPPED",
  "dagster.core.execution.stats.StepEventStatus.SUCCESS",
  "dagster.core.execution.watch_orphans.__file__",
  "dagster.core.instance.__init__.AIRFLOW_EXECUTION_DATE_STR",
  "dagster.core.instance.__init__.DagsterInstance",
  "dagster.core.instance.__init__.IS_AIRFLOW_INGEST_PIPELINE_STR",
  "dagster.core.instance.__init__.InstanceType",
  "dagster.core.instance.__init__._EventListenerLogHandler",
  "dagster.core.instance.__init__._check_run_equality",
  "dagster.core.instance.__init__._dagster_home",
  "dagster.core.instance.__init__._format_field_diff",
  "dagster.core.instance.__init__._is_dagster_home_set",
  "dagster.core.log_manager.PYTHON_LOGGING_LEVELS_MAPPING.keys",
  "dagster.core.scheduler.ScheduleStatus.RUNNING",
  "dagster.core.scheduler.ScheduleStatus.STOPPED",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.FAILURE",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.FAILURE.value",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SKIPPED",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SKIPPED.value",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.STARTED",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.STARTED.value",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SUCCESS",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SUCCESS.value",
  "dagster.core.selector.__init__.NameToken",
  "dagster.core.selector.__init__.PLUS_CHAR",
  "dagster.core.selector.__init__.PlusToken",
  "dagster.core.selector.__init__.Selection",
  "dagster.core.selector.__init__.SelectionParserException",
  "dagster.core.selector.__init__.WHITESPACE_CHARS",
  "dagster.core.selector.__init__.WhitespaceToken",
  "dagster.core.selector.__init__.parse_tokens",
  "dagster.core.selector.__init__.tokenize_selector_text",
  "dagster.core.snap.PipelineSnapshot.from_pipeline_def",
  "dagster.core.storage.object_store.ObjectStoreOperation.serializable",
  "dagster.core.storage.object_store.ObjectStoreOperationType.CP_OBJECT.value",
  "dagster.core.storage.object_store.ObjectStoreOperationType.SET_OBJECT.value",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.FAILURE",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.NOT_STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.SUCCESS",
  "dagster.core.types.dagster_type.DagsterTypeKind.LIST",
  "dagster.core.types.dagster_type.DagsterTypeKind.NOTHING",
  "dagster.core.types.dagster_type.DagsterTypeKind.NULLABLE",
  "dagster.loggers.__init__.colored_console_logger",
  "dagster.serdes.__init__.ConfigurableClassData",
  "dagster.serdes.__init__.SerdesClassUsageError",
  "dagster.serdes.__init__._WHITELISTED_ENUM_MAP",
  "dagster.serdes.__init__._WHITELISTED_TUPLE_MAP",
  "dagster.serdes.__init__._check_serdes_tuple_class_invariants",
  "dagster.serdes.__init__._deserialize_json_to_dagster_namedtuple",
  "dagster.serdes.__init__._get_dunder_new_params",
  "dagster.serdes.__init__._get_dunder_new_params_dict",
  "dagster.serdes.__init__._pack_value",
  "dagster.serdes.__init__._serialize_dagster_namedtuple",
  "dagster.serdes.__init__._unpack_value",
  "dagster.serdes.__init__._whitelist_for_serdes",
  "dagster.serdes.__init__.serialize_dagster_namedtuple",
  "dagster.serdes.__init__.whitelist_for_serdes",
  "dagster.seven.__init__.IS_WINDOWS",
  "dagster.seven.thread.interrupt_main",
  "dagster.utils.__init__.EPOCH",
  "dagster.utils.__init__._kill_on_event",
  "dagster.utils.__init__.ensure_dir",
  "dagster.utils.__init__.frozendict",
  "dagster.utils.__init__.frozenlist",
  "dagster.utils.__init__.frozentags",
  "dagster.utils.__init__.get_multiprocessing_context",
  "dagster.utils.__init__.get_prop_or_key",
  "dagster.utils.__init__.touch_file",
  "dagster.utils.check.dict_param",
  "dagster.utils.check.inst",
  "dagster.utils.check.inst_param",
  "dagster.utils.check.invariant",
  "dagster.utils.check.list_param",
  "dagster.utils.check.opt_inst_param",
  "dagster.utils.check.str_param",
  "dagster.utils.test.__init__._dep_key_of",
  "dagster.utils.test.__init__.build_pipeline_with_input_stubs",
  "dagster.utils.test.__init__.execute_solids_within_pipeline",
  "dagster.utils.test.__init__.yield_empty_pipeline_context",
  "datetime.timezone.utc",
  "decorator_utils.InvalidDecoratedFunctionInfo.TYPES",
  "define_solid_dictionary_cls",
  "dependency.DependencyStructure.from_definitions",
  "environment_configs.EnvironmentClassCreationData",
  "environment_configs.construct_config_type_dictionary",
  "environment_configs.define_environment_cls",
  "environment_schema.EnvironmentSchema",
  "errno",
  "errno.EEXIST",
  "evaluate_value_result.EvaluateValueResult.for_error",
  "evaluate_value_result.EvaluateValueResult.for_errors",
  "evaluate_value_result.EvaluateValueResult.for_value",
  "expand_fields_dict",
  "f",
  "f.__name__",
  "field.Field",
  "field.resolve_to_config_type",
  "field_utils.convert_fields_to_dict_type",
  "file_manager.LocalFileManager.for_instance",
  "fn",
  "fn.__name__",
  "fn_repo_or_pipeline",
  "func",
  "funcsigs.Parameter.POSITIONAL_ONLY",
  "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
  "funcsigs.Parameter.VAR_KEYWORD",
  "funcsigs.Parameter.VAR_POSITIONAL",
  "funcsigs.Parameter.empty",
  "funcsigs.Signature.empty",
  "get_logging_tags",
  "get_run",
  "get_tags_from_args",
  "get_temp_file_name",
  "handler",
  "hashlib.md5",
  "hashlib.sha1",
  "inspect.Parameter.POSITIONAL_OR_KEYWORD",
  "inspect.Parameter.empty",
  "is_str",
  "itertools",
  "itertools.chain",
  "itertools.repeat",
  "klass",
  "klass.config_type",
  "klass.from_config_value",
  "line_break_fn",
  "log_fn",
  "log_record_cls",
  "multiprocessing.get_context",
  "new",
  "new.classobj",
  "objects.StepInputSourceType.CONFIG",
  "objects.StepInputSourceType.DEFAULT_VALUE",
  "objects.StepInputSourceType.MULTIPLE_OUTPUTS",
  "objects.StepInputSourceType.SINGLE_OUTPUT",
  "objects.StepKind.COMPUTE",
  "objects.StepOutputHandle.from_step",
  "os.chdir",
  "os.dup",
  "os.dup2",
  "os.environ.get",
  "os.environ.update",
  "os.fstat",
  "os.getcwd",
  "os.getpid",
  "os.getppid",
  "os.kill",
  "os.listdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getsize",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.unlink",
  "os.utime",
  "partition_selector",
  "pipeline_run.PipelineRunStatus.FAILURE",
  "pipeline_run.PipelineRunStatus.STARTED",
  "pipeline_run.PipelineRunStatus.SUCCESS",
  "pipeline_snapshot.PipelineSnapshot.from_pipeline_def",
  "python_dict.Dict",
  "python_dict.PythonDict",
  "python_set.DagsterSetApi",
  "python_set.PythonSet",
  "python_tuple.DagsterTupleApi",
  "python_tuple.PythonTuple",
  "pytz.utc",
  "ref.InstanceRef.from_dir",
  "resolve_dagster_type",
  "resource.ResourceDefinition.hardcoded_resource",
  "rx.Observable.create",
  "schema.RunStorageSqlMetadata.create_all",
  "schema.RunTagsTable.c.key",
  "schema.RunTagsTable.c.run_id",
  "schema.RunTagsTable.c.run_id.label",
  "schema.RunTagsTable.c.value",
  "schema.RunTagsTable.c.value.label",
  "schema.RunTagsTable.delete",
  "schema.RunTagsTable.insert",
  "schema.RunsTable.c",
  "schema.RunsTable.c.id",
  "schema.RunsTable.c.id.desc",
  "schema.RunsTable.c.pipeline_name",
  "schema.RunsTable.c.run_body",
  "schema.RunsTable.c.run_id",
  "schema.RunsTable.c.run_id.in_",
  "schema.RunsTable.c.status",
  "schema.RunsTable.delete",
  "schema.RunsTable.insert",
  "schema.RunsTable.outerjoin",
  "schema.RunsTable.update",
  "schema.ScheduleStorageSqlMetadata.create_all",
  "schema.ScheduleTable.c.repository_name",
  "schema.ScheduleTable.c.schedule_body",
  "schema.ScheduleTable.c.schedule_name",
  "schema.ScheduleTable.delete",
  "schema.ScheduleTable.insert",
  "schema.ScheduleTable.update",
  "schema.ScheduleTickTable.c.id",
  "schema.ScheduleTickTable.c.id.desc",
  "schema.ScheduleTickTable.c.repository_name",
  "schema.ScheduleTickTable.c.schedule_name",
  "schema.ScheduleTickTable.c.status",
  "schema.ScheduleTickTable.c.tick_body",
  "schema.ScheduleTickTable.delete",
  "schema.ScheduleTickTable.insert",
  "schema.ScheduleTickTable.update",
  "schema.SnapshotsTable.c.snapshot_body",
  "schema.SnapshotsTable.c.snapshot_id",
  "schema.SnapshotsTable.delete",
  "schema.SnapshotsTable.insert",
  "schema.SqlEventLogStorageMetadata.create_all",
  "schema.SqlEventLogStorageTable.c.dagster_event_type",
  "schema.SqlEventLogStorageTable.c.dagster_event_type.in_",
  "schema.SqlEventLogStorageTable.c.event",
  "schema.SqlEventLogStorageTable.c.id",
  "schema.SqlEventLogStorageTable.c.id.asc",
  "schema.SqlEventLogStorageTable.c.run_id",
  "schema.SqlEventLogStorageTable.c.step_key",
  "schema.SqlEventLogStorageTable.c.timestamp",
  "schema.SqlEventLogStorageTable.delete",
  "schema.SqlEventLogStorageTable.insert",
  "schema.SqlEventLogStorageTable.update",
  "should_execute",
  "signal.SIGINT",
  "signal.SIGTERM",
  "six.moves.configparser",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.gaierror",
  "socket.gethostbyname_ex",
  "socket.inet_aton",
  "solid.CompositeSolidDefinition",
  "solid.ISolidDefinition",
  "sqlalchemy.func.count",
  "sqlalchemy.func.max",
  "sqlite3.DatabaseError",
  "sqlite3.OperationalError",
  "struct.unpack",
  "sub",
  "sys",
  "sys.argv",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.modules",
  "sys.modules.__file__",
  "sys.modules.get",
  "sys.path",
  "sys.path.append",
  "sys.platform",
  "sys.stderr",
  "sys.stdin",
  "sys.stdout",
  "sys.stdout.isatty",
  "sys.version_info",
  "sys.version_info.major",
  "sys.version_info.minor",
  "system_storage.SystemStorageDefinition",
  "tags_fn_for_date",
  "target",
  "thread",
  "time",
  "time.clock",
  "time.perf_counter",
  "time.sleep",
  "time.time",
  "transform_typing.transform_typing_type",
  "traversal_context.TraversalContext.from_config_type",
  "traversal_context.TraversalType.RESOLVE_DEFAULTS",
  "traversal_context.TraversalType.RESOLVE_DEFAULTS_AND_POSTPROCESS",
  "unittest.mock.call.write",
  "urllib.quote_plus",
  "urlparse.urljoin",
  "urlparse.urlparse",
  "urlparse.urlunparse",
  "validate_solid_fn",
  "value_for_ref_item",
  "visit"
 ],
 "deps": {
  "DagsterTypeSnap": [],
  "EngineEventData": [],
  "ExecutionConfig": [],
  "InputDefSnap": [],
  "InvokedSolidOutputHandle": [],
  "JsonFormatter": [],
  "OutputDefSnap": [],
  "ScopedResources": [],
  "SolidInvocationSnap": [],
  "_ExecuteRunWithPlanIterable": [],
  "_ExecutionTargetHandleData": [],
  "_List": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_check_list_items": [],
  "_check_tuple_items": [],
  "_convert_potential_field": [],
  "_expand_fields_dict": [],
  "_fileno": [],
  "_gen_thing": [],
  "_get_python_file_from_previous_stack_frame": [],
  "_module_name": [],
  "_msg": [],
  "_recursively_process_config": [],
  "_thread": [],
  "_unpack_value": [],
  "_warn": [],
  "_with_header": [],
  "_wrap": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "active": [],
  "alembic": [
   "alembic/conda-forge/noarch/alembic-1.0.7-py_0",
   "alembic/conda-forge/noarch/alembic-1.5.8-pyhd8ed1ab_0"
  ],
  "api": [],
  "atexit": [],
  "backports": [
   "backports.tempfile/conda-forge/noarch/backports.tempfile-1.0-py_0"
  ],
  "build_composite_solid_def_snap": [],
  "build_core_solid_def_snap": [],
  "builtins": [
   "pies2overrides/conda-forge/linux-64/pies2overrides-2.6.7-py27_0"
  ],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "click_param": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "coloredlogs": [
   "coloredlogs/conda-forge/linux-64/coloredlogs-14.0-py37hc8dfbb8_2",
   "coloredlogs/conda-forge/linux-64/coloredlogs-15.0-py37h89c1867_0"
  ],
  "composite_descent": [],
  "composition": [],
  "compute_fn": [],
  "compute_log_manager": [],
  "config_type": [],
  "construct_config_type_from_snap": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "create_value_solid": [],
  "create_wrap": [],
  "dagster": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dateutil": [
   "jupyter_kernel_test/conda-forge/linux-64/jupyter_kernel_test-0.3-py36_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.0-py_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decorator_utils": [],
  "define_solid_dictionary_cls": [],
  "dependency": [],
  "docker": [
   "docker-py/conda-forge/linux-64/docker-py-4.4.4-py36h5fab9bb_0",
   "docker-py/conda-forge/linux-64/docker-py-4.4.4-py37h9c2f6ca_0"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "environment_configs": [],
  "environment_schema": [],
  "errno": [],
  "evaluate_value_result": [],
  "expand_fields_dict": [],
  "f": [],
  "field": [],
  "field_utils": [],
  "file_manager": [],
  "fn": [],
  "fn_repo_or_pipeline": [],
  "func": [],
  "funcsigs": [
   "funcsigs/conda-forge/noarch/funcsigs-1.0.2-py_1",
   "funcsigs/conda-forge/noarch/funcsigs-1.0.2-py_3"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "functools32": [
   "functools32/conda-forge/noarch/functools32-3.2.3.2-py_3"
  ],
  "future": [
   "future/conda-forge/linux-64/future-0.18.2-py37h89c1867_2"
  ],
  "get_logging_tags": [],
  "get_run": [],
  "get_tags_from_args": [],
  "get_temp_file_name": [],
  "gevent": [
   "gevent/conda-forge/linux-64/gevent-20.12.1-py37h5e8e339_2",
   "gevent/conda-forge/linux-64/gevent-21.1.2-py37h6b43d8f_0"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "graphviz": [
   "python-graphviz/conda-forge/noarch/python-graphviz-0.14.2-pyh9f0ad1d_0",
   "python-graphviz/conda-forge/noarch/python-graphviz-0.15-pyhd3deb0d_0"
  ],
  "handler": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "imp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_str": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "keyword": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "klass": [],
  "line_break_fn": [],
  "log_fn": [],
  "log_record_cls": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mock": [
   "mock/conda-forge/linux-64/mock-2.0.0-py39hf3d152e_1002",
   "mock/conda-forge/linux-64/mock-4.0.3-py37h9c2f6ca_1"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "new": [],
  "objects": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "partition_selector": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pathlib2": [
   "pathlib2/conda-forge/linux-64/pathlib2-2.3.5-py36h5fab9bb_3",
   "pathlib2/conda-forge/linux-64/pathlib2-2.3.5-py37h89c1867_2"
  ],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.5-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pipeline_run": [],
  "pipeline_snapshot": [],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pkgutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "psutil": [
   "psutil/conda-forge/linux-64/psutil-5.8.0-py37h5e8e339_1"
  ],
  "pyrsistent": [
   "pyrsistent/conda-forge/linux-64/pyrsistent-0.14.9-py37h14c3975_1000",
   "pyrsistent/conda-forge/linux-64/pyrsistent-0.15.1-py27h516909a_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.4-py35_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "python_dict": [],
  "python_set": [],
  "python_tuple": [],
  "pytz": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pytz/conda-forge/noarch/pytz-2018.4-py_0"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ref": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/linux-64/requests-2.11.0-py35_0",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "resolve_dagster_type": [],
  "resource": [],
  "rx": [
   "rx/conda-forge/noarch/rx-3.1.0-py_0"
  ],
  "schema": [],
  "should_execute": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "six/conda-forge/linux-64/six-1.14.0-py36_0",
   "six/conda-forge/noarch/six-1.16.0-pyh6c4a22f_0"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "solid": [],
  "sqlalchemy": [
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.2.9-py35_0",
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.3.15-py36h8c4c3a4_1",
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.4.6-py37h6b43d8f_0"
  ],
  "sqlite3": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sub": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "system_storage": [],
  "tags_fn_for_date": [],
  "target": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "thread": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "toposort": [
   "toposort/conda-forge/noarch/toposort-1.6-pyhd8ed1ab_0"
  ],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.32.0-py_0"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "transform_typing": [],
  "traversal_context": [],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urlparse": [],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "validate_solid_fn": [],
  "value_for_ref_item": [],
  "visit": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "watchdog": [
   "watchdog/conda-forge/linux-64/watchdog-2.0.0-py36hd000896_0",
   "watchdog/conda-forge/noarch/watchdog-0.9.0-py_0"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ],
  "zlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}