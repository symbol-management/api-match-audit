{
 "bad": [
  "aiohttp.web.HTTPClientError",
  "aiohttp.web.Request",
  "aiohttp.web.View",
  "aiohttp.web_exceptions",
  "aiohttp.web_exceptions.HTTPException",
  "aiohttp.web_exceptions.__all__",
  "asyncio.iscoroutinefunction",
  "bottle.HTTPError",
  "bottle.request",
  "collections.abc.Mapping",
  "distutils.version.LooseVersion",
  "error_class",
  "error_handler",
  "falcon.HTTPError",
  "falcon.Request",
  "falcon.status_codes",
  "falcon.util.uri.parse_query_string",
  "flask.abort",
  "flask.request",
  "func",
  "functools.wraps",
  "inspect.iscoroutinefunction",
  "inspect.isfunction",
  "json.JSONDecodeError",
  "json.loads",
  "loader_func",
  "logging.getLogger",
  "marshmallow.Schema",
  "marshmallow.ValidationError",
  "marshmallow.__version__",
  "marshmallow.exceptions.ValidationError",
  "marshmallow.fields.Field",
  "marshmallow.fields.List",
  "marshmallow.fields.Nested",
  "marshmallow.fields.Tuple",
  "marshmallow.utils.missing",
  "pyramid.httpexceptions.exception_response",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "tornado.escape._unicode",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.Mapping",
  "typing.Optional",
  "typing.TypeVar",
  "typing.Union",
  "validator",
  "warnings.warn",
  "webapp2.get_request",
  "webargs.__version__",
  "webargs.aiohttpparser.AIOHTTPParser",
  "webargs.aiohttpparser.HTTPUnprocessableEntity",
  "webargs.aiohttpparser._find_exceptions",
  "webargs.aiohttpparser.exception_map",
  "webargs.aiohttpparser.is_json_request",
  "webargs.aiohttpparser.parser",
  "webargs.asyncparser.ArgMap",
  "webargs.asyncparser.AsyncParser",
  "webargs.asyncparser.Request",
  "webargs.asyncparser.Validate",
  "webargs.bottleparser.BottleParser",
  "webargs.bottleparser.parser",
  "webargs.compat.MARSHMALLOW_VERSION_INFO",
  "webargs.core.DEFAULT_VALIDATION_STATUS",
  "webargs.core.MARSHMALLOW_VERSION_INFO",
  "webargs.core.Parser",
  "webargs.core.Parser.DEFAULT_LOCATION",
  "webargs.core.Parser.__location_map__",
  "webargs.core._callable_or_raise",
  "webargs.core._ensure_list_of_callables",
  "webargs.core.dict2schema",
  "webargs.core.get_mimetype",
  "webargs.core.is_json",
  "webargs.core.is_multiple",
  "webargs.core.json.JSONDecodeError",
  "webargs.core.json.dumps",
  "webargs.core.json.loads",
  "webargs.core.logger",
  "webargs.core.missing",
  "webargs.core.parse_json",
  "webargs.dict2schema.dict2schema",
  "webargs.djangoparser.DjangoParser",
  "webargs.djangoparser.is_json_request",
  "webargs.djangoparser.parser",
  "webargs.falconparser.FalconParser",
  "webargs.falconparser.HTTPError",
  "webargs.falconparser.HTTP_422",
  "webargs.falconparser._find_exceptions",
  "webargs.falconparser.is_json_request",
  "webargs.falconparser.parse_form_body",
  "webargs.falconparser.parser",
  "webargs.falconparser.status_map",
  "webargs.fields.DelimitedFieldMixin",
  "webargs.fields.DelimitedList",
  "webargs.flaskparser.FlaskParser",
  "webargs.flaskparser.abort",
  "webargs.flaskparser.is_json_request",
  "webargs.flaskparser.parser",
  "webargs.multidictproxy.MultiDictProxy",
  "webargs.pyramidparser.PyramidParser",
  "webargs.pyramidparser.is_json_request",
  "webargs.pyramidparser.parser",
  "webargs.tornadoparser.HTTPError",
  "webargs.tornadoparser.TornadoParser",
  "webargs.tornadoparser.WebArgsTornadoCookiesMultiDictProxy",
  "webargs.tornadoparser.WebArgsTornadoMultiDictProxy",
  "webargs.tornadoparser.is_json_request",
  "webargs.tornadoparser.parser",
  "webargs.webapp2parser.Webapp2Parser",
  "webargs.webapp2parser.parser",
  "webob.multidict.MultiDict",
  "webtest.TestApp",
  "webtest.Upload",
  "werkzeug.exceptions.HTTPException"
 ],
 "deps": {
  "aiohttp": [],
  "asyncio": [],
  "bottle": [],
  "collections": [],
  "distutils": [],
  "error_class": [],
  "error_handler": [],
  "falcon": [],
  "flask": [],
  "func": [],
  "functools": [],
  "inspect": [],
  "json": [],
  "loader_func": [],
  "logging": [],
  "marshmallow": [],
  "pyramid": [],
  "pytest": [],
  "tornado": [],
  "typing": [],
  "validator": [],
  "warnings": [],
  "webapp2": [],
  "webargs": [],
  "webob": [],
  "webtest": [],
  "werkzeug": []
 }
}