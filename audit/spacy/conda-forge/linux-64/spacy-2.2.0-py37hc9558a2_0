{
 "bad": [
  "Alignment",
  "AlignmentWord",
  "Cython.Compiler.Version.version",
  "ErrorsWithCodes",
  "IPython.core.display.HTML",
  "IPython.core.display.display",
  "LangClass",
  "MeCab",
  "Parser",
  "Score",
  "Table",
  "UDRepresentation",
  "UDSpan",
  "UDWord",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "_fix_pretrained_vectors_name",
  "_fix_token",
  "_get_metrics",
  "_ml.Tok2Vec",
  "_ml.chain",
  "_ml.create_default_optimizer",
  "_ml.flatten",
  "_ml.get_cossim_loss",
  "_ml.link_vectors_to_models",
  "_ml.masked_language_model",
  "_offset",
  "_pipe",
  "_save_model",
  "_to_cpu",
  "_tokenizer_exceptions_list.ID_BASE_EXCEPTIONS",
  "_tokenizer_exceptions_list.PL_BASE_EXCEPTIONS",
  "_warn",
  "about.__compatibility__",
  "about.__download_url__",
  "about.__shortcuts__",
  "about.__title__",
  "about.__version__",
  "align_words",
  "alignment_score",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.FileType",
  "ast",
  "ast.literal_eval",
  "attrs.CLUSTER",
  "attrs.HEAD",
  "attrs.ID",
  "attrs.IS_ALPHA",
  "attrs.IS_ASCII",
  "attrs.IS_BRACKET",
  "attrs.IS_CURRENCY",
  "attrs.IS_DIGIT",
  "attrs.IS_LEFT_PUNCT",
  "attrs.IS_LOWER",
  "attrs.IS_OOV",
  "attrs.IS_PUNCT",
  "attrs.IS_QUOTE",
  "attrs.IS_RIGHT_PUNCT",
  "attrs.IS_SPACE",
  "attrs.IS_STOP",
  "attrs.IS_TITLE",
  "attrs.IS_UPPER",
  "attrs.LANG",
  "attrs.LIKE_EMAIL",
  "attrs.LIKE_NUM",
  "attrs.LIKE_URL",
  "attrs.LOWER",
  "attrs.NORM",
  "attrs.ORTH",
  "attrs.PREFIX",
  "attrs.PROB",
  "attrs.SHAPE",
  "attrs.SPACY",
  "attrs.SUFFIX",
  "backprop",
  "beyond_end",
  "bp_flat_y",
  "bp_model",
  "bz2",
  "bz2.open",
  "cPickle",
  "cProfile",
  "cProfile.runctx",
  "char_classes.ALPHA",
  "char_classes.ALPHA_LOWER",
  "char_classes.ALPHA_UPPER",
  "char_classes.CONCAT_ICONS",
  "char_classes.CONCAT_ICONS.replace",
  "char_classes.CONCAT_QUOTES",
  "char_classes.CONCAT_QUOTES.replace",
  "char_classes.CURRENCY",
  "char_classes.HYPHENS",
  "char_classes.HYPHENS.replace",
  "char_classes.LIST_CURRENCY",
  "char_classes.LIST_ELLIPSES",
  "char_classes.LIST_ICONS",
  "char_classes.LIST_PUNCT",
  "char_classes.LIST_QUOTES",
  "char_classes.PUNCT",
  "char_classes.UNITS",
  "char_classes._currency",
  "char_classes._units",
  "char_classes.merge_chars",
  "char_classes.split_chars",
  "cli.info.info",
  "clip",
  "cls",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.OrderedDict.__contains__",
  "collections.OrderedDict.__getitem__",
  "collections.OrderedDict.__setitem__",
  "collections.OrderedDict.fromkeys",
  "collections.OrderedDict.get",
  "collections.defaultdict",
  "collections.namedtuple",
  "compat.CudaStream",
  "compat.b_to_str",
  "compat.basestring_",
  "compat.copy_reg.pickle",
  "compat.cupy",
  "compat.cupy.cuda.device.Device",
  "compat.cupy.ndarray",
  "compat.cupy.random.seed",
  "compat.import_file",
  "compat.izip",
  "compat.path2str",
  "compat.symlink_to",
  "compat.unicode_",
  "compute_lcs",
  "concatenate_lists",
  "conll17_ud_eval",
  "conll17_ud_eval.evaluate",
  "conll17_ud_eval.load_conllu",
  "conll_ner2json.n_sents_info",
  "contextlib",
  "contextlib.contextmanager",
  "control",
  "converter",
  "converters.conll_ner2json",
  "converters.conllu2json",
  "converters.iob2json",
  "converters.ner_jsonl2json",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "copy_reg",
  "copyreg",
  "csv",
  "csv.field_size_limit",
  "csv.reader",
  "ctypes",
  "ctypes.windll.shell32.IsUserAnAdmin",
  "cupy",
  "cupy.cuda.device",
  "cupy.cuda.stream.Stream",
  "cupy.random",
  "custom_tokenizer",
  "da.punctuation.TOKENIZER_INFIXES",
  "da.punctuation.TOKENIZER_SUFFIXES",
  "datetime",
  "datetime.date.today",
  "deprojectivize",
  "displacy.render",
  "distutils.version.LooseVersion",
  "dummy_pipe",
  "en_search_prefixes",
  "en_tokenizer",
  "errors.Errors.E001.format",
  "errors.Errors.E002.format",
  "errors.Errors.E003.format",
  "errors.Errors.E004.format",
  "errors.Errors.E005.format",
  "errors.Errors.E006",
  "errors.Errors.E007.format",
  "errors.Errors.E008.format",
  "errors.Errors.E009.format",
  "errors.Errors.E046.format",
  "errors.Errors.E047.format",
  "errors.Errors.E048.format",
  "errors.Errors.E049.format",
  "errors.Errors.E050.format",
  "errors.Errors.E051.format",
  "errors.Errors.E052.format",
  "errors.Errors.E053.format",
  "errors.Errors.E054.format",
  "errors.Errors.E055.format",
  "errors.Errors.E056.format",
  "errors.Errors.E057",
  "errors.Errors.E066.format",
  "errors.Errors.E083.format",
  "errors.Errors.E087.format",
  "errors.Errors.E088.format",
  "errors.Errors.E089",
  "errors.Errors.E091.format",
  "errors.Errors.E092",
  "errors.Errors.E094.format",
  "errors.Errors.E095",
  "errors.Errors.E096",
  "errors.Errors.E097.format",
  "errors.Errors.E108.format",
  "errors.Errors.E110.format",
  "errors.Errors.E128.format",
  "errors.Errors.E130",
  "errors.Errors.E135.format",
  "errors.Errors.E136",
  "errors.Errors.E137.format",
  "errors.Errors.E138.format",
  "errors.Errors.E142.format",
  "errors.Errors.E144.format",
  "errors.Errors.E151.format",
  "errors.Errors.E157.format",
  "errors.Errors.E158.format",
  "errors.Errors.E159.format",
  "errors.Errors.E160.format",
  "errors.Errors.E162.format",
  "errors.Errors.E163",
  "errors.Errors.E164.format",
  "errors.Errors.E165",
  "errors.Errors.E166.format",
  "errors.Errors.E169.format",
  "errors.Errors.E172",
  "errors.Warnings.W001.format",
  "errors.Warnings.W004",
  "errors.Warnings.W005",
  "errors.Warnings.W006",
  "errors.Warnings.W011",
  "errors.Warnings.W014",
  "errors.Warnings.W015.format",
  "errors.Warnings.W016",
  "errors.Warnings.W019.format",
  "errors.Warnings.W020.format",
  "errors.deprecation_warning",
  "errors.user_warning",
  "exclude_dir",
  "extend_end",
  "factory",
  "find_multiword_span",
  "fr_tokenizer_w_infix",
  "ftfy",
  "func",
  "functools",
  "functools.partial",
  "gc",
  "gc.collect",
  "gensim.corpora.wikicorpus.extract_pages",
  "gensim.models.Word2Vec",
  "get_doc_settings",
  "get_gold_parse",
  "get_ipython",
  "get_model_meta",
  "get_new_parser",
  "getopt",
  "getter",
  "gold.GoldCorpus",
  "gold.GoldParse",
  "gold.GoldParse.from_annot_tuples",
  "gold.docs_to_json",
  "gold.iob_to_biluo",
  "gold.tags_to_entities",
  "gzip",
  "gzip.compress",
  "gzip.decompress",
  "gzip.open",
  "hashlib",
  "hashlib.md5",
  "imp",
  "imp.load_source",
  "importlib",
  "importlib.import_module",
  "importlib.util",
  "inspect",
  "inspect.stack",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "is_compat",
  "itertools",
  "itertools.islice",
  "itertools.repeat",
  "itertools.tee",
  "jieba",
  "jieba.cut",
  "json",
  "json.dumps",
  "json.load",
  "json.loads",
  "jsonschema",
  "lang.lex_attrs.LEX_ATTRS",
  "lang.lex_attrs.is_stop",
  "lang.punctuation.TOKENIZER_INFIXES",
  "lang.punctuation.TOKENIZER_PREFIXES",
  "lang.punctuation.TOKENIZER_SUFFIXES",
  "lang.tag_map.TAG_MAP",
  "lang.tokenizer_exceptions.TOKEN_MATCH",
  "lang.xx.MultiLanguage",
  "lang_class",
  "lang_cls",
  "language.Language",
  "language.Language.Defaults",
  "language.Language.Defaults.lex_attr_getters",
  "lemmatizer.DutchLemmatizer",
  "lemmatizer.FrenchLemmatizer",
  "lemmatizer.GreekLemmatizer",
  "lemmatizer.Lemmatizer",
  "lemmatizer.RussianLemmatizer",
  "lemmatizer.UkrainianLemmatizer",
  "lex_attrs.LEX_ATTRS",
  "link.link",
  "logging",
  "logging.INFO",
  "logging.basicConfig",
  "logging.error",
  "logging.getLogger",
  "logging.info",
  "lookups.Lookups",
  "lower",
  "matcher",
  "matcher.Matcher",
  "matcher.PhraseMatcher",
  "matcher.add",
  "matcher.pipe",
  "matcher.remove",
  "matcher.vocab",
  "math",
  "math.log",
  "merge_entities",
  "merge_noun_chunks",
  "merger",
  "mock.Mock",
  "model",
  "model.W",
  "model.b",
  "model.begin_update",
  "model.cols",
  "model.init_weights",
  "model.lsuv",
  "model.nF",
  "model.nI",
  "model.nO",
  "model.nP",
  "model.on_data_hooks.append",
  "model.ops.allocate",
  "model.ops.asarray",
  "model.ops.maxout",
  "model.ops.scatter_add",
  "model.ops.xp.mean",
  "model.ops.xp.sqrt",
  "model.ops.xp.var",
  "model.softmax",
  "model.tok2vec",
  "morph_rules.MORPH_RULES",
  "my_tokenizer",
  "natto.MeCab",
  "ner",
  "ner.begin_training",
  "ner1",
  "ner1.labels",
  "ner1.to_disk",
  "new_matcher",
  "new_tokenizer",
  "nlp",
  "nlp.add_pipe",
  "nlp.begin_training",
  "nlp.create_pipe",
  "nlp.entity.beam_parse",
  "nlp.entity.moves.get_beam_parses",
  "nlp.pipe",
  "nlp.pipe_names",
  "nlp.to_bytes",
  "nlp.to_disk",
  "nlp.tokenizer",
  "nlp.tokenizer.add_special_case",
  "nlp.tokenizer.pipe",
  "nlp.update",
  "nlp.vocab",
  "nlp.vocab.strings",
  "nlp1",
  "nlp2",
  "nlp_1",
  "nlp_1.to_disk",
  "nlp_2",
  "norm_exceptions.BASE_NORMS",
  "norm_exceptions.NORM_EXCEPTIONS",
  "numpy",
  "numpy.all",
  "numpy.any",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.cumsum",
  "numpy.diff",
  "numpy.dot",
  "numpy.float64",
  "numpy.fromstring",
  "numpy.int32",
  "numpy.int_",
  "numpy.isclose",
  "numpy.linalg.norm",
  "numpy.load",
  "numpy.mean",
  "numpy.memmap",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.r_",
  "numpy.random",
  "numpy.random.choice",
  "numpy.random.random",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.trapz",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator",
  "operator.itemgetter",
  "os",
  "os.O_WRONLY",
  "os.chdir",
  "os.devnull",
  "os.dup2",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.getcwd",
  "os.getuid",
  "os.mkdir",
  "os.open",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.splitext",
  "os.rmdir",
  "os.unlink",
  "os.walk",
  "pathlib.Path",
  "pathlib.Path.mkdir",
  "pickle",
  "pipeline.DependencyParser",
  "pipeline.EntityLinker",
  "pipeline.EntityRecognizer",
  "pipeline.EntityRuler",
  "pipeline.Morphologizer",
  "pipeline.Sentencizer",
  "pipeline.SimilarityHook",
  "pipeline.Tagger",
  "pipeline.Tensorizer",
  "pipeline.TextCategorizer",
  "pipeline.merge_entities",
  "pipeline.merge_noun_chunks",
  "pipeline.merge_subtokens",
  "pipes.Pipe",
  "pkg_resources",
  "pkg_resources.iter_entry_points",
  "pkg_resources.working_set.by_key.items",
  "pkg_resources.working_set.by_key.keys",
  "pkg_resources.working_set.require",
  "plac",
  "plac.annotations",
  "plac.call",
  "platform",
  "platform.platform",
  "platform.python_version",
  "predict",
  "preshed.bloom.BloomFilter",
  "preshed.counter.PreshCounter",
  "proc",
  "proc._rehearsal_model",
  "proc.begin_training",
  "proc.cfg",
  "proc.cfg.setdefault",
  "proc.from_bytes",
  "proc.from_disk",
  "proc.model",
  "proc.pipe",
  "proc.preprocess_gold",
  "proc.rehearse",
  "proc.to_bytes",
  "proc.to_disk",
  "proc.update",
  "process_word",
  "pstats",
  "pstats.Stats",
  "punctuation.ALPHA_LOWER",
  "punctuation.CURRENCY",
  "punctuation.ELISION",
  "punctuation.HYPHENS",
  "punctuation.LIST_CURRENCY",
  "punctuation.TOKENIZER_INFIXES",
  "punctuation.TOKENIZER_PREFIXES",
  "punctuation.TOKENIZER_SUFFIXES",
  "pytest",
  "pytest.approx",
  "pytest.deprecated_call",
  "pytest.fail",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.slow",
  "pytest.mark.xfail",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pyvi.ViTokenizer",
  "pyvi.ViTokenizer.spacy_tokenize",
  "random",
  "random.choice",
  "random.randint",
  "random.random",
  "random.seed",
  "random.shuffle",
  "re",
  "re.IGNORECASE",
  "re.UNICODE",
  "re.compile",
  "re.escape",
  "re.finditer",
  "re.match",
  "re.search",
  "re.sub",
  "reader",
  "render.DependencyRenderer",
  "render.EntityRenderer",
  "renderer",
  "renderer.render",
  "requests",
  "requests.get",
  "ruler",
  "scorer.Scorer",
  "sentencizer",
  "sentencizer.punct_chars",
  "sentencizer.to_bytes",
  "setter",
  "shutil",
  "shutil.copytree",
  "shutil.rmtree",
  "socket",
  "socket.error",
  "spacy._align.align",
  "spacy._align.multi_align",
  "spacy.attrs.DEP",
  "spacy.attrs.ENT_IOB",
  "spacy.attrs.ENT_TYPE",
  "spacy.attrs.HEAD",
  "spacy.attrs.IS_ALPHA",
  "spacy.attrs.IS_DIGIT",
  "spacy.attrs.IS_LOWER",
  "spacy.attrs.IS_PUNCT",
  "spacy.attrs.IS_STOP",
  "spacy.attrs.IS_TITLE",
  "spacy.attrs.LEMMA",
  "spacy.attrs.LENGTH",
  "spacy.attrs.LOWER",
  "spacy.attrs.NORM",
  "spacy.attrs.ORTH",
  "spacy.attrs.POS",
  "spacy.attrs.PROB",
  "spacy.attrs.SHAPE",
  "spacy.attrs.intify_attrs",
  "spacy.compat.pickle.dumps",
  "spacy.compat.pickle.loads",
  "spacy.displacy.__init__.RENDER_WRAPPER",
  "spacy.displacy.__init__._html",
  "spacy.displacy.__init__.get_doc_settings",
  "spacy.displacy.__init__.render",
  "spacy.gold.GoldCorpus",
  "spacy.gold.GoldParse",
  "spacy.gold.biluo_tags_from_offsets",
  "spacy.gold.docs_to_json",
  "spacy.gold.iob_to_biluo",
  "spacy.gold.offsets_from_biluo_tags",
  "spacy.gold.spans_from_biluo_tags",
  "spacy.kb.KnowledgeBase",
  "spacy.lang.af.__init__.AfrikaansDefaults",
  "spacy.lang.ar.__init__.ArabicDefaults",
  "spacy.lang.bg.__init__.BulgarianDefaults",
  "spacy.lang.bn.__init__.BengaliDefaults",
  "spacy.lang.ca.__init__.CatalanDefaults",
  "spacy.lang.cs.__init__.CzechDefaults",
  "spacy.lang.da.__init__.DanishDefaults",
  "spacy.lang.de.__init__.GermanDefaults",
  "spacy.lang.el.__init__.GreekDefaults",
  "spacy.lang.en.English.Defaults.create_tokenizer",
  "spacy.lang.en.English.Defaults.prefixes",
  "spacy.lang.en.English.Defaults.suffixes",
  "spacy.lang.en.English.Defaults.tokenizer_exceptions",
  "spacy.lang.en.__init__.EnglishDefaults",
  "spacy.lang.en.__init__._return_en",
  "spacy.lang.es.__init__.SpanishDefaults",
  "spacy.lang.et.__init__.EstonianDefaults",
  "spacy.lang.fa.__init__.PersianDefaults",
  "spacy.lang.fi.__init__.FinnishDefaults",
  "spacy.lang.fr.__init__.FrenchDefaults",
  "spacy.lang.ga.__init__.IrishDefaults",
  "spacy.lang.he.__init__.HebrewDefaults",
  "spacy.lang.hi.__init__.HindiDefaults",
  "spacy.lang.hr.__init__.CroatianDefaults",
  "spacy.lang.hu.__init__.HungarianDefaults",
  "spacy.lang.id.__init__.IndonesianDefaults",
  "spacy.lang.is.__init__.IcelandicDefaults",
  "spacy.lang.it.__init__.ItalianDefaults",
  "spacy.lang.ja.Japanese.Defaults.use_janome",
  "spacy.lang.ja.__init__.Japanese",
  "spacy.lang.ja.__init__.JapaneseDefaults",
  "spacy.lang.ja.__init__.JapaneseTokenizer",
  "spacy.lang.ja.__init__.ShortUnitWord",
  "spacy.lang.ja.__init__.detailed_tokens",
  "spacy.lang.ja.__init__.pickle_japanese",
  "spacy.lang.ja.__init__.resolve_pos",
  "spacy.lang.kn.__init__.KannadaDefaults",
  "spacy.lang.ko.__init__.Korean",
  "spacy.lang.ko.__init__.KoreanDefaults",
  "spacy.lang.ko.__init__.KoreanTokenizer",
  "spacy.lang.ko.__init__.check_spaces",
  "spacy.lang.ko.__init__.pickle_korean",
  "spacy.lang.lt.__init__.LithuanianDefaults",
  "spacy.lang.lt.__init__._return_lt",
  "spacy.lang.lv.__init__.LatvianDefaults",
  "spacy.lang.mr.__init__.MarathiDefaults",
  "spacy.lang.nb.__init__.NorwegianDefaults",
  "spacy.lang.nl.__init__.DutchDefaults",
  "spacy.lang.pl.__init__.PolishDefaults",
  "spacy.lang.pt.__init__.PortugueseDefaults",
  "spacy.lang.ro.__init__.RomanianDefaults",
  "spacy.lang.ru.Russian.Defaults.use_pymorphy2",
  "spacy.lang.ru.__init__.RussianDefaults",
  "spacy.lang.si.__init__.SinhalaDefaults",
  "spacy.lang.sk.__init__.SlovakDefaults",
  "spacy.lang.sl.__init__.SlovenianDefaults",
  "spacy.lang.sq.__init__.AlbanianDefaults",
  "spacy.lang.sr.__init__.SerbianDefaults",
  "spacy.lang.sv.__init__.SwedishDefaults",
  "spacy.lang.ta.__init__.TamilDefaults",
  "spacy.lang.te.__init__.TeluguDefaults",
  "spacy.lang.th.__init__.ThaiDefaults",
  "spacy.lang.th.__init__.ThaiTokenizer",
  "spacy.lang.tl.__init__.TagalogDefaults",
  "spacy.lang.tl.__init__._return_tl",
  "spacy.lang.tr.__init__.TurkishDefaults",
  "spacy.lang.tt.__init__.TatarDefaults",
  "spacy.lang.uk.__init__.UkrainianDefaults",
  "spacy.lang.ur.__init__.UrduDefaults",
  "spacy.lang.vi.__init__.VietnameseDefaults",
  "spacy.lang.xx.__init__.MultiLanguageDefaults",
  "spacy.lang.zh.Chinese.Defaults.use_jieba",
  "spacy.lang.zh.__init__.ChineseDefaults",
  "spacy.language.Language.Defaults",
  "spacy.morphology.Morphology",
  "spacy.parts_of_speech.NOUN",
  "spacy.parts_of_speech.VERB",
  "spacy.pipeline.pipes.DependencyParser",
  "spacy.strings.StringStore",
  "spacy.strings.get_string_id",
  "spacy.symbols.LEMMA",
  "spacy.symbols.ORTH",
  "spacy.symbols.POS",
  "spacy.symbols.VERB",
  "spacy.symbols.VerbForm_inf",
  "spacy.symbols.VerbForm_part",
  "spacy.symbols.amod",
  "spacy.symbols.cc",
  "spacy.symbols.conj",
  "spacy.symbols.dobj",
  "spacy.symbols.nmod",
  "spacy.symbols.nsubj",
  "spacy.symbols.root",
  "spacy.syntax._beam_utils.ParserBeam",
  "spacy.syntax.arc_eager.ArcEager",
  "spacy.syntax.arc_eager.ArcEager.get_actions",
  "spacy.syntax.ner.BiluoPushDown",
  "spacy.syntax.ner.BiluoPushDown.get_actions",
  "spacy.syntax.nn_parser.Parser",
  "spacy.syntax.nn_parser.Parser.Model",
  "spacy.syntax.nonproj._get_smallest_nonproj_arc",
  "spacy.syntax.nonproj._lift",
  "spacy.syntax.nonproj.ancestors",
  "spacy.syntax.nonproj.contains_cycle",
  "spacy.syntax.nonproj.decompose",
  "spacy.syntax.nonproj.is_decorated",
  "spacy.syntax.nonproj.is_nonproj_arc",
  "spacy.syntax.nonproj.is_nonproj_tree",
  "spacy.syntax.nonproj.projectivize",
  "spacy.syntax.stateclass.StateClass",
  "spacy.tokenizer.Tokenizer",
  "spacy.tokens.Doc.set_extension",
  "spacy.tokens.Token.set_extension",
  "spacy.tokens.doc.Doc",
  "spacy.tokens.underscore.Underscore.doc_extensions",
  "spacy.tokens.underscore.Underscore.span_extensions",
  "spacy.tokens.underscore.Underscore.token_extensions",
  "spacy.vectors.Vectors",
  "spacy.vocab.Vocab",
  "spans_score",
  "srsly",
  "srsly.json_dumps",
  "srsly.json_loads",
  "srsly.msgpack_dumps",
  "srsly.msgpack_loads",
  "srsly.pickle_dumps",
  "srsly.pickle_loads",
  "srsly.read_gzip_json",
  "srsly.read_json",
  "srsly.read_jsonl",
  "srsly.write_json",
  "srsly.write_jsonl",
  "srsly.write_msgpack",
  "stop_words.STOP_WORDS",
  "string_generator",
  "strings.get_string_id",
  "subprocess",
  "subprocess.CalledProcessError",
  "subprocess.call",
  "subprocess.check_call",
  "symbols.ADJ",
  "symbols.ADP",
  "symbols.ADV",
  "symbols.AUX",
  "symbols.CCONJ",
  "symbols.CONJ",
  "symbols.DET",
  "symbols.Degree_pos",
  "symbols.INTJ",
  "symbols.LEMMA",
  "symbols.NORM",
  "symbols.NOUN",
  "symbols.NUM",
  "symbols.Number_sing",
  "symbols.ORTH",
  "symbols.ORTH.capitalize",
  "symbols.ORTH.replace",
  "symbols.ORTH.title",
  "symbols.ORTH.upper",
  "symbols.PART",
  "symbols.POS",
  "symbols.PRON",
  "symbols.PRON_LEMMA",
  "symbols.PROPN",
  "symbols.PUNCT",
  "symbols.SCONJ",
  "symbols.SPACE",
  "symbols.SYM",
  "symbols.TAG",
  "symbols.VERB",
  "symbols.VerbForm_inf",
  "symbols.VerbForm_none",
  "symbols.X",
  "syntax.nonproj.contains_cycle",
  "syntax.nonproj.is_nonproj_tree",
  "syntax_iterators.SYNTAX_ITERATORS",
  "sys",
  "sys.argv",
  "sys.argv.pop",
  "sys.executable",
  "sys.exit",
  "sys.maxsize",
  "sys.maxunicode",
  "sys.modules.__file__",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stdin",
  "sys.stdout.fileno",
  "sys.version_info",
  "tag_map.TAG_MAP",
  "tag_map_general.TAG_MAP",
  "tarfile",
  "tarfile.is_tarfile",
  "tarfile.open",
  "tempfile",
  "tempfile.TemporaryFile",
  "tempfile.mkdtemp",
  "templates.TPL_DEP_ARCS.format",
  "templates.TPL_DEP_SVG.format",
  "templates.TPL_DEP_WORDS.format",
  "templates.TPL_ENTS.format",
  "templates.TPL_FIGURE.format",
  "templates.TPL_PAGE.format",
  "templates.TPL_TITLE.format",
  "thinc.api.add",
  "thinc.api.chain",
  "thinc.api.clone",
  "thinc.api.concatenate",
  "thinc.api.flatten_add_lengths",
  "thinc.api.layerize",
  "thinc.api.noop",
  "thinc.api.uniqued",
  "thinc.api.with_flatten",
  "thinc.api.with_getitem",
  "thinc.api.with_square_sequences",
  "thinc.api.wrap",
  "thinc.describe",
  "thinc.describe.Biases",
  "thinc.describe.Dimension",
  "thinc.describe.Gradient",
  "thinc.describe.Synapses",
  "thinc.describe.attributes",
  "thinc.describe.on_data",
  "thinc.extra.datasets",
  "thinc.extra.load_nlp",
  "thinc.extra.wrappers.PyTorchWrapperRNN",
  "thinc.i2v.HashEmbed",
  "thinc.i2v.StaticVectors",
  "thinc.linear.linear.LinearModel",
  "thinc.misc.FeatureExtracter",
  "thinc.misc.LayerNorm",
  "thinc.misc.Residual",
  "thinc.neural.Model",
  "thinc.neural.Model.ops",
  "thinc.neural.Model.ops.asarray",
  "thinc.neural._classes.affine.Affine",
  "thinc.neural._classes.affine._set_dimensions_if_needed",
  "thinc.neural._classes.difference.CauchySimilarity",
  "thinc.neural._classes.difference.Siamese",
  "thinc.neural._classes.model.Model",
  "thinc.neural._classes.model.Model.Ops",
  "thinc.neural._classes.model.Model.ops",
  "thinc.neural._classes.model.Model.use_device",
  "thinc.neural.ops.CupyOps",
  "thinc.neural.ops.NumpyOps",
  "thinc.neural.optimizers.Adam",
  "thinc.neural.optimizers.Optimizer",
  "thinc.neural.util.copy_array",
  "thinc.neural.util.get_array_module",
  "thinc.neural.util.prefer_gpu",
  "thinc.neural.util.require_gpu",
  "thinc.t2t.ExtractWindow",
  "thinc.t2t.ParametricAttention",
  "thinc.t2v.Pooling",
  "thinc.t2v.max_pool",
  "thinc.t2v.mean_pool",
  "thinc.t2v.sum_pool",
  "thinc.v2v.Affine",
  "thinc.v2v.Maxout",
  "thinc.v2v.Model",
  "thinc.v2v.Model.define_operators",
  "thinc.v2v.Model.ops",
  "thinc.v2v.ReLu",
  "thinc.v2v.Softmax",
  "time",
  "time.time",
  "timeit.default_timer",
  "to_str",
  "tokenizer",
  "tokenizer.Tokenizer",
  "tokenizer.add_special_case",
  "tokenizer.to_bytes",
  "tokenizer.to_disk",
  "tokenizer_exceptions.BASE_EXCEPTIONS",
  "tokenizer_exceptions.TOKENIZER_EXCEPTIONS",
  "tokenizer_exceptions.TOKEN_MATCH",
  "tokenizer_exceptions.URL_PATTERN",
  "tokens.Doc",
  "tokens.Span",
  "tokens.doc.Doc",
  "torch",
  "torch.nn",
  "tqdm",
  "tqdm.tqdm",
  "train._load_pretrained_tok2vec",
  "type_convert",
  "ud_train.write_conllu",
  "unicodedata",
  "unicodedata.category",
  "unittest",
  "unittest.TestCase",
  "util.DummyTokenizer",
  "util.ENTRY_POINTS.lookups",
  "util.SimpleFrozenDict",
  "util.add_lookups",
  "util.add_vecs_to_vocab",
  "util.apply_transition_sequence",
  "util.assert_packed_msg_equal",
  "util.compile_infix_regex",
  "util.compile_prefix_regex",
  "util.compile_suffix_regex",
  "util.compounding",
  "util.decaying",
  "util.ensure_path",
  "util.env_opt",
  "util.escape_html",
  "util.fix_random_seed",
  "util.from_bytes",
  "util.from_disk",
  "util.get_cosine",
  "util.get_data_path",
  "util.get_doc",
  "util.get_entry_point",
  "util.get_lang_class",
  "util.get_module_path",
  "util.get_package_path",
  "util.get_serialization_exclude",
  "util.is_in_jupyter",
  "util.is_package",
  "util.load_language_data",
  "util.load_model",
  "util.load_model_from_path",
  "util.make_tempdir",
  "util.minibatch",
  "util.minibatch_by_words",
  "util.minify_html",
  "util.set_env_log",
  "util.to_bytes",
  "util.to_disk",
  "util.update_exc",
  "util.use_gpu",
  "uuid.uuid4",
  "vectors.Vectors",
  "vocab.Vocab",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn_explicit",
  "wasabi.MESSAGES",
  "wasabi.MESSAGES.FAIL",
  "wasabi.MESSAGES.GOOD",
  "wasabi.MESSAGES.WARN",
  "wasabi.Printer",
  "wasabi.get_raw_input",
  "weakref",
  "weakref.WeakSet",
  "writer",
  "wsgiref.simple_server",
  "wsgiref.simple_server.make_server",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.parse",
  "zipfile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "Alignment": [],
  "AlignmentWord": [],
  "Cython": [],
  "ErrorsWithCodes": [],
  "IPython": [],
  "LangClass": [],
  "MeCab": [],
  "Parser": [],
  "Score": [],
  "Table": [],
  "UDRepresentation": [],
  "UDSpan": [],
  "UDWord": [],
  "__future__": [],
  "_fix_pretrained_vectors_name": [],
  "_fix_token": [],
  "_get_metrics": [],
  "_ml": [],
  "_offset": [],
  "_pipe": [],
  "_save_model": [],
  "_to_cpu": [],
  "_tokenizer_exceptions_list": [],
  "_warn": [],
  "about": [],
  "align_words": [],
  "alignment_score": [],
  "argparse": [],
  "ast": [],
  "attrs": [],
  "backprop": [],
  "beyond_end": [],
  "bp_flat_y": [],
  "bp_model": [],
  "bz2": [],
  "cPickle": [],
  "cProfile": [],
  "char_classes": [],
  "cli": [],
  "clip": [],
  "cls": [],
  "collections": [],
  "compat": [],
  "compute_lcs": [],
  "concatenate_lists": [],
  "conll17_ud_eval": [],
  "conll_ner2json": [],
  "contextlib": [],
  "control": [],
  "converter": [],
  "converters": [],
  "copy": [],
  "copy_reg": [],
  "copyreg": [],
  "csv": [],
  "ctypes": [],
  "cupy": [],
  "custom_tokenizer": [],
  "da": [],
  "datetime": [],
  "deprojectivize": [],
  "displacy": [],
  "distutils": [],
  "dummy_pipe": [],
  "en_search_prefixes": [],
  "en_tokenizer": [],
  "errors": [],
  "exclude_dir": [],
  "extend_end": [],
  "factory": [],
  "find_multiword_span": [],
  "fr_tokenizer_w_infix": [],
  "ftfy": [],
  "func": [],
  "functools": [],
  "gc": [],
  "gensim": [],
  "get_doc_settings": [],
  "get_gold_parse": [],
  "get_ipython": [],
  "get_model_meta": [],
  "get_new_parser": [],
  "getopt": [],
  "getter": [],
  "gold": [],
  "gzip": [],
  "hashlib": [],
  "imp": [],
  "importlib": [],
  "inspect": [],
  "io": [],
  "is_compat": [],
  "itertools": [],
  "jieba": [],
  "json": [],
  "jsonschema": [],
  "lang": [],
  "lang_class": [],
  "lang_cls": [],
  "language": [],
  "lemmatizer": [],
  "lex_attrs": [],
  "link": [],
  "logging": [],
  "lookups": [],
  "lower": [],
  "matcher": [],
  "math": [],
  "merge_entities": [],
  "merge_noun_chunks": [],
  "merger": [],
  "mock": [],
  "model": [],
  "morph_rules": [],
  "my_tokenizer": [],
  "natto": [],
  "ner": [],
  "ner1": [],
  "new_matcher": [],
  "new_tokenizer": [],
  "nlp": [],
  "nlp1": [],
  "nlp2": [],
  "nlp_1": [],
  "nlp_2": [],
  "norm_exceptions": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "pathlib": [],
  "pickle": [],
  "pipeline": [],
  "pipes": [],
  "pkg_resources": [],
  "plac": [],
  "platform": [],
  "predict": [],
  "preshed": [],
  "proc": [],
  "process_word": [],
  "pstats": [],
  "punctuation": [],
  "pytest": [],
  "pyvi": [],
  "random": [],
  "re": [],
  "reader": [],
  "render": [],
  "renderer": [],
  "requests": [],
  "ruler": [],
  "scorer": [],
  "sentencizer": [],
  "setter": [],
  "shutil": [],
  "socket": [],
  "spacy": [],
  "spans_score": [],
  "srsly": [],
  "stop_words": [],
  "string_generator": [],
  "strings": [],
  "subprocess": [],
  "symbols": [],
  "syntax": [],
  "syntax_iterators": [],
  "sys": [],
  "tag_map": [],
  "tag_map_general": [],
  "tarfile": [],
  "tempfile": [],
  "templates": [],
  "thinc": [],
  "time": [],
  "timeit": [],
  "to_str": [],
  "tokenizer": [],
  "tokenizer_exceptions": [],
  "tokens": [],
  "torch": [],
  "tqdm": [],
  "train": [],
  "type_convert": [],
  "ud_train": [],
  "unicodedata": [],
  "unittest": [],
  "util": [],
  "uuid": [],
  "vectors": [],
  "vocab": [],
  "warnings": [],
  "wasabi": [],
  "weakref": [],
  "writer": [],
  "wsgiref": [],
  "xml": [],
  "zipfile": []
 }
}