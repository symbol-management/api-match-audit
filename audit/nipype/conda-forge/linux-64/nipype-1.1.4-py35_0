{
 "bad": [
  "AddXFormToHeader",
  "Aparc2Aseg",
  "Apas2Aseg",
  "ApplyMask",
  "BrokenRuntime",
  "CALabel",
  "CANormalize",
  "CARegister",
  "CheckTalairachAlignment",
  "ConcatenateLTA",
  "Contrast",
  "Curvature",
  "CurvatureStats",
  "DeprecationSpec1",
  "DeprecationSpec2",
  "DeprecationSpec3",
  "DerivedClass",
  "DerivedInterface",
  "DerivedInterface._get_filecopy_info",
  "DerivedInterface._inputs_help",
  "DerivedInterface.help",
  "DerivedInterface1",
  "DerivedInterface2",
  "EMRegister",
  "EditWMwithAseg",
  "EngineTestException",
  "EulerNumber",
  "Exceptions",
  "ExtractMainComponent",
  "FixTopology",
  "FuseSegmentations",
  "Jacobian",
  "MNIBiasCorrection",
  "MRIConvert",
  "MRIFill",
  "MRIPretess",
  "MRISPreprocReconAll",
  "MRITessellate",
  "MRIsCALabel",
  "MRIsCalc",
  "MRIsInflate",
  "MakeSurfaces",
  "MockSSHDataGrabber",
  "MyInterface",
  "MySQLdb.connect",
  "NoRuntime",
  "Normalize",
  "OOPBadShell",
  "OOPCLI",
  "OOPShell",
  "Paint",
  "ParcellationStats",
  "RaiseError",
  "Register",
  "RelabelHypointensities",
  "RemoveIntersection",
  "RemoveNeck",
  "RuntimeException",
  "ScriptError",
  "SegStatsReconAll",
  "SegmentCC",
  "SegmentWM",
  "SmoothTessellation",
  "Sphere",
  "SurfaceSmooth",
  "TalairachAVI",
  "TalairachQC",
  "TestClass",
  "TestConstrained",
  "TestCycle",
  "TestKV",
  "TestName",
  "VolumeMask",
  "WatershedSkullStrip",
  "Xvfb",
  "__name__.split",
  "_compute_tSTD",
  "_gen_model_options",
  "_process",
  "_run_and_test",
  "_run_dot",
  "_spm_Gpdf",
  "_use_gb_ram",
  "algorithms.confounds.ACompCor",
  "algorithms.confounds.TSNR",
  "algorithms.misc.AddCSVColumn",
  "algorithms.misc.CreateNifti",
  "algorithms.misc.Matlab2CSV",
  "algorithms.misc.MergeCSVFiles",
  "algorithms.misc.MergeROIs",
  "algorithms.misc.SplitROIs",
  "algorithms.rapidart.ArtifactDetect",
  "analysis.CoherenceAnalyzer.input_spec",
  "analysis.CoherenceAnalyzer.output_spec",
  "anisotropic_power.APMQball.input_spec",
  "anisotropic_power.APMQball.output_spec",
  "arithmetic.AddScalarVolumes.input_spec",
  "arithmetic.AddScalarVolumes.output_spec",
  "arithmetic.CastScalarVolume.input_spec",
  "arithmetic.CastScalarVolume.output_spec",
  "arithmetic.MaskScalarVolume.input_spec",
  "arithmetic.MaskScalarVolume.output_spec",
  "arithmetic.MultiplyScalarVolumes.input_spec",
  "arithmetic.MultiplyScalarVolumes.output_spec",
  "arithmetic.SubtractScalarVolumes.input_spec",
  "arithmetic.SubtractScalarVolumes.output_spec",
  "aroma.ICA_AROMA.input_spec",
  "aroma.ICA_AROMA.output_spec",
  "asl.FitAsl.input_spec",
  "asl.FitAsl.output_spec",
  "assert_dwi",
  "atexit",
  "atoi",
  "base.AFNICommand.input_spec",
  "base.AFNICommandBase.input_spec",
  "base.AFNIPythonCommand.input_spec",
  "base.ANTSCommand.input_spec",
  "base.AssertEqual.input_spec",
  "base.BaseInterface",
  "base.BaseInterface._get_filecopy_info",
  "base.BaseInterface.help",
  "base.BaseInterface.input_spec",
  "base.BaseTraitedSpec",
  "base.Bunch",
  "base.CFFBaseInterface.input_spec",
  "base.CommandLine",
  "base.CommandLine.input_spec",
  "base.CommandLine.set_default_terminal_output",
  "base.CommandLineDtitk.input_spec",
  "base.CommandLineInputSpec",
  "base.DipyBaseInterface.input_spec",
  "base.DipyDiffusionInterface.input_spec",
  "base.FSCommand.input_spec",
  "base.FSCommandOpenMP.input_spec",
  "base.FSLCommand.input_spec",
  "base.FSScriptCommand.input_spec",
  "base.FSSurfaceCommand._associated_file",
  "base.FSSurfaceCommand.input_spec",
  "base.File",
  "base.IdentityInterface.input_spec",
  "base.IdentityInterface.output_spec",
  "base.ImageFile",
  "base.Info.ftypes.keys",
  "base.Info.ftypes.values",
  "base.Info.looseversion",
  "base.Info.output_type_to_ext",
  "base.Info.standard_image",
  "base.Info.version",
  "base.Interface",
  "base.Interface._inputs_help",
  "base.Interface._outputs",
  "base.Interface._outputs_help",
  "base.Interface.help",
  "base.Interface.input_spec",
  "base.Interface.output_spec",
  "base.MRTrix3Base.input_spec",
  "base.Merge.input_spec",
  "base.Merge.output_spec",
  "base.NiftyFitCommand.input_spec",
  "base.NiftyRegCommand.input_spec",
  "base.NiftySegCommand.input_spec",
  "base.NipyBaseInterface.input_spec",
  "base.NipypeInterfaceError",
  "base.NitimeBaseInterface.input_spec",
  "base.Rename.input_spec",
  "base.Rename.output_spec",
  "base.SEMLikeCommandLine.input_spec",
  "base.SPMCommand.input_spec",
  "base.Select.input_spec",
  "base.Select.output_spec",
  "base.SlicerCommandLine.input_spec",
  "base.Split.input_spec",
  "base.Split.output_spec",
  "base.Str",
  "base.TraitError",
  "base.TraitedSpec",
  "base.Undefined",
  "base.WBCommand.input_spec",
  "base.WatershedBEM.input_spec",
  "base.WatershedBEM.output_spec",
  "base.logger.debug",
  "base.logger.info",
  "base.traits.Any",
  "base.traits.Array",
  "base.traits.Bool",
  "base.traits.Callable",
  "base.traits.Dict",
  "base.traits.Directory",
  "base.traits.Either",
  "base.traits.Enum",
  "base.traits.File",
  "base.traits.Float",
  "base.traits.Int",
  "base.traits.List",
  "base.traits.ListInt",
  "base.traits.Password",
  "base.traits.Range",
  "base.traits.Str",
  "base.traits.String",
  "base.traits.TraitError",
  "base.traits.Tuple",
  "base.traits.Undefined",
  "bids",
  "bids.__file__",
  "bids.grabbids",
  "bids.grabbids.BIDSLayout",
  "bids.layout",
  "bids.layout.get",
  "brains.BRAINSAlignMSP.input_spec",
  "brains.BRAINSAlignMSP.output_spec",
  "brains.BRAINSClipInferior.input_spec",
  "brains.BRAINSClipInferior.output_spec",
  "brains.BRAINSConstellationModeler.input_spec",
  "brains.BRAINSConstellationModeler.output_spec",
  "brains.BRAINSEyeDetector.input_spec",
  "brains.BRAINSEyeDetector.output_spec",
  "brains.BRAINSInitializedControlPoints.input_spec",
  "brains.BRAINSInitializedControlPoints.output_spec",
  "brains.BRAINSLandmarkInitializer.input_spec",
  "brains.BRAINSLandmarkInitializer.output_spec",
  "brains.BRAINSLinearModelerEPCA.input_spec",
  "brains.BRAINSLinearModelerEPCA.output_spec",
  "brains.BRAINSLmkTransform.input_spec",
  "brains.BRAINSLmkTransform.output_spec",
  "brains.BRAINSMush.input_spec",
  "brains.BRAINSMush.output_spec",
  "brains.BRAINSSnapShotWriter.input_spec",
  "brains.BRAINSSnapShotWriter.output_spec",
  "brains.BRAINSTransformConvert.input_spec",
  "brains.BRAINSTransformConvert.output_spec",
  "brains.BRAINSTrimForegroundInDirection.input_spec",
  "brains.BRAINSTrimForegroundInDirection.output_spec",
  "brains.CleanUpOverlapLabels.input_spec",
  "brains.CleanUpOverlapLabels.output_spec",
  "brains.FindCenterOfBrain.input_spec",
  "brains.FindCenterOfBrain.output_spec",
  "brains.GenerateLabelMapFromProbabilityMap.input_spec",
  "brains.GenerateLabelMapFromProbabilityMap.output_spec",
  "brains.ImageRegionPlotter.input_spec",
  "brains.ImageRegionPlotter.output_spec",
  "brains.JointHistogram.input_spec",
  "brains.JointHistogram.output_spec",
  "brains.ShuffleVectorsModule.input_spec",
  "brains.ShuffleVectorsModule.output_spec",
  "brains.fcsv_to_hdf5.input_spec",
  "brains.fcsv_to_hdf5.output_spec",
  "brains.insertMidACPCpoint.input_spec",
  "brains.insertMidACPCpoint.output_spec",
  "brains.landmarksConstellationAligner.input_spec",
  "brains.landmarksConstellationAligner.output_spec",
  "brains.landmarksConstellationWeights.input_spec",
  "brains.landmarksConstellationWeights.output_spec",
  "brainsfit.BRAINSFit.input_spec",
  "brainsfit.BRAINSFit.output_spec",
  "brainsresample.BRAINSResample.input_spec",
  "brainsresample.BRAINSResample.output_spec",
  "brainsresize.BRAINSResize.input_spec",
  "brainsresize.BRAINSResize.output_spec",
  "brainsuite.BDP.input_spec",
  "brainsuite.Bfc.input_spec",
  "brainsuite.Bfc.output_spec",
  "brainsuite.Bse.input_spec",
  "brainsuite.Bse.output_spec",
  "brainsuite.Cerebro.input_spec",
  "brainsuite.Cerebro.output_spec",
  "brainsuite.Cortex.input_spec",
  "brainsuite.Cortex.output_spec",
  "brainsuite.Dewisp.input_spec",
  "brainsuite.Dewisp.output_spec",
  "brainsuite.Dfs.input_spec",
  "brainsuite.Dfs.output_spec",
  "brainsuite.Hemisplit.input_spec",
  "brainsuite.Hemisplit.output_spec",
  "brainsuite.Pialmesh.input_spec",
  "brainsuite.Pialmesh.output_spec",
  "brainsuite.Pvc.input_spec",
  "brainsuite.Pvc.output_spec",
  "brainsuite.SVReg.input_spec",
  "brainsuite.Scrubmask.input_spec",
  "brainsuite.Scrubmask.output_spec",
  "brainsuite.Skullfinder.input_spec",
  "brainsuite.Skullfinder.output_spec",
  "brainsuite.Tca.input_spec",
  "brainsuite.Tca.output_spec",
  "brainsuite.ThicknessPVC.input_spec",
  "bru2nii.Bru2.input_spec",
  "bru2nii.Bru2.output_spec",
  "builtins.object.items",
  "c3.C3d.input_spec",
  "c3.C3d.output_spec",
  "c3.C3dAffineTool.input_spec",
  "c3.C3dAffineTool.output_spec",
  "cStringIO.StringIO",
  "calib.SFLUTGen.input_spec",
  "calib.SFLUTGen.output_spec",
  "calib.SFPICOCalibData.input_spec",
  "calib.SFPICOCalibData.output_spec",
  "cfflib.CData",
  "cfflib.CNetwork",
  "cfflib.CScript.create_from_file",
  "cfflib.CSurface.create_from_gifti",
  "cfflib.CTrack",
  "cfflib.CVolume.create_from_nifti",
  "cfflib.connectome",
  "cfflib.load",
  "cfflib.save_to_cff",
  "changequantification.IntensityDifferenceMetric.input_spec",
  "changequantification.IntensityDifferenceMetric.output_spec",
  "check_close",
  "checkarg",
  "checkerboardfilter.CheckerBoardFilter.input_spec",
  "checkerboardfilter.CheckerBoardFilter.output_spec",
  "classify.BRAINSPosteriorToContinuousClass.input_spec",
  "classify.BRAINSPosteriorToContinuousClass.output_spec",
  "cmp",
  "cmp.configuration.PipelineConfiguration",
  "cmp.util.runCmd",
  "cmtk.CreateMatrix.input_spec",
  "cmtk.CreateMatrix.output_spec",
  "cmtk.CreateNodes.input_spec",
  "cmtk.CreateNodes.output_spec",
  "cmtk.ROIGen.input_spec",
  "cmtk.ROIGen.output_spec",
  "collections.Iterator",
  "collections.Sequence",
  "collections.defaultdict",
  "commandlineonly.fiberstats.input_spec",
  "commandlineonly.fiberstats.output_spec",
  "config._sections",
  "config.disable_resource_monitor",
  "config.enable_resource_monitor",
  "config.get",
  "config.get_display",
  "config.getboolean",
  "config.lookup",
  "config.parse",
  "config.resource_monitor",
  "config.set",
  "config.set_default_config",
  "config.stop_display",
  "confounds.ACompCor.input_spec",
  "confounds.ACompCor.output_spec",
  "confounds.ComputeDVARS.input_spec",
  "confounds.ComputeDVARS.output_spec",
  "confounds.FramewiseDisplacement.input_spec",
  "confounds.FramewiseDisplacement.output_spec",
  "confounds.NonSteadyStateDetector.input_spec",
  "confounds.NonSteadyStateDetector.output_spec",
  "confounds.TCompCor.input_spec",
  "confounds.TCompCor.output_spec",
  "confounds.TSNR",
  "connectivity.BuildConnectome.input_spec",
  "connectivity.BuildConnectome.output_spec",
  "connectivity.Conmat.input_spec",
  "connectivity.Conmat.output_spec",
  "connectivity.LabelConfig.input_spec",
  "connectivity.LabelConfig.output_spec",
  "connectivity.LabelConvert.input_spec",
  "connectivity.LabelConvert.output_spec",
  "convert.AnalyzeHeader.input_spec",
  "convert.AnalyzeHeader.output_spec",
  "convert.CFFConverter.input_spec",
  "convert.CFFConverter.output_spec",
  "convert.Camino2Trackvis.input_spec",
  "convert.Camino2Trackvis.output_spec",
  "convert.DT2NIfTI.input_spec",
  "convert.DT2NIfTI.output_spec",
  "convert.FSL2Scheme.input_spec",
  "convert.FSL2Scheme.output_spec",
  "convert.Image2Voxel.input_spec",
  "convert.Image2Voxel.output_spec",
  "convert.MRTrix2TrackVis.input_spec",
  "convert.MRTrix2TrackVis.output_spec",
  "convert.MergeCNetworks.input_spec",
  "convert.MergeCNetworks.output_spec",
  "convert.NIfTIDT2Camino.input_spec",
  "convert.NIfTIDT2Camino.output_spec",
  "convert.ProcStreamlines.input_spec",
  "convert.ProcStreamlines.output_spec",
  "convert.Shredder.input_spec",
  "convert.Shredder.output_spec",
  "convert.Trackvis2Camino.input_spec",
  "convert.Trackvis2Camino.output_spec",
  "convert.TractShredder.input_spec",
  "convert.TractShredder.output_spec",
  "convert.VtkStreamlines.input_spec",
  "convert.VtkStreamlines.output_spec",
  "converters.BSplineToDeformationField.input_spec",
  "converters.BSplineToDeformationField.output_spec",
  "converters.DWICompare.input_spec",
  "converters.DWICompare.output_spec",
  "converters.DWISimpleCompare.input_spec",
  "converters.DWISimpleCompare.output_spec",
  "converters.DicomToNrrdConverter.input_spec",
  "converters.DicomToNrrdConverter.output_spec",
  "converters.OrientScalarVolume.input_spec",
  "converters.OrientScalarVolume.output_spec",
  "core.BaseInterface.input_spec",
  "core.CommandLine.input_spec",
  "core.LibraryBaseInterface.input_spec",
  "core.MpiCommandLine.input_spec",
  "core.SEMLikeCommandLine.input_spec",
  "core.SimpleInterface.input_spec",
  "core.StdOutCommandLine.input_spec",
  "crash_files.display_crash_file",
  "crash_files.iter_tracebacks",
  "create_susan_smooth",
  "csv.CSVReader.input_spec",
  "csv.CSVReader.output_spec",
  "cviewer.libs.pyconto.groupstatistics.nbs",
  "cviewer.libs.pyconto.groupstatistics.nbs.compute_nbs",
  "datalad.api.get",
  "datalad.api.install",
  "dcm2nii.Dcm2nii.input_spec",
  "dcm2nii.Dcm2nii.output_spec",
  "dcm2nii.Dcm2niix.input_spec",
  "dcm2nii.Dcm2niix.output_spec",
  "dcmstack.CopyMeta.input_spec",
  "dcmstack.CopyMeta.output_spec",
  "dcmstack.DcmStack.input_spec",
  "dcmstack.DcmStack.output_spec",
  "dcmstack.GroupAndStack.input_spec",
  "dcmstack.GroupAndStack.output_spec",
  "dcmstack.LookupMeta.input_spec",
  "dcmstack.LookupMeta.output_spec",
  "dcmstack.MergeNifti.input_spec",
  "dcmstack.MergeNifti.output_spec",
  "dcmstack.NiftiGeneratorBase.input_spec",
  "dcmstack.SplitNifti.input_spec",
  "dcmstack.SplitNifti.output_spec",
  "decorators.skipif",
  "denoising.CurvatureAnisotropicDiffusion.input_spec",
  "denoising.CurvatureAnisotropicDiffusion.output_spec",
  "denoising.DWIUnbiasedNonLocalMeansFilter.input_spec",
  "denoising.DWIUnbiasedNonLocalMeansFilter.output_spec",
  "denoising.GaussianBlurImageFilter.input_spec",
  "denoising.GaussianBlurImageFilter.output_spec",
  "denoising.GradientAnisotropicDiffusion.input_spec",
  "denoising.GradientAnisotropicDiffusion.output_spec",
  "denoising.MedianImageFilter.input_spec",
  "denoising.MedianImageFilter.output_spec",
  "denoising.UnbiasedNonLocalMeans.input_spec",
  "denoising.UnbiasedNonLocalMeans.output_spec",
  "developer.JistBrainMgdmSegmentation.input_spec",
  "developer.JistBrainMgdmSegmentation.output_spec",
  "developer.JistBrainMp2rageDuraEstimation.input_spec",
  "developer.JistBrainMp2rageDuraEstimation.output_spec",
  "developer.JistBrainMp2rageSkullStripping.input_spec",
  "developer.JistBrainMp2rageSkullStripping.output_spec",
  "developer.JistBrainPartialVolumeFilter.input_spec",
  "developer.JistBrainPartialVolumeFilter.output_spec",
  "developer.JistCortexSurfaceMeshInflation.input_spec",
  "developer.JistCortexSurfaceMeshInflation.output_spec",
  "developer.JistIntensityMp2rageMasking.input_spec",
  "developer.JistIntensityMp2rageMasking.output_spec",
  "developer.JistLaminarProfileCalculator.input_spec",
  "developer.JistLaminarProfileCalculator.output_spec",
  "developer.JistLaminarProfileGeometry.input_spec",
  "developer.JistLaminarProfileGeometry.output_spec",
  "developer.JistLaminarProfileSampling.input_spec",
  "developer.JistLaminarProfileSampling.output_spec",
  "developer.JistLaminarROIAveraging.input_spec",
  "developer.JistLaminarROIAveraging.output_spec",
  "developer.JistLaminarVolumetricLayering.input_spec",
  "developer.JistLaminarVolumetricLayering.output_spec",
  "developer.MedicAlgorithmImageCalculator.input_spec",
  "developer.MedicAlgorithmImageCalculator.output_spec",
  "developer.MedicAlgorithmLesionToads.input_spec",
  "developer.MedicAlgorithmLesionToads.output_spec",
  "developer.MedicAlgorithmMipavReorient.input_spec",
  "developer.MedicAlgorithmMipavReorient.output_spec",
  "developer.MedicAlgorithmN3.input_spec",
  "developer.MedicAlgorithmN3.output_spec",
  "developer.MedicAlgorithmSPECTRE2010.input_spec",
  "developer.MedicAlgorithmSPECTRE2010.output_spec",
  "developer.MedicAlgorithmThresholdToBinaryMask.input_spec",
  "developer.MedicAlgorithmThresholdToBinaryMask.output_spec",
  "developer.RandomVol.input_spec",
  "developer.RandomVol.output_spec",
  "dicom.read_file",
  "dict.fromkeys",
  "diffusion.DTIexport.input_spec",
  "diffusion.DTIexport.output_spec",
  "diffusion.DTIimport.input_spec",
  "diffusion.DTIimport.output_spec",
  "diffusion.DWIConvert.input_spec",
  "diffusion.DWIConvert.output_spec",
  "diffusion.DWIJointRicianLMMSEFilter.input_spec",
  "diffusion.DWIJointRicianLMMSEFilter.output_spec",
  "diffusion.DWIRicianLMMSEFilter.input_spec",
  "diffusion.DWIRicianLMMSEFilter.output_spec",
  "diffusion.DWIToDTIEstimation.input_spec",
  "diffusion.DWIToDTIEstimation.output_spec",
  "diffusion.DiffusionTensorScalarMeasurements.input_spec",
  "diffusion.DiffusionTensorScalarMeasurements.output_spec",
  "diffusion.DiffusionWeightedVolumeMasking.input_spec",
  "diffusion.DiffusionWeightedVolumeMasking.output_spec",
  "diffusion.ResampleDTIVolume.input_spec",
  "diffusion.ResampleDTIVolume.output_spec",
  "diffusion.TractographyLabelMapSeeding.input_spec",
  "diffusion.TractographyLabelMapSeeding.output_spec",
  "diffusion.dtiaverage.input_spec",
  "diffusion.dtiaverage.output_spec",
  "diffusion.dtiestim.input_spec",
  "diffusion.dtiestim.output_spec",
  "diffusion.dtiprocess.input_spec",
  "diffusion.dtiprocess.output_spec",
  "dipy.reconst.peaks.peaks_from_model",
  "dipy.tracking.eudx.EuDX",
  "dipy.tracking.utils.affine_from_fsl_mat_file",
  "dipy.tracking.utils.move_streamlines",
  "dti.BEDPOSTX5.input_spec",
  "dti.BEDPOSTX5.output_spec",
  "dti.ComputeEigensystem.input_spec",
  "dti.ComputeEigensystem.output_spec",
  "dti.ComputeFractionalAnisotropy.input_spec",
  "dti.ComputeFractionalAnisotropy.output_spec",
  "dti.ComputeMeanDiffusivity.input_spec",
  "dti.ComputeMeanDiffusivity.output_spec",
  "dti.ComputeTensorTrace.input_spec",
  "dti.ComputeTensorTrace.output_spec",
  "dti.DTIFit.input_spec",
  "dti.DTIFit.output_spec",
  "dti.DTIRecon.input_spec",
  "dti.DTIRecon.output_spec",
  "dti.DTITracker.input_spec",
  "dti.DTITracker.output_spec",
  "dti.DTLUTGen.input_spec",
  "dti.DTLUTGen.output_spec",
  "dti.DTMetric.input_spec",
  "dti.DTMetric.output_spec",
  "dti.DistanceMap.input_spec",
  "dti.DistanceMap.output_spec",
  "dti.FSLXCommand.input_spec",
  "dti.FSLXCommand.output_spec",
  "dti.FindTheBiggest.input_spec",
  "dti.FindTheBiggest.output_spec",
  "dti.MakeDyadicVectors.input_spec",
  "dti.MakeDyadicVectors.output_spec",
  "dti.ModelFit.input_spec",
  "dti.ModelFit.output_spec",
  "dti.PicoPDFs.input_spec",
  "dti.PicoPDFs.output_spec",
  "dti.ProbTrackX.input_spec",
  "dti.ProbTrackX.output_spec",
  "dti.ProbTrackX2.input_spec",
  "dti.ProbTrackX2.output_spec",
  "dti.ProjThresh.input_spec",
  "dti.ProjThresh.output_spec",
  "dti.Track.input_spec",
  "dti.Track.output_spec",
  "dti.TrackBallStick.input_spec",
  "dti.TrackBallStick.output_spec",
  "dti.TrackBayesDirac.input_spec",
  "dti.TrackBayesDirac.output_spec",
  "dti.TrackBedpostxDeter.input_spec",
  "dti.TrackBedpostxDeter.output_spec",
  "dti.TrackBedpostxProba.input_spec",
  "dti.TrackBedpostxProba.output_spec",
  "dti.TrackBootstrap.input_spec",
  "dti.TrackBootstrap.output_spec",
  "dti.TrackDT.input_spec",
  "dti.TrackDT.output_spec",
  "dti.TrackPICo.input_spec",
  "dti.TrackPICo.output_spec",
  "dti.TractSkeleton.input_spec",
  "dti.TractSkeleton.output_spec",
  "dti.VecReg.input_spec",
  "dti.VecReg.output_spec",
  "dti.XFibres5.input_spec",
  "dti.XFibres5.output_spec",
  "duecredit.BibTeX",
  "duecredit.Doi",
  "duecredit.Url",
  "duecredit.due",
  "dwi.DwiTool.input_spec",
  "dwi.DwiTool.output_spec",
  "dwi.FitDwi.input_spec",
  "dwi.FitDwi.output_spec",
  "dynamic_slicer.SlicerCommandLine.input_spec",
  "dynamic_slicer.SlicerCommandLine.output_spec",
  "ecc_pipeline",
  "em.EM.input_spec",
  "em.EM.output_spec",
  "engine.JoinNode",
  "engine.MapNode",
  "engine.Node",
  "engine.Workflow",
  "engine.generate_expanded_graph",
  "engine.utils.nx.to_scipy_sparse_matrix",
  "engine.utils.nx.topological_sort",
  "entry",
  "epi.ApplyTOPUP.input_spec",
  "epi.ApplyTOPUP.output_spec",
  "epi.EPIDeWarp.input_spec",
  "epi.EPIDeWarp.output_spec",
  "epi.Eddy.input_spec",
  "epi.Eddy.output_spec",
  "epi.EddyCorrect.input_spec",
  "epi.EddyCorrect.output_spec",
  "epi.EpiReg.input_spec",
  "epi.EpiReg.output_spec",
  "epi.PrepareFieldmap.input_spec",
  "epi.PrepareFieldmap.output_spec",
  "epi.TOPUP.input_spec",
  "epi.TOPUP.output_spec",
  "errno",
  "external.due.due.cite",
  "external.portalocker.LOCK_EX",
  "external.portalocker.lock",
  "extractskeleton.ExtractSkeleton.input_spec",
  "extractskeleton.ExtractSkeleton.output_spec",
  "f",
  "f_recreated",
  "faulthandler",
  "featurecreator.GenerateCsfClippedFromClassifiedImage.input_spec",
  "featurecreator.GenerateCsfClippedFromClassifiedImage.output_spec",
  "featuredetection.CannyEdge.input_spec",
  "featuredetection.CannyEdge.output_spec",
  "featuredetection.CannySegmentationLevelSetImageFilter.input_spec",
  "featuredetection.CannySegmentationLevelSetImageFilter.output_spec",
  "featuredetection.DilateImage.input_spec",
  "featuredetection.DilateImage.output_spec",
  "featuredetection.DilateMask.input_spec",
  "featuredetection.DilateMask.output_spec",
  "featuredetection.DistanceMaps.input_spec",
  "featuredetection.DistanceMaps.output_spec",
  "featuredetection.DumpBinaryTrainingVectors.input_spec",
  "featuredetection.DumpBinaryTrainingVectors.output_spec",
  "featuredetection.ErodeImage.input_spec",
  "featuredetection.ErodeImage.output_spec",
  "featuredetection.FlippedDifference.input_spec",
  "featuredetection.FlippedDifference.output_spec",
  "featuredetection.GenerateBrainClippedImage.input_spec",
  "featuredetection.GenerateBrainClippedImage.output_spec",
  "featuredetection.GenerateSummedGradientImage.input_spec",
  "featuredetection.GenerateSummedGradientImage.output_spec",
  "featuredetection.GenerateTestImage.input_spec",
  "featuredetection.GenerateTestImage.output_spec",
  "featuredetection.GradientAnisotropicDiffusionImageFilter.input_spec",
  "featuredetection.GradientAnisotropicDiffusionImageFilter.output_spec",
  "featuredetection.HammerAttributeCreator.input_spec",
  "featuredetection.HammerAttributeCreator.output_spec",
  "featuredetection.NeighborhoodMean.input_spec",
  "featuredetection.NeighborhoodMean.output_spec",
  "featuredetection.NeighborhoodMedian.input_spec",
  "featuredetection.NeighborhoodMedian.output_spec",
  "featuredetection.STAPLEAnalysis.input_spec",
  "featuredetection.STAPLEAnalysis.output_spec",
  "featuredetection.TextureFromNoiseImageFilter.input_spec",
  "featuredetection.TextureFromNoiseImageFilter.output_spec",
  "featuredetection.TextureMeasureFilter.input_spec",
  "featuredetection.TextureMeasureFilter.output_spec",
  "fiberprocess.fiberprocess.input_spec",
  "fiberprocess.fiberprocess.output_spec",
  "fibertrack.fibertrack.input_spec",
  "fibertrack.fibertrack.output_spec",
  "filemanip.hashlib.sha512",
  "filter.cmd",
  "filter.cmdline",
  "filter.inputs.operation",
  "filter.run",
  "filtering.OtsuThresholdImageFilter.input_spec",
  "filtering.OtsuThresholdImageFilter.output_spec",
  "filtering.ResampleScalarVolume.input_spec",
  "filtering.ResampleScalarVolume.output_spec",
  "fix.AccuracyTester.input_spec",
  "fix.AccuracyTester.output_spec",
  "fix.Classifier.input_spec",
  "fix.Classifier.output_spec",
  "fix.Cleaner.input_spec",
  "fix.Cleaner.output_spec",
  "fix.FeatureExtractor.input_spec",
  "fix.FeatureExtractor.output_spec",
  "fix.Training.input_spec",
  "fix.Training.output_spec",
  "fix.TrainingSetCreator.input_spec",
  "fix.TrainingSetCreator.output_spec",
  "fmt",
  "fname_fmt",
  "freesurfer.Info.subjectsdir",
  "freesurfer.no_freesurfer",
  "fsl.model.load_template",
  "func",
  "function_handle",
  "functools.reduce",
  "fvals",
  "gc",
  "getFileName",
  "getname",
  "getval",
  "gtract.compareTractInclusion.input_spec",
  "gtract.compareTractInclusion.output_spec",
  "gtract.extractNrrdVectorIndex.input_spec",
  "gtract.extractNrrdVectorIndex.output_spec",
  "gtract.gtractAnisotropyMap.input_spec",
  "gtract.gtractAnisotropyMap.output_spec",
  "gtract.gtractAverageBvalues.input_spec",
  "gtract.gtractAverageBvalues.output_spec",
  "gtract.gtractClipAnisotropy.input_spec",
  "gtract.gtractClipAnisotropy.output_spec",
  "gtract.gtractCoRegAnatomy.input_spec",
  "gtract.gtractCoRegAnatomy.output_spec",
  "gtract.gtractConcatDwi.input_spec",
  "gtract.gtractConcatDwi.output_spec",
  "gtract.gtractCopyImageOrientation.input_spec",
  "gtract.gtractCopyImageOrientation.output_spec",
  "gtract.gtractCoregBvalues.input_spec",
  "gtract.gtractCoregBvalues.output_spec",
  "gtract.gtractCostFastMarching.input_spec",
  "gtract.gtractCostFastMarching.output_spec",
  "gtract.gtractCreateGuideFiber.input_spec",
  "gtract.gtractCreateGuideFiber.output_spec",
  "gtract.gtractFastMarchingTracking.input_spec",
  "gtract.gtractFastMarchingTracking.output_spec",
  "gtract.gtractFiberTracking.input_spec",
  "gtract.gtractFiberTracking.output_spec",
  "gtract.gtractImageConformity.input_spec",
  "gtract.gtractImageConformity.output_spec",
  "gtract.gtractInvertBSplineTransform.input_spec",
  "gtract.gtractInvertBSplineTransform.output_spec",
  "gtract.gtractInvertDisplacementField.input_spec",
  "gtract.gtractInvertDisplacementField.output_spec",
  "gtract.gtractInvertRigidTransform.input_spec",
  "gtract.gtractInvertRigidTransform.output_spec",
  "gtract.gtractResampleAnisotropy.input_spec",
  "gtract.gtractResampleAnisotropy.output_spec",
  "gtract.gtractResampleB0.input_spec",
  "gtract.gtractResampleB0.output_spec",
  "gtract.gtractResampleCodeImage.input_spec",
  "gtract.gtractResampleCodeImage.output_spec",
  "gtract.gtractResampleDWIInPlace.input_spec",
  "gtract.gtractResampleDWIInPlace.output_spec",
  "gtract.gtractResampleFibers.input_spec",
  "gtract.gtractResampleFibers.output_spec",
  "gtract.gtractTensor.input_spec",
  "gtract.gtractTensor.output_spec",
  "gtract.gtractTransformToDisplacementField.input_spec",
  "gtract.gtractTransformToDisplacementField.output_spec",
  "hashfn",
  "hashlib.md5",
  "hashlib.sha1",
  "histogrammatching.HistogramMatching.input_spec",
  "histogrammatching.HistogramMatching.output_spec",
  "hmc_pipeline",
  "icc.ICC.input_spec",
  "icc.ICC.output_spec",
  "image.Reorient.input_spec",
  "image.Reorient.output_spec",
  "image.Rescale.input_spec",
  "image.Rescale.output_spec",
  "imagelabelcombine.ImageLabelCombine.input_spec",
  "imagelabelcombine.ImageLabelCombine.output_spec",
  "imerode",
  "info.VERSION",
  "info.VERSION.encode",
  "input.endswith",
  "interfaces.ants.ApplyTransforms",
  "interfaces.ants.N4BiasFieldCorrection",
  "interfaces.ants.Registration",
  "interfaces.base.BaseInterface",
  "interfaces.base.File",
  "interfaces.base.TraitedSpec",
  "interfaces.base.Undefined",
  "interfaces.base._hierarchy",
  "interfaces.base.base_dir",
  "interfaces.base.clone",
  "interfaces.base.config",
  "interfaces.base.fullname",
  "interfaces.base.name",
  "interfaces.base.traits.Any",
  "interfaces.base.traits.Array",
  "interfaces.base.traits.Bool",
  "interfaces.base.traits.Callable",
  "interfaces.base.traits.Dict",
  "interfaces.base.traits.Either",
  "interfaces.base.traits.Enum",
  "interfaces.base.traits.File",
  "interfaces.base.traits.Float",
  "interfaces.base.traits.Instance",
  "interfaces.base.traits.Int",
  "interfaces.base.traits.List",
  "interfaces.base.traits.ListBool",
  "interfaces.base.traits.Range",
  "interfaces.base.traits.Set",
  "interfaces.base.traits.Str",
  "interfaces.base.traits.Trait",
  "interfaces.base.traits.TraitCompound",
  "interfaces.base.traits.TraitError",
  "interfaces.base.traits.Tuple",
  "interfaces.camino.AnalyzeHeader",
  "interfaces.camino.ComputeEigensystem",
  "interfaces.camino.ComputeFractionalAnisotropy",
  "interfaces.camino.ComputeTensorTrace",
  "interfaces.camino.DTIFit",
  "interfaces.camino.DTLUTGen",
  "interfaces.camino.FSL2Scheme",
  "interfaces.camino.Image2Voxel",
  "interfaces.camino.PicoPDFs",
  "interfaces.camino.ProcStreamlines",
  "interfaces.camino.TrackDT",
  "interfaces.camino.TrackPICo",
  "interfaces.camino.VtkStreamlines",
  "interfaces.camino2trackvis.Camino2Trackvis",
  "interfaces.camino2trackvis.Trackvis2Camino",
  "interfaces.camino2trackvis.inputs.min_length",
  "interfaces.camino2trackvis.inputs.voxel_order",
  "interfaces.cmtk.AverageNetworks",
  "interfaces.cmtk.CFFConverter",
  "interfaces.cmtk.CreateMatrix",
  "interfaces.cmtk.CreateNodes",
  "interfaces.cmtk.MergeCNetworks",
  "interfaces.cmtk.NetworkXMetrics",
  "interfaces.cmtk.Parcellate",
  "interfaces.cmtk.ROIGen",
  "interfaces.dipy.Denoise",
  "interfaces.dipy.TrackDensityMap",
  "interfaces.dtitk.Affine",
  "interfaces.dtitk.BinThresh",
  "interfaces.dtitk.ComposeXfm",
  "interfaces.dtitk.Diffeo",
  "interfaces.dtitk.DiffeoSymTensor3DVol",
  "interfaces.dtitk.Rigid",
  "interfaces.dtitk.TVAdjustVoxSp",
  "interfaces.dtitk.TVResample",
  "interfaces.dtitk.TVtool",
  "interfaces.freesurfer.ApplyVolTransform",
  "interfaces.freesurfer.BBRegister",
  "interfaces.freesurfer.Binarize",
  "interfaces.freesurfer.Info.version",
  "interfaces.freesurfer.MRIConvert",
  "interfaces.freesurfer.MRIMarchingCubes",
  "interfaces.freesurfer.MRIsConvert",
  "interfaces.freesurfer.ReconAll",
  "interfaces.freesurfer.SegStats",
  "interfaces.fsl.ApplyMask",
  "interfaces.fsl.ApplyTOPUP",
  "interfaces.fsl.ApplyWarp",
  "interfaces.fsl.ApplyXFM",
  "interfaces.fsl.ApplyXfm",
  "interfaces.fsl.BET",
  "interfaces.fsl.BinaryMaths",
  "interfaces.fsl.ContrastMgr",
  "interfaces.fsl.ConvertWarp",
  "interfaces.fsl.ConvertXFM",
  "interfaces.fsl.DistanceMap",
  "interfaces.fsl.Eddy",
  "interfaces.fsl.ExtractROI",
  "interfaces.fsl.FAST",
  "interfaces.fsl.FEATModel",
  "interfaces.fsl.FILMGLS",
  "interfaces.fsl.FLAMEO",
  "interfaces.fsl.FLIRT",
  "interfaces.fsl.FNIRT",
  "interfaces.fsl.FUGUE",
  "interfaces.fsl.FilterRegressor",
  "interfaces.fsl.ImageMaths",
  "interfaces.fsl.ImageStats",
  "interfaces.fsl.Info.standard_image",
  "interfaces.fsl.Info.version",
  "interfaces.fsl.L2Model",
  "interfaces.fsl.Level1Design",
  "interfaces.fsl.MCFLIRT",
  "interfaces.fsl.MakeDyadicVectors",
  "interfaces.fsl.Merge",
  "interfaces.fsl.MultiImageMaths",
  "interfaces.fsl.Overlay",
  "interfaces.fsl.PRELUDE",
  "interfaces.fsl.PlotMotionParams",
  "interfaces.fsl.PrepareFieldmap",
  "interfaces.fsl.SUSAN",
  "interfaces.fsl.SliceTimer",
  "interfaces.fsl.Slicer",
  "interfaces.fsl.Split",
  "interfaces.fsl.TOPUP",
  "interfaces.fsl.TemporalFilter",
  "interfaces.fsl.Threshold",
  "interfaces.fsl.TractSkeleton",
  "interfaces.fsl.WarpUtils",
  "interfaces.fsl.XFibres",
  "interfaces.fsl.XFibres5",
  "interfaces.fsl.maths.ApplyMask",
  "interfaces.fsl.maths.BinaryMaths",
  "interfaces.fsl.maths.MathsCommand",
  "interfaces.fsl.no_fsl",
  "interfaces.fsl.utils.ExtractROI",
  "interfaces.fsl.utils.Merge",
  "interfaces.io.DataGrabber",
  "interfaces.io.DataSink",
  "interfaces.io.FreeSurferSource",
  "interfaces.matlab.MatlabCommand",
  "interfaces.meshfix.MeshFix",
  "interfaces.mne.WatershedBEM",
  "interfaces.mrtrix.ConstrainedSphericalDeconvolution",
  "interfaces.mrtrix.DWI2Tensor",
  "interfaces.mrtrix.Erode",
  "interfaces.mrtrix.EstimateResponseForSH",
  "interfaces.mrtrix.FSL2MRTrix",
  "interfaces.mrtrix.GenerateWhiteMatterMask",
  "interfaces.mrtrix.MRConvert",
  "interfaces.mrtrix.MRMultiply",
  "interfaces.mrtrix.MRTrix2TrackVis",
  "interfaces.mrtrix.MedianFilter3D",
  "interfaces.mrtrix.ProbabilisticSphericallyDeconvolutedStreamlineTrack",
  "interfaces.mrtrix.SphericallyDeconvolutedStreamlineTrack",
  "interfaces.mrtrix.Tensor2ApparentDiffusion",
  "interfaces.mrtrix.Tensor2FractionalAnisotropy",
  "interfaces.mrtrix.Tensor2Vector",
  "interfaces.mrtrix.Threshold",
  "interfaces.mrtrix.Tracks2Prob",
  "interfaces.niftyreg.RegAladin",
  "interfaces.niftyreg.RegAverage",
  "interfaces.niftyreg.RegF3D",
  "interfaces.spm.DARTEL",
  "interfaces.spm.DARTELNorm2MNI",
  "interfaces.spm.Info.getinfo",
  "interfaces.spm.NewSegment",
  "interfaces.spm.Realign",
  "interfaces.spm.Smooth",
  "interfaces.utility.Function",
  "interfaces.utility.IdentityInterface",
  "interfaces.utility.Merge",
  "interfaces.utility.Select",
  "interfaces.vtkbase.configure_input_data",
  "interfaces.vtkbase.no_tvtk",
  "interfaces.vtkbase.tvtk.PolyData",
  "interfaces.vtkbase.tvtk.PolyDataReader",
  "interfaces.vtkbase.tvtk.PolyDataWriter",
  "interfaces.vtkbase.vtk_output",
  "io.BIDSDataGrabber.input_spec",
  "io.BIDSDataGrabber.output_spec",
  "io.DataFinder.input_spec",
  "io.DataFinder.output_spec",
  "io.DataGrabber.input_spec",
  "io.DataGrabber.output_spec",
  "io.DataSink.input_spec",
  "io.DataSink.output_spec",
  "io.FreeSurferSource.input_spec",
  "io.FreeSurferSource.output_spec",
  "io.IOBase.input_spec",
  "io.JSONFileGrabber.input_spec",
  "io.JSONFileGrabber.output_spec",
  "io.JSONFileSink.input_spec",
  "io.JSONFileSink.output_spec",
  "io.MySQLSink.input_spec",
  "io.S3DataGrabber.input_spec",
  "io.S3DataGrabber.output_spec",
  "io.SQLiteSink.input_spec",
  "io.SSHDataGrabber.input_spec",
  "io.SSHDataGrabber.output_spec",
  "io.SelectFiles.input_spec",
  "io.SelectFiles.output_spec",
  "io.StringIO",
  "io.XNATSink.input_spec",
  "io.XNATSource.input_spec",
  "io.XNATSource.output_spec",
  "io.open",
  "is_string",
  "isexec",
  "itertools",
  "jinja",
  "jinja.from_string",
  "l_outputs",
  "label_fusion.CalcTopNCC.input_spec",
  "label_fusion.CalcTopNCC.output_spec",
  "label_fusion.LabelFusion.input_spec",
  "label_fusion.LabelFusion.output_spec",
  "legacy.GenWarpFields.input_spec",
  "legacy.GenWarpFields.output_spec",
  "legacy.antsIntroduction.input_spec",
  "legacy.antsIntroduction.output_spec",
  "legacy.buildtemplateparallel.input_spec",
  "legacy.buildtemplateparallel.output_spec",
  "lesions.FillLesions.input_spec",
  "lesions.FillLesions.output_spec",
  "list.append",
  "load_template",
  "logging.update_logging",
  "longitudinal.FuseSegmentations.input_spec",
  "longitudinal.FuseSegmentations.output_spec",
  "longitudinal.RobustTemplate.input_spec",
  "longitudinal.RobustTemplate.output_spec",
  "make_field_func",
  "make_job_name",
  "maths.AR1Image.input_spec",
  "maths.AR1Image.output_spec",
  "maths.ApplyMask.input_spec",
  "maths.ApplyMask.output_spec",
  "maths.BinaryMaths.input_spec",
  "maths.BinaryMaths.output_spec",
  "maths.BinaryMathsInteger.input_spec",
  "maths.BinaryMathsInteger.output_spec",
  "maths.ChangeDataType.input_spec",
  "maths.ChangeDataType.output_spec",
  "maths.DilateImage.input_spec",
  "maths.DilateImage.output_spec",
  "maths.ErodeImage.input_spec",
  "maths.ErodeImage.output_spec",
  "maths.IsotropicSmooth.input_spec",
  "maths.IsotropicSmooth.output_spec",
  "maths.MathsCommand.input_spec",
  "maths.MathsCommand.output_spec",
  "maths.MaxImage.input_spec",
  "maths.MaxImage.output_spec",
  "maths.MaxnImage.input_spec",
  "maths.MaxnImage.output_spec",
  "maths.MeanImage.input_spec",
  "maths.MeanImage.output_spec",
  "maths.MedianImage.input_spec",
  "maths.MedianImage.output_spec",
  "maths.Merge.input_spec",
  "maths.Merge.output_spec",
  "maths.MinImage.input_spec",
  "maths.MinImage.output_spec",
  "maths.MultiImageMaths.input_spec",
  "maths.MultiImageMaths.output_spec",
  "maths.PercentileImage.input_spec",
  "maths.PercentileImage.output_spec",
  "maths.SpatialFilter.input_spec",
  "maths.SpatialFilter.output_spec",
  "maths.StdImage.input_spec",
  "maths.StdImage.output_spec",
  "maths.TemporalFilter.input_spec",
  "maths.TemporalFilter.output_spec",
  "maths.Threshold.input_spec",
  "maths.Threshold.output_spec",
  "maths.TupleMaths.input_spec",
  "maths.TupleMaths.output_spec",
  "maths.UnaryMaths.input_spec",
  "maths.UnaryMaths.output_spec",
  "matlab.MatlabCommand.input_spec",
  "maxcurvature.maxcurvature.input_spec",
  "maxcurvature.maxcurvature.output_spec",
  "mesh.ComputeMeshWarp.input_spec",
  "mesh.ComputeMeshWarp.output_spec",
  "mesh.MeshWarpMaths.input_spec",
  "mesh.MeshWarpMaths.output_spec",
  "mesh.P2PDistance.input_spec",
  "mesh.P2PDistance.output_spec",
  "mesh.TVTKBaseInterface.input_spec",
  "mesh.WarpPoints.input_spec",
  "mesh.WarpPoints.output_spec",
  "meshfix.MeshFix.input_spec",
  "meshfix.MeshFix.output_spec",
  "metric.MetricResample.input_spec",
  "metric.MetricResample.output_spec",
  "metrics.Distance",
  "metrics.FuzzyOverlap",
  "metrics.Overlap",
  "metrics.Similarity.input_spec",
  "metrics.Similarity.output_spec",
  "minc.Average.input_spec",
  "minc.Average.output_spec",
  "minc.BBox.input_spec",
  "minc.BBox.output_spec",
  "minc.Beast.input_spec",
  "minc.Beast.output_spec",
  "minc.BestLinReg.input_spec",
  "minc.BestLinReg.output_spec",
  "minc.BigAverage.input_spec",
  "minc.BigAverage.output_spec",
  "minc.Blob.input_spec",
  "minc.Blob.output_spec",
  "minc.Blur.input_spec",
  "minc.Blur.output_spec",
  "minc.Calc.input_spec",
  "minc.Calc.output_spec",
  "minc.Convert.input_spec",
  "minc.Convert.output_spec",
  "minc.Copy.input_spec",
  "minc.Copy.output_spec",
  "minc.Dump.input_spec",
  "minc.Dump.output_spec",
  "minc.Extract.input_spec",
  "minc.Extract.output_spec",
  "minc.Gennlxfm.input_spec",
  "minc.Gennlxfm.output_spec",
  "minc.Math.input_spec",
  "minc.Math.output_spec",
  "minc.NlpFit.input_spec",
  "minc.NlpFit.output_spec",
  "minc.Norm.input_spec",
  "minc.Norm.output_spec",
  "minc.Pik.input_spec",
  "minc.Pik.output_spec",
  "minc.Resample.input_spec",
  "minc.Resample.output_spec",
  "minc.Reshape.input_spec",
  "minc.Reshape.output_spec",
  "minc.ToEcat.input_spec",
  "minc.ToEcat.output_spec",
  "minc.ToRaw.input_spec",
  "minc.ToRaw.output_spec",
  "minc.VolSymm.input_spec",
  "minc.VolSymm.output_spec",
  "minc.Volcentre.input_spec",
  "minc.Volcentre.output_spec",
  "minc.Voliso.input_spec",
  "minc.Voliso.output_spec",
  "minc.Volpad.input_spec",
  "minc.Volpad.output_spec",
  "minc.XfmAvg.input_spec",
  "minc.XfmAvg.output_spec",
  "minc.XfmConcat.input_spec",
  "minc.XfmConcat.output_spec",
  "minc.XfmInvert.input_spec",
  "minc.XfmInvert.output_spec",
  "misc.AddCSVColumn.input_spec",
  "misc.AddCSVColumn.output_spec",
  "misc.AddCSVRow.input_spec",
  "misc.AddCSVRow.output_spec",
  "misc.AddNoise.input_spec",
  "misc.AddNoise.output_spec",
  "misc.CalculateMedian.input_spec",
  "misc.CalculateMedian.output_spec",
  "misc.CalculateNormalizedMoments.input_spec",
  "misc.CalculateNormalizedMoments.output_spec",
  "misc.CreateNifti.input_spec",
  "misc.CreateNifti.output_spec",
  "misc.Distance.input_spec",
  "misc.Distance.output_spec",
  "misc.FuzzyOverlap.input_spec",
  "misc.FuzzyOverlap.output_spec",
  "misc.Gunzip.input_spec",
  "misc.Gunzip.output_spec",
  "misc.Matlab2CSV.input_spec",
  "misc.Matlab2CSV.output_spec",
  "misc.MergeCSVFiles.input_spec",
  "misc.MergeCSVFiles.output_spec",
  "misc.MergeROIs.input_spec",
  "misc.MergeROIs.output_spec",
  "misc.ModifyAffine.input_spec",
  "misc.ModifyAffine.output_spec",
  "misc.NormalizeProbabilityMapSet.input_spec",
  "misc.NormalizeProbabilityMapSet.output_spec",
  "misc.PickAtlas.input_spec",
  "misc.PickAtlas.output_spec",
  "misc.SimpleThreshold.input_spec",
  "misc.SimpleThreshold.output_spec",
  "misc.SplitROIs.input_spec",
  "misc.SplitROIs.output_spec",
  "misc.TSNR",
  "misc.dict_diff",
  "misc.rgetcwd",
  "mock.MagicMock",
  "mock.patch",
  "model.Binarize.input_spec",
  "model.Binarize.output_spec",
  "model.Cluster.input_spec",
  "model.Cluster.output_spec",
  "model.Concatenate.input_spec",
  "model.Concatenate.output_spec",
  "model.ContrastMgr.input_spec",
  "model.ContrastMgr.output_spec",
  "model.Deconvolve.input_spec",
  "model.Deconvolve.output_spec",
  "model.DualRegression.input_spec",
  "model.DualRegression.output_spec",
  "model.EstimateContrast.input_spec",
  "model.EstimateContrast.output_spec",
  "model.EstimateModel.input_spec",
  "model.EstimateModel.output_spec",
  "model.FEAT.input_spec",
  "model.FEAT.output_spec",
  "model.FEATModel.input_spec",
  "model.FEATModel.output_spec",
  "model.FEATRegister.input_spec",
  "model.FEATRegister.output_spec",
  "model.FLAMEO.input_spec",
  "model.FLAMEO.output_spec",
  "model.FactorialDesign.input_spec",
  "model.FactorialDesign.output_spec",
  "model.FitGLM.input_spec",
  "model.FitGLM.output_spec",
  "model.GLM.input_spec",
  "model.GLM.output_spec",
  "model.GLMFit.input_spec",
  "model.GLMFit.output_spec",
  "model.L2Model.input_spec",
  "model.L2Model.output_spec",
  "model.Label2Annot.input_spec",
  "model.Label2Annot.output_spec",
  "model.Label2Label.input_spec",
  "model.Label2Label.output_spec",
  "model.Label2Vol.input_spec",
  "model.Label2Vol.output_spec",
  "model.Level1Design._create_ev_files",
  "model.Level1Design.input_spec",
  "model.Level1Design.output_spec",
  "model.MELODIC.input_spec",
  "model.MELODIC.output_spec",
  "model.MRISPreproc.input_spec",
  "model.MRISPreproc.output_spec",
  "model.MRISPreprocReconAll.input_spec",
  "model.MRISPreprocReconAll.output_spec",
  "model.MS_LDA.input_spec",
  "model.MS_LDA.output_spec",
  "model.MultipleRegressDesign.input_spec",
  "model.MultipleRegressDesign.output_spec",
  "model.MultipleRegressionDesign.input_spec",
  "model.MultipleRegressionDesign.output_spec",
  "model.OneSampleTTest.input_spec",
  "model.OneSampleTTest.output_spec",
  "model.OneSampleTTestDesign.input_spec",
  "model.OneSampleTTestDesign.output_spec",
  "model.PairedTTestDesign.input_spec",
  "model.PairedTTestDesign.output_spec",
  "model.Randomise.input_spec",
  "model.Randomise.output_spec",
  "model.Remlfit.input_spec",
  "model.Remlfit.output_spec",
  "model.SMM.input_spec",
  "model.SMM.output_spec",
  "model.SegStats.input_spec",
  "model.SegStats.output_spec",
  "model.SegStatsReconAll.input_spec",
  "model.SegStatsReconAll.output_spec",
  "model.SmoothEstimate.input_spec",
  "model.SmoothEstimate.output_spec",
  "model.SphericalAverage.input_spec",
  "model.SphericalAverage.output_spec",
  "model.Synthesize.input_spec",
  "model.Synthesize.output_spec",
  "model.Threshold.input_spec",
  "model.Threshold.output_spec",
  "model.ThresholdStatistics.input_spec",
  "model.ThresholdStatistics.output_spec",
  "model.TwoSampleTTestDesign.input_spec",
  "model.TwoSampleTTestDesign.output_spec",
  "modelgen.SpecifyModel.input_spec",
  "modelgen.SpecifyModel.output_spec",
  "modelgen.SpecifySPMModel.input_spec",
  "modelgen.SpecifySPMModel.output_spec",
  "modelgen.SpecifySparseModel.input_spec",
  "modelgen.SpecifySparseModel.output_spec",
  "modify_paths",
  "morphology.GrayscaleFillHoleImageFilter.input_spec",
  "morphology.GrayscaleFillHoleImageFilter.output_spec",
  "morphology.GrayscaleGrindPeakImageFilter.input_spec",
  "morphology.GrayscaleGrindPeakImageFilter.output_spec",
  "multiprocessing.Pool",
  "multiprocessing.Process",
  "multiprocessing.cpu_count",
  "n4itkbiasfieldcorrection.N4ITKBiasFieldCorrection.input_spec",
  "n4itkbiasfieldcorrection.N4ITKBiasFieldCorrection.output_spec",
  "nbs.NetworkBasedStatistic.input_spec",
  "nbs.NetworkBasedStatistic.output_spec",
  "nested_wf",
  "networkx.DiGraph",
  "networkx.Graph",
  "networkx.__version__.split",
  "networkx.average_clustering",
  "networkx.average_shortest_path_length",
  "networkx.betweenness_centrality",
  "networkx.closeness_centrality",
  "networkx.clustering",
  "networkx.connected_component_subgraphs",
  "networkx.connected_components",
  "networkx.core_number",
  "networkx.degree_assortativity",
  "networkx.degree_assortativity_coefficient",
  "networkx.degree_centrality",
  "networkx.degree_pearson_correlation_coefficient",
  "networkx.degree_pearsonr",
  "networkx.density",
  "networkx.dfs_preorder",
  "networkx.dfs_preorder_nodes",
  "networkx.draw",
  "networkx.draw_networkx_edge_labels",
  "networkx.from_numpy_matrix",
  "networkx.graph_clique_number",
  "networkx.graphviz_layout",
  "networkx.has_path",
  "networkx.is_connected",
  "networkx.is_directed_acyclic_graph",
  "networkx.isolates",
  "networkx.load_centrality",
  "networkx.node_clique_number",
  "networkx.number_connected_components",
  "networkx.number_of_cliques",
  "networkx.number_of_edges",
  "networkx.number_of_nodes",
  "networkx.read_gpickle",
  "networkx.read_graphml",
  "networkx.relabel_nodes",
  "networkx.rich_club_coefficient",
  "networkx.to_numpy_matrix",
  "networkx.topological_sort",
  "networkx.transitivity",
  "networkx.triangles",
  "networkx.write_gexf",
  "networkx.write_gpickle",
  "nibabel.AnalyzeHeader.from_fileobj",
  "nibabel.func.four_to_three",
  "nilearn.NilearnBaseInterface.input_spec",
  "nilearn.SignalExtraction",
  "nilearn.SignalExtraction.input_spec",
  "nilearn.SignalExtraction.output_spec",
  "nipy.modalities.fmri.design_matrix.BlockParadigm",
  "nipype.__file__",
  "nipype.__init__.NipypeTester",
  "nipype.__init__.config",
  "nipype.__path__",
  "nipype.config._config.remove_option",
  "nipype.config._display",
  "nipype.config.cwd",
  "nipype.config.enable_debug_mode",
  "nipype.config.enable_provenance",
  "nipype.config.get",
  "nipype.config.get_display",
  "nipype.config.has_option",
  "nipype.config.set",
  "nipype.config.set_default_config",
  "nipype.config.update_config",
  "nipype.interfaces.fsl.Info.ftypes",
  "nipype.interfaces.fsl.Info.ftypes.items",
  "nipype.interfaces.fsl.Info.ftypes.keys",
  "nipype.interfaces.fsl.Info.version",
  "nipype.interfaces.fsl.dti.Randomise",
  "nipype.interfaces.fsl.dti.Randomise_parallel",
  "nipype.interfaces.matlab.MatlabCommand._cmd",
  "nipype.interfaces.matlab.MatlabCommand.input_spec",
  "nipype.interfaces.spm.Coregister._jobname",
  "nipype.interfaces.spm.Coregister._jobtype",
  "nipype.interfaces.spm.DARTEL._jobname",
  "nipype.interfaces.spm.DARTEL._jobtype",
  "nipype.interfaces.spm.DARTELNorm2MNI._jobname",
  "nipype.interfaces.spm.DARTELNorm2MNI._jobtype",
  "nipype.interfaces.spm.Normalize._jobname",
  "nipype.interfaces.spm.Normalize._jobtype",
  "nipype.interfaces.spm.Normalize12._jobname",
  "nipype.interfaces.spm.Normalize12._jobtype",
  "nipype.interfaces.spm.Realign._jobname",
  "nipype.interfaces.spm.Realign._jobtype",
  "nipype.interfaces.spm.SliceTiming._jobname",
  "nipype.interfaces.spm.SliceTiming._jobtype",
  "nipype.interfaces.spm.Smooth._jobname",
  "nipype.interfaces.spm.Smooth._jobtype",
  "nipype.interfaces.spm.model.EstimateContrast._jobname",
  "nipype.interfaces.spm.model.EstimateContrast._jobtype",
  "nipype.interfaces.spm.model.EstimateModel._jobname",
  "nipype.interfaces.spm.model.EstimateModel._jobtype",
  "nipype.interfaces.spm.model.FactorialDesign._jobname",
  "nipype.interfaces.spm.model.FactorialDesign._jobtype",
  "nipype.interfaces.spm.model.Level1Design._jobname",
  "nipype.interfaces.spm.model.Level1Design._jobtype",
  "nipype.interfaces.spm.model.OneSampleTTestDesign._jobname",
  "nipype.interfaces.spm.model.OneSampleTTestDesign._jobtype",
  "nipype.interfaces.spm.model.Threshold._jobname",
  "nipype.interfaces.spm.model.Threshold._jobtype",
  "nipype.interfaces.spm.model.TwoSampleTTestDesign._jobname",
  "nipype.interfaces.spm.model.TwoSampleTTestDesign._jobtype",
  "nipype.logging.getLogger",
  "nipype.logging.update_logging",
  "nipype.testing.__init__.basedir",
  "nipype.testing.__init__.filepath",
  "nipype.testing.__init__.funcfile",
  "nitime.algorithms.AR_est_YW",
  "nitime.analysis.CoherenceAnalyzer",
  "nodes.MapNode",
  "numpy.NaN",
  "numpy.abs",
  "numpy.arange",
  "numpy.arccos",
  "numpy.bool",
  "numpy.ceil",
  "numpy.cos",
  "numpy.dtype",
  "numpy.exp",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.inf",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int_",
  "numpy.invert",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.log",
  "numpy.log10",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.maximum",
  "numpy.minimum",
  "numpy.multiply",
  "numpy.pi",
  "numpy.polynomial.Legendre.basis",
  "numpy.power",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.rayleigh",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.rint",
  "numpy.sign",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.square",
  "numpy.uint",
  "numpy.uint16",
  "numpy.uint8",
  "numpy.zeros",
  "nx.AverageNetworks.input_spec",
  "nx.AverageNetworks.output_spec",
  "nx.NetworkXMetrics.input_spec",
  "nx.NetworkXMetrics.output_spec",
  "object.items",
  "odf.HARDIMat.input_spec",
  "odf.HARDIMat.output_spec",
  "odf.LinRecon.input_spec",
  "odf.LinRecon.output_spec",
  "odf.MESD.input_spec",
  "odf.MESD.output_spec",
  "odf.ODFRecon.input_spec",
  "odf.ODFRecon.output_spec",
  "odf.ODFTracker.input_spec",
  "odf.ODFTracker.output_spec",
  "odf.QBallMX.input_spec",
  "odf.QBallMX.output_spec",
  "odf.SFPeaks.input_spec",
  "odf.SFPeaks.output_spec",
  "os.F_OK",
  "os.X_OK",
  "os.access",
  "os.chdir",
  "os.chmod",
  "os.environ.clear",
  "os.environ.get",
  "os.environ.update",
  "os.error",
  "os.getcwd",
  "os.getpid",
  "os.getuid",
  "os.link",
  "os.listdir",
  "os.mkdir",
  "os.path.commonprefix",
  "os.path.exists",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.samefile",
  "os.path.sep.join",
  "os.read",
  "os.readlink",
  "os.remove",
  "os.rename",
  "os.stat",
  "os.symlink",
  "os.system",
  "os.unlink",
  "os.utime",
  "parcellation.Parcellate.input_spec",
  "parcellation.Parcellate.output_spec",
  "patchmatch.PatchMatch.input_spec",
  "patchmatch.PatchMatch.output_spec",
  "petpvc.PETPVC.input_spec",
  "petpvc.PETPVC.output_spec",
  "petstandarduptakevaluecomputation.PETStandardUptakeValueComputation.input_spec",
  "petstandarduptakevaluecomputation.PETStandardUptakeValueComputation.output_spec",
  "pipeline.engine.MapNode",
  "pipeline.engine.Node",
  "pipeline.engine.Workflow",
  "plot_confound",
  "plugin_mod",
  "points_per_track",
  "polynomial_func",
  "posixpath.samefile",
  "possum.B0Calc.input_spec",
  "possum.B0Calc.output_spec",
  "postproc.SplineFilter.input_spec",
  "postproc.SplineFilter.output_spec",
  "postproc.TrackMerge.input_spec",
  "postproc.TrackMerge.output_spec",
  "preprocess.ACTPrepareFSL.input_spec",
  "preprocess.ACTPrepareFSL.output_spec",
  "preprocess.AlignEpiAnatPy.input_spec",
  "preprocess.AlignEpiAnatPy.output_spec",
  "preprocess.Allineate.input_spec",
  "preprocess.Allineate.output_spec",
  "preprocess.ApplyDeformations.input_spec",
  "preprocess.ApplyDeformations.output_spec",
  "preprocess.ApplyVolTransform.input_spec",
  "preprocess.ApplyVolTransform.output_spec",
  "preprocess.ApplyWarp",
  "preprocess.ApplyWarp.input_spec",
  "preprocess.ApplyWarp.output_spec",
  "preprocess.ApplyXFM.input_spec",
  "preprocess.ApplyXFM.output_spec",
  "preprocess.AutoTLRC.input_spec",
  "preprocess.AutoTLRC.output_spec",
  "preprocess.AutoTcorrelate.input_spec",
  "preprocess.AutoTcorrelate.output_spec",
  "preprocess.Automask.input_spec",
  "preprocess.Automask.output_spec",
  "preprocess.BBRegister.output_spec",
  "preprocess.BET",
  "preprocess.BET.input_spec",
  "preprocess.BET.output_spec",
  "preprocess.Bandpass.input_spec",
  "preprocess.Bandpass.output_spec",
  "preprocess.BlurInMask.input_spec",
  "preprocess.BlurInMask.output_spec",
  "preprocess.BlurToFWHM.input_spec",
  "preprocess.BlurToFWHM.output_spec",
  "preprocess.CALabel.input_spec",
  "preprocess.CALabel.output_spec",
  "preprocess.CANormalize.input_spec",
  "preprocess.CANormalize.output_spec",
  "preprocess.CARegister.input_spec",
  "preprocess.CARegister.output_spec",
  "preprocess.ClipLevel.input_spec",
  "preprocess.ClipLevel.output_spec",
  "preprocess.ComputeMask.input_spec",
  "preprocess.ComputeMask.output_spec",
  "preprocess.ConcatenateLTA.input_spec",
  "preprocess.ConcatenateLTA.output_spec",
  "preprocess.Coregister.input_spec",
  "preprocess.Coregister.output_spec",
  "preprocess.CreateWarped.input_spec",
  "preprocess.CreateWarped.output_spec",
  "preprocess.DARTEL.input_spec",
  "preprocess.DARTEL.output_spec",
  "preprocess.DARTELNorm2MNI.input_spec",
  "preprocess.DARTELNorm2MNI.output_spec",
  "preprocess.DICOMConvert.input_spec",
  "preprocess.DWI2Tensor.input_spec",
  "preprocess.DWI2Tensor.output_spec",
  "preprocess.DWIDenoise.input_spec",
  "preprocess.DWIDenoise.output_spec",
  "preprocess.DegreeCentrality.input_spec",
  "preprocess.DegreeCentrality.output_spec",
  "preprocess.Denoise.input_spec",
  "preprocess.Denoise.output_spec",
  "preprocess.Despike.input_spec",
  "preprocess.Despike.output_spec",
  "preprocess.Detrend.input_spec",
  "preprocess.Detrend.output_spec",
  "preprocess.ECM.input_spec",
  "preprocess.ECM.output_spec",
  "preprocess.EditWMwithAseg.input_spec",
  "preprocess.EditWMwithAseg.output_spec",
  "preprocess.Erode.input_spec",
  "preprocess.Erode.output_spec",
  "preprocess.FAST",
  "preprocess.FAST.input_spec",
  "preprocess.FAST.output_spec",
  "preprocess.FIRST",
  "preprocess.FIRST.input_spec",
  "preprocess.FIRST.output_spec",
  "preprocess.FLIRT",
  "preprocess.FLIRT.input_spec",
  "preprocess.FLIRT.output_spec",
  "preprocess.FNIRT",
  "preprocess.FNIRT.input_spec",
  "preprocess.FNIRT.intensitymap_file_basename",
  "preprocess.FNIRT.output_spec",
  "preprocess.FUGUE",
  "preprocess.FUGUE.input_spec",
  "preprocess.FUGUE.output_spec",
  "preprocess.FieldMap.input_spec",
  "preprocess.FieldMap.output_spec",
  "preprocess.Fim.input_spec",
  "preprocess.Fim.output_spec",
  "preprocess.FitMSParams.input_spec",
  "preprocess.FitMSParams.output_spec",
  "preprocess.Fourier.input_spec",
  "preprocess.Fourier.output_spec",
  "preprocess.GenerateWhiteMatterMask.input_spec",
  "preprocess.GenerateWhiteMatterMask.output_spec",
  "preprocess.Hist.input_spec",
  "preprocess.Hist.output_spec",
  "preprocess.LFCD.input_spec",
  "preprocess.LFCD.output_spec",
  "preprocess.MCFLIRT",
  "preprocess.MCFLIRT.input_spec",
  "preprocess.MCFLIRT.output_spec",
  "preprocess.MNIBiasCorrection.input_spec",
  "preprocess.MNIBiasCorrection.output_spec",
  "preprocess.MRConvert.input_spec",
  "preprocess.MRConvert.output_spec",
  "preprocess.MRIConvert.input_spec",
  "preprocess.MRIConvert.output_spec",
  "preprocess.MRIsCALabel.input_spec",
  "preprocess.MRIsCALabel.output_spec",
  "preprocess.MRMultiply.input_spec",
  "preprocess.MRMultiply.output_spec",
  "preprocess.MRTransform.input_spec",
  "preprocess.MRTransform.output_spec",
  "preprocess.MRTrixInfo.input_spec",
  "preprocess.MRTrixInfo.output_spec",
  "preprocess.MRTrixViewer.input_spec",
  "preprocess.MRTrixViewer.output_spec",
  "preprocess.Maskave.input_spec",
  "preprocess.Maskave.output_spec",
  "preprocess.Means.input_spec",
  "preprocess.Means.output_spec",
  "preprocess.MedianFilter3D.input_spec",
  "preprocess.MedianFilter3D.output_spec",
  "preprocess.NewSegment.input_spec",
  "preprocess.NewSegment.output_spec",
  "preprocess.Normalize.input_spec",
  "preprocess.Normalize.output_spec",
  "preprocess.Normalize12.input_spec",
  "preprocess.Normalize12.output_spec",
  "preprocess.OutlierCount.input_spec",
  "preprocess.OutlierCount.output_spec",
  "preprocess.PRELUDE.input_spec",
  "preprocess.PRELUDE.output_spec",
  "preprocess.ParseDICOMDir.input_spec",
  "preprocess.ParseDICOMDir.output_spec",
  "preprocess.QualityIndex.input_spec",
  "preprocess.QualityIndex.output_spec",
  "preprocess.Qwarp.input_spec",
  "preprocess.Qwarp.output_spec",
  "preprocess.QwarpPlusMinus.input_spec",
  "preprocess.QwarpPlusMinus.output_spec",
  "preprocess.ROIStats.input_spec",
  "preprocess.ROIStats.output_spec",
  "preprocess.Realign.input_spec",
  "preprocess.Realign.output_spec",
  "preprocess.RealignUnwarp.input_spec",
  "preprocess.RealignUnwarp.output_spec",
  "preprocess.ReconAll.input_spec",
  "preprocess.ReconAll.output_spec",
  "preprocess.ReplaceFSwithFIRST.input_spec",
  "preprocess.ReplaceFSwithFIRST.output_spec",
  "preprocess.Resample.input_spec",
  "preprocess.Resample.output_spec",
  "preprocess.ResponseSD.input_spec",
  "preprocess.ResponseSD.output_spec",
  "preprocess.Retroicor.input_spec",
  "preprocess.Retroicor.output_spec",
  "preprocess.RobustRegister.input_spec",
  "preprocess.RobustRegister.output_spec",
  "preprocess.SUSAN.input_spec",
  "preprocess.SUSAN.output_spec",
  "preprocess.Seg.input_spec",
  "preprocess.Seg.output_spec",
  "preprocess.Segment.input_spec",
  "preprocess.Segment.output_spec",
  "preprocess.SegmentCC.input_spec",
  "preprocess.SegmentCC.output_spec",
  "preprocess.SegmentWM.input_spec",
  "preprocess.SegmentWM.output_spec",
  "preprocess.SkullStrip.input_spec",
  "preprocess.SkullStrip.output_spec",
  "preprocess.SliceTimer.input_spec",
  "preprocess.SliceTimer.output_spec",
  "preprocess.SliceTiming.input_spec",
  "preprocess.SliceTiming.output_spec",
  "preprocess.Smooth.input_spec",
  "preprocess.Smooth.output_spec",
  "preprocess.SpaceTimeRealigner.input_spec",
  "preprocess.SpaceTimeRealigner.output_spec",
  "preprocess.SynthesizeFLASH.input_spec",
  "preprocess.SynthesizeFLASH.output_spec",
  "preprocess.TCorr1D.input_spec",
  "preprocess.TCorr1D.output_spec",
  "preprocess.TCorrMap.input_spec",
  "preprocess.TCorrMap.output_spec",
  "preprocess.TCorrelate.input_spec",
  "preprocess.TCorrelate.output_spec",
  "preprocess.TNorm.input_spec",
  "preprocess.TNorm.output_spec",
  "preprocess.TProject.input_spec",
  "preprocess.TProject.output_spec",
  "preprocess.TShift.input_spec",
  "preprocess.TShift.output_spec",
  "preprocess.Tensor2ApparentDiffusion.input_spec",
  "preprocess.Tensor2ApparentDiffusion.output_spec",
  "preprocess.Tensor2FractionalAnisotropy.input_spec",
  "preprocess.Tensor2FractionalAnisotropy.output_spec",
  "preprocess.Tensor2Vector.input_spec",
  "preprocess.Tensor2Vector.output_spec",
  "preprocess.Threshold.input_spec",
  "preprocess.Threshold.output_spec",
  "preprocess.Trim.input_spec",
  "preprocess.Trim.output_spec",
  "preprocess.UnpackSDICOMDir.input_spec",
  "preprocess.VBMSegment.input_spec",
  "preprocess.VBMSegment.output_spec",
  "preprocess.Volreg.input_spec",
  "preprocess.Volreg.output_spec",
  "preprocess.Warp.input_spec",
  "preprocess.Warp.output_spec",
  "preprocess.WatershedSkullStrip.input_spec",
  "preprocess.WatershedSkullStrip.output_spec",
  "prov.model.PROV",
  "prov.model.URIRef",
  "prov.model.XSD",
  "pwd",
  "pylab.clf",
  "pylab.close",
  "pylab.pcolor",
  "pylab.savefig",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pywintypes",
  "pywintypes.OVERLAPPED",
  "pyxnat",
  "pyxnat.Interface",
  "qt1.FitQt1.input_spec",
  "qt1.FitQt1.output_spec",
  "quickshear.Quickshear.input_spec",
  "quickshear.Quickshear.output_spec",
  "rapidart.ArtifactDetect",
  "rapidart.ArtifactDetect.input_spec",
  "rapidart.ArtifactDetect.output_spec",
  "rapidart.StimulusCorrelation",
  "rapidart.StimulusCorrelation.input_spec",
  "rapidart.StimulusCorrelation.output_spec",
  "rapidart._calc_norm",
  "rapidart._get_affine_matrix",
  "re.IGNORECASE",
  "re.M",
  "re.MULTILINE",
  "reconst.EstimateFOD.input_spec",
  "reconst.EstimateFOD.output_spec",
  "reconst.FitTensor.input_spec",
  "reconst.FitTensor.output_spec",
  "reconstruction.CSD.input_spec",
  "reconstruction.CSD.output_spec",
  "reconstruction.EstimateResponseSH.input_spec",
  "reconstruction.EstimateResponseSH.output_spec",
  "reconstruction.RESTORE.input_spec",
  "reconstruction.RESTORE.output_spec",
  "reg.RegAladin.input_spec",
  "reg.RegAladin.output_spec",
  "reg.RegF3D.input_spec",
  "reg.RegF3D.output_spec",
  "registration.ANTS.input_spec",
  "registration.ANTS.output_spec",
  "registration.AffScalarVol.input_spec",
  "registration.AffScalarVol.output_spec",
  "registration.AffSymTensor3DVol.input_spec",
  "registration.AffSymTensor3DVol.output_spec",
  "registration.Affine.input_spec",
  "registration.Affine.output_spec",
  "registration.AffineRegistration.input_spec",
  "registration.AffineRegistration.output_spec",
  "registration.AffineTask.input_spec",
  "registration.AffineTask.output_spec",
  "registration.AnalyzeWarp.input_spec",
  "registration.AnalyzeWarp.output_spec",
  "registration.ApplyWarp.input_spec",
  "registration.ApplyWarp.output_spec",
  "registration.BSplineDeformableRegistration.input_spec",
  "registration.BSplineDeformableRegistration.output_spec",
  "registration.ComposeXfm.input_spec",
  "registration.ComposeXfm.output_spec",
  "registration.ComposeXfmTask.input_spec",
  "registration.ComposeXfmTask.output_spec",
  "registration.Diffeo.input_spec",
  "registration.Diffeo.output_spec",
  "registration.DiffeoScalarVol.input_spec",
  "registration.DiffeoScalarVol.output_spec",
  "registration.DiffeoSymTensor3DVol.input_spec",
  "registration.DiffeoSymTensor3DVol.output_spec",
  "registration.DiffeoTask.input_spec",
  "registration.DiffeoTask.output_spec",
  "registration.EMRegister.input_spec",
  "registration.EMRegister.output_spec",
  "registration.ExpertAutomatedRegistration.input_spec",
  "registration.ExpertAutomatedRegistration.output_spec",
  "registration.LinearRegistration.input_spec",
  "registration.LinearRegistration.output_spec",
  "registration.MPRtoMNI305.input_spec",
  "registration.MPRtoMNI305.output_spec",
  "registration.MRICoreg.input_spec",
  "registration.MRICoreg.output_spec",
  "registration.MeasureImageSimilarity.input_spec",
  "registration.MeasureImageSimilarity.output_spec",
  "registration.MultiResolutionAffineRegistration.input_spec",
  "registration.MultiResolutionAffineRegistration.output_spec",
  "registration.Paint.input_spec",
  "registration.Paint.output_spec",
  "registration.PointsWarp.input_spec",
  "registration.PointsWarp.output_spec",
  "registration.Register.input_spec",
  "registration.Register.output_spec",
  "registration.RegisterAVItoTalairach.input_spec",
  "registration.RegisterAVItoTalairach.output_spec",
  "registration.Registration.input_spec",
  "registration.Registration.output_spec",
  "registration.RegistrationSynQuick.input_spec",
  "registration.RegistrationSynQuick.output_spec",
  "registration.Rigid.input_spec",
  "registration.Rigid.output_spec",
  "registration.RigidRegistration.input_spec",
  "registration.RigidRegistration.output_spec",
  "registration.RigidTask.input_spec",
  "registration.RigidTask.output_spec",
  "registration.affScalarVolTask.input_spec",
  "registration.affScalarVolTask.output_spec",
  "registration.affSymTensor3DVolTask.input_spec",
  "registration.affSymTensor3DVolTask.output_spec",
  "registration.diffeoScalarVolTask.input_spec",
  "registration.diffeoScalarVolTask.output_spec",
  "registration.diffeoSymTensor3DVolTask.input_spec",
  "registration.diffeoSymTensor3DVolTask.output_spec",
  "registration.scalartransform.input_spec",
  "registration.scalartransform.output_spec",
  "regress_poly",
  "regutils.RegAverage.input_spec",
  "regutils.RegAverage.output_spec",
  "regutils.RegJacobian.input_spec",
  "regutils.RegJacobian.output_spec",
  "regutils.RegMeasure.input_spec",
  "regutils.RegMeasure.output_spec",
  "regutils.RegResample.input_spec",
  "regutils.RegResample.output_spec",
  "regutils.RegTools.input_spec",
  "regutils.RegTools.output_spec",
  "regutils.RegTransform.input_spec",
  "regutils.RegTransform.output_spec",
  "reporting.ReportCapableInterface.input_spec",
  "resamplescalarvectordwivolume.ResampleScalarVectorDWIVolume.input_spec",
  "resamplescalarvectordwivolume.ResampleScalarVectorDWIVolume.output_spec",
  "resampling.ApplyTransforms.input_spec",
  "resampling.ApplyTransforms.output_spec",
  "resampling.ApplyTransformsToPoints.input_spec",
  "resampling.ApplyTransformsToPoints.output_spec",
  "resampling.WarpImageMultiTransform.input_spec",
  "resampling.WarpImageMultiTransform.output_spec",
  "resampling.WarpTimeSeriesImageMultiTransform.input_spec",
  "resampling.WarpTimeSeriesImageMultiTransform.output_spec",
  "rotfunc",
  "run_wf",
  "sdc_peb",
  "segmentation.AntsJointFusion.input_spec",
  "segmentation.AntsJointFusion.output_spec",
  "segmentation.Atropos.input_spec",
  "segmentation.Atropos.output_spec",
  "segmentation.BRAINSTalairach.input_spec",
  "segmentation.BRAINSTalairach.output_spec",
  "segmentation.BRAINSTalairachMask.input_spec",
  "segmentation.BRAINSTalairachMask.output_spec",
  "segmentation.BrainExtraction.input_spec",
  "segmentation.BrainExtraction.output_spec",
  "segmentation.CorticalThickness.input_spec",
  "segmentation.CorticalThickness.output_spec",
  "segmentation.DenoiseImage.input_spec",
  "segmentation.DenoiseImage.output_spec",
  "segmentation.JointFusion.input_spec",
  "segmentation.JointFusion.output_spec",
  "segmentation.KellyKapowski.input_spec",
  "segmentation.KellyKapowski.output_spec",
  "segmentation.LaplacianThickness.input_spec",
  "segmentation.LaplacianThickness.output_spec",
  "segmentation.N4BiasFieldCorrection.input_spec",
  "segmentation.N4BiasFieldCorrection.output_spec",
  "segmentation.OtsuThresholdSegmentation.input_spec",
  "segmentation.OtsuThresholdSegmentation.output_spec",
  "segmentation.SimilarityIndex.input_spec",
  "segmentation.SimilarityIndex.output_spec",
  "set_bar",
  "set_dimension",
  "set_foo",
  "set_illegal_range",
  "set_method",
  "set_output_units",
  "sets",
  "sets.Set",
  "signal.SIGINT",
  "simpleregiongrowingsegmentation.SimpleRegionGrowingSegmentation.input_spec",
  "simpleregiongrowingsegmentation.SimpleRegionGrowingSegmentation.output_spec",
  "simulate.SimulateMultiTensor.input_spec",
  "simulate.SimulateMultiTensor.output_spec",
  "socket.gethostname",
  "soma.workflow.client.Helper",
  "soma.workflow.client.Helper.serialize",
  "soma.workflow.client.Helper.wait_workflow",
  "soma.workflow.client.Job",
  "soma.workflow.client.Workflow",
  "soma.workflow.client.WorkflowController",
  "spec",
  "spec2",
  "spec3",
  "spec4",
  "specfunc",
  "specialized.ACPCTransform.input_spec",
  "specialized.ACPCTransform.output_spec",
  "specialized.BRAINSABC.input_spec",
  "specialized.BRAINSABC.output_spec",
  "specialized.BRAINSConstellationDetector.input_spec",
  "specialized.BRAINSConstellationDetector.output_spec",
  "specialized.BRAINSCreateLabelMapFromProbabilityMaps.input_spec",
  "specialized.BRAINSCreateLabelMapFromProbabilityMaps.output_spec",
  "specialized.BRAINSCut.input_spec",
  "specialized.BRAINSCut.output_spec",
  "specialized.BRAINSDemonWarp.input_spec",
  "specialized.BRAINSDemonWarp.output_spec",
  "specialized.BRAINSMultiSTAPLE.input_spec",
  "specialized.BRAINSMultiSTAPLE.output_spec",
  "specialized.BRAINSROIAuto.input_spec",
  "specialized.BRAINSROIAuto.output_spec",
  "specialized.BRAINSTransformFromFiducials.input_spec",
  "specialized.BRAINSTransformFromFiducials.output_spec",
  "specialized.BinaryMaskEditorBasedOnLandmarks.input_spec",
  "specialized.BinaryMaskEditorBasedOnLandmarks.output_spec",
  "specialized.EMSegmentCommandLine.input_spec",
  "specialized.EMSegmentCommandLine.output_spec",
  "specialized.ESLR.input_spec",
  "specialized.ESLR.output_spec",
  "specialized.FiducialRegistration.input_spec",
  "specialized.FiducialRegistration.output_spec",
  "specialized.RobustStatisticsSegmenter.input_spec",
  "specialized.RobustStatisticsSegmenter.output_spec",
  "specialized.VBRAINSDemonWarp.input_spec",
  "specialized.VBRAINSDemonWarp.output_spec",
  "sqlite3.connect",
  "stats.ActivationCount.input_spec",
  "stats.ActivationCount.output_spec",
  "stats.BinaryStats.input_spec",
  "stats.BinaryStats.output_spec",
  "stats.StatsCommand.input_spec",
  "stats.StatsCommand.output_spec",
  "stats.UnaryStats.input_spec",
  "stats.UnaryStats.output_spec",
  "string.find",
  "string.letters",
  "surface.GrayscaleModelMaker.input_spec",
  "surface.GrayscaleModelMaker.output_spec",
  "surface.LabelMapSmoothing.input_spec",
  "surface.LabelMapSmoothing.output_spec",
  "surface.MergeModels.input_spec",
  "surface.MergeModels.output_spec",
  "surface.ModelMaker.input_spec",
  "surface.ModelMaker.output_spec",
  "surface.ModelToLabelMap.input_spec",
  "surface.ModelToLabelMap.output_spec",
  "surface.ProbeVolumeWithModel.input_spec",
  "surface.ProbeVolumeWithModel.output_spec",
  "svm.SVMTest.input_spec",
  "svm.SVMTest.output_spec",
  "svm.SVMTrain.input_spec",
  "svm.SVMTrain.output_spec",
  "sys",
  "sys.path.insert",
  "sys.platform.startswith",
  "sys.stderr.write",
  "sys.stdin.readline",
  "sys.stdout.flush",
  "sys.stdout.write",
  "tensors.ConstrainedSphericalDeconvolution.input_spec",
  "tensors.ConstrainedSphericalDeconvolution.output_spec",
  "tensors.DTI.input_spec",
  "tensors.DTI.output_spec",
  "tensors.DWI2SphericalHarmonicsImage.input_spec",
  "tensors.DWI2SphericalHarmonicsImage.output_spec",
  "tensors.Directions2Amplitude.input_spec",
  "tensors.Directions2Amplitude.output_spec",
  "tensors.EstimateResponseForSH.input_spec",
  "tensors.EstimateResponseForSH.output_spec",
  "tensors.FSL2MRTrix.input_spec",
  "tensors.FSL2MRTrix.output_spec",
  "tensors.FindShPeaks.input_spec",
  "tensors.FindShPeaks.output_spec",
  "tensors.GenerateDirections.input_spec",
  "tensors.GenerateDirections.output_spec",
  "tensors.TensorMode.input_spec",
  "tensors.TensorMode.output_spec",
  "testing.example_data",
  "testing.utils.save_toy_nii",
  "textwrap.indent.rstrip",
  "thresholdscalarvolume.ThresholdScalarVolume.input_spec",
  "thresholdscalarvolume.ThresholdScalarVolume.output_spec",
  "time",
  "to_list",
  "touch",
  "track_gen",
  "tracking.DiffusionTensorStreamlineTrack.input_spec",
  "tracking.DiffusionTensorStreamlineTrack.output_spec",
  "tracking.FilterTracks.input_spec",
  "tracking.FilterTracks.output_spec",
  "tracking.ProbabilisticSphericallyDeconvolutedStreamlineTrack.input_spec",
  "tracking.ProbabilisticSphericallyDeconvolutedStreamlineTrack.output_spec",
  "tracking.SphericallyDeconvolutedStreamlineTrack.input_spec",
  "tracking.SphericallyDeconvolutedStreamlineTrack.output_spec",
  "tracking.StreamlineTrack.input_spec",
  "tracking.StreamlineTrack.output_spec",
  "tracking.Tracks2Prob.input_spec",
  "tracking.Tracks2Prob.output_spec",
  "tracking.Tractography.input_spec",
  "tracking.Tractography.output_spec",
  "tracks.StreamlineTractography.input_spec",
  "tracks.StreamlineTractography.output_spec",
  "tracks.TrackDensityMap.input_spec",
  "tracks.TrackDensityMap.output_spec",
  "traits.trait_base._Undefined.__len__",
  "traits_extension.traits.Bool",
  "traits_extension.traits.DictStrStr",
  "traits_extension.traits.Disallow",
  "traits_extension.traits.File",
  "traits_extension.traits.HasTraits",
  "traits_extension.traits.Int",
  "traits_extension.traits.List",
  "traits_extension.traits.Str",
  "traits_extension.traits.TraitCompound",
  "traits_extension.traits.items",
  "type.replace",
  "ukftractography.UKFTractography.input_spec",
  "ukftractography.UKFTractography.output_spec",
  "utilities.EMSegmentTransformToNewFormat.input_spec",
  "utilities.EMSegmentTransformToNewFormat.output_spec",
  "utilities.GenerateEdgeMapImage.input_spec",
  "utilities.GenerateEdgeMapImage.output_spec",
  "utilities.GeneratePurePlugMask.input_spec",
  "utilities.GeneratePurePlugMask.output_spec",
  "utilities.HistogramMatchingFilter.input_spec",
  "utilities.HistogramMatchingFilter.output_spec",
  "utility.Function",
  "utils.ABoverlap.input_spec",
  "utils.ABoverlap.output_spec",
  "utils.AFNItoNIFTI.input_spec",
  "utils.AFNItoNIFTI.output_spec",
  "utils.AddXFormToHeader.input_spec",
  "utils.AddXFormToHeader.output_spec",
  "utils.AffineInitializer.input_spec",
  "utils.AffineInitializer.output_spec",
  "utils.Analyze2nii.input_spec",
  "utils.Analyze2nii.output_spec",
  "utils.Aparc2Aseg.input_spec",
  "utils.Aparc2Aseg.output_spec",
  "utils.Apas2Aseg.input_spec",
  "utils.Apas2Aseg.output_spec",
  "utils.ApplyInverseDeformation.input_spec",
  "utils.ApplyInverseDeformation.output_spec",
  "utils.ApplyMask.input_spec",
  "utils.ApplyMask.output_spec",
  "utils.ApplyTransform.input_spec",
  "utils.ApplyTransform.output_spec",
  "utils.Autobox.input_spec",
  "utils.Autobox.output_spec",
  "utils.AvScale.input_spec",
  "utils.AvScale.output_spec",
  "utils.AverageAffineTransform.input_spec",
  "utils.AverageAffineTransform.output_spec",
  "utils.AverageImages.input_spec",
  "utils.AverageImages.output_spec",
  "utils.Axialize.input_spec",
  "utils.Axialize.output_spec",
  "utils.BinThresh.input_spec",
  "utils.BinThresh.output_spec",
  "utils.BinThreshTask.input_spec",
  "utils.BinThreshTask.output_spec",
  "utils.BrainMask.input_spec",
  "utils.BrainMask.output_spec",
  "utils.BrickStat.input_spec",
  "utils.BrickStat.output_spec",
  "utils.Bucket.input_spec",
  "utils.Bucket.output_spec",
  "utils.Calc.input_spec",
  "utils.Calc.output_spec",
  "utils.CalcCoregAffine.input_spec",
  "utils.CalcCoregAffine.output_spec",
  "utils.Cat.input_spec",
  "utils.Cat.output_spec",
  "utils.CatMatvec.input_spec",
  "utils.CatMatvec.output_spec",
  "utils.CenterMass.input_spec",
  "utils.CenterMass.output_spec",
  "utils.CheckTalairachAlignment.input_spec",
  "utils.CheckTalairachAlignment.output_spec",
  "utils.Complex.input_spec",
  "utils.Complex.output_spec",
  "utils.ComposeMultiTransform.input_spec",
  "utils.ComposeMultiTransform.output_spec",
  "utils.ComputeTDI.input_spec",
  "utils.ComputeTDI.output_spec",
  "utils.Contrast.input_spec",
  "utils.Contrast.output_spec",
  "utils.ConvertDset.input_spec",
  "utils.ConvertDset.output_spec",
  "utils.ConvertWarp.input_spec",
  "utils.ConvertWarp.output_spec",
  "utils.ConvertXFM.input_spec",
  "utils.ConvertXFM.output_spec",
  "utils.Copy.input_spec",
  "utils.Copy.output_spec",
  "utils.CopyGeom.input_spec",
  "utils.CopyGeom.output_spec",
  "utils.CreateJacobianDeterminantImage.input_spec",
  "utils.CreateJacobianDeterminantImage.output_spec",
  "utils.Curvature.input_spec",
  "utils.Curvature.output_spec",
  "utils.CurvatureStats.input_spec",
  "utils.CurvatureStats.output_spec",
  "utils.DWIExtract.input_spec",
  "utils.DWIExtract.output_spec",
  "utils.DicomImport.input_spec",
  "utils.DicomImport.output_spec",
  "utils.Dot.input_spec",
  "utils.Dot.output_spec",
  "utils.Edge3.input_spec",
  "utils.Edge3.output_spec",
  "utils.EditTransform.input_spec",
  "utils.EditTransform.output_spec",
  "utils.EulerNumber.input_spec",
  "utils.EulerNumber.output_spec",
  "utils.Eval.input_spec",
  "utils.Eval.output_spec",
  "utils.ExtractMainComponent.input_spec",
  "utils.ExtractMainComponent.output_spec",
  "utils.ExtractROI.input_spec",
  "utils.ExtractROI.output_spec",
  "utils.FWHMx.input_spec",
  "utils.FWHMx.output_spec",
  "utils.FilterRegressor.input_spec",
  "utils.FilterRegressor.output_spec",
  "utils.FixTopology.input_spec",
  "utils.FixTopology.output_spec",
  "utils.GCOR.input_spec",
  "utils.GCOR.output_spec",
  "utils.Generate5tt.input_spec",
  "utils.Generate5tt.output_spec",
  "utils.ImageInfo.input_spec",
  "utils.ImageInfo.output_spec",
  "utils.ImageMaths.input_spec",
  "utils.ImageMaths.output_spec",
  "utils.ImageMeants.input_spec",
  "utils.ImageMeants.output_spec",
  "utils.ImageStats.input_spec",
  "utils.ImageStats.output_spec",
  "utils.InvWarp.input_spec",
  "utils.InvWarp.output_spec",
  "utils.Jacobian.input_spec",
  "utils.Jacobian.output_spec",
  "utils.LTAConvert.input_spec",
  "utils.LTAConvert.output_spec",
  "utils.LabelGeometry.input_spec",
  "utils.LabelGeometry.output_spec",
  "utils.LocalBistat.input_spec",
  "utils.LocalBistat.output_spec",
  "utils.Localstat.input_spec",
  "utils.Localstat.output_spec",
  "utils.MRConvert.input_spec",
  "utils.MRConvert.output_spec",
  "utils.MRIFill.input_spec",
  "utils.MRIFill.output_spec",
  "utils.MRIMarchingCubes.input_spec",
  "utils.MRIMarchingCubes.output_spec",
  "utils.MRIPretess.input_spec",
  "utils.MRIPretess.output_spec",
  "utils.MRITessellate.input_spec",
  "utils.MRITessellate.output_spec",
  "utils.MRIsCalc.input_spec",
  "utils.MRIsCalc.output_spec",
  "utils.MRIsCombine.input_spec",
  "utils.MRIsCombine.output_spec",
  "utils.MRIsConvert.input_spec",
  "utils.MRIsConvert.output_spec",
  "utils.MRIsExpand.input_spec",
  "utils.MRIsExpand.output_spec",
  "utils.MRIsInflate.input_spec",
  "utils.MRIsInflate.output_spec",
  "utils.MRMath.input_spec",
  "utils.MRMath.output_spec",
  "utils.MakeAverageSubject.input_spec",
  "utils.MakeAverageSubject.output_spec",
  "utils.MakeSurfaces.input_spec",
  "utils.MakeSurfaces.output_spec",
  "utils.MaskTool.input_spec",
  "utils.MaskTool.output_spec",
  "utils.Merge.input_spec",
  "utils.Merge.output_spec",
  "utils.Mesh2PVE.input_spec",
  "utils.Mesh2PVE.output_spec",
  "utils.MotionOutliers.input_spec",
  "utils.MotionOutliers.output_spec",
  "utils.MultiplyImages.input_spec",
  "utils.MultiplyImages.output_spec",
  "utils.Notes.input_spec",
  "utils.Notes.output_spec",
  "utils.NwarpAdjust.input_spec",
  "utils.NwarpAdjust.output_spec",
  "utils.NwarpApply.input_spec",
  "utils.NwarpApply.output_spec",
  "utils.NwarpCat.input_spec",
  "utils.NwarpCat.output_spec",
  "utils.OneDToolPy.input_spec",
  "utils.OneDToolPy.output_spec",
  "utils.Overlay.input_spec",
  "utils.Overlay.output_spec",
  "utils.ParcellationStats.input_spec",
  "utils.ParcellationStats.output_spec",
  "utils.PlotMotionParams.input_spec",
  "utils.PlotMotionParams.output_spec",
  "utils.PlotTimeSeries.input_spec",
  "utils.PlotTimeSeries.output_spec",
  "utils.PowerSpectrum.input_spec",
  "utils.PowerSpectrum.output_spec",
  "utils.ReHo.input_spec",
  "utils.ReHo.output_spec",
  "utils.Refit.input_spec",
  "utils.Refit.output_spec",
  "utils.RelabelHypointensities.input_spec",
  "utils.RelabelHypointensities.output_spec",
  "utils.RemoveIntersection.input_spec",
  "utils.RemoveIntersection.output_spec",
  "utils.RemoveNeck.input_spec",
  "utils.RemoveNeck.output_spec",
  "utils.Reorient2Std.input_spec",
  "utils.Reorient2Std.output_spec",
  "utils.Resample.input_spec",
  "utils.Resample.output_spec",
  "utils.Reslice.input_spec",
  "utils.Reslice.output_spec",
  "utils.ResliceToReference.input_spec",
  "utils.ResliceToReference.output_spec",
  "utils.RobustFOV.input_spec",
  "utils.RobustFOV.output_spec",
  "utils.SVAdjustVoxSp.input_spec",
  "utils.SVAdjustVoxSp.output_spec",
  "utils.SVAdjustVoxSpTask.input_spec",
  "utils.SVAdjustVoxSpTask.output_spec",
  "utils.SVResample.input_spec",
  "utils.SVResample.output_spec",
  "utils.SVResampleTask.input_spec",
  "utils.SVResampleTask.output_spec",
  "utils.SampleToSurface.input_spec",
  "utils.SampleToSurface.output_spec",
  "utils.SigLoss.input_spec",
  "utils.SigLoss.output_spec",
  "utils.Similarity.input_spec",
  "utils.Similarity.output_spec",
  "utils.Slice.input_spec",
  "utils.Slice.output_spec",
  "utils.Slicer.input_spec",
  "utils.Slicer.output_spec",
  "utils.Smooth.input_spec",
  "utils.Smooth.output_spec",
  "utils.SmoothTessellation.input_spec",
  "utils.SmoothTessellation.output_spec",
  "utils.Sphere.input_spec",
  "utils.Sphere.output_spec",
  "utils.Split.input_spec",
  "utils.Split.output_spec",
  "utils.Surface2VolTransform.input_spec",
  "utils.Surface2VolTransform.output_spec",
  "utils.SurfaceSmooth.input_spec",
  "utils.SurfaceSmooth.output_spec",
  "utils.SurfaceSnapshots.input_spec",
  "utils.SurfaceSnapshots.output_spec",
  "utils.SurfaceTransform.input_spec",
  "utils.SurfaceTransform.output_spec",
  "utils.SwapDimensions.input_spec",
  "utils.SwapDimensions.output_spec",
  "utils.TCK2VTK.input_spec",
  "utils.TCK2VTK.output_spec",
  "utils.TCat.input_spec",
  "utils.TCat.output_spec",
  "utils.TCatSubBrick.input_spec",
  "utils.TCatSubBrick.output_spec",
  "utils.TStat.input_spec",
  "utils.TStat.output_spec",
  "utils.TVAdjustOriginTask.input_spec",
  "utils.TVAdjustOriginTask.output_spec",
  "utils.TVAdjustVoxSp.input_spec",
  "utils.TVAdjustVoxSp.output_spec",
  "utils.TVAdjustVoxSpTask.input_spec",
  "utils.TVAdjustVoxSpTask.output_spec",
  "utils.TVResample.input_spec",
  "utils.TVResample.output_spec",
  "utils.TVResampleTask.input_spec",
  "utils.TVResampleTask.output_spec",
  "utils.TVtool.input_spec",
  "utils.TVtool.output_spec",
  "utils.TVtoolTask.input_spec",
  "utils.TVtoolTask.output_spec",
  "utils.TalairachAVI.input_spec",
  "utils.TalairachAVI.output_spec",
  "utils.TalairachQC.input_spec",
  "utils.TalairachQC.output_spec",
  "utils.TensorMetrics.input_spec",
  "utils.TensorMetrics.output_spec",
  "utils.Tkregister2.input_spec",
  "utils.Tkregister2.output_spec",
  "utils.To3D.input_spec",
  "utils.To3D.output_spec",
  "utils.Undump.input_spec",
  "utils.Undump.output_spec",
  "utils.Unifize.input_spec",
  "utils.Unifize.output_spec",
  "utils.VolumeMask.input_spec",
  "utils.VolumeMask.output_spec",
  "utils.WarpPoints.input_spec",
  "utils.WarpPoints.output_spec",
  "utils.WarpPointsFromStd.input_spec",
  "utils.WarpPointsFromStd.output_spec",
  "utils.WarpPointsToStd.input_spec",
  "utils.WarpPointsToStd.output_spec",
  "utils.WarpUtils.input_spec",
  "utils.WarpUtils.output_spec",
  "utils.ZCutUp.input_spec",
  "utils.ZCutUp.output_spec",
  "utils.Zcat.input_spec",
  "utils.Zcat.output_spec",
  "utils.Zeropad.input_spec",
  "utils.Zeropad.output_spec",
  "utils.add_args_options",
  "utils.filemanip._cifs_table.extend",
  "utils.filemanip.loadpkl",
  "utils.nipype_cmd.main",
  "utils.nipype_cmd.run_instance",
  "utils.profiler.ResourceMonitor",
  "utils.provenance.pm.PROV",
  "utils.provenance.pm.PROV_BUNDLE",
  "utils.provenance.pm.ProvBundle",
  "utils.spm_docs._strip_header",
  "val_format",
  "vista.Vnifti2Image.input_spec",
  "vista.Vnifti2Image.output_spec",
  "vista.VtoMat.input_spec",
  "vista.VtoMat.output_spec",
  "visualization.ConvertScalarImageToRGB.input_spec",
  "visualization.ConvertScalarImageToRGB.output_spec",
  "visualization.CreateTiledMosaic.input_spec",
  "visualization.CreateTiledMosaic.output_spec",
  "votingbinaryholefillingimagefilter.VotingBinaryHoleFillingImageFilter.input_spec",
  "votingbinaryholefillingimagefilter.VotingBinaryHoleFillingImageFilter.output_spec",
  "vtk.vtkVersion.GetVTKMajorVersion",
  "vtk.vtkVersion.GetVTKMinorVersion",
  "vtkbase.tvtk.PolyDataReader",
  "vtkbase.tvtk.PolyDataWriter",
  "warnings.warn",
  "win32con",
  "win32con.LOCKFILE_EXCLUSIVE_LOCK",
  "win32con.LOCKFILE_FAIL_IMMEDIATELY",
  "win32file",
  "wrapped_func",
  "wrappers.Function.input_spec",
  "wrappers.Function.output_spec"
 ],
 "deps": {
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-5.0.0-py34_1",
   "ipython/conda-forge/linux-64/ipython-7.10.2-py36h5ca1d4c_0",
   "ipython/conda-forge/linux-64/ipython-7.12.0-py36h5ca1d4c_0"
  ],
  "MySQLdb": [
   "mysql-python/conda-forge/linux-64/mysql-python-1.2.5-py27h7f98852_0",
   "mysqlclient/conda-forge/linux-64/mysqlclient-1.3.13-py27_1000",
   "mysqlclient/conda-forge/linux-64/mysqlclient-1.4.6-py27haf22ab1_1"
  ],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "_pickle": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "_pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "argparse": [
   "argparse/conda-forge/osx-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "backports": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "boto": [
   "boto/conda-forge/noarch/boto-2.49.0-py_0"
  ],
  "boto3": [
   "boto3/conda-forge/noarch/boto3-1.10.14-py_0",
   "boto3/conda-forge/noarch/boto3-1.10.18-py_0",
   "boto3/conda-forge/noarch/boto3-1.12.24-pyh8c360ce_0",
   "boto3/conda-forge/noarch/boto3-1.12.41-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.12.9-py_1",
   "boto3/conda-forge/noarch/boto3-1.13.18-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.13.5-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.13.8-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.14.1-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.14.6-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.15.12-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.15.6-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.15.9-pyh9f0ad1d_0",
   "boto3/conda-forge/noarch/boto3-1.16.32-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.16.42-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.16.43-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.16.56-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.16.63-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.17.112-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.17.36-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.17.37-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.17.68-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.17.7-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.18.0-pyhd8ed1ab_0",
   "boto3/conda-forge/noarch/boto3-1.5.36-py_0",
   "boto3/conda-forge/noarch/boto3-1.7.40-py_0",
   "boto3/conda-forge/noarch/boto3-1.8.7-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.104-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.111-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.141-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.161-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.230-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.235-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.31-py_1",
   "boto3/conda-forge/noarch/boto3-1.9.44-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.57-py_0",
   "boto3/conda-forge/noarch/boto3-1.9.67-py_0"
  ],
  "botocore": [
   "botocore/conda-forge/noarch/botocore-1.10.23-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.29-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.42-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.47-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.5-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.78-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.110-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.118-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.134-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.135-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.201-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.223-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.224-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.35-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.47-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.48-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.90-py_0",
   "botocore/conda-forge/noarch/botocore-1.13.0-py_2",
   "botocore/conda-forge/noarch/botocore-1.13.31-py_0",
   "botocore/conda-forge/noarch/botocore-1.13.41-py_0",
   "botocore/conda-forge/noarch/botocore-1.14.16-py_0",
   "botocore/conda-forge/noarch/botocore-1.15.13-py_0",
   "botocore/conda-forge/noarch/botocore-1.15.39-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.16.19-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.16.8-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.17.58-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.18.8-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.20.108-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.111-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.31-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.44-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.55-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.67-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.79-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.8-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.93-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.21.4-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.8.39-py_0",
   "botocore/conda-forge/noarch/botocore-1.9.13-py_0"
  ],
  "cfflib": [
   "cfflib/conda-forge/noarch/cfflib-2.0.5-py_0"
  ],
  "click": [
   "click/conda-forge/noarch/click-5.1-py_0",
   "click/conda-forge/noarch/click-6.7-py_1",
   "click/conda-forge/noarch/click-7.0-py_0",
   "click/conda-forge/noarch/click-7.1-pyh8c360ce_0",
   "click/conda-forge/noarch/click-7.1.1-pyh8c360ce_0"
  ],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "concurrent": [
   "futures/conda-forge/linux-64/futures-3.2.0-py27_0",
   "futures/conda-forge/osx-64/futures-3.3.0-py27h8c360ce_1",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython"
  ],
  "configparser": [
   "configparser/conda-forge/linux-64/configparser-3.7.1-py27_1",
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "configparser/conda-forge/noarch/configparser-5.0.1-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datalad": [
   "datalad/conda-forge/linux-64/datalad-0.13.7-py36h5fab9bb_0",
   "datalad/conda-forge/linux-64/datalad-0.13.7-py38h578d9bd_0",
   "datalad/conda-forge/noarch/datalad-0.9.3-py_0"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.2-py_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.5-py_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.8.1-py_0",
   "python-dateutil/conda-forge/noarch/python-dateutil-2.8.2-pyhd8ed1ab_0"
  ],
  "dcmstack": [
   "dcmstack/conda-forge/osx-64/dcmstack-0.7-py27_0"
  ],
  "dicom": [
   "pydicom/conda-forge/noarch/pydicom-1.1.0-py_0",
   "pydicom/conda-forge/noarch/pydicom-1.2.0-py_0",
   "pydicom/conda-forge/noarch/pydicom-1.2.1-py_0",
   "pydicom/conda-forge/noarch/pydicom-1.4.1-py_0",
   "pydicom/conda-forge/noarch/pydicom-2.1.0-pyhd3deb0d_0",
   "pydicom/conda-forge/noarch/pydicom-2.2.1-pyh6c4a22f_0"
  ],
  "dipy": [
   "dipy/conda-forge/win-64/dipy-1.2.0-py36h3e76320_1",
   "dipy/conda-forge/win-64/dipy-1.4.1-py39hb0a1f21_0"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "docutils": [
   "docutils/conda-forge/linux-64/docutils-0.16-py27h8c360ce_1"
  ],
  "fcntl": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "fnmatch": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "funcsigs": [
   "funcsigs/conda-forge/noarch/funcsigs-1.0.2-py_1",
   "funcsigs/conda-forge/noarch/funcsigs-1.0.2-py_2",
   "funcsigs/conda-forge/noarch/funcsigs-1.0.2-py_3"
  ],
  "future": [
   "future/conda-forge/linux-64/future-0.16.0-py34_0"
  ],
  "getpass": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "imghdr": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "importlib": [
   "importlib/conda-forge/linux-64/importlib-1.0.4-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ipyparallel": [
   "ipyparallel/conda-forge/linux-64/ipyparallel-6.3.0-py36h9f0ad1d_1",
   "ipyparallel/conda-forge/linux-64/ipyparallel-6.3.0-py38h578d9bd_2"
  ],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.10-py_1",
   "jinja2/conda-forge/noarch/jinja2-2.11.3-pyh44b312d_0",
   "jinja2/conda-forge/noarch/jinja2-3.0.0-pyhd8ed1ab_0",
   "jinja2/conda-forge/noarch/jinja2-3.0.1-pyhd8ed1ab_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "keyword": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "locale": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "lockfile": [
   "lockfile/conda-forge/noarch/lockfile-0.12.2-py_1"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.1.1-py37hfd891ef_0",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.1.1-py38h250f245_2",
   "matplotlib/conda-forge/linux-64/matplotlib-1.5.3-np111py34_0"
  ],
  "mock": [
   "mock/conda-forge/linux-64/mock-2.0.0-py27_1000",
   "mock/conda-forge/linux-64/mock-3.0.3-py37_0"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.1-py_1",
   "networkx/conda-forge/noarch/networkx-2.2-py_1",
   "networkx/conda-forge/noarch/networkx-2.4-py_1",
   "networkx/conda-forge/noarch/networkx-2.5-py_0",
   "networkx/conda-forge/noarch/networkx-2.6.1-pyhd8ed1ab_0",
   "networkx/conda-forge/noarch/networkx-2.6.1-pyhd8ed1ab_1"
  ],
  "nibabel": [],
  "nilearn": [
   "nilearn/conda-forge/noarch/nilearn-0.3.1-py_0",
   "nilearn/conda-forge/noarch/nilearn-0.5.1-pyh24bf2e0_0",
   "nilearn/conda-forge/noarch/nilearn-0.5.2-pyh24bf2e0_0",
   "nilearn/conda-forge/noarch/nilearn-0.6.0-pyh5ca1d4c_0",
   "nilearn/conda-forge/noarch/nilearn-0.6.1-pyh5ca1d4c_0",
   "nilearn/conda-forge/noarch/nilearn-0.6.2-pyh5ca1d4c_0",
   "nilearn/conda-forge/noarch/nilearn-0.7.0-pyhd8ed1ab_0",
   "nilearn/conda-forge/noarch/nilearn-0.7.1-pyhd8ed1ab_0"
  ],
  "nipy": [
   "nipy/conda-forge/linux-64/nipy-0.4.1-np112py36_0"
  ],
  "nipype": [
   "nipype/conda-forge/linux-64/nipype-1.1.4-py35_0",
   "nipype/conda-forge/linux-64/nipype-1.3.0-py38_0",
   "nipype/conda-forge/linux-64/nipype-1.6.0-py36h5fab9bb_0"
  ],
  "nitime": [
   "nitime/conda-forge/linux-64/nitime-0.7-np110py27_0",
   "nitime/conda-forge/linux-64/nitime-0.9-py36h92226af_2",
   "nitime/conda-forge/linux-64/nitime-0.9-py38h5c078b8_0"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.17.5-py36h95a1406_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "packaging": [
   "packaging/conda-forge/noarch/packaging-18.0-py_0",
   "packaging/conda-forge/noarch/packaging-19.0-py_0",
   "packaging/conda-forge/noarch/packaging-19.2-py_0",
   "packaging/conda-forge/noarch/packaging-20.0-py_0",
   "packaging/conda-forge/noarch/packaging-20.1-py_0",
   "packaging/conda-forge/noarch/packaging-20.7-pyhd3deb0d_0",
   "packaging/conda-forge/noarch/packaging-20.8-pyhd3deb0d_0",
   "packaging/conda-forge/noarch/packaging-21.0-pyhd8ed1ab_0"
  ],
  "pandas": [],
  "paramiko": [
   "paramiko/conda-forge/linux-64/paramiko-2.1.2-py35_0",
   "paramiko/conda-forge/linux-64/paramiko-2.4.0-py27_0",
   "paramiko/conda-forge/linux-64/paramiko-2.4.1-py27_1000",
   "paramiko/conda-forge/noarch/paramiko-2.3.1-py_0",
   "paramiko/conda-forge/noarch/paramiko-2.7.1-pyh9f0ad1d_1"
  ],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.12-py_0",
   "pdbpp/conda-forge/noarch/pdbpp-0.9.14-py_0",
   "pdbpp/conda-forge/noarch/pdbpp-0.9.15-py_0",
   "pdbpp/conda-forge/noarch/pdbpp-0.9.5-py_1",
   "pdbpp/conda-forge/noarch/pdbpp-0.9.6-py_0",
   "pdbpp/conda-forge/noarch/pdbpp-0.9.8-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-40.6.1-py36_0",
   "setuptools/conda-forge/linux-64/setuptools-46.3.0-py38h32f6830_0",
   "setuptools/conda-forge/linux-64/setuptools-49.1.2-py38h32f6830_0"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "portalocker": [
   "concurrentloghandler/conda-forge/linux-64/concurrentloghandler-0.9.1-py38h32f6830_1002",
   "concurrentloghandler/conda-forge/osx-64/concurrentloghandler-0.9.1-py36hc560c46_1002",
   "portalocker/conda-forge/linux-64/portalocker-1.6.0-py36h9f0ad1d_0",
   "portalocker/conda-forge/noarch/portalocker-1.2.1-py_0",
   "portalocker/conda-forge/noarch/portalocker-1.3.0-py_0"
  ],
  "posixpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pprint": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "prov": [
   "prov/conda-forge/noarch/prov-1.5.1-py_1",
   "prov/conda-forge/noarch/prov-1.5.3-py_0",
   "prov/conda-forge/noarch/prov-2.0.0-pyhd3deb0d_0"
  ],
  "psutil": [
   "psutil/conda-forge/linux-64/psutil-5.7.3-py39h38d8fee_0"
  ],
  "pylab": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.1.1-py37hfd891ef_0",
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.1.1-py38h250f245_2",
   "matplotlib/conda-forge/linux-64/matplotlib-1.5.3-np111py34_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "scipy": [],
  "seaborn": [
   "seaborn-base/conda-forge/noarch/seaborn-base-0.10.1-py_1",
   "seaborn-base/conda-forge/noarch/seaborn-base-0.11.1-pyhd8ed1ab_1",
   "seaborn/conda-forge/noarch/seaborn-0.10.0-py_0",
   "seaborn/conda-forge/noarch/seaborn-0.10.0-py_1",
   "seaborn/conda-forge/noarch/seaborn-0.10.1-py_0",
   "seaborn/conda-forge/noarch/seaborn-0.9.0-py_0"
  ],
  "select": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "shlex": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "simplejson": [
   "simplejson/conda-forge/linux-64/simplejson-3.16.0-py27h470a237_2",
   "simplejson/conda-forge/linux-64/simplejson-3.16.0-py35h470a237_2",
   "simplejson/conda-forge/linux-64/simplejson-3.17.0-py38h516909a_0"
  ],
  "skimage": [
   "scikit-image/conda-forge/linux-64/scikit-image-0.12.3-np112py27_1",
   "scikit-image/conda-forge/win-64/scikit-image-0.13.0-np113py36_0"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "sqlite3": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "stat": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "traits": [
   "traits/conda-forge/linux-64/traits-6.2.0-py36h8f6f2f9_0"
  ],
  "tvtk": [
   "mayavi/conda-forge/linux-64/mayavi-4.6.1-py36_0"
  ],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "vtk": [
   "paraview/conda-forge/linux-64/paraview-5.8.0rc3-py38hf29adf7_1",
   "paraview/conda-forge/linux-64/paraview-5.9.0-py36hf5abf66_1",
   "paraview/conda-forge/linux-64/paraview-5.9.0rc2-py39h8787616_5",
   "tomviz/conda-forge/linux-64/tomviz-1.9.0.post145-py37h152eb46_1",
   "vtk/conda-forge/linux-64/vtk-7.0.0-py27_0",
   "vtk/conda-forge/linux-64/vtk-7.1.1-py35_202",
   "vtk/conda-forge/linux-64/vtk-9.0.1-no_osmesa_py37hd9d43e1_106"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "xvfbwrapper": [
   "xvfbwrapper/conda-forge/osx-64/xvfbwrapper-0.2.8-py35_0",
   "xvfbwrapper/conda-forge/osx-64/xvfbwrapper-0.2.9-py37hc8dfbb8_1003"
  ]
 }
}