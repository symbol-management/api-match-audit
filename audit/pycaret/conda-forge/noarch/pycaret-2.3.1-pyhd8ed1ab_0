{
 "bad": [
  "CategoricalDistribution",
  "ConfigSpace",
  "ConfigSpace.hyperparameters",
  "ConfigSpace.hyperparameters.CategoricalHyperparameter",
  "ConfigSpace.hyperparameters.UniformFloatHyperparameter",
  "ConfigSpace.hyperparameters.UniformIntegerHyperparameter",
  "IPython.display.HTML",
  "IPython.display.clear_output",
  "IPython.display.display",
  "IPython.display.update_display",
  "LogUniformInteger",
  "PredictionResult",
  "UniformDistribution",
  "_choose_better",
  "_feature",
  "_get_cv_splitter",
  "_get_groups",
  "_get_metric",
  "_get_model_id",
  "_get_model_name",
  "_get_pipeline_fit_kwargs",
  "_is_multiclass",
  "_log_plot",
  "_mlflow_log_model",
  "_tsne_anomaly",
  "_tsne_clustering",
  "assign_model",
  "azure.storage.blob",
  "azure.storage.blob.BlobClient",
  "azure.storage.blob.BlobServiceClient",
  "azure.storage.blob.BlobServiceClient.from_connection_string",
  "azure.storage.blob.ContainerClient",
  "boruta.BorutaPy.__doc__",
  "calculate_loss",
  "cls",
  "collections.Hashable",
  "collections.Iterable",
  "collections.abc.Hashable",
  "collections.abc.Iterable",
  "cuml.__version__",
  "cuml.cluster.DBSCAN",
  "cuml.cluster.KMeans",
  "cuml.ensemble.RandomForestClassifier",
  "cuml.ensemble.RandomForestRegressor",
  "cuml.linear_model.Ridge",
  "cuml.svm.SVC",
  "deepcopy",
  "filter_model_df_by_type",
  "fit_if_not_fitted",
  "gc",
  "gc.collect",
  "gensim",
  "gensim.__version__",
  "gensim.corpora",
  "gensim.corpora.Dictionary",
  "gensim.models.CoherenceModel",
  "gensim.models.HdpModel",
  "gensim.models.Phrases",
  "gensim.models.RpModel",
  "gensim.models.ldamodel.LdaModel",
  "gensim.models.ldamulticore.LdaMulticore",
  "gensim.models.lsimodel.LsiModel",
  "gensim.models.phrases.Phraser",
  "gensim.utils.simple_preprocess",
  "get_CS_distributions",
  "get_hyperopt_distributions",
  "get_iter",
  "get_optuna_distributions",
  "get_skopt_distributions",
  "get_time_features",
  "get_top_n_bigram",
  "get_top_n_trigram",
  "get_top_n_words",
  "get_tune_distributions",
  "google.cloud",
  "google.cloud.storage",
  "google.cloud.storage.Client",
  "graph",
  "hyperopt.pyll.scope.int",
  "id.replace",
  "is_fitted",
  "is_sklearn_cv_generator",
  "is_sklearn_pipeline",
  "is_tree",
  "matplotlib.axes._axes._log.setLevel",
  "nltk.corpus.stopwords.words",
  "numpy.NaN",
  "numpy.inf",
  "numpy.log",
  "numpy.nan",
  "numpy.power",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.tan",
  "numpy.uint64",
  "obj",
  "object.__dir__",
  "optuna.distributions.IntLogUniformDistribution",
  "os.path.exists",
  "os.remove",
  "pandas.DataFrame.from_dict",
  "patches.boruta_py.BorutaPyPatched",
  "plotly.graph_objects.Figure",
  "plotly.graph_objects.Scatter",
  "psutil",
  "psutil.cpu_count",
  "psutil.virtual_memory",
  "pull",
  "pycaret.internal.tabular.MLUsecase.ANOMALY",
  "pycaret.internal.tabular.MLUsecase.CLASSIFICATION",
  "pycaret.internal.tabular.MLUsecase.CLUSTERING",
  "pycaret.internal.tabular.MLUsecase.REGRESSION",
  "pydantic.main.ModelMetaclass",
  "ray.tune",
  "ray.tune.choice",
  "ray.tune.loguniform",
  "ray.tune.quniform",
  "ray.tune.sample.Integer",
  "ray.tune.sample.LogUniform",
  "ray.tune.schedulers.HyperBandForBOHB",
  "ray.tune.suggest.bohb.TuneBOHB",
  "ray.tune.suggest.hyperopt.HyperOptSearch",
  "ray.tune.uniform",
  "replace_lables_in_column",
  "rng_randint",
  "scikitplot.metrics.plt.rcParams",
  "shap",
  "shap.TreeExplainer",
  "shap.dependence_plot",
  "shap.force_plot",
  "shap.initjs",
  "shap.save_html",
  "shap.summary_plot",
  "sklearn",
  "sklearn.__version__",
  "sklearn.base.BaseEstimator",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.base.is_classifier",
  "sklearn.calibration.calibration_curve",
  "sklearn.clone",
  "sklearn.cluster",
  "sklearn.cluster.KMeans",
  "sklearn.compose",
  "sklearn.compose.TransformedTargetRegressor",
  "sklearn.cross_decomposition.PLSRegression",
  "sklearn.decomposition.IncrementalPCA",
  "sklearn.decomposition.KernelPCA",
  "sklearn.decomposition.NMF",
  "sklearn.decomposition.PCA",
  "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
  "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
  "sklearn.ensemble.AdaBoostClassifier",
  "sklearn.ensemble.AdaBoostRegressor",
  "sklearn.ensemble.BaseEnsemble",
  "sklearn.ensemble.ExtraTreesClassifier",
  "sklearn.ensemble.ExtraTreesRegressor",
  "sklearn.ensemble.GradientBoostingClassifier",
  "sklearn.ensemble.GradientBoostingRegressor",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.ensemble.VotingClassifier",
  "sklearn.ensemble.VotingRegressor",
  "sklearn.ensemble._forest.BaseForest",
  "sklearn.exceptions.NotFittedError",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.TfidfTransformer",
  "sklearn.feature_extraction.text.TfidfVectorizer",
  "sklearn.gaussian_process.GaussianProcessClassifier",
  "sklearn.gaussian_process.GaussianProcessRegressor",
  "sklearn.impute.SimpleImputer",
  "sklearn.impute._base._BaseImputer",
  "sklearn.kernel_ridge.KernelRidge",
  "sklearn.linear_model.ARDRegression",
  "sklearn.linear_model.BayesianRidge",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.HuberRegressor",
  "sklearn.linear_model.Lars",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LassoLars",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.OrthogonalMatchingPursuit",
  "sklearn.linear_model.PassiveAggressiveRegressor",
  "sklearn.linear_model.RANSACRegressor",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.RidgeClassifier",
  "sklearn.linear_model.SGDClassifier",
  "sklearn.linear_model.TheilSenRegressor",
  "sklearn.linear_model._base.LinearClassifierMixin",
  "sklearn.manifold.TSNE",
  "sklearn.metrics",
  "sklearn.metrics._regression._check_reg_targets",
  "sklearn.metrics._scorer._BaseScorer",
  "sklearn.metrics._scorer._PredictScorer",
  "sklearn.metrics._scorer._ProbaScorer",
  "sklearn.metrics._scorer._ThresholdScorer",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.calinski_harabasz_score",
  "sklearn.metrics.cohen_kappa_score",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.items",
  "sklearn.metrics.make_scorer",
  "sklearn.metrics.max_error",
  "sklearn.metrics.mean_absolute_error",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.mean_squared_log_error",
  "sklearn.metrics.precision_score",
  "sklearn.metrics.r2_score",
  "sklearn.metrics.recall_score",
  "sklearn.metrics.roc_auc_score",
  "sklearn.metrics.silhouette_score",
  "sklearn.model_selection.BaseCrossValidator",
  "sklearn.model_selection.GroupKFold",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.TimeSeriesSplit",
  "sklearn.model_selection._search",
  "sklearn.model_selection._search.GridSearchCV",
  "sklearn.model_selection._search.RandomizedSearchCV",
  "sklearn.model_selection._split._BaseKFold",
  "sklearn.model_selection.check_cv",
  "sklearn.model_selection.cross_val_predict",
  "sklearn.model_selection.cross_validate",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.naive_bayes.GaussianNB",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.neighbors.KNeighborsRegressor",
  "sklearn.neural_network.MLPClassifier",
  "sklearn.neural_network.MLPRegressor",
  "sklearn.pipeline",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.KBinsDiscretizer",
  "sklearn.preprocessing.LabelBinarizer",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.MaxAbsScaler",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.OrdinalEncoder",
  "sklearn.preprocessing.PowerTransformer",
  "sklearn.preprocessing.QuantileTransformer",
  "sklearn.preprocessing.RobustScaler",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.normalize",
  "sklearn.set_config",
  "sklearn.svm.SVC",
  "sklearn.svm.SVR",
  "sklearn.tree.BaseDecisionTree",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree.plot_tree",
  "sklearn.utils._print_elapsed_time",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.column_or_1d",
  "sklearn.utils.metaestimators.if_delegate_has_method",
  "sklearn.utils.validation._deprecate_positional_args",
  "sklearn.utils.validation.check_X_y",
  "sklearn.utils.validation.check_consistent_length",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.check_random_state",
  "sklearn_base",
  "supports_partial_fit",
  "sys",
  "sys.exit",
  "sys.modules",
  "time",
  "time.gmtime",
  "time.strftime",
  "time.time",
  "total_combintaions_in_grid",
  "unittest.mock.patch.dict",
  "wordcloud.__version__"
 ],
 "deps": {
  "CategoricalDistribution": [],
  "ConfigSpace": [],
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-7.23.0-py39hef51801_0"
  ],
  "LogUniformInteger": [],
  "PredictionResult": [],
  "UniformDistribution": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_choose_better": [],
  "_feature": [],
  "_get_cv_splitter": [],
  "_get_groups": [],
  "_get_metric": [],
  "_get_model_id": [],
  "_get_model_name": [],
  "_get_pipeline_fit_kwargs": [],
  "_is_multiclass": [],
  "_log_plot": [],
  "_mlflow_log_model": [],
  "_tsne_anomaly": [],
  "_tsne_clustering": [],
  "assign_model": [],
  "awscli": [
   "awscli/conda-forge/linux-64/awscli-1.16.227-py37_0",
   "awscli/conda-forge/linux-64/awscli-1.16.313-py27_0",
   "awscli/conda-forge/linux-64/awscli-1.19.32-py39hf3d152e_0",
   "awscli/conda-forge/linux-64/awscli-1.19.59-py36h5fab9bb_1"
  ],
  "azure": [],
  "boruta": [
   "boruta_py/conda-forge/noarch/boruta_py-0.3-py_0"
  ],
  "boto3": [
   "boto3/conda-forge/noarch/boto3-1.13.1-pyh9f0ad1d_0"
  ],
  "calculate_loss": [],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "catboost": [
   "catboost/conda-forge/linux-64/catboost-0.11.0-py35_0",
   "catboost/conda-forge/linux-64/catboost-0.22-py36h9f0ad1d_1"
  ],
  "cls": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cufflinks": [
   "cufflinks-py/conda-forge/noarch/cufflinks-py-0.13.0-py_1",
   "python-cufflinks/conda-forge/noarch/python-cufflinks-0.14.4-py_0"
  ],
  "cuml": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "deepcopy": [],
  "enum": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "fastapi": [
   "fastapi/conda-forge/noarch/fastapi-0.52.0-py_0"
  ],
  "filter_model_df_by_type": [],
  "fit_if_not_fitted": [],
  "gc": [],
  "gensim": [],
  "get_CS_distributions": [],
  "get_hyperopt_distributions": [],
  "get_iter": [],
  "get_optuna_distributions": [],
  "get_skopt_distributions": [],
  "get_time_features": [],
  "get_top_n_bigram": [],
  "get_top_n_trigram": [],
  "get_top_n_words": [],
  "get_tune_distributions": [],
  "google": [],
  "graph": [],
  "hpbandster": [
   "hpbandster/conda-forge/noarch/hpbandster-0.7.4-pyhd8ed1ab_0"
  ],
  "hyperopt": [
   "hyperopt/conda-forge/noarch/hyperopt-0.2.2-py_0"
  ],
  "id": [],
  "imblearn": [
   "imbalanced-learn/conda-forge/noarch/imbalanced-learn-0.4.1-py_0"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ipywidgets": [
   "ipywidgets/conda-forge/noarch/ipywidgets-7.5.0-py_0"
  ],
  "is_fitted": [],
  "is_sklearn_cv_generator": [],
  "is_sklearn_pipeline": [],
  "is_tree": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-0.14.0-py_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "lightgbm": [
   "lightgbm/conda-forge/linux-64/lightgbm-2.2.1-py27hfc679d8_0"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "mlflow": [
   "mlflow-skinny/conda-forge/linux-64/mlflow-skinny-1.17.0-py36hef5108c_0"
  ],
  "mlxtend": [
   "mlxtend/conda-forge/noarch/mlxtend-0.17.1-py_1"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "nlp": [
   "nlp/conda-forge/noarch/nlp-0.4.0-pyh9f0ad1d_0"
  ],
  "nltk": [
   "nltk/conda-forge/noarch/nltk-3.6-pyhd8ed1ab_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "obj": [],
  "object": [],
  "optuna": [
   "optuna/conda-forge/noarch/optuna-1.2.0-py_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pandas_profiling": [
   "pandas-profiling/conda-forge/noarch/pandas-profiling-3.0.0-pyhd8ed1ab_0"
  ],
  "patches": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "plotly": [
   "plotly/conda-forge/noarch/plotly-4.4.1-py_0"
  ],
  "psutil": [],
  "pull": [],
  "pyLDAvis": [
   "pyldavis/conda-forge/noarch/pyldavis-2.1.2-pyhd8ed1ab_1"
  ],
  "pycaret": [],
  "pydantic": [
   "pydantic/conda-forge/noarch/pydantic-0.18.1-py_1"
  ],
  "pyod": [
   "pyod/conda-forge/noarch/pyod-0.8.6-pyh44b312d_0"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ray": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "replace_lables_in_column": [],
  "rng_randint": [],
  "scikitplot": [
   "scikit-plot/conda-forge/noarch/scikit-plot-0.3.7-py_0"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "secrets": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "shap": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "sklearn": [],
  "sklearn_base": [],
  "skopt": [
   "scikit-optimize/conda-forge/noarch/scikit-optimize-0.4-py_0"
  ],
  "spacy": [
   "spacy/conda-forge/linux-64/spacy-2.0.13-py36hf8a1672_0"
  ],
  "streamlit": [
   "streamlit/conda-forge/noarch/streamlit-0.71.0-pyhd8ed1ab_1"
  ],
  "supports_partial_fit": [],
  "sys": [],
  "textblob": [
   "textblob/conda-forge/noarch/textblob-0.15.2-py_0"
  ],
  "time": [],
  "total_combintaions_in_grid": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tune_sklearn": [
   "tune-sklearn/conda-forge/noarch/tune-sklearn-0.2.1-pyhd8ed1ab_0"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "umap": [
   "umap-learn/conda-forge/linux-64/umap-learn-0.3.7-py27_1000"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wordcloud": [
   "wordcloud/conda-forge/linux-64/wordcloud-1.2.1-py34_0"
  ],
  "xgboost": [
   "py-xgboost/conda-forge/linux-64/py-xgboost-1.1.1-py37hc8dfbb8_0",
   "xgboost/conda-forge/linux-64/xgboost-0.6a2-py27_2"
  ],
  "yellowbrick": [
   "yellowbrick/conda-forge/noarch/yellowbrick-1.2.1-pyh44b312d_0",
   "yellowbrick/conda-forge/noarch/yellowbrick-1.3.post1-pyh44b312d_0"
  ]
 }
}