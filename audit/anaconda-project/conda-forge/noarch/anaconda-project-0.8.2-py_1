{
 "bad": [
  "CommandLineToArgvW",
  "FakeInfo",
  "LocalFree",
  "ProjectCommandClass",
  "Queue.Queue",
  "Res",
  "TestCmd",
  "Thing",
  "UselessProvider",
  "_fn",
  "_helper",
  "_linearized_ancestors",
  "_parse_channels",
  "_parse_packages",
  "_parse_platforms",
  "_parse_string_list",
  "_stages_for",
  "_start_over",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "add_command_name_arg",
  "add_directory_arg",
  "add_env_spec_arg",
  "add_env_spec_name_arg",
  "add_package_args",
  "add_platforms_list",
  "add_prepare_args",
  "add_service_variable_name",
  "all_platforms_string",
  "anaconda_project._beta_test_mode",
  "anaconda_project._enter_beta_test_mode",
  "anaconda_project.api.AnacondaProject",
  "anaconda_project.api.AnacondaProject.add_command",
  "anaconda_project.api.AnacondaProject.add_download",
  "anaconda_project.api.AnacondaProject.add_env_spec",
  "anaconda_project.api.AnacondaProject.add_packages",
  "anaconda_project.api.AnacondaProject.add_platforms",
  "anaconda_project.api.AnacondaProject.add_service",
  "anaconda_project.api.AnacondaProject.add_variables",
  "anaconda_project.api.AnacondaProject.archive",
  "anaconda_project.api.AnacondaProject.clean",
  "anaconda_project.api.AnacondaProject.export_env_spec",
  "anaconda_project.api.AnacondaProject.load_project",
  "anaconda_project.api.AnacondaProject.lock",
  "anaconda_project.api.AnacondaProject.remove_command",
  "anaconda_project.api.AnacondaProject.remove_download",
  "anaconda_project.api.AnacondaProject.remove_env_spec",
  "anaconda_project.api.AnacondaProject.remove_packages",
  "anaconda_project.api.AnacondaProject.remove_platforms",
  "anaconda_project.api.AnacondaProject.remove_service",
  "anaconda_project.api.AnacondaProject.remove_variables",
  "anaconda_project.api.AnacondaProject.set_properties",
  "anaconda_project.api.AnacondaProject.set_variables",
  "anaconda_project.api.AnacondaProject.unarchive",
  "anaconda_project.api.AnacondaProject.unlock",
  "anaconda_project.api.AnacondaProject.unprepare",
  "anaconda_project.api.AnacondaProject.unset_variables",
  "anaconda_project.api.AnacondaProject.update",
  "anaconda_project.api.AnacondaProject.update_command",
  "anaconda_project.api.AnacondaProject.upload",
  "anaconda_project.archiver._FileInfo",
  "anaconda_project.archiver._FilePattern",
  "anaconda_project.archiver._UnarchiveStatus",
  "anaconda_project.archiver._archive_project",
  "anaconda_project.archiver._enumerate_archive_files",
  "anaconda_project.archiver._extract_files_tar",
  "anaconda_project.archiver._extract_files_zip",
  "anaconda_project.archiver._get_source_and_dest_files",
  "anaconda_project.archiver._git_filter",
  "anaconda_project.archiver._git_ignored_files",
  "anaconda_project.archiver._ignore_file_filter",
  "anaconda_project.archiver._leaf_infos",
  "anaconda_project.archiver._list_files_tar",
  "anaconda_project.archiver._list_files_zip",
  "anaconda_project.archiver._list_project",
  "anaconda_project.archiver._list_relative_paths_for_unignored_project_files",
  "anaconda_project.archiver._load_ignore_file",
  "anaconda_project.archiver._parse_ignore_file",
  "anaconda_project.archiver._split_after_first",
  "anaconda_project.archiver._unarchive_project",
  "anaconda_project.archiver._write_tar",
  "anaconda_project.archiver._write_zip",
  "anaconda_project.cli.main",
  "anaconda_project.client._Client",
  "anaconda_project.client._UploadedStatus",
  "anaconda_project.client._upload",
  "anaconda_project.conda_manager.CondaEnvironmentDeviations",
  "anaconda_project.conda_manager.CondaLockSet",
  "anaconda_project.conda_manager.CondaManager",
  "anaconda_project.conda_manager.CondaManagerError",
  "anaconda_project.conda_manager._conda_manager_classes",
  "anaconda_project.conda_manager._pretty_diff",
  "anaconda_project.conda_manager.new_conda_manager",
  "anaconda_project.conda_manager.pop_conda_manager_class",
  "anaconda_project.conda_manager.push_conda_manager_class",
  "anaconda_project.env_spec.EnvSpec",
  "anaconda_project.env_spec._anaconda_default_env_spec",
  "anaconda_project.env_spec._combine_conda_package_lists",
  "anaconda_project.env_spec._combine_keeping_last_duplicate",
  "anaconda_project.env_spec._conda_combine_key",
  "anaconda_project.env_spec._find_importable_spec",
  "anaconda_project.env_spec._find_out_of_sync_importable_spec",
  "anaconda_project.env_spec._load_environment_yml",
  "anaconda_project.env_spec._load_importable",
  "anaconda_project.env_spec._load_requirements_txt",
  "anaconda_project.env_spec._pip_combine_key",
  "anaconda_project.env_spec._requirement_option_re",
  "anaconda_project.frontend.Frontend",
  "anaconda_project.frontend.NullFrontend",
  "anaconda_project.frontend._ErrorRecordingFrontendProxy",
  "anaconda_project.frontend._new_error_recorder",
  "anaconda_project.frontend._null_frontend",
  "anaconda_project.frontend._singleton_null_frontend",
  "anaconda_project.internal.cli.activate.activate",
  "anaconda_project.internal.cli.activate.main",
  "anaconda_project.internal.cli.archive.archive_command",
  "anaconda_project.internal.cli.archive.main",
  "anaconda_project.internal.cli.bug_handler.handle_bugs",
  "anaconda_project.internal.cli.clean.clean_command",
  "anaconda_project.internal.cli.clean.main",
  "anaconda_project.internal.cli.command_commands._ask_command",
  "anaconda_project.internal.cli.command_commands.add_command",
  "anaconda_project.internal.cli.command_commands.list_commands",
  "anaconda_project.internal.cli.command_commands.main",
  "anaconda_project.internal.cli.command_commands.main_list",
  "anaconda_project.internal.cli.command_commands.main_remove",
  "anaconda_project.internal.cli.command_commands.remove_command",
  "anaconda_project.internal.cli.console_utils._PY2",
  "anaconda_project.internal.cli.console_utils._input",
  "anaconda_project.internal.cli.console_utils.console_ask_yes_or_no",
  "anaconda_project.internal.cli.console_utils.console_input",
  "anaconda_project.internal.cli.console_utils.format_names_and_descriptions",
  "anaconda_project.internal.cli.console_utils.print_names_and_descriptions",
  "anaconda_project.internal.cli.console_utils.print_project_problems",
  "anaconda_project.internal.cli.console_utils.print_status_errors",
  "anaconda_project.internal.cli.console_utils.stdin_is_interactive",
  "anaconda_project.internal.cli.download_commands.add_download",
  "anaconda_project.internal.cli.download_commands.list_downloads",
  "anaconda_project.internal.cli.download_commands.main_add",
  "anaconda_project.internal.cli.download_commands.main_list",
  "anaconda_project.internal.cli.download_commands.main_remove",
  "anaconda_project.internal.cli.download_commands.remove_download",
  "anaconda_project.internal.cli.environment_commands._handle_status",
  "anaconda_project.internal.cli.environment_commands.add_env_spec",
  "anaconda_project.internal.cli.environment_commands.add_packages",
  "anaconda_project.internal.cli.environment_commands.add_platforms",
  "anaconda_project.internal.cli.environment_commands.create_bootstrap_env",
  "anaconda_project.internal.cli.environment_commands.export_env_spec",
  "anaconda_project.internal.cli.environment_commands.list_env_specs",
  "anaconda_project.internal.cli.environment_commands.list_packages",
  "anaconda_project.internal.cli.environment_commands.list_platforms",
  "anaconda_project.internal.cli.environment_commands.lock",
  "anaconda_project.internal.cli.environment_commands.main_add",
  "anaconda_project.internal.cli.environment_commands.main_add_packages",
  "anaconda_project.internal.cli.environment_commands.main_add_platforms",
  "anaconda_project.internal.cli.environment_commands.main_export",
  "anaconda_project.internal.cli.environment_commands.main_list_env_specs",
  "anaconda_project.internal.cli.environment_commands.main_list_packages",
  "anaconda_project.internal.cli.environment_commands.main_list_platforms",
  "anaconda_project.internal.cli.environment_commands.main_lock",
  "anaconda_project.internal.cli.environment_commands.main_remove",
  "anaconda_project.internal.cli.environment_commands.main_remove_packages",
  "anaconda_project.internal.cli.environment_commands.main_remove_platforms",
  "anaconda_project.internal.cli.environment_commands.main_unlock",
  "anaconda_project.internal.cli.environment_commands.main_update",
  "anaconda_project.internal.cli.environment_commands.remove_env_spec",
  "anaconda_project.internal.cli.environment_commands.remove_packages",
  "anaconda_project.internal.cli.environment_commands.remove_platforms",
  "anaconda_project.internal.cli.environment_commands.run_on_bootstrap_env",
  "anaconda_project.internal.cli.environment_commands.unlock",
  "anaconda_project.internal.cli.environment_commands.update",
  "anaconda_project.internal.cli.init.init_command",
  "anaconda_project.internal.cli.init.main",
  "anaconda_project.internal.cli.main._main_without_bug_handler",
  "anaconda_project.internal.cli.main._parse_args_and_run_subcommand",
  "anaconda_project.internal.cli.main.main",
  "anaconda_project.internal.cli.prepare.main",
  "anaconda_project.internal.cli.prepare.prepare_command",
  "anaconda_project.internal.cli.prepare_with_mode.UI_MODE_TEXT_ASK_QUESTIONS",
  "anaconda_project.internal.cli.prepare_with_mode.UI_MODE_TEXT_ASSUME_NO",
  "anaconda_project.internal.cli.prepare_with_mode.UI_MODE_TEXT_ASSUME_YES_DEVELOPMENT",
  "anaconda_project.internal.cli.prepare_with_mode.UI_MODE_TEXT_ASSUME_YES_PRODUCTION",
  "anaconda_project.internal.cli.prepare_with_mode.UI_MODE_TEXT_DEVELOPMENT_DEFAULTS_OR_ASK",
  "anaconda_project.internal.cli.prepare_with_mode._all_ui_modes",
  "anaconda_project.internal.cli.prepare_with_mode._interactively_fix_missing_variables",
  "anaconda_project.internal.cli.prepare_with_mode.prepare_with_ui_mode_printing_errors",
  "anaconda_project.internal.cli.project_load.CliFrontend",
  "anaconda_project.internal.cli.project_load.load_project",
  "anaconda_project.internal.cli.run._command_from_name",
  "anaconda_project.internal.cli.run.main",
  "anaconda_project.internal.cli.run.run_command",
  "anaconda_project.internal.cli.service_commands.add_service",
  "anaconda_project.internal.cli.service_commands.list_services",
  "anaconda_project.internal.cli.service_commands.main_add",
  "anaconda_project.internal.cli.service_commands.main_list",
  "anaconda_project.internal.cli.service_commands.main_remove",
  "anaconda_project.internal.cli.service_commands.remove_service",
  "anaconda_project.internal.cli.test.test_activate.Args",
  "anaconda_project.internal.cli.test.test_activate._monkeypatch_can_connect_to_socket_to_fail_to_find_redis",
  "anaconda_project.internal.cli.test.test_activate._monkeypatch_can_connect_to_socket_to_succeed",
  "anaconda_project.internal.cli.test.test_command_commands.Args",
  "anaconda_project.internal.cli.test.test_command_commands._test_command_command_project_problem",
  "anaconda_project.internal.cli.test.test_console_utils._monkeypatch_getpass",
  "anaconda_project.internal.cli.test.test_console_utils._monkeypatch_input",
  "anaconda_project.internal.cli.test.test_download_commands.FakeRequirementStatus",
  "anaconda_project.internal.cli.test.test_download_commands._monkeypatch_add_download",
  "anaconda_project.internal.cli.test.test_download_commands._monkeypatch_pwd",
  "anaconda_project.internal.cli.test.test_download_commands._test_add_download",
  "anaconda_project.internal.cli.test.test_download_commands._test_add_download_with_only_one_hash_param",
  "anaconda_project.internal.cli.test.test_download_commands._test_download_command_with_project_file_problems",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_add_env_spec",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_add_packages",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_add_platforms",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_lock",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_pwd",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_record_args",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_remove_packages",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_remove_platforms",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_unlock",
  "anaconda_project.internal.cli.test.test_environment_commands._monkeypatch_update",
  "anaconda_project.internal.cli.test.test_environment_commands._test_environment_command_with_project_file_problems",
  "anaconda_project.internal.cli.test.test_environment_commands._test_list_packages",
  "anaconda_project.internal.cli.test.test_environment_commands._test_list_platforms",
  "anaconda_project.internal.cli.test.test_init._monkeypatch_isatty",
  "anaconda_project.internal.cli.test.test_init._monkeypatch_pwd",
  "anaconda_project.internal.cli.test.test_main._main_calls_subcommand",
  "anaconda_project.internal.cli.test.test_main.activate_help",
  "anaconda_project.internal.cli.test.test_main.all_subcommands",
  "anaconda_project.internal.cli.test.test_main.all_subcommands_comma_space",
  "anaconda_project.internal.cli.test.test_main.all_subcommands_in_curlies",
  "anaconda_project.internal.cli.test.test_main.expected_usage_msg",
  "anaconda_project.internal.cli.test.test_main.expected_usage_msg_format",
  "anaconda_project.internal.cli.test.test_main.expected_usage_msg_without_activate",
  "anaconda_project.internal.cli.test.test_prepare.Args",
  "anaconda_project.internal.cli.test.test_prepare._foo_and_bar_missing",
  "anaconda_project.internal.cli.test.test_prepare._monkeypatch_can_connect_to_socket_to_fail_to_find_redis",
  "anaconda_project.internal.cli.test.test_prepare._monkeypatch_can_connect_to_socket_to_succeed",
  "anaconda_project.internal.cli.test.test_prepare._test_prepare_command",
  "anaconda_project.internal.cli.test.test_project_load._monkeypatch_input",
  "anaconda_project.internal.cli.test.test_run.Args",
  "anaconda_project.internal.cli.test.test_run._func_asserting_contains",
  "anaconda_project.internal.cli.test.test_run._is_python_exe",
  "anaconda_project.internal.cli.test.test_run._test_run_command_foo",
  "anaconda_project.internal.cli.test.test_run.python_exe",
  "anaconda_project.internal.cli.test.test_service_commands._echo_commandline",
  "anaconda_project.internal.cli.test.test_service_commands._monkeypatch_add_service",
  "anaconda_project.internal.cli.test.test_service_commands._monkeypatch_pwd",
  "anaconda_project.internal.cli.test.test_service_commands._test_service_command_with_project_file_problems",
  "anaconda_project.internal.cli.test.test_upload._monkeypatch_upload",
  "anaconda_project.internal.cli.test.test_variable_commands.Args",
  "anaconda_project.internal.cli.test.test_variable_commands.PLATFORM_ENV_VAR",
  "anaconda_project.internal.cli.test.test_variable_commands._monkeypatch_add_variables",
  "anaconda_project.internal.cli.test.test_variable_commands._monkeypatch_remove_variables",
  "anaconda_project.internal.cli.test.test_variable_commands._monkeypatch_set_variables",
  "anaconda_project.internal.cli.test.test_variable_commands._monkeypatch_unset_variables",
  "anaconda_project.internal.cli.unarchive.main",
  "anaconda_project.internal.cli.unarchive.unarchive_command",
  "anaconda_project.internal.cli.upload.main",
  "anaconda_project.internal.cli.upload.upload_command",
  "anaconda_project.internal.cli.variable_commands.add_variables",
  "anaconda_project.internal.cli.variable_commands.list_variables",
  "anaconda_project.internal.cli.variable_commands.main_add",
  "anaconda_project.internal.cli.variable_commands.main_list",
  "anaconda_project.internal.cli.variable_commands.main_remove",
  "anaconda_project.internal.cli.variable_commands.main_set",
  "anaconda_project.internal.cli.variable_commands.main_unset",
  "anaconda_project.internal.cli.variable_commands.remove_variables",
  "anaconda_project.internal.cli.variable_commands.set_variables",
  "anaconda_project.internal.cli.variable_commands.unset_variables",
  "anaconda_project.internal.conda_api.CondaEnvExistsError",
  "anaconda_project.internal.conda_api.CondaError",
  "anaconda_project.internal.conda_api.ParsedSpec",
  "anaconda_project.internal.conda_api._all_prefix_variables",
  "anaconda_project.internal.conda_api._cached_root_prefix",
  "anaconda_project.internal.conda_api._call_and_parse_json",
  "anaconda_project.internal.conda_api._call_conda",
  "anaconda_project.internal.conda_api._conda_constraint_pat",
  "anaconda_project.internal.conda_api._contains_conda_meta",
  "anaconda_project.internal.conda_api._default_platforms_with_current",
  "anaconda_project.internal.conda_api._envs_dirs",
  "anaconda_project.internal.conda_api._get_conda_command",
  "anaconda_project.internal.conda_api._get_platform_hacked_conda_command",
  "anaconda_project.internal.conda_api._get_root_prefix",
  "anaconda_project.internal.conda_api._is_conda_bindir_unix",
  "anaconda_project.internal.conda_api._is_conda_bindir_windows",
  "anaconda_project.internal.conda_api._known_platform_groups",
  "anaconda_project.internal.conda_api._known_platform_groups_keys",
  "anaconda_project.internal.conda_api._known_platforms",
  "anaconda_project.internal.conda_api._known_unix_platforms",
  "anaconda_project.internal.conda_api._non_x86_linux_machines",
  "anaconda_project.internal.conda_api._parse_dist",
  "anaconda_project.internal.conda_api._path_endswith_windows",
  "anaconda_project.internal.conda_api._platform_hacked_conda_code",
  "anaconda_project.internal.conda_api._root_dir",
  "anaconda_project.internal.conda_api._set_conda_env_in_path",
  "anaconda_project.internal.conda_api._set_conda_env_in_path_unix",
  "anaconda_project.internal.conda_api._set_conda_env_in_path_windows",
  "anaconda_project.internal.conda_api._spec_pat",
  "anaconda_project.internal.conda_api._unix_bindirs",
  "anaconda_project.internal.conda_api._windows_bindirs",
  "anaconda_project.internal.conda_api.conda_prefix_variable",
  "anaconda_project.internal.conda_api.create",
  "anaconda_project.internal.conda_api.current_platform",
  "anaconda_project.internal.conda_api.default_platforms",
  "anaconda_project.internal.conda_api.default_platforms_plus_32_bit",
  "anaconda_project.internal.conda_api.default_platforms_with_current",
  "anaconda_project.internal.conda_api.environ_delete_prefix_variables",
  "anaconda_project.internal.conda_api.environ_get_prefix",
  "anaconda_project.internal.conda_api.environ_set_prefix",
  "anaconda_project.internal.conda_api.info",
  "anaconda_project.internal.conda_api.install",
  "anaconda_project.internal.conda_api.installed",
  "anaconda_project.internal.conda_api.json",
  "anaconda_project.internal.conda_api.known_platform_names",
  "anaconda_project.internal.conda_api.parse_platform",
  "anaconda_project.internal.conda_api.parse_spec",
  "anaconda_project.internal.conda_api.platform",
  "anaconda_project.internal.conda_api.remove",
  "anaconda_project.internal.conda_api.resolve_dependencies",
  "anaconda_project.internal.conda_api.resolve_env_to_prefix",
  "anaconda_project.internal.conda_api.result",
  "anaconda_project.internal.conda_api.set_conda_env_in_path",
  "anaconda_project.internal.conda_api.sort_platform_list",
  "anaconda_project.internal.conda_api.unix_platform_names",
  "anaconda_project.internal.conda_api.validate_platform_list",
  "anaconda_project.internal.default_conda_manager.DefaultCondaManager",
  "anaconda_project.internal.default_conda_manager._extract_common",
  "anaconda_project.internal.default_conda_manager._refactor_common_packages",
  "anaconda_project.internal.directory_contains.directory_contains_subdirectory",
  "anaconda_project.internal.directory_contains.subdirectory_relative_to_directory",
  "anaconda_project.internal.http_client.FileDownloader",
  "anaconda_project.internal.http_client.hashlib",
  "anaconda_project.internal.keyring._fake_in_memory_keyring",
  "anaconda_project.internal.keyring._fallback_keyring",
  "anaconda_project.internal.keyring._make_username",
  "anaconda_project.internal.keyring._onetime_keyring_complain_and_disable",
  "anaconda_project.internal.keyring._use_fallback_keyring",
  "anaconda_project.internal.keyring.disable_fallback_keyring",
  "anaconda_project.internal.keyring.enable_fallback_keyring",
  "anaconda_project.internal.keyring.fallback_data",
  "anaconda_project.internal.keyring.get",
  "anaconda_project.internal.keyring.keyring",
  "anaconda_project.internal.keyring.reset_keyring_module",
  "anaconda_project.internal.keyring.set",
  "anaconda_project.internal.keyring.unset",
  "anaconda_project.internal.logged_subprocess.Popen",
  "anaconda_project.internal.logged_subprocess._log_args",
  "anaconda_project.internal.logged_subprocess.call",
  "anaconda_project.internal.logged_subprocess.check_output",
  "anaconda_project.internal.makedirs.makedirs_ok_if_exists",
  "anaconda_project.internal.metaclass.with_metaclass",
  "anaconda_project.internal.notebook_analyzer._comment_re",
  "anaconda_project.internal.notebook_analyzer._fusion_register_re",
  "anaconda_project.internal.notebook_analyzer._has_fusion_register",
  "anaconda_project.internal.notebook_analyzer.extras",
  "anaconda_project.internal.pip_api.ParsedPipSpec",
  "anaconda_project.internal.pip_api.PipError",
  "anaconda_project.internal.pip_api.PipNotInstalledError",
  "anaconda_project.internal.pip_api._call_pip",
  "anaconda_project.internal.pip_api._egg_fragment_postfix_re",
  "anaconda_project.internal.pip_api._egg_fragment_re",
  "anaconda_project.internal.pip_api._extract_name",
  "anaconda_project.internal.pip_api._extract_name_from_egg_fragment",
  "anaconda_project.internal.pip_api._get_pip_command",
  "anaconda_project.internal.pip_api._is_pip_understood_url",
  "anaconda_project.internal.pip_api._spec_pat",
  "anaconda_project.internal.pip_api._url_schemes",
  "anaconda_project.internal.pip_api.install",
  "anaconda_project.internal.pip_api.installed",
  "anaconda_project.internal.pip_api.parse_spec",
  "anaconda_project.internal.pip_api.remove",
  "anaconda_project.internal.plugins",
  "anaconda_project.internal.plugins._get_entry_points_plugins",
  "anaconda_project.internal.plugins.get_plugins",
  "anaconda_project.internal.plugins.keys",
  "anaconda_project.internal.py2_compat._PY2",
  "anaconda_project.internal.py2_compat.env_without_unicode",
  "anaconda_project.internal.py2_compat.is_dict",
  "anaconda_project.internal.py2_compat.is_list",
  "anaconda_project.internal.py2_compat.is_string",
  "anaconda_project.internal.py2_compat.is_unicode",
  "anaconda_project.internal.rename.rename_over_existing",
  "anaconda_project.internal.simple_status.SimpleStatus",
  "anaconda_project.internal.slugify._remove_chars",
  "anaconda_project.internal.slugify.slugify",
  "anaconda_project.internal.streaming_popen._combine_lines",
  "anaconda_project.internal.streaming_popen._read_and_queue_data",
  "anaconda_project.internal.streaming_popen._read_from_stream",
  "anaconda_project.internal.streaming_popen._reader_thread",
  "anaconda_project.internal.streaming_popen.popen",
  "anaconda_project.internal.test.fake_frontend.FakeFrontend",
  "anaconda_project.internal.test.fields",
  "anaconda_project.internal.test.fields.RequestField",
  "anaconda_project.internal.test.fields.Six",
  "anaconda_project.internal.test.fields.format_header_param",
  "anaconda_project.internal.test.fields.guess_content_type",
  "anaconda_project.internal.test.fields.items",
  "anaconda_project.internal.test.fields.six",
  "anaconda_project.internal.test.http_server.HttpServerTestContext",
  "anaconda_project.internal.test.http_server._DownloadView",
  "anaconda_project.internal.test.http_server._ErrorView",
  "anaconda_project.internal.test.http_server._TestServer",
  "anaconda_project.internal.test.http_server._TestServerApplication",
  "anaconda_project.internal.test.http_server.hashlib",
  "anaconda_project.internal.test.http_utils._http_fetch",
  "anaconda_project.internal.test.http_utils.http_get_async",
  "anaconda_project.internal.test.http_utils.http_post_async",
  "anaconda_project.internal.test.multipart.CustomBytesIO",
  "anaconda_project.internal.test.multipart.FileWrapper",
  "anaconda_project.internal.test.multipart.IDENTITY",
  "anaconda_project.internal.test.multipart.MultipartEncoder",
  "anaconda_project.internal.test.multipart.coerce_data",
  "anaconda_project.internal.test.multipart.encode_with",
  "anaconda_project.internal.test.multipart.reset",
  "anaconda_project.internal.test.multipart.total_len",
  "anaconda_project.internal.test.test_conda_api.IPYTHON_BINARY",
  "anaconda_project.internal.test.test_conda_api.PYTHON_BINARY",
  "anaconda_project.internal.test.test_conda_api._assert_packages_not_found",
  "anaconda_project.internal.test.test_conda_api._windows_monkeypatch",
  "anaconda_project.internal.test.test_conda_api.json",
  "anaconda_project.internal.test.test_conda_api.monkeypatch_conda_not_to_use_links",
  "anaconda_project.internal.test.test_default_conda_manager.FLAKE8_BINARY",
  "anaconda_project.internal.test.test_default_conda_manager.IPYTHON_BINARY",
  "anaconda_project.internal.test.test_default_conda_manager.PYINSTRUMENT_BINARY",
  "anaconda_project.internal.test.test_default_conda_manager.test_spec",
  "anaconda_project.internal.test.test_http_client._FakeFileFailsToWrite",
  "anaconda_project.internal.test.test_http_client._download_file",
  "anaconda_project.internal.test.test_keyring._monkeypatch_broken_keyring",
  "anaconda_project.internal.test.test_keyring._monkeypatch_keyring",
  "anaconda_project.internal.test.test_keyring._with_fallback_keyring",
  "anaconda_project.internal.test.test_keyring.expected_broken_message",
  "anaconda_project.internal.test.test_logged_subprocess.ArrayHandler",
  "anaconda_project.internal.test.test_logged_subprocess._test_logger",
  "anaconda_project.internal.test.test_notebook_analyzer._fake_notebook_json_with_code",
  "anaconda_project.internal.test.test_notebook_analyzer._with_code_in_notebook_file",
  "anaconda_project.internal.test.test_pip_api.PYINSTRUMENT_BINARY",
  "anaconda_project.internal.test.test_rename._raise_file_exists",
  "anaconda_project.internal.test.test_streaming_popen.add_lineseps",
  "anaconda_project.internal.test.test_toposort.sort_tuples",
  "anaconda_project.internal.test.test_windows_cmdline._roundtrip",
  "anaconda_project.internal.test.tmpfile_utils.TmpDir",
  "anaconda_project.internal.test.tmpfile_utils.complete_project_file_content",
  "anaconda_project.internal.test.tmpfile_utils.local_tmp",
  "anaconda_project.internal.test.tmpfile_utils.tmp_local_state_file",
  "anaconda_project.internal.test.tmpfile_utils.tmp_script_commandline",
  "anaconda_project.internal.test.tmpfile_utils.with_directory_contents",
  "anaconda_project.internal.test.tmpfile_utils.with_directory_contents_completing_project_file",
  "anaconda_project.internal.test.tmpfile_utils.with_file_contents",
  "anaconda_project.internal.test.tmpfile_utils.with_named_file_contents",
  "anaconda_project.internal.test.tmpfile_utils.with_temporary_file",
  "anaconda_project.internal.test.tmpfile_utils.with_temporary_script_commandline",
  "anaconda_project.internal.test.tmpfile_utils.with_tmp_zipfile",
  "anaconda_project.internal.toposort.CycleError",
  "anaconda_project.internal.toposort.toposort",
  "anaconda_project.internal.toposort.toposort_from_dependency_info",
  "anaconda_project.internal.windows_cmdline.WindowsCommandLineException",
  "anaconda_project.internal.windows_cmdline.windows_join_command_line",
  "anaconda_project.internal.windows_cmdline.windows_split_command_line",
  "anaconda_project.internal.ziputils.unpack_zip",
  "anaconda_project.local_state_file.DEFAULT_LOCAL_STATE_FILENAME",
  "anaconda_project.local_state_file.LocalStateFile",
  "anaconda_project.local_state_file.LocalStateFile.load_for_directory",
  "anaconda_project.local_state_file.SERVICE_RUN_STATES_SECTION",
  "anaconda_project.local_state_file.possible_local_state_file_names",
  "anaconda_project.plugins.ArgsTrasformerTemplate",
  "anaconda_project.plugins.CommandTemplate",
  "anaconda_project.prepare.ConfigurePrepareContext",
  "anaconda_project.prepare.PrepareFailure",
  "anaconda_project.prepare.PrepareResult",
  "anaconda_project.prepare.PrepareStage",
  "anaconda_project.prepare.PrepareSuccess",
  "anaconda_project.prepare._AndThenPrepareStage",
  "anaconda_project.prepare._FunctionPrepareStage",
  "anaconda_project.prepare._after_stage_success",
  "anaconda_project.prepare._assert_no_missing_env_var_requirements",
  "anaconda_project.prepare._check_prepare_prerequisites",
  "anaconda_project.prepare._configure_and_provide",
  "anaconda_project.prepare._first_stage",
  "anaconda_project.prepare._in_provide_whitelist",
  "anaconda_project.prepare._internal_prepare_in_stages",
  "anaconda_project.prepare._partition_first_group_to_configure",
  "anaconda_project.prepare._prepare_environ_and_overrides",
  "anaconda_project.prepare._prepare_failure_on_bad_command_name",
  "anaconda_project.prepare._prepare_failure_on_bad_env_spec_name",
  "anaconda_project.prepare._process_requirement_statuses",
  "anaconda_project.prepare._project_problems_to_prepare_failure",
  "anaconda_project.prepare._refresh_status_list",
  "anaconda_project.prepare._sort_statuses",
  "anaconda_project.prepare._update_environ",
  "anaconda_project.prepare.prepare_execute_without_interaction",
  "anaconda_project.prepare.prepare_in_stages",
  "anaconda_project.prepare.prepare_without_interaction",
  "anaconda_project.prepare.unprepare",
  "anaconda_project.project",
  "anaconda_project.project.ALL_COMMAND_TYPES",
  "anaconda_project.project.COMMAND_TYPE_BOKEH_APP",
  "anaconda_project.project.COMMAND_TYPE_CONDA_APP_ENTRY",
  "anaconda_project.project.COMMAND_TYPE_NOTEBOOK",
  "anaconda_project.project.COMMAND_TYPE_SHELL",
  "anaconda_project.project.COMMAND_TYPE_WINDOWS",
  "anaconda_project.project.Project",
  "anaconda_project.project.Project.__init__",
  "anaconda_project.project.ProjectProblem",
  "anaconda_project.project._ConfigCache",
  "anaconda_project.project._fatal_problem",
  "anaconda_project.project._file_problem",
  "anaconda_project.project._make_problems_into_objects",
  "anaconda_project.project._unknown_field_suggestions",
  "anaconda_project.project.plugins_api",
  "anaconda_project.project.plugins_api.get_plugins",
  "anaconda_project.project_commands.CommandExecInfo",
  "anaconda_project.project_commands.ProjectCommand",
  "anaconda_project.project_commands._ArgSpec",
  "anaconda_project.project_commands._ArgsTransformer",
  "anaconda_project.project_commands._BokehArgsTransformer",
  "anaconda_project.project_commands._NotebookArgsTransformer",
  "anaconda_project.project_commands._append_extra_args_to_command_line",
  "anaconda_project.project_commands._http_specs",
  "anaconda_project.project_commands._is_windows",
  "anaconda_project.project_commands.all_known_command_attributes",
  "anaconda_project.project_commands.extra_command_attributes",
  "anaconda_project.project_commands.standard_command_attributes",
  "anaconda_project.project_file.DEFAULT_PROJECT_FILENAME",
  "anaconda_project.project_file.ProjectFile",
  "anaconda_project.project_file.ProjectFile.load_for_directory",
  "anaconda_project.project_file._empty_default_env_spec",
  "anaconda_project.project_file.possible_project_file_names",
  "anaconda_project.project_lock_file.DEFAULT_PROJECT_LOCK_FILENAME",
  "anaconda_project.project_lock_file.ProjectLockFile",
  "anaconda_project.project_lock_file.ProjectLockFile.load_for_directory",
  "anaconda_project.project_lock_file.possible_project_lock_file_names",
  "anaconda_project.project_ops._StatusHolder",
  "anaconda_project.project_ops._add_projectignore_if_none",
  "anaconda_project.project_ops._apply_lock_file_then_revert",
  "anaconda_project.project_ops._check_env_spec_name",
  "anaconda_project.project_ops._check_problems",
  "anaconda_project.project_ops._commit_requirement_if_it_works",
  "anaconda_project.project_ops._default_projectignore",
  "anaconda_project.project_ops._filter_inplace",
  "anaconda_project.project_ops._map_inplace",
  "anaconda_project.project_ops._modify_inherited_field",
  "anaconda_project.project_ops._modify_platforms",
  "anaconda_project.project_ops._path_to_download",
  "anaconda_project.project_ops._path_to_per_env_spec_thing",
  "anaconda_project.project_ops._path_to_service",
  "anaconda_project.project_ops._path_to_variable",
  "anaconda_project.project_ops._prepare_env_prefix",
  "anaconda_project.project_ops._try_requirement_without_commit",
  "anaconda_project.project_ops._unset_variable",
  "anaconda_project.project_ops._update_and_lock",
  "anaconda_project.project_ops._update_env_spec",
  "anaconda_project.project_ops._updating_project_lock_file",
  "anaconda_project.project_ops.add_command",
  "anaconda_project.project_ops.add_download",
  "anaconda_project.project_ops.add_env_spec",
  "anaconda_project.project_ops.add_packages",
  "anaconda_project.project_ops.add_platforms",
  "anaconda_project.project_ops.add_service",
  "anaconda_project.project_ops.add_variables",
  "anaconda_project.project_ops.archive",
  "anaconda_project.project_ops.clean",
  "anaconda_project.project_ops.create",
  "anaconda_project.project_ops.export_env_spec",
  "anaconda_project.project_ops.lock",
  "anaconda_project.project_ops.remove_command",
  "anaconda_project.project_ops.remove_download",
  "anaconda_project.project_ops.remove_env_spec",
  "anaconda_project.project_ops.remove_packages",
  "anaconda_project.project_ops.remove_platforms",
  "anaconda_project.project_ops.remove_service",
  "anaconda_project.project_ops.remove_variables",
  "anaconda_project.project_ops.set_properties",
  "anaconda_project.project_ops.set_variables",
  "anaconda_project.project_ops.unarchive",
  "anaconda_project.project_ops.unlock",
  "anaconda_project.project_ops.unset_variables",
  "anaconda_project.project_ops.update",
  "anaconda_project.project_ops.update_command",
  "anaconda_project.project_ops.upload",
  "anaconda_project.provide.PROVIDE_MODE_CHECK",
  "anaconda_project.provide.PROVIDE_MODE_DEVELOPMENT",
  "anaconda_project.provide.PROVIDE_MODE_PRODUCTION",
  "anaconda_project.provide._all_provide_modes",
  "anaconda_project.requirements_registry.network_util._get_urlparse",
  "anaconda_project.requirements_registry.network_util.can_connect_to_socket",
  "anaconda_project.requirements_registry.network_util.urlparse",
  "anaconda_project.requirements_registry.network_util.urlparse.urlsplit",
  "anaconda_project.requirements_registry.provider.EnvVarProvider",
  "anaconda_project.requirements_registry.provider.ProvideContext",
  "anaconda_project.requirements_registry.provider.ProvideResult",
  "anaconda_project.requirements_registry.provider.ProvideResult.empty",
  "anaconda_project.requirements_registry.provider.Provider",
  "anaconda_project.requirements_registry.provider.ProviderAnalysis",
  "anaconda_project.requirements_registry.provider._service_directory",
  "anaconda_project.requirements_registry.provider.delete_service_directory",
  "anaconda_project.requirements_registry.provider.shutdown_service_run_state",
  "anaconda_project.requirements_registry.providers.conda_env.CondaBootstrapEnvProvider",
  "anaconda_project.requirements_registry.providers.conda_env.CondaEnvProvider",
  "anaconda_project.requirements_registry.providers.conda_env._remove_env_path",
  "anaconda_project.requirements_registry.providers.download.DownloadProvider",
  "anaconda_project.requirements_registry.providers.download._DownloadProviderAnalysis",
  "anaconda_project.requirements_registry.providers.redis.RedisProvider",
  "anaconda_project.requirements_registry.providers.redis._DEFAULT_SYSTEM_REDIS_HOST",
  "anaconda_project.requirements_registry.providers.redis._DEFAULT_SYSTEM_REDIS_PORT",
  "anaconda_project.requirements_registry.providers.redis._DEFAULT_SYSTEM_REDIS_URL",
  "anaconda_project.requirements_registry.providers.redis._RedisProviderAnalysis",
  "anaconda_project.requirements_registry.providers.test.test_conda_bootstrap_env._conda_bootstrap_env_status",
  "anaconda_project.requirements_registry.providers.test.test_conda_bootstrap_env._conda_env_status",
  "anaconda_project.requirements_registry.providers.test.test_conda_bootstrap_env.conda_env_var",
  "anaconda_project.requirements_registry.providers.test.test_conda_bootstrap_env.script_dir",
  "anaconda_project.requirements_registry.providers.test.test_conda_env._conda_env_status",
  "anaconda_project.requirements_registry.providers.test.test_conda_env.conda_env_var",
  "anaconda_project.requirements_registry.providers.test.test_conda_env.script_dir",
  "anaconda_project.requirements_registry.providers.test.test_download_provider.DATAFILE_CONTENT",
  "anaconda_project.requirements_registry.providers.test.test_download_provider.ZIPPED_DATAFILE_CONTENT",
  "anaconda_project.requirements_registry.providers.test.test_download_provider.ZIPPED_DATAFILE_CONTENT_CHECKSUM",
  "anaconda_project.requirements_registry.providers.test.test_download_provider.ZIPPED_DATAFILE_CONTENT_NO_UNZIP",
  "anaconda_project.requirements_registry.providers.test.test_download_provider.ZIPPED_DATAFILE_CONTENT_NO_ZIP_SUFFIX",
  "anaconda_project.requirements_registry.providers.test.test_download_provider._download_requirement",
  "anaconda_project.requirements_registry.providers.test.test_download_provider._download_status",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._fail_to_prepare_local_redis_server_exec_fails",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._monkeypatch_can_connect_to_socket_always_fails",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._monkeypatch_can_connect_to_socket_always_succeeds_on_nonstandard",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._monkeypatch_can_connect_to_socket_on_nonstandard_port_only",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._monkeypatch_can_connect_to_socket_to_succeed",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._prepare_printing_errors",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._read_invalid_port_range",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider._redis_requirement",
  "anaconda_project.requirements_registry.providers.test.test_redis_provider.real_can_connect_to_socket",
  "anaconda_project.requirements_registry.registry.RequirementsRegistry",
  "anaconda_project.requirements_registry.registry.ServiceType",
  "anaconda_project.requirements_registry.requirement.EnvVarRequirement",
  "anaconda_project.requirements_registry.requirement.EnvVarRequirement._parse_default",
  "anaconda_project.requirements_registry.requirement.Requirement",
  "anaconda_project.requirements_registry.requirement.RequirementStatus",
  "anaconda_project.requirements_registry.requirement.UserConfigOverrides",
  "anaconda_project.requirements_registry.requirement._secret_suffixes",
  "anaconda_project.requirements_registry.requirements.conda_env.CondaBootstrapEnvRequirement",
  "anaconda_project.requirements_registry.requirements.conda_env.CondaEnvRequirement",
  "anaconda_project.requirements_registry.requirements.download.DownloadRequirement",
  "anaconda_project.requirements_registry.requirements.download.DownloadRequirement._parse",
  "anaconda_project.requirements_registry.requirements.download._hash_algorithms",
  "anaconda_project.requirements_registry.requirements.redis.RedisRequirement",
  "anaconda_project.requirements_registry.requirements.service.ServiceRequirement",
  "anaconda_project.requirements_registry.requirements.service.ServiceRequirement._parse",
  "anaconda_project.requirements_registry.requirements.test.test_conda_env._empty_default_requirement",
  "anaconda_project.requirements_registry.requirements.test.test_conda_env.conda_env_var",
  "anaconda_project.requirements_registry.requirements.test.test_download_requirement.ENV_VAR",
  "anaconda_project.requirements_registry.requirements.test.test_download_requirement.make_file_with_checksum",
  "anaconda_project.requirements_registry.requirements.test.test_redis_requirement._monkeypatch_can_connect_to_socket_fails",
  "anaconda_project.requirements_registry.requirements.test.test_service_requirement._load_service_requirement",
  "anaconda_project.requirements_registry.test.test_provider._load_env_var_requirement",
  "anaconda_project.status.Status",
  "anaconda_project.test.environ_utils._minimal_environ_full",
  "anaconda_project.test.environ_utils.conda_vars_to_keep",
  "anaconda_project.test.environ_utils.minimal_environ",
  "anaconda_project.test.environ_utils.minimal_environ_no_conda_env",
  "anaconda_project.test.environ_utils.strip_environ",
  "anaconda_project.test.environ_utils.system_vars_to_keep",
  "anaconda_project.test.fake_server.FakeAnacondaApplication",
  "anaconda_project.test.fake_server.FakeAnacondaServer",
  "anaconda_project.test.fake_server.FakeServerContext",
  "anaconda_project.test.fake_server.ProjectViewHandler",
  "anaconda_project.test.fake_server._monkeypatch_client_config",
  "anaconda_project.test.fake_server.fake_server",
  "anaconda_project.test.project_utils.project_dir_disable_dedicated_env",
  "anaconda_project.test.project_utils.project_no_dedicated_env",
  "anaconda_project.test.test_api._monkeypatch_prepare_without_interaction",
  "anaconda_project.test.test_api._test_prepare_without_interaction",
  "anaconda_project.test.test_api._verify_args_match",
  "anaconda_project.test.test_api.getargspec",
  "anaconda_project.test.test_bundler._test_file_pattern_matcher",
  "anaconda_project.test.test_local_state_file._use_existing_local_state_file",
  "anaconda_project.test.test_prepare._monkeypatch_download_file",
  "anaconda_project.test.test_prepare._pop_fake_env_creator",
  "anaconda_project.test.test_prepare._push_fake_env_creator",
  "anaconda_project.test.test_project._assert_find_executable",
  "anaconda_project.test.test_project._complicated_project_contents",
  "anaconda_project.test.test_project._run_argv_for_environment",
  "anaconda_project.test.test_project.echo_stuff",
  "anaconda_project.test.test_project_file._make_file_contents",
  "anaconda_project.test.test_project_file._use_existing_project_file",
  "anaconda_project.test.test_project_file.abc_empty_env_spec",
  "anaconda_project.test.test_project_file.abc_xyz_env_specs",
  "anaconda_project.test.test_project_file.anaconda_global_packages",
  "anaconda_project.test.test_project_file.default_global_platforms",
  "anaconda_project.test.test_project_file.empty_default_env_specs",
  "anaconda_project.test.test_project_file.empty_global_channels",
  "anaconda_project.test.test_project_file.empty_global_packages",
  "anaconda_project.test.test_project_file.expected_default_file",
  "anaconda_project.test.test_project_file.expected_default_file_template",
  "anaconda_project.test.test_project_file.expected_one_env_spec_contents",
  "anaconda_project.test.test_project_file.expected_two_env_spec_contents",
  "anaconda_project.test.test_project_file.mychannel_global_channels",
  "anaconda_project.test.test_project_lock_file._get_lock_set",
  "anaconda_project.test.test_project_lock_file._get_locking_enabled",
  "anaconda_project.test.test_project_lock_file._use_existing_lock_file",
  "anaconda_project.test.test_project_lock_file.expected_default_file",
  "anaconda_project.test.test_project_ops._CONTENTS_DIR",
  "anaconda_project.test.test_project_ops._CONTENTS_FILE",
  "anaconda_project.test.test_project_ops._CONTENTS_SYMLINK",
  "anaconda_project.test.test_project_ops._add_empty_git",
  "anaconda_project.test.test_project_ops._assert_dir_contains",
  "anaconda_project.test.test_project_ops._assert_tar_contains",
  "anaconda_project.test.test_project_ops._assert_zip_contains",
  "anaconda_project.test.test_project_ops._make_tar",
  "anaconda_project.test.test_project_ops._make_zip",
  "anaconda_project.test.test_project_ops._monkeypatch_can_connect_to_socket_on_standard_redis_port",
  "anaconda_project.test.test_project_ops._monkeypatch_download_file",
  "anaconda_project.test.test_project_ops._monkeypatch_download_file_fails",
  "anaconda_project.test.test_project_ops._monkeypatch_download_file_fails_to_get_http_response",
  "anaconda_project.test.test_project_ops._pop_conda_test",
  "anaconda_project.test.test_project_ops._push_conda_test",
  "anaconda_project.test.test_project_ops._recursive_list",
  "anaconda_project.test.test_project_ops._relative_to",
  "anaconda_project.test.test_project_ops._strip_prefixes",
  "anaconda_project.test.test_project_ops._test_add_command_line",
  "anaconda_project.test.test_project_ops._test_unarchive_tar",
  "anaconda_project.test.test_project_ops._with_conda_test",
  "anaconda_project.test.test_project_ops.check_cleaned",
  "anaconda_project.verbose._cached_null_logger",
  "anaconda_project.verbose._null_logger",
  "anaconda_project.verbose._verbose_logger",
  "anaconda_project.verbose._verbose_loggers",
  "anaconda_project.verbose.pop_verbose_logger",
  "anaconda_project.verbose.push_verbose_logger",
  "anaconda_project.version.VERSION_INFO",
  "anaconda_project.version.__version__",
  "anaconda_project.version.version",
  "anaconda_project.yaml_file.YamlFile",
  "anaconda_project.yaml_file._CommentedMap",
  "anaconda_project.yaml_file._CommentedSeq",
  "anaconda_project.yaml_file._YAMLError",
  "anaconda_project.yaml_file._atomic_replace",
  "anaconda_project.yaml_file._block_style_all_nodes",
  "anaconda_project.yaml_file._dump_string",
  "anaconda_project.yaml_file._load_string",
  "anaconda_project.yaml_file._save_file",
  "argparse.ArgumentParser",
  "argparse.REMAINDER",
  "assert_unset_on_reload",
  "binstar_client.errors.BinstarError",
  "binstar_client.errors.Unauthorized",
  "binstar_client.requests_ext.stream_multipart",
  "binstar_client.utils",
  "binstar_client.utils.compute_hash",
  "binstar_client.utils.get_server_api",
  "binstar_client.utils.jencode",
  "canonicalize",
  "check_conda_reserved",
  "check_save",
  "check_unset",
  "cleanup_dir",
  "cleanup_tmp",
  "codecs.getreader",
  "codecs.open",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.deque",
  "collections.namedtuple",
  "comment_out",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "ctypes.POINTER",
  "ctypes.byref",
  "ctypes.c_int",
  "ctypes.windll.kernel32.LocalFree",
  "ctypes.windll.shell32.CommandLineToArgvW",
  "ctypes.wintypes.HLOCAL",
  "ctypes.wintypes.LPCWSTR",
  "ctypes.wintypes.LPWSTR",
  "datetime.date.today",
  "difflib.ndiff",
  "distutils.spawn.find_executable",
  "entrypoints.get_group_named",
  "envs_to_their_dicts",
  "errno.EACCES",
  "errno.EEXIST",
  "errno.EISDIR",
  "errno.ENOENT",
  "errno.ENOMEM",
  "extract_files",
  "f",
  "file_assertion",
  "filter_context",
  "fnmatch.fnmatch",
  "func",
  "functools.partial",
  "get_next_nodes",
  "getpass.getpass",
  "git_filter",
  "glob.iglob",
  "hashlib.md5",
  "hashlib.sha1",
  "ignore_file_filter",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "io.BytesIO",
  "io.UnsupportedOperation",
  "is_most_general",
  "is_plugin_generated",
  "is_unix",
  "json.dumps",
  "json.get",
  "json.loads",
  "klass",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Handler",
  "logging.INFO",
  "logging.NullHandler",
  "logging.StreamHandler",
  "logging.getLogger",
  "logging.getLoggerClass",
  "make_add_notebook_func",
  "make_env_spec",
  "make_fix",
  "make_no_add_notebook_func",
  "match",
  "meta",
  "metaclass",
  "mimetypes.guess_type",
  "missing_vars_getter",
  "move_list_elements",
  "need_to_import_notebook",
  "nl",
  "no_slash",
  "os.chdir",
  "os.chmod",
  "os.environ",
  "os.environ.get",
  "os.environ.pop",
  "os.environ.split",
  "os.execv",
  "os.execvpe",
  "os.fstat",
  "os.getcwd",
  "os.kill",
  "os.linesep",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.split",
  "os.pathsep",
  "os.pathsep.join",
  "os.remove",
  "os.rename",
  "os.rmdir",
  "os.sep",
  "os.stat",
  "os.symlink",
  "os.utime",
  "os.walk",
  "output",
  "pipes.quote",
  "pkg_resources.iter_entry_points",
  "platform.machine",
  "platform.rsplit",
  "platform.split",
  "platform.system",
  "pprint.pformat",
  "pprint.pprint",
  "print_timestamps",
  "provider.EnvVarProvider",
  "providers.conda_env.CondaBootstrapEnvProvider",
  "providers.conda_env.CondaEnvProvider",
  "providers.download.DownloadProvider",
  "providers.redis.RedisProvider",
  "pytest.mark.skipif",
  "pytest.mark.slow",
  "pytest.raises",
  "random.shuffle",
  "raw_input",
  "re.MULTILINE",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.match",
  "re.sub",
  "req",
  "req.default_as_string",
  "requirement.EnvVarRequirement",
  "requirements.redis.RedisRequirement",
  "ruamel.yaml.RoundTripDumper",
  "ruamel.yaml.RoundTripLoader",
  "ruamel.yaml.comments.CommentedMap",
  "ruamel.yaml.comments.CommentedSeq",
  "ruamel.yaml.constructor.SafeConstructor",
  "ruamel.yaml.dump",
  "ruamel.yaml.error.YAMLError",
  "ruamel.yaml.load",
  "set.intersection",
  "shutil.copy2",
  "shutil.copyfile",
  "shutil.copystat",
  "shutil.rmtree",
  "signal.SIGKILL",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.create_connection",
  "socket.socket",
  "sorted.pop",
  "sorted.reverse",
  "stat.S_IREAD",
  "stat.S_IRUSR",
  "stat.S_IWRITE",
  "stat.S_IWUSR",
  "stat.S_IXUSR",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.call",
  "subprocess.check_output",
  "subprocess.list2cmdline",
  "sys.argv",
  "sys.exc_info",
  "sys.exit",
  "sys.platform",
  "sys.stderr",
  "sys.stderr.flush",
  "sys.stderr.write",
  "sys.stdin.isatty",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version_info",
  "sys.version_info.major",
  "sys.version_info.minor",
  "tarfile.DIRTYPE",
  "tarfile.SYMTYPE",
  "tarfile.TarError",
  "tarfile.TarInfo",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "threading.Condition",
  "threading.Thread",
  "time.sleep",
  "tornado.gen.Return",
  "tornado.gen.coroutine",
  "tornado.httpclient.AsyncHTTPClient",
  "tornado.httpclient.HTTPRequest",
  "tornado.httpserver.HTTPServer",
  "tornado.ioloop.IOLoop",
  "tornado.ioloop.IOLoop.current",
  "tornado.netutil.bind_sockets",
  "tornado.web.Application",
  "tornado.web.RequestHandler",
  "traceback.format_exception",
  "traverse",
  "tuple.__itemsize__",
  "type.__call__",
  "type.__init__",
  "type.__new__",
  "type_error",
  "unicodedata.normalize",
  "urllib.quote",
  "urllib.quote_plus",
  "uuid.uuid4",
  "var_reqs",
  "version_match",
  "warnings.warn",
  "zipfile.ZipFile",
  "zipfile.error"
 ],
 "deps": {
  "CommandLineToArgvW": [],
  "FakeInfo": [],
  "LocalFree": [],
  "ProjectCommandClass": [],
  "Queue": [],
  "Res": [],
  "TestCmd": [],
  "Thing": [],
  "UselessProvider": [],
  "_fn": [],
  "_helper": [],
  "_linearized_ancestors": [],
  "_parse_channels": [],
  "_parse_packages": [],
  "_parse_platforms": [],
  "_parse_string_list": [],
  "_stages_for": [],
  "_start_over": [],
  "abc": [],
  "add_command_name_arg": [],
  "add_directory_arg": [],
  "add_env_spec_arg": [],
  "add_env_spec_name_arg": [],
  "add_package_args": [],
  "add_platforms_list": [],
  "add_prepare_args": [],
  "add_service_variable_name": [],
  "all_platforms_string": [],
  "anaconda_project": [],
  "argparse": [],
  "assert_unset_on_reload": [],
  "binstar_client": [],
  "canonicalize": [],
  "check_conda_reserved": [],
  "check_save": [],
  "check_unset": [],
  "cleanup_dir": [],
  "cleanup_tmp": [],
  "codecs": [],
  "collections": [],
  "comment_out": [],
  "contextlib": [],
  "copy": [],
  "ctypes": [],
  "datetime": [],
  "difflib": [],
  "distutils": [],
  "entrypoints": [],
  "envs_to_their_dicts": [],
  "errno": [],
  "extract_files": [],
  "f": [],
  "file_assertion": [],
  "filter_context": [],
  "fnmatch": [],
  "func": [],
  "functools": [],
  "get_next_nodes": [],
  "getpass": [],
  "git_filter": [],
  "glob": [],
  "hashlib": [],
  "ignore_file_filter": [],
  "inspect": [],
  "io": [],
  "is_most_general": [],
  "is_plugin_generated": [],
  "is_unix": [],
  "json": [],
  "klass": [],
  "logging": [],
  "make_add_notebook_func": [],
  "make_env_spec": [],
  "make_fix": [],
  "make_no_add_notebook_func": [],
  "match": [],
  "meta": [],
  "metaclass": [],
  "mimetypes": [],
  "missing_vars_getter": [],
  "move_list_elements": [],
  "need_to_import_notebook": [],
  "nl": [],
  "no_slash": [],
  "os": [],
  "output": [],
  "pipes": [],
  "pkg_resources": [],
  "platform": [],
  "pprint": [],
  "print_timestamps": [],
  "provider": [],
  "providers": [],
  "pytest": [],
  "random": [],
  "raw_input": [],
  "re": [],
  "req": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "requirement": [],
  "requirements": [],
  "ruamel": [],
  "set": [],
  "shutil": [],
  "signal": [],
  "socket": [],
  "sorted": [],
  "stat": [],
  "subprocess": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "threading": [],
  "time": [],
  "tornado": [],
  "traceback": [],
  "traverse": [],
  "tuple": [],
  "type": [],
  "type_error": [],
  "unicodedata": [],
  "urllib": [],
  "uuid": [],
  "var_reqs": [],
  "version_match": [],
  "warnings": [],
  "zipfile": []
 }
}