{
 "bad": [
  "AdaGrad.register",
  "AdaMax.register",
  "AmsGrad.register",
  "InvalidInputError",
  "MetropolisHastings",
  "MetropolisHastingsPt",
  "Momentum.register",
  "RmsProp.register",
  "SR.register",
  "Sgd.register",
  "Squared",
  "U_A",
  "U_S",
  "W",
  "W_init",
  "_acc_kernel",
  "_fb_acc_kernel",
  "_impl",
  "_kernels._CustomKernel.register",
  "_kernels._ExchangeKernel.register",
  "_kernels._HamiltonianKernel.register",
  "_kernels._LocalKernel.register",
  "_lazy.Adjoint",
  "_lazy.Squared",
  "_lazy.Transpose",
  "_log_val",
  "_t_kernel",
  "_transition",
  "_vjp_fun",
  "abstract_eval_fn",
  "apply_fun",
  "b_init",
  "base.SR",
  "boson.number",
  "collections.abc.Collection",
  "complex_fun",
  "compute_proposed_prob",
  "condition_fun",
  "config_flags.config.FLAGS",
  "ctypes",
  "ctypes.c_char_p",
  "ctypes.c_void_p",
  "ctypes.py_object",
  "ctypes.pythonapi.PyCapsule_New",
  "ctypes.pythonapi.PyCapsule_New.argtypes",
  "ctypes.pythonapi.PyCapsule_New.restype",
  "dataclasses",
  "dataclasses.dataclass",
  "dataclasses.field",
  "der_local_cost_fun",
  "diagonal.Diagonal",
  "distutils.version.LooseVersion",
  "expect_closure",
  "expected_fun",
  "f",
  "f_jvp",
  "f_jvp_j",
  "f_jvp_r",
  "f_vjp",
  "f_vmap",
  "fix_swap",
  "flax",
  "flax.Flax.der_log",
  "flax.Flax.log_val",
  "flax.core.FrozenDict",
  "flax.core.freeze",
  "flax.core.frozen_dict.FrozenDict",
  "flax.linen",
  "flax.linen.Embed",
  "flax.linen.Module",
  "flax.linen.MultiHeadDotProductAttention",
  "flax.linen.SelfAttention",
  "flax.linen.combine_masks",
  "flax.linen.compact",
  "flax.linen.dot_product_attention",
  "flax.linen.initializers",
  "flax.linen.linear._conv_dimension_numbers",
  "flax.linen.make_attention_mask",
  "flax.linen.make_causal_mask",
  "flax.linen.module.Module",
  "flax.linen.module.Variable",
  "flax.linen.module.compact",
  "flax.linen.module.disable_named_call",
  "flax.linen.module.enable_named_call",
  "flax.serialization",
  "flax.serialization.from_state_dict",
  "flax.serialization.register_serialization_state",
  "flax.serialization.to_bytes",
  "flax.serialization.to_state_dict",
  "flax.struct",
  "flax.struct.dataclass",
  "flax.struct.field",
  "forward_fn",
  "fractions.Fraction",
  "freeze",
  "fun",
  "func",
  "func.__name__",
  "functools.partial",
  "get_conn_flattened",
  "grad_fun",
  "grad_rc",
  "gradient",
  "haiku",
  "haiku.Transformed",
  "haiku.data_structures.to_immutable_dict",
  "hamiltonian",
  "init_fun",
  "input.shape",
  "itertools",
  "jacobian",
  "jax.Jax.der_log",
  "jax.Jax.log_val",
  "jax.config.config.update",
  "jax.config.omnistaging_enabled",
  "jax.lib.xla_client.Shape.array_shape",
  "jax.lib.xla_client.Shape.tuple_shape",
  "jax.lib.xla_client.ops.CustomCallWithLayout",
  "jax.numpy.complex128",
  "jax.numpy.complex64",
  "jax.numpy.float32",
  "jax.numpy.float64",
  "jax.numpy.intp",
  "jax.numpy.ndim",
  "jax.numpy.random.default_rng",
  "jax_fun",
  "jaxlib.xla_extension",
  "jaxlib.xla_extension.DeviceArray",
  "legacy_fun",
  "local_cost_fun_vmap",
  "local_costs_and_grads_fun",
  "log_pdf",
  "logger",
  "logger.flush",
  "logpdf",
  "mc_state.MCState.model_state.fset",
  "mc_state.MCState.model_state.setter",
  "mc_state.MCState.parameters.fset",
  "mc_state.MCState.parameters.setter",
  "metropolis_hastings.MetropolisHastings.register",
  "metropolis_hastings.MetropolisHastingsPt.register",
  "mpi4py.MPI.COMM_WORLD.Create",
  "mpi4py.MPI.COMM_WORLD.Get_group",
  "n_conn_from_sections",
  "netket.__init__.optimizer",
  "netket.config.FLAGS",
  "netket.jax.jit",
  "netket.jax.lax.scan",
  "netket.jax.tree_multimap",
  "netket.jax.tree_util.tree_multimap",
  "netket.jax.vmap",
  "netket.nn.initializers.lecun_normal",
  "netket.nn.initializers.normal",
  "netket.nn.initializers.variance_scaling",
  "netket.nn.initializers.zeros",
  "netket.utils.MPI.COMM_WORLD",
  "netket.utils.MPI.IN_PLACE",
  "netket.utils.MPI.SUM",
  "netket.utils.MPI_py_comm.Allreduce",
  "netket.utils.MPI_py_comm.allreduce",
  "netket.utils.backpack",
  "netket.utils.backpack.backpack",
  "netket.utils.backpack.extensions.BatchGrad",
  "networkx.Graph",
  "networkx.MultiGraph",
  "networkx.algorithms.is_isomorphic",
  "networkx.disjoint_union",
  "networkx.floyd_warshall_numpy",
  "networkx.is_bipartite",
  "networkx.is_connected",
  "networkx.isomorphism.GraphMatcher",
  "networkx.set_edge_attributes",
  "normal_init",
  "numba.experimental.jitclass",
  "numba.typed",
  "numba.typed.List",
  "numba.typed.List.empty_list",
  "numba_fn",
  "numpy.AdaDelta",
  "numpy.AdaGrad",
  "numpy.AdaMax",
  "numpy.AmsGrad",
  "numpy.MetropolisHastings",
  "numpy.MetropolisHastingsPt",
  "numpy.Momentum",
  "numpy.RmsProp",
  "numpy.SR",
  "numpy.Sgd",
  "numpy._CustomKernel",
  "numpy._ExchangeKernel",
  "numpy._HamiltonianKernel",
  "numpy._LocalKernel",
  "numpy.abs",
  "numpy.absolute",
  "numpy.arange",
  "numpy.ceil",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.complexfloating",
  "numpy.conj",
  "numpy.conjugate",
  "numpy.dtype",
  "numpy.empty",
  "numpy.exp",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.floor_divide",
  "numpy.infty",
  "numpy.int32",
  "numpy.int64",
  "numpy.intc",
  "numpy.integer",
  "numpy.intp",
  "numpy.log",
  "numpy.log10",
  "numpy.matmul",
  "numpy.maximum",
  "numpy.mod",
  "numpy.nan",
  "numpy.promote_types",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.default_rng",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.square",
  "numpy.tanh",
  "numpy.uint32",
  "numpy.zeros",
  "object.__setattr__",
  "orjson",
  "orjson.dumps",
  "os.listdir",
  "os.path.exists",
  "pb",
  "sampler_state",
  "scipy.spatial.cKDTree",
  "solve_fun",
  "spin.sigmax",
  "spin.sigmaz",
  "sqrt",
  "swap_rows",
  "sys",
  "tensor_hilbert.TensorHilbert",
  "time",
  "torch.cat",
  "torch.empty",
  "torch.float64",
  "torch.from_numpy",
  "unravel",
  "unravel_list",
  "value_and_grad_f",
  "vars.pop",
  "vjp_fun",
  "vjp_j_fun",
  "vjp_r_fun",
  "warnings.warn",
  "wrap_fun",
  "\u014c_pb",
  "\u03a0",
  "\u03c8_A",
  "\u03c8_S"
 ],
 "deps": {
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "backpack": [
   "backpack/conda-forge/linux-64/backpack-0.1-py39hde42818_1002"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "jax": [],
  "jaxlib": [
   "jaxlib/conda-forge/linux-64/jaxlib-0.1.42-py37hc8dfbb8_0",
   "jaxlib/conda-forge/linux-64/jaxlib-0.1.44-py38h32f6830_0",
   "jaxlib/conda-forge/linux-64/jaxlib-0.1.65-py37h89c1867_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "mpi4jax": [],
  "mpi4py": [
   "mpi4py/conda-forge/linux-64/mpi4py-3.0.3-py37h029bd4c_2"
  ],
  "netket": [
   "netket/conda-forge/noarch/netket-3.0b1.post3-pyhd8ed1ab_0",
   "netket/conda-forge/noarch/netket-3.0b1.post7-pyhd8ed1ab_0",
   "netket/conda-forge/noarch/netket-3.0b2-pyhd8ed1ab_0"
  ],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.1-py_1",
   "networkx/conda-forge/noarch/networkx-2.2-py_1",
   "networkx/conda-forge/noarch/networkx-2.4-py_1",
   "networkx/conda-forge/noarch/networkx-2.5-py_0",
   "networkx/conda-forge/noarch/networkx-2.6.1-pyhd8ed1ab_0",
   "networkx/conda-forge/noarch/networkx-2.6.1-pyhd8ed1ab_1"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "numba": [
   "numba/conda-forge/linux-64/numba-0.40.0-py35hf8a1672_0",
   "numba/conda-forge/linux-64/numba-0.41.0-py27h637b7d7_1000"
  ],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.17.5-py36h95a1406_0",
   "numpy/conda-forge/linux-64/numpy-1.18.4-py37h8960a57_0",
   "numpy/conda-forge/linux-64/numpy-1.19.2-py36h68c22af_1"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "optax": [
   "optax/conda-forge/noarch/optax-0.0.6-pyhd8ed1ab_0",
   "optax/conda-forge/noarch/optax-0.0.8-pyhd8ed1ab_0",
   "optax/conda-forge/noarch/optax-0.0.9-pyhd8ed1ab_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "plum": [
   "plum-dispatch/conda-forge/linux-64/plum-dispatch-1.2.0-py37h6b43d8f_0",
   "plum-dispatch/conda-forge/linux-64/plum-dispatch-1.2.0-py38h497a2fe_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.17.1-np110py27_blas_openblas_202"
  ],
  "tensorboardX": [
   "tensorboardx/conda-forge/noarch/tensorboardx-0.9-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.0-py_1",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.2-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.4-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.6-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.7-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.9-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-2.0-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-2.1-py_0"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "torch": [
   "pytorch-cpu/conda-forge/linux-64/pytorch-cpu-1.1.0-py37he1b5a44_0",
   "pytorch-cpu/conda-forge/win-64/pytorch-cpu-1.0.1-py36ha925a31_0",
   "pytorch/conda-forge/linux-64/pytorch-1.6.0-cuda92py37hc3ec645_1",
   "pytorch/conda-forge/linux-64/pytorch-1.6.0-cuda92py38hb6ed0dd_1"
  ],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.38.0-py_2",
   "tqdm/conda-forge/noarch/tqdm-4.40.2-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.42.1-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.45.0-pyh9f0ad1d_0",
   "tqdm/conda-forge/noarch/tqdm-4.51.0-pyh9f0ad1d_0",
   "tqdm/conda-forge/noarch/tqdm-4.52.0-pyhd3deb0d_0",
   "tqdm/conda-forge/noarch/tqdm-4.55.0-pyhd8ed1ab_0",
   "tqdm/conda-forge/noarch/tqdm-4.56.0-pyhd8ed1ab_0",
   "tqdm/conda-forge/noarch/tqdm-4.56.1-pyhd8ed1ab_0",
   "tqdm/conda-forge/noarch/tqdm-4.60.0-pyhd8ed1ab_0"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}