{
 "bad": [
  "_get_new_dim",
  "argparse",
  "argparse.ArgumentTypeError",
  "colorlog.ColoredFormatter",
  "contextlib.contextmanager",
  "datetime.date",
  "datetime.date.fromisoformat",
  "datetime.datetime",
  "datetime.datetime.fromisoformat",
  "datetime.datetime.strptime",
  "datetime.datetime.today",
  "doctest.Example",
  "enum.Enum",
  "enum.unique",
  "filecmp",
  "filecmp.dircmp",
  "function",
  "functools.wraps",
  "geopandas.io.file.fiona.drvsupport.supported_drivers",
  "get_filename",
  "glob",
  "glob.glob",
  "hashlib",
  "hashlib.shake_256",
  "json",
  "json.JSONDecoder",
  "json.JSONEncoder",
  "json.JSONEncoder.default",
  "json.dump",
  "json.dumps",
  "json.load",
  "logging",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.INFO",
  "logging.Logger",
  "logging.NOTSET",
  "logging.WARNING",
  "logging.config",
  "logging.config.dictConfig",
  "logging.getLevelName",
  "logging.getLogger",
  "logging.root.manager",
  "lxml.doctestcompare.LXMLOutputChecker",
  "lxml.etree",
  "lxml.etree._Element",
  "lxml.etree.fromstring",
  "lxml.etree.tounicode",
  "numpy",
  "numpy.arange",
  "numpy.empty",
  "numpy.expand_dims",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isin",
  "numpy.isnan",
  "numpy.ma.masked_array",
  "numpy.max",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.round",
  "numpy.sign",
  "numpy.squeeze",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unpackbits",
  "numpy.where",
  "numpy.zeros",
  "os",
  "os.chdir",
  "os.cpu_count",
  "os.environ.get",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.path.splitext",
  "os.remove",
  "os.sep",
  "os.walk",
  "pandas",
  "pandas.DataFrame",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "pprint",
  "pprint.pformat",
  "psutil",
  "psutil.virtual_memory",
  "random.Random",
  "rasterio",
  "rasterio.DatasetReader",
  "rasterio.MemoryFile",
  "rasterio.enums.Resampling",
  "rasterio.enums.Resampling.nearest",
  "rasterio.features",
  "rasterio.features.shapes",
  "rasterio.features.sieve",
  "rasterio.mask",
  "rasterio.mask.mask",
  "rasterio.merge",
  "rasterio.merge.merge",
  "rasterio.open",
  "rasterio.warp",
  "rasterio.warp.reproject",
  "re",
  "re.compile",
  "re.split",
  "set_nodata",
  "shapely.geometry.MultiPolygon",
  "shapely.geometry.Polygon",
  "shapely.geometry.box",
  "shapely.wkt",
  "shapely.wkt.dumps",
  "shapely.wkt.load",
  "shapely.wkt.loads",
  "shutil",
  "shutil.Error",
  "shutil.copy2",
  "shutil.copytree",
  "shutil.make_archive",
  "shutil.rmtree",
  "str.encode",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "sys",
  "sys._getframe",
  "sys.stdout.encoding",
  "sys.version_info",
  "tarfile",
  "tarfile.ReadError",
  "tarfile.open",
  "tempfile",
  "tempfile.TemporaryDirectory",
  "time",
  "time.sleep",
  "typing.Any",
  "typing.Callable",
  "typing.Generator",
  "typing.Optional",
  "typing.Union",
  "xarray",
  "xarray.DataArray",
  "xarray.Dataset",
  "xarray.where",
  "zipfile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "_get_new_dim": [],
  "argparse": [],
  "colorlog": [],
  "contextlib": [],
  "datetime": [],
  "doctest": [],
  "enum": [],
  "filecmp": [],
  "function": [],
  "functools": [],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "get_filename": [],
  "glob": [],
  "hashlib": [],
  "json": [],
  "logging": [],
  "lxml": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "pickle": [],
  "pprint": [],
  "psutil": [],
  "random": [],
  "rasterio": [],
  "re": [],
  "rioxarray": [
   "rioxarray/conda-forge/noarch/rioxarray-0.3.0-pyhd8ed1ab_0"
  ],
  "set_nodata": [],
  "shapely": [],
  "shutil": [],
  "str": [],
  "subprocess": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "time": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "typing": [],
  "xarray": [],
  "zipfile": []
 }
}