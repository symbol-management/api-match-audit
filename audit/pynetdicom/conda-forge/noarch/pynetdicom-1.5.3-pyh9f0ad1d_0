{
 "bad": [
  "A_ASSOCIATE_RQ",
  "A_RELEASE_RP",
  "AbstractSyntaxSubItem",
  "Args",
  "DummyAE",
  "DummyMessage",
  "DummyReply",
  "DummyResponse",
  "Instance",
  "Instance.sop_instance_uid",
  "Queue",
  "Queue.Empty",
  "Queue.Queue",
  "Session",
  "SocketServer.BaseRequestHandler",
  "SocketServer.TCPServer",
  "SocketServer.ThreadingMixIn",
  "TransferSyntaxSubItem",
  "_add_failed_instance",
  "_search_universal",
  "atexit",
  "c2c",
  "clear",
  "codecs.encode",
  "collections.MutableSequence",
  "collections.abc.MutableSequence",
  "create_engine",
  "datetime.datetime.strftime",
  "f",
  "f.__doc__",
  "f.__name__",
  "frag",
  "func",
  "func.__name__",
  "get_handler",
  "io.BytesIO",
  "is_exe",
  "message",
  "orig",
  "orig_method",
  "os.X_OK",
  "os.access",
  "os.environ.get",
  "os.environ.split",
  "os.getpid",
  "os.kill",
  "os.listdir",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.remove",
  "p2e",
  "pdu",
  "pdu.decode",
  "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION.encode",
  "pynetdicom.VerificationPresentationContexts.context_id",
  "pynetdicom.__init__.PYNETDICOM_IMPLEMENTATION_UID",
  "pynetdicom.__init__.PYNETDICOM_IMPLEMENTATION_VERSION",
  "pynetdicom.__init__.PYNETDICOM_UID_PREFIX",
  "pynetdicom.__init__.msg",
  "pynetdicom.apps.qrscp.db.Instance.patient_name",
  "pynetdicom.apps.qrscp.db.Instance.sop_instance_uid",
  "pynetdicom.dimse_messages.C_CANCEL_RQ",
  "pynetdicom.dimse_messages.C_ECHO_RQ",
  "pynetdicom.dimse_messages.C_ECHO_RSP",
  "pynetdicom.dimse_messages.C_FIND_RQ",
  "pynetdicom.dimse_messages.C_FIND_RSP",
  "pynetdicom.dimse_messages.C_GET_RQ",
  "pynetdicom.dimse_messages.C_GET_RSP",
  "pynetdicom.dimse_messages.C_MOVE_RQ",
  "pynetdicom.dimse_messages.C_MOVE_RSP",
  "pynetdicom.dimse_messages.C_STORE_RQ",
  "pynetdicom.dimse_messages.C_STORE_RQ.command_set.MessageID",
  "pynetdicom.dimse_messages.C_STORE_RQ.data_set.get_value",
  "pynetdicom.dimse_messages.C_STORE_RSP",
  "pynetdicom.dimse_messages.N_ACTION_RQ",
  "pynetdicom.dimse_messages.N_ACTION_RSP",
  "pynetdicom.dimse_messages.N_CREATE_RQ",
  "pynetdicom.dimse_messages.N_CREATE_RSP",
  "pynetdicom.dimse_messages.N_DELETE_RQ",
  "pynetdicom.dimse_messages.N_DELETE_RSP",
  "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ",
  "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP",
  "pynetdicom.dimse_messages.N_GET_RQ",
  "pynetdicom.dimse_messages.N_GET_RSP",
  "pynetdicom.dimse_messages.N_SET_RQ",
  "pynetdicom.dimse_messages.N_SET_RSP",
  "pynetdicom.fsm._changes",
  "pynetdicom.fsm._changes.append",
  "pynetdicom.fsm._events",
  "pynetdicom.fsm._events.append",
  "pynetdicom.fsm._transitions",
  "pynetdicom.fsm._transitions.append",
  "pynetdicom.fsm.current_state",
  "pynetdicom.fsm.do_action",
  "pynetdicom.fsm.dul",
  "pynetdicom.fsm.dul.is_killed",
  "pynetdicom.fsm.original_action",
  "pynetdicom.fsm.original_transition",
  "pynetdicom.fsm.transition",
  "pynetdicom.sop_class.BasicColorPrintManagementMetaSOPClass",
  "pynetdicom.sop_class.BasicFilmSessionSOPClass",
  "pynetdicom.sop_class.BasicGrayscalePrintManagementMetaSOPClass",
  "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery",
  "pynetdicom.sop_class.CTImageStorage",
  "pynetdicom.sop_class.CTImageStorage.service_class",
  "pynetdicom.sop_class.CTImageStorage.transfer_syntax",
  "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery",
  "pynetdicom.sop_class.ColorPaletteInformationModelFind",
  "pynetdicom.sop_class.ColorPaletteInformationModelGet",
  "pynetdicom.sop_class.ColorPaletteInformationModelMove",
  "pynetdicom.sop_class.ColorPaletteInformationModelMove.service_class",
  "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet",
  "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet",
  "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove",
  "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind",
  "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind.service_class",
  "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet",
  "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove",
  "pynetdicom.sop_class.DisplaySystemSOPClass",
  "pynetdicom.sop_class.DisplaySystemSOPClass.service_class",
  "pynetdicom.sop_class.EncapsulatedSTLStorage",
  "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery",
  "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery.service_class",
  "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind",
  "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet",
  "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove",
  "pynetdicom.sop_class.HangingProtocolInformationModelFind",
  "pynetdicom.sop_class.HangingProtocolInformationModelGet",
  "pynetdicom.sop_class.HangingProtocolInformationModelGet.service_class",
  "pynetdicom.sop_class.HangingProtocolInformationModelMove",
  "pynetdicom.sop_class.HangingProtocolStorage",
  "pynetdicom.sop_class.HangingProtocolStorage.service_class",
  "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind",
  "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet",
  "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove",
  "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind",
  "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind.service_class",
  "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet",
  "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove",
  "pynetdicom.sop_class.InstanceAvailabilityNotificationSOPClass",
  "pynetdicom.sop_class.InstanceAvailabilityNotificationSOPClass.service_class",
  "pynetdicom.sop_class.MRImageStorage",
  "pynetdicom.sop_class.MediaCreationManagementSOPClass",
  "pynetdicom.sop_class.MediaCreationManagementSOPClass.service_class",
  "pynetdicom.sop_class.MediaStorageDirectoryStorage",
  "pynetdicom.sop_class.MediaStorageDirectoryStorage.service_class",
  "pynetdicom.sop_class.ModalityPerformedProcedureStepNotificationSOPClass",
  "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieveSOPClass",
  "pynetdicom.sop_class.ModalityPerformedProcedureStepSOPClass",
  "pynetdicom.sop_class.ModalityPerformedProcedureStepSOPClass.service_class",
  "pynetdicom.sop_class.ModalityWorklistInformationFind",
  "pynetdicom.sop_class.ModalityWorklistInformationFind.service_class",
  "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind",
  "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet",
  "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove",
  "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind",
  "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet",
  "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove",
  "pynetdicom.sop_class.PerformedImagingAgestAdministrationSRStorage",
  "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage",
  "pynetdicom.sop_class.PrintJobSOPClass",
  "pynetdicom.sop_class.PrintJobSOPClass.service_class",
  "pynetdicom.sop_class.PrinterSOPClass",
  "pynetdicom.sop_class.ProceduralEventLoggingSOPClass",
  "pynetdicom.sop_class.ProceduralEventLoggingSOPClass.service_class",
  "pynetdicom.sop_class.ProductCharacteristicsQueryInformationModelFind",
  "pynetdicom.sop_class.ProductCharacteristicsQueryInformationModelFind.service_class",
  "pynetdicom.sop_class.ProtocolApprovalInformationModelFind",
  "pynetdicom.sop_class.ProtocolApprovalInformationModelFind.service_class",
  "pynetdicom.sop_class.ProtocolApprovalInformationModelGet",
  "pynetdicom.sop_class.ProtocolApprovalInformationModelMove",
  "pynetdicom.sop_class.RTConventionalMachineVerification",
  "pynetdicom.sop_class.RTConventionalMachineVerification.service_class",
  "pynetdicom.sop_class.RTImageStorage",
  "pynetdicom.sop_class.SecondaryCaptureImageStorage",
  "pynetdicom.sop_class.StorageCommitmentPushModelSOPClass",
  "pynetdicom.sop_class.StorageCommitmentPushModelSOPClass.service_class",
  "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind",
  "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind.service_class",
  "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet",
  "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove",
  "pynetdicom.sop_class.SubstanceApprovalQueryInformationModelFind",
  "pynetdicom.sop_class.UnifiedProcedureStepEventSOPClass",
  "pynetdicom.sop_class.UnifiedProcedureStepPullSOPClass",
  "pynetdicom.sop_class.UnifiedProcedureStepPullSOPClass.service_class",
  "pynetdicom.sop_class.UnifiedProcedureStepPushSOPClass",
  "pynetdicom.sop_class.UnifiedProcedureStepQuerySOPClass",
  "pynetdicom.sop_class.UnifiedProcedureStepWatchSOPClass",
  "pynetdicom.sop_class.VerificationSOPClass",
  "pynetdicom.sop_class.VerificationSOPClass.service_class",
  "pynetdicom.sop_class._APPLICATION_EVENT_CLASSES.values",
  "pynetdicom.sop_class._BASIC_WORKLIST_CLASSES.values",
  "pynetdicom.sop_class._COLOR_PALETTE_CLASSES.values",
  "pynetdicom.sop_class._DEFINED_PROCEDURE_CLASSES.values",
  "pynetdicom.sop_class._DISPLAY_SYSTEM_CLASSES.values",
  "pynetdicom.sop_class._HANGING_PROTOCOL_CLASSES.values",
  "pynetdicom.sop_class._IMPLANT_TEMPLATE_CLASSES.values",
  "pynetdicom.sop_class._INSTANCE_AVAILABILITY_CLASSES.values",
  "pynetdicom.sop_class._MEDIA_CREATION_CLASSES.values",
  "pynetdicom.sop_class._MEDIA_STORAGE_CLASSES.values",
  "pynetdicom.sop_class._NON_PATIENT_OBJECT_CLASSES.values",
  "pynetdicom.sop_class._PRINT_MANAGEMENT_CLASSES.values",
  "pynetdicom.sop_class._PROCEDURE_STEP_CLASSES.values",
  "pynetdicom.sop_class._PROTOCOL_APPROVAL_CLASSES.values",
  "pynetdicom.sop_class._QR_CLASSES.values",
  "pynetdicom.sop_class._RELEVANT_PATIENT_QUERY_CLASSES.values",
  "pynetdicom.sop_class._RT_MACHINE_VERIFICATION_CLASSES.values",
  "pynetdicom.sop_class._STORAGE_CLASSES.values",
  "pynetdicom.sop_class._STORAGE_COMMITMENT_CLASSES.values",
  "pynetdicom.sop_class._SUBSTANCE_ADMINISTRATION_CLASSES.values",
  "pynetdicom.sop_class._UNIFIED_PROCEDURE_STEP_CLASSES.values",
  "pynetdicom.sop_class._VERIFICATION_CLASSES.values",
  "pynetdicom.status.Status.CANCEL",
  "pynetdicom.status.Status.PENDING",
  "pynetdicom.status.Status.PENDING_WITH_WARNING",
  "pynetdicom.status.Status.SUCCESS",
  "pynetdicom.status.Status.UNABLE_TO_DECODE",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "re.IGNORECASE",
  "re.VERBOSE",
  "reload",
  "sessionmaker",
  "signal.SIGINT",
  "socket",
  "socket.AF_INET",
  "socket.SHUT_RDWR",
  "socket.SOCK_DGRAM",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_RCVTIMEO",
  "socket.SO_REUSEADDR",
  "socket.error",
  "socket.socket",
  "socket.timeout",
  "socketserver.BaseRequestHandler",
  "socketserver.TCPServer",
  "socketserver.TCPServer.process_request",
  "socketserver.TCPServer.shutdown",
  "socketserver.ThreadingMixIn",
  "socketserver.ThreadingMixIn.process_request_thread",
  "sqlalchemy",
  "sqlalchemy.Column",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.String",
  "sqlalchemy.create_engine",
  "sqlalchemy.exc.IntegrityError",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.schema.MetaData",
  "ssl",
  "ssl.CERT_REQUIRED",
  "ssl.PROTOCOL_TLSv1_2",
  "ssl.Purpose.CLIENT_AUTH",
  "ssl.SSLContext",
  "ssl.SSLError",
  "ssl.SSLSocket",
  "ssl.TLSVersion.TLSv1_2",
  "ssl.create_default_context",
  "struct.Struct",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "sys",
  "sys.meta_path.insert",
  "sys.meta_path.remove",
  "sys.modules.update",
  "test",
  "time",
  "unicode",
  "unicodedata",
  "unicodedata.category",
  "warnings.warn",
  "yappi",
  "yappi.get_func_stats",
  "yappi.get_thread_stats",
  "yappi.set_clock_type",
  "yappi.start",
  "yappi.stop",
  "zlib",
  "zlib.DEFLATED",
  "zlib.MAX_WBITS",
  "zlib.Z_DEFAULT_COMPRESSION",
  "zlib.compressobj",
  "zlib.decompress"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "_pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "argparse": [
   "argparse/conda-forge/osx-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "backports": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "configparser": [
   "configparser/conda-forge/linux-64/configparser-3.7.1-py27_1",
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "configparser/conda-forge/noarch/configparser-5.0.1-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pydicom": [
   "pydicom/conda-forge/noarch/pydicom-1.2.0-py_0",
   "pydicom/conda-forge/noarch/pydicom-1.2.1-py_0",
   "pydicom/conda-forge/noarch/pydicom-1.4.1-py_0",
   "pydicom/conda-forge/noarch/pydicom-2.1.0-pyhd3deb0d_0",
   "pydicom/conda-forge/noarch/pydicom-2.2.1-pyh6c4a22f_0"
  ],
  "pyfakefs": [
   "pyfakefs/conda-forge/noarch/pyfakefs-3.7-py_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.0.2-py_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.1.0-py_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.2.1-pyhd8ed1ab_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.3.3-pyhd8ed1ab_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.4.0-pyhd8ed1ab_0",
   "pyfakefs/conda-forge/noarch/pyfakefs-4.5.0-pyhd8ed1ab_0"
  ],
  "pynetdicom": [
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.0-pyh9f0ad1d_0",
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.1-pyh9f0ad1d_0",
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.3-pyh9f0ad1d_0",
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.4-pyhd3deb0d_0",
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.5-pyhd3deb0d_0",
   "pynetdicom/conda-forge/noarch/pynetdicom-1.5.6-pyh44b312d_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "queue": [
   "pies2overrides/conda-forge/osx-64/pies2overrides-2.6.7-py27_1000",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "select": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}