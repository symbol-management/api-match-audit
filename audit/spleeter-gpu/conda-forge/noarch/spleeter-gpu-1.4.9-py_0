{
 "bad": [
  "_reduce",
  "abc.ABC",
  "abc.abstractmethod",
  "adapter.AudioAdapter",
  "adapter_class",
  "apply_model",
  "argparse.ArgumentParser",
  "argparse.Namespace",
  "audio.adapter.get_audio_adapter",
  "audio.adapter.get_default_audio_adapter",
  "audio.convertor.db_uint_spectrogram_to_gain",
  "audio.convertor.spectrogram_to_db_uint",
  "audio.convertor.to_stereo",
  "audio.spectrogram.compute_spectrogram_tf",
  "audio.spectrogram.random_pitch_shift",
  "audio.spectrogram.random_time_stretch",
  "commands.create_argument_parser",
  "commands.evaluate.entrypoint",
  "conv2d_factory",
  "conv2d_transpose_factory",
  "conv_activation_layer",
  "create_bidirectional",
  "dataset.get_training_dataset",
  "dataset.get_validation_dataset",
  "deconv_activation_layer",
  "ffmpeg.FFMPEGProcessAudioAdapter",
  "ffmpeg.input",
  "ffmpeg.probe",
  "functools.partial",
  "github.GithubModelProvider",
  "github.GithubModelProvider.LATEST_RELEASE",
  "glob.glob",
  "hashlib.sha256",
  "importlib.import_module",
  "importlib_resources.is_resource",
  "importlib_resources.open_text",
  "itertools.product",
  "json.load",
  "model.model_fn",
  "model.provider.ModelProvider.writeProbe",
  "model.provider.get_default_model_provider",
  "multiprocessing.Pool",
  "musdb.DB",
  "museval.eval_mus_dir",
  "numpy.abs",
  "numpy.dtype",
  "numpy.float32",
  "numpy.frombuffer",
  "numpy.isnan",
  "numpy.log",
  "numpy.median",
  "numpy.repeat",
  "os.environ",
  "os.environ.get",
  "os.makedirs",
  "os.path.basename",
  "os.path.exists",
  "os.path.isabs",
  "os.path.join",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "pandas.DataFrame",
  "pandas.MultiIndex.from_tuples",
  "pandas.read_csv",
  "predictor",
  "separate.entrypoint",
  "separator.Separator",
  "start",
  "sys.argv",
  "sys.exit",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.gettempdir",
  "tensorflow.abs",
  "tensorflow.bool",
  "tensorflow.cast",
  "tensorflow.compat.v1.ConfigProto",
  "tensorflow.compat.v1.keras.initializers.he_uniform",
  "tensorflow.compat.v1.keras.layers.CuDNNLSTM",
  "tensorflow.compat.v1.logging",
  "tensorflow.compat.v1.logging.DEBUG",
  "tensorflow.compat.v1.logging.Formatter",
  "tensorflow.compat.v1.logging.INFO",
  "tensorflow.compat.v1.logging.StreamHandler",
  "tensorflow.compat.v1.logging.getLogger",
  "tensorflow.compat.v1.logging.info",
  "tensorflow.compat.v1.metrics.mean",
  "tensorflow.compat.v1.placeholder",
  "tensorflow.compat.v1.train.AdadeltaOptimizer",
  "tensorflow.compat.v1.train.AdamOptimizer",
  "tensorflow.compat.v1.train.GradientDescentOptimizer",
  "tensorflow.compat.v1.train.get_global_step",
  "tensorflow.complex64",
  "tensorflow.concat",
  "tensorflow.cond",
  "tensorflow.constant",
  "tensorflow.contrib.predictor.from_saved_model",
  "tensorflow.contrib.signal.hann_window",
  "tensorflow.contrib.signal.inverse_stft",
  "tensorflow.contrib.signal.stft",
  "tensorflow.data.Dataset.from_tensor_slices",
  "tensorflow.equal",
  "tensorflow.estimator.Estimator",
  "tensorflow.estimator.EstimatorSpec",
  "tensorflow.estimator.EvalSpec",
  "tensorflow.estimator.ModeKeys.EVAL",
  "tensorflow.estimator.ModeKeys.PREDICT",
  "tensorflow.estimator.ModeKeys.TRAIN",
  "tensorflow.estimator.RunConfig",
  "tensorflow.estimator.TrainSpec",
  "tensorflow.estimator.export.ServingInputReceiver",
  "tensorflow.estimator.train_and_evaluate",
  "tensorflow.float32",
  "tensorflow.float64",
  "tensorflow.image.ResizeMethod.BILINEAR",
  "tensorflow.image.random_crop",
  "tensorflow.image.resize_image_with_crop_or_pad",
  "tensorflow.image.resize_images",
  "tensorflow.int32",
  "tensorflow.keras.layers.BatchNormalization",
  "tensorflow.keras.layers.Bidirectional",
  "tensorflow.keras.layers.Concatenate",
  "tensorflow.keras.layers.Conv2D",
  "tensorflow.keras.layers.Conv2DTranspose",
  "tensorflow.keras.layers.Dense",
  "tensorflow.keras.layers.Dropout",
  "tensorflow.keras.layers.ELU",
  "tensorflow.keras.layers.Flatten",
  "tensorflow.keras.layers.LeakyReLU",
  "tensorflow.keras.layers.Multiply",
  "tensorflow.keras.layers.ReLU",
  "tensorflow.keras.layers.Reshape",
  "tensorflow.keras.layers.Softmax",
  "tensorflow.keras.layers.TimeDistributed",
  "tensorflow.logical_and",
  "tensorflow.logical_not",
  "tensorflow.math.floormod",
  "tensorflow.math.is_inf",
  "tensorflow.math.log",
  "tensorflow.maximum",
  "tensorflow.pad",
  "tensorflow.pow",
  "tensorflow.py_function",
  "tensorflow.random_uniform",
  "tensorflow.reduce_any",
  "tensorflow.reduce_max",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_min",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.shape",
  "tensorflow.stack",
  "tensorflow.string",
  "tensorflow.string_join",
  "tensorflow.tile",
  "tensorflow.transpose",
  "tensorflow.uint8",
  "tensorflow.zeros",
  "time.sleep",
  "utils.configuration.load_configuration",
  "utils.estimator.create_estimator",
  "utils.estimator.to_predictor",
  "utils.logging.enable_logging",
  "utils.logging.enable_tensorflow_logging",
  "utils.logging.get_logger",
  "utils.tensor.check_tensor_shape",
  "utils.tensor.dataset_from_csv",
  "utils.tensor.from_float32_to_uint8",
  "utils.tensor.from_uint8_to_float32",
  "utils.tensor.pad_and_partition",
  "utils.tensor.pad_and_reshape",
  "utils.tensor.set_tensor_shape",
  "utils.tensor.sync_apply",
  "warnings.filterwarnings"
 ],
 "deps": {
  "_reduce": [],
  "abc": [],
  "adapter": [],
  "adapter_class": [],
  "apply_model": [],
  "argparse": [],
  "audio": [],
  "commands": [],
  "conv2d_factory": [],
  "conv2d_transpose_factory": [],
  "conv_activation_layer": [],
  "create_bidirectional": [],
  "dataset": [],
  "deconv_activation_layer": [],
  "ffmpeg": [
   "ffmpeg-python/conda-forge/noarch/ffmpeg-python-0.2.0-py_0"
  ],
  "functools": [],
  "github": [],
  "glob": [],
  "hashlib": [],
  "importlib": [],
  "importlib_resources": [],
  "itertools": [],
  "json": [],
  "model": [],
  "multiprocessing": [],
  "musdb": [],
  "museval": [],
  "norbert": [
   "norbert/conda-forge/noarch/norbert-0.2.1-py_0"
  ],
  "numpy": [],
  "os": [],
  "pandas": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "predictor": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "separate": [],
  "separator": [],
  "spleeter": [
   "spleeter-gpu/conda-forge/noarch/spleeter-gpu-1.4.9-py_0"
  ],
  "start": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "tensorflow": [],
  "time": [],
  "utils": [],
  "warnings": []
 }
}