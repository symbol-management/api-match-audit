{
 "bad": [
  "BatchHardTripletLoss.BatchHardTripletLoss",
  "BatchHardTripletLoss.BatchHardTripletLoss.get_anchor_negative_triplet_mask",
  "BatchHardTripletLoss.BatchHardTripletLoss.get_anchor_positive_triplet_mask",
  "BatchHardTripletLoss.BatchHardTripletLoss.get_triplet_mask",
  "InputExample",
  "SentenceEvaluator",
  "SentenceTransformer",
  "SimilarityFunction.COSINE",
  "SimilarityFunction.DOT_PRODUCT",
  "SimilarityFunction.EUCLIDEAN",
  "SimilarityFunction.MANHATTAN",
  "Transformer",
  "WordTokenizer.WordTokenizer",
  "__version__",
  "abc.ABC",
  "abc.abstractmethod",
  "bisect",
  "bisect.bisect_right",
  "collections",
  "collections.OrderedDict",
  "collections.defaultdict",
  "conv",
  "csv",
  "csv.reader",
  "csv.writer",
  "datasets.EncodeDataset.EncodeDataset",
  "enum.Enum",
  "evaluation.SentenceEvaluator",
  "evaluator",
  "gzip",
  "gzip.open",
  "importlib",
  "importlib.import_module",
  "json",
  "json.dump",
  "json.load",
  "logging",
  "logging.DEBUG",
  "logging.Handler",
  "logging.INFO",
  "logging.error",
  "logging.getLogger",
  "logging.info",
  "loss_fct",
  "loss_model",
  "loss_model.parameters",
  "loss_model.train",
  "loss_model.zero_grad",
  "math",
  "math.ceil",
  "multiprocessing",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "nltk",
  "nltk.word_tokenize",
  "numpy",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argpartition",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.dot",
  "numpy.float32",
  "numpy.generic",
  "numpy.log2",
  "numpy.mean",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.random.choice",
  "numpy.random.shuffle",
  "numpy.zeros",
  "os",
  "os.listdir",
  "os.makedirs",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.rename",
  "queue",
  "queue.Empty",
  "queue.PriorityQueue",
  "queue.Queue",
  "random",
  "random.shuffle",
  "readers.InputExample",
  "readers.InputExample.InputExample",
  "requests",
  "requests.get",
  "scipy.spatial",
  "scipy.stats.pearsonr",
  "scipy.stats.spearmanr",
  "shutil",
  "sklearn.metrics.average_precision_score",
  "sklearn.metrics.pairwise.cosine_similarity",
  "sklearn.metrics.pairwise.paired_cosine_distances",
  "sklearn.metrics.pairwise.paired_euclidean_distances",
  "sklearn.metrics.pairwise.paired_manhattan_distances",
  "sklearn.preprocessing.normalize",
  "str.__class__.__module__",
  "string",
  "string.punctuation",
  "sys",
  "sys.stderr",
  "tokenizer.WhitespaceTokenizer",
  "torch",
  "torch.Tensor",
  "torch.abs",
  "torch.argmax",
  "torch.cat",
  "torch.clamp",
  "torch.cosine_similarity",
  "torch.cuda.amp.GradScaler",
  "torch.cuda.amp.autocast",
  "torch.cuda.device_count",
  "torch.cuda.is_available",
  "torch.device",
  "torch.diag",
  "torch.exp",
  "torch.eye",
  "torch.float",
  "torch.from_numpy",
  "torch.functional",
  "torch.is_tensor",
  "torch.load",
  "torch.log1p",
  "torch.logsumexp",
  "torch.long",
  "torch.matmul",
  "torch.max",
  "torch.mean",
  "torch.mm",
  "torch.multiprocessing",
  "torch.multiprocessing.get_context",
  "torch.mv",
  "torch.nn",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.MSELoss",
  "torch.nn.Module",
  "torch.nn.Sequential",
  "torch.nn.functional",
  "torch.nn.functional.cosine_similarity",
  "torch.nn.functional.normalize",
  "torch.nn.functional.pairwise_distance",
  "torch.nn.functional.relu",
  "torch.nn.utils.clip_grad_norm_",
  "torch.nn.utils.rnn.pack_padded_sequence",
  "torch.nn.utils.rnn.pad_packed_sequence",
  "torch.no_grad",
  "torch.norm",
  "torch.numel",
  "torch.optim.Optimizer",
  "torch.qr",
  "torch.reshape",
  "torch.save",
  "torch.sqrt",
  "torch.stack",
  "torch.sum",
  "torch.tensor",
  "torch.topk",
  "torch.utils.data.DataLoader",
  "torch.utils.data.Dataset",
  "torch.utils.data.Sampler",
  "torch.var",
  "torch.where",
  "torch.zeros",
  "tqdm",
  "tqdm.autonotebook.tqdm",
  "tqdm.autonotebook.trange",
  "tqdm.tqdm",
  "tqdm.tqdm.write",
  "transformers",
  "transformers.AdamW",
  "transformers.AutoConfig",
  "transformers.AutoModel",
  "transformers.AutoTokenizer",
  "transformers.T5Model",
  "transformers.T5Tokenizer",
  "transformers.get_constant_schedule",
  "transformers.get_constant_schedule_with_warmup",
  "transformers.get_cosine_schedule_with_warmup",
  "transformers.get_cosine_with_hard_restarts_schedule_with_warmup",
  "transformers.get_linear_schedule_with_warmup",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "util.batch_to_device",
  "util.fullname",
  "util.http_get",
  "util.import_from_string",
  "util.pytorch_cos_sim",
  "zipfile.ZipFile"
 ],
 "deps": {
  "BatchHardTripletLoss": [],
  "InputExample": [],
  "SentenceEvaluator": [],
  "SentenceTransformer": [],
  "SimilarityFunction": [],
  "Transformer": [],
  "WordTokenizer": [],
  "__version__": [],
  "abc": [],
  "bisect": [],
  "collections": [],
  "conv": [],
  "csv": [],
  "datasets": [],
  "enum": [],
  "evaluation": [],
  "evaluator": [],
  "gzip": [],
  "importlib": [],
  "json": [],
  "logging": [],
  "loss_fct": [],
  "loss_model": [],
  "math": [],
  "multiprocessing": [],
  "nltk": [],
  "numpy": [],
  "os": [],
  "queue": [],
  "random": [],
  "readers": [],
  "requests": [],
  "scipy": [],
  "shutil": [],
  "sklearn": [],
  "str": [],
  "string": [],
  "sys": [],
  "tokenizer": [],
  "torch": [],
  "tqdm": [],
  "transformers": [],
  "typing": [],
  "util": [],
  "zipfile": []
 }
}