{
 "bad": [
  "Airway.valid",
  "CoordinatePoint.valid",
  "Point.valid",
  "_clip_generator",
  "airports",
  "airspaces.eurocontrol_aixm.AIXMAirspaceParser.aixm_path",
  "airspaces.eurocontrol_aixm.AIXMAirspaceParser.cache_dir",
  "all_aligned_segments",
  "altair.datum.name",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.REMAINDER",
  "basic.aircraft.Aircraft.cache_dir",
  "basic.airports.Airports.cache_dir",
  "basic.airways.Airways.cache_dir",
  "basic.navaid.Navaids.cache_dir",
  "basic.runways.Runways.cache_dir",
  "bs4",
  "bs4.BeautifulSoup",
  "buffer_to_iter",
  "cache_dir",
  "cached_values",
  "calendar.timegm",
  "cartes.osm.Nominatim.search",
  "cartes.osm.Overpass.request",
  "cartes.osm.requests.session.proxies.update",
  "cartes.osm.requests.session.trust_env",
  "cartopy",
  "cartopy.crs",
  "cartopy.crs.EuroPP",
  "cartopy.crs.PlateCarree",
  "cartopy.crs.Projection",
  "cartopy.feature.NaturalEarthFeature",
  "cartopy.mpl.geoaxes.GeoAxesSubplot",
  "cartopy.mpl.geoaxes.GeoAxesSubplot.set_default_extent",
  "cascaded_filters",
  "collections.UserDict",
  "collections.abc.Generator",
  "collections.defaultdict",
  "concurrent.futures.ProcessPoolExecutor",
  "concurrent.futures.as_completed",
  "config.get",
  "config_dir",
  "config_file",
  "contextlib.contextmanager",
  "core.Flight.distance",
  "core.Traffic.from_file",
  "core.Traffic.from_flights",
  "core.airspace.components.add",
  "core.distance.closest_point",
  "core.distance.guess_airport",
  "core.structure.NavaidTuple._fields",
  "cryptography.hazmat.primitives.serialization.pkcs12",
  "cryptography.hazmat.primitives.serialization.pkcs12.load_key_and_certificates",
  "data.adsb.decode.Decoder.from_file",
  "data.aircraft",
  "data.aircraft.T",
  "data.aircraft.data.query",
  "data.aircraft.get_unique",
  "data.aircraft.operator",
  "data.aircraft.stats",
  "data.airports",
  "data.airports.search",
  "data.airways",
  "data.navaids",
  "data.navaids.extent",
  "data.navaids.search",
  "data.nm_airspaces",
  "data.nm_navaids",
  "data.nm_navaids.data",
  "data.opensky.extended",
  "data.opensky.history",
  "data.opensky.request",
  "data.runways",
  "data.session.get",
  "datetime.datetime",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.now",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "datetime.timezone",
  "datetime.timezone.utc",
  "decode_time_here",
  "drawing.Nominatim",
  "drawing.Nominatim.search",
  "drawing.markers.atc_tower",
  "encoder",
  "eurocontrol.ddr.airspaces.NMAirspaceParser.nm_path",
  "eurocontrol.ddr.navpoints.NMNavaids.from_file",
  "eurocontrol.ddr.routes.NMRoutes.nm_path",
  "failure",
  "fastkml.LineStyle",
  "fastkml.PolyStyle",
  "fastkml.geometry.Geometry",
  "fastkml.kml",
  "fastkml.kml.Document",
  "fastkml.kml.Folder",
  "fastkml.kml.Geometry",
  "fastkml.kml.KML",
  "fastkml.kml.Placemark",
  "fastkml.kml.Style",
  "fastkml.kml.StyleUrl",
  "flatten",
  "fun",
  "functools",
  "functools.lru_cache",
  "functools.reduce",
  "functools.wraps",
  "gen",
  "geodesy.bearing",
  "geodesy.destination",
  "geodesy.distance",
  "getpass",
  "getpass.getuser",
  "groupby_intervals",
  "hashlib",
  "hashlib.md5",
  "importlib",
  "importlib.import_module",
  "inspect",
  "inspect.currentframe",
  "inspect.getmembers",
  "inspect.isfunction",
  "inspect.signature",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "ipyleaflet.Map.add_layer",
  "is_lambda",
  "itertools",
  "itertools.chain",
  "json",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "keplergl.KeplerGl",
  "keplergl.KeplerGl.add_data",
  "libarchive.public.memory_reader",
  "loader",
  "logging",
  "logging.DEBUG",
  "logging.INFO",
  "logging.debug",
  "logging.error",
  "logging.getLogger",
  "logging.info",
  "logging.warn",
  "logging.warning",
  "matplotlib",
  "matplotlib.artist.Artist",
  "matplotlib.axes._subplots.Axes",
  "matplotlib.get_configdir",
  "matplotlib.patches.Polygon",
  "matplotlib.path.Path",
  "matplotlib.pyplot",
  "matplotlib.pyplot.style.reload_library",
  "matplotlib.transforms.offset_copy",
  "metar.Metar",
  "metar.Metar.Metar",
  "method",
  "most_probable_navpoints",
  "next_in_binary",
  "next_in_socket",
  "nm_b2b.flight_get",
  "numbers.Real",
  "numpy",
  "numpy.False_",
  "numpy.True_",
  "numpy.abs",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.c_",
  "numpy.cos",
  "numpy.cross",
  "numpy.datetime64",
  "numpy.degrees",
  "numpy.dot",
  "numpy.dstack",
  "numpy.exp",
  "numpy.float32",
  "numpy.float64",
  "numpy.int32",
  "numpy.int64",
  "numpy.linalg.norm",
  "numpy.logical_and",
  "numpy.max",
  "numpy.maximum",
  "numpy.nanmax",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.pad",
  "numpy.pi",
  "numpy.r_",
  "numpy.radians",
  "numpy.s_",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.tan",
  "numpy.timedelta64",
  "numpy.uint8",
  "numpy.unwrap",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator",
  "operator.attrgetter",
  "operator.eq",
  "operator.itemgetter",
  "operator.or_",
  "os",
  "os.environ",
  "os.environ.keys",
  "os.name",
  "os.path.dirname",
  "os.path.expanduser",
  "os.path.join",
  "os.startfile",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DataFrame.from_records",
  "pandas.MultiIndex",
  "pandas.NaT",
  "pandas.Series",
  "pandas.Timedelta",
  "pandas.Timestamp",
  "pandas.concat",
  "pandas.core.internals.DatetimeTZBlock",
  "pandas.core.internals.DatetimeTZBlock.interpolate",
  "pandas.core.series.Series",
  "pandas.datetime",
  "pandas.errors.ParserError",
  "pandas.read_csv",
  "pandas.read_hdf",
  "pandas.read_json",
  "pandas.read_parquet",
  "pandas.read_pickle",
  "pandas.to_datetime",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "pkg_resources",
  "pkg_resources.iter_entry_points",
  "pkgutil",
  "pkgutil.walk_packages",
  "pyModeS",
  "pyModeS.adsb",
  "pyModeS.adsb.altitude",
  "pyModeS.adsb.altitude_diff",
  "pyModeS.adsb.callsign",
  "pyModeS.adsb.nac_p",
  "pyModeS.adsb.nac_v",
  "pyModeS.adsb.nic_a_c",
  "pyModeS.adsb.nic_b",
  "pyModeS.adsb.nic_s",
  "pyModeS.adsb.nic_v1",
  "pyModeS.adsb.nic_v2",
  "pyModeS.adsb.nuc_p",
  "pyModeS.adsb.nuc_v",
  "pyModeS.adsb.oe_flag",
  "pyModeS.adsb.position",
  "pyModeS.adsb.sil",
  "pyModeS.adsb.surface_position_with_ref",
  "pyModeS.adsb.typecode",
  "pyModeS.adsb.velocity",
  "pyModeS.adsb.version",
  "pyModeS.bds.infer",
  "pyModeS.bds.is50or60",
  "pyModeS.c_common.hex2bin",
  "pyModeS.commb.cs20",
  "pyModeS.commb.gs50",
  "pyModeS.commb.hdg60",
  "pyModeS.commb.hum44",
  "pyModeS.commb.ias60",
  "pyModeS.commb.ic45",
  "pyModeS.commb.mach60",
  "pyModeS.commb.mb45",
  "pyModeS.commb.p40baro",
  "pyModeS.commb.p44",
  "pyModeS.commb.p45",
  "pyModeS.commb.rh45",
  "pyModeS.commb.roll50",
  "pyModeS.commb.rtrk50",
  "pyModeS.commb.selalt40fms",
  "pyModeS.commb.selalt40mcp",
  "pyModeS.commb.tas50",
  "pyModeS.commb.temp44",
  "pyModeS.commb.temp45",
  "pyModeS.commb.trk50",
  "pyModeS.commb.turb44",
  "pyModeS.commb.turb45",
  "pyModeS.commb.vr60baro",
  "pyModeS.commb.vr60ins",
  "pyModeS.commb.wind44",
  "pyModeS.commb.ws45",
  "pyModeS.commb.wv45",
  "pyModeS.common.altcode",
  "pyModeS.common.idcode",
  "pyModeS.crc",
  "pyModeS.df",
  "pyModeS.extra.rtlreader.RtlReader",
  "pyModeS.icao",
  "pyproj",
  "pyproj.Geod",
  "pyproj.Proj",
  "pyproj.Transformer.from_proj",
  "pyproj.transform",
  "random",
  "random.randint",
  "raw_data.RawData.from_list",
  "re",
  "re.IGNORECASE",
  "re.finditer",
  "re.match",
  "re.search",
  "re.sub",
  "reply.B2BReply.fromET",
  "rtlsdr.MyRtlReader",
  "scipy.interpolate.interp1d",
  "scipy.signal",
  "scipy.spatial.distance.pdist",
  "scipy.spatial.distance.squareform",
  "session.get",
  "shapely.geometry.base.mark_line",
  "shapely.geometry.base.transform_fold",
  "shapely.geometry.shape.shape",
  "signal",
  "signal.SIGINT",
  "signal.signal",
  "socket",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.close",
  "socket.recv",
  "socket.socket",
  "ssl.PROTOCOL_SSLv23",
  "ssl.PROTOCOL_TLS",
  "str.lower",
  "string",
  "string.ascii_letters",
  "string.digits",
  "subprocess",
  "subprocess.call",
  "subprocess.check_output",
  "sys",
  "sys.exit",
  "sys.last_traceback",
  "sys.path.insert",
  "sys.platform",
  "sys.platform.startswith",
  "sys.version_info",
  "tempfile.gettempdir",
  "textwrap",
  "textwrap.wrap",
  "threading",
  "threading.Thread",
  "time",
  "time.sleep",
  "tqdm.TqdmExperimentalWarning",
  "tqdm.autonotebook.tqdm",
  "traceback",
  "traceback.format_tb",
  "traffic.Traffic.from_flights",
  "traffic.__init__._enabled_list",
  "traffic.__init__._enabled_plugins_raw",
  "traffic.__init__._selected",
  "traffic.__init__.cache_dir",
  "traffic.__init__.cache_dir_cfg",
  "traffic.__init__.cache_expiration_cfg",
  "traffic.__init__.cache_purge",
  "traffic.__init__.cache_purge_cfg",
  "traffic.__init__.config",
  "traffic.__init__.config_dir",
  "traffic.__init__.config_file",
  "traffic.__init__.config_template",
  "traffic.__init__.handle",
  "traffic.__init__.load",
  "traffic.__init__.purgeable",
  "traffic.config.get",
  "traffic.console.__init__.import_submodules",
  "traffic.core.Airspace.from_file",
  "traffic.core.Traffic.from_flights",
  "traffic.core.__init__.Flight",
  "traffic.core.airspace.components",
  "traffic.data.ModeS_Decoder.from_address",
  "traffic.data.ModeS_Decoder.from_dump1090",
  "traffic.data.__init__.AIXMAirspaceParser",
  "traffic.data.__init__.Aircraft",
  "traffic.data.__init__.Airports",
  "traffic.data.__init__.Airways",
  "traffic.data.__init__.NMAirspaceParser",
  "traffic.data.__init__.NMB2B",
  "traffic.data.__init__.NMRoutes",
  "traffic.data.__init__.Navaids",
  "traffic.data.__init__.OpenSky",
  "traffic.data.__init__.Runways",
  "traffic.data.__init__.aixm_path_str",
  "traffic.data.__init__.cache_dir",
  "traffic.data.__init__.config_file",
  "traffic.data.__init__.http_proxy",
  "traffic.data.__init__.https_proxy",
  "traffic.data.__init__.nm_b2b",
  "traffic.data.__init__.nm_path_str",
  "traffic.data.__init__.nmb2b_mode",
  "traffic.data.__init__.nmb2b_version",
  "traffic.data.__init__.opensky",
  "traffic.data.__init__.opensky_password",
  "traffic.data.__init__.opensky_username",
  "traffic.data.__init__.paramiko_proxy",
  "traffic.data.__init__.pkcs12_filename",
  "traffic.data.__init__.pkcs12_password",
  "traffic.data.__init__.proxy_values",
  "traffic.data.aircraft.data.drop_duplicates",
  "traffic.data.airways.global_get",
  "traffic.data.datasets.__init__._squawk7700_reader",
  "traffic.data.datasets.__init__._squawk7700_url",
  "traffic.data.datasets.__init__.cache_dir",
  "traffic.data.datasets.__init__.datasets",
  "traffic.data.datasets.__init__.download_data",
  "traffic.data.datasets.__init__.get_dataset",
  "traffic.data.eurocontrol.b2b.__init__.B2BReply",
  "traffic.data.eurocontrol.b2b.__init__.FlightManagement",
  "traffic.data.eurocontrol.b2b.__init__.Measures",
  "traffic.data.eurocontrol.b2b.xml.__init__.RequestsDict",
  "traffic.data.faa.__init__.__all__",
  "traffic.data.faa.__init__.cache_expiration",
  "traffic.data.navaids.extent",
  "traffic.data.navaids.global_get",
  "traffic.data.nm_airways.available",
  "traffic.data.nm_airways.data.query",
  "traffic.data.nm_b2b.aixm_dataset",
  "traffic.data.samples.__init__.Flight",
  "traffic.data.samples.__init__.Traffic",
  "traffic.data.samples.__init__.__getattr__",
  "traffic.data.samples.__init__._current_dir",
  "traffic.data.samples.__init__.get_flight",
  "traffic.data.samples.ambulances.__init__.__all__",
  "traffic.data.samples.ambulances.__init__._current_dir",
  "traffic.data.samples.ambulances.__init__.get_flight",
  "traffic.data.samples.calibration.__init__.__all__",
  "traffic.data.samples.calibration.__init__._current_dir",
  "traffic.data.samples.calibration.__init__.get_flight",
  "traffic.data.samples.collections.__init__.__all__",
  "traffic.data.samples.collections.__init__._current_dir",
  "traffic.data.samples.collections.__init__.get_flight",
  "traffic.data.samples.featured.__init__.__all__",
  "traffic.data.samples.featured.__init__._current_dir",
  "traffic.data.samples.featured.__init__.get_flight",
  "traffic.data.samples.firefighting.__init__.__all__",
  "traffic.data.samples.firefighting.__init__._current_dir",
  "traffic.data.samples.firefighting.__init__.get_flight",
  "traffic.data.samples.gliders.__init__.__all__",
  "traffic.data.samples.gliders.__init__._current_dir",
  "traffic.data.samples.gliders.__init__.get_flight",
  "traffic.data.samples.military.__init__.__all__",
  "traffic.data.samples.military.__init__._current_dir",
  "traffic.data.samples.military.__init__.get_flight",
  "traffic.data.samples.onground.__init__.__all__",
  "traffic.data.samples.onground.__init__._current_dir",
  "traffic.data.samples.onground.__init__.get_flight",
  "traffic.data.samples.surveillance.__init__.__all__",
  "traffic.data.samples.surveillance.__init__._current_dir",
  "traffic.data.samples.surveillance.__init__.get_flight",
  "traffic.data.samples.surveys.__init__.__all__",
  "traffic.data.samples.surveys.__init__._current_dir",
  "traffic.data.samples.surveys.__init__.get_flight",
  "traffic.data.samples.tv_relay.__init__.__all__",
  "traffic.data.samples.tv_relay.__init__._current_dir",
  "traffic.data.samples.tv_relay.__init__.get_flight",
  "traffic.drawing.__init__._traffic_style",
  "traffic.drawing.__init__.config_dir",
  "traffic.drawing.__init__.mpl_style_location",
  "types",
  "types.LambdaType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.NamedTuple",
  "typing.NoReturn",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.TextIO",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "typing.overload",
  "value",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xml.REQUESTS.format",
  "xml.dom.minidom",
  "xml.dom.minidom.parseString",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ElementTree",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.iterparse",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.tostring",
  "yield_pairs",
  "zipfile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "Airway": [],
  "CoordinatePoint": [],
  "OpenSSL": [
   "pyopenssl/conda-forge/noarch/pyopenssl-19.1.0-py_1"
  ],
  "Point": [],
  "_clip_generator": [],
  "airports": [],
  "airspaces": [],
  "all_aligned_segments": [],
  "altair": [
   "altair/conda-forge/noarch/altair-4.1.0-py_1"
  ],
  "appdirs": [
   "appdirs/conda-forge/noarch/appdirs-1.4.4-pyh9f0ad1d_0"
  ],
  "argparse": [],
  "basic": [],
  "bs4": [],
  "buffer_to_iter": [],
  "cache_dir": [],
  "cached_values": [],
  "calendar": [],
  "cartes": [
   "cartes/conda-forge/noarch/cartes-0.3-pyhd8ed1ab_0"
  ],
  "cartopy": [],
  "cascaded_filters": [],
  "collections": [],
  "concurrent": [],
  "config": [],
  "config_dir": [],
  "config_file": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "contextlib": [],
  "core": [],
  "cryptography": [],
  "data": [],
  "datetime": [],
  "decode_time_here": [],
  "drawing": [],
  "encoder": [],
  "eurocontrol": [],
  "failure": [],
  "fastkml": [],
  "flatten": [],
  "fun": [],
  "functools": [],
  "gen": [],
  "geodesy": [],
  "getpass": [],
  "groupby_intervals": [],
  "hashlib": [],
  "importlib": [],
  "importlib_metadata": [
   "importlib-metadata/conda-forge/noarch/importlib-metadata-3.0.0-pyhd8ed1ab_0"
  ],
  "inspect": [],
  "io": [],
  "ipyleaflet": [
   "ipyleaflet/conda-forge/noarch/ipyleaflet-0.13.6-pyhd8ed1ab_1"
  ],
  "ipywidgets": [
   "ipywidgets/conda-forge/noarch/ipywidgets-7.5.0-py_0"
  ],
  "is_lambda": [],
  "itertools": [],
  "json": [],
  "keplergl": [],
  "libarchive": [],
  "loader": [],
  "logging": [],
  "matplotlib": [],
  "metar": [],
  "method": [],
  "most_probable_navpoints": [],
  "next_in_binary": [],
  "next_in_socket": [],
  "nm_b2b": [],
  "numbers": [],
  "numpy": [],
  "openap": [
   "openap/conda-forge/noarch/openap-1.1-pyhd8ed1ab_0"
  ],
  "operator": [],
  "os": [],
  "pandas": [],
  "paramiko": [
   "paramiko/conda-forge/noarch/paramiko-2.7.1-pyh9f0ad1d_1"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pickle": [],
  "pkg_resources": [],
  "pkgutil": [],
  "pyModeS": [],
  "pyproj": [],
  "random": [],
  "raw_data": [],
  "re": [],
  "reply": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "rtlsdr": [],
  "scipy": [],
  "session": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "signal": [],
  "socket": [],
  "ssl": [],
  "str": [],
  "string": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "tqdm": [],
  "traceback": [],
  "traffic": [],
  "types": [],
  "typing": [],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "urllib3": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "urllib3/conda-forge/noarch/urllib3-1.26.5-pyhd8ed1ab_0"
  ],
  "value": [],
  "warnings": [],
  "xml": [],
  "yield_pairs": [],
  "zipfile": []
 }
}