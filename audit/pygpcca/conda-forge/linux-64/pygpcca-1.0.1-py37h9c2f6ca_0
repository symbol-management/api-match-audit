{
 "bad": [
  "d",
  "docrep.DocstringProcessor",
  "functools.cached_property",
  "functools.lru_cache",
  "functools.singledispatch",
  "itertools.combinations",
  "logging.debug",
  "logging.error",
  "logging.info",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.amin",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.bincount",
  "numpy.c_",
  "numpy.c_.T",
  "numpy.column_stack",
  "numpy.complex128",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.copy",
  "numpy.count_nonzero",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diff",
  "numpy.dot",
  "numpy.dtype",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.eye",
  "numpy.finfo",
  "numpy.flipud",
  "numpy.float16",
  "numpy.float64",
  "numpy.inf",
  "numpy.int64",
  "numpy.isclose",
  "numpy.isinf",
  "numpy.isreal",
  "numpy.kron",
  "numpy.lib.scimath.sqrt",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.cond",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linalg.qr",
  "numpy.linalg.solve",
  "numpy.max",
  "numpy.maximum",
  "numpy.min",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.r_",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.real",
  "numpy.reshape",
  "numpy.shape",
  "numpy.size",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.trace",
  "numpy.transpose",
  "numpy.tril",
  "numpy.true_divide",
  "numpy.uint32",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator.itemgetter",
  "os.environ",
  "petsc4py.PETSc.Mat",
  "pygpcca._gpcca.GPCCA",
  "pygpcca._gpcca.OArray",
  "pygpcca._gpcca._cluster_by_isa",
  "pygpcca._gpcca._coarsegrain",
  "pygpcca._gpcca._do_schur",
  "pygpcca._gpcca._fill_matrix",
  "pygpcca._gpcca._gpcca_core",
  "pygpcca._gpcca._gram_schmidt_mod",
  "pygpcca._gpcca._indexsearch",
  "pygpcca._gpcca._initialize_rot_matrix",
  "pygpcca._gpcca._objective",
  "pygpcca._gpcca._opt_soft",
  "pygpcca._gpcca.gpcca_coarsegrain",
  "pygpcca._sort_real_schur.A",
  "pygpcca._sort_real_schur.delta",
  "pygpcca._sort_real_schur.eps",
  "pygpcca._sort_real_schur.ev",
  "pygpcca._sort_real_schur.ev_orig",
  "pygpcca._sort_real_schur.expensive_asserts",
  "pygpcca._sort_real_schur.lu_complpiv",
  "pygpcca._sort_real_schur.n",
  "pygpcca._sort_real_schur.normalize",
  "pygpcca._sort_real_schur.r",
  "pygpcca._sort_real_schur.rot",
  "pygpcca._sort_real_schur.select",
  "pygpcca._sort_real_schur.sort_real_schur",
  "pygpcca._sort_real_schur.swap",
  "pygpcca._sort_real_schur.swaplist",
  "pygpcca._sort_real_schur.z",
  "pygpcca._sorted_schur._check_conj_split",
  "pygpcca._sorted_schur._check_schur",
  "pygpcca._sorted_schur._initialize_matrix",
  "pygpcca._sorted_schur.petsc4py",
  "pygpcca._sorted_schur.slepc4py",
  "pygpcca._sorted_schur.sorted_brandts_schur",
  "pygpcca._sorted_schur.sorted_krylov_schur",
  "pygpcca._sorted_schur.sorted_schur",
  "pygpcca.utils._checks.assert_array",
  "pygpcca.utils._checks.ensure_ndarray_or_sparse",
  "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
  "pygpcca.utils._constants.EPS",
  "pygpcca.utils._constants.EPS.all",
  "pygpcca.utils._constants.NO_PETSC_SLEPC_FOUND_MSG",
  "pygpcca.utils._docs.P",
  "pygpcca.utils._docs.Q_sort",
  "pygpcca.utils._docs.R_sort",
  "pygpcca.utils._docs.chi_ret",
  "pygpcca.utils._docs.crispness_ret",
  "pygpcca.utils._docs.d.dedent",
  "pygpcca.utils._docs.d.get_sections",
  "pygpcca.utils._docs.eigenvalues_k",
  "pygpcca.utils._docs.eigenvalues_m",
  "pygpcca.utils._docs.eta",
  "pygpcca.utils._docs.k",
  "pygpcca.utils._docs.m",
  "pygpcca.utils._docs.m_optimize",
  "pygpcca.utils._docs.method",
  "pygpcca.utils._docs.rot_matrix_ret",
  "pygpcca.utils._docs.tol_krylov",
  "pygpcca.utils._docs.z",
  "pygpcca.utils._docs.z_P",
  "pygpcca.utils._utils.backward_iteration",
  "pygpcca.utils._utils.connected_sets",
  "pygpcca.utils._utils.is_transition_matrix",
  "pygpcca.utils._utils.stationary_distribution",
  "pygpcca.utils._utils.stationary_distribution_from_backward_iteration",
  "pygpcca.utils._utils.stationary_distribution_from_eigenvector",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "scipy.linalg.eig",
  "scipy.linalg.eigvals",
  "scipy.linalg.hilbert",
  "scipy.linalg.lu",
  "scipy.linalg.lu_factor",
  "scipy.linalg.lu_solve",
  "scipy.linalg.pinv",
  "scipy.linalg.rsf2csf",
  "scipy.linalg.schur",
  "scipy.linalg.subspace_angles",
  "scipy.optimize.fmin",
  "scipy.sparse.csgraph.connected_components",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.dia_matrix",
  "scipy.sparse.diags",
  "scipy.sparse.issparse",
  "scipy.sparse.isspmatrix_csr",
  "scipy.sparse.linalg.eigs",
  "scipy.sparse.spmatrix",
  "slepc4py.SLEPc.DS.MatType.A",
  "slepc4py.SLEPc.EPS",
  "slepc4py.SLEPc.EPS.Type.KRYLOVSCHUR",
  "sort_evals",
  "sys.warnoptions",
  "tests.conftest._skip_if_no_petsc_slepc",
  "tests.conftest.assert_allclose",
  "tests.conftest.bdc",
  "tests.conftest.count",
  "tests.conftest.get_known_input",
  "tests.conftest.mu",
  "tests.conftest.skip_if_no_petsc_slepc",
  "tests.test_gpcca._assert_schur",
  "tests.test_gpcca._find_permutation",
  "tests.test_gpcca.eps",
  "tests.test_stat_dist._create_qp",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.Optional",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Union",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn"
 ],
 "deps": {
  "d": [],
  "docrep": [],
  "functools": [],
  "itertools": [],
  "logging": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "petsc4py": [],
  "pygpcca": [],
  "pytest": [],
  "scipy": [],
  "slepc4py": [],
  "sort_evals": [],
  "sys": [],
  "tests": [],
  "typing": [],
  "warnings": []
 }
}