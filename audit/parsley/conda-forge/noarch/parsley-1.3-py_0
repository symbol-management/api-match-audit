{
 "bad": [
  "G",
  "GrammarEmitter",
  "PythonWriter",
  "StringIO.StringIO",
  "TestGrammar",
  "TestGrammar2",
  "TestGrammar3",
  "_G_many1_1",
  "_G_many1_133",
  "_G_many1_167",
  "_G_many1_172",
  "_G_many1_251",
  "_G_many1_253",
  "_G_many1_282",
  "_G_many1_322",
  "_G_many1_324",
  "_G_many1_342",
  "_G_many1_363",
  "_G_many1_38",
  "_G_many1_395",
  "_G_many1_49",
  "_G_many1_55",
  "_G_many1_56",
  "_G_many1_64",
  "_G_many1_67",
  "_G_many1_74",
  "_G_many1_82",
  "_G_many1_89",
  "assertRoundtrip",
  "cmp",
  "cnt",
  "coerceToQuasiMatch",
  "f",
  "g",
  "grammar",
  "input.head",
  "itertools",
  "itertools.chain.from_iterable",
  "max.data",
  "max.tag.name",
  "min.data",
  "min.tag.name",
  "ometa.grammar.OMeta.makeGrammar",
  "ometa.grammar.TreeTransformerGrammar.makeGrammar",
  "os.path.dirname",
  "os.path.join",
  "sys",
  "sys.modules",
  "terml.nodes.termMaker.Action",
  "terml.nodes.termMaker.And",
  "terml.nodes.termMaker.Apply",
  "terml.nodes.termMaker.Ascend",
  "terml.nodes.termMaker.Bind",
  "terml.nodes.termMaker.Call",
  "terml.nodes.termMaker.Character",
  "terml.nodes.termMaker.Choice",
  "terml.nodes.termMaker.Commit",
  "terml.nodes.termMaker.ConsumedBy",
  "terml.nodes.termMaker.Descend",
  "terml.nodes.termMaker.EndSlice",
  "terml.nodes.termMaker.Exactly",
  "terml.nodes.termMaker.Fail",
  "terml.nodes.termMaker.ForeignApply",
  "terml.nodes.termMaker.ForeignCall",
  "terml.nodes.termMaker.Grammar",
  "terml.nodes.termMaker.Label",
  "terml.nodes.termMaker.List",
  "terml.nodes.termMaker.Literal",
  "terml.nodes.termMaker.Lookahead",
  "terml.nodes.termMaker.Many",
  "terml.nodes.termMaker.Many1",
  "terml.nodes.termMaker.Match",
  "terml.nodes.termMaker.Not",
  "terml.nodes.termMaker.Optional",
  "terml.nodes.termMaker.Or",
  "terml.nodes.termMaker.Predicate",
  "terml.nodes.termMaker.Push",
  "terml.nodes.termMaker.Python",
  "terml.nodes.termMaker.Repeat",
  "terml.nodes.termMaker.RepeatChoice",
  "terml.nodes.termMaker.Rule",
  "terml.nodes.termMaker.StartSlice",
  "terml.nodes.termMaker.SuperCall",
  "terml.parser.TermLParser.globals",
  "time",
  "time.time",
  "wrapper"
 ],
 "deps": {
  "G": [],
  "GrammarEmitter": [],
  "PythonWriter": [],
  "StringIO": [],
  "TestGrammar": [],
  "TestGrammar2": [],
  "TestGrammar3": [],
  "_G_many1_1": [],
  "_G_many1_133": [],
  "_G_many1_167": [],
  "_G_many1_172": [],
  "_G_many1_251": [],
  "_G_many1_253": [],
  "_G_many1_282": [],
  "_G_many1_322": [],
  "_G_many1_324": [],
  "_G_many1_342": [],
  "_G_many1_363": [],
  "_G_many1_38": [],
  "_G_many1_395": [],
  "_G_many1_49": [],
  "_G_many1_55": [],
  "_G_many1_56": [],
  "_G_many1_64": [],
  "_G_many1_67": [],
  "_G_many1_74": [],
  "_G_many1_82": [],
  "_G_many1_89": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "assertRoundtrip": [],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cmp": [],
  "cnt": [],
  "coerceToQuasiMatch": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "f": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "g": [],
  "grammar": [],
  "input": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "linecache": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "max": [],
  "min": [],
  "ometa": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "parse": [
   "parse/conda-forge/noarch/parse-1.8.4-py_1"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "terml": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "twisted": [
   "twisted/conda-forge/linux-64/twisted-20.3.0-py38h497a2fe_2"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wrapper": []
 }
}