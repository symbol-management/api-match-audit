{
 "bad": [
  "PandasDataFrameCollector",
  "PandasToCSVCollector",
  "_non_verbose_repr",
  "_put_str",
  "_sizeof_fmt",
  "_verbose_repr",
  "abc.ABC",
  "abc.abstractmethod",
  "ast.literal_eval",
  "base64.b64encode",
  "copy.deepcopy",
  "csv.QUOTE_MINIMAL",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "eland",
  "eland.DataFrame",
  "eland.Index",
  "eland.Index.ID_INDEX_FIELD",
  "eland.NDFrame",
  "eland.Series",
  "eland.SortOrder.ASC",
  "eland.SortOrder.DESC",
  "eland.SortOrder.from_string",
  "eland.SortOrder.reverse",
  "eland.actions.HeadAction",
  "eland.actions.PostProcessingAction",
  "eland.actions.SortFieldAction",
  "eland.actions.SortIndexAction",
  "eland.actions.TailAction",
  "eland.arithmetics.ArithmeticNumber",
  "eland.arithmetics.ArithmeticObject",
  "eland.arithmetics.ArithmeticSeries",
  "eland.arithmetics.ArithmeticString",
  "eland.arithmetics.ArithmeticTask",
  "eland.common.DEFAULT_CHUNK_SIZE",
  "eland.common.DEFAULT_CSV_BATCH_OUTPUT_SIZE",
  "eland.common.DEFAULT_ES_MAX_RESULT_WINDOW",
  "eland.common.DEFAULT_NUM_ROWS_DISPLAYED",
  "eland.common.DEFAULT_PROGRESS_REPORTING_NUM_ROWS",
  "eland.common.SortOrder",
  "eland.common.SortOrder.to_string",
  "eland.common.docstring_parameter",
  "eland.common.elasticsearch_date_to_pandas_date",
  "eland.common.ensure_es_client",
  "eland.common.es_version",
  "eland.dataframe.DEFAULT_NUM_ROWS_DISPLAYED",
  "eland.dataframe.DataFrame",
  "eland.eland_to_pandas",
  "eland.field_mappings.FieldMappings",
  "eland.field_mappings.FieldMappings._extract_fields_from_mapping",
  "eland.field_mappings.FieldMappings._generate_es_mappings",
  "eland.filter.AndFilter",
  "eland.filter.BooleanFilter",
  "eland.filter.Equal",
  "eland.filter.Greater",
  "eland.filter.GreaterEqual",
  "eland.filter.IsIn",
  "eland.filter.IsNull",
  "eland.filter.Less",
  "eland.filter.LessEqual",
  "eland.filter.Like",
  "eland.filter.NotFilter",
  "eland.filter.NotNull",
  "eland.filter.OrFilter",
  "eland.filter.QueryFilter",
  "eland.filter.Rlike",
  "eland.filter.ScriptFilter",
  "eland.filter.Startswith",
  "eland.index.Index",
  "eland.ml._model_serializer.Ensemble",
  "eland.ml._model_serializer.ModelSerializer",
  "eland.ml._model_serializer.Tree",
  "eland.ml._model_serializer.TreeNode",
  "eland.ml._model_serializer.add_if_exists",
  "eland.ml._model_transformers.ModelTransformer",
  "eland.ml._model_transformers.SKLearnDecisionTreeTransformer",
  "eland.ml._model_transformers.SKLearnForestClassifierTransformer",
  "eland.ml._model_transformers.SKLearnForestRegressorTransformer",
  "eland.ml._model_transformers.SKLearnForestTransformer",
  "eland.ml._model_transformers.SKLearnTransformer",
  "eland.ml._model_transformers.XGBoostClassifierTransformer",
  "eland.ml._model_transformers.XGBoostForestTransformer",
  "eland.ml._model_transformers.XGBoostRegressorTransformer",
  "eland.ml._optional.VERSIONS",
  "eland.ml._optional._get_version",
  "eland.ml._optional.import_optional_dependency",
  "eland.ml._optional.message",
  "eland.ml._optional.version_message",
  "eland.ml.ml_model.MLModel",
  "eland.ml.ml_model.MLModel.TYPE_CLASSIFICATION",
  "eland.ml.ml_model.MLModel.TYPE_REGRESSION",
  "eland.operations.Operations",
  "eland.pandas_to_eland",
  "eland.plotting._matplotlib.hist.hist_frame",
  "eland.plotting._matplotlib.hist.hist_series",
  "eland.plotting.ed_hist_frame",
  "eland.query.Query",
  "eland.query_compiler.FieldMappingCache",
  "eland.query_compiler.QueryCompiler",
  "eland.read_csv",
  "eland.read_es",
  "eland.series.Series",
  "eland.series._get_method_name",
  "eland.tasks.ArithmeticOpFieldsTask",
  "eland.tasks.BooleanFilterTask",
  "eland.tasks.HeadTask",
  "eland.tasks.QueryIdsTask",
  "eland.tasks.QueryTermsTask",
  "eland.tasks.SizeTask",
  "eland.tasks.TailTask",
  "eland.tasks.Task",
  "eland.tests.ECOMMERCE_DF_FILE_NAME",
  "eland.tests.ECOMMERCE_FILE_NAME",
  "eland.tests.ECOMMERCE_INDEX_NAME",
  "eland.tests.ECOMMERCE_MAPPING",
  "eland.tests.ELASTICSEARCH_HOST",
  "eland.tests.ES_TEST_CLIENT",
  "eland.tests.ES_TEST_CLIENT.indices.create",
  "eland.tests.ES_TEST_CLIENT.indices.delete",
  "eland.tests.FLIGHTS_DF_FILE_NAME",
  "eland.tests.FLIGHTS_FILE_NAME",
  "eland.tests.FLIGHTS_INDEX_NAME",
  "eland.tests.FLIGHTS_MAPPING",
  "eland.tests.FLIGHTS_MAPPING.keys",
  "eland.tests.FLIGHTS_SMALL_FILE_NAME",
  "eland.tests.FLIGHTS_SMALL_INDEX_NAME",
  "eland.tests.ROOT_DIR",
  "eland.tests.TEST_MAPPING1",
  "eland.tests.TEST_MAPPING1_EXPECTED",
  "eland.tests.TEST_MAPPING1_EXPECTED_DF",
  "eland.tests.TEST_MAPPING1_EXPECTED_SOURCE_FIELD_DF",
  "eland.tests.TEST_MAPPING1_INDEX_NAME",
  "eland.tests.TEST_NESTED_USER_GROUP_DOCS",
  "eland.tests.TEST_NESTED_USER_GROUP_INDEX_NAME",
  "eland.tests.TEST_NESTED_USER_GROUP_MAPPING",
  "eland.tests.TEST_SUITE",
  "eland.tests.common.ES_TEST_CLIENT",
  "eland.tests.common.ES_TEST_CLIENT.indices.create",
  "eland.tests.common.ES_TEST_CLIENT.indices.delete",
  "eland.tests.common.ES_TEST_CLIENT.indices.get_mapping",
  "eland.tests.common.ROOT_DIR",
  "eland.tests.common.TestData",
  "eland.tests.common._ed_ecommerce",
  "eland.tests.common._ed_flights",
  "eland.tests.common._ed_flights_small",
  "eland.tests.common._pd_ecommerce",
  "eland.tests.common._pd_flights",
  "eland.tests.common._pd_flights_small",
  "eland.tests.common.assert_eland_frame_equal",
  "eland.tests.common.assert_pandas_eland_frame_equal",
  "eland.tests.common.assert_pandas_eland_series_equal",
  "eland.tests.dataframe.test_datetime_pytest.TestDataFrameDateTime",
  "eland.tests.field_mappings.test_datetime_pytest.TestDateTime",
  "eland.tests.setup_tests.DATA_LIST",
  "eland.tests.setup_tests._setup_data",
  "eland.tests.setup_tests._setup_test_mappings",
  "eland.tests.setup_tests._setup_test_nested",
  "eland.tests.setup_tests._update_max_compilations_limit",
  "eland.tests.setup_tests.es",
  "eland.utils.pandas_to_eland",
  "elasticsearch.Elasticsearch",
  "elasticsearch.NotFoundError",
  "elasticsearch.helpers.bulk",
  "elasticsearch.helpers.scan",
  "enum.Enum",
  "flatten",
  "gzip.compress",
  "importlib.import_module",
  "io.StringIO",
  "json.dumps",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.get_fignums",
  "numpy",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.dtype",
  "numpy.float32",
  "numpy.histogram",
  "numpy.inf",
  "numpy.int",
  "numpy.integer",
  "numpy.issubdtype",
  "numpy.ndarray",
  "numpy.number",
  "numpy.object_",
  "numpy.random.rand",
  "numpy.testing.assert_almost_equal",
  "object.__getattribute__",
  "os.environ.get",
  "os.path.abspath",
  "os.path.dirname",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame._get_axis_number",
  "pandas.DataFrame.from_dict",
  "pandas.Index",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.Timestamp",
  "pandas.core.common.apply_if_callable",
  "pandas.core.common.is_bool_indexer",
  "pandas.core.common.try_sort",
  "pandas.core.computation.eval.eval",
  "pandas.core.dtypes.common.is_bool_dtype",
  "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
  "pandas.core.dtypes.common.is_float_dtype",
  "pandas.core.dtypes.common.is_integer_dtype",
  "pandas.core.dtypes.common.is_list_like",
  "pandas.core.dtypes.common.is_string_dtype",
  "pandas.core.dtypes.generic.ABCIndexClass",
  "pandas.core.dtypes.inference.is_list_like",
  "pandas.core.indexing.check_bool_indexer",
  "pandas.get_option",
  "pandas.io.common._expand_user",
  "pandas.io.common.stringify_path",
  "pandas.io.formats.console.get_console_size",
  "pandas.io.formats.format.buffer_put_lines",
  "pandas.io.formats.printing.pprint_thing",
  "pandas.io.parsers._c_parser_defaults",
  "pandas.plotting._matplotlib.converter._WARN",
  "pandas.plotting._matplotlib.tools._flatten",
  "pandas.plotting._matplotlib.tools._set_ticks_props",
  "pandas.plotting._matplotlib.tools._subplots",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.set_option",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_index_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_datetime",
  "pandas.util._validators.validate_bool_kwarg",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.raises",
  "pytest.warns",
  "re.match",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils.validation.check_is_fitted",
  "sys._getframe",
  "sys.getsizeof",
  "sys.stdout",
  "time.time",
  "types.ModuleType",
  "typing.List",
  "typing.Tuple",
  "typing.Union",
  "warnings.warn",
  "xgboost.Booster",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor"
 ],
 "deps": {
  "PandasDataFrameCollector": [],
  "PandasToCSVCollector": [],
  "_non_verbose_repr": [],
  "_put_str": [],
  "_sizeof_fmt": [],
  "_verbose_repr": [],
  "abc": [],
  "ast": [],
  "base64": [],
  "copy": [],
  "csv": [],
  "datetime": [],
  "eland": [],
  "elasticsearch": [],
  "enum": [],
  "flatten": [],
  "gzip": [],
  "importlib": [],
  "io": [],
  "json": [],
  "matplotlib": [],
  "numpy": [],
  "object": [],
  "os": [],
  "pandas": [],
  "pytest": [],
  "re": [],
  "sklearn": [],
  "sys": [],
  "time": [],
  "types": [],
  "typing": [],
  "warnings": [],
  "xgboost": []
 }
}