{
 "bad": [
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "_assert_file_exists",
  "_assert_file_not_exists",
  "_file_exists",
  "_get_store",
  "_idx_in_list",
  "_pick_from_list",
  "_read_filenames_in_dir",
  "_read_yaml_file",
  "_reindex_xr_data_array",
  "_skip_coords",
  "_thread",
  "_variant_dict_to_list",
  "_variant_list_to_dict",
  "_write_yaml_file",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "argparse.ArgumentParser",
  "check_timestamp",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "datetime",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.time",
  "datetime.timedelta",
  "dateutil.parser",
  "enum.Enum",
  "fiona",
  "fiona.drivers",
  "fiona.open",
  "flask.current_app.config.data_interface",
  "flask.current_app.config.scheduler.add",
  "flask.current_app.config.scheduler.get_status",
  "flask.current_app.config.scheduler.kill",
  "flask.request.args",
  "flask.request.args.keys",
  "flask.request.form",
  "flask.request.get_json",
  "functools.lru_cache",
  "glob",
  "glob.glob",
  "importlib",
  "importlib.util.module_from_spec",
  "importlib.util.spec_from_file_location",
  "into_c",
  "itertools",
  "itertools.chain",
  "itertools.product",
  "jinja2.exceptions",
  "json",
  "json.dumps",
  "json.loads",
  "logging",
  "logging.DEBUG",
  "logging.INFO",
  "logging.Logger._profile",
  "logging.Logger._profile.items",
  "logging.Logger._profile.keys",
  "logging.Logger._profile.values",
  "logging.Logger.profiling_start",
  "logging.Logger.profiling_stop",
  "logging.Logger.summary",
  "logging.WARNING",
  "logging.config",
  "logging.config.dictConfig",
  "logging.error",
  "logging.getLogger",
  "networkx.DiGraph",
  "networkx.NetworkXUnfeasible",
  "networkx.is_directed_acyclic_graph",
  "networkx.topological_sort",
  "numpy",
  "numpy.all",
  "numpy.any",
  "numpy.bool",
  "numpy.dot",
  "numpy.einsum",
  "numpy.float",
  "numpy.int",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.load",
  "numpy.loadtxt",
  "numpy.logical_and",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.number",
  "numpy.reshape",
  "numpy.save",
  "numpy.savetxt",
  "numpy.sum",
  "numpy.where",
  "numpy.zeros",
  "operator.itemgetter",
  "os",
  "os.environ",
  "os.listdir",
  "os.makedirs",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.splitext",
  "os.remove",
  "os.sep",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_records",
  "pandas.MultiIndex.from_product",
  "pandas.compat",
  "pandas.compat.iteritems",
  "pandas.core.common",
  "pandas.core.common.standardize_mapping",
  "pandas.read_csv",
  "pandas.read_parquet",
  "parse_exceptions",
  "pint.DimensionalityError",
  "pint.UndefinedUnitError",
  "pint.UnitRegistry",
  "pkg_resources",
  "pkg_resources.get_distribution",
  "pkg_resources.resource_filename",
  "pkg_resources.resource_isdir",
  "pkg_resources.resource_listdir",
  "psycopg2",
  "psycopg2.connect",
  "psycopg2.extras",
  "psycopg2.extras.DictCursor",
  "psycopg2.extras.RealDictCursor",
  "pyarrow",
  "pyarrow.lib.ArrowIOError",
  "re",
  "re.match",
  "rtree.index",
  "ruamel.yaml.YAML",
  "shapely.geometry.mapping",
  "shapely.geometry.shape",
  "shapely.geometry.shape.is_valid",
  "shapely.validation.explain_validity",
  "shutil",
  "shutil.copyfile",
  "smif.cli.__init__.LOGGER",
  "smif.cli.__init__.USE_WIN32",
  "smif.cli.__init__._get_store",
  "smif.cli.__init__._run_server",
  "smif.cli.__init__.list_model_runs",
  "smif.cli.__init__.parse_arguments",
  "smif.cli.__init__.run_app",
  "smif.cli.__init__.run_model_runs",
  "smif.cli.__init__.setup_project_folder",
  "smif.metadata.RelativeTimestep.BASE",
  "smif.metadata.RelativeTimestep.BASE.resolve_relative_to",
  "smif.metadata.RelativeTimestep.CURRENT",
  "smif.metadata.RelativeTimestep.PREVIOUS",
  "smif.metadata.RelativeTimestep.PREVIOUS.resolve_relative_to",
  "smif.metadata.RelativeTimestep.from_name",
  "smif.metadata.Spec.from_dict",
  "smif.model.ModelOperation.BEFORE_MODEL_RUN",
  "smif.model.ModelOperation.SIMULATE",
  "smif.model.ScenarioModel.from_dict",
  "smif.model.SosModel.from_dict",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.run",
  "sys",
  "sys.argv",
  "sys.argv.count",
  "sys.exc_info",
  "sys.excepthook",
  "sys.modules.__file__",
  "sys.stdout.flush",
  "thread",
  "thread.interrupt_main",
  "traceback",
  "traceback.print_exc",
  "traceback.print_exception",
  "types.MappingProxyType",
  "typing.Dict",
  "typing.List",
  "typing.Union",
  "warnings",
  "warnings.filterwarnings",
  "win32api",
  "win32api.SetConsoleCtrlHandler",
  "xarray",
  "xarray.DataArray"
 ],
 "deps": {
  "__future__": [],
  "_assert_file_exists": [],
  "_assert_file_not_exists": [],
  "_file_exists": [],
  "_get_store": [],
  "_idx_in_list": [],
  "_pick_from_list": [],
  "_read_filenames_in_dir": [],
  "_read_yaml_file": [],
  "_reindex_xr_data_array": [],
  "_skip_coords": [],
  "_thread": [],
  "_variant_dict_to_list": [],
  "_variant_list_to_dict": [],
  "_write_yaml_file": [],
  "abc": [],
  "argparse": [],
  "check_timestamp": [],
  "collections": [],
  "copy": [],
  "datetime": [],
  "dateutil": [],
  "enum": [],
  "fiona": [],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "functools": [],
  "glob": [],
  "importlib": [],
  "into_c": [],
  "isodate": [
   "isodate/conda-forge/noarch/isodate-0.6.0-py_1"
  ],
  "itertools": [],
  "jinja2": [],
  "json": [],
  "logging": [],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "numpy": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "parse_exceptions": [],
  "pint": [],
  "pkg_resources": [],
  "psycopg2": [],
  "pyarrow": [],
  "re": [],
  "rtree": [],
  "ruamel": [],
  "shapely": [],
  "shutil": [],
  "smif": [],
  "subprocess": [],
  "sys": [],
  "thread": [],
  "traceback": [],
  "types": [],
  "typing": [],
  "warnings": [],
  "win32api": [],
  "xarray": []
 }
}