{
 "bad": [
  "IPython.display.clear_output",
  "_raise_on_closed",
  "call",
  "close_transports",
  "collections.abc.Iterator",
  "collections.abc.Mapping",
  "collections.abc.Sequence",
  "converter",
  "data_type_constructor",
  "exc_class",
  "get_column_data",
  "google.api.client_pb2.DESCRIPTOR",
  "google.api.field_behavior_pb2.DESCRIPTOR",
  "google.api_core.client_info.ClientInfo",
  "google.api_core.client_options",
  "google.api_core.client_options.ClientOptions",
  "google.api_core.iam.Policy",
  "google.api_core.iam.Policy.from_api_repr",
  "google.cloud.bigquery._helpers._SCALAR_VALUE_TO_JSON_PARAM.get",
  "google.cloud.bigquery.job.SourceFormat.CSV",
  "google.cloud.bigquery.job.SourceFormat.NEWLINE_DELIMITED_JSON",
  "google.cloud.bigquery.job.SourceFormat.PARQUET",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_TRUNCATE",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.COLON",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.COMMA",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.DEST_VAR",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.DOLLAR_PY_ID",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.EOL",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.LCURL",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.LPAREN",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.LSQUARE",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.OPTION_EQ",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.OPTION_SPEC",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.OPT_VAL",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.PARAMS_OPT_EQ",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.PARAMS_OPT_SPEC",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.PY_BOOL",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.PY_NUMBER",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.PY_STRING",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.RCURL",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.RPAREN",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.RSQUARE",
  "google.cloud.bigquery.magics.line_arg_parser.TokenType.UNKNOWN",
  "google.cloud.bigquery_storage.BigQueryReadClient",
  "google.cloud.bigquery_storage.types.DataFormat.ARROW",
  "google.cloud.bigquery_storage.types.ReadSession",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.ARRAY",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.BOOL",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.BYTES",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.DATE",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.DATETIME",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.FLOAT64",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.GEOGRAPHY",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.INT64",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.NUMERIC",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.STRING",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.STRUCT",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.TIME",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.TIMESTAMP",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.TYPE_KIND_UNSPECIFIED",
  "google.cloud.bigquery_v2.types.StandardSqlDataType.TypeKind.__doc__",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor.MethodDescriptor",
  "google.protobuf.descriptor.OneofDescriptor",
  "google.protobuf.descriptor.ServiceDescriptor",
  "google.protobuf.descriptor._internal_create_key",
  "google.protobuf.empty_pb2.DESCRIPTOR",
  "google.protobuf.empty_pb2._EMPTY",
  "google.protobuf.json_format.MessageToDict",
  "google.protobuf.json_format.ParseDict",
  "google.protobuf.json_format.ParseError",
  "google.protobuf.message.Message",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.symbol_database.Default",
  "google.protobuf.timestamp_pb2.DESCRIPTOR",
  "google.protobuf.timestamp_pb2.Timestamp",
  "google.protobuf.timestamp_pb2._TIMESTAMP",
  "google.protobuf.wrappers_pb2.BoolValue",
  "google.protobuf.wrappers_pb2.DESCRIPTOR",
  "google.protobuf.wrappers_pb2.DoubleValue",
  "google.protobuf.wrappers_pb2.Int32Value",
  "google.protobuf.wrappers_pb2.Int64Value",
  "google.protobuf.wrappers_pb2.StringValue",
  "google.protobuf.wrappers_pb2.UInt32Value",
  "google.protobuf.wrappers_pb2._BOOLVALUE",
  "google.protobuf.wrappers_pb2._DOUBLEVALUE",
  "google.protobuf.wrappers_pb2._INT32VALUE",
  "google.protobuf.wrappers_pb2._INT64VALUE",
  "google.protobuf.wrappers_pb2._STRINGVALUE",
  "google.protobuf.wrappers_pb2._UINT32VALUE",
  "gzip.READ",
  "http.client.BAD_REQUEST",
  "http.client.CONFLICT",
  "http.client.FORBIDDEN",
  "http.client.INTERNAL_SERVER_ERROR",
  "http.client.NOT_FOUND",
  "http.client.NOT_IMPLEMENTED",
  "http.client.OK",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.filterfalse",
  "itertools.islice",
  "method",
  "opentelemetry.instrumentation.utils.http_status_to_canonical_code",
  "optcls",
  "optcls._RESOURCE_NAME",
  "optcls.from_api_repr",
  "os.close",
  "os.path.getsize",
  "os.remove",
  "parse_nonparams_options",
  "pkg_resources.get_distribution",
  "pkg_resources.parse_version",
  "range.setter",
  "re.IGNORECASE",
  "re.VERBOSE",
  "str.capitalize",
  "sys.stderr",
  "tempfile.mkstemp",
  "threading.Lock",
  "time.time",
  "to_table_row",
  "uuid.uuid4",
  "visitor_method",
  "warnings.warn",
  "weakref.WeakSet"
 ],
 "deps": {
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-5.0.0-py34_0"
  ],
  "_raise_on_closed": [],
  "ast": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "call": [],
  "close_transports": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "concurrent": [
   "futures/conda-forge/linux-64/futures-3.2.0-py27_0",
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "converter": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "data_type_constructor": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "decimal": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "enum": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "exc_class": [],
  "functools": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "get_column_data": [],
  "google": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "http": [],
  "io": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "method": [],
  "numbers": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "opentelemetry": [
   "opentelemetry-api/conda-forge/linux-64/opentelemetry-api-0.15b0-py37h89c1867_0"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "optcls": [],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "parse_nonparams_options": [],
  "pkg_resources": [],
  "proto": [
   "proto-plus/conda-forge/noarch/proto-plus-1.11.0-pyh9f0ad1d_0"
  ],
  "pytz": [
   "pytz/conda-forge/noarch/pytz-2019.2-py_0"
  ],
  "queue": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "range": [],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "str": [],
  "sys": [],
  "tempfile": [],
  "threading": [],
  "time": [],
  "to_table_row": [],
  "uuid": [],
  "visitor_method": [],
  "warnings": [],
  "weakref": []
 }
}