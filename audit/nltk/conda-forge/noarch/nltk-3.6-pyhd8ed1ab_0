{
 "bad": [
  "AlignedSentCorpusView",
  "AlignmentInfo",
  "ApplicationExpression",
  "BengaliLanguageVars",
  "BindingDict",
  "BindingException",
  "BoxerCard",
  "BoxerDrs",
  "BoxerEq",
  "BoxerNamed",
  "BoxerNot",
  "BoxerOr",
  "BoxerPred",
  "BoxerProp",
  "BoxerRel",
  "BoxerWhq",
  "ChasenCorpusView",
  "ChunkedCorpusView",
  "DRS",
  "DebugObject",
  "DependencyCorpusView",
  "DrtApplicationExpression",
  "DrtConcatenation",
  "DrtEqualityExpression",
  "DrtNegatedExpression",
  "DrtVariableExpression",
  "ExpectedMoreTokensException",
  "Foo",
  "FunctionVariableExpression",
  "IffExpression",
  "IndianCorpusView",
  "LambdaExpression",
  "LazyConcatenation",
  "LogicalExpressionException",
  "NKJPCorpus_Text_View.RAW_MODE",
  "NegatedExpression",
  "Reference",
  "SeekableUnicodeStreamReader",
  "SentiSynset",
  "Slots",
  "Sr",
  "StreamBackedCorpusView",
  "StringIO",
  "StringIO.StringIO",
  "TaggedCorpusView",
  "TestPunktTokenizeWordsMock",
  "TheoremToolThread",
  "UnexpectedTokenException",
  "UnificationException",
  "V",
  "Variable",
  "VariableBindingException",
  "VariableExpression",
  "XMLCorpusView",
  "_",
  "__doc__.strip",
  "__future__.unicode_literals",
  "_apply_forwards",
  "_bottomup_filter",
  "_chunk_iterator",
  "_condition_to_logic",
  "_decode_stdoutdata",
  "_default_fs_class",
  "_flatten",
  "_format_tagset",
  "_get_kwarg",
  "_is_mapping",
  "_is_sequence",
  "_iterate_first",
  "_lcs_ic",
  "_log_add",
  "_matching_exs",
  "_next_token",
  "_ninf_array",
  "_open",
  "_outf_writer",
  "_pad_vertically",
  "_read_production",
  "_str2records",
  "_trace_bindings",
  "_trace_unify_start",
  "_trace_unify_succeed",
  "_trace_valrepr",
  "_unify_terms",
  "_unzip_iter",
  "a",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "accum",
  "add",
  "antecedent",
  "apply_rules",
  "array",
  "ast",
  "ast.literal_eval",
  "b",
  "base64",
  "base64.b64encode",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "base_set",
  "bisect",
  "bisect.bisect",
  "bisect.bisect_left",
  "bisect.bisect_right",
  "bisect.insort_left",
  "blk_frq",
  "bllipparser.RerankingParser",
  "bllipparser.RerankingParser.get_unified_model_parameters",
  "bound_method",
  "bytes.startswith",
  "callback",
  "cb",
  "cb.bind_click",
  "cb_func",
  "cgi.escape",
  "chatbot",
  "cleanup",
  "click",
  "click.get_text_stream",
  "click.group",
  "click.option",
  "click.version_option",
  "cmp",
  "codecs",
  "codecs.BOM_UTF16_BE",
  "codecs.BOM_UTF16_LE",
  "codecs.BOM_UTF32_BE",
  "codecs.BOM_UTF32_LE",
  "codecs.BOM_UTF8",
  "codecs.open",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.abc.Iterable",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "compute_composition_semantics",
  "compute_function_semantics",
  "compute_substitution_semantics",
  "compute_type_raised_semantics",
  "concat",
  "cond",
  "cond._variables",
  "cond.atoms",
  "condition",
  "condition_to_str",
  "contextlib",
  "contextlib.closing",
  "contextlib.contextmanager",
  "convert_to_prover9",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "counterrors",
  "cpd",
  "crosscell",
  "csv",
  "csv.reader",
  "csv.writer",
  "ctx",
  "ctx.replace",
  "datetime",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "datetime.timezone",
  "datetime.timezone.utc",
  "datetime.tzinfo",
  "defaultdict",
  "delta",
  "demo",
  "dexpr",
  "dict.__contains__",
  "dict.__delitem__",
  "dict.__getitem__",
  "dict.__setitem__",
  "dict.clear",
  "dict.copy",
  "dict.pop",
  "dict.popitem",
  "dict.setdefault",
  "dict.update",
  "dictOfDicts",
  "display",
  "distortion_term",
  "doctest",
  "doctest.DocFileSuite",
  "doctest.testmod",
  "dumpmatrix",
  "extractor",
  "f",
  "factory",
  "feature_func",
  "fertility_term",
  "filter_forms",
  "final_and",
  "findcell",
  "flatten",
  "flattern",
  "fnmatch",
  "fnmatch.filter",
  "format_lemma",
  "fractions",
  "fractions.Fraction",
  "from_pos_and_line",
  "frozenset.__new__",
  "fun",
  "func",
  "func.__dict__",
  "func.__doc__",
  "func.__name__",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.singledispatch",
  "functools.total_ordering",
  "functools.wraps",
  "gc",
  "gc.collect",
  "get_indiv_vars",
  "get_static_index_page",
  "get_static_wx_help_page",
  "get_synset",
  "getargspec",
  "getopt",
  "getopt.getopt",
  "glob.glob",
  "glueFormulaFactory",
  "grow_diag",
  "gzip",
  "gzip.GzipFile",
  "gzip.WRITE",
  "gzip.open",
  "handler_func",
  "hashlib.md5",
  "html",
  "html.entities.entitydefs",
  "html.entities.name2codepoint.get",
  "html.escape",
  "http.server.BaseHTTPRequestHandler",
  "http.server.HTTPServer",
  "init_func",
  "input.decode",
  "input.simplify",
  "input.split",
  "inspect",
  "inspect.formatargspec",
  "inspect.getfullargspec",
  "inspect.getmembers",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.ismethod",
  "inspect.signature",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "io.TextIOWrapper",
  "io.open",
  "is_eventvar",
  "is_funcvar",
  "is_indvar",
  "itertools",
  "itertools.accumulate",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.count",
  "itertools.cycle",
  "itertools.groupby",
  "itertools.islice",
  "itertools.product",
  "itertools.tee",
  "itertools.zip_longest",
  "joblib.Parallel",
  "joblib.delayed",
  "json",
  "json.JSONDecoder",
  "json.JSONEncoder",
  "json.dumps",
  "json.items",
  "json.load",
  "json.loads",
  "labelprob",
  "lexical_translation_term",
  "lexpr",
  "list.__add__",
  "list.__delitem__",
  "list.__getitem__",
  "list.__getslice__",
  "list.__iadd__",
  "list.__imul__",
  "list.__setitem__",
  "list.append",
  "list.extend",
  "list.insert",
  "list.pop",
  "list.remove",
  "list.reverse",
  "list.sort",
  "list_fstructs",
  "locale",
  "locale.CODESET",
  "locale.getdefaultlocale",
  "locale.getlocale",
  "locale.getpreferredencoding",
  "locale.nl_langinfo",
  "logging",
  "logging.basicConfig",
  "logging.getLogger",
  "logging.info",
  "logging.shutdown",
  "logsumexp2",
  "make_leaf",
  "make_lookup_link",
  "make_node",
  "make_synset_html",
  "math",
  "math.ceil",
  "math.exp",
  "math.fabs",
  "math.factorial",
  "math.fsum",
  "math.isinf",
  "math.isnan",
  "math.log",
  "math.pow",
  "math.sqrt",
  "matplotlib.pylab",
  "matplotlib.pylab.legend",
  "matplotlib.pylab.plot",
  "matplotlib.pylab.savefig",
  "matplotlib.pylab.show",
  "matplotlib.pylab.stem",
  "matplotlib.pylab.title",
  "matplotlib.pylab.xlabel",
  "matplotlib.pylab.xticks",
  "matplotlib.pylab.ylabel",
  "matplotlib.pylab.ylim",
  "matplotlib.pylab.yticks",
  "matplotlib.pyplot",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.axis",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.locator_params",
  "matplotlib.pyplot.margins",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.xticks",
  "matplotlib.pyplot.ylim",
  "matplotlib.pyplot.yticks",
  "method",
  "method.__doc__",
  "method.__name__",
  "morphy",
  "networkx",
  "networkx.MultiDiGraph",
  "networkx.draw_networkx_labels",
  "networkx.draw_networkx_nodes",
  "networkx.spring_layout",
  "next.pack",
  "nltk.CFG",
  "nltk.CFG.fromstring",
  "nltk.ConditionalFreqDist",
  "nltk.FreqDist",
  "nltk.Nonterminal",
  "nltk.ProbabilisticTree",
  "nltk.Production",
  "nltk.RegexpParser",
  "nltk.Tree",
  "nltk.Tree.fromstring",
  "nltk.__init__.__maintainer__",
  "nltk.__init__.__maintainer_email__",
  "nltk.__init__.__version__",
  "nltk.__init__._fake_PIPE",
  "nltk.__init__._fake_Popen",
  "nltk.__init__.version_file",
  "nltk.bigrams",
  "nltk.chat.__init__.bots",
  "nltk.chunk.__init__._BINARY_NE_CHUNKER",
  "nltk.chunk.__init__._MULTICLASS_NE_CHUNKER",
  "nltk.classify.MaxentClassifier.train",
  "nltk.classify.NaiveBayesClassifier.train",
  "nltk.collocations.BigramCollocationFinder.from_documents",
  "nltk.corpus.CategorizedPlaintextCorpusReader",
  "nltk.corpus.__init__.abc",
  "nltk.corpus.__init__.brown",
  "nltk.corpus.__init__.cmudict",
  "nltk.corpus.__init__.conll2000",
  "nltk.corpus.__init__.conll2002",
  "nltk.corpus.__init__.genesis",
  "nltk.corpus.__init__.gutenberg",
  "nltk.corpus.__init__.ieer",
  "nltk.corpus.__init__.inaugural",
  "nltk.corpus.__init__.indian",
  "nltk.corpus.__init__.names",
  "nltk.corpus.__init__.ppattach",
  "nltk.corpus.__init__.senseval",
  "nltk.corpus.__init__.shakespeare",
  "nltk.corpus.__init__.sinica_treebank",
  "nltk.corpus.__init__.state_union",
  "nltk.corpus.__init__.stopwords",
  "nltk.corpus.__init__.timit",
  "nltk.corpus.__init__.toolbox",
  "nltk.corpus.__init__.treebank",
  "nltk.corpus.__init__.udhr",
  "nltk.corpus.__init__.webtext",
  "nltk.corpus.__init__.words",
  "nltk.corpus.alpino.tagged_sents",
  "nltk.corpus.alpino.words",
  "nltk.corpus.brown.raw",
  "nltk.corpus.brown.sents",
  "nltk.corpus.brown.tagged_sents",
  "nltk.corpus.brown.tagged_words",
  "nltk.corpus.brown.words",
  "nltk.corpus.cess_cat.tagged_sents",
  "nltk.corpus.cess_cat.words",
  "nltk.corpus.cess_esp.tagged_sents",
  "nltk.corpus.cess_esp.words",
  "nltk.corpus.conll2000.chunked_sents",
  "nltk.corpus.conll2002.chunked_sents",
  "nltk.corpus.conll2007.parsed_sents",
  "nltk.corpus.conll2007.sents",
  "nltk.corpus.europarl_raw.english.words",
  "nltk.corpus.floresta.tagged_sents",
  "nltk.corpus.floresta.words",
  "nltk.corpus.framenet.buildindexes",
  "nltk.corpus.framenet.docs",
  "nltk.corpus.framenet.docs_metadata",
  "nltk.corpus.framenet.frame",
  "nltk.corpus.framenet.frames",
  "nltk.corpus.framenet.frames_by_lemma",
  "nltk.corpus.framenet.lu_basic",
  "nltk.corpus.framenet.lus",
  "nltk.corpus.genesis.words",
  "nltk.corpus.gutenberg.words",
  "nltk.corpus.ieer.fileids",
  "nltk.corpus.ieer.parsed_docs",
  "nltk.corpus.inaugural.words",
  "nltk.corpus.indian.tagged_sents",
  "nltk.corpus.indian.tagged_words",
  "nltk.corpus.indian.words",
  "nltk.corpus.lin_thesaurus.scored_synonyms",
  "nltk.corpus.lin_thesaurus.similarity",
  "nltk.corpus.lin_thesaurus.synonyms",
  "nltk.corpus.mac_morpho.tagged_sents",
  "nltk.corpus.mac_morpho.words",
  "nltk.corpus.machado.words",
  "nltk.corpus.movie_reviews.fileids",
  "nltk.corpus.movie_reviews.words",
  "nltk.corpus.names.words",
  "nltk.corpus.nombank.fileids",
  "nltk.corpus.nombank.instances",
  "nltk.corpus.nombank.nouns",
  "nltk.corpus.nombank.rolesets",
  "nltk.corpus.nps_chat.tagged_posts",
  "nltk.corpus.nps_chat.words",
  "nltk.corpus.opinion_lexicon.negative",
  "nltk.corpus.opinion_lexicon.positive",
  "nltk.corpus.perluniprops.chars",
  "nltk.corpus.ptb.categories",
  "nltk.corpus.ptb.fileids",
  "nltk.corpus.ptb.tagged_words",
  "nltk.corpus.ptb.words",
  "nltk.corpus.reader.CorpusReader",
  "nltk.corpus.reader.SeekableUnicodeStreamReader",
  "nltk.corpus.reader.TaggedCorpusReader",
  "nltk.corpus.reader.WordListCorpusReader",
  "nltk.corpus.reader.XMLCorpusReader",
  "nltk.corpus.reader.XMLCorpusView",
  "nltk.corpus.reader.concat",
  "nltk.corpus.reader.wordnet.NOUN",
  "nltk.corpus.reader.xmldocs.ElementTree.parse",
  "nltk.corpus.rte.pairs",
  "nltk.corpus.senseval.instances",
  "nltk.corpus.sinica_treebank.parsed_sents",
  "nltk.corpus.sinica_treebank.sents",
  "nltk.corpus.sinica_treebank.tagged_sents",
  "nltk.corpus.sinica_treebank.words",
  "nltk.corpus.stopwords.words",
  "nltk.corpus.subjectivity.sents",
  "nltk.corpus.treebank._fileids",
  "nltk.corpus.treebank.fileids",
  "nltk.corpus.treebank.parsed_sents",
  "nltk.corpus.treebank.tagged_sents",
  "nltk.corpus.treebank.tagged_words",
  "nltk.corpus.treebank.words",
  "nltk.corpus.twitter_samples.abspath",
  "nltk.corpus.twitter_samples.docs",
  "nltk.corpus.twitter_samples.strings",
  "nltk.corpus.twitter_samples.tokenized",
  "nltk.corpus.udhr.fileids",
  "nltk.corpus.udhr.raw",
  "nltk.corpus.udhr.sents",
  "nltk.corpus.udhr.words",
  "nltk.corpus.webtext.fileids",
  "nltk.corpus.webtext.words",
  "nltk.corpus.wordnet.ADJ",
  "nltk.corpus.wordnet.ADJ_SAT",
  "nltk.corpus.wordnet.ADV",
  "nltk.corpus.wordnet.NOUN",
  "nltk.corpus.wordnet.VERB",
  "nltk.corpus.wordnet._morphy",
  "nltk.corpus.wordnet._unload",
  "nltk.corpus.wordnet.all_lemma_names",
  "nltk.corpus.wordnet.ensure_loaded",
  "nltk.corpus.wordnet.lemma",
  "nltk.corpus.wordnet.morphy",
  "nltk.corpus.wordnet.synset",
  "nltk.corpus.wordnet.synset_from_pos_and_offset",
  "nltk.corpus.wordnet.synsets",
  "nltk.corpus.wordnet_ic.ic",
  "nltk.corpus.words.words",
  "nltk.draw.util.SymbolWidget.SYMBOLS",
  "nltk.grammar.nonterminals.split",
  "nltk.induce_pcfg",
  "nltk.metrics.BigramAssocMeasures.likelihood_ratio",
  "nltk.metrics.BigramAssocMeasures.pmi",
  "nltk.metrics.BigramAssocMeasures.raw_freq",
  "nltk.nonterminals",
  "nltk.parse.dependencygraph.conll_data2.split",
  "nltk.pos_tag",
  "nltk.sem.Expression.fromstring",
  "nltk.sem.drt.DrtParser.parse",
  "nltk.sem.drt.DrtTokens.CLOSE",
  "nltk.sem.drt.DrtTokens.CLOSE_BRACKET",
  "nltk.sem.drt.DrtTokens.COMMA",
  "nltk.sem.drt.DrtTokens.OPEN",
  "nltk.sem.drt.DrtTokens.OPEN_BRACKET",
  "nltk.sem.logic.Tokens.CLOSE",
  "nltk.sem.logic.Tokens.OPEN",
  "nltk.sem.logic.Tokens.SYMBOLS",
  "nltk.sem.logic.Tokens.TOKENS",
  "nltk.sem.logic.operator.or_",
  "nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM",
  "nltk.tag.__init__.RUS_PICKLE",
  "nltk.tag.__init__._get_tagger",
  "nltk.tag.__init__._pos_tag",
  "nltk.tag.brill.Pos.expand",
  "nltk.tag.brill.Word.expand",
  "nltk.tbl.Template.ALLTEMPLATES",
  "nltk.tbl.Template.expand",
  "nltk.tokenize.__init__._treebank_word_tokenizer",
  "nltk.tokenize.__init__.sent_tokenize",
  "nltk.tokenize.casual.EMOTICON_RE.findall",
  "nltk.tokenize.casual.EMOTICON_RE.sub",
  "nltk.translate.Alignment.fromstring",
  "nltk.translate.IBMModel.MIN_PROB",
  "nltk.translate.IBMModel4.model4_prob_t_a_given_s",
  "nltk.translate.IBMModel5.MIN_SCORE_FACTOR",
  "nltk.translate.StackDecoder.valid_phrases",
  "nltk.tree.ImmutableTree.convert",
  "nltk.tree.ParentedTree.fromstring",
  "nltk.twitter.api.TweetHandlerI.do_continue",
  "nltk.util.AbstractLazySequence",
  "nltk.util.LazyConcatenation",
  "nltk.util.LazyIteratorList",
  "nltk.util.LazyMap",
  "nltk.util.LazySubsequence",
  "nltk.util.OrderedDict",
  "nltk.util.Trie",
  "nltk.util.Trie.LEAF",
  "nltk.word_tokenize",
  "node_pred",
  "nonempty_powerset",
  "norm.logsf",
  "null_generation_term",
  "numpy",
  "numpy.NINF",
  "numpy.amax",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.convolve",
  "numpy.dot",
  "numpy.e",
  "numpy.empty",
  "numpy.exp",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.fromiter",
  "numpy.hstack",
  "numpy.identity",
  "numpy.inf",
  "numpy.int",
  "numpy.linalg.det",
  "numpy.linalg.inv",
  "numpy.linalg.svd",
  "numpy.log",
  "numpy.log2",
  "numpy.logaddexp2",
  "numpy.multiply.outer",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.r_",
  "numpy.reshape",
  "numpy.std",
  "numpy.sum",
  "numpy.testing.assert_array_almost_equal",
  "numpy.transpose",
  "numpy.unravel_index",
  "numpy.zeros",
  "numpypy",
  "object.__new__",
  "old_fn",
  "old_fn.__doc__",
  "old_fn.__name__",
  "operator",
  "operator.add",
  "operator.and_",
  "operator.itemgetter",
  "operator.mul",
  "operator.or_",
  "optparse",
  "optparse.OptionParser",
  "os",
  "os.R_OK",
  "os.SEEK_END",
  "os._exit",
  "os.access",
  "os.chdir",
  "os.close",
  "os.curdir",
  "os.environ",
  "os.environ.get",
  "os.environ.split",
  "os.fdopen",
  "os.getcwd",
  "os.getgid",
  "os.getgroups",
  "os.getuid",
  "os.listdir",
  "os.mkdir",
  "os.name",
  "os.path",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.pathsep",
  "os.path.pathsep.join",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.remove",
  "os.rmdir",
  "os.sep",
  "os.stat",
  "os.unlink",
  "os.walk",
  "ossaudiodev",
  "ossaudiodev.AFMT_S16_LE",
  "ossaudiodev.open",
  "padding_fn",
  "page_from_reference",
  "pd",
  "pickle",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "platform.architecture",
  "platform.system",
  "postag",
  "pprint",
  "pprint.pformat",
  "pprint.pprint",
  "pred",
  "predicate",
  "print_testtrain_stats",
  "print_to",
  "print_train_stats",
  "print_tree",
  "print_unused_templates",
  "profile",
  "profile.run",
  "proof_method",
  "pstats",
  "pstats.Stats",
  "pycrfsuite",
  "pycrfsuite.Trainer",
  "pydoc",
  "pydoc.allmethods",
  "pygame.mixer",
  "pyparsing",
  "pyparsing.Combine",
  "pyparsing.Forward",
  "pyparsing.Literal",
  "pyparsing.Optional",
  "pyparsing.QuotedString",
  "pyparsing.Regex",
  "pyparsing.White",
  "pyparsing.Word",
  "pyparsing.ZeroOrMore",
  "pyparsing.delimitedList",
  "pyparsing.nums",
  "pyparsing.restOfLine",
  "pytest",
  "pytest.approx",
  "pytest.fail",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.raises",
  "pytest.skip",
  "queue",
  "queue.Empty",
  "quit.pack",
  "r",
  "random",
  "random.Random",
  "random.choice",
  "random.randint",
  "random.random",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "range_to_str",
  "re",
  "re.DOTALL",
  "re.I",
  "re.IGNORECASE",
  "re.M",
  "re.MULTILINE",
  "re.U",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.error",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "read_blankline_block",
  "read_grammar",
  "read_regexp_block",
  "read_sexpr_block",
  "regex",
  "regex.I",
  "regex.UNICODE",
  "regex.VERBOSE",
  "regex.compile",
  "regex.sub",
  "relation_html",
  "remove",
  "requests",
  "requests.compat.urljoin",
  "requests.exceptions.ChunkedEncodingError",
  "requests.exceptions.ConnectionError",
  "requests.get",
  "reverse_str",
  "scipy.sparse",
  "scipy.sparse.csr_matrix",
  "scipy.stats.fisher_exact",
  "scipy.stats.norm",
  "scipy.stats.stats.betai",
  "set.intersection",
  "set.union",
  "shelve",
  "shelve.open",
  "show",
  "shutil",
  "sigma_exp",
  "sigma_skip",
  "sigma_sub",
  "sklearn",
  "sklearn.datasets.load_svmlight_file",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.naive_bayes.BernoulliNB",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.svm",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVC",
  "skolem",
  "socket",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.socket",
  "sqlite3",
  "sqlite3.OperationalError",
  "sqlite3.OptimizedUnicode",
  "sqlite3.connect",
  "stat",
  "stat.S_IMODE",
  "str.lower",
  "str.strip",
  "string",
  "string.punctuation",
  "strip_space",
  "subprocess",
  "subprocess.DEVNULL",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.call",
  "super.__str__",
  "super.apply",
  "sys",
  "sys.__stdout__",
  "sys.argv",
  "sys.exit",
  "sys.float_info.min",
  "sys.maxsize",
  "sys.modules",
  "sys.path",
  "sys.platform",
  "sys.platform.startswith",
  "sys.prefix",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdin.__class__.__name__",
  "sys.stdin.encoding",
  "sys.stdin.readline",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version_info",
  "tableau_test",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile.TemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "textwrap",
  "textwrap.dedent",
  "textwrap.fill",
  "textwrap.indent",
  "textwrap.wrap",
  "threading",
  "threading.Event",
  "threading.Thread",
  "time",
  "time.altzone",
  "time.ctime",
  "time.daylight",
  "time.localtime",
  "time.perf_counter",
  "time.sleep",
  "time.strftime",
  "time.time",
  "time.timezone",
  "timeit.timeit",
  "tkinter",
  "tkinter.Button",
  "tkinter.Canvas",
  "tkinter.Checkbutton",
  "tkinter.END",
  "tkinter.Entry",
  "tkinter.Frame",
  "tkinter.Frame.configure",
  "tkinter.IntVar",
  "tkinter.LEFT",
  "tkinter.Label",
  "tkinter.Listbox",
  "tkinter.Menu",
  "tkinter.Menubutton",
  "tkinter.Menubutton.destroy",
  "tkinter.OptionMenu",
  "tkinter.PhotoImage",
  "tkinter.RAISED",
  "tkinter.SEL_FIRST",
  "tkinter.SEL_LAST",
  "tkinter.SUNKEN",
  "tkinter.Scrollbar",
  "tkinter.StringVar",
  "tkinter.TclError",
  "tkinter.Text",
  "tkinter.Tk",
  "tkinter.Toplevel",
  "tkinter.Widget",
  "tkinter.Widget.__getitem__",
  "tkinter.filedialog.askopenfilename",
  "tkinter.filedialog.asksaveasfilename",
  "tkinter.font.Font",
  "tkinter.messagebox.Message",
  "tkinter.messagebox.showerror",
  "tkinter.messagebox.showinfo",
  "tqdm.tqdm",
  "trace_new_edges",
  "tree2conlltags",
  "tuple.__new__",
  "twython",
  "twython.Twython",
  "twython.TwythonStreamer",
  "twython.exceptions.TwythonError",
  "twython.exceptions.TwythonRateLimitError",
  "type.frameRelations",
  "types",
  "types.MethodType",
  "unicodedata",
  "unicodedata.category",
  "unique_variable",
  "unittest",
  "unittest.TestCase",
  "unittest.TestSuite",
  "unittest.mock.MagicMock",
  "unittest.skip",
  "unittest.skipUnless",
  "upd_feat",
  "urllib.error.HTTPError",
  "urllib.error.URLError",
  "urllib.parse.unquote_plus",
  "urllib.request.HTTPPasswordMgrWithDefaultRealm",
  "urllib.request.ProxyBasicAuthHandler",
  "urllib.request.ProxyDigestAuthHandler",
  "urllib.request.ProxyHandler",
  "urllib.request.build_opener",
  "urllib.request.getproxies",
  "urllib.request.install_opener",
  "urllib.request.url2pathname",
  "urllib.request.urlopen",
  "vacancy_term",
  "vars.add",
  "vars.append",
  "vars.pop",
  "vars.update",
  "warnings",
  "warnings.warn",
  "webbrowser",
  "webbrowser.open",
  "webbrowser.open_new_tab",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ElementTree",
  "xml.etree.ElementTree.SubElement",
  "xml.etree.ElementTree.TreeBuilder",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.iselement",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.tostring",
  "xml.sax.saxutils.escape",
  "xml.sax.saxutils.unescape",
  "yaml",
  "yaml.safe_load",
  "zipfile",
  "zipfile.ZipFile",
  "zipfile.ZipFile.read",
  "zipfile.error",
  "zlib.Z_FINISH",
  "zlib.Z_SYNC_FLUSH"
 ],
 "deps": {
  "AlignedSentCorpusView": [],
  "AlignmentInfo": [],
  "ApplicationExpression": [],
  "BengaliLanguageVars": [],
  "BindingDict": [],
  "BindingException": [],
  "BoxerCard": [],
  "BoxerDrs": [],
  "BoxerEq": [],
  "BoxerNamed": [],
  "BoxerNot": [],
  "BoxerOr": [],
  "BoxerPred": [],
  "BoxerProp": [],
  "BoxerRel": [],
  "BoxerWhq": [],
  "ChasenCorpusView": [],
  "ChunkedCorpusView": [],
  "DRS": [],
  "DebugObject": [],
  "DependencyCorpusView": [],
  "DrtApplicationExpression": [],
  "DrtConcatenation": [],
  "DrtEqualityExpression": [],
  "DrtNegatedExpression": [],
  "DrtVariableExpression": [],
  "ExpectedMoreTokensException": [],
  "Foo": [],
  "FunctionVariableExpression": [],
  "IffExpression": [],
  "IndianCorpusView": [],
  "LambdaExpression": [],
  "LazyConcatenation": [],
  "LogicalExpressionException": [],
  "NKJPCorpus_Text_View": [],
  "NegatedExpression": [],
  "Reference": [],
  "SeekableUnicodeStreamReader": [],
  "SentiSynset": [],
  "Slots": [],
  "Sr": [],
  "StreamBackedCorpusView": [],
  "StringIO": [],
  "TaggedCorpusView": [],
  "TestPunktTokenizeWordsMock": [],
  "TheoremToolThread": [],
  "UnexpectedTokenException": [],
  "UnificationException": [],
  "V": [],
  "Variable": [],
  "VariableBindingException": [],
  "VariableExpression": [],
  "XMLCorpusView": [],
  "_": [],
  "__doc__": [],
  "__future__": [],
  "_apply_forwards": [],
  "_bottomup_filter": [],
  "_chunk_iterator": [],
  "_condition_to_logic": [],
  "_decode_stdoutdata": [],
  "_default_fs_class": [],
  "_flatten": [],
  "_format_tagset": [],
  "_get_kwarg": [],
  "_is_mapping": [],
  "_is_sequence": [],
  "_iterate_first": [],
  "_lcs_ic": [],
  "_log_add": [],
  "_matching_exs": [],
  "_next_token": [],
  "_ninf_array": [],
  "_open": [],
  "_outf_writer": [],
  "_pad_vertically": [],
  "_read_production": [],
  "_str2records": [],
  "_trace_bindings": [],
  "_trace_unify_start": [],
  "_trace_unify_succeed": [],
  "_trace_valrepr": [],
  "_unify_terms": [],
  "_unzip_iter": [],
  "a": [],
  "abc": [],
  "accum": [],
  "add": [],
  "antecedent": [],
  "apply_rules": [],
  "array": [],
  "ast": [],
  "b": [],
  "base64": [],
  "base_set": [],
  "bisect": [],
  "blk_frq": [],
  "bllipparser": [],
  "bound_method": [],
  "bytes": [],
  "callback": [],
  "cb": [],
  "cb_func": [],
  "cgi": [],
  "chatbot": [],
  "cleanup": [],
  "click": [],
  "cmp": [],
  "codecs": [],
  "collections": [],
  "compute_composition_semantics": [],
  "compute_function_semantics": [],
  "compute_substitution_semantics": [],
  "compute_type_raised_semantics": [],
  "concat": [],
  "cond": [],
  "condition": [],
  "condition_to_str": [],
  "contextlib": [],
  "convert_to_prover9": [],
  "copy": [],
  "counterrors": [],
  "cpd": [],
  "crosscell": [],
  "csv": [],
  "ctx": [],
  "datetime": [],
  "defaultdict": [],
  "delta": [],
  "demo": [],
  "dexpr": [],
  "dict": [],
  "dictOfDicts": [],
  "display": [],
  "distortion_term": [],
  "doctest": [],
  "dumpmatrix": [],
  "extractor": [],
  "f": [],
  "factory": [],
  "feature_func": [],
  "fertility_term": [],
  "filter_forms": [],
  "final_and": [],
  "findcell": [],
  "flatten": [],
  "flattern": [],
  "fnmatch": [],
  "format_lemma": [],
  "fractions": [],
  "from_pos_and_line": [],
  "frozenset": [],
  "fun": [],
  "func": [],
  "functools": [],
  "gc": [],
  "get_indiv_vars": [],
  "get_static_index_page": [],
  "get_static_wx_help_page": [],
  "get_synset": [],
  "getargspec": [],
  "getopt": [],
  "glob": [],
  "glueFormulaFactory": [],
  "grow_diag": [],
  "gzip": [],
  "handler_func": [],
  "hashlib": [],
  "html": [],
  "http": [],
  "init_func": [],
  "input": [],
  "inspect": [],
  "io": [],
  "is_eventvar": [],
  "is_funcvar": [],
  "is_indvar": [],
  "itertools": [],
  "joblib": [],
  "json": [],
  "labelprob": [],
  "lexical_translation_term": [],
  "lexpr": [],
  "list": [],
  "list_fstructs": [],
  "locale": [],
  "logging": [],
  "logsumexp2": [],
  "make_leaf": [],
  "make_lookup_link": [],
  "make_node": [],
  "make_synset_html": [],
  "math": [],
  "matplotlib": [],
  "method": [],
  "morphy": [],
  "networkx": [],
  "next": [],
  "nltk": [],
  "node_pred": [],
  "nonempty_powerset": [],
  "norm": [],
  "null_generation_term": [],
  "numpy": [],
  "numpypy": [],
  "object": [],
  "old_fn": [],
  "operator": [],
  "optparse": [],
  "os": [],
  "ossaudiodev": [],
  "padding_fn": [],
  "page_from_reference": [],
  "pd": [],
  "pickle": [],
  "platform": [],
  "postag": [],
  "pprint": [],
  "pred": [],
  "predicate": [],
  "print_testtrain_stats": [],
  "print_to": [],
  "print_train_stats": [],
  "print_tree": [],
  "print_unused_templates": [],
  "profile": [],
  "proof_method": [],
  "pstats": [],
  "pycrfsuite": [],
  "pydoc": [],
  "pygame": [],
  "pyparsing": [],
  "pytest": [],
  "queue": [],
  "quit": [],
  "r": [],
  "random": [],
  "range_to_str": [],
  "re": [],
  "read_blankline_block": [],
  "read_grammar": [],
  "read_regexp_block": [],
  "read_sexpr_block": [],
  "regex": [],
  "relation_html": [],
  "remove": [],
  "requests": [],
  "reverse_str": [],
  "scipy": [],
  "set": [],
  "shelve": [],
  "show": [],
  "shutil": [],
  "sigma_exp": [],
  "sigma_skip": [],
  "sigma_sub": [],
  "sklearn": [],
  "skolem": [],
  "socket": [],
  "sqlite3": [],
  "stat": [],
  "str": [],
  "string": [],
  "strip_space": [],
  "subprocess": [],
  "super": [],
  "sys": [],
  "tableau_test": [],
  "tempfile": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "timeit": [],
  "tkinter": [],
  "tqdm": [],
  "trace_new_edges": [],
  "tree2conlltags": [],
  "tuple": [],
  "twython": [],
  "type": [],
  "types": [],
  "unicodedata": [],
  "unique_variable": [],
  "unittest": [],
  "upd_feat": [],
  "urllib": [],
  "vacancy_term": [],
  "vars": [],
  "warnings": [],
  "webbrowser": [],
  "xml": [],
  "yaml": [],
  "zipfile": [],
  "zlib": []
 }
}