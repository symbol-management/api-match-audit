{
 "bad": [
  "ApplicationExpression",
  "AssertionError",
  "AttributeError",
  "DeprecationWarning",
  "EOFError",
  "EnvironmentError",
  "Exception",
  "Foo",
  "FunctionVariableExpression",
  "IOError",
  "ImportError",
  "IndexError",
  "KeyError",
  "KeyboardInterrupt",
  "LambdaExpression",
  "LazyConcatenation",
  "LookupError",
  "MockTagger",
  "MockTokenizer",
  "NameError",
  "NotImplementedError",
  "OSError",
  "OverflowError",
  "RuntimeError",
  "StopIteration",
  "StreamBackedCorpusView",
  "StringIO.StringIO",
  "SystemExit",
  "TypeError",
  "UnicodeDecodeError",
  "UnicodeEncodeError",
  "UnicodeError",
  "UserWarning",
  "ValueError",
  "Variable",
  "VariableExpression",
  "Warning",
  "WhitespaceTokenizer",
  "WordPunctTokenizer",
  "XMLCorpusView",
  "ZeroDivisionError",
  "_",
  "__doc__",
  "__doc__.strip",
  "__future__.print_function",
  "__import__",
  "__name__",
  "_chunk_iterator",
  "_condition_to_logic",
  "_matching_exs",
  "a",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abs",
  "add",
  "all",
  "antecedent",
  "any",
  "b",
  "base_set",
  "blk_frq",
  "bllipparser.RerankingParser",
  "bllipparser.RerankingParser.get_unified_model_parameters",
  "bool",
  "bound_method",
  "bytes",
  "callable",
  "category",
  "cb",
  "cb.bind_click",
  "cb_func",
  "cell_extractor",
  "cgi.escape",
  "chatbot",
  "children",
  "chr",
  "classifier_builder",
  "classmethod",
  "cleanup",
  "cls",
  "cls.ALLTEMPLATES",
  "cls.ALLTEMPLATES.pop",
  "cls.__name__",
  "cls._parse_error",
  "cls._poptemplate",
  "cls.convert",
  "cmp",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.defaultdict.__init__",
  "collections.deque",
  "collections.namedtuple",
  "compute_composition_semantics",
  "compute_function_semantics",
  "compute_substitution_semantics",
  "compute_type_raised_semantics",
  "concat",
  "condition",
  "condition_to_str",
  "contextlib.closing",
  "copy.deepcopy",
  "counterrors",
  "crosscell",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "datetime.timezone.utc",
  "datetime.tzinfo",
  "defaultdict",
  "demo",
  "dict",
  "dict.__contains__",
  "dict.__getitem__",
  "dict.__setattr__",
  "dict.__setitem__",
  "dictOfDicts",
  "dir",
  "display",
  "distortion_term",
  "doctest_nose_plugin.DoctestFix",
  "dumpmatrix",
  "edge_strategy",
  "elt_handler",
  "encoder_cls",
  "enumerate",
  "estimator",
  "eval",
  "exec",
  "exit",
  "extractor",
  "f",
  "feature_func",
  "features",
  "fertility_term",
  "filter",
  "final_and",
  "find_corpus_fileids",
  "findcell",
  "float",
  "fn",
  "format",
  "fractions.Fraction",
  "frozenset",
  "frozenset.__new__",
  "fun",
  "func",
  "function",
  "functools.reduce",
  "functools.total_ordering",
  "functools.update_wrapper",
  "functools.wraps",
  "getargspec",
  "getattr",
  "glob.glob",
  "globals",
  "globals.get",
  "glueFormulaFactory",
  "grow_diag",
  "hasattr",
  "hash",
  "help",
  "id",
  "init_func",
  "input",
  "instance_filter",
  "int",
  "io.BytesIO",
  "isinstance",
  "issubclass",
  "iter",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.groupby",
  "itertools.islice",
  "itertools.product",
  "itertools.tee",
  "leaf_freezer",
  "len",
  "lexical_translation_term",
  "lexpr",
  "list",
  "list.__delitem__",
  "list.__getitem__",
  "list.__init__",
  "list.__setitem__",
  "locals",
  "make_leaf",
  "make_node",
  "map",
  "math.ceil",
  "math.fabs",
  "math.factorial",
  "math.log",
  "math.sqrt",
  "matplotlib.pylab.legend",
  "matplotlib.pylab.plot",
  "matplotlib.pylab.savefig",
  "matplotlib.pylab.show",
  "matplotlib.pylab.stem",
  "matplotlib.pylab.title",
  "matplotlib.pylab.xlabel",
  "matplotlib.pylab.xticks",
  "matplotlib.pylab.ylabel",
  "matplotlib.pylab.ylim",
  "matplotlib.pylab.yticks",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.locator_params",
  "matplotlib.pyplot.margins",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.xticks",
  "matplotlib.pyplot.ylim",
  "matplotlib.pyplot.yticks",
  "max",
  "method",
  "method.__name__",
  "method._nltk_compat_7bit",
  "method._nltk_compat_transliterated",
  "min",
  "next",
  "next.pack",
  "nltk.CFG",
  "nltk.CFG.fromstring",
  "nltk.FreqDist",
  "nltk.Nonterminal",
  "nltk.ProbabilisticTree",
  "nltk.Production",
  "nltk.Prover9",
  "nltk.RegexpParser",
  "nltk.Tree.fromstring",
  "nltk.chunk.regexp.RegexpChunkRule.fromstring",
  "nltk.chunk.util.ChunkScore",
  "nltk.classify.MaxentClassifier.train",
  "nltk.classify.NaiveBayesClassifier.train",
  "nltk.collocations.BigramCollocationFinder.from_documents",
  "nltk.corpus.alpino.tagged_sents",
  "nltk.corpus.alpino.words",
  "nltk.corpus.brown.raw",
  "nltk.corpus.brown.sents",
  "nltk.corpus.brown.tagged_sents",
  "nltk.corpus.brown.tagged_words",
  "nltk.corpus.brown.words",
  "nltk.corpus.cess_cat.tagged_sents",
  "nltk.corpus.cess_cat.words",
  "nltk.corpus.cess_esp.tagged_sents",
  "nltk.corpus.cess_esp.words",
  "nltk.corpus.conll2000.chunked_sents",
  "nltk.corpus.conll2002.chunked_sents",
  "nltk.corpus.conll2007.parsed_sents",
  "nltk.corpus.conll2007.sents",
  "nltk.corpus.floresta.tagged_sents",
  "nltk.corpus.floresta.words",
  "nltk.corpus.framenet.buildindexes",
  "nltk.corpus.framenet.docs",
  "nltk.corpus.framenet.docs_metadata",
  "nltk.corpus.framenet.frame",
  "nltk.corpus.framenet.frames",
  "nltk.corpus.framenet.frames_by_lemma",
  "nltk.corpus.framenet.lu_basic",
  "nltk.corpus.framenet.lus",
  "nltk.corpus.genesis.words",
  "nltk.corpus.gutenberg.words",
  "nltk.corpus.ieer.fileids",
  "nltk.corpus.ieer.parsed_docs",
  "nltk.corpus.inaugural.words",
  "nltk.corpus.indian.tagged_sents",
  "nltk.corpus.indian.tagged_words",
  "nltk.corpus.indian.words",
  "nltk.corpus.lin_thesaurus.scored_synonyms",
  "nltk.corpus.lin_thesaurus.similarity",
  "nltk.corpus.lin_thesaurus.synonyms",
  "nltk.corpus.mac_morpho.tagged_sents",
  "nltk.corpus.mac_morpho.words",
  "nltk.corpus.machado.words",
  "nltk.corpus.movie_reviews.fileids",
  "nltk.corpus.movie_reviews.words",
  "nltk.corpus.names.words",
  "nltk.corpus.nonbreaking_prefixes.words",
  "nltk.corpus.nps_chat.tagged_posts",
  "nltk.corpus.nps_chat.words",
  "nltk.corpus.opinion_lexicon.negative",
  "nltk.corpus.opinion_lexicon.positive",
  "nltk.corpus.perluniprops.chars",
  "nltk.corpus.ptb.categories",
  "nltk.corpus.ptb.fileids",
  "nltk.corpus.ptb.tagged_words",
  "nltk.corpus.ptb.words",
  "nltk.corpus.reader.CorpusReader",
  "nltk.corpus.reader.SeekableUnicodeStreamReader",
  "nltk.corpus.reader.TaggedCorpusReader",
  "nltk.corpus.reader.TaggedCorpusReader.__init__",
  "nltk.corpus.reader.WordListCorpusReader",
  "nltk.corpus.reader.XMLCorpusReader",
  "nltk.corpus.reader.XMLCorpusReader.__init__",
  "nltk.corpus.reader.XMLCorpusView",
  "nltk.corpus.reader.concat",
  "nltk.corpus.reader.tagged.TaggedCorpusReader",
  "nltk.corpus.reader.tagged.TaggedCorpusReader.__init__",
  "nltk.corpus.reader.util.FileSystemPathPointer",
  "nltk.corpus.reader.util.StreamBackedCorpusView",
  "nltk.corpus.reader.util.StreamBackedCorpusView.__init__",
  "nltk.corpus.reader.util.ZipFilePathPointer",
  "nltk.corpus.reader.util.concat",
  "nltk.corpus.reader.util.find_corpus_fileids",
  "nltk.corpus.reader.util.read_blankline_block",
  "nltk.corpus.reader.util.read_line_block",
  "nltk.corpus.reader.util.read_whitespace_block",
  "nltk.corpus.reader.wordnet.NOUN",
  "nltk.corpus.reader.xmldocs.ElementTree.parse",
  "nltk.corpus.senseval.instances",
  "nltk.corpus.sinica_treebank.parsed_sents",
  "nltk.corpus.sinica_treebank.sents",
  "nltk.corpus.sinica_treebank.tagged_sents",
  "nltk.corpus.sinica_treebank.words",
  "nltk.corpus.stopwords.words",
  "nltk.corpus.subjectivity.sents",
  "nltk.corpus.treebank.fileids",
  "nltk.corpus.treebank.parsed_sents",
  "nltk.corpus.treebank.tagged_sents",
  "nltk.corpus.treebank.tagged_words",
  "nltk.corpus.treebank.words",
  "nltk.corpus.treebank_chunk.chunked_sents",
  "nltk.corpus.twitter_samples.abspath",
  "nltk.corpus.twitter_samples.docs",
  "nltk.corpus.twitter_samples.strings",
  "nltk.corpus.twitter_samples.tokenized",
  "nltk.corpus.udhr.fileids",
  "nltk.corpus.udhr.raw",
  "nltk.corpus.udhr.sents",
  "nltk.corpus.udhr.words",
  "nltk.corpus.webtext.fileids",
  "nltk.corpus.webtext.words",
  "nltk.corpus.wordnet._morphy",
  "nltk.corpus.wordnet._unload",
  "nltk.corpus.wordnet.ensure_loaded",
  "nltk.corpus.wordnet.lemma",
  "nltk.corpus.wordnet.synset",
  "nltk.corpus.wordnet.synsets",
  "nltk.corpus.wordnet_ic.ic",
  "nltk.corpus.words.words",
  "nltk.data.FileSystemPathPointer",
  "nltk.data.PathPointer",
  "nltk.data.SeekableUnicodeStreamReader",
  "nltk.data.ZipFilePathPointer",
  "nltk.data.find",
  "nltk.data.gzip_open_unicode",
  "nltk.data.load",
  "nltk.data.show_cfg",
  "nltk.draw.util.SymbolWidget.SYMBOLS",
  "nltk.featstruct.FeatStruct",
  "nltk.featstruct.TYPE",
  "nltk.featstruct.find_variables",
  "nltk.featstruct.unify",
  "nltk.grammar.CFG",
  "nltk.grammar.CFG.fromstring",
  "nltk.grammar.DependencyGrammar.fromstring",
  "nltk.grammar.DependencyProduction",
  "nltk.grammar.FeatStructNonterminal",
  "nltk.grammar.FeatureGrammar",
  "nltk.grammar.FeatureGrammar.fromstring",
  "nltk.grammar.Nonterminal",
  "nltk.grammar.PCFG",
  "nltk.grammar.PCFG.fromstring",
  "nltk.grammar.ProbabilisticDependencyGrammar",
  "nltk.grammar.Production",
  "nltk.grammar._read_cfg_production",
  "nltk.grammar.is_nonterminal",
  "nltk.grammar.is_terminal",
  "nltk.grammar.nonterminals",
  "nltk.grammar.nonterminals.split",
  "nltk.grammar.toy_pcfg1",
  "nltk.grammar.toy_pcfg2",
  "nltk.inference.api.BaseModelBuilderCommand",
  "nltk.inference.api.BaseModelBuilderCommand.__init__",
  "nltk.inference.api.ModelBuilder",
  "nltk.inference.api.ProverCommandDecorator",
  "nltk.inference.prover9.Prover9",
  "nltk.inference.prover9.Prover9Command",
  "nltk.inference.prover9.Prover9CommandParent",
  "nltk.inference.prover9.Prover9Parent",
  "nltk.internals.Counter",
  "nltk.internals.ElementWrapper",
  "nltk.internals._java_options",
  "nltk.internals.config_java",
  "nltk.internals.deprecated",
  "nltk.internals.find_binary",
  "nltk.internals.find_dir",
  "nltk.internals.find_file",
  "nltk.internals.find_jar",
  "nltk.internals.find_jar_iter",
  "nltk.internals.find_jars_within_path",
  "nltk.internals.import_from_stdlib",
  "nltk.internals.java",
  "nltk.internals.overridden",
  "nltk.internals.raise_unorderable_types",
  "nltk.metrics.BigramAssocMeasures.likelihood_ratio",
  "nltk.metrics.BigramAssocMeasures.pmi",
  "nltk.metrics.BigramAssocMeasures.raw_freq",
  "nltk.metrics.aline.align",
  "nltk.metrics.aline.delta",
  "nltk.parse.chart.AbstractChartRule",
  "nltk.parse.chart.BottomUpPredictCombineRule",
  "nltk.parse.chart.BottomUpPredictRule",
  "nltk.parse.chart.CachedTopDownPredictRule",
  "nltk.parse.chart.Chart",
  "nltk.parse.chart.Chart.__init__",
  "nltk.parse.chart.ChartParser",
  "nltk.parse.chart.ChartParser.__init__",
  "nltk.parse.chart.EdgeI",
  "nltk.parse.chart.EmptyPredictRule",
  "nltk.parse.chart.FilteredBottomUpPredictCombineRule",
  "nltk.parse.chart.FilteredSingleEdgeFundamentalRule",
  "nltk.parse.chart.FundamentalRule",
  "nltk.parse.chart.LeafEdge",
  "nltk.parse.chart.LeafInitRule",
  "nltk.parse.chart.SingleEdgeFundamentalRule",
  "nltk.parse.chart.SteppingChartParser",
  "nltk.parse.chart.TopDownInitRule",
  "nltk.parse.chart.TopDownPredictRule",
  "nltk.parse.chart.TreeEdge",
  "nltk.parse.chart.TreeEdge.__init__",
  "nltk.parse.chart.TreeEdge.__unicode__",
  "nltk.parse.chart.demo_grammar",
  "nltk.parse.dependencygraph.conll_data2.split",
  "nltk.probability.ConditionalFreqDist",
  "nltk.probability.DictionaryProbDist",
  "nltk.probability.ELEProbDist",
  "nltk.probability.FreqDist",
  "nltk.probability.MLEProbDist",
  "nltk.probability.ProbabilisticMixIn",
  "nltk.probability.ProbabilisticMixIn.__init__",
  "nltk.probability.entropy",
  "nltk.probability.sum_logs",
  "nltk.sem.Expression.fromstring",
  "nltk.sem.drt.AnaphoraResolutionException",
  "nltk.sem.drt.DrsDrawer",
  "nltk.sem.drt.DrtExpression",
  "nltk.sem.drt.DrtExpression.fromstring",
  "nltk.sem.drt.DrtLambdaExpression",
  "nltk.sem.drt.DrtVariableExpression",
  "nltk.sem.drt.resolve_anaphora",
  "nltk.sem.linearlogic.ApplicationExpression",
  "nltk.sem.linearlogic.AtomicExpression",
  "nltk.sem.linearlogic.BindingDict",
  "nltk.sem.linearlogic.ConstantExpression",
  "nltk.sem.linearlogic.Expression",
  "nltk.sem.linearlogic.ImpExpression",
  "nltk.sem.linearlogic.LinearLogicApplicationException",
  "nltk.sem.linearlogic.LinearLogicParser",
  "nltk.sem.linearlogic.UnificationException",
  "nltk.sem.linearlogic.VariableExpression",
  "nltk.sem.logic.AbstractVariableExpression",
  "nltk.sem.logic.AllExpression",
  "nltk.sem.logic.AndExpression",
  "nltk.sem.logic.ApplicationExpression",
  "nltk.sem.logic.BooleanExpression",
  "nltk.sem.logic.EqualityExpression",
  "nltk.sem.logic.ExistsExpression",
  "nltk.sem.logic.Expression",
  "nltk.sem.logic.Expression.fromstring",
  "nltk.sem.logic.IffExpression",
  "nltk.sem.logic.ImpExpression",
  "nltk.sem.logic.IndividualVariableExpression",
  "nltk.sem.logic.LambdaExpression",
  "nltk.sem.logic.NegatedExpression",
  "nltk.sem.logic.OrExpression",
  "nltk.sem.logic.Variable",
  "nltk.sem.logic.VariableExpression",
  "nltk.sem.logic._counter._value",
  "nltk.sem.logic.is_indvar",
  "nltk.sem.logic.operator.or_",
  "nltk.sem.logic.skolem_function",
  "nltk.sem.logic.unique_variable",
  "nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM",
  "nltk.tag.ClassifierBasedTagger.__init__",
  "nltk.tag.hmm._create_hmm_tagger",
  "nltk.tag.hmm._market_hmm_example",
  "nltk.tbl.Template.ALLTEMPLATES",
  "nltk.tokenize.casual.EMOTICON_RE.findall",
  "nltk.tokenize.casual.EMOTICON_RE.sub",
  "nltk.translate.IBMModel.MIN_PROB",
  "nltk.translate.IBMModel4.model4_prob_t_a_given_s",
  "nltk.translate.IBMModel5.MIN_SCORE_FACTOR",
  "nltk.translate.StackDecoder.valid_phrases",
  "nltk.translate.ibm_model.AlignmentInfo",
  "nltk.translate.ibm_model.Counts",
  "nltk.translate.ibm_model.longest_target_sentence_length",
  "nltk.tree.ImmutableTree.convert",
  "nltk.tree.ParentedTree.fromstring",
  "nltk.twitter.api.TweetHandlerI.do_continue",
  "nltk.util.LazyConcatenation",
  "nltk.util.LazyIteratorList",
  "nltk.util.LazyMap",
  "nltk.util.OrderedDict",
  "nltk.util.Trie",
  "nltk.util.Trie.LEAF",
  "nltk.word_tokenize",
  "node_pred",
  "nonempty_powerset",
  "norm.logsf",
  "nose.plugins.doctests.DocFileCase",
  "nose.plugins.doctests.Doctest",
  "nose.plugins.doctests.log.debug",
  "nose.util.anyp",
  "nose.util.tolist",
  "null_generation_term",
  "numpy.arange",
  "numpy.array",
  "numpy.empty",
  "numpy.testing.assert_array_almost_equal",
  "object",
  "old_fn",
  "old_fn.__doc__",
  "old_fn.__name__",
  "open",
  "operator.add",
  "operator.and_",
  "operator.itemgetter",
  "optparse.OptionParser",
  "ord",
  "os.environ",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.remove",
  "os.sep",
  "pairwise",
  "parse_fileid_xform",
  "parser",
  "platform.architecture",
  "platform.system",
  "plug",
  "pow",
  "pprint.pformat",
  "pprint.pprint",
  "pred",
  "predicate",
  "print",
  "print_testtrain_stats",
  "print_train_stats",
  "print_tree",
  "print_unused_templates",
  "property",
  "r",
  "random.randint",
  "random.shuffle",
  "range",
  "range_to_str",
  "re.finditer",
  "read_blankline_block",
  "read_leaf",
  "read_node",
  "read_regexp_block",
  "read_sexpr_block",
  "regex.sub",
  "remove",
  "repr",
  "reversed",
  "round",
  "scipy.sparse.csr_matrix",
  "scipy.stats.fisher_exact",
  "scipy.stats.stats.betai",
  "score_fn",
  "set",
  "set.intersection",
  "set.union",
  "setattr",
  "six.add_metaclass",
  "six.b",
  "six.binary_type",
  "six.class_types",
  "six.int2byte",
  "six.integer_types",
  "six.iteritems",
  "six.itervalues",
  "six.moves.html_entities.entitydefs",
  "six.moves.html_entities.name2codepoint.get",
  "six.moves.input",
  "six.moves.queue",
  "six.moves.queue.Empty",
  "six.moves.queue.Queue",
  "six.moves.range",
  "six.moves.tkinter.Button",
  "six.moves.tkinter.Canvas",
  "six.moves.tkinter.Checkbutton",
  "six.moves.tkinter.END",
  "six.moves.tkinter.Entry",
  "six.moves.tkinter.Frame",
  "six.moves.tkinter.Frame.__init__",
  "six.moves.tkinter.Frame.configure",
  "six.moves.tkinter.IntVar",
  "six.moves.tkinter.LEFT",
  "six.moves.tkinter.Label",
  "six.moves.tkinter.Listbox",
  "six.moves.tkinter.Menu",
  "six.moves.tkinter.Menubutton",
  "six.moves.tkinter.Menubutton.destroy",
  "six.moves.tkinter.OptionMenu",
  "six.moves.tkinter.PhotoImage",
  "six.moves.tkinter.RAISED",
  "six.moves.tkinter.SEL_FIRST",
  "six.moves.tkinter.SEL_LAST",
  "six.moves.tkinter.SUNKEN",
  "six.moves.tkinter.Scrollbar",
  "six.moves.tkinter.StringVar",
  "six.moves.tkinter.Text",
  "six.moves.tkinter.Tk",
  "six.moves.tkinter.Toplevel",
  "six.moves.tkinter.Widget.__getitem__",
  "six.moves.tkinter.Widget.__init__",
  "six.moves.tkinter_font.Font",
  "six.moves.tkinter_messagebox.Message",
  "six.moves.tkinter_messagebox.showerror",
  "six.moves.tkinter_messagebox.showinfo",
  "six.moves.tkinter_tkfiledialog.askopenfilename",
  "six.moves.tkinter_tkfiledialog.asksaveasfilename",
  "six.moves.urllib.request.HTTPPasswordMgrWithDefaultRealm",
  "six.moves.urllib.request.ProxyBasicAuthHandler",
  "six.moves.urllib.request.ProxyDigestAuthHandler",
  "six.moves.urllib.request.ProxyHandler",
  "six.moves.urllib.request.build_opener",
  "six.moves.urllib.request.getproxies",
  "six.moves.urllib.request.install_opener",
  "six.moves.zip",
  "six.moves.zip_longest",
  "six.string_types",
  "six.text_type",
  "six.u",
  "six.unichr",
  "sklearn.datasets.load_svmlight_file",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVC",
  "slice",
  "smoothing_function",
  "sorted",
  "stat",
  "staticmethod",
  "stemmerclass",
  "str",
  "str.lower",
  "str.strip",
  "subprocess.PIPE",
  "subprocess.Popen",
  "sum",
  "super",
  "super.NUM_EDGES",
  "super.__str__",
  "super.apply",
  "sys.maxint",
  "sys.maxsize",
  "sys.stdin.encoding",
  "sys.stdout.write",
  "sys.version_info",
  "tempfile.mkdtemp",
  "this_class",
  "time.altzone",
  "time.daylight",
  "time.timezone",
  "tok_cls",
  "trace_new_edges",
  "train_cls",
  "trainer",
  "tree_class",
  "tuple",
  "twython.Twython",
  "twython.Twython.__init__",
  "twython.TwythonStreamer",
  "twython.TwythonStreamer.__init__",
  "type",
  "type.frameRelations",
  "unique_variable",
  "unittest.SkipTest",
  "unittest.TestCase",
  "unittest.mock.patch",
  "upd_feat",
  "warnings.warn",
  "xf",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ElementTree",
  "xml.etree.ElementTree.SubElement",
  "xml.etree.ElementTree.TreeBuilder",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.parse",
  "xml.sax.saxutils.escape",
  "xml.sax.saxutils.unescape",
  "yf",
  "zip"
 ],
 "deps": [
  [
   "aesara-2.0.0-py36hc4f0c31_0",
   "aesara-2.0.0-py37hcd2ae1e_0",
   "aesara-2.0.0-py37hcd2ae1e_1",
   "aesara-2.0.0-py37hcd2ae1e_2",
   "aesara-2.0.0-py38h709712a_0",
   "aesara-2.0.0-py38h709712a_2",
   "awsebcli-3.18.1-py36h9f0ad1d_0",
   "awsebcli-3.18.1-py38h32f6830_0",
   "awsebcli-3.19.2-py38h32f6830_0",
   "awsebcli-3.19.2-py39hde42818_0",
   "awsebcli-3.19.3-py39hf3d152e_0",
   "igor-0.3-py_1",
   "igor-0.3-py_2",
   "igor-0.3-py_3",
   "spacy-2.2.1-py27hc9558a2_0",
   "spacy-2.2.3-py36hc9558a2_0",
   "spacy-2.2.4-py36hdb11119_1",
   "spacy-2.3.1-py36hdb11119_0",
   "spacy-2.3.2-py36h51d7077_1",
   "spacy-2.3.2-py36hdb11119_0",
   "spacy-2.3.2-py37hc928c03_2",
   "spacy-2.3.2-py39h081fc7a_2",
   "spacy-2.3.4-py36h8e82bdb_0",
   "spacy-2.3.4-py38hf6732f7_0",
   "spacy-2.3.5-py37h6dcda5c_1",
   "spacy-2.3.5-py38hc10631b_0",
   "theano-0.9.0-py27_1",
   "theano-0.9.0-py27_2",
   "theano-0.9.0-py35_1",
   "theano-0.9.0-py35_2",
   "theano-0.9.0-py35_3",
   "theano-1.0.3-py36_0",
   "theano-1.0.4-py36hf484d3e_1000",
   "theano-1.0.4-py38h950e882_1002",
   "theano-1.0.5-py36ha03b18c_1",
   "theano-1.0.5-py36hc4f0c31_1",
   "theano-1.0.5-py37h745909e_1",
   "theano-1.0.5-py38hadf7658_1",
   "theano-1.0.5-py39he80948d_1",
   "theano-pymc-1.0.10-py37h745909e_0",
   "theano-pymc-1.0.11-py37h745909e_0",
   "theano-pymc-1.0.15-py38h709712a_0",
   "theano-pymc-1.0.5-py36h831f99a_0",
   "theano-pymc-1.0.5-py38h950e882_0",
   "theano-pymc-1.0.9-py38h950e882_0",
   "theano-pymc-1.1.0-py36ha03b18c_0",
   "theano-pymc-1.1.0-py37hcd2ae1e_0",
   "theano-pymc-1.1.0-py37hcd2ae1e_1",
   "theano-pymc-1.1.0-py39he80948d_1",
   "theano-pymc-1.1.2-py37hcd2ae1e_0"
  ],
  [
   "events-0.3-py_0",
   "events-0.4-pyhd8ed1ab_0"
  ],
  [
   "nltk-3.2.5-py_0"
  ],
  [
   "nose-1.3.7-py35_0",
   "nose-1.3.7-py35_1",
   "nose-1.3.7-py35_2",
   "nose-1.3.7-py_1006"
  ],
  [
   "pattern-3.6.0-py_0",
   "pattern-3.6.0-pyh9f0ad1d_1"
  ],
  [
   "rednose-1.2.2-py35_0",
   "rednose-1.2.3-py_0"
  ],
  [
   "regex-2019.02.20-py37h14c3975_0",
   "regex-2019.02.21-py37h14c3975_0",
   "regex-2019.03.09-py37h14c3975_0",
   "regex-2019.03.12-py27h14c3975_0",
   "regex-2019.03.12-py36h14c3975_0",
   "regex-2019.04.12-py36h516909a_0",
   "regex-2019.04.14-py37h516909a_0",
   "regex-2019.08.19-py27h516909a_0",
   "regex-2019.11.1-py27h516909a_0",
   "regex-2019.12.19-py37h516909a_0",
   "regex-2019.12.20-py36h516909a_0",
   "regex-2020.1.7-py27h516909a_0",
   "regex-2020.10.11-py36h8c4c3a4_0",
   "regex-2020.10.15-py37h8f50634_0",
   "regex-2020.10.15-py38h1e0a361_0",
   "regex-2020.10.28-py37h4abf009_0",
   "regex-2020.11.13-py36h1d69622_0",
   "regex-2020.11.13-py36h8f6f2f9_1",
   "regex-2020.11.13-py37h5e8e339_0",
   "regex-2020.2.18-py36h516909a_0",
   "regex-2020.2.18-py37h516909a_0",
   "regex-2020.4.4-py37h8f50634_0",
   "regex-2020.5.14-py36h97a6639_0",
   "regex-2020.5.7-py36h8c4c3a4_0",
   "regex-2020.5.7-py38h1e0a361_0",
   "regex-2020.7.14-py36h8c4c3a4_0",
   "regex-2020.7.14-py38h1e0a361_0",
   "regex-2020.9.27-py36h8c4c3a4_0",
   "regex-2020.9.27-py36h97a6639_1",
   "regex-2020.9.27-py38h1e0a361_1"
  ],
  [
   "scikit-learn-0.17.1-np110py27_blas_openblas_201",
   "scikit-learn-0.17.1-np110py27_blas_openblas_202",
   "scikit-learn-0.17.1-np111py27_blas_openblas_200",
   "scikit-learn-0.17.1-np111py34_blas_openblas_201",
   "scikit-learn-0.17.1-np111py35_blas_openblas_201",
   "scikit-learn-0.18-np110py27_blas_openblas_202",
   "scikit-learn-0.18-np111py27_blas_openblas_203",
   "scikit-learn-0.18-np111py36_blas_openblas_203",
   "scikit-learn-0.18-np112py27_blas_openblas_204",
   "scikit-learn-0.18.1-np112py36_blas_openblas_200",
   "scikit-learn-0.18.2-np112py36_blas_openblas_200",
   "scikit-learn-0.18.2-np113py27_blas_openblas_200",
   "scikit-learn-0.18.2-np113py35_blas_openblas_200",
   "scikit-learn-0.19.0-py36_blas_openblas_201",
   "scikit-learn-0.19.1-py36_blas_openblas_200",
   "scikit-learn-0.20.0-py36_blas_openblasha84fab4_201",
   "scikit-learn-0.20.2-py27_blas_openblashebff5e3_1400",
   "scikit-learn-0.20.3-py27_blas_openblashebff5e3_0",
   "scikit-learn-0.21.2-py36h627018c_0",
   "scikit-learn-0.21.3-py37hcdab131_0",
   "scikit-learn-0.22-py38hcdab131_0",
   "scikit-learn-0.22-py38hcdab131_1",
   "scikit-learn-0.22.1-py37hcdab131_0",
   "scikit-learn-0.22.1-py37hcdab131_1",
   "scikit-learn-0.22.1-py38hcdab131_0",
   "scikit-learn-0.22.2.post1-py36hcdab131_0",
   "scikit-learn-0.23.0-py37h8a51577_0",
   "scikit-learn-0.23.2-py36h9e5ed8f_1",
   "scikit-learn-0.23.2-py36hb6e6923_2",
   "scikit-learn-0.23.2-py38h519568a_1",
   "scikit-learn-0.24.0-py36he4fde30_0",
   "scikit-learn-0.24.1-py36he4fde30_0"
  ],
  [
   "text-unidecode-1.2-py_0",
   "text-unidecode-1.3-py_0"
  ],
  [
   "twython-3.4.0-py35_0",
   "twython-3.5.0-py36_0",
   "twython-3.7.0-py_0"
  ]
 ]
}