{
 "bad": [
  "ApplicationExpression",
  "BaseHTTPServer.BaseHTTPRequestHandler",
  "BaseHTTPServer.HTTPServer",
  "Exception.__init__",
  "Foo",
  "FunctionVariableExpression",
  "LambdaExpression",
  "LazyConcatenation",
  "LineTokenizer",
  "NKJPCorpus_Text_View.RAW_MODE",
  "NKJPCorpus_Text_View.SENTS_MODE",
  "RegexpTokenizer",
  "Sr",
  "StreamBackedCorpusView",
  "StringIO.StringIO",
  "TabTokenizer",
  "TestPunktTokenizeWordsMock",
  "ValueError.__init__",
  "Variable",
  "VariableExpression",
  "WhitespaceTokenizer",
  "WordPunctTokenizer",
  "XMLCorpusView",
  "_",
  "__doc__.strip",
  "__future__.print_function",
  "_chunk_iterator",
  "_condition_to_logic",
  "_matching_exs",
  "_next_token",
  "a",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "accum",
  "add",
  "antecedent",
  "apply_rules",
  "array.array",
  "b",
  "base64.b64encode",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "base_set",
  "bisect.bisect",
  "bisect.bisect_left",
  "bisect.bisect_right",
  "bisect.insort_left",
  "blk_frq",
  "bllipparser.RerankingParser",
  "bllipparser.RerankingParser.get_unified_model_parameters",
  "bound_method",
  "bytes.startswith",
  "cPickle.dump",
  "cPickle.load",
  "cStringIO.StringIO",
  "callback",
  "category",
  "cb",
  "cb.bind_click",
  "cb_func",
  "cgi.escape",
  "chatbot",
  "cleanup",
  "cmp",
  "codecs.BOM_UTF16_BE",
  "codecs.BOM_UTF16_LE",
  "codecs.BOM_UTF32_BE",
  "codecs.BOM_UTF32_LE",
  "codecs.BOM_UTF8",
  "codecs.getdecoder",
  "codecs.getincrementalencoder",
  "codecs.open",
  "collections.Counter",
  "collections.Counter.__init__",
  "collections.Iterable",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.defaultdict.__init__",
  "collections.deque",
  "collections.namedtuple",
  "compute_composition_semantics",
  "compute_function_semantics",
  "compute_substitution_semantics",
  "compute_type_raised_semantics",
  "concat",
  "cond",
  "cond._variables",
  "cond.atoms",
  "condition",
  "condition_to_str",
  "contextlib.closing",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "counterrors",
  "cpd",
  "crosscell",
  "csv.excel",
  "csv.reader",
  "csv.writer",
  "ctx",
  "ctx.replace",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "datetime.timezone.utc",
  "datetime.tzinfo",
  "defaultdict",
  "demo",
  "dexpr",
  "dict.__contains__",
  "dict.__delitem__",
  "dict.__getitem__",
  "dict.__init__",
  "dict.__setattr__",
  "dict.__setitem__",
  "dict.clear",
  "dict.copy",
  "dict.pop",
  "dict.popitem",
  "dict.setdefault",
  "dict.update",
  "dictOfDicts",
  "display",
  "distortion_term",
  "doctest.DocFileSuite",
  "doctest.DocTestFinder",
  "doctest.DocTestParser",
  "doctest.OPTIONFLAGS_BY_NAME",
  "doctest.OutputChecker",
  "doctest.OutputChecker.check_output",
  "doctest.register_optionflag",
  "doctest.testmod",
  "doctest_nose_plugin.DoctestFix",
  "dumpmatrix",
  "encoder_cls",
  "events",
  "extractor",
  "f",
  "factory",
  "feature_func",
  "fertility_term",
  "filter_forms",
  "final_and",
  "find_corpus_fileids",
  "findcell",
  "flatten",
  "flattern",
  "fnmatch.filter",
  "format_lemma",
  "fractions.Fraction",
  "from_pos_and_line",
  "frozenset.__new__",
  "fun",
  "func",
  "func.__dict__",
  "func.__doc__",
  "func.__name__",
  "functools.partial",
  "functools.reduce",
  "functools.total_ordering",
  "functools.update_wrapper",
  "functools.wraps",
  "gc.collect",
  "get_indiv_vars",
  "get_static_wx_help_page",
  "get_synset",
  "getargspec",
  "getopt.getopt",
  "glob.glob",
  "globals.get",
  "glueFormulaFactory",
  "grow_diag",
  "gzip.GzipFile",
  "gzip.GzipFile.__init__",
  "gzip.GzipFile.close",
  "gzip.GzipFile.flush",
  "gzip.GzipFile.read",
  "gzip.GzipFile.write",
  "gzip.WRITE",
  "gzip.open",
  "handler_func",
  "hashlib.md5",
  "init_func",
  "input.decode",
  "input.simplify",
  "input.split",
  "inspect.formatargspec",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "inspect.getmembers",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.ismethod",
  "io.BytesIO",
  "io.StringIO",
  "io.TextIOWrapper",
  "io.open",
  "itertools.accumulate",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.count",
  "itertools.cycle",
  "itertools.groupby",
  "itertools.islice",
  "itertools.product",
  "itertools.tee",
  "json.JSONDecoder",
  "json.JSONEncoder",
  "json.dumps",
  "json.items",
  "json.load",
  "json.loads",
  "lexical_translation_term",
  "lexpr",
  "list.__add__",
  "list.__delitem__",
  "list.__getitem__",
  "list.__getslice__",
  "list.__iadd__",
  "list.__imul__",
  "list.__init__",
  "list.__setitem__",
  "list.append",
  "list.extend",
  "list.insert",
  "list.pop",
  "list.remove",
  "list.reverse",
  "list.sort",
  "list_fstructs",
  "locale.CODESET",
  "locale.getdefaultlocale",
  "locale.getlocale",
  "locale.getpreferredencoding",
  "locale.nl_langinfo",
  "logging.basicConfig",
  "logging.debug",
  "logging.getLogger",
  "logging.info",
  "logging.shutdown",
  "make_leaf",
  "make_node",
  "make_synset_html",
  "math.ceil",
  "math.exp",
  "math.fabs",
  "math.factorial",
  "math.fsum",
  "math.isinf",
  "math.isnan",
  "math.log",
  "math.pow",
  "math.sqrt",
  "matplotlib.pylab.legend",
  "matplotlib.pylab.plot",
  "matplotlib.pylab.savefig",
  "matplotlib.pylab.show",
  "matplotlib.pylab.stem",
  "matplotlib.pylab.title",
  "matplotlib.pylab.xlabel",
  "matplotlib.pylab.xticks",
  "matplotlib.pylab.ylabel",
  "matplotlib.pylab.ylim",
  "matplotlib.pylab.yticks",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.axis",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.locator_params",
  "matplotlib.pyplot.margins",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.xticks",
  "matplotlib.pyplot.ylim",
  "matplotlib.pyplot.yticks",
  "method",
  "method.__doc__",
  "method.__name__",
  "method._nltk_compat_7bit",
  "method._nltk_compat_transliterated",
  "morphy",
  "networkx.MultiDiGraph",
  "networkx.draw_networkx_labels",
  "networkx.draw_networkx_nodes",
  "networkx.spring_layout",
  "next.pack",
  "nltk.CFG",
  "nltk.CFG.fromstring",
  "nltk.ConditionalFreqDist",
  "nltk.FreqDist",
  "nltk.Nonterminal",
  "nltk.ProbabilisticTree",
  "nltk.Production",
  "nltk.Prover9",
  "nltk.RegexpParser",
  "nltk.Tree.fromstring",
  "nltk.__maintainer__",
  "nltk.__maintainer_email__",
  "nltk.__version__",
  "nltk._fake_PIPE",
  "nltk._fake_Popen",
  "nltk.app.chartparser_app.BottomUpEdgeRule",
  "nltk.app.chartparser_app.BottomUpLeftCornerEdgeRule",
  "nltk.app.chartparser_app.ChartMatrixView",
  "nltk.app.chartparser_app.ChartParserApp",
  "nltk.app.chartparser_app.ChartResultsView",
  "nltk.app.chartparser_app.ChartView",
  "nltk.app.chartparser_app.EdgeList",
  "nltk.app.chartparser_app.EdgeRule",
  "nltk.app.chartparser_app.FundamentalEdgeRule",
  "nltk.app.chartparser_app.TopDownPredictEdgeRule",
  "nltk.app.chartparser_app.app",
  "nltk.app.chunkparser_app.RegexpChunkApp",
  "nltk.app.chunkparser_app.app",
  "nltk.app.collocations_app.CORPUS_LOADED_EVENT",
  "nltk.app.collocations_app.CollocationsModel",
  "nltk.app.collocations_app.CollocationsView",
  "nltk.app.collocations_app.ERROR_LOADING_CORPUS_EVENT",
  "nltk.app.collocations_app.POLL_INTERVAL",
  "nltk.app.collocations_app._CORPORA",
  "nltk.app.collocations_app._DEFAULT",
  "nltk.app.collocations_app.app",
  "nltk.app.concordance_app.BOUNDARY",
  "nltk.app.concordance_app.CORPUS_LOADED_EVENT",
  "nltk.app.concordance_app.ConcordanceSearchModel",
  "nltk.app.concordance_app.ConcordanceSearchView",
  "nltk.app.concordance_app.ERROR_LOADING_CORPUS_EVENT",
  "nltk.app.concordance_app.POLL_INTERVAL",
  "nltk.app.concordance_app.SEARCH_ERROR_EVENT",
  "nltk.app.concordance_app.SEARCH_TERMINATED_EVENT",
  "nltk.app.concordance_app.WORD_OR_TAG",
  "nltk.app.concordance_app._CORPORA",
  "nltk.app.concordance_app._DEFAULT",
  "nltk.app.concordance_app.app",
  "nltk.app.nemo_app.FindZone",
  "nltk.app.nemo_app.ReplaceZone",
  "nltk.app.nemo_app.Zone",
  "nltk.app.nemo_app.app",
  "nltk.app.nemo_app.colors",
  "nltk.app.nemo_app.emphColors",
  "nltk.app.nemo_app.fieldParams",
  "nltk.app.nemo_app.images",
  "nltk.app.nemo_app.initialFind",
  "nltk.app.nemo_app.initialRepl",
  "nltk.app.nemo_app.initialText",
  "nltk.app.nemo_app.launchRefresh",
  "nltk.app.nemo_app.textParams",
  "nltk.app.nemo_app.windowTitle",
  "nltk.app.rdparser_app.RecursiveDescentApp",
  "nltk.app.rdparser_app.app",
  "nltk.app.srparser_app.ShiftReduceApp",
  "nltk.app.srparser_app.app",
  "nltk.app.wordfreq_app.app",
  "nltk.app.wordfreq_app.plot_word_freq_dist",
  "nltk.app.wordnet_app.ALSO_SEE",
  "nltk.app.wordnet_app.ANTONYM",
  "nltk.app.wordnet_app.ATTRIBUTE",
  "nltk.app.wordnet_app.CAUSE",
  "nltk.app.wordnet_app.DERIVATIONALLY_RELATED_FORM",
  "nltk.app.wordnet_app.ENTAILMENT",
  "nltk.app.wordnet_app.HYPERNYM",
  "nltk.app.wordnet_app.HYPONYM",
  "nltk.app.wordnet_app.INDIRECT_HYPERNYMS",
  "nltk.app.wordnet_app.INSTANCE_HYPERNYM",
  "nltk.app.wordnet_app.INSTANCE_HYPONYM",
  "nltk.app.wordnet_app.MEMBER_HOLONYM",
  "nltk.app.wordnet_app.MEMBER_MERONYM",
  "nltk.app.wordnet_app.MyServerHandler",
  "nltk.app.wordnet_app.PART_HOLONYM",
  "nltk.app.wordnet_app.PART_MERONYM",
  "nltk.app.wordnet_app.PERTAINYM",
  "nltk.app.wordnet_app.Reference",
  "nltk.app.wordnet_app.SIMILAR",
  "nltk.app.wordnet_app.SUBSTANCE_HOLONYM",
  "nltk.app.wordnet_app.SUBSTANCE_MERONYM",
  "nltk.app.wordnet_app.VERB_GROUP",
  "nltk.app.wordnet_app._bold",
  "nltk.app.wordnet_app._center",
  "nltk.app.wordnet_app._collect_all_synsets",
  "nltk.app.wordnet_app._collect_one_synset",
  "nltk.app.wordnet_app._hlev",
  "nltk.app.wordnet_app._italic",
  "nltk.app.wordnet_app._li",
  "nltk.app.wordnet_app._pos_match",
  "nltk.app.wordnet_app._pos_tuples",
  "nltk.app.wordnet_app._synset_relations",
  "nltk.app.wordnet_app._ul",
  "nltk.app.wordnet_app.app",
  "nltk.app.wordnet_app.firstClient",
  "nltk.app.wordnet_app.get_relations_data",
  "nltk.app.wordnet_app.get_static_index_page",
  "nltk.app.wordnet_app.get_static_page_by_path",
  "nltk.app.wordnet_app.get_static_upper_page",
  "nltk.app.wordnet_app.get_static_web_help_page",
  "nltk.app.wordnet_app.html_header",
  "nltk.app.wordnet_app.html_trailer",
  "nltk.app.wordnet_app.lemma_property",
  "nltk.app.wordnet_app.logfile",
  "nltk.app.wordnet_app.make_lookup_link",
  "nltk.app.wordnet_app.page_from_href",
  "nltk.app.wordnet_app.page_from_reference",
  "nltk.app.wordnet_app.page_from_word",
  "nltk.app.wordnet_app.rebuild_tree",
  "nltk.app.wordnet_app.server_mode",
  "nltk.app.wordnet_app.startBrowser",
  "nltk.app.wordnet_app.usage",
  "nltk.app.wordnet_app.wnb",
  "nltk.bigrams",
  "nltk.book.sent1",
  "nltk.book.sent2",
  "nltk.book.sent3",
  "nltk.book.sent4",
  "nltk.book.sent5",
  "nltk.book.sent6",
  "nltk.book.sent7",
  "nltk.book.sent8",
  "nltk.book.sent9",
  "nltk.book.text1",
  "nltk.book.text2",
  "nltk.book.text3",
  "nltk.book.text4",
  "nltk.book.text5",
  "nltk.book.text6",
  "nltk.book.text7",
  "nltk.book.text8",
  "nltk.book.text9",
  "nltk.ccg.api.AbstractCCGCategory",
  "nltk.ccg.api.CCGVar",
  "nltk.ccg.api.CCGVar.reset_id",
  "nltk.ccg.api.Direction",
  "nltk.ccg.api.FunctionalCategory",
  "nltk.ccg.api.PrimitiveCategory",
  "nltk.ccg.chart.ApplicationRuleSet",
  "nltk.ccg.chart.BackwardTypeRaiseRule",
  "nltk.ccg.chart.BinaryCombinatorRule",
  "nltk.ccg.chart.CCGChart",
  "nltk.ccg.chart.CCGChartParser",
  "nltk.ccg.chart.CCGEdge",
  "nltk.ccg.chart.CCGLeafEdge",
  "nltk.ccg.chart.CompositionRuleSet",
  "nltk.ccg.chart.DefaultRuleSet",
  "nltk.ccg.chart.ForwardTypeRaiseRule",
  "nltk.ccg.chart.SubstitutionRuleSet",
  "nltk.ccg.chart.TypeRaiseRuleSet",
  "nltk.ccg.chart.compute_semantics",
  "nltk.ccg.chart.demo",
  "nltk.ccg.chart.lex",
  "nltk.ccg.chart.printCCGDerivation",
  "nltk.ccg.chart.printCCGTree",
  "nltk.ccg.combinator.BackwardApplication",
  "nltk.ccg.combinator.BackwardBx",
  "nltk.ccg.combinator.BackwardCombinator",
  "nltk.ccg.combinator.BackwardComposition",
  "nltk.ccg.combinator.BackwardSx",
  "nltk.ccg.combinator.BackwardT",
  "nltk.ccg.combinator.DirectedBinaryCombinator",
  "nltk.ccg.combinator.ForwardApplication",
  "nltk.ccg.combinator.ForwardCombinator",
  "nltk.ccg.combinator.ForwardComposition",
  "nltk.ccg.combinator.ForwardSubstitution",
  "nltk.ccg.combinator.ForwardT",
  "nltk.ccg.combinator.UndirectedBinaryCombinator",
  "nltk.ccg.combinator.UndirectedComposition",
  "nltk.ccg.combinator.UndirectedFunctionApplication",
  "nltk.ccg.combinator.UndirectedSubstitution",
  "nltk.ccg.combinator.UndirectedTypeRaise",
  "nltk.ccg.combinator.backwardBxConstraint",
  "nltk.ccg.combinator.backwardOnly",
  "nltk.ccg.combinator.backwardSxConstraint",
  "nltk.ccg.combinator.backwardTConstraint",
  "nltk.ccg.combinator.bothForward",
  "nltk.ccg.combinator.crossedDirs",
  "nltk.ccg.combinator.forwardOnly",
  "nltk.ccg.combinator.forwardSConstraint",
  "nltk.ccg.combinator.forwardTConstraint",
  "nltk.ccg.combinator.innermostFunction",
  "nltk.ccg.lexicon.APP_RE",
  "nltk.ccg.lexicon.CCGLexicon",
  "nltk.ccg.lexicon.COMMENTS_RE",
  "nltk.ccg.lexicon.LEX_RE",
  "nltk.ccg.lexicon.NEXTPRIM_RE",
  "nltk.ccg.lexicon.PRIM_RE",
  "nltk.ccg.lexicon.RHS_RE",
  "nltk.ccg.lexicon.SEMANTICS_RE",
  "nltk.ccg.lexicon.Token",
  "nltk.ccg.lexicon.augParseCategory",
  "nltk.ccg.lexicon.fromstring",
  "nltk.ccg.lexicon.matchBrackets",
  "nltk.ccg.lexicon.nextCategory",
  "nltk.ccg.lexicon.parseApplication",
  "nltk.ccg.lexicon.parsePrimitiveCategory",
  "nltk.ccg.lexicon.parseSubscripts",
  "nltk.chat.bots",
  "nltk.chat.eliza.demo",
  "nltk.chat.eliza.eliza_chat",
  "nltk.chat.eliza.eliza_chatbot",
  "nltk.chat.eliza.pairs",
  "nltk.chat.iesha.demo",
  "nltk.chat.iesha.iesha_chat",
  "nltk.chat.iesha.iesha_chatbot",
  "nltk.chat.iesha.pairs",
  "nltk.chat.iesha.reflections",
  "nltk.chat.rude.demo",
  "nltk.chat.rude.pairs",
  "nltk.chat.rude.rude_chat",
  "nltk.chat.rude.rude_chatbot",
  "nltk.chat.suntsu.demo",
  "nltk.chat.suntsu.pairs",
  "nltk.chat.suntsu.suntsu_chat",
  "nltk.chat.suntsu.suntsu_chatbot",
  "nltk.chat.util.Chat",
  "nltk.chat.util.reflections",
  "nltk.chat.zen.demo",
  "nltk.chat.zen.responses",
  "nltk.chat.zen.zen_chat",
  "nltk.chat.zen.zen_chatbot",
  "nltk.chunk",
  "nltk.chunk.ChunkScore",
  "nltk.chunk.RegexpChunkParser",
  "nltk.chunk.RegexpParser",
  "nltk.chunk._BINARY_NE_CHUNKER",
  "nltk.chunk._MULTICLASS_NE_CHUNKER",
  "nltk.chunk.accuracy",
  "nltk.chunk.api.ChunkParserI",
  "nltk.chunk.ieerstr2tree",
  "nltk.chunk.named_entity.NEChunkParser",
  "nltk.chunk.named_entity.NEChunkParserTagger",
  "nltk.chunk.named_entity.build_model",
  "nltk.chunk.named_entity.load_ace_file",
  "nltk.chunk.named_entity.shape",
  "nltk.chunk.named_entity.simplify_pos",
  "nltk.chunk.regexp.CHUNK_TAG_PATTERN",
  "nltk.chunk.regexp.ChinkRule",
  "nltk.chunk.regexp.ChunkRule",
  "nltk.chunk.regexp.ChunkRuleWithContext",
  "nltk.chunk.regexp.ChunkString",
  "nltk.chunk.regexp.MergeRule",
  "nltk.chunk.regexp.RegexpChunkParser",
  "nltk.chunk.regexp.RegexpChunkRule",
  "nltk.chunk.regexp.RegexpChunkRule.fromstring",
  "nltk.chunk.regexp.SplitRule",
  "nltk.chunk.regexp.demo",
  "nltk.chunk.regexp.demo_eval",
  "nltk.chunk.regexp.tag_pattern2re_pattern",
  "nltk.chunk.tagstr2tree",
  "nltk.chunk.tree2conllstr",
  "nltk.chunk.util.ChunkScore",
  "nltk.chunk.util._IEER_DOC_RE",
  "nltk.chunk.util._IEER_TYPE_RE",
  "nltk.chunk.util._LINE_RE",
  "nltk.chunk.util._chunksets",
  "nltk.chunk.util._ieer_read_text",
  "nltk.chunk.util.conllstr2tree",
  "nltk.chunk.util.demo",
  "nltk.chunk.util.tree2conlltags",
  "nltk.classify.MaxentClassifier.train",
  "nltk.classify.NaiveBayesClassifier.train",
  "nltk.classify.Senna",
  "nltk.classify.api.ClassifierI",
  "nltk.classify.decisiontree.DecisionTreeClassifier",
  "nltk.classify.decisiontree.demo",
  "nltk.classify.decisiontree.f",
  "nltk.classify.maxent.BinaryMaxentFeatureEncoding",
  "nltk.classify.maxent.ConditionalExponentialClassifier",
  "nltk.classify.maxent.GISEncoding",
  "nltk.classify.maxent.MaxentClassifier",
  "nltk.classify.maxent.MaxentClassifier.train",
  "nltk.classify.maxent.MaxentFeatureEncodingI",
  "nltk.classify.maxent.TadmEventMaxentFeatureEncoding",
  "nltk.classify.maxent.TadmEventMaxentFeatureEncoding.train",
  "nltk.classify.maxent.TadmMaxentClassifier.train",
  "nltk.classify.maxent.calculate_deltas",
  "nltk.classify.maxent.calculate_empirical_fcount",
  "nltk.classify.maxent.calculate_estimated_fcount",
  "nltk.classify.maxent.calculate_nfmap",
  "nltk.classify.maxent.demo",
  "nltk.classify.maxent.train_maxent_classifier_with_gis",
  "nltk.classify.maxent.train_maxent_classifier_with_iis",
  "nltk.classify.maxent.train_maxent_classifier_with_megam",
  "nltk.classify.megam._megam_bin",
  "nltk.classify.megam._write_megam_features",
  "nltk.classify.megam.call_megam",
  "nltk.classify.megam.config_megam",
  "nltk.classify.megam.numpy",
  "nltk.classify.megam.parse_megam_weights",
  "nltk.classify.megam.write_megam_file",
  "nltk.classify.naivebayes.NaiveBayesClassifier",
  "nltk.classify.naivebayes.NaiveBayesClassifier.train",
  "nltk.classify.naivebayes.demo",
  "nltk.classify.positivenaivebayes.PositiveNaiveBayesClassifier",
  "nltk.classify.rte_classify.RTEFeatureExtractor",
  "nltk.classify.rte_classify.rte_classifier",
  "nltk.classify.rte_classify.rte_features",
  "nltk.classify.rte_classify.rte_featurize",
  "nltk.classify.scikitlearn.SklearnClassifier",
  "nltk.classify.senna.Senna",
  "nltk.classify.tadm._tadm_bin",
  "nltk.classify.tadm.call_tadm",
  "nltk.classify.tadm.config_tadm",
  "nltk.classify.tadm.encoding_demo",
  "nltk.classify.tadm.parse_tadm_weights",
  "nltk.classify.tadm.write_tadm_file",
  "nltk.classify.textcat.TextCat",
  "nltk.classify.textcat.demo",
  "nltk.classify.util.CutoffChecker",
  "nltk.classify.util._inst_cache",
  "nltk.classify.util.accuracy",
  "nltk.classify.util.apply_features",
  "nltk.classify.util.binary_names_demo_features",
  "nltk.classify.util.check_megam_config",
  "nltk.classify.util.log_likelihood",
  "nltk.classify.util.names_demo",
  "nltk.classify.util.names_demo_features",
  "nltk.classify.util.partial_names_demo",
  "nltk.classify.weka.ARFF_Formatter",
  "nltk.classify.weka.WekaClassifier",
  "nltk.classify.weka._check_weka_version",
  "nltk.classify.weka._weka_classpath",
  "nltk.classify.weka._weka_search",
  "nltk.classify.weka.config_weka",
  "nltk.classify.weka.make_classifier",
  "nltk.cluster.EMClusterer",
  "nltk.cluster.GAAClusterer",
  "nltk.cluster.KMeansClusterer",
  "nltk.cluster.api.ClusterI",
  "nltk.cluster.em.demo",
  "nltk.cluster.euclidean_distance",
  "nltk.cluster.gaac.demo",
  "nltk.cluster.kmeans.demo",
  "nltk.cluster.util.Dendrogram",
  "nltk.cluster.util.VectorSpaceClusterer",
  "nltk.cluster.util.VectorSpaceClusterer.__init__",
  "nltk.cluster.util.VectorSpaceClusterer.cluster",
  "nltk.cluster.util._DendrogramNode",
  "nltk.cluster.util.cosine_distance",
  "nltk.collections.AbstractLazySequence",
  "nltk.collections.LazyConcatenation",
  "nltk.collections.LazyMap",
  "nltk.collections.LazySubsequence",
  "nltk.collections.LazyZip",
  "nltk.collections.OrderedDict",
  "nltk.collections.Trie",
  "nltk.collocations.AbstractCollocationFinder",
  "nltk.collocations.BigramCollocationFinder",
  "nltk.collocations.BigramCollocationFinder.from_documents",
  "nltk.collocations.BigramCollocationFinder.from_words",
  "nltk.collocations.compare_scorer",
  "nltk.collocations.demo",
  "nltk.collocations.scorer",
  "nltk.compat.BytesIO",
  "nltk.compat.DATA_UPDATES",
  "nltk.compat.Fraction",
  "nltk.compat.PY3",
  "nltk.compat.StringIO",
  "nltk.compat.TemporaryDirectory",
  "nltk.compat.UTC",
  "nltk.compat.UnicodeWriter",
  "nltk.compat.ZERO",
  "nltk.compat._7bit",
  "nltk.compat._PY3_DATA_UPDATES",
  "nltk.compat._transliterated",
  "nltk.compat._was_fixed",
  "nltk.compat.add_py3_data",
  "nltk.compat.get_im_class",
  "nltk.compat.py3_data",
  "nltk.compat.python_2_unicode_compatible",
  "nltk.compat.remove_accents",
  "nltk.compat.unicode_repr",
  "nltk.corpus.abc",
  "nltk.corpus.alpino.tagged_sents",
  "nltk.corpus.alpino.words",
  "nltk.corpus.brown",
  "nltk.corpus.brown.raw",
  "nltk.corpus.brown.sents",
  "nltk.corpus.brown.tagged_sents",
  "nltk.corpus.brown.tagged_words",
  "nltk.corpus.brown.words",
  "nltk.corpus.cess_cat.tagged_sents",
  "nltk.corpus.cess_cat.words",
  "nltk.corpus.cess_esp.tagged_sents",
  "nltk.corpus.cess_esp.words",
  "nltk.corpus.cmudict",
  "nltk.corpus.conll2000",
  "nltk.corpus.conll2000.chunked_sents",
  "nltk.corpus.conll2002",
  "nltk.corpus.conll2002.chunked_sents",
  "nltk.corpus.conll2007.parsed_sents",
  "nltk.corpus.conll2007.sents",
  "nltk.corpus.crubadan",
  "nltk.corpus.floresta.tagged_sents",
  "nltk.corpus.floresta.words",
  "nltk.corpus.framenet.buildindexes",
  "nltk.corpus.framenet.docs",
  "nltk.corpus.framenet.docs_metadata",
  "nltk.corpus.framenet.frame",
  "nltk.corpus.framenet.frames",
  "nltk.corpus.framenet.frames_by_lemma",
  "nltk.corpus.framenet.lu_basic",
  "nltk.corpus.framenet.lus",
  "nltk.corpus.genesis",
  "nltk.corpus.genesis.words",
  "nltk.corpus.gutenberg",
  "nltk.corpus.gutenberg.words",
  "nltk.corpus.ieer",
  "nltk.corpus.ieer.fileids",
  "nltk.corpus.ieer.parsed_docs",
  "nltk.corpus.inaugural",
  "nltk.corpus.inaugural.words",
  "nltk.corpus.indian",
  "nltk.corpus.indian.tagged_sents",
  "nltk.corpus.indian.tagged_words",
  "nltk.corpus.indian.words",
  "nltk.corpus.lin_thesaurus.scored_synonyms",
  "nltk.corpus.lin_thesaurus.similarity",
  "nltk.corpus.lin_thesaurus.synonyms",
  "nltk.corpus.mac_morpho.tagged_sents",
  "nltk.corpus.mac_morpho.words",
  "nltk.corpus.machado.words",
  "nltk.corpus.movie_reviews.fileids",
  "nltk.corpus.movie_reviews.words",
  "nltk.corpus.names",
  "nltk.corpus.names.words",
  "nltk.corpus.nombank.fileids",
  "nltk.corpus.nombank.instances",
  "nltk.corpus.nombank.nouns",
  "nltk.corpus.nombank.rolesets",
  "nltk.corpus.nps_chat.tagged_posts",
  "nltk.corpus.nps_chat.words",
  "nltk.corpus.opinion_lexicon.negative",
  "nltk.corpus.opinion_lexicon.positive",
  "nltk.corpus.perluniprops.chars",
  "nltk.corpus.ppattach",
  "nltk.corpus.ptb",
  "nltk.corpus.ptb.categories",
  "nltk.corpus.ptb.fileids",
  "nltk.corpus.ptb.tagged_words",
  "nltk.corpus.ptb.words",
  "nltk.corpus.reader.CorpusReader",
  "nltk.corpus.reader.CorpusReader.__init__",
  "nltk.corpus.reader.SeekableUnicodeStreamReader",
  "nltk.corpus.reader.TaggedCorpusReader",
  "nltk.corpus.reader.TaggedCorpusReader.__init__",
  "nltk.corpus.reader.WordListCorpusReader",
  "nltk.corpus.reader.XMLCorpusReader",
  "nltk.corpus.reader.XMLCorpusReader.__init__",
  "nltk.corpus.reader.XMLCorpusView",
  "nltk.corpus.reader.aligned.AlignedSentCorpusView",
  "nltk.corpus.reader.api.CategorizedCorpusReader",
  "nltk.corpus.reader.api.CorpusReader",
  "nltk.corpus.reader.api.CorpusReader.__init__",
  "nltk.corpus.reader.api.CorpusReader.fileids",
  "nltk.corpus.reader.api.SyntaxCorpusReader",
  "nltk.corpus.reader.bnc.BNCSentence",
  "nltk.corpus.reader.bnc._all_xmlwords_in",
  "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader",
  "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader._parse",
  "nltk.corpus.reader.bracket_parse.EMPTY_BRACKETS",
  "nltk.corpus.reader.bracket_parse.SORTTAGWRD",
  "nltk.corpus.reader.bracket_parse.TAGWORD",
  "nltk.corpus.reader.bracket_parse.WORD",
  "nltk.corpus.reader.chasen.ChasenCorpusReader",
  "nltk.corpus.reader.chasen.ChasenCorpusView",
  "nltk.corpus.reader.chasen.demo",
  "nltk.corpus.reader.chasen.test",
  "nltk.corpus.reader.childes.CHILDESCorpusReader",
  "nltk.corpus.reader.childes.NS",
  "nltk.corpus.reader.childes.demo",
  "nltk.corpus.reader.chunked.ChunkedCorpusView",
  "nltk.corpus.reader.comparative_sents.CLOSE_COMPARISON",
  "nltk.corpus.reader.comparative_sents.COMPARISON",
  "nltk.corpus.reader.comparative_sents.Comparison",
  "nltk.corpus.reader.comparative_sents.ENTITIES_FEATS",
  "nltk.corpus.reader.comparative_sents.GRAD_COMPARISON",
  "nltk.corpus.reader.comparative_sents.KEYWORD",
  "nltk.corpus.reader.comparative_sents.NON_GRAD_COMPARISON",
  "nltk.corpus.reader.comparative_sents.STARS",
  "nltk.corpus.reader.concat",
  "nltk.corpus.reader.conll.ConllCorpusReader",
  "nltk.corpus.reader.conll.ConllSRLInstance",
  "nltk.corpus.reader.conll.ConllSRLInstanceList",
  "nltk.corpus.reader.crubadan.CrubadanCorpusReader",
  "nltk.corpus.reader.dependency.DependencyCorpusView",
  "nltk.corpus.reader.framenet.AttrDict",
  "nltk.corpus.reader.framenet.FramenetError",
  "nltk.corpus.reader.framenet.Future",
  "nltk.corpus.reader.framenet.PrettyDict",
  "nltk.corpus.reader.framenet.PrettyLazyIteratorList",
  "nltk.corpus.reader.framenet.PrettyLazyMap",
  "nltk.corpus.reader.framenet.PrettyList",
  "nltk.corpus.reader.framenet.SpecialList",
  "nltk.corpus.reader.framenet._annotation_ascii",
  "nltk.corpus.reader.framenet._annotation_ascii_FE_layer",
  "nltk.corpus.reader.framenet._annotation_ascii_FEs",
  "nltk.corpus.reader.framenet._annotation_ascii_frames",
  "nltk.corpus.reader.framenet._pretty_annotation",
  "nltk.corpus.reader.framenet._pretty_any",
  "nltk.corpus.reader.framenet._pretty_exemplars",
  "nltk.corpus.reader.framenet._pretty_fe",
  "nltk.corpus.reader.framenet._pretty_fe_relation",
  "nltk.corpus.reader.framenet._pretty_frame",
  "nltk.corpus.reader.framenet._pretty_frame_relation",
  "nltk.corpus.reader.framenet._pretty_frame_relation_type",
  "nltk.corpus.reader.framenet._pretty_fulltext_sentence",
  "nltk.corpus.reader.framenet._pretty_fulltext_sentences",
  "nltk.corpus.reader.framenet._pretty_longstring",
  "nltk.corpus.reader.framenet._pretty_lu",
  "nltk.corpus.reader.framenet._pretty_pos",
  "nltk.corpus.reader.framenet._pretty_semtype",
  "nltk.corpus.reader.framenet.demo",
  "nltk.corpus.reader.framenet.mimic_wrap",
  "nltk.corpus.reader.ieer.IEERDocument",
  "nltk.corpus.reader.ieer.titles",
  "nltk.corpus.reader.indian.IndianCorpusView",
  "nltk.corpus.reader.ipipan.IPIPANCorpusView",
  "nltk.corpus.reader.ipipan._parse_args",
  "nltk.corpus.reader.knbc.KNBCorpusReader",
  "nltk.corpus.reader.knbc._morphs2str_default",
  "nltk.corpus.reader.knbc.demo",
  "nltk.corpus.reader.lin.LinThesaurusCorpusReader",
  "nltk.corpus.reader.lin.demo",
  "nltk.corpus.reader.mte.MTECorpusView",
  "nltk.corpus.reader.mte.MTEFileReader",
  "nltk.corpus.reader.mte.MTETagConverter",
  "nltk.corpus.reader.mte.xpath",
  "nltk.corpus.reader.nkjp.NKJPCorpusReader",
  "nltk.corpus.reader.nkjp.NKJPCorpus_Header_View",
  "nltk.corpus.reader.nkjp.NKJPCorpus_Morph_View",
  "nltk.corpus.reader.nkjp.NKJPCorpus_Segmentation_View",
  "nltk.corpus.reader.nkjp.NKJPCorpus_Text_View",
  "nltk.corpus.reader.nkjp.XML_Tool",
  "nltk.corpus.reader.nkjp._parse_args",
  "nltk.corpus.reader.nombank.NombankChainTreePointer",
  "nltk.corpus.reader.nombank.NombankInstance",
  "nltk.corpus.reader.nombank.NombankPointer",
  "nltk.corpus.reader.nombank.NombankSplitTreePointer",
  "nltk.corpus.reader.nombank.NombankTreePointer",
  "nltk.corpus.reader.opinion_lexicon.IgnoreReadmeCorpusView",
  "nltk.corpus.reader.panlex_lite.Meaning",
  "nltk.corpus.reader.panlex_swadesh.PanlexLanguage",
  "nltk.corpus.reader.panlex_swadesh.PanlexSwadeshCorpusReader",
  "nltk.corpus.reader.pl196x.ANA",
  "nltk.corpus.reader.pl196x.PARA",
  "nltk.corpus.reader.pl196x.SENT",
  "nltk.corpus.reader.pl196x.TAGGEDWORD",
  "nltk.corpus.reader.pl196x.TEICorpusView",
  "nltk.corpus.reader.pl196x.TEXTID",
  "nltk.corpus.reader.pl196x.TYPE",
  "nltk.corpus.reader.pl196x.WORD",
  "nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader",
  "nltk.corpus.reader.plaintext.PlaintextCorpusReader",
  "nltk.corpus.reader.ppattach.PPAttachment",
  "nltk.corpus.reader.propbank.PropbankChainTreePointer",
  "nltk.corpus.reader.propbank.PropbankInflection",
  "nltk.corpus.reader.propbank.PropbankInstance",
  "nltk.corpus.reader.propbank.PropbankPointer",
  "nltk.corpus.reader.propbank.PropbankSplitTreePointer",
  "nltk.corpus.reader.propbank.PropbankTreePointer",
  "nltk.corpus.reader.reviews.FEATURES",
  "nltk.corpus.reader.reviews.NOTES",
  "nltk.corpus.reader.reviews.Review",
  "nltk.corpus.reader.reviews.ReviewLine",
  "nltk.corpus.reader.reviews.SENT",
  "nltk.corpus.reader.reviews.TITLE",
  "nltk.corpus.reader.rte.RTEPair",
  "nltk.corpus.reader.rte.norm",
  "nltk.corpus.reader.semcor.SemcorCorpusReader",
  "nltk.corpus.reader.semcor.SemcorSentence",
  "nltk.corpus.reader.semcor._all_xmlwords_in",
  "nltk.corpus.reader.senseval.SensevalCorpusView",
  "nltk.corpus.reader.senseval.SensevalInstance",
  "nltk.corpus.reader.senseval._fixXML",
  "nltk.corpus.reader.sentiwordnet.SentiSynset",
  "nltk.corpus.reader.sentiwordnet.SentiWordNetCorpusReader",
  "nltk.corpus.reader.sinica_treebank.APPENDIX",
  "nltk.corpus.reader.sinica_treebank.IDENTIFIER",
  "nltk.corpus.reader.sinica_treebank.TAGWORD",
  "nltk.corpus.reader.sinica_treebank.WORD",
  "nltk.corpus.reader.switchboard.SwitchboardTurn",
  "nltk.corpus.reader.tagged.TaggedCorpusReader",
  "nltk.corpus.reader.tagged.TaggedCorpusReader.__init__",
  "nltk.corpus.reader.tagged.TaggedCorpusView",
  "nltk.corpus.reader.timit.SpeakerInfo",
  "nltk.corpus.reader.timit.read_timit_block",
  "nltk.corpus.reader.toolbox.demo",
  "nltk.corpus.reader.udhr.UdhrCorpusReader",
  "nltk.corpus.reader.util.ConcatenatedCorpusView",
  "nltk.corpus.reader.util.FileSystemPathPointer",
  "nltk.corpus.reader.util.PickleCorpusView",
  "nltk.corpus.reader.util.StreamBackedCorpusView",
  "nltk.corpus.reader.util.StreamBackedCorpusView.__init__",
  "nltk.corpus.reader.util.ZipFilePathPointer",
  "nltk.corpus.reader.util._parse_sexpr_block",
  "nltk.corpus.reader.util._path_from",
  "nltk.corpus.reader.util.concat",
  "nltk.corpus.reader.util.find_corpus_fileids",
  "nltk.corpus.reader.util.read_alignedsent_block",
  "nltk.corpus.reader.util.read_blankline_block",
  "nltk.corpus.reader.util.read_line_block",
  "nltk.corpus.reader.util.read_whitespace_block",
  "nltk.corpus.reader.wordlist.WordListCorpusReader",
  "nltk.corpus.reader.wordnet.Lemma",
  "nltk.corpus.reader.wordnet.NOUN",
  "nltk.corpus.reader.wordnet.POS_LIST",
  "nltk.corpus.reader.wordnet.SENSENUM_RE",
  "nltk.corpus.reader.wordnet.Synset",
  "nltk.corpus.reader.wordnet.VERB_FRAME_STRINGS",
  "nltk.corpus.reader.wordnet.WordNetCorpusReader",
  "nltk.corpus.reader.wordnet.WordNetError",
  "nltk.corpus.reader.wordnet._INF",
  "nltk.corpus.reader.wordnet._WordNetObject",
  "nltk.corpus.reader.wordnet._get_pos",
  "nltk.corpus.reader.wordnet._lcs_ic",
  "nltk.corpus.reader.wordnet.information_content",
  "nltk.corpus.reader.wordnet.jcn_similarity",
  "nltk.corpus.reader.wordnet.lch_similarity",
  "nltk.corpus.reader.wordnet.lin_similarity",
  "nltk.corpus.reader.wordnet.path_similarity",
  "nltk.corpus.reader.wordnet.res_similarity",
  "nltk.corpus.reader.wordnet.wup_similarity",
  "nltk.corpus.reader.xmldocs.ElementTree.parse",
  "nltk.corpus.reader.xmldocs.XMLCorpusReader",
  "nltk.corpus.reader.xmldocs.XMLCorpusReader.__init__",
  "nltk.corpus.reader.xmldocs.XMLCorpusReader.xml",
  "nltk.corpus.reader.xmldocs.XMLCorpusView",
  "nltk.corpus.reader.xmldocs.XMLCorpusView.__init__",
  "nltk.corpus.reader.xmldocs.XMLCorpusView.read_block",
  "nltk.corpus.reader.ycoe.YCOEParseCorpusReader",
  "nltk.corpus.reader.ycoe.YCOETaggedCorpusReader",
  "nltk.corpus.rte.pairs",
  "nltk.corpus.senseval",
  "nltk.corpus.senseval.instances",
  "nltk.corpus.shakespeare",
  "nltk.corpus.sinica_treebank",
  "nltk.corpus.sinica_treebank.parsed_sents",
  "nltk.corpus.sinica_treebank.sents",
  "nltk.corpus.sinica_treebank.tagged_sents",
  "nltk.corpus.sinica_treebank.words",
  "nltk.corpus.state_union",
  "nltk.corpus.stopwords",
  "nltk.corpus.stopwords.words",
  "nltk.corpus.subjectivity.sents",
  "nltk.corpus.timit",
  "nltk.corpus.toolbox",
  "nltk.corpus.treebank",
  "nltk.corpus.treebank._fileids",
  "nltk.corpus.treebank.fileids",
  "nltk.corpus.treebank.parsed_sents",
  "nltk.corpus.treebank.tagged_sents",
  "nltk.corpus.treebank.tagged_words",
  "nltk.corpus.treebank.words",
  "nltk.corpus.treebank_chunk.chunked_sents",
  "nltk.corpus.twitter_samples.abspath",
  "nltk.corpus.twitter_samples.docs",
  "nltk.corpus.twitter_samples.strings",
  "nltk.corpus.twitter_samples.tokenized",
  "nltk.corpus.udhr",
  "nltk.corpus.udhr.fileids",
  "nltk.corpus.udhr.raw",
  "nltk.corpus.udhr.sents",
  "nltk.corpus.udhr.words",
  "nltk.corpus.util.LazyCorpusLoader",
  "nltk.corpus.util.TRY_ZIPFILE_FIRST",
  "nltk.corpus.util._make_bound_method",
  "nltk.corpus.webtext",
  "nltk.corpus.webtext.fileids",
  "nltk.corpus.webtext.words",
  "nltk.corpus.wordnet",
  "nltk.corpus.wordnet.ADJ",
  "nltk.corpus.wordnet.ADJ_SAT",
  "nltk.corpus.wordnet.ADV",
  "nltk.corpus.wordnet.NOUN",
  "nltk.corpus.wordnet.VERB",
  "nltk.corpus.wordnet._morphy",
  "nltk.corpus.wordnet._unload",
  "nltk.corpus.wordnet.all_lemma_names",
  "nltk.corpus.wordnet.ensure_loaded",
  "nltk.corpus.wordnet.lemma",
  "nltk.corpus.wordnet.morphy",
  "nltk.corpus.wordnet.synset",
  "nltk.corpus.wordnet.synset_from_pos_and_offset",
  "nltk.corpus.wordnet.synsets",
  "nltk.corpus.wordnet_ic.ic",
  "nltk.corpus.words",
  "nltk.corpus.words.words",
  "nltk.data.AUTO_FORMATS",
  "nltk.data.BufferedGzipFile",
  "nltk.data.FORMATS",
  "nltk.data.FileSystemPathPointer",
  "nltk.data.GzipFileSystemPathPointer",
  "nltk.data.OpenOnDemandZipFile",
  "nltk.data.PathPointer",
  "nltk.data.SeekableUnicodeStreamReader",
  "nltk.data.ZipFilePathPointer",
  "nltk.data._open",
  "nltk.data._resource_cache",
  "nltk.data.find",
  "nltk.data.gzip_open_unicode",
  "nltk.data.load",
  "nltk.data.normalize_resource_name",
  "nltk.data.normalize_resource_url",
  "nltk.data.path",
  "nltk.data.show_cfg",
  "nltk.data.split_resource_url",
  "nltk.data.textwrap_fill",
  "nltk.data.textwrap_indent",
  "nltk.data.zipfile",
  "nltk.decorators.__call__",
  "nltk.decorators.decorator",
  "nltk.decorators.decorator_factory",
  "nltk.decorators.getattr_",
  "nltk.decorators.getinfo",
  "nltk.decorators.new_wrapper",
  "nltk.decorators.old_sys_path",
  "nltk.decorators.update_wrapper",
  "nltk.downloader.Collection",
  "nltk.downloader.Downloader",
  "nltk.downloader.DownloaderGUI",
  "nltk.downloader.DownloaderMessage",
  "nltk.downloader.DownloaderShell",
  "nltk.downloader.ErrorMessage",
  "nltk.downloader.FinishCollectionMessage",
  "nltk.downloader.FinishDownloadMessage",
  "nltk.downloader.FinishPackageMessage",
  "nltk.downloader.FinishUnzipMessage",
  "nltk.downloader.Package",
  "nltk.downloader.ProgressMessage",
  "nltk.downloader.SelectDownloadDirMessage",
  "nltk.downloader.StaleMessage",
  "nltk.downloader.StartCollectionMessage",
  "nltk.downloader.StartDownloadMessage",
  "nltk.downloader.StartPackageMessage",
  "nltk.downloader.StartUnzipMessage",
  "nltk.downloader.TKINTER",
  "nltk.downloader.UpToDateMessage",
  "nltk.downloader._downloader",
  "nltk.downloader._find_collections",
  "nltk.downloader._find_packages",
  "nltk.downloader._indent_xml",
  "nltk.downloader._md5_hexdigest",
  "nltk.downloader._unzip_iter",
  "nltk.downloader.downloader",
  "nltk.downloader.md5_hexdigest",
  "nltk.downloader.parser",
  "nltk.downloader.rv",
  "nltk.draw.CFGEditor",
  "nltk.draw.TreeSegmentWidget",
  "nltk.draw.cfg.CFGDemo",
  "nltk.draw.cfg.CFGEditor",
  "nltk.draw.cfg.ProductionList",
  "nltk.draw.cfg._CFGEditor_HELP",
  "nltk.draw.cfg.demo",
  "nltk.draw.dispersion.dispersion_plot",
  "nltk.draw.dispersion.words",
  "nltk.draw.dispersion_plot",
  "nltk.draw.table.MultiListbox",
  "nltk.draw.table.Table",
  "nltk.draw.table.demo",
  "nltk.draw.tree.TreeSegmentWidget",
  "nltk.draw.tree.TreeView",
  "nltk.draw.tree.TreeWidget",
  "nltk.draw.tree._tree_to_treeseg",
  "nltk.draw.tree.demo",
  "nltk.draw.tree.draw_trees",
  "nltk.draw.tree.tree_to_treesegment",
  "nltk.draw.tree_to_treesegment",
  "nltk.draw.util.AbstractContainerWidget",
  "nltk.draw.util.BoxWidget",
  "nltk.draw.util.BracketWidget",
  "nltk.draw.util.CanvasFrame",
  "nltk.draw.util.CanvasWidget",
  "nltk.draw.util.CanvasWidget.__getitem__",
  "nltk.draw.util.CanvasWidget.__init__",
  "nltk.draw.util.CanvasWidget.__setitem__",
  "nltk.draw.util.ColorizedList",
  "nltk.draw.util.EntryDialog",
  "nltk.draw.util.MutableOptionMenu",
  "nltk.draw.util.OvalWidget",
  "nltk.draw.util.ParenWidget",
  "nltk.draw.util.ScrollWatcherWidget",
  "nltk.draw.util.SequenceWidget",
  "nltk.draw.util.ShowText",
  "nltk.draw.util.SpaceWidget",
  "nltk.draw.util.StackWidget",
  "nltk.draw.util.SymbolWidget",
  "nltk.draw.util.SymbolWidget.SYMBOLS",
  "nltk.draw.util.TextWidget",
  "nltk.draw.util.demo",
  "nltk.featstruct.FeatDict",
  "nltk.featstruct.FeatList",
  "nltk.featstruct.FeatStruct",
  "nltk.featstruct.FeatStruct.__hash__",
  "nltk.featstruct.FeatStructReader",
  "nltk.featstruct.Feature",
  "nltk.featstruct.FeatureValueConcat",
  "nltk.featstruct.FeatureValueSet",
  "nltk.featstruct.FeatureValueTuple",
  "nltk.featstruct.FeatureValueUnion",
  "nltk.featstruct.SLASH",
  "nltk.featstruct.SlashFeature",
  "nltk.featstruct.SubstituteBindingsSequence",
  "nltk.featstruct.TYPE",
  "nltk.featstruct.UnificationFailure",
  "nltk.featstruct._FROZEN_ERROR",
  "nltk.featstruct._FROZEN_NOTICE",
  "nltk.featstruct._UnificationFailure",
  "nltk.featstruct._UnificationFailureError",
  "nltk.featstruct._apply_forwards",
  "nltk.featstruct._apply_forwards_to_bindings",
  "nltk.featstruct._check_frozen",
  "nltk.featstruct._default_fs_class",
  "nltk.featstruct._destructively_unify",
  "nltk.featstruct._flatten",
  "nltk.featstruct._is_mapping",
  "nltk.featstruct._is_sequence",
  "nltk.featstruct._remove_variables",
  "nltk.featstruct._rename_variable",
  "nltk.featstruct._rename_variables",
  "nltk.featstruct._resolve_aliases",
  "nltk.featstruct._retract_bindings",
  "nltk.featstruct._substitute_bindings",
  "nltk.featstruct._trace_bindings",
  "nltk.featstruct._trace_unify_fail",
  "nltk.featstruct._trace_unify_identity",
  "nltk.featstruct._trace_unify_start",
  "nltk.featstruct._trace_unify_succeed",
  "nltk.featstruct._trace_valrepr",
  "nltk.featstruct._unify_feature_values",
  "nltk.featstruct._variables",
  "nltk.featstruct.demo",
  "nltk.featstruct.display_unification",
  "nltk.featstruct.find_variables",
  "nltk.featstruct.remove_variables",
  "nltk.featstruct.rename_variables",
  "nltk.featstruct.retract_bindings",
  "nltk.featstruct.substitute_bindings",
  "nltk.featstruct.subsumes",
  "nltk.featstruct.unify",
  "nltk.grammar.CFG",
  "nltk.grammar.CFG.fromstring",
  "nltk.grammar.DependencyGrammar",
  "nltk.grammar.DependencyGrammar.fromstring",
  "nltk.grammar.DependencyProduction",
  "nltk.grammar.FeatStructNonterminal",
  "nltk.grammar.FeatureGrammar",
  "nltk.grammar.FeatureGrammar.fromstring",
  "nltk.grammar.FeatureValueType",
  "nltk.grammar.Nonterminal",
  "nltk.grammar.PCFG",
  "nltk.grammar.PCFG.fromstring",
  "nltk.grammar.ProbabilisticDependencyGrammar",
  "nltk.grammar.ProbabilisticProduction",
  "nltk.grammar.Production",
  "nltk.grammar._ARROW_RE",
  "nltk.grammar._DISJUNCTION_RE",
  "nltk.grammar._PROBABILITY_RE",
  "nltk.grammar._READ_DG_RE",
  "nltk.grammar._SPLIT_DG_RE",
  "nltk.grammar._STANDARD_NONTERM_RE",
  "nltk.grammar._TERMINAL_RE",
  "nltk.grammar._read_cfg_production",
  "nltk.grammar._read_dependency_production",
  "nltk.grammar._read_production",
  "nltk.grammar.cfg_demo",
  "nltk.grammar.dg_demo",
  "nltk.grammar.fcfg_demo",
  "nltk.grammar.is_nonterminal",
  "nltk.grammar.is_terminal",
  "nltk.grammar.nonterminals",
  "nltk.grammar.nonterminals.split",
  "nltk.grammar.pcfg_demo",
  "nltk.grammar.read_grammar",
  "nltk.grammar.sdg_demo",
  "nltk.grammar.toy_pcfg1",
  "nltk.grammar.toy_pcfg2",
  "nltk.help._format_tagset",
  "nltk.help._print_entries",
  "nltk.help.brown_tagset",
  "nltk.help.claws5_tagset",
  "nltk.help.upenn_tagset",
  "nltk.induce_pcfg",
  "nltk.inference.Prover9",
  "nltk.inference.api.BaseModelBuilderCommand",
  "nltk.inference.api.BaseModelBuilderCommand.__init__",
  "nltk.inference.api.BaseProverCommand",
  "nltk.inference.api.BaseProverCommand.__init__",
  "nltk.inference.api.BaseTheoremToolCommand",
  "nltk.inference.api.ModelBuilder",
  "nltk.inference.api.ModelBuilderCommand",
  "nltk.inference.api.Prover",
  "nltk.inference.api.ProverCommand",
  "nltk.inference.api.ProverCommandDecorator",
  "nltk.inference.api.TheoremToolCommand",
  "nltk.inference.api.TheoremToolCommandDecorator",
  "nltk.inference.api.TheoremToolThread",
  "nltk.inference.discourse.CfgReadingCommand",
  "nltk.inference.discourse.DiscourseTester",
  "nltk.inference.discourse.DrtGlueReadingCommand",
  "nltk.inference.discourse.ReadingCommand",
  "nltk.inference.discourse.demo",
  "nltk.inference.discourse.discourse_demo",
  "nltk.inference.discourse.drt_discourse_demo",
  "nltk.inference.discourse.spacer",
  "nltk.inference.mace.Mace",
  "nltk.inference.mace.MaceCommand",
  "nltk.inference.mace.arguments",
  "nltk.inference.mace.decode_result",
  "nltk.inference.mace.demo",
  "nltk.inference.mace.spacer",
  "nltk.inference.mace.test_build_model",
  "nltk.inference.mace.test_model_found",
  "nltk.inference.mace.test_transform_output",
  "nltk.inference.nonmonotonic.ClosedDomainProver",
  "nltk.inference.nonmonotonic.ClosedWorldProver",
  "nltk.inference.nonmonotonic.SetHolder",
  "nltk.inference.nonmonotonic.UniqueNamesProver",
  "nltk.inference.nonmonotonic.closed_domain_demo",
  "nltk.inference.nonmonotonic.closed_world_demo",
  "nltk.inference.nonmonotonic.combination_prover_demo",
  "nltk.inference.nonmonotonic.default_reasoning_demo",
  "nltk.inference.nonmonotonic.demo",
  "nltk.inference.nonmonotonic.get_domain",
  "nltk.inference.nonmonotonic.print_proof",
  "nltk.inference.nonmonotonic.unique_names_demo",
  "nltk.inference.prover9.Prover9",
  "nltk.inference.prover9.Prover9Command",
  "nltk.inference.prover9.Prover9CommandParent",
  "nltk.inference.prover9.Prover9Exception",
  "nltk.inference.prover9.Prover9FatalException",
  "nltk.inference.prover9.Prover9LimitExceededException",
  "nltk.inference.prover9.Prover9Parent",
  "nltk.inference.prover9._convert_to_prover9",
  "nltk.inference.prover9.arguments",
  "nltk.inference.prover9.convert_to_prover9",
  "nltk.inference.prover9.demo",
  "nltk.inference.prover9.expressions",
  "nltk.inference.prover9.p9_return_codes",
  "nltk.inference.prover9.spacer",
  "nltk.inference.prover9.test_config",
  "nltk.inference.prover9.test_convert_to_prover9",
  "nltk.inference.prover9.test_prove",
  "nltk.inference.resolution.BindingDict",
  "nltk.inference.resolution.BindingException",
  "nltk.inference.resolution.Clause",
  "nltk.inference.resolution.DebugObject",
  "nltk.inference.resolution.ProverParseError",
  "nltk.inference.resolution.ResolutionProver",
  "nltk.inference.resolution.ResolutionProverCommand",
  "nltk.inference.resolution._clausify",
  "nltk.inference.resolution._iterate_first",
  "nltk.inference.resolution._iterate_second",
  "nltk.inference.resolution._mgu_var",
  "nltk.inference.resolution._unify_terms",
  "nltk.inference.resolution.clausify",
  "nltk.inference.resolution.demo",
  "nltk.inference.resolution.most_general_unification",
  "nltk.inference.resolution.resolution_test",
  "nltk.inference.resolution.testResolutionProver",
  "nltk.inference.resolution.test_clausify",
  "nltk.inference.tableau.Agenda",
  "nltk.inference.tableau.Debug",
  "nltk.inference.tableau.ProverParseError",
  "nltk.inference.tableau.TableauProver",
  "nltk.inference.tableau._counter",
  "nltk.inference.tableau.demo",
  "nltk.inference.tableau.tableau_test",
  "nltk.inference.tableau.testHigherOrderTableauProver",
  "nltk.inference.tableau.testTableauProver",
  "nltk.internals.Counter",
  "nltk.internals.Deprecated",
  "nltk.internals.ElementWrapper",
  "nltk.internals.ReadError",
  "nltk.internals._READ_INT_RE",
  "nltk.internals._READ_NUMBER_VALUE",
  "nltk.internals._STRING_START_RE",
  "nltk.internals._add_epytext_field",
  "nltk.internals._decode_stdoutdata",
  "nltk.internals._java_bin",
  "nltk.internals._java_options",
  "nltk.internals._mro",
  "nltk.internals.config_java",
  "nltk.internals.deprecated",
  "nltk.internals.find_binary",
  "nltk.internals.find_binary_iter",
  "nltk.internals.find_dir",
  "nltk.internals.find_file",
  "nltk.internals.find_file_iter",
  "nltk.internals.find_jar",
  "nltk.internals.find_jar_iter",
  "nltk.internals.find_jars_within_path",
  "nltk.internals.import_from_stdlib",
  "nltk.internals.is_writable",
  "nltk.internals.java",
  "nltk.internals.os",
  "nltk.internals.overridden",
  "nltk.internals.raise_unorderable_types",
  "nltk.internals.read_str",
  "nltk.internals.slice_bounds",
  "nltk.jsontags.JSONTaggedDecoder",
  "nltk.jsontags.JSONTaggedEncoder",
  "nltk.jsontags.TAG_PREFIX",
  "nltk.jsontags.json_tags",
  "nltk.jsontags.register_tag",
  "nltk.lazyimport.LazyModule",
  "nltk.lazyimport._debug",
  "nltk.lm.KneserNeyInterpolated",
  "nltk.lm.Laplace",
  "nltk.lm.Lidstone",
  "nltk.lm.MLE",
  "nltk.lm.NgramCounter",
  "nltk.lm.Vocabulary",
  "nltk.lm.WittenBellInterpolated",
  "nltk.lm.api.LanguageModel",
  "nltk.lm.api.Smoothing",
  "nltk.lm.api._mean",
  "nltk.lm.api._random_generator",
  "nltk.lm.api._weighted_choice",
  "nltk.lm.counter.NgramCounter",
  "nltk.lm.models.InterpolatedLanguageModel",
  "nltk.lm.models.KneserNeyInterpolated",
  "nltk.lm.models.Laplace",
  "nltk.lm.models.Lidstone",
  "nltk.lm.models.WittenBellInterpolated",
  "nltk.lm.preprocessing.flatten",
  "nltk.lm.preprocessing.pad_both_ends",
  "nltk.lm.preprocessing.padded_everygram_pipeline",
  "nltk.lm.preprocessing.padded_everygrams",
  "nltk.lm.smoothing.KneserNey",
  "nltk.lm.smoothing.WittenBell",
  "nltk.lm.smoothing._count_non_zero_vals",
  "nltk.lm.util.NEG_INF",
  "nltk.lm.util.log_base2",
  "nltk.lm.vocabulary.Vocabulary",
  "nltk.lm.vocabulary._",
  "nltk.lm.vocabulary._dispatched_lookup",
  "nltk.lm.vocabulary.basestring",
  "nltk.metrics.BigramAssocMeasures",
  "nltk.metrics.BigramAssocMeasures.likelihood_ratio",
  "nltk.metrics.BigramAssocMeasures.pmi",
  "nltk.metrics.BigramAssocMeasures.raw_freq",
  "nltk.metrics.accuracy",
  "nltk.metrics.agreement.AnnotationTask",
  "nltk.metrics.agreement.data",
  "nltk.metrics.agreement.log",
  "nltk.metrics.agreement.parser",
  "nltk.metrics.agreement.task",
  "nltk.metrics.agreement.toks",
  "nltk.metrics.aline.C_exp",
  "nltk.metrics.aline.C_skip",
  "nltk.metrics.aline.C_sub",
  "nltk.metrics.aline.C_vwl",
  "nltk.metrics.aline.R",
  "nltk.metrics.aline.R_c",
  "nltk.metrics.aline.R_v",
  "nltk.metrics.aline.V",
  "nltk.metrics.aline._retrieve",
  "nltk.metrics.aline.align",
  "nltk.metrics.aline.consonants",
  "nltk.metrics.aline.delta",
  "nltk.metrics.aline.demo",
  "nltk.metrics.aline.diff",
  "nltk.metrics.aline.feature_matrix",
  "nltk.metrics.aline.inf",
  "nltk.metrics.aline.salience",
  "nltk.metrics.aline.sigma_exp",
  "nltk.metrics.aline.sigma_skip",
  "nltk.metrics.aline.sigma_sub",
  "nltk.metrics.aline.similarity_matrix",
  "nltk.metrics.association.NGRAM",
  "nltk.metrics.association.NgramAssocMeasures",
  "nltk.metrics.association.TOTAL",
  "nltk.metrics.association.UNIGRAMS",
  "nltk.metrics.association._SMALL",
  "nltk.metrics.association._ln",
  "nltk.metrics.association._log2",
  "nltk.metrics.association._product",
  "nltk.metrics.confusionmatrix.ConfusionMatrix",
  "nltk.metrics.confusionmatrix.demo",
  "nltk.metrics.distance",
  "nltk.metrics.distance._edit_dist_backtrace",
  "nltk.metrics.distance._edit_dist_init",
  "nltk.metrics.distance._edit_dist_step",
  "nltk.metrics.distance.binary_distance",
  "nltk.metrics.distance.demo",
  "nltk.metrics.distance.edit_distance",
  "nltk.metrics.distance.jaccard_distance",
  "nltk.metrics.distance.jaro_similarity",
  "nltk.metrics.distance.jaro_winkler_similarity",
  "nltk.metrics.distance.masi_distance",
  "nltk.metrics.f_measure",
  "nltk.metrics.paice.Paice",
  "nltk.metrics.paice._calculate",
  "nltk.metrics.paice._calculate_cut",
  "nltk.metrics.paice._count_intersection",
  "nltk.metrics.paice._get_derivative",
  "nltk.metrics.paice._indexes",
  "nltk.metrics.paice._truncate",
  "nltk.metrics.paice.demo",
  "nltk.metrics.paice.get_words_from_dictionary",
  "nltk.metrics.precision",
  "nltk.metrics.ranks_from_scores",
  "nltk.metrics.recall",
  "nltk.metrics.scores.accuracy",
  "nltk.metrics.scores.demo",
  "nltk.metrics.scores.f_measure",
  "nltk.metrics.scores.precision",
  "nltk.metrics.scores.recall",
  "nltk.metrics.segmentation._ghd_aux",
  "nltk.metrics.segmentation._init_mat",
  "nltk.metrics.spearman._rank_dists",
  "nltk.metrics.spearman_correlation",
  "nltk.misc.chomsky.generate_chomsky",
  "nltk.misc.chomsky.leadins",
  "nltk.misc.chomsky.objects",
  "nltk.misc.chomsky.subjects",
  "nltk.misc.chomsky.verbs",
  "nltk.misc.sort._merge_lists",
  "nltk.misc.sort._partition",
  "nltk.misc.sort._quick",
  "nltk.misc.sort.bubble",
  "nltk.misc.sort.demo",
  "nltk.misc.sort.merge",
  "nltk.misc.sort.quick",
  "nltk.misc.sort.selection",
  "nltk.misc.wordfinder.check",
  "nltk.misc.wordfinder.revword",
  "nltk.misc.wordfinder.step",
  "nltk.misc.wordfinder.word_finder",
  "nltk.misc.wordfinder.wordfinder",
  "nltk.nonterminals",
  "nltk.parse.DependencyGraph",
  "nltk.parse.FeatureChartParser",
  "nltk.parse.MaltParser",
  "nltk.parse.ParserI",
  "nltk.parse.RecursiveDescentParser",
  "nltk.parse.ShiftReduceParser",
  "nltk.parse.SteppingRecursiveDescentParser",
  "nltk.parse.SteppingShiftReduceParser",
  "nltk.parse.ViterbiParser",
  "nltk.parse.api.ParserI",
  "nltk.parse.bllip.BllipParser",
  "nltk.parse.bllip._ensure_ascii",
  "nltk.parse.bllip._ensure_bllip_import_or_error",
  "nltk.parse.bllip._scored_parse_to_nltk_tree",
  "nltk.parse.chart.AbstractChartRule",
  "nltk.parse.chart.BU_LC_STRATEGY",
  "nltk.parse.chart.BU_STRATEGY",
  "nltk.parse.chart.BottomUpPredictCombineRule",
  "nltk.parse.chart.BottomUpPredictRule",
  "nltk.parse.chart.CachedTopDownPredictRule",
  "nltk.parse.chart.Chart",
  "nltk.parse.chart.Chart.__init__",
  "nltk.parse.chart.ChartParser",
  "nltk.parse.chart.ChartParser.__init__",
  "nltk.parse.chart.ChartRuleI",
  "nltk.parse.chart.EdgeI",
  "nltk.parse.chart.EmptyPredictRule",
  "nltk.parse.chart.FilteredBottomUpPredictCombineRule",
  "nltk.parse.chart.FilteredSingleEdgeFundamentalRule",
  "nltk.parse.chart.FundamentalRule",
  "nltk.parse.chart.LC_STRATEGY",
  "nltk.parse.chart.LeafEdge",
  "nltk.parse.chart.LeafInitRule",
  "nltk.parse.chart.SingleEdgeFundamentalRule",
  "nltk.parse.chart.SteppingChartParser",
  "nltk.parse.chart.TD_STRATEGY",
  "nltk.parse.chart.TopDownInitRule",
  "nltk.parse.chart.TopDownPredictRule",
  "nltk.parse.chart.TreeEdge",
  "nltk.parse.chart.TreeEdge.__init__",
  "nltk.parse.chart.TreeEdge.__unicode__",
  "nltk.parse.chart._bottomup_filter",
  "nltk.parse.chart.demo",
  "nltk.parse.chart.demo_grammar",
  "nltk.parse.corenlp.CoreNLPDependencyParser",
  "nltk.parse.corenlp.CoreNLPParser",
  "nltk.parse.corenlp.CoreNLPServer",
  "nltk.parse.corenlp.CoreNLPServerError",
  "nltk.parse.corenlp.GenericCoreNLPParser",
  "nltk.parse.corenlp._stanford_url",
  "nltk.parse.corenlp.transform",
  "nltk.parse.corenlp.try_port",
  "nltk.parse.dependencygraph.DependencyGraph",
  "nltk.parse.dependencygraph.conll_data2.split",
  "nltk.parse.dependencygraph.conll_demo",
  "nltk.parse.dependencygraph.conll_file_demo",
  "nltk.parse.dependencygraph.cycle_finding_demo",
  "nltk.parse.dependencygraph.demo",
  "nltk.parse.dependencygraph.malt_demo",
  "nltk.parse.earleychart.BU_INCREMENTAL_FEATURE_STRATEGY",
  "nltk.parse.earleychart.BU_INCREMENTAL_STRATEGY",
  "nltk.parse.earleychart.BU_LC_INCREMENTAL_FEATURE_STRATEGY",
  "nltk.parse.earleychart.BU_LC_INCREMENTAL_STRATEGY",
  "nltk.parse.earleychart.CompleteFundamentalRule",
  "nltk.parse.earleychart.CompleterRule",
  "nltk.parse.earleychart.EARLEY_FEATURE_STRATEGY",
  "nltk.parse.earleychart.EARLEY_STRATEGY",
  "nltk.parse.earleychart.EarleyChartParser",
  "nltk.parse.earleychart.FeatureCompleteFundamentalRule",
  "nltk.parse.earleychart.FeatureCompleterRule",
  "nltk.parse.earleychart.FeatureIncrementalChart",
  "nltk.parse.earleychart.FeatureIncrementalChartParser",
  "nltk.parse.earleychart.FeaturePredictorRule",
  "nltk.parse.earleychart.FeatureScannerRule",
  "nltk.parse.earleychart.FilteredCompleteFundamentalRule",
  "nltk.parse.earleychart.IncrementalChart",
  "nltk.parse.earleychart.IncrementalChartParser",
  "nltk.parse.earleychart.LC_INCREMENTAL_STRATEGY",
  "nltk.parse.earleychart.PredictorRule",
  "nltk.parse.earleychart.ScannerRule",
  "nltk.parse.earleychart.TD_INCREMENTAL_FEATURE_STRATEGY",
  "nltk.parse.earleychart.TD_INCREMENTAL_STRATEGY",
  "nltk.parse.earleychart.demo",
  "nltk.parse.featurechart.BU_FEATURE_STRATEGY",
  "nltk.parse.featurechart.BU_LC_FEATURE_STRATEGY",
  "nltk.parse.featurechart.FeatureBottomUpPredictCombineRule",
  "nltk.parse.featurechart.FeatureBottomUpPredictRule",
  "nltk.parse.featurechart.FeatureChart",
  "nltk.parse.featurechart.FeatureChartParser",
  "nltk.parse.featurechart.FeatureEmptyPredictRule",
  "nltk.parse.featurechart.FeatureFundamentalRule",
  "nltk.parse.featurechart.FeatureSingleEdgeFundamentalRule",
  "nltk.parse.featurechart.FeatureTopDownInitRule",
  "nltk.parse.featurechart.FeatureTopDownPredictRule",
  "nltk.parse.featurechart.FeatureTreeEdge",
  "nltk.parse.featurechart.InstantiateVarsChart",
  "nltk.parse.featurechart.TD_FEATURE_STRATEGY",
  "nltk.parse.featurechart.cp",
  "nltk.parse.featurechart.demo",
  "nltk.parse.featurechart.demo_grammar",
  "nltk.parse.featurechart.grammar",
  "nltk.parse.featurechart.sent",
  "nltk.parse.featurechart.tokens",
  "nltk.parse.featurechart.trees",
  "nltk.parse.generate._generate_all",
  "nltk.parse.generate._generate_one",
  "nltk.parse.generate.demo",
  "nltk.parse.generate.demo_grammar",
  "nltk.parse.generate.generate",
  "nltk.parse.load_parser",
  "nltk.parse.malt.MaltParser",
  "nltk.parse.malt.find_malt_model",
  "nltk.parse.malt.find_maltparser",
  "nltk.parse.malt.malt_regex_tagger",
  "nltk.parse.nonprojectivedependencyparser.DemoScorer",
  "nltk.parse.nonprojectivedependencyparser.DependencyScorerI",
  "nltk.parse.nonprojectivedependencyparser.NaiveBayesDependencyScorer",
  "nltk.parse.nonprojectivedependencyparser.NonprojectiveDependencyParser",
  "nltk.parse.nonprojectivedependencyparser.ProbabilisticNonprojectiveParser",
  "nltk.parse.nonprojectivedependencyparser.demo",
  "nltk.parse.nonprojectivedependencyparser.logger",
  "nltk.parse.nonprojectivedependencyparser.nonprojective_conll_parse_demo",
  "nltk.parse.nonprojectivedependencyparser.rule_based_demo",
  "nltk.parse.pchart.BottomUpProbabilisticChartParser",
  "nltk.parse.pchart.InsideChartParser",
  "nltk.parse.pchart.LongestChartParser",
  "nltk.parse.pchart.ProbabilisticBottomUpInitRule",
  "nltk.parse.pchart.ProbabilisticBottomUpPredictRule",
  "nltk.parse.pchart.ProbabilisticFundamentalRule",
  "nltk.parse.pchart.ProbabilisticLeafEdge",
  "nltk.parse.pchart.ProbabilisticTreeEdge",
  "nltk.parse.pchart.RandomChartParser",
  "nltk.parse.pchart.SingleEdgeProbabilisticFundamentalRule",
  "nltk.parse.pchart.UnsortedChartParser",
  "nltk.parse.pchart.demo",
  "nltk.parse.projectivedependencyparser.ChartCell",
  "nltk.parse.projectivedependencyparser.DependencySpan",
  "nltk.parse.projectivedependencyparser.ProbabilisticProjectiveDependencyParser",
  "nltk.parse.projectivedependencyparser.ProjectiveDependencyParser",
  "nltk.parse.projectivedependencyparser.demo",
  "nltk.parse.projectivedependencyparser.projective_prob_parse_demo",
  "nltk.parse.projectivedependencyparser.projective_rule_parse_demo",
  "nltk.parse.recursivedescent.RecursiveDescentParser",
  "nltk.parse.recursivedescent.SteppingRecursiveDescentParser",
  "nltk.parse.recursivedescent.demo",
  "nltk.parse.shiftreduce.ShiftReduceParser",
  "nltk.parse.shiftreduce.SteppingShiftReduceParser",
  "nltk.parse.shiftreduce.demo",
  "nltk.parse.stanford.GenericStanfordParser",
  "nltk.parse.stanford.StanfordDependencyParser",
  "nltk.parse.stanford.StanfordNeuralDependencyParser",
  "nltk.parse.stanford.StanfordParser",
  "nltk.parse.stanford._stanford_url",
  "nltk.parse.transitionparser.Configuration",
  "nltk.parse.transitionparser.Transition",
  "nltk.parse.util.extract_test_sentences",
  "nltk.parse.util.load_parser",
  "nltk.parse.util.taggedsent_to_conll",
  "nltk.parse.util.taggedsents_to_conll",
  "nltk.parse.viterbi.demo",
  "nltk.parse.viterbi.time",
  "nltk.pos_tag",
  "nltk.probability.ConditionalFreqDist",
  "nltk.probability.ConditionalProbDist",
  "nltk.probability.ConditionalProbDistI",
  "nltk.probability.CrossValidationProbDist",
  "nltk.probability.DictionaryConditionalProbDist",
  "nltk.probability.DictionaryProbDist",
  "nltk.probability.ELEProbDist",
  "nltk.probability.FreqDist",
  "nltk.probability.HeldoutProbDist",
  "nltk.probability.ImmutableProbabilisticMixIn",
  "nltk.probability.ImmutableProbabilisticMixIn.__init__",
  "nltk.probability.LidstoneProbDist",
  "nltk.probability.MLEProbDist",
  "nltk.probability.MutableProbDist",
  "nltk.probability.ProbDistI",
  "nltk.probability.ProbabilisticMixIn",
  "nltk.probability.ProbabilisticMixIn.__init__",
  "nltk.probability.RandomProbDist",
  "nltk.probability.SimpleGoodTuringProbDist",
  "nltk.probability._ADD_LOGS_MAX_DIFF",
  "nltk.probability._NINF",
  "nltk.probability._create_rand_fdist",
  "nltk.probability._create_sum_pdist",
  "nltk.probability._get_kwarg",
  "nltk.probability.add_logs",
  "nltk.probability.entropy",
  "nltk.probability.sum_logs",
  "nltk.sem.Expression.fromstring",
  "nltk.sem.Valuation",
  "nltk.sem.boxer.AbstractBoxerDrs",
  "nltk.sem.boxer.Boxer",
  "nltk.sem.boxer.BoxerCard",
  "nltk.sem.boxer.BoxerDrs",
  "nltk.sem.boxer.BoxerEq",
  "nltk.sem.boxer.BoxerIndexed",
  "nltk.sem.boxer.BoxerNamed",
  "nltk.sem.boxer.BoxerNot",
  "nltk.sem.boxer.BoxerOr",
  "nltk.sem.boxer.BoxerOutputDrsParser",
  "nltk.sem.boxer.BoxerPred",
  "nltk.sem.boxer.BoxerProp",
  "nltk.sem.boxer.BoxerRel",
  "nltk.sem.boxer.BoxerWhq",
  "nltk.sem.boxer.NltkDrtBoxerDrsInterpreter",
  "nltk.sem.boxer.drs",
  "nltk.sem.boxer.interpreter",
  "nltk.sem.boxer.opts",
  "nltk.sem.chat80.Concept",
  "nltk.sem.chat80._str2records",
  "nltk.sem.chat80.binary_concept",
  "nltk.sem.chat80.borders",
  "nltk.sem.chat80.circle_of_lat",
  "nltk.sem.chat80.circle_of_long",
  "nltk.sem.chat80.city",
  "nltk.sem.chat80.clause2concepts",
  "nltk.sem.chat80.concepts",
  "nltk.sem.chat80.contains",
  "nltk.sem.chat80.continent",
  "nltk.sem.chat80.country",
  "nltk.sem.chat80.item_metadata",
  "nltk.sem.chat80.items",
  "nltk.sem.chat80.label_indivs",
  "nltk.sem.chat80.main",
  "nltk.sem.chat80.make_lex",
  "nltk.sem.chat80.make_valuation",
  "nltk.sem.chat80.not_unary",
  "nltk.sem.chat80.ocean",
  "nltk.sem.chat80.process_bundle",
  "nltk.sem.chat80.region",
  "nltk.sem.chat80.rels",
  "nltk.sem.chat80.sea",
  "nltk.sem.chat80.sql_demo",
  "nltk.sem.chat80.sql_query",
  "nltk.sem.chat80.unary_concept",
  "nltk.sem.chat80.val_dump",
  "nltk.sem.chat80.val_load",
  "nltk.sem.cooper_storage.CooperStore",
  "nltk.sem.cooper_storage.demo",
  "nltk.sem.cooper_storage.parse_with_bindops",
  "nltk.sem.drt.AnaphoraResolutionException",
  "nltk.sem.drt.DRS",
  "nltk.sem.drt.DrsDrawer",
  "nltk.sem.drt.DrtAbstractVariableExpression",
  "nltk.sem.drt.DrtApplicationExpression",
  "nltk.sem.drt.DrtBinaryExpression",
  "nltk.sem.drt.DrtBooleanExpression",
  "nltk.sem.drt.DrtConcatenation",
  "nltk.sem.drt.DrtConstantExpression",
  "nltk.sem.drt.DrtEqualityExpression",
  "nltk.sem.drt.DrtEventVariableExpression",
  "nltk.sem.drt.DrtExpression",
  "nltk.sem.drt.DrtExpression.fromstring",
  "nltk.sem.drt.DrtFunctionVariableExpression",
  "nltk.sem.drt.DrtIndividualVariableExpression",
  "nltk.sem.drt.DrtLambdaExpression",
  "nltk.sem.drt.DrtNegatedExpression",
  "nltk.sem.drt.DrtOrExpression",
  "nltk.sem.drt.DrtParser",
  "nltk.sem.drt.DrtParser.__init__",
  "nltk.sem.drt.DrtParser.parse",
  "nltk.sem.drt.DrtProposition",
  "nltk.sem.drt.DrtTokens",
  "nltk.sem.drt.DrtTokens.CLOSE",
  "nltk.sem.drt.DrtTokens.CLOSE_BRACKET",
  "nltk.sem.drt.DrtTokens.COMMA",
  "nltk.sem.drt.DrtTokens.OPEN",
  "nltk.sem.drt.DrtTokens.OPEN_BRACKET",
  "nltk.sem.drt.DrtVariableExpression",
  "nltk.sem.drt.PossibleAntecedents",
  "nltk.sem.drt._pad_vertically",
  "nltk.sem.drt.demo",
  "nltk.sem.drt.resolve_anaphora",
  "nltk.sem.drt_glue_demo.DrsWidget",
  "nltk.sem.drt_glue_demo.DrtGlueDemo",
  "nltk.sem.drt_glue_demo.demo",
  "nltk.sem.evaluate.Assignment",
  "nltk.sem.evaluate.Error",
  "nltk.sem.evaluate.Model",
  "nltk.sem.evaluate.Undefined",
  "nltk.sem.evaluate.Valuation",
  "nltk.sem.evaluate._ELEMENT_SPLIT_RE",
  "nltk.sem.evaluate._TUPLES_RE",
  "nltk.sem.evaluate._VAL_SPLIT_RE",
  "nltk.sem.evaluate._read_valuation_line",
  "nltk.sem.evaluate.demo",
  "nltk.sem.evaluate.foldemo",
  "nltk.sem.evaluate.folmodel",
  "nltk.sem.evaluate.mult",
  "nltk.sem.evaluate.propdemo",
  "nltk.sem.evaluate.read_valuation",
  "nltk.sem.evaluate.satdemo",
  "nltk.sem.evaluate.set2rel",
  "nltk.sem.evaluate.trace",
  "nltk.sem.glue.DrtGlue",
  "nltk.sem.glue.DrtGlueDict",
  "nltk.sem.glue.DrtGlueFormula",
  "nltk.sem.glue.Glue",
  "nltk.sem.glue.GlueDict",
  "nltk.sem.glue.GlueFormula",
  "nltk.sem.glue.OPTIONAL_RELATIONSHIPS",
  "nltk.sem.glue.SPEC_SEMTYPES",
  "nltk.sem.glue.demo",
  "nltk.sem.hole.Constants",
  "nltk.sem.hole.Constraint",
  "nltk.sem.hole.HoleSemantics",
  "nltk.sem.hole.hole_readings",
  "nltk.sem.is_rel",
  "nltk.sem.lfg.FStructure",
  "nltk.sem.lfg.demo_read_depgraph",
  "nltk.sem.linearlogic.ApplicationExpression",
  "nltk.sem.linearlogic.AtomicExpression",
  "nltk.sem.linearlogic.BindingDict",
  "nltk.sem.linearlogic.ConstantExpression",
  "nltk.sem.linearlogic.Expression",
  "nltk.sem.linearlogic.ImpExpression",
  "nltk.sem.linearlogic.LinearLogicApplicationException",
  "nltk.sem.linearlogic.LinearLogicParser",
  "nltk.sem.linearlogic.Tokens",
  "nltk.sem.linearlogic.UnificationException",
  "nltk.sem.linearlogic.VariableBindingException",
  "nltk.sem.linearlogic.VariableExpression",
  "nltk.sem.linearlogic.demo",
  "nltk.sem.logic.ANY_TYPE",
  "nltk.sem.logic.APP",
  "nltk.sem.logic.AbstractVariableExpression",
  "nltk.sem.logic.AllExpression",
  "nltk.sem.logic.AndExpression",
  "nltk.sem.logic.AnyType",
  "nltk.sem.logic.ApplicationExpression",
  "nltk.sem.logic.BasicType",
  "nltk.sem.logic.BinaryExpression",
  "nltk.sem.logic.BooleanExpression",
  "nltk.sem.logic.ComplexType",
  "nltk.sem.logic.ConstantExpression",
  "nltk.sem.logic.ENTITY_TYPE",
  "nltk.sem.logic.EVENT_TYPE",
  "nltk.sem.logic.EntityType",
  "nltk.sem.logic.EqualityExpression",
  "nltk.sem.logic.EventType",
  "nltk.sem.logic.EventVariableExpression",
  "nltk.sem.logic.ExistsExpression",
  "nltk.sem.logic.ExpectedMoreTokensException",
  "nltk.sem.logic.Expression",
  "nltk.sem.logic.Expression.__hash__",
  "nltk.sem.logic.Expression.fromstring",
  "nltk.sem.logic.FunctionVariableExpression",
  "nltk.sem.logic.IffExpression",
  "nltk.sem.logic.IllegalTypeException",
  "nltk.sem.logic.ImpExpression",
  "nltk.sem.logic.InconsistentTypeHierarchyException",
  "nltk.sem.logic.IndividualVariableExpression",
  "nltk.sem.logic.LambdaExpression",
  "nltk.sem.logic.LogicParser",
  "nltk.sem.logic.LogicParser.__init__",
  "nltk.sem.logic.LogicalExpressionException",
  "nltk.sem.logic.NegatedExpression",
  "nltk.sem.logic.OrExpression",
  "nltk.sem.logic.QuantifiedExpression",
  "nltk.sem.logic.SubstituteBindingsI",
  "nltk.sem.logic.TRUTH_TYPE",
  "nltk.sem.logic.Tokens",
  "nltk.sem.logic.Tokens.CLOSE",
  "nltk.sem.logic.Tokens.NEQ_LIST",
  "nltk.sem.logic.Tokens.OPEN",
  "nltk.sem.logic.Tokens.SYMBOLS",
  "nltk.sem.logic.Tokens.TOKENS",
  "nltk.sem.logic.TruthValueType",
  "nltk.sem.logic.Type",
  "nltk.sem.logic.TypeException",
  "nltk.sem.logic.TypeResolutionException",
  "nltk.sem.logic.UnexpectedTokenException",
  "nltk.sem.logic.Variable",
  "nltk.sem.logic.VariableBinderExpression",
  "nltk.sem.logic.VariableExpression",
  "nltk.sem.logic._counter",
  "nltk.sem.logic._counter._value",
  "nltk.sem.logic.demo",
  "nltk.sem.logic.demoException",
  "nltk.sem.logic.is_eventvar",
  "nltk.sem.logic.is_funcvar",
  "nltk.sem.logic.is_indvar",
  "nltk.sem.logic.operator.or_",
  "nltk.sem.logic.read_type",
  "nltk.sem.logic.skolem_function",
  "nltk.sem.logic.unique_variable",
  "nltk.sem.read_logic",
  "nltk.sem.read_valuation",
  "nltk.sem.relextract.NE_CLASSES",
  "nltk.sem.relextract._expand",
  "nltk.sem.relextract._join",
  "nltk.sem.relextract.class_abbrev",
  "nltk.sem.relextract.clause",
  "nltk.sem.relextract.conllesp",
  "nltk.sem.relextract.conllned",
  "nltk.sem.relextract.descape_entity",
  "nltk.sem.relextract.extract_rels",
  "nltk.sem.relextract.ieer_headlines",
  "nltk.sem.relextract.in_demo",
  "nltk.sem.relextract.list2sym",
  "nltk.sem.relextract.long2short",
  "nltk.sem.relextract.ne_chunked",
  "nltk.sem.relextract.roles_demo",
  "nltk.sem.relextract.rtuple",
  "nltk.sem.relextract.semi_rel2reldict",
  "nltk.sem.relextract.short2long",
  "nltk.sem.relextract.tree2semi_rel",
  "nltk.sem.root_semrep",
  "nltk.sem.skolemize",
  "nltk.sem.skolemize.skolemize",
  "nltk.sem.skolemize.to_cnf",
  "nltk.sem.util.demo",
  "nltk.sem.util.demo_legacy_grammar",
  "nltk.sem.util.demo_model0",
  "nltk.sem.util.evaluate_sents",
  "nltk.sem.util.interpret_sents",
  "nltk.sem.util.parse_sents",
  "nltk.sem.util.read_sents",
  "nltk.sem.util.root_semrep",
  "nltk.sentiment.SentimentAnalyzer",
  "nltk.sentiment.SentimentIntensityAnalyzer",
  "nltk.sentiment.util.CLAUSE_PUNCT",
  "nltk.sentiment.util.CLAUSE_PUNCT_RE",
  "nltk.sentiment.util.HAPPY",
  "nltk.sentiment.util.NEGATION",
  "nltk.sentiment.util.NEGATION_RE",
  "nltk.sentiment.util.SAD",
  "nltk.sentiment.util._show_plot",
  "nltk.sentiment.util.demo_subjectivity",
  "nltk.sentiment.util.demo_tweets",
  "nltk.sentiment.util.extract_bigram_feats",
  "nltk.sentiment.util.extract_fields",
  "nltk.sentiment.util.extract_unigram_feats",
  "nltk.sentiment.util.json2csv_preprocess",
  "nltk.sentiment.util.mark_negation",
  "nltk.sentiment.util.naive_bayes",
  "nltk.sentiment.util.outf_writer_compat",
  "nltk.sentiment.util.output_markdown",
  "nltk.sentiment.util.parse_tweets_set",
  "nltk.sentiment.util.save_file",
  "nltk.sentiment.util.split_train_test",
  "nltk.sentiment.vader.BOOSTER_DICT",
  "nltk.sentiment.vader.B_DECR",
  "nltk.sentiment.vader.B_INCR",
  "nltk.sentiment.vader.C_INCR",
  "nltk.sentiment.vader.NEGATE",
  "nltk.sentiment.vader.N_SCALAR",
  "nltk.sentiment.vader.PUNC_LIST",
  "nltk.sentiment.vader.REGEX_REMOVE_PUNCTUATION",
  "nltk.sentiment.vader.SPECIAL_CASE_IDIOMS",
  "nltk.sentiment.vader.SentiText",
  "nltk.sentiment.vader.allcap_differential",
  "nltk.sentiment.vader.negated",
  "nltk.sentiment.vader.normalize",
  "nltk.sentiment.vader.scalar_inc_dec",
  "nltk.stem.PorterStemmer",
  "nltk.stem.api.StemmerI",
  "nltk.stem.cistem.Cistem",
  "nltk.stem.porter.PorterStemmer",
  "nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS",
  "nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM",
  "nltk.stem.porter.PorterStemmer.__init__",
  "nltk.stem.snowball.SnowballStemmer",
  "nltk.stem.snowball._LanguageSpecificStemmer",
  "nltk.stem.snowball._ScandinavianStemmer",
  "nltk.stem.snowball._StandardStemmer",
  "nltk.stem.util.prefix_replace",
  "nltk.stem.util.suffix_replace",
  "nltk.subprocess",
  "nltk.tag.BigramTagger",
  "nltk.tag.BrillTagger",
  "nltk.tag.BrillTaggerTrainer",
  "nltk.tag.ClassifierBasedTagger",
  "nltk.tag.ClassifierBasedTagger.__init__",
  "nltk.tag.RUS_PICKLE",
  "nltk.tag.RegexpTagger",
  "nltk.tag.SennaChunkTagger",
  "nltk.tag.SennaNERTagger",
  "nltk.tag.SennaTagger",
  "nltk.tag.TaggerI",
  "nltk.tag.TrigramTagger",
  "nltk.tag.UnigramTagger",
  "nltk.tag._get_tagger",
  "nltk.tag._pos_tag",
  "nltk.tag.api.FeaturesetTaggerI",
  "nltk.tag.api.TaggerI",
  "nltk.tag.brill.Pos",
  "nltk.tag.brill.Pos.expand",
  "nltk.tag.brill.Template",
  "nltk.tag.brill.Word",
  "nltk.tag.brill.Word.expand",
  "nltk.tag.brill.brill24",
  "nltk.tag.brill.nltkdemo18",
  "nltk.tag.brill_trainer.BrillTaggerTrainer",
  "nltk.tag.hmm.HiddenMarkovModelTagger",
  "nltk.tag.hmm.HiddenMarkovModelTrainer",
  "nltk.tag.hmm._TAG",
  "nltk.tag.hmm._TEXT",
  "nltk.tag.hmm._create_hmm_tagger",
  "nltk.tag.hmm._identity",
  "nltk.tag.hmm._log_add",
  "nltk.tag.hmm._market_hmm_example",
  "nltk.tag.hmm._ninf_array",
  "nltk.tag.hmm._untag",
  "nltk.tag.hmm.load_pos",
  "nltk.tag.hmm.logsumexp2",
  "nltk.tag.hunpos.HunposTagger",
  "nltk.tag.hunpos._hunpos_charset",
  "nltk.tag.hunpos._hunpos_url",
  "nltk.tag.map_tag",
  "nltk.tag.mapping._MAPPINGS",
  "nltk.tag.mapping._UNIVERSAL_DATA",
  "nltk.tag.mapping._UNIVERSAL_TAGS",
  "nltk.tag.mapping._load_universal_map",
  "nltk.tag.mapping.map_tag",
  "nltk.tag.mapping.tagset_mapping",
  "nltk.tag.perceptron.AveragedPerceptron",
  "nltk.tag.perceptron.PICKLE",
  "nltk.tag.perceptron.PerceptronTagger",
  "nltk.tag.perceptron._load_data_conll_format",
  "nltk.tag.perceptron._pc",
  "nltk.tag.pos_tag",
  "nltk.tag.senna.SennaChunkTagger",
  "nltk.tag.senna.SennaNERTagger",
  "nltk.tag.senna.SennaTagger",
  "nltk.tag.sequential.ClassifierBasedTagger",
  "nltk.tag.sequential.ContextTagger",
  "nltk.tag.sequential.NgramTagger",
  "nltk.tag.sequential.SequentialBackoffTagger",
  "nltk.tag.stanford.StanfordNERTagger",
  "nltk.tag.stanford.StanfordPOSTagger",
  "nltk.tag.stanford.StanfordTagger",
  "nltk.tag.stanford._stanford_url",
  "nltk.tag.str2tuple",
  "nltk.tag.tnt.TnT",
  "nltk.tag.tuple2str",
  "nltk.tag.untag",
  "nltk.tag.util.str2tuple",
  "nltk.tag.util.untag",
  "nltk.tbl.Feature",
  "nltk.tbl.Template",
  "nltk.tbl.Template.ALLTEMPLATES",
  "nltk.tbl.Template.expand",
  "nltk.tbl.demo",
  "nltk.tbl.demo._demo_plot",
  "nltk.tbl.demo._demo_prepare_data",
  "nltk.tbl.demo.corpus_size",
  "nltk.tbl.demo.demo_learning_curve",
  "nltk.tbl.demo.postag",
  "nltk.tbl.error_list",
  "nltk.tbl.feature.Feature",
  "nltk.tbl.rule.Rule",
  "nltk.tbl.rule.TagRule",
  "nltk.tbl.template.BrillTemplateI",
  "nltk.test.doctest_nose_plugin.ALLOW_UNICODE",
  "nltk.test.doctest_nose_plugin.DoctestPluginHelper",
  "nltk.test.doctest_nose_plugin._UnicodeOutputChecker",
  "nltk.test.doctest_nose_plugin._checker",
  "nltk.test.runtests.NLTK_ROOT",
  "nltk.test.runtests.NLTK_TEST_DIR",
  "nltk.test.runtests.NltkPluginManager",
  "nltk.test.runtests.args",
  "nltk.test.runtests.arguments",
  "nltk.test.runtests.manager",
  "nltk.test.runtests.rednose_available",
  "nltk.test.unit.lm.test_models.ParametrizeTestsMeta",
  "nltk.test.unit.lm.test_models._prepare_test_data",
  "nltk.test.unit.test_classify.RESULTS",
  "nltk.test.unit.test_classify.TEST",
  "nltk.test.unit.test_classify.TRAIN",
  "nltk.test.unit.test_classify.assert_classifier_correct",
  "nltk.test.unit.test_collocations._EPSILON",
  "nltk.test.unit.test_collocations.close_enough",
  "nltk.test.unit.test_concordance.TestConcordance",
  "nltk.test.unit.test_concordance.stdout_redirect",
  "nltk.test.unit.test_hmm._wikipedia_example_hmm",
  "nltk.test.unit.test_json2csv_corpus.are_files_identical",
  "nltk.test.unit.test_rte_classify.expected_from_rte_feature_extration",
  "nltk.test.unit.test_seekable_unicode_stream_reader.ENCODINGS",
  "nltk.test.unit.test_seekable_unicode_stream_reader.LARGE_STRING",
  "nltk.test.unit.test_seekable_unicode_stream_reader.STRINGS",
  "nltk.test.unit.test_seekable_unicode_stream_reader.check_reader",
  "nltk.test.unit.test_senna.SENNA_EXECUTABLE_PATH",
  "nltk.test.unit.test_senna.senna_is_installed",
  "nltk.test.unit.test_wordnet.L",
  "nltk.test.unit.test_wordnet.S",
  "nltk.test.unit.translate.test_ibm_model.TestIBMModel",
  "nltk.test.unit.translate.test_stack_decoder.TestStackDecoder",
  "nltk.test.unit.utils.skip",
  "nltk.test.unit.utils.skipIf",
  "nltk.text.ConcordanceIndex",
  "nltk.text.ConcordanceLine",
  "nltk.text.ContextIndex",
  "nltk.text.Text",
  "nltk.text.TokenSearcher",
  "nltk.text.demo",
  "nltk.tgrep.TgrepException",
  "nltk.tgrep._after",
  "nltk.tgrep._before",
  "nltk.tgrep._build_tgrep_parser",
  "nltk.tgrep._descendants",
  "nltk.tgrep._immediately_after",
  "nltk.tgrep._immediately_before",
  "nltk.tgrep._istree",
  "nltk.tgrep._leftmost_descendants",
  "nltk.tgrep._macro_defn_action",
  "nltk.tgrep._rightmost_descendants",
  "nltk.tgrep._tgrep_bind_node_label_action",
  "nltk.tgrep._tgrep_conjunction_action",
  "nltk.tgrep._tgrep_exprs_action",
  "nltk.tgrep._tgrep_macro_use_action",
  "nltk.tgrep._tgrep_nltk_tree_pos_action",
  "nltk.tgrep._tgrep_node_action",
  "nltk.tgrep._tgrep_node_label_pred_use_action",
  "nltk.tgrep._tgrep_node_label_use_action",
  "nltk.tgrep._tgrep_node_literal_value",
  "nltk.tgrep._tgrep_parens_action",
  "nltk.tgrep._tgrep_rel_disjunction_action",
  "nltk.tgrep._tgrep_relation_action",
  "nltk.tgrep._tgrep_segmented_pattern_action",
  "nltk.tgrep._unique_descendants",
  "nltk.tgrep.ancestors",
  "nltk.tgrep.tgrep_compile",
  "nltk.tgrep.tgrep_nodes",
  "nltk.tgrep.tgrep_positions",
  "nltk.tgrep.tgrep_tokenize",
  "nltk.tgrep.treepositions_no_leaves",
  "nltk.tgrep.unique_ancestors",
  "nltk.tokenize.RegexpTokenizer",
  "nltk.tokenize.StanfordSegmenter",
  "nltk.tokenize.SyllableTokenizer",
  "nltk.tokenize.TreebankWordTokenizer",
  "nltk.tokenize.TweetTokenizer",
  "nltk.tokenize.WhitespaceTokenizer",
  "nltk.tokenize.WordPunctTokenizer",
  "nltk.tokenize._treebank_word_tokenizer",
  "nltk.tokenize.api.StringTokenizer",
  "nltk.tokenize.api.TokenizerI",
  "nltk.tokenize.casual.EMOTICONS",
  "nltk.tokenize.casual.EMOTICON_RE",
  "nltk.tokenize.casual.EMOTICON_RE.findall",
  "nltk.tokenize.casual.EMOTICON_RE.sub",
  "nltk.tokenize.casual.ENT_RE",
  "nltk.tokenize.casual.HANG_RE",
  "nltk.tokenize.casual.REGEXPS",
  "nltk.tokenize.casual.TweetTokenizer",
  "nltk.tokenize.casual.URLS",
  "nltk.tokenize.casual.WORD_RE",
  "nltk.tokenize.casual._replace_html_entities",
  "nltk.tokenize.casual._str_to_unicode",
  "nltk.tokenize.casual.reduce_lengthening",
  "nltk.tokenize.casual.remove_handles",
  "nltk.tokenize.improved_close_quote_regex",
  "nltk.tokenize.improved_open_quote_regex",
  "nltk.tokenize.improved_open_single_quote_regex",
  "nltk.tokenize.improved_punct_regex",
  "nltk.tokenize.line_tokenize",
  "nltk.tokenize.punkt.DEBUG_DECISION_FMT",
  "nltk.tokenize.punkt.PunktBaseClass",
  "nltk.tokenize.punkt.PunktLanguageVars",
  "nltk.tokenize.punkt.PunktParameters",
  "nltk.tokenize.punkt.PunktSentenceTokenizer",
  "nltk.tokenize.punkt.PunktToken",
  "nltk.tokenize.punkt.PunktTrainer",
  "nltk.tokenize.punkt.REASON_ABBR_WITH_ORTHOGRAPHIC_HEURISTIC",
  "nltk.tokenize.punkt.REASON_ABBR_WITH_SENTENCE_STARTER",
  "nltk.tokenize.punkt.REASON_DEFAULT_DECISION",
  "nltk.tokenize.punkt.REASON_INITIAL_WITH_ORTHOGRAPHIC_HEURISTIC",
  "nltk.tokenize.punkt.REASON_INITIAL_WITH_SPECIAL_ORTHOGRAPHIC_HEURISTIC",
  "nltk.tokenize.punkt.REASON_KNOWN_COLLOCATION",
  "nltk.tokenize.punkt.REASON_NUMBER_WITH_ORTHOGRAPHIC_HEURISTIC",
  "nltk.tokenize.punkt._ORTHO_BEG_LC",
  "nltk.tokenize.punkt._ORTHO_BEG_UC",
  "nltk.tokenize.punkt._ORTHO_LC",
  "nltk.tokenize.punkt._ORTHO_MAP",
  "nltk.tokenize.punkt._ORTHO_MID_LC",
  "nltk.tokenize.punkt._ORTHO_MID_UC",
  "nltk.tokenize.punkt._ORTHO_UC",
  "nltk.tokenize.punkt._ORTHO_UNK_LC",
  "nltk.tokenize.punkt._ORTHO_UNK_UC",
  "nltk.tokenize.punkt._pair_iter",
  "nltk.tokenize.punkt._re_non_punct",
  "nltk.tokenize.regexp.BlanklineTokenizer",
  "nltk.tokenize.regexp.RegexpTokenizer",
  "nltk.tokenize.regexp.WhitespaceTokenizer",
  "nltk.tokenize.regexp.WordPunctTokenizer",
  "nltk.tokenize.sent_tokenize",
  "nltk.tokenize.sexpr.SExprTokenizer",
  "nltk.tokenize.simple.LineTokenizer",
  "nltk.tokenize.stanford.StanfordTokenizer",
  "nltk.tokenize.stanford._stanford_url",
  "nltk.tokenize.stanford_segmenter.StanfordSegmenter",
  "nltk.tokenize.stanford_segmenter._stanford_url",
  "nltk.tokenize.texttiling.DEFAULT_SMOOTHING",
  "nltk.tokenize.texttiling.TextTilingTokenizer",
  "nltk.tokenize.texttiling.TokenSequence",
  "nltk.tokenize.texttiling.TokenTableField",
  "nltk.tokenize.texttiling.smooth",
  "nltk.tokenize.treebank.MacIntyreContractions",
  "nltk.tokenize.treebank.TreebankWordTokenizer",
  "nltk.tokenize.util.align_tokens",
  "nltk.tokenize.util.regexp_span_tokenize",
  "nltk.tokenize.util.string_span_tokenize",
  "nltk.tokenize.util.xml_unescape",
  "nltk.tokenize.word_tokenize",
  "nltk.tokenize.wordpunct_tokenize",
  "nltk.toolbox.StandardFormat",
  "nltk.toolbox.ToolboxData",
  "nltk.toolbox.ToolboxSettings",
  "nltk.toolbox._is_value",
  "nltk.toolbox._sort_fields",
  "nltk.toolbox._to_settings_string",
  "nltk.toolbox.to_settings_string",
  "nltk.translate.AlignedSent",
  "nltk.translate.Alignment",
  "nltk.translate.Alignment.fromstring",
  "nltk.translate.IBMModel",
  "nltk.translate.IBMModel.MIN_PROB",
  "nltk.translate.IBMModel1",
  "nltk.translate.IBMModel2",
  "nltk.translate.IBMModel3",
  "nltk.translate.IBMModel4",
  "nltk.translate.IBMModel4.model4_prob_t_a_given_s",
  "nltk.translate.IBMModel5",
  "nltk.translate.IBMModel5.MIN_SCORE_FACTOR",
  "nltk.translate.PhraseTable",
  "nltk.translate.StackDecoder",
  "nltk.translate.StackDecoder.valid_phrases",
  "nltk.translate.api.AlignedSent",
  "nltk.translate.api.Alignment",
  "nltk.translate.api.PhraseTableEntry",
  "nltk.translate.api._check_alignment",
  "nltk.translate.api._giza2pair",
  "nltk.translate.bleu_score.SmoothingFunction",
  "nltk.translate.bleu_score.brevity_penalty",
  "nltk.translate.bleu_score.closest_ref_length",
  "nltk.translate.bleu_score.corpus_bleu",
  "nltk.translate.bleu_score.modified_precision",
  "nltk.translate.bleu_score.sentence_bleu",
  "nltk.translate.chrf_score._preprocess",
  "nltk.translate.chrf_score.chrf_precision_recall_fscore_support",
  "nltk.translate.chrf_score.corpus_chrf",
  "nltk.translate.gale_church.LOG2",
  "nltk.translate.gale_church.LanguageIndependent",
  "nltk.translate.gale_church.align_blocks",
  "nltk.translate.gale_church.align_log_prob",
  "nltk.translate.gale_church.erfcc",
  "nltk.translate.gale_church.norm_cdf",
  "nltk.translate.gale_church.split_at",
  "nltk.translate.gale_church.trace",
  "nltk.translate.gdfa.grow_diag_final_and",
  "nltk.translate.gleu_score.corpus_gleu",
  "nltk.translate.ibm1.IBMModel1",
  "nltk.translate.ibm2.IBMModel2",
  "nltk.translate.ibm2.Model2Counts",
  "nltk.translate.ibm3.IBMModel3",
  "nltk.translate.ibm3.Model3Counts",
  "nltk.translate.ibm4.IBMModel4",
  "nltk.translate.ibm4.Model4Counts",
  "nltk.translate.ibm5.IBMModel5",
  "nltk.translate.ibm5.Model5Counts",
  "nltk.translate.ibm5.Slots",
  "nltk.translate.ibm_model.AlignmentInfo",
  "nltk.translate.ibm_model.Counts",
  "nltk.translate.ibm_model.IBMModel",
  "nltk.translate.ibm_model.longest_target_sentence_length",
  "nltk.translate.meteor_score._count_chunks",
  "nltk.translate.meteor_score._enum_allign_words",
  "nltk.translate.meteor_score._enum_stem_match",
  "nltk.translate.meteor_score._enum_wordnetsyn_match",
  "nltk.translate.meteor_score._generate_enums",
  "nltk.translate.meteor_score._match_enums",
  "nltk.translate.meteor_score.single_meteor_score",
  "nltk.translate.nist_score.corpus_nist",
  "nltk.translate.nist_score.nist_length_penalty",
  "nltk.translate.phrase_based.extract",
  "nltk.translate.ribes_score.find_increasing_sequences",
  "nltk.translate.ribes_score.kendall_tau",
  "nltk.translate.ribes_score.position_of_ngram",
  "nltk.translate.ribes_score.sentence_ribes",
  "nltk.translate.ribes_score.word_rank_alignment",
  "nltk.translate.stack_decoder.StackDecoder",
  "nltk.translate.stack_decoder._Hypothesis",
  "nltk.translate.stack_decoder._Stack",
  "nltk.tree.AbstractParentedTree",
  "nltk.tree.ImmutableProbabilisticTree",
  "nltk.tree.ImmutableTree",
  "nltk.tree.ImmutableTree.convert",
  "nltk.tree.MultiParentedTree",
  "nltk.tree.ParentedTree",
  "nltk.tree.ParentedTree.fromstring",
  "nltk.tree.ProbabilisticTree",
  "nltk.tree.Tree",
  "nltk.tree.Tree.fromstring",
  "nltk.tree._child_names",
  "nltk.tree.sinica_parse",
  "nltk.treeprettyprinter.ANSICOLOR",
  "nltk.treeprettyprinter.TreePrettyPrinter",
  "nltk.treeprettyprinter.test",
  "nltk.treetransforms.chomsky_normal_form",
  "nltk.treetransforms.collapse_unary",
  "nltk.treetransforms.un_chomsky_normal_form",
  "nltk.twitter.Authenticate",
  "nltk.twitter.Query",
  "nltk.twitter.Streamer",
  "nltk.twitter.TweetViewer",
  "nltk.twitter.TweetWriter",
  "nltk.twitter.Twitter",
  "nltk.twitter.api.BasicTweetHandler",
  "nltk.twitter.api.LOCAL",
  "nltk.twitter.api.LocalTimezoneOffsetWithUTC",
  "nltk.twitter.api.TweetHandlerI",
  "nltk.twitter.api.TweetHandlerI.__init__",
  "nltk.twitter.api.TweetHandlerI.do_continue",
  "nltk.twitter.common.HIER_SEPARATOR",
  "nltk.twitter.common._add_field_to_out",
  "nltk.twitter.common._get_entity_recursive",
  "nltk.twitter.common._get_key_value_composed",
  "nltk.twitter.common._is_composed_key",
  "nltk.twitter.common._write_to_file",
  "nltk.twitter.common.extract_fields",
  "nltk.twitter.common.get_header_field_list",
  "nltk.twitter.common.json",
  "nltk.twitter.common.json2csv",
  "nltk.twitter.common.json2csv_entities",
  "nltk.twitter.common.outf_writer_compat",
  "nltk.twitter.credsfromfile",
  "nltk.twitter.twitter_demo.ALL",
  "nltk.twitter.twitter_demo.DEMOS",
  "nltk.twitter.twitter_demo.SPACER",
  "nltk.twitter.twitter_demo.corpusreader_demo",
  "nltk.twitter.twitter_demo.expand_tweetids_demo",
  "nltk.twitter.twitter_demo.followtoscreen_demo",
  "nltk.twitter.twitter_demo.limit_by_time_demo",
  "nltk.twitter.twitter_demo.lookup_by_userid_demo",
  "nltk.twitter.twitter_demo.sampletoscreen_demo",
  "nltk.twitter.twitter_demo.search_demo",
  "nltk.twitter.twitter_demo.setup",
  "nltk.twitter.twitter_demo.streamtofile_demo",
  "nltk.twitter.twitter_demo.tracktoscreen_demo",
  "nltk.twitter.twitter_demo.tweets_by_user_demo",
  "nltk.twitter.twitter_demo.twitterclass_demo",
  "nltk.twitter.twitter_demo.verbose",
  "nltk.twitter.twitter_demo.yesterday",
  "nltk.twitter.twitterclient.Query",
  "nltk.twitter.twitterclient.Streamer",
  "nltk.twitter.twitterclient.TweetViewer",
  "nltk.twitter.twitterclient.TweetWriter",
  "nltk.twitter.util.Authenticate",
  "nltk.twitter.util.credsfromfile",
  "nltk.twitter.util.guess_path",
  "nltk.util.AbstractLazySequence",
  "nltk.util.Index",
  "nltk.util.LazyConcatenation",
  "nltk.util.LazyIteratorList",
  "nltk.util.LazyMap",
  "nltk.util.LazySubsequence",
  "nltk.util.OrderedDict",
  "nltk.util.Trie",
  "nltk.util.Trie.LEAF",
  "nltk.util.binary_search_file",
  "nltk.util.breadth_first",
  "nltk.util.choose",
  "nltk.util.everygrams",
  "nltk.util.flatten",
  "nltk.util.in_idle",
  "nltk.util.invert_graph",
  "nltk.util.ngrams",
  "nltk.util.pad_sequence",
  "nltk.util.py25",
  "nltk.util.py26",
  "nltk.util.slice_bounds",
  "nltk.util.tokenwrap",
  "nltk.util.transitive_closure",
  "nltk.util.trigrams",
  "nltk.util.unique_list",
  "nltk.version_file",
  "nltk.word_tokenize",
  "node_pred",
  "nonempty_powerset",
  "norm.logsf",
  "nose.SkipTest",
  "nose.main",
  "nose.plugins.base.Plugin.configure",
  "nose.plugins.builtin.plugins",
  "nose.plugins.doctests.DocFileCase",
  "nose.plugins.doctests.Doctest",
  "nose.plugins.doctests.log.debug",
  "nose.plugins.manager.PluginManager",
  "nose.plugins.skip.SkipTest",
  "nose.suite.ContextList",
  "nose.tools.assert_equal",
  "nose.tools.assert_raises",
  "nose.util.anyp",
  "nose.util.tolist",
  "null_generation_term",
  "numpy",
  "numpy.NINF",
  "numpy.amax",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.convolve",
  "numpy.dot",
  "numpy.e",
  "numpy.empty",
  "numpy.exp",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.fromiter",
  "numpy.hstack",
  "numpy.identity",
  "numpy.inf",
  "numpy.int",
  "numpy.linalg.det",
  "numpy.linalg.inv",
  "numpy.linalg.svd",
  "numpy.log",
  "numpy.log2",
  "numpy.logaddexp2",
  "numpy.multiply.outer",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.r_",
  "numpy.reshape",
  "numpy.std",
  "numpy.sum",
  "numpy.testing.assert_array_almost_equal",
  "numpy.transpose",
  "numpy.unravel_index",
  "numpy.zeros",
  "object.__new__",
  "old_fn",
  "old_fn.__doc__",
  "old_fn.__name__",
  "operator.add",
  "operator.and_",
  "operator.itemgetter",
  "operator.mul",
  "operator.or_",
  "optparse.OptionParser",
  "os.R_OK",
  "os._exit",
  "os.access",
  "os.chdir",
  "os.close",
  "os.curdir",
  "os.environ",
  "os.environ.get",
  "os.environ.split",
  "os.fdopen",
  "os.getcwd",
  "os.getgid",
  "os.getgroups",
  "os.getuid",
  "os.listdir",
  "os.mkdir",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.normpath",
  "os.path.pathsep",
  "os.path.pathsep.join",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.pathsep.join",
  "os.remove",
  "os.rmdir",
  "os.sep",
  "os.stat",
  "os.unlink",
  "os.walk",
  "ossaudiodev.AFMT_S16_LE",
  "ossaudiodev.open",
  "padding_fn",
  "pd",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "platform.architecture",
  "platform.system",
  "plug",
  "pprint.pformat",
  "pprint.pprint",
  "pred",
  "predicate",
  "print_testtrain_stats",
  "print_to",
  "print_train_stats",
  "print_tree",
  "print_unused_templates",
  "profile.run",
  "proof_method",
  "pstats.Stats",
  "pycrfsuite.Tagger",
  "pycrfsuite.Trainer",
  "pydoc.allmethods",
  "pyparsing.Combine",
  "pyparsing.Forward",
  "pyparsing.Literal",
  "pyparsing.Optional",
  "pyparsing.QuotedString",
  "pyparsing.Regex",
  "pyparsing.White",
  "pyparsing.Word",
  "pyparsing.ZeroOrMore",
  "pyparsing.delimitedList",
  "pyparsing.nums",
  "pyparsing.restOfLine",
  "r",
  "random.Random",
  "random.choice",
  "random.randint",
  "random.random",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "range_to_str",
  "re.DOTALL",
  "re.I",
  "re.IGNORECASE",
  "re.M",
  "re.MULTILINE",
  "re.U",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.error",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "read_blankline_block",
  "read_regexp_block",
  "read_sexpr_block",
  "rednose.RedNose",
  "regex",
  "regex.sub",
  "relation_html",
  "remove",
  "requests.Session",
  "requests.compat.urljoin",
  "requests.exceptions.ChunkedEncodingError",
  "requests.exceptions.ConnectionError",
  "requests.get",
  "reverse_str",
  "scipy.sparse.csr_matrix",
  "scipy.stats.fisher_exact",
  "scipy.stats.stats.betai",
  "set.intersection",
  "set.union",
  "shelve.open",
  "show",
  "shutil.copyfileobj",
  "singledispatch.singledispatch",
  "six.add_metaclass",
  "six.assertCountEqual",
  "six.b",
  "six.binary_type",
  "six.class_types",
  "six.int2byte",
  "six.integer_types",
  "six.iteritems",
  "six.itervalues",
  "six.moves.html_entities.entitydefs",
  "six.moves.html_entities.name2codepoint.get",
  "six.moves.input",
  "six.moves.map",
  "six.moves.queue",
  "six.moves.queue.Empty",
  "six.moves.queue.Queue",
  "six.moves.range",
  "six.moves.tkinter.Button",
  "six.moves.tkinter.Canvas",
  "six.moves.tkinter.Checkbutton",
  "six.moves.tkinter.END",
  "six.moves.tkinter.Entry",
  "six.moves.tkinter.Frame",
  "six.moves.tkinter.Frame.__init__",
  "six.moves.tkinter.Frame.configure",
  "six.moves.tkinter.IntVar",
  "six.moves.tkinter.LEFT",
  "six.moves.tkinter.Label",
  "six.moves.tkinter.Listbox",
  "six.moves.tkinter.Menu",
  "six.moves.tkinter.Menubutton",
  "six.moves.tkinter.Menubutton.destroy",
  "six.moves.tkinter.OptionMenu",
  "six.moves.tkinter.PhotoImage",
  "six.moves.tkinter.RAISED",
  "six.moves.tkinter.SEL_FIRST",
  "six.moves.tkinter.SEL_LAST",
  "six.moves.tkinter.SUNKEN",
  "six.moves.tkinter.Scrollbar",
  "six.moves.tkinter.StringVar",
  "six.moves.tkinter.TclError",
  "six.moves.tkinter.Text",
  "six.moves.tkinter.Tk",
  "six.moves.tkinter.Toplevel",
  "six.moves.tkinter.Widget.__getitem__",
  "six.moves.tkinter.Widget.__init__",
  "six.moves.tkinter_font.Font",
  "six.moves.tkinter_messagebox.Message",
  "six.moves.tkinter_messagebox.showerror",
  "six.moves.tkinter_messagebox.showinfo",
  "six.moves.tkinter_tkfiledialog.askopenfilename",
  "six.moves.tkinter_tkfiledialog.asksaveasfilename",
  "six.moves.urllib.error.HTTPError",
  "six.moves.urllib.error.URLError",
  "six.moves.urllib.parse.unquote_plus",
  "six.moves.urllib.request.HTTPPasswordMgrWithDefaultRealm",
  "six.moves.urllib.request.ProxyBasicAuthHandler",
  "six.moves.urllib.request.ProxyDigestAuthHandler",
  "six.moves.urllib.request.ProxyHandler",
  "six.moves.urllib.request.build_opener",
  "six.moves.urllib.request.getproxies",
  "six.moves.urllib.request.install_opener",
  "six.moves.urllib.request.url2pathname",
  "six.moves.urllib.request.urlopen",
  "six.moves.zip",
  "six.moves.zip_longest",
  "six.string_types",
  "six.text_type",
  "six.u",
  "six.unichr",
  "sklearn.datasets.load_svmlight_file",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.naive_bayes.BernoulliNB",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVC",
  "skolem",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.error",
  "socket.socket",
  "sqlite3.OperationalError",
  "sqlite3.OptimizedUnicode",
  "sqlite3.connect",
  "stat",
  "stat.S_IMODE",
  "stemmerclass",
  "str.lower",
  "str.strip",
  "string.punctuation",
  "strip_space",
  "subprocess.DEVNULL",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.call",
  "super.NUM_EDGES",
  "super.__str__",
  "super.apply",
  "sys.__stdout__",
  "sys.argv",
  "sys.exit",
  "sys.float_info.min",
  "sys.maxint",
  "sys.maxsize",
  "sys.modules",
  "sys.path",
  "sys.path.append",
  "sys.path.insert",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin.__class__.__name__",
  "sys.stdin.encoding",
  "sys.stdin.readline",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version.startswith",
  "sys.version_info",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "text_unidecode.unidecode",
  "textwrap.dedent",
  "textwrap.fill",
  "textwrap.wrap",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "threading.Thread.__init__",
  "time.altzone",
  "time.clock",
  "time.ctime",
  "time.daylight",
  "time.localtime",
  "time.sleep",
  "time.strftime",
  "time.time",
  "time.timezone",
  "trace_new_edges",
  "tuple.__new__",
  "twython.Twython",
  "twython.Twython.__init__",
  "twython.TwythonStreamer",
  "twython.TwythonStreamer.__init__",
  "twython.exceptions.TwythonError",
  "twython.exceptions.TwythonRateLimitError",
  "type.frameRelations",
  "types.MethodType",
  "unicodedata.category",
  "unicodedata.normalize",
  "unique_variable",
  "unittest.SkipTest",
  "unittest.TestCase",
  "unittest.TestSuite",
  "unittest.main",
  "unittest.mock.MagicMock",
  "unittest.skip",
  "unittest.skipUnless",
  "upd_feat",
  "util.pairwise",
  "vacancy_term",
  "vars.add",
  "vars.append",
  "vars.pop",
  "vars.update",
  "warnings.simplefilter",
  "warnings.warn",
  "webbrowser.open",
  "webbrowser.open_new_tab",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ElementTree",
  "xml.etree.ElementTree.SubElement",
  "xml.etree.ElementTree.TreeBuilder",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.iselement",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.tostring",
  "xml.sax.saxutils.escape",
  "xml.sax.saxutils.unescape",
  "yaml.load",
  "zipfile.ZipFile",
  "zipfile.ZipFile.__init__",
  "zipfile.ZipFile.read",
  "zipfile.error",
  "zipfile.filename",
  "zipfile.getinfo",
  "zipfile.namelist",
  "zlib.Z_FINISH"
 ],
 "deps": {
  "ApplicationExpression": [],
  "BaseHTTPServer": [],
  "Exception": [],
  "Foo": [],
  "FunctionVariableExpression": [],
  "LambdaExpression": [],
  "LazyConcatenation": [],
  "LineTokenizer": [],
  "NKJPCorpus_Text_View": [],
  "RegexpTokenizer": [],
  "Sr": [],
  "StreamBackedCorpusView": [],
  "StringIO": [],
  "TabTokenizer": [],
  "TestPunktTokenizeWordsMock": [],
  "ValueError": [],
  "Variable": [],
  "VariableExpression": [],
  "WhitespaceTokenizer": [],
  "WordPunctTokenizer": [],
  "XMLCorpusView": [],
  "_": [],
  "__doc__": [],
  "__future__": [],
  "_chunk_iterator": [],
  "_condition_to_logic": [],
  "_matching_exs": [],
  "_next_token": [],
  "a": [],
  "abc": [],
  "accum": [],
  "add": [],
  "antecedent": [],
  "apply_rules": [],
  "array": [],
  "b": [],
  "base64": [],
  "base_set": [],
  "bisect": [],
  "blk_frq": [],
  "bllipparser": [],
  "bound_method": [],
  "bytes": [],
  "cPickle": [],
  "cStringIO": [],
  "callback": [],
  "category": [],
  "cb": [],
  "cb_func": [],
  "cgi": [],
  "chatbot": [],
  "cleanup": [],
  "cmp": [],
  "codecs": [],
  "collections": [],
  "compute_composition_semantics": [],
  "compute_function_semantics": [],
  "compute_substitution_semantics": [],
  "compute_type_raised_semantics": [],
  "concat": [],
  "cond": [],
  "condition": [],
  "condition_to_str": [],
  "contextlib": [],
  "copy": [],
  "counterrors": [],
  "cpd": [],
  "crosscell": [],
  "csv": [],
  "ctx": [],
  "datetime": [],
  "defaultdict": [],
  "demo": [],
  "dexpr": [],
  "dict": [],
  "dictOfDicts": [],
  "display": [],
  "distortion_term": [],
  "doctest": [],
  "doctest_nose_plugin": [],
  "dumpmatrix": [],
  "encoder_cls": [],
  "events": [],
  "extractor": [],
  "f": [],
  "factory": [],
  "feature_func": [],
  "fertility_term": [],
  "filter_forms": [],
  "final_and": [],
  "find_corpus_fileids": [],
  "findcell": [],
  "flatten": [],
  "flattern": [],
  "fnmatch": [],
  "format_lemma": [],
  "fractions": [],
  "from_pos_and_line": [],
  "frozenset": [],
  "fun": [],
  "func": [],
  "functools": [],
  "gc": [],
  "get_indiv_vars": [],
  "get_static_wx_help_page": [],
  "get_synset": [],
  "getargspec": [],
  "getopt": [],
  "glob": [],
  "globals": [],
  "glueFormulaFactory": [],
  "grow_diag": [],
  "gzip": [],
  "handler_func": [],
  "hashlib": [],
  "init_func": [],
  "input": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "lexical_translation_term": [],
  "lexpr": [],
  "list": [],
  "list_fstructs": [],
  "locale": [],
  "logging": [],
  "make_leaf": [],
  "make_node": [],
  "make_synset_html": [],
  "math": [],
  "matplotlib": [],
  "method": [],
  "morphy": [],
  "networkx": [],
  "next": [],
  "nltk": [],
  "node_pred": [],
  "nonempty_powerset": [],
  "norm": [],
  "nose": [],
  "null_generation_term": [],
  "numpy": [],
  "object": [],
  "old_fn": [],
  "operator": [],
  "optparse": [],
  "os": [],
  "ossaudiodev": [],
  "padding_fn": [],
  "pd": [],
  "pickle": [],
  "platform": [],
  "plug": [],
  "pprint": [],
  "pred": [],
  "predicate": [],
  "print_testtrain_stats": [],
  "print_to": [],
  "print_train_stats": [],
  "print_tree": [],
  "print_unused_templates": [],
  "profile": [],
  "proof_method": [],
  "pstats": [],
  "pycrfsuite": [],
  "pydoc": [],
  "pyparsing": [],
  "r": [],
  "random": [],
  "range_to_str": [],
  "re": [],
  "read_blankline_block": [],
  "read_regexp_block": [],
  "read_sexpr_block": [],
  "rednose": [],
  "regex": [],
  "relation_html": [],
  "remove": [],
  "requests": [],
  "reverse_str": [],
  "scipy": [],
  "set": [],
  "shelve": [],
  "show": [],
  "shutil": [],
  "singledispatch": [],
  "six": [],
  "sklearn": [],
  "skolem": [],
  "socket": [],
  "sqlite3": [],
  "stat": [],
  "stemmerclass": [],
  "str": [],
  "string": [],
  "strip_space": [],
  "subprocess": [],
  "super": [],
  "sys": [],
  "tempfile": [],
  "text_unidecode": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "trace_new_edges": [],
  "tuple": [],
  "twython": [],
  "type": [],
  "types": [],
  "unicodedata": [],
  "unique_variable": [],
  "unittest": [],
  "upd_feat": [],
  "util": [],
  "vacancy_term": [],
  "vars": [],
  "warnings": [],
  "webbrowser": [],
  "xml": [],
  "yaml": [],
  "zipfile": [],
  "zlib": []
 }
}