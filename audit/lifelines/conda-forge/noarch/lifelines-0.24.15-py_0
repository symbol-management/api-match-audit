{
 "bad": [
  "IPython.core.getipython.get_ipython",
  "IPython.display.HTML",
  "IPython.display.display",
  "_BatchVsSingle.BATCH",
  "__repr__",
  "_concordance_value",
  "_transform_ith_param",
  "_univariate_linear_regression_without_intercept",
  "_valid_comparison",
  "autograd.builtins.DictBox",
  "autograd.differential_operators.make_jvp_reversemode",
  "autograd.elementwise_grad",
  "autograd.extend.defvjp",
  "autograd.extend.primitive",
  "autograd.grad",
  "autograd.hessian",
  "autograd.misc.flatten",
  "autograd.numpy.abs",
  "autograd.numpy.append",
  "autograd.numpy.array",
  "autograd.numpy.asarray",
  "autograd.numpy.atleast_1d",
  "autograd.numpy.clip",
  "autograd.numpy.concatenate",
  "autograd.numpy.diff",
  "autograd.numpy.dot",
  "autograd.numpy.exp",
  "autograd.numpy.expm1",
  "autograd.numpy.finfo",
  "autograd.numpy.hstack",
  "autograd.numpy.inf",
  "autograd.numpy.linspace",
  "autograd.numpy.log",
  "autograd.numpy.log1p",
  "autograd.numpy.logaddexp",
  "autograd.numpy.maximum",
  "autograd.numpy.median",
  "autograd.numpy.minimum",
  "autograd.numpy.nan",
  "autograd.numpy.numpy_boxes.ArrayBox",
  "autograd.numpy.percentile",
  "autograd.numpy.pi",
  "autograd.numpy.power",
  "autograd.numpy.random.choice",
  "autograd.numpy.round",
  "autograd.numpy.sin",
  "autograd.numpy.sort",
  "autograd.numpy.sqrt",
  "autograd.numpy.stack",
  "autograd.numpy.sum",
  "autograd.numpy.tile",
  "autograd.numpy.unique",
  "autograd.numpy.where",
  "autograd.numpy.zeros",
  "autograd.scipy.stats.norm.logcdf",
  "autograd.scipy.stats.norm.logpdf",
  "autograd.scipy.stats.norm.logsf",
  "autograd.scipy.stats.norm.sf",
  "autograd.value_and_grad",
  "autograd_gamma.gammainc",
  "autograd_gamma.gammaincc",
  "autograd_gamma.gammainccln",
  "autograd_gamma.gammaincln",
  "autograd_gamma.gammaln",
  "ccl",
  "clog",
  "collections.defaultdict",
  "collections.namedtuple",
  "compute_statistic",
  "create_df_slicer",
  "d_penalizer",
  "dataframe_slicer",
  "datetime.datetime.today",
  "datetime.datetime.utcnow",
  "dd_penalizer",
  "events",
  "events.any",
  "events.astype",
  "events.copy",
  "events.cumsum",
  "events.index.tolist",
  "events.loc",
  "events.sort_index",
  "events.sum",
  "events.tolist",
  "events.values",
  "f",
  "f.__doc__",
  "find_root",
  "fit",
  "function",
  "functools.partial",
  "functools.wraps",
  "get_gradients",
  "gradient_of_transform_at_mle",
  "inspect.getfullargspec",
  "inspect.signature",
  "itertools.combinations",
  "justify",
  "lifelines.CRCSplineFitter",
  "lifelines.ExponentialFitter",
  "lifelines.GeneralizedGammaFitter",
  "lifelines.KaplanMeierFitter",
  "lifelines.LogLogisticFitter",
  "lifelines.LogNormalFitter",
  "lifelines.NelsonAalenFitter",
  "lifelines.PiecewiseExponentialFitter",
  "lifelines.SplineFitter",
  "lifelines.WeibullFitter",
  "lifelines.datasets._load_dataset",
  "lifelines.datasets.dfcv_dataset.cv",
  "lifelines.datasets.dfcv_dataset.df",
  "lifelines.datasets.dfcv_dataset.dfcv.copy",
  "lifelines.fitters.BaseFitter",
  "lifelines.fitters.KnownModelParametricUnivariateFitter",
  "lifelines.fitters.ParametericAFTRegressionFitter",
  "lifelines.fitters.ParametricRegressionFitter",
  "lifelines.fitters.ParametricUnivariateFitter",
  "lifelines.fitters.RegressionFitter",
  "lifelines.fitters.SemiParametricRegressionFittter",
  "lifelines.fitters.UnivariateFitter",
  "lifelines.fitters.UnivariateFitter.__init__",
  "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter",
  "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter",
  "lifelines.fitters.cox_time_varying_fitter.matrix_axis_0_sum_to_1d_array",
  "lifelines.fitters.coxph_fitter.CoxPHFitter",
  "lifelines.fitters.coxph_fitter.ParametricSplinePHFitter",
  "lifelines.fitters.coxph_fitter.SemiParametricPHFitter",
  "lifelines.fitters.coxph_fitter._BatchVsSingle",
  "lifelines.fitters.crc_spline_fitter.CRCSplineFitter",
  "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter",
  "lifelines.fitters.lifelines",
  "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter",
  "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter",
  "lifelines.fitters.mixins.ProportionalHazardMixin",
  "lifelines.fitters.mixins.SplineFitterMixin",
  "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter",
  "lifelines.fitters.npmle.E_step_M_step",
  "lifelines.fitters.npmle.check_convergence",
  "lifelines.fitters.npmle.create_observation_intervals",
  "lifelines.fitters.npmle.create_turnbull_intervals",
  "lifelines.fitters.npmle.create_turnbull_lookup",
  "lifelines.fitters.npmle.cumulative_sum",
  "lifelines.fitters.npmle.expectation_maximization_fit",
  "lifelines.fitters.npmle.interval",
  "lifelines.fitters.npmle.is_subset",
  "lifelines.fitters.npmle.log_likelihood",
  "lifelines.fitters.npmle.log_odds",
  "lifelines.fitters.npmle.min_max",
  "lifelines.fitters.npmle.npmle",
  "lifelines.fitters.npmle.probs",
  "lifelines.fitters.npmle.reconstruct_survival_function",
  "lifelines.fitters.npmle.scipy_minimize_fit",
  "lifelines.fitters.npmle.temper",
  "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter",
  "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter",
  "lifelines.fitters.spline_fitter.SplineFitter",
  "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter",
  "lifelines.generate_datasets.FUNCS",
  "lifelines.generate_datasets.coeff_func",
  "lifelines.generate_datasets.constant_",
  "lifelines.generate_datasets.constant_coefficients",
  "lifelines.generate_datasets.cumulative_integral",
  "lifelines.generate_datasets.exp_comp_",
  "lifelines.generate_datasets.generate_covariates",
  "lifelines.generate_datasets.generate_hazard_rates",
  "lifelines.generate_datasets.generate_random_lifetimes",
  "lifelines.generate_datasets.inverseSq_",
  "lifelines.generate_datasets.log_",
  "lifelines.generate_datasets.periodic_",
  "lifelines.generate_datasets.random",
  "lifelines.generate_datasets.time_varying_coefficients",
  "lifelines.plotting.PlotEstimateConfig",
  "lifelines.plotting._iloc",
  "lifelines.plotting._plot_estimate",
  "lifelines.plotting._plot_estimate.__doc__.format",
  "lifelines.plotting.add_at_risk_counts",
  "lifelines.plotting.create_dataframe_slicer",
  "lifelines.plotting.create_scipy_stats_model_from_lifelines_model",
  "lifelines.plotting.get_distribution_name_of_lifelines_model",
  "lifelines.plotting.is_latex_enabled",
  "lifelines.plotting.loglogs_plot",
  "lifelines.plotting.move_spines",
  "lifelines.plotting.remove_spines",
  "lifelines.plotting.remove_ticks",
  "lifelines.plotting.set_kwargs_color",
  "lifelines.plotting.set_kwargs_drawstyle",
  "lifelines.plotting.set_kwargs_label",
  "lifelines.statistics.StatisticalResult",
  "lifelines.statistics.TimeTransformers",
  "lifelines.statistics._chisq_test_p_value",
  "lifelines.statistics.logrank_test",
  "lifelines.statistics.multivariate_logrank_test",
  "lifelines.statistics.proportional_hazard_test",
  "lifelines.utils.ApproximationWarning",
  "lifelines.utils.CensoringType",
  "lifelines.utils.CensoringType.get_human_readable_censoring_type",
  "lifelines.utils.CensoringType.interval_censoring",
  "lifelines.utils.CensoringType.is_interval_censoring",
  "lifelines.utils.CensoringType.is_left_censoring",
  "lifelines.utils.CensoringType.is_right_censoring",
  "lifelines.utils.CensoringType.left_censoring",
  "lifelines.utils.CensoringType.right_censoring",
  "lifelines.utils.ConvergenceError",
  "lifelines.utils.ConvergenceWarning",
  "lifelines.utils.DataframeSliceDict",
  "lifelines.utils.StatError",
  "lifelines.utils.StatisticalWarning",
  "lifelines.utils.StepSizer",
  "lifelines.utils._additive_estimate",
  "lifelines.utils._expected_value_of_survival_squared_up_to_t",
  "lifelines.utils._expected_value_of_survival_up_to_t",
  "lifelines.utils._get_index",
  "lifelines.utils._group_event_table_by_intervals",
  "lifelines.utils._low_var",
  "lifelines.utils._preprocess_inputs",
  "lifelines.utils._to_1d_array",
  "lifelines.utils._to_list",
  "lifelines.utils._to_tuple",
  "lifelines.utils.add_covariate_to_timeline",
  "lifelines.utils.btree._BTree",
  "lifelines.utils.check_complete_separation",
  "lifelines.utils.check_complete_separation_close_to_perfect_correlation",
  "lifelines.utils.check_complete_separation_low_variance",
  "lifelines.utils.check_dimensions",
  "lifelines.utils.check_entry_times",
  "lifelines.utils.check_for_immediate_deaths",
  "lifelines.utils.check_for_instantaneous_events_at_death_time",
  "lifelines.utils.check_for_instantaneous_events_at_time_zero",
  "lifelines.utils.check_for_nonnegative_intervals",
  "lifelines.utils.check_for_numeric_dtypes_or_raise",
  "lifelines.utils.check_low_var",
  "lifelines.utils.check_nans_or_infs",
  "lifelines.utils.check_positivity",
  "lifelines.utils.coalesce",
  "lifelines.utils.concordance._concordance_ratio",
  "lifelines.utils.concordance._concordance_summary_statistics",
  "lifelines.utils.concordance._handle_pairs",
  "lifelines.utils.concordance._naive_concordance_summary_statistics",
  "lifelines.utils.concordance._preprocess_scoring_data",
  "lifelines.utils.concordance.concordance_index",
  "lifelines.utils.concordance_index",
  "lifelines.utils.epanechnikov_kernel",
  "lifelines.utils.format_exp_floats",
  "lifelines.utils.format_floats",
  "lifelines.utils.format_p_value",
  "lifelines.utils.group_survival_table_from_events",
  "lifelines.utils.interpolate_at_times",
  "lifelines.utils.interpolate_at_times_and_return_pandas",
  "lifelines.utils.inv_normal_cdf",
  "lifelines.utils.leading_space",
  "lifelines.utils.lowess.lowess",
  "lifelines.utils.map_leading_space",
  "lifelines.utils.median_survival_times",
  "lifelines.utils.normalize",
  "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
  "lifelines.utils.pearson_correlation",
  "lifelines.utils.printer.Printer",
  "lifelines.utils.qth_survival_time",
  "lifelines.utils.qth_survival_times",
  "lifelines.utils.restricted_mean_survival_time",
  "lifelines.utils.ridge_regression",
  "lifelines.utils.safe_exp.MAX",
  "lifelines.utils.safe_exp.safe_exp",
  "lifelines.utils.safe_exp.safe_exp_vjp",
  "lifelines.utils.safe_log2",
  "lifelines.utils.safe_zip",
  "lifelines.utils.sklearn_adapter._SklearnModel",
  "lifelines.utils.sklearn_adapter.concordance_index",
  "lifelines.utils.sklearn_adapter.filter_kwargs",
  "lifelines.utils.string_justify",
  "lifelines.utils.survival_table_from_events",
  "lifelines.utils.to_long_format",
  "ll_gradient",
  "log",
  "loglog",
  "math.ceil",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.hlines",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.subplots_adjust",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.twiny",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.yticks",
  "matplotlib.rcParams",
  "matplotlib.ticker.MaxNLocator",
  "numpy.abs",
  "numpy.absolute",
  "numpy.all",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arctan",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.c_",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.diag_indices",
  "numpy.diff",
  "numpy.dot",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.inf",
  "numpy.int64",
  "numpy.interp",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isposinf",
  "numpy.less_equal",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.inv",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linspace",
  "numpy.log",
  "numpy.log2",
  "numpy.logical_not",
  "numpy.max",
  "numpy.maximum",
  "numpy.median",
  "numpy.min",
  "numpy.minimum",
  "numpy.multiply.outer",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.percentile",
  "numpy.pi",
  "numpy.power",
  "numpy.r_",
  "numpy.random",
  "numpy.random.permutation",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.s_",
  "numpy.seterr",
  "numpy.sign",
  "numpy.sin",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.tile",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.warnings.catch_warnings",
  "numpy.warnings.filterwarnings",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "object.any",
  "pandas.DataFrame",
  "pandas.DataFrame.from_records",
  "pandas.Index",
  "pandas.MultiIndex",
  "pandas.MultiIndex.from_tuples",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.concat",
  "pandas.cut",
  "pandas.isnull",
  "pandas.read_csv",
  "pandas.to_datetime",
  "pandas.to_numeric",
  "penalizer",
  "pkg_resources.resource_filename",
  "scipy.integrate.cumtrapz",
  "scipy.integrate.quad",
  "scipy.integrate.trapz",
  "scipy.linalg.LinAlgError",
  "scipy.linalg.inv",
  "scipy.linalg.norm",
  "scipy.linalg.solve",
  "scipy.optimize.minimize",
  "scipy.optimize.newton",
  "scipy.optimize.root_scalar",
  "scipy.special.erfinv",
  "scipy.special.gamma",
  "scipy.special.gammainccinv",
  "scipy.special.gammaincinv",
  "scipy.stats",
  "scipy.stats.chi2.sf",
  "scipy.stats.expon.rvs",
  "scipy.stats.norm.cdf",
  "scipy.stats.norm.ppf",
  "scipy.stats.pearsonr",
  "scipy.stats.uniform.rvs",
  "shaded_plot",
  "sklearn.base.BaseEstimator",
  "sklearn.base.MetaEstimatorMixin",
  "sklearn.base.RegressorMixin",
  "soft_abs",
  "subset_df",
  "textwrap.dedent",
  "textwrap.fill",
  "time.time",
  "time_transformer",
  "transform",
  "transformer",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Tuple",
  "typing.Union",
  "unflatten_array_to_dict",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "z"
 ],
 "deps": {
  "IPython": [],
  "_BatchVsSingle": [],
  "__repr__": [],
  "_concordance_value": [],
  "_transform_ith_param": [],
  "_univariate_linear_regression_without_intercept": [],
  "_valid_comparison": [],
  "autograd": [],
  "autograd_gamma": [],
  "ccl": [],
  "clog": [],
  "collections": [],
  "compute_statistic": [],
  "create_df_slicer": [],
  "d_penalizer": [],
  "dataframe_slicer": [],
  "datetime": [],
  "dd_penalizer": [],
  "events": [],
  "f": [],
  "find_root": [],
  "fit": [],
  "function": [],
  "functools": [],
  "get_gradients": [],
  "gradient_of_transform_at_mle": [],
  "inspect": [],
  "itertools": [],
  "justify": [],
  "lifelines": [],
  "ll_gradient": [],
  "log": [],
  "loglog": [],
  "math": [],
  "matplotlib": [],
  "numpy": [],
  "object": [],
  "pandas": [],
  "penalizer": [],
  "pkg_resources": [],
  "scipy": [],
  "shaded_plot": [],
  "sklearn": [],
  "soft_abs": [],
  "subset_df": [],
  "textwrap": [],
  "time": [],
  "time_transformer": [],
  "transform": [],
  "transformer": [],
  "typing": [],
  "unflatten_array_to_dict": [],
  "warnings": [],
  "z": []
 }
}