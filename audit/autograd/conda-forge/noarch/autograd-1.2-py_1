{
 "bad": [
  "__future__.absolute_import",
  "__future__.division",
  "_check_grads",
  "_f",
  "_make_ggnvp",
  "accum",
  "al2d",
  "array_from_args",
  "atleast_1d",
  "atleast_2d",
  "autograd.extend.Box.__array_priority__",
  "autograd.extend.VSpace.register",
  "autograd.numpy.arange",
  "autograd.numpy.dot",
  "autograd.numpy.exp",
  "autograd.numpy.expand_dims",
  "autograd.numpy.floor",
  "autograd.numpy.iscomplexobj",
  "autograd.numpy.linalg.inv",
  "autograd.numpy.linalg.pinv",
  "autograd.numpy.linalg.solve",
  "autograd.numpy.log",
  "autograd.numpy.log1p",
  "autograd.numpy.matmul",
  "autograd.numpy.ndim",
  "autograd.numpy.ones",
  "autograd.numpy.outer",
  "autograd.numpy.power",
  "autograd.numpy.ravel",
  "autograd.numpy.real",
  "autograd.numpy.reshape",
  "autograd.numpy.result_type",
  "autograd.numpy.shape",
  "autograd.numpy.sqrt",
  "autograd.numpy.sum",
  "autograd.numpy.swapaxes",
  "autograd.numpy.tensordot",
  "autograd.numpy.transpose",
  "autograd.numpy.tril",
  "autograd.numpy.triu",
  "autograd.numpy.where",
  "autograd.numpy.zeros",
  "builtins.range",
  "builtins.zip",
  "check_even_shape",
  "check_implemented",
  "check_no_repeated_axes",
  "collections.OrderedDict",
  "collections.defaultdict",
  "conjugate_solve",
  "contextlib.contextmanager",
  "dict_",
  "dot",
  "expand",
  "f",
  "f_jvp",
  "f_raw",
  "f_vjp",
  "f_wrapped",
  "f_wrapped._is_autograd_primitive",
  "f_wrapped._is_primitive",
  "f_wrapped.fun",
  "fftshift",
  "fun",
  "fun_grad",
  "funcsigs",
  "funcsigs.signature",
  "functools.partial",
  "functools.reduce",
  "future.utils.iteritems",
  "future.utils.string_types",
  "future.utils.with_metaclass",
  "g_hvp",
  "get_name",
  "helper",
  "idx",
  "ifftshift",
  "inspect.getargspec",
  "inv",
  "irfft_fun",
  "isbox",
  "itertools",
  "itertools.count",
  "itertools.product",
  "itertools.repeat",
  "jvp",
  "jvp_numeric",
  "jvpmaker",
  "make_rfft_factors",
  "maybe_cached_unary_fun",
  "new_box",
  "node_constructor",
  "numpy",
  "numpy.__dict__",
  "numpy.add.at",
  "numpy.arange",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.c_",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.core.einsumfunc._parse_einsum_input",
  "numpy.delete",
  "numpy.diagonal",
  "numpy.dot",
  "numpy.dtype",
  "numpy.einsum",
  "numpy.fft",
  "numpy.fft.__dict__",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.iscomplexobj",
  "numpy.lib.stride_tricks.as_strided",
  "numpy.linalg",
  "numpy.linalg.__dict__",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.ndindex",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.prod",
  "numpy.r_",
  "numpy.random",
  "numpy.random.__dict__",
  "numpy.random.randn",
  "numpy.ravel",
  "numpy.real",
  "numpy.result_type",
  "numpy.select",
  "numpy.shape",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.tensordot",
  "numpy.transpose",
  "numpy.ufunc",
  "numpy.zeros",
  "numpy.zeros_like",
  "numpy_boxes.ArrayBox.__getitem__",
  "numpy_wrapper.__dict__",
  "numpy_wrapper._array_from_scalar_or_array",
  "numpy_wrapper.abs",
  "numpy_wrapper.absolute",
  "numpy_wrapper.add",
  "numpy_wrapper.all",
  "numpy_wrapper.allclose",
  "numpy_wrapper.amax",
  "numpy_wrapper.amin",
  "numpy_wrapper.angle",
  "numpy_wrapper.any",
  "numpy_wrapper.arccos",
  "numpy_wrapper.arccosh",
  "numpy_wrapper.arcsin",
  "numpy_wrapper.arcsinh",
  "numpy_wrapper.arctan",
  "numpy_wrapper.arctanh",
  "numpy_wrapper.argmax",
  "numpy_wrapper.argmin",
  "numpy_wrapper.argpartition",
  "numpy_wrapper.argsort",
  "numpy_wrapper.argwhere",
  "numpy_wrapper.around",
  "numpy_wrapper.array",
  "numpy_wrapper.array_equal",
  "numpy_wrapper.array_equiv",
  "numpy_wrapper.array_from_args",
  "numpy_wrapper.array_split",
  "numpy_wrapper.atleast_1d",
  "numpy_wrapper.atleast_2d",
  "numpy_wrapper.atleast_3d",
  "numpy_wrapper.ceil",
  "numpy_wrapper.clip",
  "numpy_wrapper.concatenate",
  "numpy_wrapper.concatenate_args",
  "numpy_wrapper.conj",
  "numpy_wrapper.conjugate",
  "numpy_wrapper.cos",
  "numpy_wrapper.cosh",
  "numpy_wrapper.count_nonzero",
  "numpy_wrapper.cross",
  "numpy_wrapper.cumsum",
  "numpy_wrapper.deg2rad",
  "numpy_wrapper.degrees",
  "numpy_wrapper.diag",
  "numpy_wrapper.diagonal",
  "numpy_wrapper.diff",
  "numpy_wrapper.divide",
  "numpy_wrapper.dot",
  "numpy_wrapper.dsplit",
  "numpy_wrapper.einsum",
  "numpy_wrapper.equal",
  "numpy_wrapper.exp",
  "numpy_wrapper.exp2",
  "numpy_wrapper.expand_dims",
  "numpy_wrapper.expm1",
  "numpy_wrapper.eye",
  "numpy_wrapper.fabs",
  "numpy_wrapper.fix",
  "numpy_wrapper.flatnonzero",
  "numpy_wrapper.fliplr",
  "numpy_wrapper.flipud",
  "numpy_wrapper.floor",
  "numpy_wrapper.floor_divide",
  "numpy_wrapper.fmax",
  "numpy_wrapper.fmin",
  "numpy_wrapper.full",
  "numpy_wrapper.greater",
  "numpy_wrapper.greater_equal",
  "numpy_wrapper.hsplit",
  "numpy_wrapper.hypot",
  "numpy_wrapper.imag",
  "numpy_wrapper.inner",
  "numpy_wrapper.isclose",
  "numpy_wrapper.iscomplex",
  "numpy_wrapper.iscomplexobj",
  "numpy_wrapper.isfinite",
  "numpy_wrapper.isinf",
  "numpy_wrapper.isnan",
  "numpy_wrapper.isneginf",
  "numpy_wrapper.isposinf",
  "numpy_wrapper.isreal",
  "numpy_wrapper.isscalar",
  "numpy_wrapper.kron",
  "numpy_wrapper.less",
  "numpy_wrapper.less_equal",
  "numpy_wrapper.linspace",
  "numpy_wrapper.log",
  "numpy_wrapper.log10",
  "numpy_wrapper.log1p",
  "numpy_wrapper.log2",
  "numpy_wrapper.logaddexp",
  "numpy_wrapper.logaddexp2",
  "numpy_wrapper.logical_and",
  "numpy_wrapper.logical_not",
  "numpy_wrapper.logical_or",
  "numpy_wrapper.logical_xor",
  "numpy_wrapper.make_diagonal",
  "numpy_wrapper.matmul",
  "numpy_wrapper.max",
  "numpy_wrapper.maximum",
  "numpy_wrapper.mean",
  "numpy_wrapper.metadata",
  "numpy_wrapper.min",
  "numpy_wrapper.minimum",
  "numpy_wrapper.mod",
  "numpy_wrapper.moveaxis",
  "numpy_wrapper.msort",
  "numpy_wrapper.multiply",
  "numpy_wrapper.nan_to_num",
  "numpy_wrapper.ndim",
  "numpy_wrapper.negative",
  "numpy_wrapper.newaxis",
  "numpy_wrapper.nonzero",
  "numpy_wrapper.not_equal",
  "numpy_wrapper.ones",
  "numpy_wrapper.ones_like",
  "numpy_wrapper.outer",
  "numpy_wrapper.pad",
  "numpy_wrapper.parse_einsum_input",
  "numpy_wrapper.partition",
  "numpy_wrapper.pi",
  "numpy_wrapper.power",
  "numpy_wrapper.prod",
  "numpy_wrapper.rad2deg",
  "numpy_wrapper.radians",
  "numpy_wrapper.ravel",
  "numpy_wrapper.real",
  "numpy_wrapper.real_if_close",
  "numpy_wrapper.reciprocal",
  "numpy_wrapper.remainder",
  "numpy_wrapper.repeat",
  "numpy_wrapper.reshape",
  "numpy_wrapper.result_type",
  "numpy_wrapper.rint",
  "numpy_wrapper.roll",
  "numpy_wrapper.rollaxis",
  "numpy_wrapper.rot90",
  "numpy_wrapper.round",
  "numpy_wrapper.searchsorted",
  "numpy_wrapper.shape",
  "numpy_wrapper.sign",
  "numpy_wrapper.sin",
  "numpy_wrapper.sinc",
  "numpy_wrapper.sinh",
  "numpy_wrapper.size",
  "numpy_wrapper.sort",
  "numpy_wrapper.split",
  "numpy_wrapper.sqrt",
  "numpy_wrapper.square",
  "numpy_wrapper.squeeze",
  "numpy_wrapper.std",
  "numpy_wrapper.subtract",
  "numpy_wrapper.sum",
  "numpy_wrapper.swapaxes",
  "numpy_wrapper.tan",
  "numpy_wrapper.tanh",
  "numpy_wrapper.tensordot",
  "numpy_wrapper.tile",
  "numpy_wrapper.trace",
  "numpy_wrapper.transpose",
  "numpy_wrapper.tril",
  "numpy_wrapper.triu",
  "numpy_wrapper.true_divide",
  "numpy_wrapper.trunc",
  "numpy_wrapper.var",
  "numpy_wrapper.vsplit",
  "numpy_wrapper.where",
  "numpy_wrapper.zeros",
  "numpy_wrapper.zeros_like",
  "optimize",
  "others",
  "partial_fun",
  "phi",
  "pred",
  "rfft_fun",
  "roll",
  "scipy.linalg",
  "scipy.misc",
  "scipy.special",
  "scipy.stats",
  "select",
  "solve",
  "solve_lyapunov",
  "solve_trans",
  "solve_triangular",
  "sum_outgrads",
  "svd",
  "swap",
  "sys",
  "sys.version_info",
  "tensordot_adjoint_0",
  "tensordot_adjoint_1",
  "todict",
  "tracer.primitive",
  "transpose",
  "tri",
  "truncate_pad",
  "types",
  "types.BuiltinFunctionType",
  "types.FunctionType",
  "unary_operator",
  "undiff",
  "unflatten",
  "unpermuter",
  "unroll",
  "updim",
  "vjp",
  "vjp_0",
  "vjp_0_fun",
  "vjp_1",
  "vjp_1_fun",
  "vjp_a",
  "vjp_x",
  "vjpfun",
  "vjpmaker",
  "vspace",
  "warnings",
  "warnings.warn",
  "wraps"
 ],
 "deps": {
  "__future__": [],
  "_check_grads": [],
  "_f": [],
  "_make_ggnvp": [],
  "accum": [],
  "al2d": [],
  "apply_defaults": [
   "apply_defaults/conda-forge/noarch/apply_defaults-0.1.4-py_0"
  ],
  "array_from_args": [],
  "atleast_1d": [],
  "atleast_2d": [],
  "autograd": [],
  "builtins": [],
  "check_even_shape": [],
  "check_implemented": [],
  "check_no_repeated_axes": [],
  "collections": [],
  "conjugate_solve": [],
  "contextlib": [],
  "dict_": [],
  "dot": [],
  "expand": [],
  "f": [],
  "f_jvp": [],
  "f_raw": [],
  "f_vjp": [],
  "f_wrapped": [],
  "fftshift": [],
  "fun": [],
  "fun_grad": [],
  "funcsigs": [],
  "functools": [],
  "future": [],
  "g_hvp": [],
  "get_name": [],
  "helper": [],
  "idx": [],
  "ifftshift": [],
  "inspect": [],
  "inv": [],
  "irfft_fun": [],
  "isbox": [],
  "itertools": [],
  "jvp": [],
  "jvp_numeric": [],
  "jvpmaker": [],
  "make_rfft_factors": [],
  "maybe_cached_unary_fun": [],
  "new_box": [],
  "node_constructor": [],
  "numpy": [],
  "numpy_boxes": [],
  "numpy_wrapper": [],
  "optimize": [],
  "others": [],
  "partial_fun": [],
  "phi": [],
  "pred": [],
  "rfft_fun": [],
  "roll": [],
  "scipy": [],
  "select": [],
  "solve": [],
  "solve_lyapunov": [],
  "solve_trans": [],
  "solve_triangular": [],
  "sum_outgrads": [],
  "svd": [],
  "swap": [],
  "sys": [],
  "tensordot_adjoint_0": [],
  "tensordot_adjoint_1": [],
  "todict": [],
  "tracer": [],
  "transpose": [],
  "tri": [],
  "truncate_pad": [],
  "types": [],
  "unary_operator": [],
  "undiff": [],
  "unflatten": [],
  "unpermuter": [],
  "unroll": [],
  "updim": [],
  "vjp": [],
  "vjp_0": [],
  "vjp_0_fun": [],
  "vjp_1": [],
  "vjp_1_fun": [],
  "vjp_a": [],
  "vjp_x": [],
  "vjpfun": [],
  "vjpmaker": [],
  "vspace": [],
  "warnings": [],
  "wraps": []
 }
}