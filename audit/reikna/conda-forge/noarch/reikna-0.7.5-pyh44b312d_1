{
 "bad": [
  "DummyAllocator",
  "KernelParameter",
  "__future__.division",
  "__future__.print_function",
  "adhoc_idgen",
  "args",
  "bisect.bisect_left",
  "bisect.bisect_right",
  "collections",
  "collections.Iterable",
  "collections.abc.Iterable",
  "collections.defaultdict",
  "collections.namedtuple",
  "comp",
  "ctype",
  "doctest",
  "doctest.testmod",
  "fractions.gcd",
  "funcsigs",
  "funcsigs.Parameter",
  "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
  "funcsigs.Signature",
  "funcsigs.signature",
  "functools",
  "functools.reduce",
  "get_conn",
  "get_names",
  "inspect",
  "inspect.isfunction",
  "itertools",
  "itertools.combinations",
  "itertools.product",
  "kernel_call",
  "logging.error",
  "long",
  "main_renderable",
  "mako.exceptions",
  "mako.exceptions.text_error_template",
  "mako.template.Template",
  "math.gcd",
  "normalize_type",
  "numpy",
  "numpy.ComplexWarning",
  "numpy.arange",
  "numpy.array",
  "numpy.bool",
  "numpy.cast",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.complex_",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.dtype",
  "numpy.empty",
  "numpy.exp",
  "numpy.fft.fft",
  "numpy.fft.ifft",
  "numpy.float32",
  "numpy.float64",
  "numpy.float_",
  "numpy.floating",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.issctype",
  "numpy.issubdtype",
  "numpy.min_scalar_type",
  "numpy.ndarray",
  "numpy.pi",
  "numpy.polynomial.Hermite",
  "numpy.random.RandomState",
  "numpy.result_type",
  "numpy.signedinteger",
  "numpy.sqrt",
  "numpy.tile",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.vstack",
  "numpy.zeros",
  "operator.itemgetter",
  "optimal_transpose",
  "os.path",
  "params_container",
  "platform",
  "platform.system",
  "polynomial",
  "pycuda.compiler.SourceModule",
  "pycuda.driver",
  "pycuda.driver.ArgumentHandler",
  "pycuda.driver.Context",
  "pycuda.driver.Context.get_device",
  "pycuda.driver.Context.pop",
  "pycuda.driver.Device",
  "pycuda.driver.Device.count",
  "pycuda.driver.Stream",
  "pycuda.driver.function_attribute.MAX_THREADS_PER_BLOCK",
  "pycuda.driver.get_version",
  "pycuda.driver.init",
  "pycuda.driver.mem_alloc",
  "pycuda.driver.memcpy_dtod_async",
  "pycuda.driver.memcpy_htod",
  "pycuda.gpuarray",
  "pycuda.gpuarray.GPUArray",
  "pycuda.gpuarray.GPUArray.__getitem__",
  "pycuda.gpuarray.GPUArray.get",
  "pycuda.gpuarray._memcpy_discontig",
  "pycuda.tools.DeviceData",
  "pyopencl",
  "pyopencl.Buffer",
  "pyopencl.CommandQueue",
  "pyopencl.Context",
  "pyopencl.Device",
  "pyopencl.Program",
  "pyopencl.array",
  "pyopencl.array.Array",
  "pyopencl.array.Array.__getitem__",
  "pyopencl.array.Array.get",
  "pyopencl.enqueue_copy",
  "pyopencl.get_platforms",
  "pyopencl.kernel_work_group_info.WORK_GROUP_SIZE",
  "pyopencl.mem_flags.READ_WRITE",
  "random.choice",
  "re",
  "re.search",
  "reikna.algorithms.PureParallel.from_trf",
  "reikna.cluda.Module.create",
  "reikna.cluda.Snippet.create",
  "reikna.core.Type.from_value",
  "reikna.helpers.__init__.Graph",
  "reikna.helpers.__init__.default_strides",
  "reikna.helpers.__init__.log2",
  "reikna.helpers.__init__.make_template",
  "reikna.helpers.__init__.min_buffer_size",
  "reikna.helpers.__init__.product",
  "reikna.helpers.__init__.template_from",
  "reikna.helpers.__init__.wrap_in_tuple",
  "str.lower",
  "str.upper",
  "sys",
  "sys.modules",
  "sys.version_info",
  "tempfile.mkdtemp",
  "traverse",
  "warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "weakref",
  "weakref.ref"
 ],
 "deps": {
  "DummyAllocator": [],
  "KernelParameter": [],
  "__future__": [],
  "adhoc_idgen": [],
  "args": [],
  "bisect": [],
  "collections": [],
  "comp": [],
  "ctype": [],
  "doctest": [],
  "fractions": [],
  "funcsigs": [],
  "functools": [],
  "get_conn": [],
  "get_names": [],
  "inspect": [],
  "itertools": [],
  "kernel_call": [],
  "logging": [],
  "long": [],
  "main_renderable": [],
  "mako": [],
  "math": [],
  "normalize_type": [],
  "numpy": [],
  "operator": [],
  "optimal_transpose": [],
  "os": [],
  "params_container": [],
  "platform": [],
  "polynomial": [],
  "pycuda": [],
  "pyopencl": [],
  "random": [],
  "re": [],
  "reikna": [],
  "str": [],
  "sys": [],
  "tempfile": [],
  "traverse": [],
  "warnings": [],
  "weakref": []
 }
}