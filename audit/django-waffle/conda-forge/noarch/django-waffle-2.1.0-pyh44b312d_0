{
 "bad": [
  "argparse.ArgumentTypeError",
  "decimal.Decimal",
  "django.apps.AppConfig",
  "django.apps.apps.get_model",
  "django.conf.settings",
  "django.conf.settings.AUTH_USER_MODEL",
  "django.conf.settings.DATABASES",
  "django.conf.settings.JINJA_INSTALLED",
  "django.conf.settings.WAFFLE_CACHE_PREFIX",
  "django.conf.urls.url",
  "django.contrib.admin.ModelAdmin",
  "django.contrib.admin.models.CHANGE",
  "django.contrib.admin.models.DELETION",
  "django.contrib.admin.models.LogEntry.objects.create",
  "django.contrib.admin.models.LogEntry.objects.get",
  "django.contrib.admin.site.register",
  "django.contrib.admin.sites.AdminSite",
  "django.contrib.admin.widgets.ManyToManyRawIdWidget",
  "django.contrib.auth.get_user_model",
  "django.contrib.auth.models.AnonymousUser",
  "django.contrib.auth.models.Group",
  "django.contrib.auth.models.Group.DoesNotExist",
  "django.contrib.auth.models.Group.objects.create",
  "django.contrib.auth.models.Group.objects.get",
  "django.contrib.auth.models.Permission.objects.get",
  "django.contrib.auth.models.User.objects.create_user",
  "django.contrib.contenttypes.models.ContentType.objects.get_for_model",
  "django.core.cache.cache.clear",
  "django.core.cache.caches",
  "django.core.exceptions.ImproperlyConfigured",
  "django.core.management.CommandError",
  "django.core.management.base.BaseCommand",
  "django.core.management.base.CommandError",
  "django.core.management.call_command",
  "django.db.connection.queries",
  "django.db.migrations.AlterField",
  "django.db.migrations.AlterModelOptions",
  "django.db.migrations.CreateModel",
  "django.db.migrations.Migration",
  "django.db.migrations.swappable_dependency",
  "django.db.models.AutoField",
  "django.db.models.BooleanField",
  "django.db.models.CharField",
  "django.db.models.DateTimeField",
  "django.db.models.DecimalField",
  "django.db.models.Manager",
  "django.db.models.ManyToManyField",
  "django.db.models.Model",
  "django.db.models.NullBooleanField",
  "django.db.models.Q",
  "django.db.models.TextField",
  "django.db.models.signals.m2m_changed",
  "django.db.router.db_for_write",
  "django.db.transaction",
  "django.db.transaction.atomic",
  "django.db.transaction.on_commit",
  "django.dispatch.receiver",
  "django.get_version",
  "django.http.Http404",
  "django.http.HttpResponse",
  "django.shortcuts.redirect",
  "django.template.Library",
  "django.template.Node",
  "django.template.NodeList",
  "django.template.Template",
  "django.template.TemplateSyntaxError",
  "django.template.base.VariableDoesNotExist",
  "django.template.base.VariableNode",
  "django.template.loader.render_to_string",
  "django.test.RequestFactory",
  "django.test.TestCase",
  "django.test.TransactionTestCase",
  "django.test.utils.TestContextDecorator",
  "django.test.utils.override_settings",
  "django.urls.NoReverseMatch",
  "django.urls.reverse",
  "django.utils.deprecation.MiddlewareMixin",
  "django.utils.encoding.smart_str",
  "django.utils.html.escape",
  "django.utils.timezone.now",
  "django.utils.translation.gettext_lazy",
  "django.views.decorators.cache.never_cache",
  "functools.WRAPPER_ASSIGNMENTS",
  "functools.partial",
  "functools.wraps",
  "hashlib.md5",
  "inner",
  "io.StringIO",
  "jinja2.contextfunction",
  "jinja2.ext.Extension",
  "logging.WARNING",
  "logging.getLogger",
  "mock.patch",
  "mock.patch.object",
  "models.Sample.get",
  "models.Switch.get",
  "random.uniform",
  "test_app.models.Company.objects.create",
  "test_app.models.CompanyAwareFlag",
  "test_app.views.FlagOffView",
  "test_app.views.FlagView",
  "test_app.views.SampleOffView",
  "test_app.views.SampleView",
  "test_app.views.SwitchOffView",
  "test_app.views.SwitchView",
  "test_app.views.flag_in_django",
  "test_app.views.flag_in_jinja",
  "test_app.views.flag_in_view",
  "test_app.views.no_request_context",
  "test_disabled",
  "test_enabled",
  "threading.Event",
  "threading.Thread",
  "unittest.mock.Mock",
  "unittest.skipIf",
  "unittest.skipUnless",
  "view",
  "waffle.VERSION",
  "waffle.__version__",
  "waffle.admin.BaseAdmin",
  "waffle.admin.FlagAdmin",
  "waffle.admin.InformativeManyToManyRawIdWidget",
  "waffle.admin.SampleAdmin",
  "waffle.admin.SwitchAdmin",
  "waffle.admin._add_log_entry",
  "waffle.admin.delete_individually",
  "waffle.admin.disable_for_all",
  "waffle.admin.disable_switches",
  "waffle.admin.enable_for_all",
  "waffle.admin.enable_switches",
  "waffle.decorators.get_response_to_redirect",
  "waffle.defaults",
  "waffle.defaults.MAX_AGE",
  "waffle.flag_is_active",
  "waffle.get_waffle_flag_model",
  "waffle.jinja.flag_helper",
  "waffle.jinja.inline_wafflejs_helper",
  "waffle.management.commands.waffle_flag.UserModel",
  "waffle.management.commands.waffle_switch.on_off_bool",
  "waffle.managers.BaseManager",
  "waffle.managers.FlagManager",
  "waffle.managers.SampleManager",
  "waffle.managers.SwitchManager",
  "waffle.middleware.WaffleMiddleware",
  "waffle.mixins.BaseWaffleMixin",
  "waffle.mixins.WaffleFlagMixin",
  "waffle.mixins.WaffleSampleMixin",
  "waffle.mixins.WaffleSwitchMixin",
  "waffle.models.AbstractBaseFlag",
  "waffle.models.AbstractUserFlag",
  "waffle.models.BaseModel",
  "waffle.models.CACHE_EMPTY",
  "waffle.models.Flag",
  "waffle.models.Flag.objects.create",
  "waffle.models.Sample",
  "waffle.models.Sample.DoesNotExist",
  "waffle.models.Sample.get_all",
  "waffle.models.Sample.objects.count",
  "waffle.models.Sample.objects.create",
  "waffle.models.Sample.objects.filter",
  "waffle.models.Sample.objects.get",
  "waffle.models.Sample.objects.get_by_natural_key",
  "waffle.models.Sample.objects.get_or_create",
  "waffle.models.Sample.objects.iterator",
  "waffle.models.Switch",
  "waffle.models.Switch.DoesNotExist",
  "waffle.models.Switch.get_all",
  "waffle.models.Switch.objects.all",
  "waffle.models.Switch.objects.count",
  "waffle.models.Switch.objects.create",
  "waffle.models.Switch.objects.filter",
  "waffle.models.Switch.objects.get",
  "waffle.models.Switch.objects.get_by_natural_key",
  "waffle.models.Switch.objects.get_or_create",
  "waffle.models.Switch.objects.iterator",
  "waffle.models.logger",
  "waffle.models.set_flag",
  "waffle.sample_is_active",
  "waffle.switch_is_active",
  "waffle.templatetags.waffle_tags.InlineWaffleJSNode",
  "waffle.templatetags.waffle_tags.WaffleNode",
  "waffle.templatetags.waffle_tags.register",
  "waffle.tests.base.TestCase",
  "waffle.tests.test_admin.FakeRequest",
  "waffle.tests.test_admin.Flag",
  "waffle.tests.test_admin.django_version",
  "waffle.tests.test_admin.skip_if_admin_permissions_not_available",
  "waffle.tests.test_middleware.get",
  "waffle.tests.test_mixin.get",
  "waffle.tests.test_mixin.process_request",
  "waffle.tests.test_templates.get",
  "waffle.tests.test_templates.process_request",
  "waffle.tests.test_testutils.OverrideFlagOnClassTestCase",
  "waffle.tests.test_testutils.OverrideFlagOnClassTestsMixin",
  "waffle.tests.test_testutils.OverrideFlagTestsMixin",
  "waffle.tests.test_testutils.OverrideSampleOnClassTestCase",
  "waffle.tests.test_testutils.OverrideSampleOnClassTestsMixin",
  "waffle.tests.test_testutils.OverrideSampleTestsMixin",
  "waffle.tests.test_testutils.OverrideSwitchMixin",
  "waffle.tests.test_testutils.OverrideSwitchOnClassTestCase",
  "waffle.tests.test_testutils.OverrideSwitchOnClassTestsMixin",
  "waffle.tests.test_testutils.req",
  "waffle.tests.test_waffle.DATABASES",
  "waffle.tests.test_waffle.TransactionTestMixin",
  "waffle.tests.test_waffle.get",
  "waffle.tests.test_waffle.process_request",
  "waffle.tests.test_waffle.random",
  "waffle.testutils._overrider",
  "waffle.testutils.override_flag",
  "waffle.testutils.override_sample",
  "waffle.testutils.override_switch",
  "waffle.utils.get_cache",
  "waffle.utils.get_setting",
  "waffle.utils.keyfmt",
  "waffle.views._generate_waffle_js",
  "waffle.views.wafflejs"
 ],
 "deps": {
  "argparse": [],
  "decimal": [],
  "django": [],
  "functools": [],
  "hashlib": [],
  "inner": [],
  "io": [],
  "jinja2": [],
  "logging": [],
  "mock": [],
  "models": [],
  "random": [],
  "test_app": [],
  "test_disabled": [],
  "test_enabled": [],
  "threading": [],
  "unittest": [],
  "view": [],
  "waffle": []
 }
}