{
 "bad": [
  "Mykytea.Mykytea",
  "abc.ABC",
  "abc.abstractmethod",
  "apex.amp.initialize",
  "apex.amp.master_params",
  "apex.amp.scale_loss",
  "apex.normalization.FusedLayerNorm",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.OrderedDict.fromkeys",
  "collections.UserDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "comet_ml.Experiment",
  "comet_ml.OfflineExperiment",
  "comet_ml.config.get_global_experiment",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "csv.DictReader",
  "csv.DictWriter",
  "csv.reader",
  "csv.writer",
  "dataclasses.MISSING",
  "datasets.Dataset",
  "datasets.__version__",
  "datasets.load_dataset",
  "datetime.datetime.date",
  "datetime.datetime.now",
  "datetime.datetime.time",
  "distutils.util.strtobool",
  "emoji.demojize",
  "enum.Enum",
  "fairseq.__version__",
  "fairseq.models.roberta.RobertaModel.from_pretrained",
  "fairseq.modules.TransformerSentenceEncoderLayer",
  "faiss.IndexHNSWFlat",
  "faiss.__version__",
  "faiss.read_index",
  "fastapi.Body",
  "fastapi.FastAPI",
  "fastapi.HTTPException",
  "filelock.FileLock",
  "fnmatch.filter",
  "fugashi.GenericTagger",
  "functools.lru_cache",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "getpass.getpass",
  "git.Repo",
  "glob.glob",
  "h5py.File",
  "hashlib.sha256",
  "html.entities.name2codepoint.get",
  "inspect.signature",
  "inspect.stack",
  "io.BufferedReader",
  "io.StringIO",
  "ipadic.DICDIR",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.count",
  "json.JSONDecodeError",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "keras2onnx.__version__",
  "keras2onnx.convert_keras",
  "keras2onnx.save_model",
  "linecache.getline",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.Handler",
  "logging.INFO",
  "logging.Logger",
  "logging.NOTSET",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.basicConfig",
  "logging.getLogger",
  "math.ceil",
  "math.cos",
  "math.exp",
  "math.floor",
  "math.log",
  "math.pi",
  "math.pow",
  "math.sqrt",
  "multiprocessing.Pipe",
  "multiprocessing.Pool",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "multiprocessing.connection.Connection",
  "multiprocessing.cpu_count",
  "numpy.abs",
  "numpy.allclose",
  "numpy.amax",
  "numpy.append",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argpartition",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.cumsum",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.float32",
  "numpy.hstack",
  "numpy.lcm",
  "numpy.load",
  "numpy.log",
  "numpy.matmul",
  "numpy.mean",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.power",
  "numpy.prod",
  "numpy.put",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.sin",
  "numpy.split",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.transpose",
  "numpy.tril",
  "numpy.triu",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "onnxruntime.InferenceSession",
  "onnxruntime.SessionOptions",
  "onnxruntime.__version__",
  "onnxruntime.capi.onnxruntime_pybind11_state.RuntimeException",
  "onnxruntime.quantization.QuantizationMode.IntegerOps",
  "onnxruntime.quantization.quantize",
  "operator.mul",
  "optuna.TrialPruned",
  "optuna.create_study",
  "os.DirEntry",
  "os.environ",
  "os.environ.get",
  "os.fstat",
  "os.getcwd",
  "os.getenv",
  "os.getpid",
  "os.kill",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.extsep.join",
  "os.path.getmtime",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.replace",
  "os.scandir",
  "os.sep",
  "os.stat",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.read_csv",
  "pandas.to_datetime",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dump",
  "pickle.load",
  "platform.architecture",
  "platform.platform",
  "platform.processor",
  "platform.python_version",
  "platform.system",
  "pydantic.BaseModel",
  "pythainlp.tokenize.word_tokenize",
  "pytorch_lightning.LightningModule",
  "random.Random",
  "random.randint",
  "random.random",
  "random.sample",
  "random.seed",
  "random.uniform",
  "ray.tune.CLIReporter",
  "ray.tune.checkpoint_dir",
  "ray.tune.choice",
  "ray.tune.get_trial_id",
  "ray.tune.loguniform",
  "ray.tune.report",
  "ray.tune.run",
  "ray.tune.schedulers.ASHAScheduler",
  "ray.tune.schedulers.HyperBandForBOHB",
  "ray.tune.schedulers.MedianStoppingRule",
  "ray.tune.schedulers.PopulationBasedTraining",
  "ray.tune.uniform",
  "re.M",
  "re.UNICODE",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.fullmatch",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "regex.I",
  "regex.UNICODE",
  "regex.VERBOSE",
  "requests.delete",
  "requests.get",
  "requests.head",
  "requests.post",
  "requests.put",
  "sacremoses.MosesDetokenizer",
  "sacremoses.MosesPunctNormalizer",
  "sacremoses.MosesTokenizer",
  "scipy.stats.pearsonr",
  "scipy.stats.spearmanr",
  "shutil.copyfile",
  "shutil.rmtree",
  "signal.SIGKILL",
  "six.binary_type",
  "six.text_type",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.matthews_corrcoef",
  "socket.gethostname",
  "string.punctuation",
  "sys.argv",
  "sys.maxsize",
  "sys.modules",
  "sys.modules.word_tokenize",
  "sys.platform",
  "sys.settrace",
  "sys.stderr",
  "sys.stdin",
  "sys.stdout",
  "sys.version.split",
  "tarfile.is_tarfile",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "tensorboardX.SummaryWriter",
  "tensorflow.Session",
  "tensorflow.Tensor",
  "tensorflow.TensorShape",
  "tensorflow.Variable",
  "tensorflow.VariableAggregation.ONLY_FIRST_REPLICA",
  "tensorflow.VariableSynchronization.ON_READ",
  "tensorflow.__version__",
  "tensorflow.argsort",
  "tensorflow.bfloat16",
  "tensorflow.bool",
  "tensorflow.boolean_mask",
  "tensorflow.broadcast_to",
  "tensorflow.cast",
  "tensorflow.clip_by_value",
  "tensorflow.compat.v1.Session",
  "tensorflow.compat.v1.disable_eager_execution",
  "tensorflow.compat.v1.global_variables_initializer",
  "tensorflow.compat.v1.variable_scope",
  "tensorflow.concat",
  "tensorflow.cond",
  "tensorflow.config.experimental.set_memory_growth",
  "tensorflow.config.experimental.set_visible_devices",
  "tensorflow.config.experimental_connect_to_cluster",
  "tensorflow.config.list_physical_devices",
  "tensorflow.config.optimizer.set_jit",
  "tensorflow.constant",
  "tensorflow.control_dependencies",
  "tensorflow.convert_to_tensor",
  "tensorflow.cos",
  "tensorflow.data.Dataset",
  "tensorflow.data.Dataset.from_generator",
  "tensorflow.data.experimental.AUTOTUNE",
  "tensorflow.data.experimental.cardinality",
  "tensorflow.debugging.assert_equal",
  "tensorflow.debugging.assert_greater_equal",
  "tensorflow.device",
  "tensorflow.distribute.MirroredStrategy",
  "tensorflow.distribute.OneDeviceStrategy",
  "tensorflow.distribute.cluster_resolver.TPUClusterResolver",
  "tensorflow.distribute.experimental.TPUStrategy",
  "tensorflow.dtypes.as_dtype",
  "tensorflow.dtypes.cast",
  "tensorflow.dtypes.float32",
  "tensorflow.dtypes.int32",
  "tensorflow.einsum",
  "tensorflow.equal",
  "tensorflow.expand_dims",
  "tensorflow.eye",
  "tensorflow.fill",
  "tensorflow.float16",
  "tensorflow.float32",
  "tensorflow.function",
  "tensorflow.gather",
  "tensorflow.gather_nd",
  "tensorflow.get_variable",
  "tensorflow.gradients",
  "tensorflow.identity",
  "tensorflow.initializers.TruncatedNormal",
  "tensorflow.int32",
  "tensorflow.int64",
  "tensorflow.is_tensor",
  "tensorflow.keras.Model",
  "tensorflow.keras.activations.relu",
  "tensorflow.keras.activations.swish",
  "tensorflow.keras.activations.tanh",
  "tensorflow.keras.backend.set_value",
  "tensorflow.keras.initializers.TruncatedNormal",
  "tensorflow.keras.layers.Activation",
  "tensorflow.keras.layers.Dense",
  "tensorflow.keras.layers.Dropout",
  "tensorflow.keras.layers.Embedding",
  "tensorflow.keras.layers.Layer",
  "tensorflow.keras.layers.LayerNormalization",
  "tensorflow.keras.losses.Huber",
  "tensorflow.keras.losses.MeanSquaredError",
  "tensorflow.keras.losses.Reduction.NONE",
  "tensorflow.keras.losses.SparseCategoricalCrossentropy",
  "tensorflow.keras.metrics.Sum",
  "tensorflow.keras.mixed_precision.experimental.Policy",
  "tensorflow.keras.mixed_precision.experimental.set_policy",
  "tensorflow.keras.optimizers.Adam",
  "tensorflow.keras.optimizers.Optimizer",
  "tensorflow.keras.optimizers.schedules.LearningRateSchedule",
  "tensorflow.keras.optimizers.schedules.PolynomialDecay",
  "tensorflow.keras.utils.register_keras_serializable",
  "tensorflow.less",
  "tensorflow.less_equal",
  "tensorflow.linalg.band_part",
  "tensorflow.logical_not",
  "tensorflow.logical_or",
  "tensorflow.math.abs",
  "tensorflow.math.argmax",
  "tensorflow.math.cumsum",
  "tensorflow.math.divide",
  "tensorflow.math.erf",
  "tensorflow.math.greater",
  "tensorflow.math.less",
  "tensorflow.math.log",
  "tensorflow.math.logical_not",
  "tensorflow.math.maximum",
  "tensorflow.math.minimum",
  "tensorflow.math.multiply",
  "tensorflow.math.not_equal",
  "tensorflow.math.pow",
  "tensorflow.math.reduce_any",
  "tensorflow.math.reduce_max",
  "tensorflow.math.reduce_mean",
  "tensorflow.math.reduce_min",
  "tensorflow.math.rsqrt",
  "tensorflow.math.softplus",
  "tensorflow.math.sqrt",
  "tensorflow.math.square",
  "tensorflow.math.top_k",
  "tensorflow.matmul",
  "tensorflow.matrix_band_part",
  "tensorflow.minimum",
  "tensorflow.multiply",
  "tensorflow.name_scope",
  "tensorflow.newaxis",
  "tensorflow.nn.avg_pool1d",
  "tensorflow.nn.log_softmax",
  "tensorflow.nn.max_pool1d",
  "tensorflow.nn.relu",
  "tensorflow.nn.softmax",
  "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.nn.top_k",
  "tensorflow.no_op",
  "tensorflow.not_equal",
  "tensorflow.one_hot",
  "tensorflow.ones",
  "tensorflow.ones_like",
  "tensorflow.pad",
  "tensorflow.pow",
  "tensorflow.random.categorical",
  "tensorflow.random.set_seed",
  "tensorflow.random.uniform",
  "tensorflow.range",
  "tensorflow.reduce_all",
  "tensorflow.reduce_max",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_min",
  "tensorflow.reduce_sum",
  "tensorflow.repeat",
  "tensorflow.reset_default_graph",
  "tensorflow.reshape",
  "tensorflow.reverse",
  "tensorflow.roll",
  "tensorflow.scatter_nd",
  "tensorflow.shape",
  "tensorflow.signal.frame",
  "tensorflow.sin",
  "tensorflow.slice",
  "tensorflow.split",
  "tensorflow.sqrt",
  "tensorflow.squeeze",
  "tensorflow.stack",
  "tensorflow.stop_gradient",
  "tensorflow.string",
  "tensorflow.summary.SummaryWriter",
  "tensorflow.summary.create_file_writer",
  "tensorflow.summary.experimental.set_step",
  "tensorflow.summary.scalar",
  "tensorflow.summary.text",
  "tensorflow.summary.trace_export",
  "tensorflow.summary.trace_on",
  "tensorflow.tanh",
  "tensorflow.tensor_scatter_nd_update",
  "tensorflow.test.is_gpu_available",
  "tensorflow.tile",
  "tensorflow.tpu.experimental.initialize_tpu_system",
  "tensorflow.train.Checkpoint",
  "tensorflow.train.CheckpointManager",
  "tensorflow.train.Saver",
  "tensorflow.train.list_variables",
  "tensorflow.train.load_variable",
  "tensorflow.trainable_variables",
  "tensorflow.transpose",
  "tensorflow.unstack",
  "tensorflow.variables_initializer",
  "tensorflow.version.VERSION",
  "tensorflow.where",
  "tensorflow.zeros",
  "tensorflow.zeros_initializer",
  "tensorflow.zeros_like",
  "tensorflow_hub.Module",
  "threading.Lock",
  "time.strftime",
  "time.time",
  "timeit.repeat",
  "timeout_decorator.timeout",
  "tokenizers.AddedToken",
  "tokenizers.BertWordPieceTokenizer",
  "tokenizers.ByteLevelBPETokenizer",
  "tokenizers.CharBPETokenizer",
  "tokenizers.Encoding",
  "tokenizers.Tokenizer",
  "tokenizers.decoders.Decoder",
  "tokenizers.implementations.BaseTokenizer",
  "tokenizers.models.WordLevel",
  "tokenizers.normalizers.Lowercase",
  "tokenizers.normalizers.Sequence",
  "tokenizers.normalizers.Strip",
  "tokenizers.pre_tokenizers.CharDelimiterSplit",
  "tokenizers.pre_tokenizers.WhitespaceSplit",
  "tokenizers.processors.BertProcessing",
  "tokenizers.processors.RobertaProcessing",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.Size",
  "torch.Tensor",
  "torch.__version__",
  "torch.abs",
  "torch.addmm",
  "torch.all",
  "torch.allclose",
  "torch.arange",
  "torch.argmax",
  "torch.argsort",
  "torch.bernoulli",
  "torch.bfloat16",
  "torch.bmm",
  "torch.bool",
  "torch.cat",
  "torch.chunk",
  "torch.cos",
  "torch.cuda.amp.GradScaler",
  "torch.cuda.amp.autocast",
  "torch.cuda.default_generators",
  "torch.cuda.default_generators.seed",
  "torch.cuda.manual_seed_all",
  "torch.cumsum",
  "torch.device",
  "torch.distributed.all_gather",
  "torch.distributed.barrier",
  "torch.distributed.get_rank",
  "torch.distributed.get_world_size",
  "torch.distributed.init_process_group",
  "torch.dtype",
  "torch.einsum",
  "torch.empty",
  "torch.enable_grad",
  "torch.eq",
  "torch.erf",
  "torch.exp",
  "torch.eye",
  "torch.flatten",
  "torch.float",
  "torch.float16",
  "torch.float32",
  "torch.from_numpy",
  "torch.full",
  "torch.full_like",
  "torch.gather",
  "torch.ge",
  "torch.ger",
  "torch.index_select",
  "torch.int64",
  "torch.load",
  "torch.log",
  "torch.log_softmax",
  "torch.logsumexp",
  "torch.long",
  "torch.manual_seed",
  "torch.masked_fill",
  "torch.matmul",
  "torch.max",
  "torch.mean",
  "torch.min",
  "torch.mm",
  "torch.multinomial",
  "torch.ne",
  "torch.nn.AdaptiveLogSoftmaxWithLoss",
  "torch.nn.BCEWithLogitsLoss",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.DataParallel",
  "torch.nn.Dropout",
  "torch.nn.Embedding",
  "torch.nn.Identity",
  "torch.nn.LayerNorm",
  "torch.nn.Linear",
  "torch.nn.MSELoss",
  "torch.nn.Module",
  "torch.nn.ModuleDict",
  "torch.nn.ModuleList",
  "torch.nn.Parameter",
  "torch.nn.ParameterList",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.nn.SmoothL1Loss",
  "torch.nn.Softmax",
  "torch.nn.Tanh",
  "torch.nn.functional.avg_pool2d",
  "torch.nn.functional.max_pool2d",
  "torch.nn.functional.one_hot",
  "torch.nn.functional.softplus",
  "torch.nn.modules.Module",
  "torch.nn.parallel.DistributedDataParallel",
  "torch.nn.utils.clip_grad_norm_",
  "torch.no_grad",
  "torch.nonzero",
  "torch.ones",
  "torch.ones_like",
  "torch.optim.Optimizer",
  "torch.pow",
  "torch.rand",
  "torch.randint",
  "torch.randn",
  "torch.randperm",
  "torch.repeat_interleave",
  "torch.reshape",
  "torch.rsqrt",
  "torch.save",
  "torch.seed",
  "torch.sigmoid",
  "torch.sin",
  "torch.softmax",
  "torch.sort",
  "torch.sparse.LongTensor",
  "torch.split",
  "torch.sqrt",
  "torch.stack",
  "torch.sum",
  "torch.tanh",
  "torch.topk",
  "torch.tril",
  "torch.triu",
  "torch.uint8",
  "torch.unique",
  "torch.utils.data.IterableDataset",
  "torch.utils.data.TensorDataset",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "torch_xla.core.xla_model.get_ordinal",
  "torch_xla.core.xla_model.is_master_ordinal",
  "torch_xla.core.xla_model.master_print",
  "torch_xla.core.xla_model.mesh_reduce",
  "torch_xla.core.xla_model.optimizer_step",
  "torch_xla.core.xla_model.rendezvous",
  "torch_xla.core.xla_model.save",
  "torch_xla.core.xla_model.send_cpu_data_to_device",
  "torch_xla.core.xla_model.xla_device",
  "torch_xla.core.xla_model.xrt_world_size",
  "torch_xla.debug.metrics.metrics_report",
  "torch_xla.distributed.parallel_loader.ParallelLoader",
  "tqdm.tqdm",
  "transformers.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.AlbertConfig",
  "transformers.AlbertConfig.from_json_file",
  "transformers.AlbertForPreTraining",
  "transformers.AutoConfig.from_pretrained",
  "transformers.AutoModel.from_pretrained",
  "transformers.AutoTokenizer.from_pretrained",
  "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.BartConfig.from_pretrained",
  "transformers.BartForConditionalGeneration",
  "transformers.BartForSequenceClassification",
  "transformers.BartModel",
  "transformers.BartTokenizer.from_pretrained",
  "transformers.BertConfig",
  "transformers.BertConfig.from_json_file",
  "transformers.BertConfig.from_pretrained",
  "transformers.BertConfig.get_config_dict",
  "transformers.BertForPreTraining",
  "transformers.BertForQuestionAnswering",
  "transformers.BertForSequenceClassification",
  "transformers.BertGenerationConfig",
  "transformers.BertGenerationDecoder",
  "transformers.BertGenerationEncoder",
  "transformers.BertModel",
  "transformers.BertModel.from_pretrained",
  "transformers.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.CONFIG_NAME",
  "transformers.CTRLConfig",
  "transformers.CTRLLMHeadModel",
  "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.CamembertConfig",
  "transformers.CamembertForMaskedLM",
  "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.DPRConfig",
  "transformers.DPRContextEncoder",
  "transformers.DPRQuestionEncoder",
  "transformers.DPRReader",
  "transformers.DistilBertConfig",
  "transformers.DistilBertForMaskedLM",
  "transformers.DistilBertForQuestionAnswering",
  "transformers.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.ElectraConfig",
  "transformers.ElectraConfig.from_json_file",
  "transformers.ElectraForMaskedLM",
  "transformers.ElectraForPreTraining",
  "transformers.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.FlaubertConfig",
  "transformers.FlaubertWithLMHeadModel",
  "transformers.FunnelConfig.from_json_file",
  "transformers.FunnelForPreTraining",
  "transformers.GPT2Config",
  "transformers.GPT2Config.from_json_file",
  "transformers.GPT2LMHeadModel",
  "transformers.GPT2Model",
  "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.LxmertConfig",
  "transformers.LxmertConfig.from_json_file",
  "transformers.LxmertForPreTraining",
  "transformers.LxmertVisualFeatureEncoder",
  "transformers.MBartConfig.from_pretrained",
  "transformers.MarianConfig",
  "transformers.MarianConfig.from_pretrained",
  "transformers.MarianMTModel",
  "transformers.MarianTokenizer.from_pretrained",
  "transformers.MobileBertConfig.from_json_file",
  "transformers.MobileBertForPreTraining",
  "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.OpenAIGPTConfig",
  "transformers.OpenAIGPTConfig.from_json_file",
  "transformers.OpenAIGPTLMHeadModel",
  "transformers.OpenAIGPTModel",
  "transformers.PegasusConfig",
  "transformers.PegasusForConditionalGeneration",
  "transformers.PegasusTokenizer.from_pretrained",
  "transformers.Pipeline",
  "transformers.PretrainedConfig",
  "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.ReformerConfig.from_json_file",
  "transformers.ReformerModelWithLMHead",
  "transformers.RobertaConfig",
  "transformers.RobertaForMaskedLM",
  "transformers.RobertaForSequenceClassification",
  "transformers.SingleSentenceClassificationProcessor.create_from_csv",
  "transformers.T5Config",
  "transformers.T5Config.from_json_file",
  "transformers.T5ForConditionalGeneration",
  "transformers.T5Model",
  "transformers.T5_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.TFAlbertForPreTraining",
  "transformers.TFBertForPreTraining",
  "transformers.TFBertForQuestionAnswering",
  "transformers.TFBertForSequenceClassification",
  "transformers.TFCTRLLMHeadModel",
  "transformers.TFCamembertForMaskedLM",
  "transformers.TFDistilBertForMaskedLM",
  "transformers.TFDistilBertForQuestionAnswering",
  "transformers.TFElectraForPreTraining",
  "transformers.TFFlaubertWithLMHeadModel",
  "transformers.TFGPT2LMHeadModel",
  "transformers.TFLxmertForPreTraining",
  "transformers.TFLxmertVisualFeatureEncoder",
  "transformers.TFOpenAIGPTLMHeadModel",
  "transformers.TFRobertaForMaskedLM",
  "transformers.TFRobertaForSequenceClassification",
  "transformers.TFT5ForConditionalGeneration",
  "transformers.TFTransfoXLLMHeadModel",
  "transformers.TFXLMRobertaForMaskedLM",
  "transformers.TFXLMWithLMHeadModel",
  "transformers.TFXLNetLMHeadModel",
  "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.TextClassificationPipeline.from_pretrained",
  "transformers.TransfoXLConfig",
  "transformers.TransfoXLConfig.from_json_file",
  "transformers.TransfoXLLMHeadModel",
  "transformers.WEIGHTS_NAME",
  "transformers.XLMConfig",
  "transformers.XLMRobertaConfig",
  "transformers.XLMRobertaForMaskedLM",
  "transformers.XLMWithLMHeadModel",
  "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP",
  "transformers.XLNetConfig",
  "transformers.XLNetConfig.from_json_file",
  "transformers.XLNetForQuestionAnswering",
  "transformers.XLNetForSequenceClassification",
  "transformers.XLNetLMHeadModel",
  "transformers.__version__",
  "transformers.cached_path",
  "transformers.configuration_fsmt.FSMTConfig.from_pretrained",
  "transformers.configuration_pegasus.DEFAULTS.copy",
  "transformers.configuration_pegasus.task_specific_params",
  "transformers.convert_lxmert_original_pytorch_checkpoint_to_pytorch.convert_lxmert_checkpoint_to_pytorch",
  "transformers.file_utils.WEIGHTS_NAME",
  "transformers.hf_api.HfFolder.path_token",
  "transformers.is_tf_available",
  "transformers.is_torch_available",
  "transformers.load_pytorch_checkpoint_in_tf2_model",
  "transformers.load_tf_weights_in_albert",
  "transformers.load_tf_weights_in_bert",
  "transformers.load_tf_weights_in_bert_generation",
  "transformers.load_tf_weights_in_electra",
  "transformers.load_tf_weights_in_funnel",
  "transformers.load_tf_weights_in_gpt2",
  "transformers.load_tf_weights_in_lxmert",
  "transformers.load_tf_weights_in_mobilebert",
  "transformers.load_tf_weights_in_openai_gpt",
  "transformers.load_tf_weights_in_t5",
  "transformers.load_tf_weights_in_transfo_xl",
  "transformers.load_tf_weights_in_xlnet",
  "transformers.logging.set_verbosity_info",
  "transformers.logging.set_verbosity_warning",
  "transformers.modeling_longformer.LongformerForQuestionAnswering.from_pretrained",
  "transformers.modeling_longformer.LongformerModel.from_pretrained",
  "transformers.modeling_roberta.RobertaConfig",
  "transformers.pipelines.PipelineDataFormat.SUPPORTED_FORMATS",
  "transformers.pipelines.SUPPORTED_TASKS.keys",
  "transformers.tokenization_fsmt.VOCAB_FILES_NAMES",
  "transformers.tokenization_transfo_xl.CORPUS_NAME",
  "transformers.tokenization_transfo_xl.Corpus",
  "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES",
  "transformers.tokenization_transfo_xl.Vocab",
  "transformers.tokenization_utils.BatchEncoding",
  "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE",
  "transformers.tokenization_xlm.VOCAB_FILES_NAMES",
  "typing.TYPE_CHECKING",
  "unicodedata.category",
  "unicodedata.combining",
  "unicodedata.normalize",
  "unidic.DICDIR",
  "unidic_lite.DICDIR",
  "unittest.TestCase",
  "unittest.mock.patch.dict",
  "unittest.skip",
  "urllib.parse.urlparse",
  "uuid.UUID",
  "uuid.uuid4",
  "uvicorn.run",
  "wandb.api.api_key",
  "wandb.termwarn",
  "warnings.catch_warnings",
  "warnings.warn",
  "yaml.BaseLoader",
  "zipfile.ZipFile",
  "zipfile.is_zipfile"
 ],
 "deps": [
  [
   "argparse-1.4.0-py26_0"
  ],
  [
   "dataclasses-0.5-py_0",
   "dataclasses-0.6-py36_1",
   "dataclasses-0.6-py_0",
   "dataclasses-0.7-pyhe4b4509_6",
   "google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core-2.0.1-pyh9f0ad1d_0",
   "google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0"
  ],
  [
   "fairseq-0.10.1-py38h51da96c_0",
   "fairseq-0.10.2-py38h51da96c_0"
  ],
  [
   "fastapi-0.35.0-py_0",
   "fastapi-0.36.0-py_0",
   "fastapi-0.37.0-py_0",
   "fastapi-0.38.1-py_0",
   "fastapi-0.42.0-py_0",
   "fastapi-0.43.0-py_0",
   "fastapi-0.44.1-py_0",
   "fastapi-0.45.0-py_0",
   "fastapi-0.46.0-py_0",
   "fastapi-0.52.0-py_0",
   "fastapi-0.54.1-py_0",
   "fastapi-0.54.2-py_0",
   "fastapi-0.55.0-py_0",
   "fastapi-0.56.0-py_0",
   "fastapi-0.56.1-py_0",
   "fastapi-0.57.0-py_0",
   "fastapi-0.58.0-py_0",
   "fastapi-0.58.1-py_0",
   "fastapi-0.59.0-py_0",
   "fastapi-0.60.0-py_0",
   "fastapi-0.60.2-py_0",
   "fastapi-0.61.0-py_0",
   "fastapi-0.61.1-py_0",
   "fastapi-0.61.2-pyhd8ed1ab_0",
   "fastapi-0.61.2-pyhd8ed1ab_1",
   "fastapi-0.62.0-pyhd8ed1ab_0",
   "fastapi-0.63.0-pyhd8ed1ab_0"
  ],
  [
   "ftfy-5.1-py36_0",
   "ftfy-5.1.1-py35_0",
   "ftfy-5.3.0-py35_0",
   "ftfy-5.3.0-py36_0",
   "ftfy-5.5.0-py36_1000",
   "ftfy-5.5.1-py_0",
   "ftfy-5.8-pyhd8ed1ab_0"
  ],
  [
   "jieba3k-0.35.1-py36_1",
   "jieba3k-0.35.1-py36h9f0ad1d_1002",
   "jieba3k-0.35.1-py36h9f0ad1d_1003",
   "jieba3k-0.35.1-py36hc560c46_1002",
   "jieba3k-0.35.1-py37h89c1867_1004",
   "jieba3k-0.35.1-py37hc8dfbb8_1002",
   "jieba3k-0.35.1-py38_1001",
   "jieba3k-0.35.1-py38h32f6830_1002",
   "jieba3k-0.35.1-py38h32f6830_1003"
  ],
  [],
  [
   "packaging-16.7-py27_0",
   "packaging-16.7-py34_0",
   "packaging-16.8-py36_0",
   "packaging-17.1-py_0",
   "packaging-18.0-py_0",
   "packaging-19.0-py_0",
   "packaging-19.2-py_0",
   "packaging-20.0-py_0",
   "packaging-20.1-py_0",
   "packaging-20.4-pyh9f0ad1d_0",
   "packaging-20.7-pyhd3deb0d_0",
   "packaging-20.8-pyhd3deb0d_0",
   "packaging-20.9-pyh44b312d_0"
  ],
  [
   "pathlib-1.0.1-py27h8c360ce_2",
   "pathlib-1.0.1-py34_0",
   "pathlib-1.0.1-py36_0",
   "pathlib-1.0.1-py_1"
  ],
  [
   "psutil-4.1.0-py34_0",
   "psutil-4.3.0-py27_0",
   "psutil-4.3.0-py34_0",
   "psutil-4.3.0-py35_0",
   "psutil-4.3.1-py35_0",
   "psutil-4.4.2-py27_0",
   "psutil-5.0.1-py27_0",
   "psutil-5.3.1-py27_0",
   "psutil-5.4.0-py35_0",
   "psutil-5.6.1-py27h14c3975_0",
   "psutil-5.6.1-py36h14c3975_0",
   "psutil-5.6.3-py36h516909a_0",
   "psutil-5.6.3-py37h516909a_0",
   "psutil-5.6.4-py27h516909a_0",
   "psutil-5.6.4-py36h516909a_0",
   "psutil-5.6.4-py37h516909a_0",
   "psutil-5.6.5-py27h516909a_0",
   "psutil-5.6.5-py38h516909a_0"
  ],
  [
   "py3nvml-0.2.5-py27h8c360ce_1",
   "py3nvml-0.2.5-py36h9f0ad1d_1",
   "py3nvml-0.2.5-py36hc560c46_1",
   "py3nvml-0.2.5-py39hde42818_2"
  ],
  [
   "regex-2016.03.31-py34_0",
   "regex-2016.03.31-py35_0",
   "regex-2016.04.25-py35_0",
   "regex-2016.05.15-py34_0",
   "regex-2016.08.27-py34_0",
   "regex-2016.09.22-py34_0",
   "regex-2016.10.22-py35_0",
   "regex-2017.01.17-py35_0",
   "regex-2017.02.08-py36_0",
   "regex-2017.04.23-py35_0",
   "regex-2017.04.23-py36_0",
   "regex-2017.06.07-py35_0",
   "regex-2017.06.07-py36_0",
   "regex-2017.07.11-py36_0",
   "regex-2017.07.28-py36h14c3975_1",
   "regex-2017.09.23-py35_0",
   "regex-2017.09.23-py36_0",
   "regex-2017.11.09-py36_0",
   "regex-2017.12.05-py35_0",
   "regex-2018.01.10-py35_0",
   "regex-2018.01.10-py36h14c3975_1000",
   "regex-2018.01.10-py36h470a237_0",
   "regex-2018.02.21-py35_0",
   "regex-2018.02.21-py36_0",
   "regex-2018.06.06-py36_0",
   "regex-2018.06.09-py36_0",
   "regex-2018.06.09-py36h470a237_0",
   "regex-2018.06.21-py35h470a237_0",
   "regex-2018.07.11-py36h470a237_0",
   "regex-2018.07.11-py37h470a237_0",
   "regex-2018.08.17-py35h470a237_0",
   "regex-2018.08.29-py36h470a237_0",
   "regex-2018.08.29-py37h14c3975_1000",
   "regex-2018.11.02-py36h14c3975_1000",
   "regex-2018.11.06-py37h14c3975_1000",
   "regex-2018.11.07-py37h470a237_0",
   "regex-2018.11.22-py36h14c3975_1000",
   "regex-2018.11.22-py37h470a237_0",
   "regex-2019.02.03-py37h14c3975_0",
   "regex-2019.02.05-py37h14c3975_0",
   "regex-2019.02.07-py36h14c3975_0",
   "regex-2019.02.07-py37h14c3975_0"
  ],
  [
   "google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core-2.0.1-pyh9f0ad1d_0",
   "google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "requests-2.11.0-py27_0",
   "requests-2.11.0-py35_0",
   "requests-2.11.1-py27_0",
   "requests-2.11.1-py34_0",
   "requests-2.11.1-py35_0",
   "requests-2.12.0-py27_0",
   "requests-2.12.1-py35_0",
   "requests-2.12.4-py35_0",
   "requests-2.12.4-py36_0",
   "requests-2.13.0-py36_0",
   "requests-2.17.3-py27_0",
   "requests-2.18.1-py35_0",
   "requests-2.18.2-py27_0",
   "requests-2.18.2-py35_0",
   "requests-2.18.2-py36_0",
   "requests-2.18.3-py36_0",
   "requests-2.18.4-py27_0",
   "requests-2.18.4-py36_1",
   "requests-2.19.0-py36_0",
   "requests-2.19.1-py27_0",
   "requests-2.19.1-py27_1",
   "requests-2.19.1-py27_1001",
   "requests-2.19.1-py35_0",
   "requests-2.19.1-py36_1",
   "requests-2.19.1-py36_1001",
   "requests-2.20.1-py36_1000",
   "requests-2.21.0-py27_1000",
   "requests-2.21.0-py37_1000",
   "requests-2.22.0-py27_0",
   "requests-2.22.0-py38_1",
   "requests-2.23.0-py36_0",
   "requests-2.23.0-py36hc560c46_1",
   "requests-2.23.0-py37_0",
   "requests-2.23.0-py37hc8dfbb8_1",
   "requests-2.23.0-py38_0",
   "requests-2.23.0-py38h32f6830_1",
   "requests-2.23.0-pyh8c360ce_2",
   "requests-2.24.0-pyh9f0ad1d_0",
   "requests-2.25.0-pyhd3deb0d_0",
   "requests-2.25.1-pyhd3deb0d_0"
  ],
  [
   "sentencepiece-0.1.91-py36h499bf3f_1",
   "sentencepiece-0.1.91-py36h499bf3f_2",
   "sentencepiece-0.1.91-py36h499bf3f_3",
   "sentencepiece-0.1.91-py36h4ea7e17_4",
   "sentencepiece-0.1.91-py36hdb11119_0",
   "sentencepiece-0.1.91-py37h2527ec5_4",
   "sentencepiece-0.1.91-py37h99015e2_0",
   "sentencepiece-0.1.91-py38hbf85e49_0",
   "sentencepiece-0.1.91-py38hbf85e49_3",
   "sentencepiece-0.1.91-py39h45ac560_3",
   "sentencepiece-0.1.92-py36hdb11119_0",
   "sentencepiece-0.1.92-py37h99015e2_0"
  ],
  [
   "spacy-2.2.0-py36hc9558a2_0",
   "spacy-2.2.1-py36hc9558a2_0",
   "spacy-2.2.1-py37hc9558a2_0",
   "spacy-2.2.2-py36hc9558a2_0",
   "spacy-2.2.2-py37hc9558a2_0",
   "spacy-2.2.3-py27hc9558a2_0",
   "spacy-2.2.3-py36hc9558a2_0",
   "spacy-2.2.3-py37hc9558a2_0",
   "spacy-2.2.4-py36hdb11119_0",
   "spacy-2.2.4-py36hdb11119_1",
   "spacy-2.2.4-py37h99015e2_0",
   "spacy-2.2.4-py38hbf85e49_1",
   "spacy-2.3.0-py36hdb11119_0",
   "spacy-2.3.0-py38hbf85e49_0",
   "spacy-2.3.2-py37hc928c03_1",
   "spacy-2.3.3-py36h8e82bdb_0",
   "spacy-2.3.3-py37he5a615d_0",
   "spacy-2.3.3-py38hf6732f7_0",
   "spacy-2.3.3-py39hcd82cac_0",
   "spacy-2.3.4-py36h8e82bdb_0",
   "spacy-2.3.4-py38hf6732f7_0",
   "spacy-2.3.4-py39hcd82cac_0",
   "spacy-2.3.5-py36h355b2fd_0",
   "spacy-2.3.5-py37h6dcda5c_0",
   "spacy-2.3.5-py39h5472131_0",
   "spacy-3.0.0-py36h355b2fd_0"
  ],
  [
   "starlette-0.10.1-py_0",
   "starlette-0.10.2-py_0",
   "starlette-0.10.3-py_0",
   "starlette-0.10.5-py_0",
   "starlette-0.11.1-py_0",
   "starlette-0.11.2-py_0",
   "starlette-0.11.4-py_0",
   "starlette-0.12.0-py_0",
   "starlette-0.12.1-py_0",
   "starlette-0.12.10-py_0",
   "starlette-0.12.13-py_0",
   "starlette-0.12.2-py_0",
   "starlette-0.12.3-py_0",
   "starlette-0.12.4-py_0",
   "starlette-0.12.5-py_0",
   "starlette-0.12.6-py_0",
   "starlette-0.12.7-py_0",
   "starlette-0.12.8-py_0",
   "starlette-0.12.9-py_0",
   "starlette-0.13.0-py_0",
   "starlette-0.13.1-py_0",
   "starlette-0.13.2-py_0",
   "starlette-0.13.3-py_0",
   "starlette-0.13.4-py_0",
   "starlette-0.13.5-py_0",
   "starlette-0.13.8-py_0",
   "starlette-0.14.1-pyhd8ed1ab_0",
   "starlette-0.14.2-pyhd8ed1ab_0",
   "starlette-0.4.2-py_0",
   "starlette-0.5.4-py_0",
   "starlette-0.5.5-py_0",
   "starlette-0.6.0-py_0",
   "starlette-0.6.1-py_0",
   "starlette-0.6.3-py_0",
   "starlette-0.7.0-py_0",
   "starlette-0.7.1-py_0",
   "starlette-0.8.0-py_0",
   "starlette-0.8.2-py_0",
   "starlette-0.8.4-py_0",
   "starlette-0.9.10-py_0",
   "starlette-0.9.9-py_0",
   "starlette-base-0.13.5-py_2",
   "starlette-base-0.13.6-py_0"
  ],
  [],
  [
   "tokenizers-0.8.0-py36h327c840_1",
   "tokenizers-0.8.0-py36hf1545a4_0",
   "tokenizers-0.8.0-py36hf1545a4_1",
   "tokenizers-0.8.0-py37h4c3b196_1",
   "tokenizers-0.8.0-py38h2cef62f_1",
   "tokenizers-0.8.1-py36hf1545a4_0",
   "tokenizers-0.8.1-py37h4c3b196_0",
   "tokenizers-0.9.3-py36hc84fb85_0",
   "tokenizers-0.9.3-py37h17e0dd7_0",
   "tokenizers-0.9.3-py38h781e378_0",
   "tokenizers-0.9.4-py37h17e0dd7_0",
   "tokenizers-0.9.4-py37h17e0dd7_1",
   "tokenizers-0.9.4-py39h289741d_1"
  ],
  [],
  [
   "tqdm-4.48.1-pyh9f0ad1d_0",
   "tqdm-4.48.2-pyh9f0ad1d_0",
   "tqdm-4.49.0-pyh9f0ad1d_0",
   "tqdm-4.50.0-pyh9f0ad1d_0",
   "tqdm-4.50.1-pyh9f0ad1d_0",
   "tqdm-4.50.2-pyh9f0ad1d_0",
   "tqdm-4.51.0-pyh9f0ad1d_0",
   "tqdm-4.52.0-pyhd3deb0d_0",
   "tqdm-4.53.0-pyhd8ed1ab_1",
   "tqdm-4.54.0-pyhd8ed1ab_0",
   "tqdm-4.54.1-pyhd8ed1ab_0",
   "tqdm-4.54.1-pyhd8ed1ab_1",
   "tqdm-4.55.0-pyhd8ed1ab_0",
   "tqdm-4.55.1-pyhd8ed1ab_0",
   "tqdm-4.55.2-pyhd8ed1ab_0",
   "tqdm-4.56.0-pyhd8ed1ab_0"
  ],
  [
   "transformers-3.3.0-py_0",
   "transformers-3.3.1-py_0",
   "transformers-3.5.1-pyhd8ed1ab_0"
  ],
  [],
  [
   "wandb-0.9.3-pyh9f0ad1d_0",
   "wandb-0.9.4-pyh9f0ad1d_0",
   "wandb-0.9.5-pyh9f0ad1d_0",
   "wandb-0.9.6-pyh9f0ad1d_0",
   "wandb-0.9.7-pyh9f0ad1d_0"
  ],
  [
   "python-wget-3.2-py_0"
  ],
  [
   "google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core-2.0.1-pyh9f0ad1d_0",
   "google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "pyyaml-3.11-py27_0",
   "pyyaml-3.11-py34_0",
   "pyyaml-3.11-py35_0",
   "pyyaml-3.12-py27_1",
   "pyyaml-3.12-py34_0",
   "pyyaml-3.12-py36_0",
   "pyyaml-3.13-py27h516909a_0",
   "pyyaml-3.13-py36h470a237_0",
   "pyyaml-3.13-py36h516909a_0",
   "pyyaml-3.13-py37h470a237_0",
   "pyyaml-3.13-py38h516909a_0",
   "pyyaml-5.1-py27h14c3975_0",
   "pyyaml-5.1-py36h14c3975_0",
   "pyyaml-5.1-py37h14c3975_0",
   "pyyaml-5.1.1-py36h516909a_0",
   "pyyaml-5.1.2-py27h516909a_0",
   "pyyaml-5.1.2-py36h516909a_0",
   "pyyaml-5.1.2-py37h516909a_1",
   "pyyaml-5.2-py38h516909a_0",
   "pyyaml-5.3-py27hdf8410d_1",
   "pyyaml-5.3-py36h516909a_0",
   "pyyaml-5.3-py36h97a6639_1",
   "pyyaml-5.3-py38h516909a_0",
   "pyyaml-5.3.1-py27hdf8410d_0",
   "pyyaml-5.3.1-py36h8c4c3a4_0",
   "pyyaml-5.3.1-py36hd7bf43e_1",
   "pyyaml-5.3.1-py36he6145b8_1",
   "pyyaml-5.3.1-py37h6b43d8f_2",
   "pyyaml-5.3.1-py37h8f50634_0",
   "pyyaml-5.3.1-py38h1e0a361_0",
   "pyyaml-5.3.1-py39h3811e60_2",
   "pyyaml-5.4.1-py37h6b43d8f_0",
   "pyyaml-5.4.1-py38h497a2fe_0"
  ]
 ]
}