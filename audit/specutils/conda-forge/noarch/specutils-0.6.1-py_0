{
 "bad": [
  "Spectrum1D.read",
  "SpectrumList.read",
  "__builtin__._ASTROPY_SETUP_",
  "_find_spectral_axis_column",
  "_find_spectral_column",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "adapter_class",
  "analysis.centroid",
  "analysis.equivalent_width",
  "analysis.fwhm",
  "analysis.fwzi",
  "analysis.gaussian_fwhm",
  "analysis.gaussian_sigma_width",
  "analysis.is_continuum_below_threshold",
  "analysis.line_flux",
  "analysis.snr",
  "analysis.snr_derived",
  "analysis.template_comparison._normalize_for_template_matching",
  "analysis.template_comparison.template_match",
  "analysis.template_comparison.template_redshift",
  "analysis.warn_continuum_below_threshold",
  "asdf.AsdfFile",
  "asdf.extension.AsdfExtension",
  "asdf.tests.helpers.assert_roundtrip_tree",
  "asdf.types.CustomType",
  "asdf.types.ExtensionTypeMeta",
  "asdf.util.filepath_to_url",
  "asdf.yamlutil.custom_tree_to_tagged_tree",
  "asdf.yamlutil.tagged_tree_to_custom_tree",
  "astropy.config.ConfigItem",
  "astropy.config.ConfigNamespace",
  "astropy.config.configuration.ConfigurationDefaultMissingError",
  "astropy.config.configuration.ConfigurationDefaultMissingWarning",
  "astropy.config.configuration.update_default_config",
  "astropy.config.set_temp_cache",
  "astropy.constants.c",
  "astropy.constants.c.to",
  "astropy.convolution.Box1DKernel",
  "astropy.convolution.CustomKernel",
  "astropy.convolution.Gaussian1DKernel",
  "astropy.convolution.Trapezoid1DKernel",
  "astropy.convolution.convolve",
  "astropy.coordinates.FK5",
  "astropy.io.fits.BinTableHDU",
  "astropy.io.fits.HDUList",
  "astropy.io.fits.Header.fromtextfile",
  "astropy.io.fits.PrimaryHDU",
  "astropy.io.fits.getheader",
  "astropy.io.fits.header.Header",
  "astropy.io.fits.open",
  "astropy.io.fits.verify.VerifyWarning",
  "astropy.io.misc.asdf.extension.ASTROPY_SCHEMA_URI_BASE",
  "astropy.io.registry.IORegistryError",
  "astropy.io.registry._readers.clear",
  "astropy.io.registry._readers.items",
  "astropy.io.registry._readers.update",
  "astropy.io.registry.get_formats",
  "astropy.io.registry.identify_format",
  "astropy.io.registry.register_identifier",
  "astropy.io.registry.register_reader",
  "astropy.io.registry.register_writer",
  "astropy.io.registry.unregister_identifier",
  "astropy.io.registry.unregister_reader",
  "astropy.modeling.Model",
  "astropy.modeling.fitting.LevMarLSQFitter",
  "astropy.modeling.models.Chebyshev1D",
  "astropy.modeling.models.Const1D",
  "astropy.modeling.models.Gaussian1D",
  "astropy.modeling.models.Legendre1D",
  "astropy.modeling.models.Linear1D",
  "astropy.modeling.models.Lorentz1D",
  "astropy.modeling.models.MexicanHat1D",
  "astropy.modeling.models.PolynomialModel",
  "astropy.modeling.models.Shift",
  "astropy.modeling.models.Voigt1D",
  "astropy.modeling.polynomial.Chebyshev1D",
  "astropy.modeling.tabular.Tabular1D",
  "astropy.nddata.InverseVariance",
  "astropy.nddata.NDData",
  "astropy.nddata.NDDataRef",
  "astropy.nddata.NDIOMixin",
  "astropy.nddata.NDUncertainty",
  "astropy.nddata.StdDevUncertainty",
  "astropy.nddata.VarianceUncertainty",
  "astropy.nddata.nduncertainty.InverseVariance",
  "astropy.nddata.nduncertainty.StdDevUncertainty",
  "astropy.nddata.nduncertainty.VarianceUncertainty",
  "astropy.stats.funcs.gaussian_sigma_to_fwhm",
  "astropy.stats.mad_std",
  "astropy.table.QTable",
  "astropy.table.Table",
  "astropy.table.Table.read",
  "astropy.tests.helper.assert_quantity_allclose",
  "astropy.tests.helper.enable_deprecations_as_exceptions",
  "astropy.tests.helper.pytest.mark.parametrize",
  "astropy.tests.helper.pytest.raises",
  "astropy.tests.helper.quantity_allclose",
  "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
  "astropy.tests.plugins.display.TESTED_VERSIONS",
  "astropy.tests.runner.TestRunner.make_test_runner_in",
  "astropy.units",
  "astropy.units.AA",
  "astropy.units.AA.to",
  "astropy.units.AB",
  "astropy.units.GHz",
  "astropy.units.Hz",
  "astropy.units.Jy",
  "astropy.units.Jy.to",
  "astropy.units.Quantity",
  "astropy.units.Unit",
  "astropy.units.UnitBase",
  "astropy.units.UnitConversionError",
  "astropy.units.UnitsError",
  "astropy.units.UnitsWarning",
  "astropy.units.W",
  "astropy.units.allclose",
  "astropy.units.angstrom",
  "astropy.units.cm",
  "astropy.units.def_unit",
  "astropy.units.dimensionless_unscaled",
  "astropy.units.doppler_optical",
  "astropy.units.doppler_radio",
  "astropy.units.doppler_relativistic",
  "astropy.units.eV",
  "astropy.units.equivalencies",
  "astropy.units.equivalencies.spectral",
  "astropy.units.equivalencies.spectral_density",
  "astropy.units.erg",
  "astropy.units.km",
  "astropy.units.km.to",
  "astropy.units.m",
  "astropy.units.m.to",
  "astropy.units.mJy",
  "astropy.units.micron",
  "astropy.units.nJy",
  "astropy.units.nm",
  "astropy.units.photon",
  "astropy.units.pix",
  "astropy.units.pixel",
  "astropy.units.s",
  "astropy.units.s.to",
  "astropy.units.set_enabled_equivalencies",
  "astropy.units.spectral",
  "astropy.units.spectral_density",
  "astropy.units.uJy",
  "astropy.units.um",
  "astropy.utils.data.download_file",
  "astropy.utils.decorators.lazyproperty",
  "astropy.utils.exceptions.AstropyUserWarning",
  "astropy.wcs.FITSFixedWarning",
  "astropy.wcs.InvalidSubimageSpecificationError",
  "astropy.wcs.WCS",
  "astropy.wcs.WCSSUB_CELESTIAL",
  "astropy.wcs.WCSSUB_CUBEFACE",
  "astropy.wcs.WCSSUB_LATITUDE",
  "astropy.wcs.WCSSUB_LONGITUDE",
  "astropy.wcs.WCSSUB_SPECTRAL",
  "astropy.wcs.WCSSUB_STOKES",
  "calculate_rms",
  "chebyshev_model",
  "collections.namedtuple",
  "compound",
  "conf.do_continuum_function_check",
  "conftest.remote_access",
  "conftest.remote_data_path",
  "copy.copy",
  "copy.deepcopy",
  "ctype_from_vconv",
  "cubic_spline",
  "datetime.datetime",
  "estimator",
  "extract_spectral_region.extract_region",
  "find_width",
  "fitting.continuum.fit_generic_continuum",
  "fitting.estimate_line_parameters",
  "fitting.find_lines_derivative",
  "fitting.find_lines_threshold",
  "fitting.fit_lines",
  "fluxc_resample",
  "func",
  "func.extensions",
  "function",
  "functools.wraps",
  "g",
  "g1",
  "g1.stddev",
  "g12_fit",
  "g1_fit",
  "g2",
  "g2.stddev",
  "g2_fit",
  "g3",
  "g3.stddev",
  "g4",
  "g_fit",
  "g_fit.bounds",
  "g_fit.mean",
  "g_fit.name",
  "g_fit.tied",
  "gl_fit",
  "glob.glob",
  "gr_fit",
  "gwcs.coordinate_frames.CoordinateFrame",
  "gwcs.coordinate_frames.SpectralFrame",
  "gwcs.wcs.WCS",
  "helpers.assert_allclose",
  "ident",
  "identifier_wrapper",
  "importlib.import_module",
  "importlib.util.find_spec",
  "importlib.util.module_from_spec",
  "importlib.util.spec_from_file_location",
  "in_vcequiv",
  "inst",
  "interp",
  "io.get_loaders_by_extension",
  "io.registers._load_user_io",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "klass",
  "legendre_model",
  "line_mod",
  "logging.WARN",
  "logging.debug",
  "logging.error",
  "logging.info",
  "logging.warning",
  "manipulation.FluxConservingResampler",
  "manipulation.LinearInterpolatedResampler",
  "manipulation.SplineInterpolatedResampler",
  "manipulation.extract_region",
  "manipulation.noise_region_uncertainty",
  "manipulation.resample.FluxConservingResampler",
  "manipulation.resample.LinearInterpolatedResampler",
  "manipulation.resample.SplineInterpolatedResampler",
  "manipulation.smoothing.box_smooth",
  "manipulation.smoothing.convolution_smooth",
  "manipulation.smoothing.gaussian_smooth",
  "manipulation.smoothing.median_smooth",
  "manipulation.smoothing.trapezoid_smooth",
  "manipulation.snr_threshold",
  "manipulation.spectrum_from_model",
  "manipulation.utils.excise_regions",
  "manipulation.utils.linear_exciser",
  "math.ceil",
  "math.floor",
  "math_model",
  "matplotlib.use",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.alltrue",
  "numpy.append",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.array",
  "numpy.array_equal",
  "numpy.bool_",
  "numpy.broadcast_to",
  "numpy.ceil",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.diff",
  "numpy.double",
  "numpy.exp",
  "numpy.floating",
  "numpy.floor",
  "numpy.full_like",
  "numpy.insert",
  "numpy.integer",
  "numpy.interp",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.linspace",
  "numpy.max",
  "numpy.mean",
  "numpy.median",
  "numpy.min",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pi",
  "numpy.random.normal",
  "numpy.random.poisson",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.sample",
  "numpy.random.seed",
  "numpy.reciprocal",
  "numpy.sign",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.std",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.tile",
  "numpy.var",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator.add",
  "operator.ge",
  "operator.gt",
  "operator.le",
  "operator.lt",
  "operator.mul",
  "operator.pow",
  "operator.sub",
  "operator.truediv",
  "os.environ.get",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "os.sep",
  "out_vcequiv",
  "parsing_utils.generic_spectrum_from_table",
  "parsing_utils.spectrum_from_column_mapping",
  "path",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.remote_data",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "ramp",
  "re.compile",
  "registers.custom_writer",
  "registers.data_loader",
  "resampler",
  "scipy.interpolate.CubicSpline",
  "scipy.interpolate.interp1d",
  "scipy.signal.convolve",
  "scipy.signal.find_peaks",
  "scipy.signal.medfilt",
  "scipy.signal.peak_widths",
  "shlex.split",
  "shutil.copyfileobj",
  "spec_fit",
  "spectra.SpectralRegion",
  "spectra.SpectralRegion.from_center",
  "spectra.Spectrum1D",
  "spectra.Spectrum1D.read",
  "spectra.SpectrumCollection",
  "spectra.SpectrumList",
  "spectra.spectral_region.SpectralRegion",
  "spectra.spectrum1d.Spectrum1D",
  "spectra.spectrum_collection.SpectrumCollection",
  "spectra.spectrum_collection.SpectrumCollection.from_spectra",
  "spectral_axis.air_to_vac",
  "spectral_axis.air_to_vac_deriv",
  "spectral_axis.cdelt_derivative",
  "spectral_axis.convert_spectral_axis",
  "spectral_axis.determine_ctype_from_vconv",
  "spectral_axis.determine_vconv_from_ctype",
  "spectral_axis.get_rest_value_from_wcs",
  "spectral_axis.vac_to_air",
  "spectral_examples.simulated_spectra.s1_AA_mJy_e3",
  "spectral_examples.simulated_spectra.s1_AA_mJy_e3_flux",
  "spectral_examples.simulated_spectra.s1_AA_nJy_e4",
  "spectral_examples.simulated_spectra.s1_AA_nJy_e4_flux",
  "spectral_examples.simulated_spectra.s1_um_mJy_e1",
  "spectral_examples.simulated_spectra.s1_um_mJy_e1.frequency",
  "spectral_examples.simulated_spectra.s1_um_mJy_e1_flux",
  "spectral_examples.simulated_spectra.s1_um_mJy_e1_masked",
  "spectral_examples.simulated_spectra.s1_um_mJy_e1_masked.mask",
  "spectral_examples.simulated_spectra.s1_um_mJy_e2",
  "spectral_examples.simulated_spectra.s1_um_mJy_e2_flux",
  "spectrum1d.Spectrum1D",
  "spectrum_mixin.OneDSpectrumMixin",
  "specutils.Conf",
  "specutils.Spectrum1D",
  "specutils.SpectrumList",
  "specutils.SpectrumList.read",
  "specutils.UnsupportedPythonError",
  "specutils.__minimum_python_version__",
  "specutils._astropy_init.__all__",
  "specutils._astropy_init.config_dir",
  "specutils._astropy_init.config_template",
  "specutils._astropy_init.test",
  "specutils._astropy_init.wmsg",
  "specutils.analysis.flux._compute_line_flux",
  "specutils.analysis.flux.is_continuum_below_threshold",
  "specutils.analysis.flux.line_flux",
  "specutils.analysis.location._centroid_single_region",
  "specutils.analysis.template_comparison._chi_square_for_templates",
  "specutils.analysis.template_comparison._normalize_for_template_matching",
  "specutils.analysis.template_comparison._resample",
  "specutils.analysis.template_comparison.template_redshift",
  "specutils.analysis.uncertainty._snr_derived",
  "specutils.analysis.uncertainty._snr_single_region",
  "specutils.analysis.width._compute_gaussian_sigma_width",
  "specutils.analysis.width._compute_single_fwhm",
  "specutils.analysis.width.centroid",
  "specutils.analysis.width.fwhm",
  "specutils.conftest.packagename",
  "specutils.fitting.continuum.fit_continuum",
  "specutils.fitting.fitmodels._add_units_to_model",
  "specutils.fitting.fitmodels._combine_postfix",
  "specutils.fitting.fitmodels._consecutive",
  "specutils.fitting.fitmodels._convert",
  "specutils.fitting.fitmodels._convert_and_dequantify",
  "specutils.fitting.fitmodels._fit_lines",
  "specutils.fitting.fitmodels._parameter_estimators",
  "specutils.fitting.fitmodels._set_parameter_estimators",
  "specutils.fitting.fitmodels._strip_units_from_model",
  "specutils.io.asdf.extension.SCHEMA_PATH",
  "specutils.io.asdf.extension.SPECUTILS_URL_MAPPING",
  "specutils.io.asdf.tags.spectra.Spectrum1DType",
  "specutils.io.asdf.tags.spectra.UNCERTAINTY_TYPE_MAPPING",
  "specutils.io.asdf.tags.tests.test_spectra.create_spectrum1d",
  "specutils.io.asdf.types.SpecutilsTypeMeta",
  "specutils.io.asdf.types._specutils_types",
  "specutils.io.data_loader",
  "specutils.io.default_loaders.apogee.apStar_identify",
  "specutils.io.default_loaders.apogee.apStar_loader",
  "specutils.io.default_loaders.apogee.apVisit_identify",
  "specutils.io.default_loaders.apogee.apVisit_loader",
  "specutils.io.default_loaders.apogee.aspcapStar_identify",
  "specutils.io.default_loaders.apogee.aspcapStar_loader",
  "specutils.io.default_loaders.ascii.ascii_identify",
  "specutils.io.default_loaders.ascii.ipac_identify",
  "specutils.io.default_loaders.generic_ecsv_reader.identify_ecsv",
  "specutils.io.default_loaders.hst_cos.cos_identify",
  "specutils.io.default_loaders.hst_stis.stis_identify",
  "specutils.io.default_loaders.jwst_reader.identify_jwst_fits",
  "specutils.io.default_loaders.modules",
  "specutils.io.default_loaders.muscles_sed.identify_muscles_sed",
  "specutils.io.default_loaders.sdss._spSpec_pattern",
  "specutils.io.default_loaders.sdss._spec_pattern",
  "specutils.io.default_loaders.sdss.spSpec_identify",
  "specutils.io.default_loaders.sdss.spec_identify",
  "specutils.io.default_loaders.subaru_pfs_spec._spec_pattern",
  "specutils.io.default_loaders.subaru_pfs_spec.spec_identify",
  "specutils.io.default_loaders.tabular_fits.identify_tabular_fits",
  "specutils.io.default_loaders.tests.test_jwst_loader.create_spectrum_hdu",
  "specutils.io.default_loaders.wcs_fits._chebyshev",
  "specutils.io.default_loaders.wcs_fits._linear_solution",
  "specutils.io.default_loaders.wcs_fits._log_linear",
  "specutils.io.default_loaders.wcs_fits._non_linear_cspline",
  "specutils.io.default_loaders.wcs_fits._non_linear_legendre",
  "specutils.io.default_loaders.wcs_fits._non_linear_lspline",
  "specutils.io.default_loaders.wcs_fits._none",
  "specutils.io.default_loaders.wcs_fits._read_linear_iraf_wcs",
  "specutils.io.default_loaders.wcs_fits._read_non_linear_iraf_wcs",
  "specutils.io.default_loaders.wcs_fits._set_math_model",
  "specutils.io.default_loaders.wcs_fits.identify_iraf_wcs",
  "specutils.io.default_loaders.wcs_fits.identify_wcs1d_fits",
  "specutils.io.parsing_utils.generic_spectrum_from_table",
  "specutils.io.registers.data_loader",
  "specutils.manipulation.estimate_uncertainty.Spectrum1D",
  "specutils.manipulation.extract_spectral_region.Spectrum1D",
  "specutils.manipulation.extract_spectral_region._to_edge_pixel",
  "specutils.manipulation.resample.ResamplerBase",
  "specutils.manipulation.smoothing.convolution_smooth",
  "specutils.manipulation.utils.excise_region",
  "specutils.manipulation.utils.linear_exciser",
  "specutils.spectra.Spectrum1D",
  "specutils.spectra.spectral_region.SpectralRegion",
  "specutils.spectra.spectrum1d.Spectrum1D",
  "specutils.spectra.spectrum_mixin.DOPPLER_CONVENTIONS",
  "specutils.tests.spectral_cube_test_spectral_axis.air_vac",
  "specutils.tests.spectral_examples.SpectraExamples",
  "specutils.tests.test_continuum.single_peak_continuum",
  "specutils.tests.test_fitting.double_peak",
  "specutils.tests.test_fitting.double_peak_absorption_and_emission",
  "specutils.tests.test_fitting.single_peak",
  "specutils.tests.test_fitting.tie_center",
  "specutils.tests.test_loaders.Spectrum1D",
  "specutils.tests.test_resample.all_resamplers",
  "specutils.tests.test_resample.delta_wl",
  "specutils.tests.test_smoothing.compare_flux",
  "specutils.tests.test_spectrum_collection.spectrum_collection",
  "specutils.tests.test_unc.pure_noise_spectrum",
  "specutils.tests.test_utils.data_index_refraction",
  "specutils.tests.test_utils.wavelengths",
  "specutils.utils.QuantityModel",
  "specutils.utils.wcs_utils.ALL_CTYPES",
  "specutils.utils.wcs_utils.CTYPE_CHAR_TO_PHYSICALTYPE",
  "specutils.utils.wcs_utils.CTYPE_TO_PHYSICALTYPE",
  "specutils.utils.wcs_utils.LINEAR_CTYPES",
  "specutils.utils.wcs_utils.LINEAR_CTYPE_CHARS",
  "specutils.utils.wcs_utils.LINEAR_CUNIT_DICT",
  "specutils.utils.wcs_utils.PHYSICAL_TYPE_TO_CHAR",
  "specutils.utils.wcs_utils.PHYSICAL_TYPE_TO_CTYPE",
  "specutils.utils.wcs_utils.PHYS_UNIT_DICT",
  "specutils.utils.wcs_utils.WCS_UNIT_DICT",
  "specutils.utils.wcs_utils._parse_velocity_convention",
  "specutils.utils.wcs_utils.air_to_vac",
  "specutils.utils.wcs_utils.air_to_vac_deriv",
  "specutils.utils.wcs_utils.cdelt_derivative",
  "specutils.utils.wcs_utils.get_rest_value_from_wcs",
  "specutils.utils.wcs_utils.refraction_index",
  "specutils.version.bugfix",
  "specutils.version.major",
  "specutils.version.minor",
  "specutils.wcs.adapters.fitswcs_adapter.FITSWCSAdapter",
  "specutils.wcs.adapters.gwcs_adapter.GWCSAdapter",
  "specutils.wcs.wcs_adapter.WCSAdapterMeta",
  "specutils.wcs.wcs_wrapper.WCSWrapper",
  "specutils.wcs.wcs_wrapper.WCSWrapper.from_array",
  "sys.maxsize",
  "sys.version_info",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tests.spectral_examples.simulated_spectra.s1_um_mJy_e1",
  "tests.spectral_examples.simulated_spectra.s1_um_mJy_e1.flux",
  "tests.spectral_examples.simulated_spectra.s1_um_mJy_e1.spectral_axis",
  "types.SpecutilsType",
  "types._specutils_types",
  "uc",
  "urllib.parse.urljoin",
  "urllib.request.urlopen",
  "utils.QuantityModel",
  "utils.computation_wrapper",
  "utils.wcs_utils.air_to_vac",
  "utils.wcs_utils.convert_spectral_axis",
  "utils.wcs_utils.determine_ctype_from_vconv",
  "utils.wcs_utils.refraction_index",
  "utils.wcs_utils.vac_to_air",
  "vconv1",
  "vconv2",
  "version.githash",
  "version.version",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "wcs.WCSAdapter",
  "wcs.WCSWrapper",
  "wcs.WCSWrapper.from_array",
  "wcs.wcs_adapter.WCSAdapter",
  "wcs.wcs_wrapper.WCSWrapper.from_array",
  "wcs_adapter.WCSAdapter",
  "wcs_adapter.WCSAdapter.registry.get",
  "wcs_adapter.WCSAxes"
 ],
 "deps": {
  "Spectrum1D": [],
  "SpectrumList": [],
  "__builtin__": [],
  "_find_spectral_axis_column": [],
  "_find_spectral_column": [],
  "abc": [],
  "adapter_class": [],
  "analysis": [],
  "asdf": [],
  "astropy": [],
  "calculate_rms": [],
  "chebyshev_model": [],
  "collections": [],
  "compound": [],
  "conf": [],
  "conftest": [],
  "copy": [],
  "ctype_from_vconv": [],
  "cubic_spline": [],
  "datetime": [],
  "estimator": [],
  "extract_spectral_region": [],
  "find_width": [],
  "fitting": [],
  "fluxc_resample": [],
  "func": [],
  "function": [],
  "functools": [],
  "g": [],
  "g1": [],
  "g12_fit": [],
  "g1_fit": [],
  "g2": [],
  "g2_fit": [],
  "g3": [],
  "g4": [],
  "g_fit": [],
  "gl_fit": [],
  "glob": [],
  "gr_fit": [],
  "gwcs": [],
  "helpers": [],
  "ident": [],
  "identifier_wrapper": [],
  "importlib": [],
  "in_vcequiv": [],
  "inst": [],
  "interp": [],
  "io": [],
  "itertools": [],
  "klass": [],
  "legendre_model": [],
  "line_mod": [],
  "logging": [],
  "manipulation": [],
  "math": [],
  "math_model": [],
  "matplotlib": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "out_vcequiv": [],
  "parsing_utils": [],
  "path": [],
  "pytest": [],
  "ramp": [],
  "re": [],
  "registers": [],
  "resampler": [],
  "scipy": [],
  "shlex": [],
  "shutil": [],
  "spec_fit": [],
  "spectra": [],
  "spectral_axis": [],
  "spectral_examples": [],
  "spectrum1d": [],
  "spectrum_mixin": [],
  "specutils": [],
  "sys": [],
  "tempfile": [],
  "tests": [],
  "types": [],
  "uc": [],
  "urllib": [],
  "utils": [],
  "vconv1": [],
  "vconv2": [],
  "version": [],
  "warnings": [],
  "wcs": [],
  "wcs_adapter": []
 }
}