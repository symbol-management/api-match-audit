{
 "bad": [
  "Algo.algo.attrlist",
  "Amr.amr.attrlist",
  "Bucket.Bucket.__setattr__",
  "Constants.my_constants.attrlist",
  "Diagnostics.diagnostics._diagnostics_dict.keys",
  "Diagnostics.diagnostics._diagnostics_dict.values",
  "Diagnostics.diagnostics.attrlist",
  "Diagnostics.diagnostics.diags_names",
  "Geometry.geometry.attrlist",
  "Geometry.geometry.coord_sys",
  "Geometry.geometry.prob_lo",
  "Interpolation.interpolation.attrlist",
  "Langmuirwave.langmuirwave.attrlist",
  "Lasers.lasers.attrlist",
  "PSATD.psatd.attrlist",
  "Particles.particles.attrlist",
  "Particles.particles.species_names",
  "Particles.particles_list.append",
  "__main__",
  "__main__.__dict__",
  "_libwarpx._numpy_real_dtype",
  "_libwarpx.clight",
  "_libwarpx.geometry_dim",
  "_libwarpx.getCellSize",
  "_libwarpx.get_Bx_nodal_flag",
  "_libwarpx.get_By_nodal_flag",
  "_libwarpx.get_Bz_nodal_flag",
  "_libwarpx.get_Ex_nodal_flag",
  "_libwarpx.get_Ey_nodal_flag",
  "_libwarpx.get_Ez_nodal_flag",
  "_libwarpx.get_Jx_nodal_flag",
  "_libwarpx.get_Jy_nodal_flag",
  "_libwarpx.get_Jz_nodal_flag",
  "_libwarpx.get_Rho_nodal_flag",
  "_libwarpx.get_mesh_charge_density_cp",
  "_libwarpx.get_mesh_charge_density_cp_lovects",
  "_libwarpx.get_mesh_charge_density_fp",
  "_libwarpx.get_mesh_charge_density_fp_lovects",
  "_libwarpx.get_mesh_current_density",
  "_libwarpx.get_mesh_current_density_cp",
  "_libwarpx.get_mesh_current_density_cp_lovects",
  "_libwarpx.get_mesh_current_density_cp_lovects_pml",
  "_libwarpx.get_mesh_current_density_cp_pml",
  "_libwarpx.get_mesh_current_density_fp",
  "_libwarpx.get_mesh_current_density_fp_lovects",
  "_libwarpx.get_mesh_current_density_fp_lovects_pml",
  "_libwarpx.get_mesh_current_density_fp_pml",
  "_libwarpx.get_mesh_current_density_lovects",
  "_libwarpx.get_mesh_electric_field",
  "_libwarpx.get_mesh_electric_field_cp",
  "_libwarpx.get_mesh_electric_field_cp_lovects",
  "_libwarpx.get_mesh_electric_field_cp_lovects_pml",
  "_libwarpx.get_mesh_electric_field_cp_pml",
  "_libwarpx.get_mesh_electric_field_fp",
  "_libwarpx.get_mesh_electric_field_fp_lovects",
  "_libwarpx.get_mesh_electric_field_fp_lovects_pml",
  "_libwarpx.get_mesh_electric_field_fp_pml",
  "_libwarpx.get_mesh_electric_field_lovects",
  "_libwarpx.get_mesh_magnetic_field",
  "_libwarpx.get_mesh_magnetic_field_cp",
  "_libwarpx.get_mesh_magnetic_field_cp_lovects",
  "_libwarpx.get_mesh_magnetic_field_cp_lovects_pml",
  "_libwarpx.get_mesh_magnetic_field_cp_pml",
  "_libwarpx.get_mesh_magnetic_field_fp",
  "_libwarpx.get_mesh_magnetic_field_fp_lovects",
  "_libwarpx.get_mesh_magnetic_field_fp_lovects_pml",
  "_libwarpx.get_mesh_magnetic_field_fp_pml",
  "_libwarpx.get_mesh_magnetic_field_lovects",
  "_libwarpx.get_nattr",
  "_libwarpx.get_particle_arrays",
  "_libwarpx.get_particle_r",
  "_libwarpx.get_particle_theta",
  "_libwarpx.get_particle_ux",
  "_libwarpx.get_particle_uy",
  "_libwarpx.get_particle_uz",
  "_libwarpx.get_particle_weight",
  "_libwarpx.get_particle_x",
  "_libwarpx.get_particle_y",
  "_libwarpx.get_particle_z",
  "_libwarpx.libwarpx.mypc_Redistribute",
  "_libwarpx.libwarpx.warpx_BPushV",
  "_libwarpx.libwarpx.warpx_ComputeDt",
  "_libwarpx.libwarpx.warpx_CurrentDeposition",
  "_libwarpx.libwarpx.warpx_EPushV",
  "_libwarpx.libwarpx.warpx_EvolveB",
  "_libwarpx.libwarpx.warpx_EvolveE",
  "_libwarpx.libwarpx.warpx_FieldGather",
  "_libwarpx.libwarpx.warpx_FillBoundaryB",
  "_libwarpx.libwarpx.warpx_FillBoundaryE",
  "_libwarpx.libwarpx.warpx_MoveWindow",
  "_libwarpx.libwarpx.warpx_PushParticlesandDepose",
  "_libwarpx.libwarpx.warpx_PushX",
  "_libwarpx.libwarpx.warpx_SyncCurrent",
  "_libwarpx.libwarpx.warpx_UpdateAuxilaryData",
  "_libwarpx.libwarpx.warpx_finestLevel",
  "_libwarpx.libwarpx.warpx_getdt",
  "_libwarpx.libwarpx.warpx_getistep",
  "_libwarpx.libwarpx.warpx_gett_new",
  "_libwarpx.libwarpx.warpx_set_callback_py_afterEsolve",
  "_libwarpx.libwarpx.warpx_set_callback_py_afterdeposition",
  "_libwarpx.libwarpx.warpx_set_callback_py_afterinit",
  "_libwarpx.libwarpx.warpx_set_callback_py_afterrestart",
  "_libwarpx.libwarpx.warpx_set_callback_py_afterstep",
  "_libwarpx.libwarpx.warpx_set_callback_py_appliedfields",
  "_libwarpx.libwarpx.warpx_set_callback_py_beforeEsolve",
  "_libwarpx.libwarpx.warpx_set_callback_py_beforedeposition",
  "_libwarpx.libwarpx.warpx_set_callback_py_beforestep",
  "_libwarpx.libwarpx.warpx_set_callback_py_particleinjection",
  "_libwarpx.libwarpx.warpx_set_callback_py_particleloader",
  "_libwarpx.libwarpx.warpx_set_callback_py_particlescraper",
  "_libwarpx.libwarpx.warpx_setistep",
  "_libwarpx.libwarpx.warpx_sett_new",
  "atexit",
  "atexit.register",
  "buffer_from_memory",
  "buffer_from_memory.restype",
  "callbacks._afterEsolve",
  "callbacks._afterdeposition",
  "callbacks._afterstep",
  "callbacks._beforeEsolve",
  "callbacks._beforedeposition",
  "callbacks._beforestep",
  "callbacks._particleinjection",
  "callbacks._particlescraper",
  "ctypes.pythonapi.PyBuffer_FromReadWriteMemory",
  "ctypes.pythonapi.PyMemoryView_FromMemory",
  "f",
  "f.__name__",
  "get_particle_theta",
  "lend",
  "mpi4py.MPI.COMM_WORLD",
  "mpi4py.MPI.MAX",
  "numpy.not_equal",
  "object.__getattr__",
  "object.__setattr__",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.join",
  "periodictable.elements.symbol",
  "picmistandard.PICMI_MultiSpecies.Species_class",
  "pywarpx.Particles.particles_list.append",
  "pywarpx.algo.charge_deposition",
  "pywarpx.algo.costs_heuristic_cells_wt",
  "pywarpx.algo.costs_heuristic_particles_wt",
  "pywarpx.algo.current_deposition",
  "pywarpx.algo.field_gathering",
  "pywarpx.algo.load_balance_costs_update",
  "pywarpx.algo.load_balance_efficiency_ratio_threshold",
  "pywarpx.algo.load_balance_intervals",
  "pywarpx.algo.load_balance_knapsack_factor",
  "pywarpx.algo.load_balance_with_sfc",
  "pywarpx.algo.maxwell_solver",
  "pywarpx.algo.particle_pusher",
  "pywarpx.amr.blocking_factor",
  "pywarpx.amr.max_grid_size",
  "pywarpx.amr.max_level",
  "pywarpx.amr.n_cell",
  "pywarpx.diagnostics._diagnostics_dict",
  "pywarpx.geometry.coord_sys",
  "pywarpx.geometry.is_periodic",
  "pywarpx.geometry.prob_hi",
  "pywarpx.geometry.prob_lo",
  "pywarpx.interpolation.nox",
  "pywarpx.interpolation.noy",
  "pywarpx.interpolation.noz",
  "pywarpx.lasers.names",
  "pywarpx.my_constants.add_keywords",
  "pywarpx.my_constants.mangle_expression",
  "pywarpx.particles.B_ext_particle_init_style",
  "pywarpx.particles.B_external_particle",
  "pywarpx.particles.E_ext_particle_init_style",
  "pywarpx.particles.E_external_particle",
  "pywarpx.particles.__setattr__",
  "pywarpx.particles.rigid_injected_species.append",
  "pywarpx.particles.species_names",
  "pywarpx.particles.species_names.append",
  "pywarpx.particles.use_fdtd_nci_corr",
  "pywarpx.psatd.current_correction",
  "pywarpx.psatd.do_time_averaging",
  "pywarpx.psatd.fftw_plan_measure",
  "pywarpx.psatd.nox",
  "pywarpx.psatd.noy",
  "pywarpx.psatd.noz",
  "pywarpx.psatd.nx_guard",
  "pywarpx.psatd.ny_guard",
  "pywarpx.psatd.nz_guard",
  "pywarpx.psatd.periodic_single_box_fft",
  "pywarpx.psatd.update_with_rho",
  "pywarpx.psatd.use_damp_fields_in_z_guard",
  "pywarpx.psatd.v_galilean",
  "pywarpx.warpx.boost_direction",
  "pywarpx.warpx.cfl",
  "pywarpx.warpx.check_consistency",
  "pywarpx.warpx.const_dt",
  "pywarpx.warpx.do_back_transformed_diagnostics",
  "pywarpx.warpx.do_back_transformed_fields",
  "pywarpx.warpx.do_dynamic_scheduling",
  "pywarpx.warpx.do_electrostatic",
  "pywarpx.warpx.do_moving_window",
  "pywarpx.warpx.do_nodal",
  "pywarpx.warpx.do_pml",
  "pywarpx.warpx.dt_snapshots_lab",
  "pywarpx.warpx.evolve",
  "pywarpx.warpx.filter_npass_each_dir",
  "pywarpx.warpx.finalize",
  "pywarpx.warpx.fine_tag_hi",
  "pywarpx.warpx.fine_tag_lo",
  "pywarpx.warpx.gamma_boost",
  "pywarpx.warpx.init",
  "pywarpx.warpx.lab_data_directory",
  "pywarpx.warpx.mirror_z",
  "pywarpx.warpx.mirror_z.append",
  "pywarpx.warpx.mirror_z_npoints",
  "pywarpx.warpx.mirror_z_npoints.append",
  "pywarpx.warpx.mirror_z_width",
  "pywarpx.warpx.mirror_z_width.append",
  "pywarpx.warpx.moving_window_dir",
  "pywarpx.warpx.moving_window_v",
  "pywarpx.warpx.n_rz_azimuthal_modes",
  "pywarpx.warpx.num_mirrors",
  "pywarpx.warpx.num_snapshots_lab",
  "pywarpx.warpx.pml_ncell",
  "pywarpx.warpx.self_fields_max_iters",
  "pywarpx.warpx.self_fields_required_precision",
  "pywarpx.warpx.serialize_ics",
  "pywarpx.warpx.use_filter",
  "pywarpx.warpx.use_filter_compensation",
  "pywarpx.warpx.verbose",
  "pywarpx.warpx.write_inputs",
  "sys",
  "sys.argv",
  "sys.stdout",
  "sys.version_info.major",
  "time",
  "time.time",
  "warp",
  "warp.EM3D",
  "warp.Species",
  "warp.run_modes.timestepper.PICAPI",
  "warp.top.wpid",
  "wx.evolve",
  "wx.finalize",
  "wx.initialize",
  "wx.libwarpx.warpx_getProbHi",
  "wx.libwarpx.warpx_getProbLo"
 ],
 "deps": {
  "Algo": [],
  "Amr": [],
  "Bucket": [],
  "Constants": [],
  "Diagnostics": [],
  "Geometry": [],
  "Interpolation": [],
  "Langmuirwave": [],
  "Lasers": [],
  "PSATD": [],
  "Particles": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "__main__": [],
  "_libwarpx": [],
  "atexit": [],
  "buffer_from_memory": [],
  "callbacks": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ctypes": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "f": [],
  "get_particle_theta": [],
  "lend": [],
  "mpi4py": [
   "mpi4py/conda-forge/linux-64/mpi4py-3.0.3-py36h7b8b12a_6"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "periodictable": [
   "periodictable/conda-forge/noarch/periodictable-1.5.2-py_0"
  ],
  "picmistandard": [
   "picmistandard/conda-forge/noarch/picmistandard-0.0.14-pyhd8ed1ab_0"
  ],
  "pywarpx": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "time": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warp": [],
  "wx": []
 }
}