{
 "bad": [
  "TlsContext",
  "base64.b64decode",
  "base64.b64encode",
  "compat.NullHandler",
  "cryptography.exceptions.UnsupportedAlgorithm",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.hashes.Hash",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.x509.load_der_x509_certificate",
  "distutils.util.strtobool",
  "exceptions.KerberosExchangeError",
  "exceptions.MutualAuthenticationError",
  "inspect.getargspec",
  "logging.Handler",
  "logging.getLogger",
  "mock.patch",
  "os.environ",
  "os.environ.get",
  "os.environ.pop",
  "os.path.exists",
  "pytest.fixture",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "re.I",
  "re.compile",
  "re.match",
  "re.search",
  "requests.HTTPError",
  "requests.Request",
  "requests.Session",
  "requests.auth.AuthBase",
  "requests.auth.HTTPBasicAuth",
  "requests.compat.urlparse",
  "requests.cookies.cookiejar_from_dict",
  "requests.exceptions.RequestException",
  "requests.models.Response",
  "requests.packages.urllib3.HTTPResponse",
  "requests.packages.urllib3.exceptions.InsecurePlatformWarning",
  "requests.packages.urllib3.exceptions.InsecureRequestWarning",
  "requests.packages.urllib3.exceptions.SNIMissingWarning",
  "requests.structures.CaseInsensitiveDict",
  "requests_credssp.HttpCredSSPAuth",
  "requests_credssp.HttpCredSSPAuth.__init__",
  "requests_ntlm.HttpNtlmAuth",
  "requests_ntlm.HttpNtlmAuth.__init__",
  "six.text_type",
  "struct.pack",
  "struct.unpack",
  "sys.version",
  "sys.version_info",
  "unittest.TestCase",
  "urllib.parse.urlsplit",
  "urllib3.exceptions.InsecureRequestWarning",
  "uuid.UUID",
  "uuid.uuid4",
  "vendor.requests_kerberos.HTTPKerberosAuth",
  "vendor.requests_kerberos.HTTPKerberosAuth.__init__",
  "vendor.requests_kerberos.REQUIRED",
  "warnings.simplefilter",
  "warnings.warn",
  "winkerberos",
  "winkerberos.GSSError",
  "winkerberos.GSS_C_DELEG_FLAG",
  "winkerberos.GSS_C_MUTUAL_FLAG",
  "winkerberos.GSS_C_SEQUENCE_FLAG",
  "winkerberos.authGSSClientInit",
  "winkerberos.authGSSClientResponse",
  "winkerberos.authGSSClientStep",
  "winkerberos.authGSSWinRMDecryptMessage",
  "winkerberos.authGSSWinRMEncryptMessage",
  "winkerberos.channelBindings",
  "winrm.Response",
  "winrm.Session",
  "winrm.encryption.Encryption",
  "winrm.encryption.is_py2",
  "winrm.exceptions.AuthenticationError",
  "winrm.exceptions.InvalidCredentialsError",
  "winrm.exceptions.WinRMError",
  "winrm.exceptions.WinRMOperationTimeoutError",
  "winrm.exceptions.WinRMTransportError",
  "winrm.protocol.Protocol",
  "winrm.protocol.xmlns",
  "winrm.tests.conftest.TransportStub",
  "winrm.tests.conftest.cleanup_cmd_request",
  "winrm.tests.conftest.cleanup_cmd_response",
  "winrm.tests.conftest.close_shell_request",
  "winrm.tests.conftest.close_shell_response",
  "winrm.tests.conftest.get_cmd_output_response",
  "winrm.tests.conftest.get_cmd_ps_output_request",
  "winrm.tests.conftest.get_ps_output_response",
  "winrm.tests.conftest.open_shell_request",
  "winrm.tests.conftest.open_shell_response",
  "winrm.tests.conftest.run_cmd_ps_response",
  "winrm.tests.conftest.run_cmd_req_input",
  "winrm.tests.conftest.run_cmd_req_input_response",
  "winrm.tests.conftest.run_cmd_send_input",
  "winrm.tests.conftest.run_cmd_send_input_get_output",
  "winrm.tests.conftest.run_cmd_send_input_get_output_response",
  "winrm.tests.conftest.run_cmd_send_input_response",
  "winrm.tests.conftest.run_cmd_with_args_request",
  "winrm.tests.conftest.run_cmd_wo_args_request",
  "winrm.tests.conftest.run_ps_request",
  "winrm.tests.conftest.sort_dict",
  "winrm.tests.conftest.stdin_cmd_cleanup",
  "winrm.tests.conftest.stdin_cmd_cleanup_response",
  "winrm.tests.conftest.xml_str_compare",
  "winrm.tests.test_encryption.AuthTest",
  "winrm.tests.test_encryption.CredSSPContext",
  "winrm.tests.test_encryption.RequestTest",
  "winrm.tests.test_encryption.ResponseTest",
  "winrm.tests.test_encryption.SessionSecurityTest",
  "winrm.tests.test_encryption.SessionTest",
  "winrm.tests.test_integration_protocol.xfail",
  "winrm.tests.test_integration_session.xfail",
  "winrm.tests.test_transport.TestTransport",
  "winrm.transport.DISPLAYED_CA_TRUST_WARNING",
  "winrm.transport.DISPLAYED_PROXY_WARNING",
  "winrm.transport.HAVE_CREDSSP",
  "winrm.transport.HAVE_KERBEROS",
  "winrm.transport.HAVE_NTLM",
  "winrm.transport.Transport",
  "winrm.transport.is_py2",
  "winrm.transport.unicode_type",
  "winrm.vendor.requests_kerberos.kerberos_.NoCertificateRetrievedWarning",
  "winrm.vendor.requests_kerberos.kerberos_.OPTIONAL",
  "winrm.vendor.requests_kerberos.kerberos_.REQUIRED",
  "winrm.vendor.requests_kerberos.kerberos_.SanitizedResponse",
  "winrm.vendor.requests_kerberos.kerberos_.UnknownSignatureAlgorithmOID",
  "winrm.vendor.requests_kerberos.kerberos_._get_certificate_hash",
  "winrm.vendor.requests_kerberos.kerberos_._get_channel_bindings_application_data",
  "winrm.vendor.requests_kerberos.kerberos_._negotiate_value",
  "winrm.vendor.requests_kerberos.kerberos_.log",
  "xml.etree.ElementTree.fromstring",
  "xmltodict.parse",
  "xmltodict.unparse"
 ],
 "deps": {
  "TlsContext": [],
  "base64": [],
  "compat": [],
  "cryptography": [],
  "distutils": [],
  "exceptions": [],
  "inspect": [],
  "logging": [],
  "mock": [],
  "os": [],
  "pytest": [],
  "re": [],
  "requests": [],
  "requests_credssp": [],
  "requests_ntlm": [],
  "six": [],
  "struct": [],
  "sys": [],
  "unittest": [],
  "urllib": [],
  "urllib3": [],
  "uuid": [],
  "vendor": [],
  "warnings": [],
  "winkerberos": [],
  "winrm": [],
  "xml": [],
  "xmltodict": []
 }
}