{
 "bad": [
  "__future__.division",
  "__future__.print_function",
  "antenna_response",
  "ast",
  "ast.literal_eval",
  "bin.extent",
  "bin.objects",
  "cmath",
  "cmath.exp",
  "collections.OrderedDict",
  "concatJob",
  "concatNode",
  "copy",
  "copy.deepcopy",
  "dec_str",
  "errno",
  "errno.EEXIST",
  "exp_str",
  "file",
  "glob",
  "glob.glob",
  "glue.iterutils",
  "glue.iterutils.inplace_filter",
  "glue.lal",
  "glue.lal.Cache",
  "glue.lal.Cache.from_urls",
  "glue.lal.Cache.fromfile",
  "glue.ligolw.ligolw",
  "glue.ligolw.ligolw.Document",
  "glue.ligolw.ligolw.LIGO_LW",
  "glue.ligolw.lsctables",
  "glue.ligolw.lsctables.LIGOTimeGPS",
  "glue.ligolw.lsctables.New",
  "glue.ligolw.lsctables.ProcessParamsTable",
  "glue.ligolw.lsctables.ProcessTable",
  "glue.ligolw.utils",
  "glue.ligolw.utils.SignalsTrap",
  "glue.ligolw.utils.process",
  "glue.ligolw.utils.process.append_process",
  "glue.ligolw.utils.process.set_process_end_time",
  "glue.ligolw.utils.segments",
  "glue.ligolw.utils.segments.LigolwSegmentList",
  "glue.ligolw.utils.segments.LigolwSegments",
  "glue.ligolw.utils.segments.segment",
  "glue.ligolw.utils.segments.segmentlist",
  "glue.ligolw.utils.write_fileobj",
  "glue.pipeline",
  "glue.pipeline.AnalysisJob",
  "glue.pipeline.AnalysisNode",
  "glue.pipeline.AnalysisNode.set_ifo",
  "glue.pipeline.CondorDAG",
  "glue.pipeline.CondorDAGJob",
  "glue.pipeline.CondorDAGManJob",
  "glue.pipeline.CondorDAGManNode",
  "glue.pipeline.CondorDAGNode",
  "glue.pipeline.CondorDAGNode.add_file_arg",
  "glue.pipeline.CondorDAGNode.set_name",
  "glue.pipeline.CondorDAGNode.write_input_files",
  "glue.pipeline.LSCDataFindJob",
  "glue.pipeline.LSCDataFindNode",
  "glue.pipeline.LigolwAddJob",
  "glue.pipeline.LigolwAddNode",
  "glue.pipeline.LigolwAddNode.set_name",
  "glue.pipeline.LigolwAddNode.set_output",
  "glue.pipeline.LigolwAddNode.write_input_files",
  "glue.pipeline.SqliteJob",
  "glue.pipeline.SqliteNode",
  "gwpy.segments.DataQualityFlag",
  "gwpy.segments.DataQualityFlag.query_dqsegdb",
  "gzip",
  "gzip.open",
  "h5py",
  "h5py.File",
  "hist_norm_bounds",
  "intf",
  "json",
  "json.dump",
  "json.load",
  "lal",
  "lal.CachedDetectors",
  "lal.ComputeDetAMResponse",
  "lal.ComputeDetAMResponseSeries",
  "lal.GreenwichMeanSiderealTime",
  "lal.LALDetectorIndexE1DIFF",
  "lal.LALDetectorIndexE2DIFF",
  "lal.LALDetectorIndexE3DIFF",
  "lal.LALDetectorIndexGEO600DIFF",
  "lal.LALDetectorIndexLHODIFF",
  "lal.LALDetectorIndexLLODIFF",
  "lal.LALDetectorIndexTAMA300DIFF",
  "lal.LALDetectorIndexVIRGODIFF",
  "lal.LIGOTimeGPS",
  "lal.utils.CacheEntry",
  "lalburst",
  "lalburst.cafe",
  "lalburst.cafe.get_coincident_segmentlistdict",
  "lalburst.cafe.ligolw_cafe",
  "lalinference.LALInferenceHDF5NestedSamplesDatasetName",
  "lalinference.bayespputils",
  "lalinference.bayespputils.PEOutputParser",
  "lalinference.bayespputils.Posterior",
  "lalinference.bayespputils.PosteriorOneDPDF",
  "lalinference.bayespputils.effectiveSampleSize",
  "lalinference.bayespputils.replace_column",
  "lalinference.io.read_samples",
  "lalsimulation",
  "lalsimulation.SimNoisePSDAdvVirgo",
  "lalsimulation.SimNoisePSDGEO",
  "lalsimulation.SimNoisePSDKAGRA",
  "lalsimulation.SimNoisePSDTAMA",
  "lalsimulation.SimNoisePSDVirgo",
  "lalsimulation.SimNoisePSDaLIGOZeroDetHighPower",
  "lalsimulation.SimNoisePSDiLIGOSRD",
  "ligo.segments",
  "ligo.segments.NegInfinity",
  "ligo.segments.PosInfinity",
  "ligo.segments.segment",
  "ligo.segments.segmentlist",
  "ligo.segments.segmentlistdict",
  "ligo.segments.utils",
  "ligo.segments.utils.fromsegwizard",
  "ligo.segments.utils.to_range_strings",
  "ligo.segments.utils.tosegwizard",
  "math",
  "math.acos",
  "math.atan2",
  "math.ceil",
  "math.cos",
  "math.exp",
  "math.fabs",
  "math.floor",
  "math.fmod",
  "math.log10",
  "math.pi",
  "math.sin",
  "math.sqrt",
  "matplotlib",
  "matplotlib.colors",
  "matplotlib.colors.Normalize",
  "matplotlib.gridspec",
  "matplotlib.gridspec.GridSpec",
  "matplotlib.mlab.specgram",
  "matplotlib.pyplot",
  "matplotlib.pyplot.axvline",
  "matplotlib.pyplot.cm.get_cmap",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.hist",
  "matplotlib.pyplot.hold",
  "matplotlib.pyplot.imshow",
  "matplotlib.pyplot.loglog",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.step",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.tick_params",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.xlim",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "matplotlib.rcParams",
  "matplotlib.rcParams.update",
  "moveJob",
  "moveNode",
  "numpy",
  "numpy.abs",
  "numpy.any",
  "numpy.append",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.arccos",
  "numpy.array",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cos",
  "numpy.diag",
  "numpy.diff",
  "numpy.dot",
  "numpy.exp",
  "numpy.fabs",
  "numpy.flipud",
  "numpy.floor",
  "numpy.fmod",
  "numpy.generic",
  "numpy.hanning",
  "numpy.histogram",
  "numpy.histogram2d",
  "numpy.identity",
  "numpy.inf",
  "numpy.insert",
  "numpy.isfinite",
  "numpy.linalg.inv",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.log10",
  "numpy.logaddexp",
  "numpy.max",
  "numpy.mean",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.pi",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.shuffle",
  "numpy.reshape",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.std",
  "numpy.sum",
  "numpy.transpose",
  "numpy.trapz",
  "numpy.unique",
  "numpy.var",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "optparse",
  "os",
  "os.R_OK",
  "os.W_OK",
  "os.X_OK",
  "os.access",
  "os.chdir",
  "os.chmod",
  "os.environ.split",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.remove",
  "os.rmdir",
  "os.symlink",
  "os.unlink",
  "pickle",
  "ra_str",
  "random",
  "re",
  "re.search",
  "re.sub",
  "reduce",
  "removeJob",
  "removeNode",
  "requests",
  "requests.get",
  "scipy.integrate.cumtrapz",
  "scipy.interpolate.interp1d",
  "scipy.misc.logsumpexp",
  "scipy.optimize",
  "scipy.optimize.root",
  "scipy.special.gammaln",
  "scipy.special.logsumexp",
  "scipy.stats.hmean",
  "shutil",
  "shutil.copy",
  "shutil.copy2",
  "shutil.copyfile",
  "six",
  "six.moves.configparser.NoSectionError",
  "six.moves.configparser.RawConfigParser",
  "six.moves.urllib.parse",
  "six.moves.urllib.parse.urljoin",
  "six.moves.urllib.request.urlopen",
  "six.string_types",
  "sklearn.mixture",
  "sklearn.mixture.BayesianGaussianMixture",
  "string",
  "string.strip",
  "struct",
  "struct.unpack",
  "subprocess",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.check_output",
  "sys",
  "sys.exit",
  "sys.stderr",
  "sys.stdout.flush",
  "tempfile",
  "tempfile.close",
  "tempfile.readlines",
  "test_and_add_hipe_arg",
  "time",
  "time.time",
  "urllib",
  "urllib.urlretrieve",
  "uuid",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "__future__": [],
  "antenna_response": [],
  "ast": [],
  "bin": [],
  "cmath": [],
  "collections": [],
  "concatJob": [],
  "concatNode": [],
  "copy": [],
  "dec_str": [],
  "errno": [],
  "exp_str": [],
  "file": [],
  "glob": [],
  "glue": [],
  "gwpy": [],
  "gzip": [],
  "h5py": [],
  "hist_norm_bounds": [],
  "intf": [],
  "json": [],
  "lal": [],
  "lalburst": [],
  "lalinference": [],
  "lalsimulation": [],
  "ligo": [],
  "math": [],
  "matplotlib": [],
  "moveJob": [],
  "moveNode": [],
  "numpy": [],
  "optparse": [],
  "os": [],
  "pickle": [],
  "ra_str": [],
  "random": [],
  "re": [],
  "reduce": [],
  "removeJob": [],
  "removeNode": [],
  "requests": [],
  "scipy": [],
  "shutil": [],
  "six": [],
  "sklearn": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "test_and_add_hipe_arg": [],
  "time": [],
  "urllib": [],
  "uuid": [],
  "warnings": []
 }
}