{
 "bad": [
  "ExtensionModule.__init__",
  "FeatureCheckClass",
  "WrapMode.default",
  "WrapMode.nodownload",
  "__main__.__file__",
  "_fn",
  "_get_native",
  "_send_signal_to_process_group",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "add_keys",
  "add_lib_args",
  "add_target",
  "aliases",
  "aliases.items",
  "alphanum_key",
  "arg_list_from_node",
  "argparse.ArgumentParser",
  "argparse.HelpFormatter",
  "argparse.Namespace",
  "argparse.REMAINDER",
  "argparse.SUPPRESS",
  "array",
  "assign",
  "assign_keys",
  "ast.AstConditionLevel",
  "ast.AstIDGenerator",
  "ast.AstIndentationGenerator",
  "ast.AstPrinter",
  "ast.IntrospectionInterpreter",
  "ast.build_target_functions",
  "ast.literal_eval",
  "backend.backends.Backend",
  "backend.backends.ExecutableSerialisation",
  "backend.backends.get_backend_from_name",
  "backend.vs2010backend.Vs2010Backend.touch_regen_timestamp",
  "backends.Backend",
  "backends.CleanTrees",
  "base.CMakeDependency",
  "base.ConfigToolDependency",
  "base.DependencyException",
  "base.DependencyFactory",
  "base.DependencyMethods",
  "base.DependencyMethods.AUTO",
  "base.DependencyMethods.CMAKE",
  "base.DependencyMethods.CONFIG_TOOL",
  "base.DependencyMethods.EXTRAFRAMEWORK",
  "base.DependencyMethods.PKGCONFIG",
  "base.DependencyMethods.QMAKE",
  "base.DependencyMethods.SYSCONFIG",
  "base.DependencyMethods.SYSTEM",
  "base.ExternalDependency",
  "base.ExternalProgram",
  "base.ExtraFrameworkDependency",
  "base.NonExistingExternalProgram",
  "base.PkgConfigDependency",
  "base._packages_accept_language.update",
  "base.detect_compiler",
  "base.factory_methods",
  "base.packages.update",
  "base.strip_system_libdirs",
  "boost.BoostDependency",
  "build.AliasTarget",
  "build.Build",
  "build.BuildTarget",
  "build.ConfigurationData",
  "build.ConfigureFile",
  "build.CustomTarget",
  "build.CustomTarget.known_kwargs",
  "build.CustomTargetIndex",
  "build.Data",
  "build.DependencyOverride",
  "build.EnvironmentVariables",
  "build.Executable",
  "build.ExtractedObjects",
  "build.GeneratedList",
  "build.Generator",
  "build.IncludeDirs",
  "build.InvalidArguments",
  "build.Jar",
  "build.RunScript",
  "build.RunTarget",
  "build.SharedLibrary",
  "build.SharedModule",
  "build.StaticLibrary",
  "build.Target",
  "build.TestSetup",
  "build.environment",
  "build.environment.get_source_dir",
  "build.known_exe_kwargs",
  "build.known_jar_kwargs",
  "build.known_shlib_kwargs",
  "build.known_shmod_kwargs",
  "build.known_stlib_kwargs",
  "build.load",
  "build.rule",
  "build.rule.refcount",
  "build.save",
  "build_target_decorator_caller",
  "c",
  "cProfile.runctx",
  "c_function_attributes.CXX_FUNC_ATTRIBUTES.get",
  "c_function_attributes.C_FUNC_ATTRIBUTES",
  "check_contains",
  "check_flag",
  "check_list",
  "check_remove_node",
  "choose_compiler",
  "clang.clang_color_args",
  "client.CMakeClient",
  "client.RequestCMakeInputs",
  "client.RequestCodeModel",
  "client.RequestCompute",
  "client.RequestConfigure",
  "cls",
  "cls.LINKER_PREFIX",
  "cls.language",
  "cmake.CMakeException",
  "cmake.CMakeExecutor",
  "cmake.CMakeInterpreter",
  "cmake.CMakeTraceParser",
  "cmake.language_map",
  "cmpop",
  "coarrays.coarray_factory",
  "codecs.decode",
  "codecs.getwriter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "common.CMakeBuildFile",
  "common.CMakeConfiguration",
  "common.CMakeException",
  "common.CMakeTarget",
  "comp",
  "comp.for_machine",
  "comp.get_exelist",
  "comp_class",
  "comp_class.language",
  "compilers.AppleClangCCompiler",
  "compilers.AppleClangCPPCompiler",
  "compilers.ArmCCompiler",
  "compilers.ArmCPPCompiler",
  "compilers.ArmclangCCompiler",
  "compilers.ArmclangCPPCompiler",
  "compilers.C2000CCompiler",
  "compilers.C2000CPPCompiler",
  "compilers.CCompiler._get_file_from_list",
  "compilers.CCompiler._get_trials_from_pattern",
  "compilers.CcrxCCompiler",
  "compilers.CcrxCPPCompiler",
  "compilers.ClangCCompiler",
  "compilers.ClangCPPCompiler",
  "compilers.ClangClCCompiler",
  "compilers.ClangClCPPCompiler",
  "compilers.ClangCompiler",
  "compilers.ClangObjCCompiler",
  "compilers.ClangObjCPPCompiler",
  "compilers.Compiler",
  "compilers.Compiler.__init__",
  "compilers.CompilerArgs",
  "compilers.CrossNoRunException",
  "compilers.CudaCompiler",
  "compilers.CudaCompiler.LINKER_PREFIX",
  "compilers.DCompiler",
  "compilers.DmdDCompiler",
  "compilers.ElbrusCCompiler",
  "compilers.ElbrusCPPCompiler",
  "compilers.ElbrusFortranCompiler",
  "compilers.EmscriptenCCompiler",
  "compilers.EmscriptenCPPCompiler",
  "compilers.FlangFortranCompiler",
  "compilers.FortranCompiler",
  "compilers.G95FortranCompiler",
  "compilers.GnuCCompiler",
  "compilers.GnuCPPCompiler",
  "compilers.GnuCompiler",
  "compilers.GnuDCompiler",
  "compilers.GnuFortranCompiler",
  "compilers.GnuObjCCompiler",
  "compilers.GnuObjCPPCompiler",
  "compilers.IntelCCompiler",
  "compilers.IntelCPPCompiler",
  "compilers.IntelClCCompiler",
  "compilers.IntelClCPPCompiler",
  "compilers.IntelClFortranCompiler",
  "compilers.IntelFortranCompiler",
  "compilers.JavaCompiler",
  "compilers.LLVMDCompiler",
  "compilers.MachineChoice",
  "compilers.MonoCompiler",
  "compilers.NAGFortranCompiler",
  "compilers.Open64FortranCompiler",
  "compilers.PGICCompiler",
  "compilers.PGICPPCompiler",
  "compilers.PGIFortranCompiler",
  "compilers.PathScaleFortranCompiler",
  "compilers.RunResult",
  "compilers.RustCompiler",
  "compilers.RustCompiler.language",
  "compilers.SunFortranCompiler",
  "compilers.SwiftCompiler",
  "compilers.ValaCompiler",
  "compilers.VisualStudioCCompiler",
  "compilers.VisualStudioCCompiler.native_args_to_unix",
  "compilers.VisualStudioCCompiler.unix_args_to_native",
  "compilers.VisualStudioCPPCompiler",
  "compilers.VisualStudioCsCompiler",
  "compilers.VisualStudioLikeCompiler",
  "compilers.Xc16CCompiler",
  "compilers.all_languages",
  "compilers.base_options",
  "compilers.c.AppleClangCCompiler",
  "compilers.c_suffixes",
  "compilers.clib_langs",
  "compilers.clike_debug_args",
  "compilers.clike_optimization_args",
  "compilers.clink_langs",
  "compilers.compilers.Compiler",
  "compilers.compilers.get_global_options",
  "compilers.compilers.header_suffixes",
  "compilers.compilers.is_header",
  "compilers.compilers.lang_suffixes",
  "compilers.compilers.lang_suffixes.values",
  "compilers.compilers.lib_suffixes",
  "compilers.compilers.obj_suffixes",
  "compilers.cpp.AppleClangCPPCompiler",
  "compilers.cpp_suffixes",
  "compilers.cuda_buildtype_args",
  "compilers.cuda_debug_args",
  "compilers.cuda_optimization_args",
  "compilers.d_dmd_buildtype_args",
  "compilers.d_gdc_buildtype_args",
  "compilers.d_ldc_buildtype_args",
  "compilers.get_base_compile_args",
  "compilers.get_base_link_args",
  "compilers.get_largefile_args",
  "compilers.gnu_winlibs",
  "compilers.is_assembly",
  "compilers.is_header",
  "compilers.is_known_suffix",
  "compilers.is_library",
  "compilers.is_llvm_ir",
  "compilers.is_object",
  "compilers.is_source",
  "compilers.java_buildtype_args",
  "compilers.lang_suffixes",
  "compilers.mono_buildtype_args",
  "compilers.msvc_winlibs",
  "compilers.rust_buildtype_args",
  "compilers.sort_clink",
  "compilers.swift_buildtype_args",
  "compilers.unixy_compiler_internal_libs",
  "compilers.values",
  "concurrent.futures.ThreadPoolExecutor",
  "configparser.ConfigParser",
  "configparser.Error",
  "contextlib.closing",
  "contextlib.contextmanager",
  "convert",
  "copy.copy",
  "copy.deepcopy",
  "coredata",
  "coredata.CoreData",
  "coredata.MesonException",
  "coredata.UserArrayOption",
  "coredata.UserBooleanOption",
  "coredata.UserComboOption",
  "coredata.UserFeatureOption",
  "coredata.UserIntegerOption",
  "coredata.UserOption",
  "coredata.UserStringOption",
  "coredata.__dict__.items",
  "coredata.backend_options",
  "coredata.backendlist",
  "coredata.base_options",
  "coredata.builtin_options.keys",
  "coredata.builtins",
  "coredata.builtins.items",
  "coredata.builtins_per_machine.build.items",
  "coredata.builtins_per_machine.host",
  "coredata.compiler_options.build.items",
  "coredata.compiler_options.host",
  "coredata.create_options_dict",
  "coredata.default_yielding",
  "coredata.deps.host.values",
  "coredata.forbidden_target_names",
  "coredata.get_builtin_option",
  "coredata.get_cmd_line_file",
  "coredata.get_cmd_line_options",
  "coredata.load",
  "coredata.load_configs",
  "coredata.parse_cmd_line_options",
  "coredata.read_cmd_line_file",
  "coredata.register_builtin_arguments",
  "coredata.save",
  "coredata.update_cmd_line_file",
  "coredata.user_options",
  "coredata.version",
  "coredata.write_cmd_line_file",
  "ctypes.byref",
  "ctypes.c_voidp",
  "ctypes.sizeof",
  "ctypes.windll.kernel32",
  "ctypes.wintypes.DWORD",
  "cuda.CudaDependency",
  "custom_target",
  "d",
  "d._check_version",
  "d.found",
  "d.get_partial_dependency",
  "d.language",
  "d.log_details",
  "d.log_info",
  "d.log_tried",
  "d.name.rsplit",
  "d.version",
  "datetime.date.today",
  "datetime.datetime.now",
  "decorator",
  "dependencies.AppleFrameworks",
  "dependencies.CMakeDependency",
  "dependencies.Dependency",
  "dependencies.DependencyException",
  "dependencies.EmptyExternalProgram",
  "dependencies.ExternalLibrary",
  "dependencies.ExternalProgram",
  "dependencies.ExternalProgram.from_bin_list",
  "dependencies.ExternalProgram.from_entry",
  "dependencies.InternalDependency",
  "dependencies.NonExistingExternalProgram",
  "dependencies.NotFoundDependency",
  "dependencies.OpenMPDependency",
  "dependencies.PkgConfigDependency",
  "dependencies.Qt4Dependency",
  "dependencies.Qt5Dependency",
  "dependencies.base.DependencyMethods.EXTRAFRAMEWORK",
  "dependencies.base.DependencyMethods.PKGCONFIG",
  "dependencies.base.DependencyMethods.SYSCONFIG",
  "dependencies.base.DubDependency.class_dubbin",
  "dependencies.base.ExternalDependency",
  "dependencies.base.ExternalProgram",
  "dependencies.base.ExternalProgram.from_entry",
  "dependencies.base.NonExistingExternalProgram",
  "dependencies.base.PkgConfigDependency",
  "dependencies.find_external_dependency",
  "dependencies.get_dep_identifier",
  "dependencies.misc.ThreadDependency",
  "depfile.DepFile",
  "detect_cycle",
  "detect_prefix",
  "dev.ValgrindDependency",
  "dev.gmock_factory",
  "dev.gtest_factory",
  "dev.llvm_factory",
  "dev.zlib_factory",
  "dict.fromkeys",
  "do_source",
  "do_target",
  "e",
  "ensure_absolute",
  "enum.Enum",
  "enum.unique",
  "envconfig.BinaryTable",
  "envconfig.BinaryTable.detect_ccache",
  "envconfig.BinaryTable.parse_entry",
  "envconfig.Directories",
  "envconfig.MachineInfo",
  "envconfig.MachineInfo.from_literal",
  "envconfig.MesonConfigFile.from_config_parser",
  "envconfig.Properties",
  "envconfig.get_env_var",
  "envconfig.get_env_var_pair",
  "envconfig.known_cpu_families",
  "environment.Environment",
  "environment.Environment.private_dir",
  "environment.MachineInfo",
  "environment.build_filename",
  "environment.coredata.base_options",
  "environment.coredata.base_options.value",
  "environment.coredata.get_builtin_option",
  "environment.detect_clangformat",
  "environment.detect_cpu_family",
  "environment.detect_machine_info",
  "environment.detect_msys2_arch",
  "environment.detect_ninja",
  "environment.detect_ninja_command_and_version",
  "environment.detect_scanbuild",
  "environment.get_bindir",
  "environment.get_libdir",
  "environment.get_llvm_tool_names",
  "environment.get_shared_lib_dir",
  "environment.get_shared_module_dir",
  "environment.get_source_dir",
  "environment.get_static_lib_dir",
  "environment.is_cross_build",
  "environment.is_header",
  "environment.is_source",
  "environment.machines",
  "environment.machines.get_exe_suffix",
  "environment.search_version",
  "environment.source_dir",
  "equal_func",
  "errno.EINVAL",
  "eval_generator_expressions",
  "executor.CMakeExecutor",
  "extract_tgt",
  "f",
  "fcntl.LOCK_EX",
  "fcntl.LOCK_NB",
  "fcntl.LOCK_UN",
  "fcntl.flock",
  "fetch",
  "fileapi.CMakeFileAPI",
  "find_module",
  "find_node",
  "fix_ldflags",
  "fn",
  "func",
  "function",
  "functools.lru_cache",
  "functools.partial",
  "functools.total_ordering",
  "functools.wraps",
  "gen_bins",
  "generate_compiler_flags",
  "generate_libs_flags",
  "generate_uninstalled_cflags",
  "generator.parse_generator_expressions",
  "get_cmake_define",
  "get_uninstalled_include_dirs",
  "gettext.read_linguas",
  "glob.glob",
  "glob.iglob",
  "gnu.GnuLikeCompiler",
  "gnu.gnu_optimization_args",
  "gzip.open",
  "hashlib.new",
  "hashlib.sha1",
  "hashlib.sha256",
  "hdf5.HDF5Dependency",
  "helper_parse_dir",
  "hotdoc.run_hotdoc.run",
  "id_node",
  "importlib.import_module",
  "indexed",
  "init_language_file",
  "insert_build_prefix",
  "interpreter.AstInterpreter",
  "interpreter.CompilerHolder",
  "interpreter.ConfigurationDataHolder",
  "interpreter.CustomTargetHolder",
  "interpreter.CustomTargetIndexHolder",
  "interpreter.DependencyHolder",
  "interpreter.ExternalProgramHolder",
  "interpreter.ExternalProgramHolder.__init__",
  "interpreter.GeneratedListHolder",
  "interpreter.GeneratedObjectsHolder",
  "interpreter.Interpreter",
  "interpreter.InterpreterException",
  "interpreter.InvalidCode",
  "interpreter.OverrideProgram",
  "interpreter.SubprojectHolder",
  "interpreter.extract_required_kwarg",
  "interpreter.permitted_kwargs",
  "interpreterbase.BreakRequest",
  "interpreterbase.ContinueRequest",
  "interpreterbase.Disabler",
  "interpreterbase.FeatureDeprecated",
  "interpreterbase.FeatureDeprecated.report",
  "interpreterbase.FeatureNew",
  "interpreterbase.FeatureNew.report",
  "interpreterbase.FeatureNewKwargs",
  "interpreterbase.InterpreterBase",
  "interpreterbase.InterpreterException",
  "interpreterbase.InterpreterObject",
  "interpreterbase.InterpreterObject.__init__",
  "interpreterbase.InvalidArguments",
  "interpreterbase.InvalidCode",
  "interpreterbase.MutableInterpreterObject",
  "interpreterbase.MutableInterpreterObject.__init__",
  "interpreterbase.ObjectHolder",
  "interpreterbase.ObjectHolder.__init__",
  "interpreterbase.SubdirDoneRequest",
  "interpreterbase.TYPE_nkwargs",
  "interpreterbase.TYPE_nvar",
  "interpreterbase.check_stringlist",
  "interpreterbase.disablerIfNotFound",
  "interpreterbase.flatten",
  "interpreterbase.noArgsFlattening",
  "interpreterbase.noKwargs",
  "interpreterbase.noPosargs",
  "interpreterbase.permittedKwargs",
  "interpreterbase.stringArgs",
  "io.StringIO",
  "itertools.chain",
  "itertools.filterfalse",
  "itertools.tee",
  "json.JSONDecodeError",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "line_is_valid",
  "linkers.AppleDynamicLinker",
  "linkers.ArLinker",
  "linkers.ArmClangDynamicLinker",
  "linkers.ArmDynamicLinker",
  "linkers.ArmarLinker",
  "linkers.C2000DynamicLinker",
  "linkers.C2000Linker",
  "linkers.CcrxDynamicLinker",
  "linkers.CcrxLinker",
  "linkers.ClangClDynamicLinker",
  "linkers.CudaLinker",
  "linkers.CudaLinker.parse_version",
  "linkers.DLinker",
  "linkers.GnuBFDDynamicLinker",
  "linkers.GnuGoldDynamicLinker",
  "linkers.GnuLikeDynamicLinkerMixin",
  "linkers.IntelVisualStudioLinker",
  "linkers.LLVMDynamicLinker",
  "linkers.LinkerEnvVarsMixin",
  "linkers.LinkerEnvVarsMixin.get_args_from_envvars",
  "linkers.MSVCDynamicLinker",
  "linkers.OptlinkDynamicLinker",
  "linkers.PGIDynamicLinker",
  "linkers.PGIStaticLinker",
  "linkers.SolarisDynamicLinker",
  "linkers.StaticLinker",
  "linkers.VisualStudioLikeLinkerMixin",
  "linkers.VisualStudioLinker",
  "linkers.WASMDynamicLinker",
  "linkers.Xc16DynamicLinker",
  "linkers.Xc16Linker",
  "linkers.XilinkDynamicLinker",
  "locale.getpreferredencoding",
  "logger_fun",
  "lzma.open",
  "make_abs",
  "mcompile.add_arguments",
  "mcompile.run",
  "mconf.add_arguments",
  "mconf.make_lower_case",
  "mconf.run",
  "mdist.add_arguments",
  "mdist.run",
  "mesonbuild.ast.introspection.IntrospectionHelper",
  "mesonbuild.ast.introspection.IntrospectionInterpreter",
  "mesonbuild.ast.introspection.build_target_functions",
  "mesonbuild.ast.postprocess.AstVisitor",
  "mesonbuild.ast.printer.AstVisitor",
  "mesonbuild.ast.printer.arithmic_map",
  "mesonbuild.backend.backends.ExecutableSerialisation",
  "mesonbuild.backend.backends.InstallData",
  "mesonbuild.backend.backends.TargetInstallData",
  "mesonbuild.backend.backends.TestSerialisation",
  "mesonbuild.backend.backends.build",
  "mesonbuild.backend.ninjabackend.FORTRAN_INCLUDE_PAT",
  "mesonbuild.backend.ninjabackend.FORTRAN_MODULE_PAT",
  "mesonbuild.backend.ninjabackend.FORTRAN_SUBMOD_PAT",
  "mesonbuild.backend.ninjabackend.FORTRAN_USE_PAT",
  "mesonbuild.backend.ninjabackend.NinjaBuildElement",
  "mesonbuild.backend.ninjabackend.NinjaComment",
  "mesonbuild.backend.ninjabackend.NinjaRule",
  "mesonbuild.backend.ninjabackend._scan_fortran_file_deps",
  "mesonbuild.backend.ninjabackend.build",
  "mesonbuild.backend.ninjabackend.dependencies",
  "mesonbuild.backend.ninjabackend.execute_wrapper",
  "mesonbuild.backend.ninjabackend.ninja_quote",
  "mesonbuild.backend.ninjabackend.quote_func",
  "mesonbuild.backend.ninjabackend.rmfile_prefix",
  "mesonbuild.backend.vs2010backend.RegenInfo",
  "mesonbuild.backend.vs2010backend.Vs2010Backend",
  "mesonbuild.backend.vs2010backend.build",
  "mesonbuild.backend.vs2010backend.generate_guid_from_path",
  "mesonbuild.backend.vs2010backend.split_o_flags_args",
  "mesonbuild.backend.vs2015backend.Vs2015Backend",
  "mesonbuild.backend.vs2017backend.Vs2017Backend",
  "mesonbuild.backend.vs2019backend.Vs2019Backend",
  "mesonbuild.backend.xcodebackend.build",
  "mesonbuild.backend.xcodebackend.dependencies",
  "mesonbuild.build.Build",
  "mesonbuild.build.BuildTarget",
  "mesonbuild.build.CustomTarget",
  "mesonbuild.build.CustomTargetIndex",
  "mesonbuild.build.EnvironmentVariables",
  "mesonbuild.build.ExtractedObjects",
  "mesonbuild.build.GeneratedList",
  "mesonbuild.build.IncludeDirs",
  "mesonbuild.build.InvalidArguments",
  "mesonbuild.build.Jar",
  "mesonbuild.build.RunScript",
  "mesonbuild.build.RunTarget",
  "mesonbuild.build.SharedLibrary",
  "mesonbuild.build.StaticLibrary",
  "mesonbuild.build.Target",
  "mesonbuild.build.buildtarget_kwargs",
  "mesonbuild.build.cs_kwargs",
  "mesonbuild.build.dependencies",
  "mesonbuild.build.environment",
  "mesonbuild.build.get_sources_string_names",
  "mesonbuild.build.get_target_macos_dylib_install_name",
  "mesonbuild.build.known_build_target_kwargs",
  "mesonbuild.build.known_exe_kwargs",
  "mesonbuild.build.known_jar_kwargs",
  "mesonbuild.build.known_shlib_kwargs",
  "mesonbuild.build.known_shmod_kwargs",
  "mesonbuild.build.known_stlib_kwargs",
  "mesonbuild.build.lang_arg_kwargs",
  "mesonbuild.build.load",
  "mesonbuild.build.pch_kwargs",
  "mesonbuild.build.rust_kwargs",
  "mesonbuild.build.vala_kwargs",
  "mesonbuild.cmake.client.CMAKE_MESSAGE_TYPES",
  "mesonbuild.cmake.client.CMAKE_REPLY_TYPES",
  "mesonbuild.cmake.client.CMAKE_SERVER_BEGIN_STR",
  "mesonbuild.cmake.client.CMAKE_SERVER_END_STR",
  "mesonbuild.cmake.client.Error",
  "mesonbuild.cmake.client.Message",
  "mesonbuild.cmake.client.MessageBase",
  "mesonbuild.cmake.client.MessageHello",
  "mesonbuild.cmake.client.Progress",
  "mesonbuild.cmake.client.ReplyBase",
  "mesonbuild.cmake.client.ReplyCMakeInputs",
  "mesonbuild.cmake.client.ReplyCodeModel",
  "mesonbuild.cmake.client.ReplyCompute",
  "mesonbuild.cmake.client.ReplyConfigure",
  "mesonbuild.cmake.client.ReplyHandShake",
  "mesonbuild.cmake.client.RequestBase",
  "mesonbuild.cmake.client.RequestHandShake",
  "mesonbuild.cmake.client.SignalBase",
  "mesonbuild.cmake.common.CMakeFileGroup",
  "mesonbuild.cmake.common.CMakeProject",
  "mesonbuild.cmake.common.CMakeTarget",
  "mesonbuild.cmake.common._flags_to_list",
  "mesonbuild.cmake.data.run_ctgt.SEPARATOR",
  "mesonbuild.cmake.data.run_ctgt.args",
  "mesonbuild.cmake.data.run_ctgt.capture_file",
  "mesonbuild.cmake.data.run_ctgt.cmd",
  "mesonbuild.cmake.data.run_ctgt.commands",
  "mesonbuild.cmake.data.run_ctgt.do_copy",
  "mesonbuild.cmake.data.run_ctgt.dummy_target",
  "mesonbuild.cmake.data.run_ctgt.i",
  "mesonbuild.cmake.data.run_ctgt.out_file",
  "mesonbuild.cmake.data.run_ctgt.parser",
  "mesonbuild.cmake.data.run_ctgt.res",
  "mesonbuild.cmake.data.run_ctgt.stderr",
  "mesonbuild.cmake.data.run_ctgt.stdout",
  "mesonbuild.cmake.data.run_ctgt.zipped_outputs",
  "mesonbuild.cmake.executor.CMakeExecutor",
  "mesonbuild.cmake.executor.TYPE_result",
  "mesonbuild.cmake.fileapi.STRIP_KEYS",
  "mesonbuild.cmake.interpreter.CMakeAPI",
  "mesonbuild.cmake.interpreter.ConverterCustomTarget",
  "mesonbuild.cmake.interpreter.ConverterTarget",
  "mesonbuild.cmake.interpreter.CustomTargetReference",
  "mesonbuild.cmake.interpreter.OutputTargetMap",
  "mesonbuild.cmake.interpreter._cmake_name_regex",
  "mesonbuild.cmake.interpreter._sanitize_cmake_name",
  "mesonbuild.cmake.interpreter.backend_generator_map",
  "mesonbuild.cmake.interpreter.blacklist_clang_cl_link_flags",
  "mesonbuild.cmake.interpreter.blacklist_compiler_flags",
  "mesonbuild.cmake.interpreter.blacklist_link_flags",
  "mesonbuild.cmake.interpreter.blacklist_link_libs",
  "mesonbuild.cmake.interpreter.disable_policy_warnings",
  "mesonbuild.cmake.interpreter.language_map",
  "mesonbuild.cmake.interpreter.skip_targets",
  "mesonbuild.cmake.interpreter.target_type_map",
  "mesonbuild.cmake.interpreter.transfer_dependencies_from",
  "mesonbuild.cmake.traceparser.CMakeGeneratorTarget",
  "mesonbuild.cmake.traceparser.CMakeTarget",
  "mesonbuild.cmake.traceparser.CMakeTraceLine",
  "mesonbuild.compilers.c.CCompiler",
  "mesonbuild.compilers.c.ClangCCompiler",
  "mesonbuild.compilers.c.GnuCCompiler",
  "mesonbuild.compilers.c.VisualStudioLikeCCompilerMixin",
  "mesonbuild.compilers.compilers.Compiler",
  "mesonbuild.compilers.compilers.CompilerArgs",
  "mesonbuild.compilers.compilers.RunResult",
  "mesonbuild.compilers.compilers.all_suffixes",
  "mesonbuild.compilers.compilers.cflags_mapping",
  "mesonbuild.compilers.compilers.clib_langs",
  "mesonbuild.compilers.compilers.clink_langs",
  "mesonbuild.compilers.compilers.clink_suffixes",
  "mesonbuild.compilers.compilers.get_args_from_envvars",
  "mesonbuild.compilers.compilers.header_suffixes",
  "mesonbuild.compilers.compilers.lang_suffixes",
  "mesonbuild.compilers.compilers.languages_using_cppflags",
  "mesonbuild.compilers.compilers.languages_using_ldflags",
  "mesonbuild.compilers.compilers.lib_suffixes",
  "mesonbuild.compilers.compilers.obj_suffixes",
  "mesonbuild.compilers.compilers.option_enabled",
  "mesonbuild.compilers.compilers.soregex",
  "mesonbuild.compilers.compilers.unixy_compiler_internal_libs",
  "mesonbuild.compilers.cpp.CPP11AsCPP14Mixin",
  "mesonbuild.compilers.cpp.CPPCompiler",
  "mesonbuild.compilers.cpp.ClangCPPCompiler",
  "mesonbuild.compilers.cpp.GnuCPPCompiler",
  "mesonbuild.compilers.cpp.VisualStudioLikeCPPCompilerMixin",
  "mesonbuild.compilers.cpp.non_msvc_eh_options",
  "mesonbuild.compilers.cs.CsCompiler",
  "mesonbuild.compilers.cs.cs_optimization_args",
  "mesonbuild.compilers.d.DCompiler",
  "mesonbuild.compilers.d.DmdLikeCompilerMixin",
  "mesonbuild.compilers.d.d_feature_args",
  "mesonbuild.compilers.d.dmd_optimization_args",
  "mesonbuild.compilers.d.ldc_optimization_args",
  "mesonbuild.compilers.fortran.FortranCompiler",
  "mesonbuild.compilers.fortran.GnuFortranCompiler",
  "mesonbuild.compilers.mixins.arm.arm_buildtype_args",
  "mesonbuild.compilers.mixins.arm.arm_optimization_args",
  "mesonbuild.compilers.mixins.arm.armclang_buildtype_args",
  "mesonbuild.compilers.mixins.arm.armclang_optimization_args",
  "mesonbuild.compilers.mixins.c2000.c2000_buildtype_args",
  "mesonbuild.compilers.mixins.c2000.c2000_debug_args",
  "mesonbuild.compilers.mixins.c2000.c2000_optimization_args",
  "mesonbuild.compilers.mixins.ccrx.ccrx_buildtype_args",
  "mesonbuild.compilers.mixins.ccrx.ccrx_debug_args",
  "mesonbuild.compilers.mixins.ccrx.ccrx_optimization_args",
  "mesonbuild.compilers.mixins.clang.clang_color_args",
  "mesonbuild.compilers.mixins.clang.clang_optimization_args",
  "mesonbuild.compilers.mixins.gnu.GnuLikeCompiler",
  "mesonbuild.compilers.mixins.gnu.clike_debug_args",
  "mesonbuild.compilers.mixins.gnu.gnu_color_args",
  "mesonbuild.compilers.mixins.gnu.gnu_optimization_args",
  "mesonbuild.compilers.mixins.gnu.gnu_symbol_visibility_args",
  "mesonbuild.compilers.mixins.gnu.gnulike_buildtype_args",
  "mesonbuild.compilers.mixins.gnu.gnulike_default_include_dirs",
  "mesonbuild.compilers.mixins.gnu.gnulike_instruction_set_args",
  "mesonbuild.compilers.mixins.pgi.pgi_buildtype_args",
  "mesonbuild.compilers.mixins.visualstudio.VisualStudioLikeCompiler",
  "mesonbuild.compilers.mixins.visualstudio.clangcl_buildtype_args",
  "mesonbuild.compilers.mixins.visualstudio.msvc_buildtype_args",
  "mesonbuild.compilers.mixins.visualstudio.msvc_debug_args",
  "mesonbuild.compilers.mixins.visualstudio.msvc_optimization_args",
  "mesonbuild.compilers.mixins.visualstudio.vs32_instruction_set_args",
  "mesonbuild.compilers.mixins.visualstudio.vs64_instruction_set_args",
  "mesonbuild.compilers.mixins.xc16.xc16_buildtype_args",
  "mesonbuild.compilers.mixins.xc16.xc16_debug_args",
  "mesonbuild.compilers.mixins.xc16.xc16_optimization_args",
  "mesonbuild.compilers.objc.ObjCCompiler",
  "mesonbuild.compilers.objcpp.ObjCPPCompiler",
  "mesonbuild.compilers.rust.rust_optimization_args",
  "mesonbuild.compilers.swift.swift_optimization_args",
  "mesonbuild.coredata.BuiltinOption",
  "mesonbuild.coredata.CmdLineFileParser",
  "mesonbuild.coredata.CoreData",
  "mesonbuild.coredata.DependencyCache",
  "mesonbuild.coredata.DependencyCacheType",
  "mesonbuild.coredata.DependencySubCache",
  "mesonbuild.coredata.MesonException",
  "mesonbuild.coredata.UserArrayOption",
  "mesonbuild.coredata.UserBooleanOption",
  "mesonbuild.coredata.UserComboOption",
  "mesonbuild.coredata.UserFeatureOption",
  "mesonbuild.coredata.UserIntegerOption",
  "mesonbuild.coredata.UserOption",
  "mesonbuild.coredata.UserStringOption",
  "mesonbuild.coredata.UserUmaskOption",
  "mesonbuild.coredata._T",
  "mesonbuild.coredata._U",
  "mesonbuild.coredata._V",
  "mesonbuild.coredata.backendlist",
  "mesonbuild.coredata.cmd_line_options_to_string",
  "mesonbuild.coredata.create_options_dict",
  "mesonbuild.coredata.default_yielding",
  "mesonbuild.coredata.get_cmd_line_file",
  "mesonbuild.coredata.major_versions_differ",
  "mesonbuild.coredata.read_cmd_line_file",
  "mesonbuild.coredata.version",
  "mesonbuild.dependencies.base.CMakeDependency",
  "mesonbuild.dependencies.base.Dependency",
  "mesonbuild.dependencies.base.DependencyException",
  "mesonbuild.dependencies.base.DependencyMethods",
  "mesonbuild.dependencies.base.DubDependency",
  "mesonbuild.dependencies.base.ExternalDependency",
  "mesonbuild.dependencies.base.ExternalProgram",
  "mesonbuild.dependencies.base.ExtraFrameworkDependency",
  "mesonbuild.dependencies.base.HasNativeKwarg",
  "mesonbuild.dependencies.base.InternalDependency",
  "mesonbuild.dependencies.base.NonExistingExternalProgram",
  "mesonbuild.dependencies.base.NotFoundDependency",
  "mesonbuild.dependencies.base.PkgConfigDependency",
  "mesonbuild.dependencies.base._build_external_dependency_list",
  "mesonbuild.dependencies.base._packages_accept_language",
  "mesonbuild.dependencies.base.detect_compiler",
  "mesonbuild.dependencies.base.display_name_map",
  "mesonbuild.dependencies.base.packages",
  "mesonbuild.dependencies.base.process_method_kw",
  "mesonbuild.dependencies.base.sort_libpaths",
  "mesonbuild.dependencies.boost.BoostIncludeDir",
  "mesonbuild.dependencies.boost.BoostLibrary",
  "mesonbuild.dependencies.boost.BoostLibraryFile",
  "mesonbuild.dependencies.dev.GMockDependencyPC",
  "mesonbuild.dependencies.dev.GMockDependencySystem",
  "mesonbuild.dependencies.dev.GTestDependencyPC",
  "mesonbuild.dependencies.dev.GTestDependencySystem",
  "mesonbuild.dependencies.dev.LLVMDependencyCMake",
  "mesonbuild.dependencies.dev.LLVMDependencyConfigTool",
  "mesonbuild.dependencies.dev.ZlibSystemDependency",
  "mesonbuild.dependencies.dev.get_shared_library_suffix",
  "mesonbuild.dependencies.dev.gtest_factory",
  "mesonbuild.dependencies.misc.CupsDependencyConfigTool",
  "mesonbuild.dependencies.misc.GpgmeDependencyConfigTool",
  "mesonbuild.dependencies.misc.LibGCryptDependencyConfigTool",
  "mesonbuild.dependencies.misc.LibWmfDependencyConfigTool",
  "mesonbuild.dependencies.misc.PcapDependencyConfigTool",
  "mesonbuild.dependencies.misc.Python3DependencySystem",
  "mesonbuild.dependencies.misc.ShadercDependency",
  "mesonbuild.dependencies.misc.ThreadDependency",
  "mesonbuild.dependencies.mpi._MPIConfigToolDependency",
  "mesonbuild.dependencies.ui.GLDependencySystem",
  "mesonbuild.dependencies.ui.QtBaseDependency",
  "mesonbuild.dependencies.ui.QtExtraFrameworkDependency",
  "mesonbuild.dependencies.ui.SDL2DependencyConfigTool",
  "mesonbuild.dependencies.ui.VulkanDependencySystem",
  "mesonbuild.dependencies.ui._qt_get_private_includes",
  "mesonbuild.depfile.Target",
  "mesonbuild.depfile.parse",
  "mesonbuild.envconfig.CPU_FAMILES_64_BIT",
  "mesonbuild.envconfig.get_env_var",
  "mesonbuild.envconfig.get_env_var_pair",
  "mesonbuild.envconfig.known_cpu_families",
  "mesonbuild.environment.CompilersDict",
  "mesonbuild.environment.Environment",
  "mesonbuild.environment.any_compiler_has_define",
  "mesonbuild.environment.compilers",
  "mesonbuild.environment.detect_cpu",
  "mesonbuild.environment.detect_cpu_family",
  "mesonbuild.environment.detect_gcovr",
  "mesonbuild.environment.detect_machine_info",
  "mesonbuild.environment.detect_native_windows_arch",
  "mesonbuild.environment.detect_ninja",
  "mesonbuild.environment.detect_ninja_command_and_version",
  "mesonbuild.environment.detect_system",
  "mesonbuild.environment.detect_windows_arch",
  "mesonbuild.environment.find_coverage_tools",
  "mesonbuild.environment.get_llvm_tool_names",
  "mesonbuild.environment.machine_info_can_run",
  "mesonbuild.environment.search_version",
  "mesonbuild.interpreter.BothLibrariesHolder",
  "mesonbuild.interpreter.BuildTargetHolder",
  "mesonbuild.interpreter.CompilerHolder",
  "mesonbuild.interpreter.ConfigurationDataHolder",
  "mesonbuild.interpreter.CustomTargetHolder",
  "mesonbuild.interpreter.CustomTargetIndexHolder",
  "mesonbuild.interpreter.DataHolder",
  "mesonbuild.interpreter.DependencyHolder",
  "mesonbuild.interpreter.EnvironmentVariablesHolder",
  "mesonbuild.interpreter.ExecutableHolder",
  "mesonbuild.interpreter.ExternalLibraryHolder",
  "mesonbuild.interpreter.ExternalProgramHolder",
  "mesonbuild.interpreter.FeatureOptionHolder",
  "mesonbuild.interpreter.GeneratedListHolder",
  "mesonbuild.interpreter.GeneratedObjectsHolder",
  "mesonbuild.interpreter.GeneratorHolder",
  "mesonbuild.interpreter.Headers",
  "mesonbuild.interpreter.IncludeDirsHolder",
  "mesonbuild.interpreter.InstallDir",
  "mesonbuild.interpreter.Interpreter",
  "mesonbuild.interpreter.JarHolder",
  "mesonbuild.interpreter.MachineHolder",
  "mesonbuild.interpreter.Man",
  "mesonbuild.interpreter.MesonMain",
  "mesonbuild.interpreter.ModuleHolder",
  "mesonbuild.interpreter.ModuleState",
  "mesonbuild.interpreter.OverrideProgram",
  "mesonbuild.interpreter.RunProcess",
  "mesonbuild.interpreter.RunTargetHolder",
  "mesonbuild.interpreter.SharedLibraryHolder",
  "mesonbuild.interpreter.SharedModuleHolder",
  "mesonbuild.interpreter.StaticLibraryHolder",
  "mesonbuild.interpreter.SubprojectHolder",
  "mesonbuild.interpreter.Summary",
  "mesonbuild.interpreter.TargetHolder",
  "mesonbuild.interpreter.Test",
  "mesonbuild.interpreter.TryRunResultHolder",
  "mesonbuild.interpreter._base_test_args",
  "mesonbuild.interpreter.build",
  "mesonbuild.interpreter.extract_required_kwarg",
  "mesonbuild.interpreter.extract_search_dirs",
  "mesonbuild.interpreter.find_library_permitted_kwargs",
  "mesonbuild.interpreter.header_permitted_kwargs",
  "mesonbuild.interpreter.known_build_target_kwargs",
  "mesonbuild.interpreter.known_library_kwargs",
  "mesonbuild.interpreter.permitted_kwargs",
  "mesonbuild.interpreter.permitted_method_kwargs",
  "mesonbuild.interpreter.stringifyUserArguments",
  "mesonbuild.interpreterbase.BreakRequest",
  "mesonbuild.interpreterbase.ContinueRequest",
  "mesonbuild.interpreterbase.Disabler",
  "mesonbuild.interpreterbase.FeatureCheckBase",
  "mesonbuild.interpreterbase.FeatureCheckKwargsBase",
  "mesonbuild.interpreterbase.FeatureDeprecated",
  "mesonbuild.interpreterbase.FeatureNew",
  "mesonbuild.interpreterbase.InterpreterException",
  "mesonbuild.interpreterbase.InterpreterObject",
  "mesonbuild.interpreterbase.InvalidArguments",
  "mesonbuild.interpreterbase.InvalidCode",
  "mesonbuild.interpreterbase.MutableInterpreterObject",
  "mesonbuild.interpreterbase.ObjectHolder",
  "mesonbuild.interpreterbase.SubdirDoneRequest",
  "mesonbuild.interpreterbase.TV_InterpreterObject",
  "mesonbuild.interpreterbase.TYPE_elementary",
  "mesonbuild.interpreterbase.TYPE_nkwargs",
  "mesonbuild.interpreterbase.TYPE_nvar",
  "mesonbuild.interpreterbase.TYPE_var",
  "mesonbuild.interpreterbase._get_callee_args",
  "mesonbuild.interpreterbase.builtinMethodNoKwargs",
  "mesonbuild.interpreterbase.check_stringlist",
  "mesonbuild.interpreterbase.flatten",
  "mesonbuild.interpreterbase.is_arg_disabled",
  "mesonbuild.interpreterbase.is_disabled",
  "mesonbuild.interpreterbase.is_disabler",
  "mesonbuild.linkers.ArLinker",
  "mesonbuild.linkers.ArmDynamicLinker",
  "mesonbuild.linkers.DynamicLinker",
  "mesonbuild.linkers.GnuDynamicLinker",
  "mesonbuild.linkers.GnuLikeDynamicLinkerMixin",
  "mesonbuild.linkers.LinkerEnvVarsMixin",
  "mesonbuild.linkers.PosixDynamicLinkerMixin",
  "mesonbuild.linkers.StaticLinker",
  "mesonbuild.linkers.VisualStudioLikeLinker",
  "mesonbuild.linkers.VisualStudioLikeLinkerMixin",
  "mesonbuild.linkers.evaluate_rpath",
  "mesonbuild.linkers.order_rpaths",
  "mesonbuild.linkers.prepare_rpaths",
  "mesonbuild.mconf.Conf",
  "mesonbuild.mconf.ConfException",
  "mesonbuild.mconf.make_lower_case",
  "mesonbuild.mdist.archive_choices",
  "mesonbuild.mdist.archive_extension",
  "mesonbuild.mdist.check_dist",
  "mesonbuild.mdist.create_dist_git",
  "mesonbuild.mdist.create_dist_hg",
  "mesonbuild.mdist.create_hash",
  "mesonbuild.mdist.del_gitfiles",
  "mesonbuild.mdist.determine_archives_to_generate",
  "mesonbuild.mdist.git_clone",
  "mesonbuild.mdist.git_have_dirty_index",
  "mesonbuild.mdist.hg_have_dirty_index",
  "mesonbuild.mdist.is_git",
  "mesonbuild.mdist.is_hg",
  "mesonbuild.mdist.process_submodules",
  "mesonbuild.mdist.run_dist_scripts",
  "mesonbuild.mdist.run_dist_steps",
  "mesonbuild.mesonlib.CONF_C_PRELUDE",
  "mesonbuild.mesonlib.CONF_NASM_PRELUDE",
  "mesonbuild.mesonlib.EnvironmentException",
  "mesonbuild.mesonlib.File",
  "mesonbuild.mesonlib.File.from_built_file",
  "mesonbuild.mesonlib.File.from_source_file",
  "mesonbuild.mesonlib.GIT",
  "mesonbuild.mesonlib.LibType",
  "mesonbuild.mesonlib.LibType.PREFER_SHARED",
  "mesonbuild.mesonlib.MachineChoice",
  "mesonbuild.mesonlib.MesonException",
  "mesonbuild.mesonlib.OptionProxy",
  "mesonbuild.mesonlib.OrderedEnum",
  "mesonbuild.mesonlib.OrderedSet",
  "mesonbuild.mesonlib.PerMachine",
  "mesonbuild.mesonlib.PerMachineDefaultable",
  "mesonbuild.mesonlib.PerThreeMachine",
  "mesonbuild.mesonlib.PerThreeMachineDefaultable",
  "mesonbuild.mesonlib.Popen_safe",
  "mesonbuild.mesonlib.Popen_safe_legacy",
  "mesonbuild.mesonlib.ProgressBarFallback",
  "mesonbuild.mesonlib.ProgressBarTqdm",
  "mesonbuild.mesonlib.Version",
  "mesonbuild.mesonlib._T",
  "mesonbuild.mesonlib._U",
  "mesonbuild.mesonlib._make_tree_writable",
  "mesonbuild.mesonlib._substitute_values_check_errors",
  "mesonbuild.mesonlib._version_extract_cmpop",
  "mesonbuild.mesonlib._whitespace",
  "mesonbuild.mesonlib.do_conf_str",
  "mesonbuild.mesonlib.do_define",
  "mesonbuild.mesonlib.do_replacement",
  "mesonbuild.mesonlib.get_compiler_for_source",
  "mesonbuild.mesonlib.have_fcntl",
  "mesonbuild.mesonlib.have_msvcrt",
  "mesonbuild.mesonlib.is_ascii_string",
  "mesonbuild.mesonlib.is_debianlike",
  "mesonbuild.mesonlib.is_freebsd",
  "mesonbuild.mesonlib.is_osx",
  "mesonbuild.mesonlib.is_sunos",
  "mesonbuild.mesonlib.is_windows",
  "mesonbuild.mesonlib.iter_regexin_iter",
  "mesonbuild.mesonlib.listify",
  "mesonbuild.mesonlib.meson_command",
  "mesonbuild.mesonlib.python_command",
  "mesonbuild.mesonlib.quote_arg",
  "mesonbuild.mesonlib.replace_if_different",
  "mesonbuild.mesonlib.typeslistify",
  "mesonbuild.mesonlib.version_compare",
  "mesonbuild.mesonlib.windows_proof_rmtree",
  "mesonbuild.mesonmain.CommandLineParser",
  "mesonbuild.mesonmain.ensure_stdout_accepts_unicode",
  "mesonbuild.mesonmain.main",
  "mesonbuild.mesonmain.run",
  "mesonbuild.mesonmain.run_script_command",
  "mesonbuild.minit.DEFAULT_PROJECT",
  "mesonbuild.minit.DEFAULT_TYPES",
  "mesonbuild.minit.DEFAULT_VERSION",
  "mesonbuild.minit.FORTRAN_SUFFIXES",
  "mesonbuild.minit.INFO_MESSAGE",
  "mesonbuild.minit.LANG_SUFFIXES",
  "mesonbuild.minit.LANG_SUPPORTED",
  "mesonbuild.minit.autodetect_options",
  "mesonbuild.minit.create_sample",
  "mesonbuild.minstall.DirMaker",
  "mesonbuild.minstall.Installer",
  "mesonbuild.minstall.append_to_log",
  "mesonbuild.minstall.check_for_stampfile",
  "mesonbuild.minstall.get_destdir_path",
  "mesonbuild.minstall.is_executable",
  "mesonbuild.minstall.restore_selinux_contexts",
  "mesonbuild.minstall.sanitize_permissions",
  "mesonbuild.minstall.selinux_updates",
  "mesonbuild.minstall.set_chmod",
  "mesonbuild.minstall.set_chown",
  "mesonbuild.minstall.set_mode",
  "mesonbuild.minstall.symlink_warning",
  "mesonbuild.mintro.IntroCommand",
  "mesonbuild.mintro.find_buildsystem_files_list",
  "mesonbuild.mintro.get_meson_info_file",
  "mesonbuild.mintro.get_meson_introspection_required_version",
  "mesonbuild.mintro.get_meson_introspection_types",
  "mesonbuild.mintro.get_meson_introspection_version",
  "mesonbuild.mintro.get_test_list",
  "mesonbuild.mintro.list_benchmarks",
  "mesonbuild.mintro.list_buildoptions",
  "mesonbuild.mintro.list_buildsystem_files",
  "mesonbuild.mintro.list_deps",
  "mesonbuild.mintro.list_installed",
  "mesonbuild.mintro.list_projinfo",
  "mesonbuild.mintro.list_targets",
  "mesonbuild.mintro.list_tests",
  "mesonbuild.mintro.print_results",
  "mesonbuild.mintro.split_version_string",
  "mesonbuild.mintro.updated_introspection_files",
  "mesonbuild.mintro.write_intro_info",
  "mesonbuild.mlog.AnsiDecorator",
  "mesonbuild.mlog._debug_log_cmd",
  "mesonbuild.mlog._in_ci",
  "mesonbuild.mlog._log_error",
  "mesonbuild.mlog._logged_once",
  "mesonbuild.mlog._windows_ansi",
  "mesonbuild.mlog.bold",
  "mesonbuild.mlog.colorize_console",
  "mesonbuild.mlog.debug",
  "mesonbuild.mlog.error",
  "mesonbuild.mlog.exception",
  "mesonbuild.mlog.force_print",
  "mesonbuild.mlog.get_error_location_string",
  "mesonbuild.mlog.get_relative_path",
  "mesonbuild.mlog.log",
  "mesonbuild.mlog.log_depth",
  "mesonbuild.mlog.log_dir",
  "mesonbuild.mlog.log_disable_stdout",
  "mesonbuild.mlog.log_errors_only",
  "mesonbuild.mlog.log_fatal_warnings",
  "mesonbuild.mlog.log_file",
  "mesonbuild.mlog.log_fname",
  "mesonbuild.mlog.log_once",
  "mesonbuild.mlog.log_timestamp_start",
  "mesonbuild.mlog.log_warnings_counter",
  "mesonbuild.mlog.process_markup",
  "mesonbuild.mlog.red",
  "mesonbuild.mlog.setup_console",
  "mesonbuild.mlog.warning",
  "mesonbuild.mlog.yellow",
  "mesonbuild.modules.ModuleReturnValue",
  "mesonbuild.modules.cmake.CMakeSubprojectHolder",
  "mesonbuild.modules.cmake.COMPATIBILITIES",
  "mesonbuild.modules.cmake.CmakeModule",
  "mesonbuild.modules.cmake.ExtensionModule",
  "mesonbuild.modules.cmake.ModuleReturnValue",
  "mesonbuild.modules.cmake.PACKAGE_INIT_BASE",
  "mesonbuild.modules.cmake.PACKAGE_INIT_EXT",
  "mesonbuild.modules.cmake.PACKAGE_INIT_SET_AND_CHECK",
  "mesonbuild.modules.dlang.DlangModule",
  "mesonbuild.modules.dlang.ExtensionModule",
  "mesonbuild.modules.fs.ExtensionModule",
  "mesonbuild.modules.fs.FSModule",
  "mesonbuild.modules.fs.ModuleReturnValue",
  "mesonbuild.modules.gnome.ExtensionModule",
  "mesonbuild.modules.gnome.GResourceHeaderTarget",
  "mesonbuild.modules.gnome.GResourceTarget",
  "mesonbuild.modules.gnome.GirTarget",
  "mesonbuild.modules.gnome.GnomeModule",
  "mesonbuild.modules.gnome.ModuleReturnValue",
  "mesonbuild.modules.gnome.TypelibTarget",
  "mesonbuild.modules.gnome.VapiTarget",
  "mesonbuild.modules.gnome.get_include_args",
  "mesonbuild.modules.gnome.gir_has_option",
  "mesonbuild.modules.gnome.gresource_dep_needed_version",
  "mesonbuild.modules.gnome.native_glib_version",
  "mesonbuild.modules.hotdoc.ExtensionModule",
  "mesonbuild.modules.hotdoc.HotDocModule",
  "mesonbuild.modules.hotdoc.HotdocRunScript",
  "mesonbuild.modules.hotdoc.HotdocTarget",
  "mesonbuild.modules.hotdoc.HotdocTargetBuilder",
  "mesonbuild.modules.hotdoc.HotdocTargetHolder",
  "mesonbuild.modules.hotdoc.MIN_HOTDOC_VERSION",
  "mesonbuild.modules.hotdoc.ModuleReturnValue",
  "mesonbuild.modules.hotdoc.ensure_list",
  "mesonbuild.modules.hotdoc.get_include_args",
  "mesonbuild.modules.i18n.ExtensionModule",
  "mesonbuild.modules.i18n.I18nModule",
  "mesonbuild.modules.i18n.ModuleReturnValue",
  "mesonbuild.modules.i18n.PRESET_ARGS",
  "mesonbuild.modules.modtest.ExtensionModule",
  "mesonbuild.modules.modtest.ModuleReturnValue",
  "mesonbuild.modules.modtest.TestModule",
  "mesonbuild.modules.pkgconfig.DependenciesHelper",
  "mesonbuild.modules.pkgconfig.ExtensionModule",
  "mesonbuild.modules.pkgconfig.ModuleReturnValue",
  "mesonbuild.modules.pkgconfig.PkgConfigModule",
  "mesonbuild.modules.pkgconfig.already_warned_objs",
  "mesonbuild.modules.python.ExtensionModule",
  "mesonbuild.modules.python.INTROSPECT_COMMAND",
  "mesonbuild.modules.python.PythonDependency",
  "mesonbuild.modules.python.PythonInstallation",
  "mesonbuild.modules.python.PythonModule",
  "mesonbuild.modules.python.mod_kwargs",
  "mesonbuild.modules.python3.ExtensionModule",
  "mesonbuild.modules.python3.Python3Module",
  "mesonbuild.modules.qt.ExtensionModule",
  "mesonbuild.modules.qt.ModuleReturnValue",
  "mesonbuild.modules.qt._QT_DEPS_LUT",
  "mesonbuild.modules.qt.get_include_args",
  "mesonbuild.modules.qt4.Qt4Module",
  "mesonbuild.modules.qt5.Qt5Module",
  "mesonbuild.modules.rpm.ExtensionModule",
  "mesonbuild.modules.rpm.GirTarget",
  "mesonbuild.modules.rpm.ModuleReturnValue",
  "mesonbuild.modules.rpm.RPMModule",
  "mesonbuild.modules.rpm.TypelibTarget",
  "mesonbuild.modules.sourceset.ExtensionModule",
  "mesonbuild.modules.sourceset.SourceFiles",
  "mesonbuild.modules.sourceset.SourceFilesHolder",
  "mesonbuild.modules.sourceset.SourceSetHolder",
  "mesonbuild.modules.sourceset.SourceSetModule",
  "mesonbuild.modules.sourceset.SourceSetRule",
  "mesonbuild.modules.unstable_cuda.CudaModule",
  "mesonbuild.modules.unstable_cuda.ExtensionModule",
  "mesonbuild.modules.unstable_cuda.ModuleReturnValue",
  "mesonbuild.modules.unstable_icestorm.ExtensionModule",
  "mesonbuild.modules.unstable_icestorm.IceStormModule",
  "mesonbuild.modules.unstable_kconfig.ExtensionModule",
  "mesonbuild.modules.unstable_kconfig.KconfigModule",
  "mesonbuild.modules.unstable_simd.ExtensionModule",
  "mesonbuild.modules.unstable_simd.SimdModule",
  "mesonbuild.modules.windows.ExtensionModule",
  "mesonbuild.modules.windows.ModuleReturnValue",
  "mesonbuild.modules.windows.ResourceCompilerType",
  "mesonbuild.modules.windows.WindowsModule",
  "mesonbuild.modules.windows.get_include_args",
  "mesonbuild.mparser.AndNode",
  "mesonbuild.mparser.ArgumentNode",
  "mesonbuild.mparser.ArithmeticNode",
  "mesonbuild.mparser.ArrayNode",
  "mesonbuild.mparser.AssignmentNode",
  "mesonbuild.mparser.BaseNode",
  "mesonbuild.mparser.BlockParseException",
  "mesonbuild.mparser.BooleanNode",
  "mesonbuild.mparser.BreakNode",
  "mesonbuild.mparser.CodeBlockNode",
  "mesonbuild.mparser.ComparisonNode",
  "mesonbuild.mparser.ContinueNode",
  "mesonbuild.mparser.DictNode",
  "mesonbuild.mparser.ESCAPE_SEQUENCE_SINGLE_RE",
  "mesonbuild.mparser.ElementaryNode",
  "mesonbuild.mparser.EmptyNode",
  "mesonbuild.mparser.ForeachClauseNode",
  "mesonbuild.mparser.FunctionNode",
  "mesonbuild.mparser.IdNode",
  "mesonbuild.mparser.IfClauseNode",
  "mesonbuild.mparser.IfNode",
  "mesonbuild.mparser.IndexNode",
  "mesonbuild.mparser.Lexer",
  "mesonbuild.mparser.MesonUnicodeDecodeError",
  "mesonbuild.mparser.MethodNode",
  "mesonbuild.mparser.NotNode",
  "mesonbuild.mparser.NumberNode",
  "mesonbuild.mparser.OrNode",
  "mesonbuild.mparser.ParseException",
  "mesonbuild.mparser.PlusAssignmentNode",
  "mesonbuild.mparser.StringNode",
  "mesonbuild.mparser.TV_TokenTypes",
  "mesonbuild.mparser.TernaryNode",
  "mesonbuild.mparser.Token",
  "mesonbuild.mparser.UMinusNode",
  "mesonbuild.mparser.comparison_map",
  "mesonbuild.mparser.decode_match",
  "mesonbuild.msetup.MesonApp",
  "mesonbuild.msubprojects.add_common_arguments",
  "mesonbuild.msubprojects.checkout",
  "mesonbuild.msubprojects.download",
  "mesonbuild.msubprojects.foreach",
  "mesonbuild.msubprojects.git_output",
  "mesonbuild.msubprojects.git_show",
  "mesonbuild.msubprojects.update",
  "mesonbuild.msubprojects.update_file",
  "mesonbuild.msubprojects.update_git",
  "mesonbuild.msubprojects.update_hg",
  "mesonbuild.msubprojects.update_svn",
  "mesonbuild.msubprojects.update_wrapdb_file",
  "mesonbuild.mtest.GNU_ERROR_RETURNCODE",
  "mesonbuild.mtest.GNU_SKIP_RETURNCODE",
  "mesonbuild.mtest.SingleTestRunner",
  "mesonbuild.mtest.TAPParser",
  "mesonbuild.mtest.TestException",
  "mesonbuild.mtest.TestHarness",
  "mesonbuild.mtest.TestResult",
  "mesonbuild.mtest.TestRun",
  "mesonbuild.mtest.add_arguments",
  "mesonbuild.mtest.decode",
  "mesonbuild.mtest.determine_worker_count",
  "mesonbuild.mtest.env_tuple_to_str",
  "mesonbuild.mtest.io",
  "mesonbuild.mtest.is_cygwin",
  "mesonbuild.mtest.is_windows",
  "mesonbuild.mtest.list_tests",
  "mesonbuild.mtest.load_benchmarks",
  "mesonbuild.mtest.load_tests",
  "mesonbuild.mtest.rebuild_all",
  "mesonbuild.mtest.returncode_to_status",
  "mesonbuild.mtest.run",
  "mesonbuild.mtest.run_with_mono",
  "mesonbuild.mtest.write_json_log",
  "mesonbuild.munstable_coredata.dump_compilers",
  "mesonbuild.munstable_coredata.dump_guids",
  "mesonbuild.optinterpreter.BooleanParser",
  "mesonbuild.optinterpreter.ComboParser",
  "mesonbuild.optinterpreter.FeatureParser",
  "mesonbuild.optinterpreter.IntegerParser",
  "mesonbuild.optinterpreter.OptionException",
  "mesonbuild.optinterpreter.StringParser",
  "mesonbuild.optinterpreter.forbidden_option_names",
  "mesonbuild.optinterpreter.forbidden_prefixes",
  "mesonbuild.optinterpreter.is_invalid_name",
  "mesonbuild.optinterpreter.option_types",
  "mesonbuild.optinterpreter.optname_regex",
  "mesonbuild.optinterpreter.permitted_kwargs",
  "mesonbuild.optinterpreter.reserved_prefixes",
  "mesonbuild.optinterpreter.string_array_parser",
  "mesonbuild.rewriter.MTypeBase",
  "mesonbuild.rewriter.MTypeBool",
  "mesonbuild.rewriter.MTypeIDList",
  "mesonbuild.rewriter.MTypeList",
  "mesonbuild.rewriter.MTypeStr",
  "mesonbuild.rewriter.MTypeStrList",
  "mesonbuild.rewriter.RequiredKeys",
  "mesonbuild.rewriter.Rewriter",
  "mesonbuild.rewriter.RewriterException",
  "mesonbuild.rewriter.cli_type_map",
  "mesonbuild.rewriter.generate_def_opts",
  "mesonbuild.rewriter.generate_kwargs",
  "mesonbuild.rewriter.generate_target",
  "mesonbuild.rewriter.genreate_cmd",
  "mesonbuild.rewriter.list_to_dict",
  "mesonbuild.rewriter.rewriter_func_kwargs",
  "mesonbuild.rewriter.rewriter_keys",
  "mesonbuild.rewriter.target_operation_map",
  "mesonbuild.scripts.clangformat.clangformat",
  "mesonbuild.scripts.clangtidy.clangformat",
  "mesonbuild.scripts.clangtidy.manual_clangformat",
  "mesonbuild.scripts.cleantrees.rmtrees",
  "mesonbuild.scripts.cleantrees.run",
  "mesonbuild.scripts.commandrunner.is_python_command",
  "mesonbuild.scripts.commandrunner.run",
  "mesonbuild.scripts.commandrunner.run_command",
  "mesonbuild.scripts.coverage.coverage",
  "mesonbuild.scripts.coverage.run",
  "mesonbuild.scripts.delwithsuffix.run",
  "mesonbuild.scripts.depfixer.DT_MIPS_RLD_MAP_REL",
  "mesonbuild.scripts.depfixer.DT_NEEDED",
  "mesonbuild.scripts.depfixer.DT_RPATH",
  "mesonbuild.scripts.depfixer.DT_RUNPATH",
  "mesonbuild.scripts.depfixer.DT_SONAME",
  "mesonbuild.scripts.depfixer.DT_STRTAB",
  "mesonbuild.scripts.depfixer.DataSizes",
  "mesonbuild.scripts.depfixer.DynamicEntry",
  "mesonbuild.scripts.depfixer.Elf",
  "mesonbuild.scripts.depfixer.INSTALL_NAME_TOOL",
  "mesonbuild.scripts.depfixer.SectionHeader",
  "mesonbuild.scripts.depfixer.fix_darwin",
  "mesonbuild.scripts.depfixer.fix_elf",
  "mesonbuild.scripts.depfixer.fix_jar",
  "mesonbuild.scripts.depfixer.get_darwin_rpaths_to_remove",
  "mesonbuild.scripts.dirchanger.run",
  "mesonbuild.scripts.gettext.destdir_join",
  "mesonbuild.scripts.gettext.do_install",
  "mesonbuild.scripts.gettext.gen_gmo",
  "mesonbuild.scripts.gettext.parser",
  "mesonbuild.scripts.gettext.read_linguas",
  "mesonbuild.scripts.gettext.run_potgen",
  "mesonbuild.scripts.gettext.update_po",
  "mesonbuild.scripts.gtkdochelper.build_gtkdoc",
  "mesonbuild.scripts.gtkdochelper.destdir_join",
  "mesonbuild.scripts.gtkdochelper.gtkdoc_run_check",
  "mesonbuild.scripts.gtkdochelper.install_gtkdoc",
  "mesonbuild.scripts.gtkdochelper.parser",
  "mesonbuild.scripts.gtkdochelper.program_name",
  "mesonbuild.scripts.gtkdochelper.run",
  "mesonbuild.scripts.hotdochelper.destdir_join",
  "mesonbuild.scripts.hotdochelper.parser",
  "mesonbuild.scripts.meson_exe.buildparser",
  "mesonbuild.scripts.meson_exe.options",
  "mesonbuild.scripts.meson_exe.run",
  "mesonbuild.scripts.meson_exe.run_exe",
  "mesonbuild.scripts.msgfmthelper.parser",
  "mesonbuild.scripts.regen_checker.need_regen",
  "mesonbuild.scripts.regen_checker.regen",
  "mesonbuild.scripts.regen_checker.run",
  "mesonbuild.scripts.scanbuild.scanbuild",
  "mesonbuild.scripts.symbolextractor.RELINKING_WARNING",
  "mesonbuild.scripts.symbolextractor.TOOL_WARNING_FILE",
  "mesonbuild.scripts.symbolextractor._get_implib_dllname",
  "mesonbuild.scripts.symbolextractor._get_implib_exports",
  "mesonbuild.scripts.symbolextractor.call_tool",
  "mesonbuild.scripts.symbolextractor.call_tool_nowarn",
  "mesonbuild.scripts.symbolextractor.cygwin_syms",
  "mesonbuild.scripts.symbolextractor.dummy_syms",
  "mesonbuild.scripts.symbolextractor.gen_symbols",
  "mesonbuild.scripts.symbolextractor.get_tool",
  "mesonbuild.scripts.symbolextractor.linux_syms",
  "mesonbuild.scripts.symbolextractor.osx_syms",
  "mesonbuild.scripts.symbolextractor.parser",
  "mesonbuild.scripts.symbolextractor.print_tool_warning",
  "mesonbuild.scripts.symbolextractor.run",
  "mesonbuild.scripts.symbolextractor.windows_syms",
  "mesonbuild.scripts.symbolextractor.write_if_changed",
  "mesonbuild.scripts.tags.ls_as_bytestream",
  "mesonbuild.scripts.uninstall.do_uninstall",
  "mesonbuild.scripts.uninstall.logfile",
  "mesonbuild.scripts.vcstagger.config_vcs_tag",
  "mesonbuild.scripts.vcstagger.run",
  "mesonbuild.scripts.yelphelper.build_pot",
  "mesonbuild.scripts.yelphelper.build_translations",
  "mesonbuild.scripts.yelphelper.destdir_join",
  "mesonbuild.scripts.yelphelper.install_help",
  "mesonbuild.scripts.yelphelper.merge_translations",
  "mesonbuild.scripts.yelphelper.parser",
  "mesonbuild.scripts.yelphelper.update_po",
  "mesonbuild.templates.cpptemplates.CppProject",
  "mesonbuild.templates.cpptemplates.hello_cpp_meson_template",
  "mesonbuild.templates.cpptemplates.hello_cpp_template",
  "mesonbuild.templates.cpptemplates.lib_cpp_meson_template",
  "mesonbuild.templates.cpptemplates.lib_cpp_template",
  "mesonbuild.templates.cpptemplates.lib_cpp_test_template",
  "mesonbuild.templates.cpptemplates.lib_hpp_template",
  "mesonbuild.templates.cstemplates.CSharpProject",
  "mesonbuild.templates.cstemplates.hello_cs_meson_template",
  "mesonbuild.templates.cstemplates.hello_cs_template",
  "mesonbuild.templates.cstemplates.lib_cs_meson_template",
  "mesonbuild.templates.cstemplates.lib_cs_template",
  "mesonbuild.templates.cstemplates.lib_cs_test_template",
  "mesonbuild.templates.ctemplates.CProject",
  "mesonbuild.templates.ctemplates.hello_c_meson_template",
  "mesonbuild.templates.ctemplates.hello_c_template",
  "mesonbuild.templates.ctemplates.lib_c_meson_template",
  "mesonbuild.templates.ctemplates.lib_c_template",
  "mesonbuild.templates.ctemplates.lib_c_test_template",
  "mesonbuild.templates.ctemplates.lib_h_template",
  "mesonbuild.templates.cudatemplates.CudaProject",
  "mesonbuild.templates.cudatemplates.hello_cuda_meson_template",
  "mesonbuild.templates.cudatemplates.hello_cuda_template",
  "mesonbuild.templates.cudatemplates.lib_cuda_meson_template",
  "mesonbuild.templates.cudatemplates.lib_cuda_template",
  "mesonbuild.templates.cudatemplates.lib_cuda_test_template",
  "mesonbuild.templates.cudatemplates.lib_h_template",
  "mesonbuild.templates.dlangtemplates.DlangProject",
  "mesonbuild.templates.dlangtemplates.hello_d_meson_template",
  "mesonbuild.templates.dlangtemplates.hello_d_template",
  "mesonbuild.templates.dlangtemplates.lib_d_meson_template",
  "mesonbuild.templates.dlangtemplates.lib_d_template",
  "mesonbuild.templates.dlangtemplates.lib_d_test_template",
  "mesonbuild.templates.fortrantemplates.FortranProject",
  "mesonbuild.templates.fortrantemplates.hello_fortran_meson_template",
  "mesonbuild.templates.fortrantemplates.hello_fortran_template",
  "mesonbuild.templates.fortrantemplates.lib_fortran_meson_template",
  "mesonbuild.templates.fortrantemplates.lib_fortran_template",
  "mesonbuild.templates.fortrantemplates.lib_fortran_test_template",
  "mesonbuild.templates.javatemplates.JavaProject",
  "mesonbuild.templates.javatemplates.hello_java_meson_template",
  "mesonbuild.templates.javatemplates.hello_java_template",
  "mesonbuild.templates.javatemplates.lib_java_meson_template",
  "mesonbuild.templates.javatemplates.lib_java_template",
  "mesonbuild.templates.javatemplates.lib_java_test_template",
  "mesonbuild.templates.mesontemplates.create_meson_build",
  "mesonbuild.templates.mesontemplates.meson_executable_template",
  "mesonbuild.templates.mesontemplates.meson_jar_template",
  "mesonbuild.templates.objcpptemplates.ObjCppProject",
  "mesonbuild.templates.objcpptemplates.hello_objcpp_meson_template",
  "mesonbuild.templates.objcpptemplates.hello_objcpp_template",
  "mesonbuild.templates.objcpptemplates.lib_h_template",
  "mesonbuild.templates.objcpptemplates.lib_objcpp_meson_template",
  "mesonbuild.templates.objcpptemplates.lib_objcpp_template",
  "mesonbuild.templates.objcpptemplates.lib_objcpp_test_template",
  "mesonbuild.templates.objctemplates.ObjCProject",
  "mesonbuild.templates.objctemplates.hello_objc_meson_template",
  "mesonbuild.templates.objctemplates.hello_objc_template",
  "mesonbuild.templates.objctemplates.lib_h_template",
  "mesonbuild.templates.objctemplates.lib_objc_meson_template",
  "mesonbuild.templates.objctemplates.lib_objc_template",
  "mesonbuild.templates.objctemplates.lib_objc_test_template",
  "mesonbuild.templates.rusttemplates.RustProject",
  "mesonbuild.templates.rusttemplates.hello_rust_meson_template",
  "mesonbuild.templates.rusttemplates.hello_rust_template",
  "mesonbuild.templates.rusttemplates.lib_rust_meson_template",
  "mesonbuild.templates.rusttemplates.lib_rust_template",
  "mesonbuild.templates.rusttemplates.lib_rust_test_template",
  "mesonbuild.templates.samplefactory.sameple_generator",
  "mesonbuild.templates.sampleimpl.SampleImpl",
  "mesonbuild.wrap.WrapMode",
  "mesonbuild.wrap.string_to_value",
  "mesonbuild.wrap.wrap.PackageDefinition",
  "mesonbuild.wrap.wrap.REQ_TIMEOUT",
  "mesonbuild.wrap.wrap.SSL_WARNING_PRINTED",
  "mesonbuild.wrap.wrap.WHITELIST_SUBDOMAIN",
  "mesonbuild.wrap.wrap.WrapException",
  "mesonbuild.wrap.wrap.WrapNotFoundException",
  "mesonbuild.wrap.wrap.get_directory",
  "mesonbuild.wrap.wrap.has_ssl",
  "mesonbuild.wrap.wrap.load_wrap",
  "mesonbuild.wrap.wrap.open_wrapdburl",
  "mesonbuild.wrap.wrap.quiet_git",
  "mesonbuild.wrap.wrap.verbose_git",
  "mesonbuild.wrap.wrap.whitelist_wrapdb",
  "mesonbuild.wrap.wraptool.do_promotion",
  "mesonbuild.wrap.wraptool.get_current_version",
  "mesonbuild.wrap.wraptool.get_latest_version",
  "mesonbuild.wrap.wraptool.get_projectlist",
  "mesonbuild.wrap.wraptool.get_result",
  "mesonbuild.wrap.wraptool.parse_patch_url",
  "mesonbuild.wrap.wraptool.update_wrap_file",
  "mesonlib.BuildDirLock",
  "mesonlib.EnvironmentException",
  "mesonlib.File",
  "mesonlib.File.from_absolute_file",
  "mesonlib.File.from_built_file",
  "mesonlib.File.from_source_file",
  "mesonlib.FileMode",
  "mesonlib.GIT",
  "mesonlib.LibType",
  "mesonlib.LibType.PREFER_SHARED",
  "mesonlib.LibType.PREFER_STATIC",
  "mesonlib.LibType.SHARED",
  "mesonlib.LibType.STATIC",
  "mesonlib.MachineChoice",
  "mesonlib.MachineChoice.BUILD",
  "mesonlib.MachineChoice.HOST",
  "mesonlib.MesonException",
  "mesonlib.OptionOverrideProxy",
  "mesonlib.OrderedSet",
  "mesonlib.PerMachine",
  "mesonlib.PerMachineDefaultable",
  "mesonlib.PerThreeMachineDefaultable",
  "mesonlib.Popen_safe",
  "mesonlib.ProgressBar",
  "mesonlib.Version",
  "mesonlib.an_unpicklable_object",
  "mesonlib.check_direntry_issues",
  "mesonlib.classify_unity_sources",
  "mesonlib.darwin_get_object_archs",
  "mesonlib.default_libdir",
  "mesonlib.default_libexecdir",
  "mesonlib.default_prefix",
  "mesonlib.detect_subprojects",
  "mesonlib.detect_vcs",
  "mesonlib.do_conf_file",
  "mesonlib.do_replacement",
  "mesonlib.dump_conf_header",
  "mesonlib.exe_exists",
  "mesonlib.expand_arguments",
  "mesonlib.extract_as_list",
  "mesonlib.get_compiler_for_source",
  "mesonlib.get_filenames_templates_dict",
  "mesonlib.get_wine_shortpath",
  "mesonlib.git",
  "mesonlib.has_path_sep",
  "mesonlib.is_cygwin",
  "mesonlib.is_dragonflybsd",
  "mesonlib.is_freebsd",
  "mesonlib.is_haiku",
  "mesonlib.is_linux",
  "mesonlib.is_netbsd",
  "mesonlib.is_openbsd",
  "mesonlib.is_osx",
  "mesonlib.is_sunos",
  "mesonlib.is_windows",
  "mesonlib.join_args",
  "mesonlib.listify",
  "mesonlib.meson_command",
  "mesonlib.mlog.warning",
  "mesonlib.partition",
  "mesonlib.path_is_in_root",
  "mesonlib.project_meson_versions",
  "mesonlib.python_command",
  "mesonlib.quote_arg",
  "mesonlib.relpath",
  "mesonlib.replace_if_different",
  "mesonlib.run_once",
  "mesonlib.set_meson_command",
  "mesonlib.split_args",
  "mesonlib.stringlistify",
  "mesonlib.substitute_values",
  "mesonlib.substring_is_in_list",
  "mesonlib.typeslistify",
  "mesonlib.unholder",
  "mesonlib.version_compare",
  "mesonlib.version_compare_condition_with_min",
  "mesonlib.version_compare_many",
  "mesonlib.windows_proof_rm",
  "mesonlib.windows_proof_rmtree",
  "method",
  "minit.add_arguments",
  "minit.run",
  "minstall.add_arguments",
  "minstall.run",
  "mintro.IntrospectionInterpreter",
  "mintro.add_arguments",
  "mintro.generate_introspection_file",
  "mintro.run",
  "mintro.update_build_options",
  "mintro.write_meson_info_file",
  "misc.BlocksDependency",
  "misc.OpenMPDependency",
  "misc.cups_factory",
  "misc.curses_factory",
  "misc.gpgme_factory",
  "misc.libgcrypt_factory",
  "misc.libwmf_factory",
  "misc.netcdf_factory",
  "misc.pcap_factory",
  "misc.python3_factory",
  "misc.shaderc_factory",
  "misc.threads_factory",
  "mixins.arm.ArmCompiler",
  "mixins.arm.ArmCompiler.__init__",
  "mixins.arm.ArmclangCompiler",
  "mixins.arm.ArmclangCompiler.__init__",
  "mixins.c2000.C2000Compiler",
  "mixins.c2000.C2000Compiler.__init__",
  "mixins.ccrx.CcrxCompiler",
  "mixins.ccrx.CcrxCompiler.__init__",
  "mixins.clang.ClangCompiler",
  "mixins.clang.ClangCompiler.__init__",
  "mixins.clike.CLikeCompiler",
  "mixins.clike.CLikeCompiler.__init__",
  "mixins.clike.CLikeCompiler.get_compiler_check_args",
  "mixins.elbrus.ElbrusCompiler",
  "mixins.elbrus.ElbrusCompiler.__init__",
  "mixins.emscripten.EmscriptenMixin",
  "mixins.gnu.GnuCompiler",
  "mixins.gnu.GnuCompiler.LINKER_PREFIX",
  "mixins.gnu.GnuCompiler.__init__",
  "mixins.gnu.gnu_optimization_args",
  "mixins.gnu.gnulike_buildtype_args",
  "mixins.intel.IntelGnuLikeCompiler",
  "mixins.intel.IntelGnuLikeCompiler.__init__",
  "mixins.intel.IntelVisualStudioLikeCompiler",
  "mixins.intel.IntelVisualStudioLikeCompiler.__init__",
  "mixins.islinker.BasicLinkerIsCompilerMixin",
  "mixins.pgi.PGICompiler",
  "mixins.pgi.PGICompiler.__init__",
  "mixins.visualstudio.ClangClCompiler",
  "mixins.visualstudio.ClangClCompiler.__init__",
  "mixins.visualstudio.MSVCCompiler",
  "mixins.visualstudio.MSVCCompiler.__init__",
  "mixins.xc16.Xc16Compiler",
  "mixins.xc16.Xc16Compiler.__init__",
  "mlog.blue",
  "mlog.bold",
  "mlog.cmd_ci_include",
  "mlog.colorize_console",
  "mlog.cyan",
  "mlog.debug",
  "mlog.deprecation",
  "mlog.disable",
  "mlog.enable",
  "mlog.error",
  "mlog.exception",
  "mlog.format_list",
  "mlog.get_error_location_string",
  "mlog.green",
  "mlog.initialize",
  "mlog.log",
  "mlog.log_once",
  "mlog.log_warnings_counter",
  "mlog.nested",
  "mlog.normal_cyan",
  "mlog.red",
  "mlog.set_quiet",
  "mlog.set_timestamp_start",
  "mlog.set_verbose",
  "mlog.shutdown",
  "mlog.warning",
  "mlog.yellow",
  "modules.GResourceTarget",
  "modules.ModuleReturnValue",
  "mparser.AndNode",
  "mparser.ArgumentNode",
  "mparser.ArithmeticNode",
  "mparser.ArrayNode",
  "mparser.AssignmentNode",
  "mparser.BaseNode",
  "mparser.BooleanNode",
  "mparser.BreakNode",
  "mparser.CodeBlockNode",
  "mparser.ComparisonNode",
  "mparser.ContinueNode",
  "mparser.DictNode",
  "mparser.ElementaryNode",
  "mparser.EmptyNode",
  "mparser.ForeachClauseNode",
  "mparser.FunctionNode",
  "mparser.IdNode",
  "mparser.IfClauseNode",
  "mparser.IfNode",
  "mparser.IndexNode",
  "mparser.MethodNode",
  "mparser.NotNode",
  "mparser.NumberNode",
  "mparser.OrNode",
  "mparser.Parser",
  "mparser.PlusAssignmentNode",
  "mparser.StringNode",
  "mparser.TernaryNode",
  "mparser.Token",
  "mparser.UMinusNode",
  "mpi.mpi_factory",
  "msetup.add_arguments",
  "msetup.run",
  "msubprojects.add_arguments",
  "msubprojects.run",
  "msvcrt.LK_NBLCK",
  "msvcrt.LK_UNLCK",
  "msvcrt.locking",
  "mtest.add_arguments",
  "mtest.rebuild_all",
  "mtest.run",
  "multiprocessing.cpu_count",
  "munstable_coredata.add_arguments",
  "munstable_coredata.run",
  "ninjabackend.NinjaBackend",
  "nodeify",
  "number",
  "operator.eq",
  "operator.ge",
  "operator.gt",
  "operator.itemgetter",
  "operator.le",
  "operator.lt",
  "operator.ne",
  "optinterpreter.OptionInterpreter",
  "optinterpreter.is_invalid_name",
  "os.X_OK",
  "os.access",
  "os.chdir",
  "os.chmod",
  "os.chown",
  "os.close",
  "os.curdir",
  "os.devnull",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.environ.items",
  "os.environ.keys",
  "os.environ.lower",
  "os.environ.pop",
  "os.environ.split",
  "os.execlp",
  "os.fsencode",
  "os.fsync",
  "os.getcwd",
  "os.getenv",
  "os.isatty",
  "os.killpg",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonpath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.expandvars",
  "os.path.getmtime",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.normcase",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.pathsep.join",
  "os.remove",
  "os.rename",
  "os.replace",
  "os.rmdir",
  "os.sep",
  "os.sep.join",
  "os.setsid",
  "os.stat",
  "os.symlink",
  "os.umask",
  "os.unlink",
  "os.utime",
  "os.walk",
  "parse_project",
  "parse_sources",
  "parse_target",
  "parse_variable_list",
  "path_normalize_add",
  "path_sorter",
  "pathlib.Path",
  "pathlib.PurePath",
  "pathlib.PureWindowsPath",
  "pickle.UnpicklingError",
  "pickle.dump",
  "pickle.load",
  "platform.AppleFrameworks",
  "platform.machine",
  "platform.processor",
  "platform.system",
  "pprint.pformat",
  "print_default_values_warning",
  "print_dep",
  "process_custom_target",
  "process_target",
  "qt.QtBaseModule",
  "qt.QtBaseModule.__init__",
  "quick_resolve",
  "quoter",
  "random.randint",
  "re.DOTALL",
  "re.IGNORECASE",
  "re.M",
  "re.MULTILINE",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.fullmatch",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "real_os_chown",
  "rel_path",
  "rel_source",
  "remove_node",
  "resolve_ctgt_ref",
  "resolve_source",
  "rewriter.add_arguments",
  "rewriter.run",
  "runpy.run_path",
  "sanitize",
  "scalapack.scalapack_factory",
  "scripts.depfixer.fix_rpath",
  "scripts.destdir_join",
  "search",
  "search_lib_dirs",
  "set.union",
  "shlex.quote",
  "shlex.split",
  "shutil.chown",
  "shutil.copy",
  "shutil.copy2",
  "shutil.copyfile",
  "shutil.copyfileobj",
  "shutil.copymode",
  "shutil.copystat",
  "shutil.copytree",
  "shutil.get_terminal_size",
  "shutil.ignore_patterns",
  "shutil.make_archive",
  "shutil.move",
  "shutil.rmtree",
  "shutil.unpack_archive",
  "shutil.which",
  "signal.SIGINT",
  "signal.SIGKILL",
  "signal.SIGTERM",
  "signal.SIG_DFL",
  "signal.SIG_IGN",
  "signal.Signals",
  "signal.getsignal",
  "signal.signal",
  "stat.S_IREAD",
  "stat.S_IRGRP",
  "stat.S_IROTH",
  "stat.S_IRUSR",
  "stat.S_ISDIR",
  "stat.S_ISGID",
  "stat.S_ISUID",
  "stat.S_ISVTX",
  "stat.S_IWGRP",
  "stat.S_IWOTH",
  "stat.S_IWRITE",
  "stat.S_IWUSR",
  "stat.S_IXGRP",
  "stat.S_IXOTH",
  "stat.S_IXUSR",
  "str.maketrans",
  "string",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "subprocess.CalledProcessError",
  "subprocess.CompletedProcess",
  "subprocess.DEVNULL",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.SubprocessError",
  "subprocess.TimeoutExpired",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
  "subprocess.run",
  "sys.argv",
  "sys.byteorder",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.path.insert",
  "sys.platform",
  "sys.platform.lower",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stderr.buffer",
  "sys.stderr.buffer.write",
  "sys.stderr.encoding",
  "sys.stderr.write",
  "sys.stdout",
  "sys.stdout.buffer",
  "sys.stdout.buffer.write",
  "sys.stdout.detach",
  "sys.stdout.encoding",
  "sys.stdout.encoding.upper",
  "sys.stdout.fileno",
  "sys.stdout.flush",
  "sys.stdout.raw",
  "sys.stdout.reconfigure",
  "sys.version",
  "sys.version_info",
  "sysconfig.get_config_var",
  "sysconfig.get_path",
  "sysconfig.get_path_names",
  "sysconfig.get_platform",
  "sysconfig.get_python_version",
  "targetclass",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile.TemporaryFile",
  "tempfile.mkstemp",
  "textwrap.dedent",
  "textwrap.indent",
  "threading.Lock",
  "threading.Thread",
  "time.gmtime",
  "time.monotonic",
  "time.sleep",
  "time.strftime",
  "time.time",
  "token",
  "tqdm.tqdm",
  "traceback.print_exc",
  "traceparser.CMakeGeneratorTarget",
  "traceparser.CMakeTraceParser",
  "types.SimpleNamespace",
  "typing.Any",
  "typing.BinaryIO",
  "typing.Callable",
  "typing.Dict",
  "typing.Generator",
  "typing.Generic",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Match",
  "typing.MutableSet",
  "typing.Optional",
  "typing.Pattern",
  "typing.Sequence",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.TextIO",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "ui.GnuStepDependency",
  "ui.Qt4Dependency",
  "ui.Qt5Dependency",
  "ui.WxDependency",
  "ui.gl_factory",
  "ui.sdl2_factory",
  "ui.vulkan_factory",
  "update_vers",
  "uuid.NAMESPACE_URL",
  "uuid.uuid4",
  "uuid.uuid5",
  "vers_comp",
  "visitor.AstVisitor",
  "visualstudio.VisualStudioLikeCompiler",
  "vs2010backend.Vs2010Backend",
  "vs2010backend.autodetect_vs_version",
  "vs2015backend.Vs2015Backend",
  "vs2017backend.Vs2017Backend",
  "vs2019backend.Vs2019Backend",
  "wrap.API_ROOT",
  "wrap.WrapMode.forcefallback",
  "wrap.WrapMode.from_string",
  "wrap.WrapMode.nofallback",
  "wrap.open_wrapdburl",
  "wrap.wrap.API_ROOT",
  "wrap.wrap.PackageDefinition",
  "wrap.wrap.Resolver",
  "wrap.wrap.WrapException",
  "wrap.wrap.WrapNotFoundException",
  "wrap.wraptool.add_arguments",
  "wrap.wraptool.get_latest_version",
  "wrap.wraptool.parse_patch_url",
  "wrap.wraptool.run",
  "wrap.wraptool.update_wrap_file",
  "xcodebackend.XCodeBackend",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ElementTree",
  "xml.etree.ElementTree.SubElement",
  "xml.etree.ElementTree.parse"
 ],
 "deps": {
  "ExtensionModule": [],
  "FeatureCheckClass": [],
  "WrapMode": [],
  "__main__": [],
  "_fn": [],
  "_get_native": [],
  "_send_signal_to_process_group": [],
  "abc": [],
  "add_keys": [],
  "add_lib_args": [],
  "add_target": [],
  "aliases": [],
  "alphanum_key": [],
  "arg_list_from_node": [],
  "argparse": [],
  "array": [],
  "assign": [],
  "assign_keys": [],
  "ast": [],
  "backend": [],
  "backends": [],
  "base": [],
  "boost": [],
  "build": [],
  "build_target_decorator_caller": [],
  "c": [],
  "cProfile": [],
  "c_function_attributes": [],
  "check_contains": [],
  "check_flag": [],
  "check_list": [],
  "check_remove_node": [],
  "choose_compiler": [],
  "clang": [],
  "client": [],
  "cls": [],
  "cmake": [],
  "cmpop": [],
  "coarrays": [],
  "codecs": [],
  "collections": [],
  "common": [],
  "comp": [],
  "comp_class": [],
  "compilers": [],
  "concurrent": [],
  "configparser": [],
  "contextlib": [],
  "convert": [],
  "copy": [],
  "coredata": [],
  "ctypes": [],
  "cuda": [],
  "custom_target": [],
  "d": [],
  "datetime": [],
  "decorator": [],
  "dependencies": [],
  "depfile": [],
  "detect_cycle": [],
  "detect_prefix": [],
  "dev": [],
  "dict": [],
  "do_source": [],
  "do_target": [],
  "e": [],
  "ensure_absolute": [],
  "enum": [],
  "envconfig": [],
  "environment": [],
  "equal_func": [],
  "errno": [],
  "eval_generator_expressions": [],
  "executor": [],
  "extract_tgt": [],
  "f": [],
  "fcntl": [],
  "fetch": [],
  "fileapi": [],
  "find_module": [],
  "find_node": [],
  "fix_ldflags": [],
  "fn": [],
  "func": [],
  "function": [],
  "functools": [],
  "gen_bins": [],
  "generate_compiler_flags": [],
  "generate_libs_flags": [],
  "generate_uninstalled_cflags": [],
  "generator": [],
  "get_cmake_define": [],
  "get_uninstalled_include_dirs": [],
  "gettext": [],
  "glob": [],
  "gnu": [],
  "gzip": [],
  "hashlib": [],
  "hdf5": [],
  "helper_parse_dir": [],
  "hotdoc": [],
  "id_node": [],
  "importlib": [],
  "indexed": [],
  "init_language_file": [],
  "insert_build_prefix": [],
  "interpreter": [],
  "interpreterbase": [],
  "io": [],
  "itertools": [],
  "json": [],
  "line_is_valid": [],
  "linkers": [],
  "locale": [],
  "logger_fun": [],
  "lzma": [],
  "make_abs": [],
  "mcompile": [],
  "mconf": [],
  "mdist": [],
  "mesonbuild": [],
  "mesonlib": [],
  "method": [],
  "minit": [],
  "minstall": [],
  "mintro": [],
  "misc": [],
  "mixins": [],
  "mlog": [],
  "modules": [],
  "mparser": [],
  "mpi": [],
  "msetup": [],
  "msubprojects": [],
  "msvcrt": [],
  "mtest": [],
  "multiprocessing": [],
  "munstable_coredata": [],
  "ninjabackend": [],
  "nodeify": [],
  "number": [],
  "operator": [],
  "optinterpreter": [],
  "os": [],
  "parse_project": [],
  "parse_sources": [],
  "parse_target": [],
  "parse_variable_list": [],
  "path_normalize_add": [],
  "path_sorter": [],
  "pathlib": [],
  "pickle": [],
  "platform": [],
  "pprint": [],
  "print_default_values_warning": [],
  "print_dep": [],
  "process_custom_target": [],
  "process_target": [],
  "qt": [],
  "quick_resolve": [],
  "quoter": [],
  "random": [],
  "re": [],
  "real_os_chown": [],
  "rel_path": [],
  "rel_source": [],
  "remove_node": [],
  "resolve_ctgt_ref": [],
  "resolve_source": [],
  "rewriter": [],
  "runpy": [],
  "sanitize": [],
  "scalapack": [],
  "scripts": [],
  "search": [],
  "search_lib_dirs": [],
  "set": [],
  "shlex": [],
  "shutil": [],
  "signal": [],
  "stat": [],
  "str": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "sysconfig": [],
  "targetclass": [],
  "tempfile": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "token": [],
  "tqdm": [],
  "traceback": [],
  "traceparser": [],
  "types": [],
  "typing": [],
  "ui": [],
  "update_vers": [],
  "uuid": [],
  "vers_comp": [],
  "visitor": [],
  "visualstudio": [],
  "vs2010backend": [],
  "vs2015backend": [],
  "vs2017backend": [],
  "vs2019backend": [],
  "wrap": [],
  "xcodebackend": [],
  "xml": []
 }
}