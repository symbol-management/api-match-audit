{
 "bad": [
  "collections.namedtuple",
  "config.DaskConfig",
  "dagster.Bool",
  "dagster.ExecutionTargetHandle.for_pipeline_python_file",
  "dagster.Field",
  "dagster.InputDefinition",
  "dagster.Int",
  "dagster.ModeDefinition",
  "dagster.String",
  "dagster.check.inst",
  "dagster.check.inst_param",
  "dagster.check.invariant",
  "dagster.check.opt_bool_param",
  "dagster.check.opt_int_param",
  "dagster.check.opt_str_param",
  "dagster.check.param_invariant",
  "dagster.core.definitions.executor.check_cross_process_constraints",
  "dagster.core.definitions.executor.default_executors",
  "dagster.core.definitions.executor.executor",
  "dagster.core.engine.engine_base.Engine",
  "dagster.core.events.DagsterEvent",
  "dagster.core.execution.config.ExecutorConfig",
  "dagster.core.execution.context.system.SystemPipelineExecutionContext",
  "dagster.core.execution.plan.plan.ExecutionPlan",
  "dagster.core.instance.DagsterInstance.local_temp",
  "dagster.core.test_utils.nesting_composite_pipeline",
  "dagster.execute_pipeline",
  "dagster.file_relative_path",
  "dagster.pipeline",
  "dagster.seven.TemporaryDirectory",
  "dagster.seven.json.loads",
  "dagster.solid",
  "dagster.utils.file_relative_path",
  "dagster.utils.frozentags",
  "dagster_dask.config.DaskConfig",
  "dagster_dask.dask_executor",
  "dagster_dask.engine.DASK_RESOURCE_REQUIREMENTS_KEY",
  "dagster_dask.engine.get_dask_resource_requirements",
  "dagster_dask.engine.query_on_dask_worker",
  "dagster_dask.version.__version__",
  "dagster_dask_tests.test_execute.pandas_pipeline",
  "dagster_dask_tests.test_execute.pandas_solid",
  "dagster_dask_tests.test_execute.simple",
  "dagster_graphql.client.mutations.execute_execute_plan_mutation",
  "dagster_graphql.client.query.START_PIPELINE_EXECUTION_MUTATION",
  "dagster_graphql.client.query.SUBSCRIPTION_QUERY",
  "dagster_graphql.implementation.context.DagsterGraphQLInProcessRepositoryContext",
  "dagster_graphql.implementation.pipeline_execution_manager.SubprocessExecutionManager",
  "dagster_graphql.schema.create_schema",
  "dagster_graphql.test.utils.execute_dagster_graphql",
  "dagster_pandas.DataFrame",
  "dask.distributed.Client",
  "dask.distributed.as_completed",
  "engine.DaskEngine",
  "graphql.execution.executors.sync.SyncExecutor",
  "graphql.graphql",
  "os.getenv",
  "pytest.fixture"
 ],
 "deps": {
  "collections": [],
  "config": [],
  "dagster": [],
  "dagster_dask": [],
  "dagster_dask_tests": [],
  "dagster_graphql": [],
  "dagster_pandas": [],
  "dask": [],
  "engine": [],
  "graphql": [],
  "os": [],
  "pytest": []
 }
}