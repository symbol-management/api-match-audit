{
 "bad": [
  "InvalidTypeError",
  "__future__.annotations",
  "_compile_",
  "abc.abstractmethod",
  "class_",
  "cloudpathlib.AnyPath",
  "cloudpathlib.CloudPath",
  "collections.abc.MutableMapping",
  "datetime",
  "datetime.date",
  "datetime.date.fromisoformat",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "difflib",
  "difflib.get_close_matches",
  "enum.unique",
  "eoreader.bands.alias.ALL_CLOUDS.name",
  "eoreader.bands.alias.CIRRUS.name",
  "eoreader.bands.alias.CLOUDS.name",
  "eoreader.bands.alias.SHADOWS.name",
  "eoreader.bands.bands.CloudsBandNames.ALL_CLOUDS",
  "eoreader.bands.bands.CloudsBandNames.CIRRUS",
  "eoreader.bands.bands.CloudsBandNames.CLOUDS",
  "eoreader.bands.bands.CloudsBandNames.RAW_CLOUDS",
  "eoreader.bands.bands.CloudsBandNames.SHADOWS",
  "eoreader.bands.bands.CloudsBandNames.convert_from",
  "eoreader.bands.bands.DemBandNames.DEM",
  "eoreader.bands.bands.DemBandNames.HILLSHADE",
  "eoreader.bands.bands.DemBandNames.SLOPE",
  "eoreader.bands.bands.DemBandNames.convert_from",
  "eoreader.bands.bands.OpticalBandNames.BLUE",
  "eoreader.bands.bands.OpticalBandNames.CA",
  "eoreader.bands.bands.OpticalBandNames.FAR_NIR",
  "eoreader.bands.bands.OpticalBandNames.GREEN",
  "eoreader.bands.bands.OpticalBandNames.MIR",
  "eoreader.bands.bands.OpticalBandNames.NARROW_NIR",
  "eoreader.bands.bands.OpticalBandNames.NIR",
  "eoreader.bands.bands.OpticalBandNames.PAN",
  "eoreader.bands.bands.OpticalBandNames.RED",
  "eoreader.bands.bands.OpticalBandNames.SWIR_1",
  "eoreader.bands.bands.OpticalBandNames.SWIR_2",
  "eoreader.bands.bands.OpticalBandNames.SWIR_CIRRUS",
  "eoreader.bands.bands.OpticalBandNames.TIR_1",
  "eoreader.bands.bands.OpticalBandNames.TIR_2",
  "eoreader.bands.bands.OpticalBandNames.VRE_1",
  "eoreader.bands.bands.OpticalBandNames.VRE_2",
  "eoreader.bands.bands.OpticalBandNames.VRE_3",
  "eoreader.bands.bands.OpticalBandNames.WV",
  "eoreader.bands.bands.OpticalBandNames.convert_from",
  "eoreader.bands.bands.SarBandNames.HH",
  "eoreader.bands.bands.SarBandNames.HH_DSPK",
  "eoreader.bands.bands.SarBandNames.HV",
  "eoreader.bands.bands.SarBandNames.HV_DSPK",
  "eoreader.bands.bands.SarBandNames.VH",
  "eoreader.bands.bands.SarBandNames.VH_DSPK",
  "eoreader.bands.bands.SarBandNames.VV",
  "eoreader.bands.bands.SarBandNames.VV_DSPK",
  "eoreader.bands.bands.SarBandNames.convert_from",
  "eoreader.bands.bands.SarBandNames.from_value",
  "eoreader.products.optical.dimap_product.DimapBandCombination.MS",
  "eoreader.products.optical.dimap_product.DimapBandCombination.MS_N",
  "eoreader.products.optical.dimap_product.DimapBandCombination.MS_X",
  "eoreader.products.optical.landsat_product.LandsatProductType.L1_MSS",
  "eoreader.products.optical.s2_product.S2ProductType.L2A",
  "eoreader.products.product.SensorType.OPTICAL",
  "eoreader.products.product.SensorType.SAR",
  "eoreader.reader.Platform.S1.name",
  "from_str_to_arr",
  "function",
  "function.__name__",
  "functools.reduce",
  "functools.wraps",
  "get_min_max",
  "glob",
  "glob.glob",
  "idx",
  "importlib",
  "importlib.import_module",
  "inspect",
  "inspect.getmembers",
  "inspect.getsource",
  "inspect.isfunction",
  "is_band",
  "is_clouds",
  "is_dem",
  "is_index",
  "logging",
  "logging.DEBUG",
  "logging.getLogger",
  "lxml.etree",
  "lxml.etree._Element",
  "lxml.etree.parse",
  "math",
  "math.isclose",
  "netCDF4",
  "netCDF4.Dataset",
  "numpy",
  "numpy.abs",
  "numpy.arange",
  "numpy.array",
  "numpy.divide",
  "numpy.empty",
  "numpy.expand_dims",
  "numpy.float32",
  "numpy.full",
  "numpy.isin",
  "numpy.isnan",
  "numpy.max",
  "numpy.mean",
  "numpy.min",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.round",
  "numpy.seterr",
  "numpy.squeeze",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint8",
  "numpy.where",
  "numpy.zeros",
  "os",
  "os.environ",
  "os.environ.get",
  "os.listdir",
  "os.makedirs",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "pandas",
  "pandas.DataFrame",
  "pandas.read_table",
  "pathlib.Path",
  "platform",
  "platform.system",
  "rasterio",
  "rasterio.DatasetReader",
  "rasterio.band",
  "rasterio.crs",
  "rasterio.crs.CRS",
  "rasterio.crs.CRS.from_string",
  "rasterio.enums.Resampling",
  "rasterio.enums.Resampling.bilinear",
  "rasterio.enums.Resampling.nearest",
  "rasterio.errors.NotGeoreferencedWarning",
  "rasterio.features",
  "rasterio.features.rasterize",
  "rasterio.features.sieve",
  "rasterio.open",
  "rasterio.rpc",
  "rasterio.rpc.RPC",
  "rasterio.transform",
  "rasterio.transform.from_bounds",
  "rasterio.warp",
  "rasterio.warp.calculate_default_transform",
  "rasterio.warp.reproject",
  "rasterio.windows.Window",
  "re",
  "re.Pattern",
  "re.compile",
  "re.findall",
  "sertit.vectors.read",
  "shapely.geometry.Polygon",
  "string.Formatter",
  "sys",
  "sys.modules",
  "tarfile",
  "tarfile.open",
  "tempfile",
  "tempfile.TemporaryDirectory",
  "time",
  "time.strftime",
  "time.strptime",
  "to_str",
  "typing",
  "typing.Any",
  "typing.Callable",
  "typing.Tuple",
  "typing.Union",
  "warnings",
  "warnings.filterwarnings",
  "xarray",
  "xarray.DataArray",
  "xarray.Dataset",
  "zipfile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "InvalidTypeError": [],
  "__future__": [],
  "_compile_": [],
  "abc": [],
  "affine": [
   "affine/conda-forge/noarch/affine-2.3.0-py_0"
  ],
  "class_": [],
  "cloudpathlib": [],
  "collections": [],
  "datetime": [],
  "difflib": [],
  "enum": [],
  "eoreader": [],
  "from_str_to_arr": [],
  "function": [],
  "functools": [],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "get_min_max": [],
  "glob": [],
  "idx": [],
  "importlib": [],
  "inspect": [],
  "is_band": [],
  "is_clouds": [],
  "is_dem": [],
  "is_index": [],
  "logging": [],
  "lxml": [],
  "math": [],
  "netCDF4": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "pathlib": [],
  "platform": [],
  "rasterio": [],
  "re": [],
  "rioxarray": [
   "rioxarray/conda-forge/noarch/rioxarray-0.3.0-pyhd8ed1ab_0"
  ],
  "sertit": [
   "sertit/conda-forge/noarch/sertit-1.3.11.post3-pyhd8ed1ab_0"
  ],
  "shapely": [],
  "string": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "time": [],
  "to_str": [],
  "typing": [],
  "validators": [
   "validators/conda-forge/noarch/validators-0.14.3-pyh9f0ad1d_0"
  ],
  "warnings": [],
  "xarray": [],
  "zipfile": []
 }
}