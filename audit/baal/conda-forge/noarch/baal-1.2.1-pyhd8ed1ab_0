{
 "bad": [
  "PIL.Image.Image",
  "PIL.Image.open",
  "abc.ABC",
  "abc.abstractmethod",
  "baal.ModelWrapper",
  "baal.active.dataset.ActiveLearningDataset",
  "baal.active.dataset.ActiveLearningPool",
  "baal.active.dataset._identity",
  "baal.active.file_dataset.default_image_load_fn",
  "baal.active.file_dataset.seed_all",
  "baal.active.heuristics.heuristics.AbstractHeuristic",
  "baal.active.heuristics.heuristics.BALD",
  "baal.active.heuristics.heuristics.CombineHeuristics",
  "baal.active.heuristics.heuristics.Precomputed",
  "baal.active.heuristics.heuristics._shuffle_subset",
  "baal.active.heuristics.heuristics.available_reductions",
  "baal.active.heuristics.heuristics.gather_expand",
  "baal.active.heuristics.heuristics.requireprobs",
  "baal.active.heuristics.heuristics.singlepass",
  "baal.active.heuristics.heuristics_gpu.AbstractGPUHeuristic",
  "baal.active.heuristics.heuristics_gpu.available_reductions",
  "baal.active.heuristics.heuristics_gpu.requireprobs",
  "baal.bayesian.consistent_dropout.ConsistentDropout",
  "baal.bayesian.consistent_dropout.ConsistentDropout2d",
  "baal.bayesian.consistent_dropout._patch_dropout_layers",
  "baal.bayesian.dropout.Dropout",
  "baal.bayesian.dropout.Dropout2d",
  "baal.bayesian.dropout._patch_dropout_layers",
  "baal.bayesian.weight_drop.Sequence",
  "baal.bayesian.weight_drop._patch_layers",
  "baal.bayesian.weight_drop.get_weight_drop_module",
  "baal.ensemble.ensemble_prediction",
  "baal.modelwrapper._stack_preds",
  "baal.modelwrapper.log",
  "baal.modelwrapper.mc_inference",
  "baal.utils.array_utils.stack_in_memory",
  "baal.utils.array_utils.to_prob",
  "baal.utils.cuda_utils.to_cuda",
  "baal.utils.iterutils.map_on_tensor",
  "baal.utils.log_configuration.BetterConsoleRenderer",
  "baal.utils.log_configuration._foreground_color",
  "baal.utils.log_configuration._level_styles",
  "baal.utils.metrics.Accuracy",
  "baal.utils.metrics.ClassificationReport",
  "baal.utils.metrics.ECE",
  "baal.utils.metrics.ECE_PerCLs",
  "baal.utils.metrics.Loss",
  "baal.utils.metrics.Metrics",
  "baal.utils.metrics.Precision",
  "baal.utils.metrics.Report",
  "baal.utils.pytorch_lightning.log",
  "baal.utils.transforms.BaaLTransform",
  "collections.OrderedDict",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "copy.copy",
  "copy.deepcopy",
  "dataclasses.dataclass",
  "dataset.ActiveLearningDataset",
  "fn",
  "functools.singledispatch",
  "functools.wraps",
  "heuristics.AbstractHeuristic",
  "heuristics.BALD",
  "heuristics.BatchBALD",
  "heuristics.Certainty",
  "heuristics.Entropy",
  "heuristics.Margin",
  "heuristics.Precomputed",
  "heuristics.Random",
  "heuristics.Variance",
  "inspect.currentframe",
  "itertools.zip_longest",
  "math.floor",
  "matplotlib.pyplot.bar",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.grid",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.xlim",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.arange",
  "numpy.argsort",
  "numpy.array",
  "numpy.bool",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.float32",
  "numpy.int",
  "numpy.int16",
  "numpy.int64",
  "numpy.int8",
  "numpy.isfinite",
  "numpy.linspace",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.random.choice",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.sort",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.var",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os.getpid",
  "pytorch_lightning.Callback",
  "pytorch_lightning.Trainer",
  "random.seed",
  "scipy.special.expit",
  "scipy.special.softmax",
  "scipy.special.xlogy",
  "sklearn.metrics.auc",
  "sklearn.metrics.confusion_matrix",
  "sklearn.utils.check_random_state",
  "structlog.configure_once",
  "structlog.dev.ConsoleRenderer",
  "structlog.dev._has_colorama",
  "structlog.get_logger",
  "structlog.processors.StackInfoRenderer",
  "structlog.processors.TimeStamper",
  "structlog.processors.UnicodeDecoder",
  "structlog.processors.format_exc_info",
  "structlog.stdlib.PositionalArgumentsFormatter",
  "structlog.stdlib.add_log_level",
  "structlog.threadlocal.wrap_dict",
  "sys.stdout",
  "t",
  "threading.current_thread",
  "torch.FloatTensor",
  "torch.Tensor",
  "torch.argmax",
  "torch.cat",
  "torch.exp",
  "torch.eye",
  "torch.float32",
  "torch.from_numpy",
  "torch.gather",
  "torch.isfinite",
  "torch.log",
  "torch.manual_seed",
  "torch.max",
  "torch.mean",
  "torch.min",
  "torch.mul",
  "torch.multinomial",
  "torch.nn",
  "torch.nn.Conv2d",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.Dropout",
  "torch.nn.Dropout2d",
  "torch.nn.Linear",
  "torch.nn.Module",
  "torch.nn.Sequential",
  "torch.nn.functional.dropout",
  "torch.nn.functional.dropout2d",
  "torch.nn.functional.linear",
  "torch.nn.functional.softmax",
  "torch.nn.modules.dropout._DropoutNd",
  "torch.no_grad",
  "torch.ones_like",
  "torch.optim.Adam",
  "torch.optim.Optimizer",
  "torch.stack",
  "torch.sum",
  "torch.utils.data.DataLoader",
  "torch.utils.data.Dataset",
  "torch.utils.data.Subset",
  "torch.utils.data.dataloader.default_collate",
  "torch.zeros",
  "tqdm.tqdm",
  "types.GeneratorType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Tuple",
  "typing.Union",
  "utils.log_configuration.set_logger_config",
  "warnings.warn"
 ],
 "deps": {
  "PIL": [],
  "abc": [],
  "baal": [],
  "collections": [],
  "copy": [],
  "dataclasses": [],
  "dataset": [],
  "fn": [],
  "functools": [],
  "heuristics": [],
  "inspect": [],
  "itertools": [],
  "math": [],
  "matplotlib": [],
  "numpy": [],
  "os": [],
  "pytorch_lightning": [],
  "random": [],
  "scipy": [],
  "sklearn": [],
  "structlog": [],
  "sys": [],
  "t": [],
  "threading": [],
  "torch": [],
  "tqdm": [],
  "types": [],
  "typing": [],
  "utils": [],
  "warnings": []
 }
}