{
 "bad": [
  "f",
  "itertools.product",
  "numpy.floating",
  "numpy.inf",
  "numpy.isinf",
  "numpy.matmul",
  "numpy.nan",
  "numpy.random.RandomState",
  "scipy.stats.norm.pdf",
  "scipy.stats.norm.ppf",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.TfidfVectorizer",
  "sklearn.feature_selection.chi2",
  "sklearn.feature_selection.f_classif",
  "sklearn.impute.MissingIndicator",
  "sklearn.metrics.pairwise.cosine_similarity",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.MaxAbsScaler",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.PowerTransformer",
  "sklearn.preprocessing.QuantileTransformer",
  "sklearn.preprocessing.RobustScaler",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.utils.check_array",
  "sklearn.utils.multiclass.check_classification_targets",
  "sklearn.utils.validation.check_X_y",
  "sklearn.utils.validation.check_array",
  "sklearn.utils.validation.check_is_fitted"
 ],
 "deps": {
  "f": [],
  "itertools": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numba": [
   "numba/conda-forge/linux-64/numba-0.45.0-py37hb3f55d8_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200"
  ],
  "sklearn": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}