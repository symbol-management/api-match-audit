{
 "bad": [
  "IPython.display.HTML",
  "_features",
  "_fmt_pws",
  "_fmt_pws_list",
  "_format_node",
  "_update",
  "_weights",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "aliases",
  "aliases.get",
  "analyze",
  "attr.asdict",
  "attr.ib",
  "attr.s",
  "base_scorer",
  "base_utils.attrs",
  "cgi.escape",
  "collections.Counter",
  "collections.defaultdict",
  "distutils.version.LooseVersion",
  "eli5._decision_path.DECISION_PATHS_CAVEATS",
  "eli5._decision_path.DECISION_PATHS_DESCRIPTION",
  "eli5._decision_path.DECISION_PATHS_EXPLANATION",
  "eli5._decision_path.DESCRIPTION_CLF_BINARY",
  "eli5._decision_path.DESCRIPTION_CLF_MULTICLASS",
  "eli5._decision_path.DESCRIPTION_REGRESSION",
  "eli5._decision_path.get_decision_path_explanation",
  "eli5._feature_importances.get_feature_importance_explanation",
  "eli5._feature_importances.get_feature_importances_filtered",
  "eli5._feature_names.FeatureNames",
  "eli5._feature_names._all_feature_names",
  "eli5._feature_weights._features",
  "eli5._feature_weights._get_top_abs_features",
  "eli5._feature_weights._get_top_features",
  "eli5._feature_weights._get_top_negative_features",
  "eli5._feature_weights._get_top_positive_features",
  "eli5._feature_weights.get_top_features",
  "eli5._feature_weights.get_top_features_filtered",
  "eli5._graphviz.dot2svg",
  "eli5._graphviz.is_supported",
  "eli5.base.DocWeightedSpans",
  "eli5.base.Explanation",
  "eli5.base.Feature",
  "eli5.base.FeatureImportances",
  "eli5.base.FeatureImportances.from_names_values",
  "eli5.base.FeatureWeight",
  "eli5.base.FeatureWeights",
  "eli5.base.NodeInfo",
  "eli5.base.TargetExplanation",
  "eli5.base.TransitionFeatureWeights",
  "eli5.base.TreeInfo",
  "eli5.base.WeightedSpans",
  "eli5.base_utils.attrs",
  "eli5.base_utils.singledispatch",
  "eli5.explain.explain_prediction.dispatch",
  "eli5.explain.explain_prediction.register",
  "eli5.explain.explain_weights",
  "eli5.explain.explain_weights.dispatch",
  "eli5.explain.explain_weights.register",
  "eli5.explain_prediction",
  "eli5.explain_weights",
  "eli5.formatters.FormattedFeatureName",
  "eli5.formatters.as_dataframe._EXPORTED_ATTRIBUTES",
  "eli5.formatters.as_dataframe._set_defaults",
  "eli5.formatters.as_dataframe.format_as_dataframe",
  "eli5.formatters.as_dataframe.format_as_dataframes",
  "eli5.formatters.as_dict._numpy_string_types",
  "eli5.formatters.as_dict._numpy_to_python",
  "eli5.formatters.features.FormattedFeatureName",
  "eli5.formatters.fields.WEIGHTS",
  "eli5.formatters.html._colorize",
  "eli5.formatters.html._format_decision_tree",
  "eli5.formatters.html._format_feature",
  "eli5.formatters.html._format_single_feature",
  "eli5.formatters.html._format_unhashed_feature",
  "eli5.formatters.html._hue",
  "eli5.formatters.html._weight_opacity",
  "eli5.formatters.html.format_as_html",
  "eli5.formatters.html.format_hsl",
  "eli5.formatters.html.get_weight_range",
  "eli5.formatters.html.html_escape",
  "eli5.formatters.html.remaining_weight_color_hsl",
  "eli5.formatters.html.render_targets_weighted_spans",
  "eli5.formatters.html.render_weighted_spans",
  "eli5.formatters.html.template_env",
  "eli5.formatters.html.weight_color_hsl",
  "eli5.formatters.text._ELLIPSIS",
  "eli5.formatters.text._PLUS_MINUS",
  "eli5.formatters.text._SPACE",
  "eli5.formatters.text._decision_tree_lines",
  "eli5.formatters.text._description_lines",
  "eli5.formatters.text._error_lines",
  "eli5.formatters.text._feature_importances_lines",
  "eli5.formatters.text._fi_lines",
  "eli5.formatters.text._format_feature",
  "eli5.formatters.text._format_remaining",
  "eli5.formatters.text._format_scores",
  "eli5.formatters.text._format_single_feature",
  "eli5.formatters.text._format_unhashed_feature",
  "eli5.formatters.text._method_lines",
  "eli5.formatters.text._targets_lines",
  "eli5.formatters.text._transition_features_lines",
  "eli5.formatters.text_helpers.PreparedWeightedSpans",
  "eli5.formatters.text_helpers.get_char_weights",
  "eli5.formatters.trees._format_array",
  "eli5.formatters.trees._format_leaf_value",
  "eli5.formatters.utils._has_invisible_spaces",
  "eli5.ipython.FORMAT_KWARGS",
  "eli5.ipython._split_kwargs",
  "eli5.lightgbm.DESCRIPTION_LIGHTGBM",
  "eli5.lightgbm._changes",
  "eli5.lightgbm._compute_node_values",
  "eli5.lightgbm._get_decision_path",
  "eli5.lightgbm._get_leaf_split_indices",
  "eli5.lightgbm._get_lgb_feature_importances",
  "eli5.lightgbm._get_prediction_feature_weights",
  "eli5.lightgbm._get_score",
  "eli5.lightgbm._lgb_n_targets",
  "eli5.lightgbm._target_feature_weights",
  "eli5.lightning._CLASSIFIERS",
  "eli5.lightning._REGRESSORS",
  "eli5.lightning.explain_prediction_lightning",
  "eli5.lightning.explain_weights_lightning",
  "eli5.lightning.explain_weights_lightning_not_supported",
  "eli5.lime._vectorizer.SingleDocumentVectorizer",
  "eli5.lime.lime._train_local_classifier",
  "eli5.lime.samplers.BaseSampler",
  "eli5.lime.samplers.MaskingTextSampler",
  "eli5.lime.samplers.MaskingTextSamplers",
  "eli5.lime.samplers._BANDWIDTHS",
  "eli5.lime.samplers._BaseKernelDensitySampler",
  "eli5.lime.samplers._distances",
  "eli5.lime.textutils.CHAR_TOKEN_PATTERN",
  "eli5.lime.textutils.DEFAULT_TOKEN_PATTERN",
  "eli5.lime.textutils.cosine_similarity_vec",
  "eli5.lime.utils._PipelinePatched",
  "eli5.lime.utils._get_classifier_prefix",
  "eli5.lime.utils.expand_dataset",
  "eli5.lime.utils.expanded_X_y_sample_weights",
  "eli5.lime.utils.fit_proba",
  "eli5.lime.utils.fix_multiclass_predict_proba",
  "eli5.lime.utils.mean_kl_divergence",
  "eli5.lime.utils.rbf",
  "eli5.lime.utils.score_with_sample_weight",
  "eli5.lime.utils.with_sample_weight",
  "eli5.permutation_importance._get_scores_shufled",
  "eli5.permutation_importance.get_score_importances",
  "eli5.permutation_importance.iter_shuffled",
  "eli5.show_prediction",
  "eli5.show_weights",
  "eli5.sklearn._span_analyzers._build_tokenizer",
  "eli5.sklearn._span_analyzers._char_ngrams",
  "eli5.sklearn._span_analyzers._char_wb_ngrams",
  "eli5.sklearn._span_analyzers._word_ngrams",
  "eli5.sklearn._span_analyzers.build_span_analyzer",
  "eli5.sklearn.explain_linear_classifier_weights",
  "eli5.sklearn.explain_linear_regressor_weights",
  "eli5.sklearn.explain_prediction.DESCRIPTION_TREE_CLF_BINARY",
  "eli5.sklearn.explain_prediction.DESCRIPTION_TREE_CLF_MULTICLASS",
  "eli5.sklearn.explain_prediction.DESCRIPTION_TREE_REG",
  "eli5.sklearn.explain_prediction.DESCRIPTION_TREE_REG_MULTITARGET",
  "eli5.sklearn.explain_prediction._linear_weights",
  "eli5.sklearn.explain_prediction._multiply",
  "eli5.sklearn.explain_prediction._trees_feature_weights",
  "eli5.sklearn.explain_prediction._update_tree_feature_weights",
  "eli5.sklearn.explain_prediction.explain_prediction_linear_classifier",
  "eli5.sklearn.explain_prediction.explain_prediction_sklearn",
  "eli5.sklearn.explain_prediction.explain_prediction_sklearn_not_supported",
  "eli5.sklearn.explain_prediction.register",
  "eli5.sklearn.explain_prediction_linear_classifier",
  "eli5.sklearn.explain_prediction_linear_regressor",
  "eli5.sklearn.explain_weights.DESCRIPTION_CLF_BINARY",
  "eli5.sklearn.explain_weights.DESCRIPTION_CLF_MULTICLASS",
  "eli5.sklearn.explain_weights.DESCRIPTION_DECISION_TREE",
  "eli5.sklearn.explain_weights.DESCRIPTION_RANDOM_FOREST",
  "eli5.sklearn.explain_weights.DESCRIPTION_REGRESSION",
  "eli5.sklearn.explain_weights.DESCRIPTION_REGRESSION_MULTITARGET",
  "eli5.sklearn.explain_weights.DESCRIPTION_SCORE_DECREASE",
  "eli5.sklearn.explain_weights.HASHING_CAVEATS",
  "eli5.sklearn.explain_weights.LINEAR_CAVEATS",
  "eli5.sklearn.explain_weights._TOP",
  "eli5.sklearn.explain_weights.explain_linear_classifier_weights",
  "eli5.sklearn.explain_weights.explain_weights_sklearn",
  "eli5.sklearn.explain_weights.explain_weights_sklearn_not_supported",
  "eli5.sklearn.explain_weights.register",
  "eli5.sklearn.permutation_importance.CAVEATS_CV",
  "eli5.sklearn.permutation_importance.CAVEATS_CV_NONE",
  "eli5.sklearn.permutation_importance.CAVEATS_PREFIT",
  "eli5.sklearn.text._get_doc_weighted_spans",
  "eli5.sklearn.text._get_feature_weights_dict",
  "eli5.sklearn.text._get_features",
  "eli5.sklearn.text._get_other",
  "eli5.sklearn.text._get_weighted_spans_from_union",
  "eli5.sklearn.text.add_weighted_spans",
  "eli5.sklearn.text.get_weighted_spans",
  "eli5.sklearn.treeinspect._add_feature_names",
  "eli5.sklearn.treeinspect._get_node_info",
  "eli5.sklearn.treeinspect._get_root_node_info",
  "eli5.sklearn.treeinspect._node_value",
  "eli5.sklearn.treeinspect._treeiter",
  "eli5.sklearn.treeinspect.get_tree_info",
  "eli5.sklearn.treeinspect.tree2dot",
  "eli5.sklearn.unhashing.FeatureUnhasher",
  "eli5.sklearn.unhashing.InvertableHashingVectorizer",
  "eli5.sklearn.unhashing._fit_invhashing_union",
  "eli5.sklearn.unhashing._get_collisions",
  "eli5.sklearn.unhashing._get_indices_and_signs",
  "eli5.sklearn.unhashing._invert_signs",
  "eli5.sklearn.unhashing._invhashing_union_feature_names_scale",
  "eli5.sklearn.unhashing._transform_terms",
  "eli5.sklearn.unhashing.handle_hashing_vec",
  "eli5.sklearn.unhashing.invert_hashing_and_fit",
  "eli5.sklearn.unhashing.is_invhashing",
  "eli5.sklearn.utils._dense_1d",
  "eli5.sklearn.utils.add_intercept",
  "eli5.sklearn.utils.get_X",
  "eli5.sklearn.utils.get_X0",
  "eli5.sklearn.utils.get_coef",
  "eli5.sklearn.utils.get_default_target_names",
  "eli5.sklearn.utils.get_feature_names",
  "eli5.sklearn.utils.get_feature_names_filtered",
  "eli5.sklearn.utils.get_num_features",
  "eli5.sklearn.utils.handle_vec",
  "eli5.sklearn.utils.has_intercept",
  "eli5.sklearn.utils.is_multiclass_classifier",
  "eli5.sklearn.utils.is_multitarget_regressor",
  "eli5.sklearn.utils.is_probabilistic_classifier",
  "eli5.sklearn.utils.pandas_available",
  "eli5.sklearn.utils.predict_proba",
  "eli5.sklearn.utils.sklearn_version",
  "eli5.sklearn_crfsuite.explain_weights.crf_state_coef",
  "eli5.sklearn_crfsuite.explain_weights.crf_transition_coef",
  "eli5.sklearn_crfsuite.explain_weights.filter_transition_coefs",
  "eli5.sklearn_crfsuite.explain_weights.sorted_for_ner",
  "eli5.transform.transform_feature_names",
  "eli5.transform.transform_feature_names.register",
  "eli5.utils._get_value_indices",
  "eli5.utils.argsort_k_largest",
  "eli5.utils.get_binary_target_scale_label_id",
  "eli5.utils.get_target_display_names",
  "eli5.utils.indices_to_bool_mask",
  "eli5.utils.is_sparse_vector",
  "eli5.utils.mask",
  "eli5.utils.max_or_0",
  "eli5.utils.vstack",
  "eli5.xgboost.DESCRIPTION_XGBOOST",
  "eli5.xgboost._check_booster_args",
  "eli5.xgboost._indexed_leafs",
  "eli5.xgboost._missing_values_set_to_nan",
  "eli5.xgboost._parent_value",
  "eli5.xgboost._parse_dump_line",
  "eli5.xgboost._parse_tree_dump",
  "eli5.xgboost._prediction_feature_weights",
  "eli5.xgboost._xgb_feature_importances",
  "eli5.xgboost._xgb_n_targets",
  "explain.explain_prediction",
  "explain.explain_weights",
  "features.FormattedFeatureName",
  "fields.ALL",
  "flt",
  "formatters.features.FormattedFeatureName",
  "formatters.fields.WEIGHTS",
  "formatters.format_as_html",
  "func",
  "functools.partial",
  "gen_samples",
  "get_top_features",
  "graphviz.Graph",
  "graphviz.Source",
  "inspect.getargspec",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.groupby",
  "jinja2.Environment",
  "jinja2.PackageLoader",
  "lightgbm.LGBMClassifier",
  "lightgbm.LGBMRegressor",
  "lightning.classification.AdaGradClassifier",
  "lightning.classification.CDClassifier",
  "lightning.classification.FistaClassifier",
  "lightning.classification.LinearSVC",
  "lightning.classification.SAGAClassifier",
  "lightning.classification.SAGClassifier",
  "lightning.classification.SDCAClassifier",
  "lightning.classification.SGDClassifier",
  "lightning.impl.base.BaseEstimator",
  "lightning.regression.AdaGradRegressor",
  "lightning.regression.CDRegressor",
  "lightning.regression.FistaRegressor",
  "lightning.regression.LinearSVR",
  "lightning.regression.SAGARegressor",
  "lightning.regression.SAGRegressor",
  "lightning.regression.SDCARegressor",
  "lightning.regression.SGDRegressor",
  "math.ceil",
  "math.floor",
  "norm",
  "numpy",
  "numpy.abs",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argpartition",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.average",
  "numpy.bool_",
  "numpy.empty",
  "numpy.exp",
  "numpy.float32",
  "numpy.floating",
  "numpy.hstack",
  "numpy.integer",
  "numpy.intp",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.logspace",
  "numpy.mean",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.object",
  "numpy.ones",
  "numpy.searchsorted",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.std",
  "numpy.str_",
  "numpy.string_",
  "numpy.sum",
  "numpy.unicode_",
  "numpy.vstack",
  "numpy.zeros",
  "p",
  "pandas.DataFrame",
  "pandas.Series",
  "permutation_importance.PermutationImportance",
  "re.compile",
  "re.finditer",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "replacer",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.dok_matrix",
  "scipy.sparse.hstack",
  "scipy.sparse.issparse",
  "scipy.sparse.vstack",
  "scipy.stats.entropy",
  "scipy.stats.itemfreq",
  "six.PY2",
  "six.add_metaclass",
  "six.iteritems",
  "six.moves.xrange",
  "six.string_types",
  "six.text_type",
  "sklearn.__version__",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.MetaEstimatorMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.base.is_classifier",
  "sklearn.ensemble.AdaBoostClassifier",
  "sklearn.ensemble.AdaBoostRegressor",
  "sklearn.ensemble.ExtraTreesClassifier",
  "sklearn.ensemble.ExtraTreesRegressor",
  "sklearn.ensemble.GradientBoostingClassifier",
  "sklearn.ensemble.GradientBoostingRegressor",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.HashingVectorizer",
  "sklearn.feature_extraction.text.VectorizerMixin",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.HuberRegressor",
  "sklearn.linear_model.Lars",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.LogisticRegressionCV",
  "sklearn.linear_model.OrthogonalMatchingPursuit",
  "sklearn.linear_model.OrthogonalMatchingPursuitCV",
  "sklearn.linear_model.PassiveAggressiveClassifier",
  "sklearn.linear_model.PassiveAggressiveRegressor",
  "sklearn.linear_model.Perceptron",
  "sklearn.linear_model.RandomizedLasso",
  "sklearn.linear_model.RandomizedLogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.RidgeCV",
  "sklearn.linear_model.RidgeClassifier",
  "sklearn.linear_model.RidgeClassifierCV",
  "sklearn.linear_model.SGDClassifier",
  "sklearn.linear_model.SGDRegressor",
  "sklearn.linear_model.TheilSenRegressor",
  "sklearn.metrics.pairwise_distances",
  "sklearn.metrics.scorer.check_scoring",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.check_cv",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.neighbors.KernelDensity",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.MaxAbsScaler",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.RobustScaler",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.LinearSVR",
  "sklearn.svm.NuSVC",
  "sklearn.svm.NuSVR",
  "sklearn.svm.OneClassSVM",
  "sklearn.svm.SVC",
  "sklearn.svm.SVR",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree._tree.TREE_LEAF",
  "sklearn.tree.export_graphviz",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.issparse",
  "sklearn.utils.metaestimators.if_delegate_has_method",
  "sklearn.utils.shuffle",
  "sklearn_crfsuite.CRF",
  "span_analyzer",
  "table_line",
  "tabulate.tabulate",
  "target_feature_weights",
  "text_helpers.prepare_weighted_spans",
  "textutils.DEFAULT_TOKEN_PATTERN",
  "textutils.TokenizedText",
  "textutils.generate_samples",
  "tokenize",
  "trees.tree2text",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Sized",
  "typing.Tuple",
  "typing.Union",
  "utils.argsort_k_largest_positive",
  "utils.argsort_k_smallest",
  "utils.format_signed",
  "utils.format_value",
  "utils.format_weight",
  "utils.has_any_values_for_weights",
  "utils.mask",
  "utils.replace_spaces",
  "utils.should_highlight_spaces",
  "walk",
  "warnings.warn",
  "xgboost.Booster",
  "xgboost.DMatrix",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor"
 ],
 "deps": {
  "IPython": [],
  "_features": [],
  "_fmt_pws": [],
  "_fmt_pws_list": [],
  "_format_node": [],
  "_update": [],
  "_weights": [],
  "abc": [],
  "aliases": [],
  "analyze": [],
  "attr": [],
  "base_scorer": [],
  "base_utils": [],
  "cgi": [],
  "collections": [],
  "distutils": [],
  "eli5": [],
  "explain": [],
  "features": [],
  "fields": [],
  "flt": [],
  "formatters": [],
  "func": [],
  "functools": [],
  "gen_samples": [],
  "get_top_features": [],
  "graphviz": [],
  "inspect": [],
  "itertools": [],
  "jinja2": [],
  "lightgbm": [],
  "lightning": [],
  "math": [],
  "norm": [],
  "numpy": [],
  "p": [],
  "pandas": [],
  "permutation_importance": [],
  "re": [],
  "replacer": [],
  "scipy": [],
  "six": [],
  "sklearn": [],
  "sklearn_crfsuite": [],
  "span_analyzer": [],
  "table_line": [],
  "tabulate": [],
  "target_feature_weights": [],
  "text_helpers": [],
  "textutils": [],
  "tokenize": [],
  "trees": [],
  "typing": [],
  "utils": [],
  "walk": [],
  "warnings": [],
  "xgboost": []
 }
}