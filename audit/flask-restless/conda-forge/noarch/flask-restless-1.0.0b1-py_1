{
 "bad": [
  "ArticleTag",
  "Counter",
  "DRD",
  "ProcessingException",
  "add_rule",
  "base.APIBase",
  "base.JSONAPI_VERSION",
  "base.ModelView",
  "base.MultipleExceptions",
  "base.SingleKeyError",
  "base.error",
  "base.error_response",
  "base.errors_from_serialization_exceptions",
  "base.errors_response",
  "collections.defaultdict",
  "collections.namedtuple",
  "cr",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.utcnow",
  "datetime.time",
  "datetime.timedelta",
  "decorate",
  "deserialize",
  "direction",
  "f",
  "flask.Blueprint",
  "flask.Flask",
  "flask.current_app.logger.exception",
  "flask.current_app.response_class",
  "flask.ext.restless.APIManager",
  "flask.ext.restless.CONTENT_TYPE",
  "flask.ext.restless.DeserializationException",
  "flask.ext.restless.IllegalArgumentError",
  "flask.ext.restless.ProcessingException",
  "flask.ext.restless.SerializationException",
  "flask.ext.restless.collection_name",
  "flask.ext.restless.collection_name.created_managers.clear",
  "flask.ext.restless.model_for",
  "flask.ext.restless.model_for.created_managers.clear",
  "flask.ext.restless.serializer_for",
  "flask.ext.restless.serializer_for.created_managers.clear",
  "flask.ext.restless.simple_serialize",
  "flask.ext.restless.url_for",
  "flask.ext.restless.url_for.created_managers.clear",
  "flask.ext.sqlalchemy.SQLAlchemy",
  "flask.ext.sqlalchemy._SessionSignalEvents",
  "flask.ext.sqlalchemy.__version__",
  "flask.json.dumps",
  "flask.json.loads",
  "flask.jsonify",
  "flask.request.args",
  "flask.request.args.get",
  "flask.request.args.items",
  "flask.request.base_url",
  "flask.request.get_data",
  "flask.request.headers.get",
  "flask.request.method",
  "flask.request.url_root",
  "flask.request.user_agent",
  "flask.request.user_agent.browser",
  "flask.request.user_agent.version",
  "flask.url_for",
  "flask.views.MethodView",
  "from_dict",
  "func",
  "funcobj",
  "functools.partial",
  "functools.wraps",
  "helpers.BetterJSONEncoder",
  "helpers.FlaskSQLAlchemyTestBase",
  "helpers.GUID",
  "helpers.MSIE8_UA",
  "helpers.MSIE9_UA",
  "helpers.ManagerTestBase",
  "helpers.SQLAlchemyTestBase",
  "helpers.changes_on_update",
  "helpers.check_sole_error",
  "helpers.collection_name",
  "helpers.collection_name.register",
  "helpers.count",
  "helpers.dumps",
  "helpers.evaluate_functions",
  "helpers.force_content_type_jsonapi",
  "helpers.foreign_keys",
  "helpers.get_by",
  "helpers.get_model",
  "helpers.get_related_association_proxy_model",
  "helpers.get_related_model",
  "helpers.get_relations",
  "helpers.has_field",
  "helpers.is_like_list",
  "helpers.is_mapped_class",
  "helpers.loads",
  "helpers.model_for.register",
  "helpers.primary_key_for",
  "helpers.primary_key_for.register",
  "helpers.primary_key_names",
  "helpers.primary_key_value",
  "helpers.serializer_for",
  "helpers.serializer_for.register",
  "helpers.session_query",
  "helpers.skip",
  "helpers.skip_unless",
  "helpers.string_to_datetime",
  "helpers.strings_to_datetimes",
  "helpers.upper_keys",
  "helpers.url_for",
  "helpers.url_for.register",
  "inspect.getargspec",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "json.JSONEncoder",
  "math.ceil",
  "mimerender.FlaskMimeRender",
  "mimerender.register_mime",
  "nose.SkipTest",
  "nose.tools.raises",
  "operator.attrgetter",
  "operator.itemgetter",
  "opfunc",
  "postprocessor",
  "preprocessor",
  "psycopg2cffi.compat.register",
  "rapi_view",
  "re.VERBOSE",
  "re.compile",
  "re.sub",
  "savalidation.VERSION.split",
  "savalidation.ValidationError",
  "savalidation.ValidationMixin",
  "savalidation.validators.validates_email",
  "savalidation.validators.validates_presence_of",
  "search.ComparisonToNull",
  "search.UnknownField",
  "search.search",
  "search.search_relationship",
  "search_",
  "serialization.ClientGeneratedIDNotAllowed",
  "serialization.ConflictingType",
  "serialization.DefaultDeserializer",
  "serialization.DefaultSerializer",
  "serialization.DeserializationException",
  "serialization.SerializationException",
  "serialization.simple_relationship_serialize",
  "serialize",
  "set_content_type",
  "sqlalchemy.Column",
  "sqlalchemy.Date",
  "sqlalchemy.DateTime",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.Interval",
  "sqlalchemy.Time",
  "sqlalchemy.TypeDecorator",
  "sqlalchemy.Unicode",
  "sqlalchemy.and_",
  "sqlalchemy.create_engine",
  "sqlalchemy.dialects.postgresql.INET",
  "sqlalchemy.dialects.postgresql.UUID",
  "sqlalchemy.event.remove",
  "sqlalchemy.exc.NoInspectionAvailable",
  "sqlalchemy.exc.OperationalError",
  "sqlalchemy.exc.SQLAlchemyError",
  "sqlalchemy.ext.associationproxy.AssociationProxy",
  "sqlalchemy.ext.associationproxy.association_proxy",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.ext.hybrid.HYBRID_PROPERTY",
  "sqlalchemy.ext.hybrid.hybrid_property",
  "sqlalchemy.func.current_timestamp",
  "sqlalchemy.func.now",
  "sqlalchemy.inspection.inspect",
  "sqlalchemy.inspection.inspect.getmembers",
  "sqlalchemy.or_",
  "sqlalchemy.orm.ColumnProperty",
  "sqlalchemy.orm.RelationshipProperty",
  "sqlalchemy.orm.aliased",
  "sqlalchemy.orm.attributes.InstrumentedAttribute",
  "sqlalchemy.orm.attributes.QueryableAttribute",
  "sqlalchemy.orm.backref",
  "sqlalchemy.orm.class_mapper",
  "sqlalchemy.orm.exc.MultipleResultsFound",
  "sqlalchemy.orm.exc.NoResultFound",
  "sqlalchemy.orm.query.Query",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.scoped_session",
  "sqlalchemy.orm.session.Session",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.orm.validates",
  "sqlalchemy.sql.expression.ColumnElement",
  "sqlalchemy.sql.false",
  "sqlalchemy.sql.func",
  "sqlalchemy.sql.func.count",
  "sqlalchemy.types.CHAR",
  "sqlalchemy.types.TypeDecorator",
  "string.ascii_letters",
  "string.digits",
  "sys.version",
  "sys.version_info",
  "testing.postgresql.PostgresqlFactory",
  "tests.helpers.BetterJSONEncoder",
  "tests.helpers.CLASS_TYPES",
  "tests.helpers.DatabaseMixin",
  "tests.helpers.FlaskSQLAlchemyTestBase",
  "tests.helpers.FlaskTestBase",
  "tests.helpers.IS_PYTHON2",
  "tests.helpers.ManagerTestBase",
  "tests.helpers.SQLAlchemyTestBase",
  "tests.helpers.force_content_type_jsonapi",
  "tests.helpers.has_flask_sqlalchemy",
  "tests.helpers.isclass",
  "tests.helpers.loads",
  "tests.helpers.parse_version",
  "tests.helpers.skip_unless",
  "tests.helpers.unregister_fsa_session_signals",
  "tests.test_bulk.TestCreating",
  "tests.test_bulk.TestDeleting",
  "tests.test_bulk.TestUpdating",
  "tests.test_creating.TestAssociationProxy",
  "tests.test_creating.TestCreating",
  "tests.test_creating.TestFlaskSQLAlchemy",
  "tests.test_creating.TestProcessors",
  "tests.test_creating.raise_d_exception",
  "tests.test_creating.raise_s_exception",
  "tests.test_deleting.TestDeleting",
  "tests.test_deleting.TestFlaskSQLAlchemy",
  "tests.test_deleting.TestProcessors",
  "tests.test_fetching.TestAssociationProxy",
  "tests.test_fetching.TestDynamicRelationships",
  "tests.test_fetching.TestFetchCollection",
  "tests.test_fetching.TestFetchRelatedResource",
  "tests.test_fetching.TestFetchRelation",
  "tests.test_fetching.TestFetchRelationship",
  "tests.test_fetching.TestFetchResource",
  "tests.test_fetching.TestFlaskSQLAlchemy",
  "tests.test_fetching.TestProcessors",
  "tests.test_fetching.TestServerSparseFieldsets",
  "tests.test_filtering.PostgreSQL",
  "tests.test_filtering.SearchTestBase",
  "tests.test_filtering.TestAssociationProxy",
  "tests.test_filtering.TestFiltering",
  "tests.test_filtering.TestNetworkOperators",
  "tests.test_filtering.TestOperators",
  "tests.test_functions.TestFunctionEvaluation",
  "tests.test_jsonapi.test_creating_resources.TestCreatingResources",
  "tests.test_jsonapi.test_deleting_resources.TestDeletingResources",
  "tests.test_jsonapi.test_document_structure.TestDocumentStructure",
  "tests.test_jsonapi.test_fetching_data.TestFetchingData",
  "tests.test_jsonapi.test_fetching_data.TestInclusion",
  "tests.test_jsonapi.test_fetching_data.TestPagination",
  "tests.test_jsonapi.test_fetching_data.TestSorting",
  "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets",
  "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities",
  "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships",
  "tests.test_jsonapi.test_updating_resources.TestUpdatingResources",
  "tests.test_manager.TestAPIManager",
  "tests.test_manager.TestFSA",
  "tests.test_manager.TestLocalAPIManager",
  "tests.test_metadata.TestMetadata",
  "tests.test_serialization.DecoratedDateTime",
  "tests.test_serialization.DecoratedInterval",
  "tests.test_serialization.TestFetchCollection",
  "tests.test_serialization.TestFetchRelatedResource",
  "tests.test_serialization.TestFetchRelation",
  "tests.test_serialization.TestFetchResource",
  "tests.test_serialization.raise_exception",
  "tests.test_updating.TestAssociationProxy",
  "tests.test_updating.TestFlaskSQLAlchemy",
  "tests.test_updating.TestProcessors",
  "tests.test_updating.TestUpdating",
  "tests.test_updatingrelationship.TestAdding",
  "tests.test_updatingrelationship.TestDeleting",
  "tests.test_updatingrelationship.TestUpdatingToMany",
  "tests.test_updatingrelationship.TestUpdatingToOne",
  "tests.test_validation.CoolValidationError",
  "tests.test_validation.TestSAValidation",
  "tests.test_validation.TestSimpleValidation",
  "tests.test_validation.has_savalidation",
  "tests.test_validation.sav_version",
  "to_string",
  "types.ClassType",
  "types.TypeType",
  "update",
  "urlparse.urljoin",
  "urlparse.urlparse",
  "urlparse.urlunparse",
  "uuid.UUID",
  "uuid.uuid1",
  "v",
  "version",
  "views.API.as_view",
  "views.FunctionAPI.as_view",
  "views.RelationshipAPI.as_view",
  "werkzeug.parse_options_header"
 ],
 "deps": {
  "ArticleTag": [],
  "Counter": [],
  "DRD": [],
  "ProcessingException": [],
  "add_rule": [],
  "base": [],
  "collections": [],
  "cr": [],
  "datetime": [],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decorate": [],
  "deserialize": [],
  "direction": [],
  "events": [
   "events/conda-forge/noarch/events-0.4-pyhd8ed1ab_0"
  ],
  "f": [],
  "flask": [],
  "flask_restless": [
   "flask-restless/conda-forge/noarch/flask-restless-1.0.0b1-py_1"
  ],
  "from_dict": [],
  "func": [],
  "funcobj": [],
  "functools": [],
  "helpers": [],
  "inspect": [],
  "itertools": [],
  "json": [],
  "math": [],
  "mimerender": [],
  "nose": [],
  "operator": [],
  "opfunc": [],
  "postprocessor": [],
  "preprocessor": [],
  "psycopg2cffi": [],
  "rapi_view": [],
  "re": [],
  "savalidation": [],
  "search": [],
  "search_": [],
  "serialization": [],
  "serialize": [],
  "set_content_type": [],
  "sqlalchemy": [],
  "string": [],
  "sys": [],
  "test": [
   "botorch/conda-forge/noarch/botorch-0.3.2-pyhd8ed1ab_1",
   "boutdata/conda-forge/noarch/boutdata-0.1.2-py_0",
   "dbt/conda-forge/noarch/dbt-0.13.0-py_0",
   "easybuild-framework/conda-forge/noarch/easybuild-framework-4.3.2-pyhd8ed1ab_0",
   "fairlearn/conda-forge/noarch/fairlearn-0.4.4-py_0",
   "flask-redis/conda-forge/noarch/flask-redis-0.4.0-py_0",
   "gpytorch/conda-forge/noarch/gpytorch-1.4.0-pyhd8ed1ab_0",
   "hopcroftkarp/conda-forge/noarch/hopcroftkarp-1.2.4-py_0",
   "ibm-cloud-sdk-core/conda-forge/noarch/ibm-cloud-sdk-core-3.1.0-pyh9f0ad1d_0",
   "ioos_qartod/conda-forge/noarch/ioos_qartod-0.0.3-py_1",
   "kfp-server-api/conda-forge/noarch/kfp-server-api-0.3.0-pyh9f0ad1d_0",
   "label-maker/conda-forge/noarch/label-maker-0.8.0-pyh9f0ad1d_0",
   "mistletoe-ebp/conda-forge/noarch/mistletoe-ebp-0.9.3-py_0",
   "museotoolbox/conda-forge/noarch/museotoolbox-0.13.6-pyh9f0ad1d_0",
   "mycli/conda-forge/noarch/mycli-1.23.0-pyh44b312d_0",
   "otfmi/conda-forge/noarch/otfmi-0.2-py_1",
   "pyinstrument/conda-forge/noarch/pyinstrument-3.1.4-pyh9f0ad1d_0",
   "pyulog/conda-forge/noarch/pyulog-0.7.0-py_0",
   "sat-search/conda-forge/noarch/sat-search-0.2.2-py_0",
   "satsearch/conda-forge/noarch/satsearch-0.1.0-py_0",
   "signalrcore/conda-forge/noarch/signalrcore-0.8.9-pyhd8ed1ab_0",
   "wsproto/conda-forge/noarch/wsproto-0.13.0-py_0"
  ],
  "testing": [],
  "tests": [],
  "to_string": [],
  "types": [],
  "update": [],
  "urlparse": [],
  "uuid": [],
  "v": [],
  "version": [],
  "views": [],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-0.15.0-py_0"
  ]
 }
}