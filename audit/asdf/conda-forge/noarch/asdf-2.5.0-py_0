{
 "bad": [
  "All",
  "Block._header.size",
  "CustomFlow",
  "CustomFlowExtension",
  "CustomFlowStyleExtension",
  "CustomFlowStyleType",
  "CustomStyleExtension",
  "CustomStyleType",
  "CustomType",
  "CustomTypeExtension",
  "DefaultTypeExtension",
  "DoesntHaveCorrectPytest",
  "Entry",
  "FancyComplexExtension",
  "FileWrapper",
  "Foo",
  "FooExtension",
  "FooType",
  "ForeignTypeExtension",
  "FractionCallable",
  "FractionExtension",
  "Fractional2dCoordExtension",
  "HasCorrectPytest",
  "MyFraction",
  "NoModuleType",
  "RandomReader",
  "RandomWriter",
  "Reader",
  "SomeObject",
  "Subclass2dCoord",
  "SubclassWCS",
  "Writer",
  "_compare_func",
  "abc.ABCMeta",
  "abc.abstractproperty",
  "argparse.ArgumentParser",
  "ascii_to_unicode",
  "asdf.AsdfFile",
  "asdf.AsdfFile._open_asdf",
  "asdf.AsdfFile._open_impl",
  "asdf.AsdfFile.open",
  "asdf.IntegerType",
  "asdf.ValidationError",
  "asdf._internal_init._get_test_runner",
  "asdf.asdf.AsdfFile",
  "asdf.asdf._check_and_set_mode",
  "asdf.asdf.block",
  "asdf.asdf.copy",
  "asdf.asdf.get_asdf_library_info",
  "asdf.asdf.is_asdf_file",
  "asdf.asdf.open_asdf",
  "asdf.asdf.version",
  "asdf.block.Block",
  "asdf.block.UnloadedBlock",
  "asdf.block.copy",
  "asdf.blocks",
  "asdf.blocks.internal_blocks",
  "asdf.commands.defragment.AsdfFile",
  "asdf.commands.defragment.defragment",
  "asdf.commands.diff.ArrayNode",
  "asdf.commands.diff.DiffContext",
  "asdf.commands.diff.GREEN",
  "asdf.commands.diff.LIST_MARKER",
  "asdf.commands.diff.NDARRAY_TAG",
  "asdf.commands.diff.PrintTree",
  "asdf.commands.diff.RED",
  "asdf.commands.diff.RESET",
  "asdf.commands.diff.RESET_NEWLINE",
  "asdf.commands.diff.THAT_MARKER",
  "asdf.commands.diff.THIS_MARKER",
  "asdf.commands.diff.both_are_ndarrays",
  "asdf.commands.diff.compare_dicts",
  "asdf.commands.diff.compare_ndarrays",
  "asdf.commands.diff.compare_objects",
  "asdf.commands.diff.compare_trees",
  "asdf.commands.diff.diff",
  "asdf.commands.diff.print_dict_diff",
  "asdf.commands.diff.print_in_tree",
  "asdf.commands.diff.print_tree_context",
  "asdf.commands.exploded.AsdfFile",
  "asdf.commands.exploded.explode",
  "asdf.commands.exploded.implode",
  "asdf.commands.extension._format_entry_point",
  "asdf.commands.extension._format_type_name",
  "asdf.commands.extension._print_extension_details",
  "asdf.commands.extension.find_extensions",
  "asdf.commands.extract.extract_file",
  "asdf.commands.main.Command",
  "asdf.commands.main.command_order",
  "asdf.commands.main.main_from_args",
  "asdf.commands.main.make_argparser",
  "asdf.commands.remove_hdu.remove_hdu",
  "asdf.commands.tags.AsdfFile",
  "asdf.commands.tags._qualified_name",
  "asdf.commands.tags.list_tags",
  "asdf.commands.tests.test_defragment.AsdfFile",
  "asdf.commands.tests.test_defragment._test_defragment",
  "asdf.commands.tests.test_diff._assert_diffs_equal",
  "asdf.commands.tests.test_diff.diff",
  "asdf.commands.tests.test_diff.get_test_data_path",
  "asdf.commands.tests.test_remove_hdu.remove_hdu",
  "asdf.commands.tests.test_tags.AsdfFile",
  "asdf.commands.tests.test_tags._class_to_string",
  "asdf.commands.tests.test_tags._get_tags",
  "asdf.commands.tests.test_tags.list_tags",
  "asdf.commands.tests.test_to_yaml.AsdfFile",
  "asdf.commands.to_yaml.AsdfFile",
  "asdf.commands.to_yaml.to_yaml",
  "asdf.compression",
  "asdf.compression.DEFAULT_BLOCK_SIZE",
  "asdf.compression.Lz4Compressor",
  "asdf.compression.Lz4Decompressor",
  "asdf.compression._get_decoder",
  "asdf.compression._get_encoder",
  "asdf.compression.compress",
  "asdf.compression.decompress",
  "asdf.compression.get_compressed_size",
  "asdf.compression.validate",
  "asdf.constants.BLOCK_MAGIC",
  "asdf.constants.INDEX_HEADER",
  "asdf.constants.MAX_BLOCKS",
  "asdf.exceptions.AsdfConversionWarning",
  "asdf.exceptions.AsdfDeprecationWarning",
  "asdf.exceptions.AsdfWarning",
  "asdf.extension",
  "asdf.extension.ASDF_TEST_BUILD_ENV",
  "asdf.extension.AsdfExtension",
  "asdf.extension.AsdfExtensionList",
  "asdf.extension.BuiltinExtension",
  "asdf.extension._DefaultExtensions",
  "asdf.extension.default_extensions",
  "asdf.extension.default_extensions.extension_list",
  "asdf.extension.default_extensions.extension_list.tag_mapping",
  "asdf.extension.default_extensions.reset",
  "asdf.extension.default_extensions.resolver",
  "asdf.extension.get_default_resolver",
  "asdf.extern.RangeHTTPServer.__version__",
  "asdf.extern.atomicfile._AtomicWFile",
  "asdf.extern.atomicfile._CloseHandle",
  "asdf.extern.atomicfile._CommitTransaction",
  "asdf.extern.atomicfile._CreateTransaction",
  "asdf.extern.atomicfile._MOVEFILE_REPLACE_EXISTING",
  "asdf.extern.atomicfile._MOVEFILE_WRITE_THROUGH",
  "asdf.extern.atomicfile._MoveFileEx",
  "asdf.extern.atomicfile._MoveFileTransacted",
  "asdf.extern.atomicfile._rename_atomic",
  "asdf.extern.atomicfile.atomic_rename",
  "asdf.fits_embed.ASDF_EXTENSION_NAME",
  "asdf.fits_embed.AsdfInFits",
  "asdf.fits_embed.AsdfInFits.open",
  "asdf.fits_embed.FITS_SOURCE_PREFIX",
  "asdf.fits_embed._EmbeddedBlockManager",
  "asdf.fits_embed._FitsBlock",
  "asdf.fits_embed.block",
  "asdf.generic_io.GenericFile",
  "asdf.generic_io.GenericWrapper",
  "asdf.generic_io.HTTPConnection",
  "asdf.generic_io.InputStream",
  "asdf.generic_io.MemoryIO",
  "asdf.generic_io.OutputStream",
  "asdf.generic_io.RandomAccessFile",
  "asdf.generic_io.RealFile",
  "asdf.generic_io._TruncatedReader",
  "asdf.generic_io._array_fromfile",
  "asdf.generic_io._array_tofile",
  "asdf.generic_io._array_tofile_simple",
  "asdf.generic_io._check_bytes",
  "asdf.generic_io._local_file_schemes",
  "asdf.generic_io._make_http_connection",
  "asdf.generic_io.get_file",
  "asdf.generic_io.relative_uri",
  "asdf.get_asdf_library_info",
  "asdf.open",
  "asdf.open_asdf",
  "asdf.reference.Reference",
  "asdf.reference.find_references",
  "asdf.reference.resolve_fragment",
  "asdf.resolver",
  "asdf.resolver.DEFAULT_TAG_TO_URL_MAPPING",
  "asdf.resolver.DEFAULT_URL_MAPPING",
  "asdf.resolver.Resolver",
  "asdf.resolver.ResolverChain",
  "asdf.resolver.default_resolver",
  "asdf.resolver.default_tag_to_url_mapping",
  "asdf.resolver.default_url_mapping",
  "asdf.resolver.find_schema_path",
  "asdf.schema.FILL_DEFAULTS",
  "asdf.schema.HARDCODED_SCHEMA",
  "asdf.schema.OrderedLoader",
  "asdf.schema.PYTHON_TYPE_TO_YAML_TAG",
  "asdf.schema.REMOVE_DEFAULTS",
  "asdf.schema.YAML_SCHEMA_METASCHEMA_ID",
  "asdf.schema.YAML_VALIDATORS",
  "asdf.schema._create_validator",
  "asdf.schema._load_draft4_metaschema",
  "asdf.schema._load_schema",
  "asdf.schema._load_schema_cached",
  "asdf.schema._make_resolver",
  "asdf.schema._make_schema_loader",
  "asdf.schema._type_to_tag",
  "asdf.schema._yaml_base_loader",
  "asdf.schema.check_schema",
  "asdf.schema.construct_mapping",
  "asdf.schema.default_ext_resolver",
  "asdf.schema.get_validator",
  "asdf.schema.load_schema",
  "asdf.schema.validate",
  "asdf.schema.validate_fill_default",
  "asdf.schema.validate_flowStyle",
  "asdf.schema.validate_large_literals",
  "asdf.schema.validate_propertyOrder",
  "asdf.schema.validate_remove_default",
  "asdf.schema.validate_style",
  "asdf.schema.validate_tag",
  "asdf.schema.validate_type",
  "asdf.schema.yaml",
  "asdf.stream.Stream",
  "asdf.tagged.AsdfFile",
  "asdf.tagged.Tagged",
  "asdf.tagged.TaggedDict",
  "asdf.tagged.TaggedList",
  "asdf.tagged.TaggedString",
  "asdf.tagged.tag_object",
  "asdf.tags.core.ExtensionMetadata",
  "asdf.tags.core.HistoryEntry",
  "asdf.tags.core.Software",
  "asdf.tags.core.constant.Constant",
  "asdf.tags.core.external_reference.ExternalArrayReference",
  "asdf.tags.core.integer.IntegerType",
  "asdf.tags.core.ndarray.NDArrayType",
  "asdf.tags.core.ndarray._datatype_names",
  "asdf.tags.core.ndarray._datatype_names.values",
  "asdf.tags.core.ndarray._get_ndim",
  "asdf.tags.core.ndarray._make_operation",
  "asdf.tags.core.ndarray._string_datatype_names",
  "asdf.tags.core.ndarray.asdf_byteorder_to_numpy_byteorder",
  "asdf.tags.core.ndarray.asdf_datatype_to_numpy_dtype",
  "asdf.tags.core.ndarray.inline_data_asarray",
  "asdf.tags.core.ndarray.numpy_array_to_list",
  "asdf.tags.core.ndarray.numpy_byteorder_to_asdf_byteorder",
  "asdf.tags.core.ndarray.numpy_dtype_to_asdf_datatype",
  "asdf.tags.core.ndarray.validate_datatype",
  "asdf.tags.core.ndarray.validate_max_ndim",
  "asdf.tags.core.ndarray.validate_ndim",
  "asdf.tags.core.tests.test_complex.make_complex_asdf",
  "asdf.tags.core.tests.test_history.CustomExtension",
  "asdf.tags.core.tests.test_history.SCHEMA_PATH",
  "asdf.tags.core.tests.test_ndarray.CustomDatatype",
  "asdf.tags.core.tests.test_ndarray.CustomExtension",
  "asdf.tags.core.tests.test_ndarray.CustomNdim",
  "asdf.tags.core.tests.test_ndarray.TEST_DATA_PATH",
  "asdf.tags.core.tests.test_ndarray.yaml",
  "asdf.tests.CustomExtension",
  "asdf.tests.CustomTestType",
  "asdf.tests.CustomType",
  "asdf.tests.conftest.create_large_tree",
  "asdf.tests.conftest.create_small_tree",
  "asdf.tests.helpers.__file__",
  "asdf.tests.helpers._assert_roundtrip_tree",
  "asdf.tests.helpers.assert_roundtrip_tree",
  "asdf.tests.helpers.assert_tree_match",
  "asdf.tests.helpers.display_warnings",
  "asdf.tests.helpers.get_test_data_path",
  "asdf.tests.helpers.yaml_to_asdf",
  "asdf.tests.httpserver.HTTPServer",
  "asdf.tests.httpserver.run_server",
  "asdf.tests.test_array_blocks._get_update_tree",
  "asdf.tests.test_asdftypes.CustomExtension",
  "asdf.tests.test_asdftypes.CustomTestType",
  "asdf.tests.test_asdftypes.Fractional2dCoord",
  "asdf.tests.test_asdftypes.TEST_DATA_PATH",
  "asdf.tests.test_asdftypes.fractional2dcoordtype_factory",
  "asdf.tests.test_asdftypes.fractiontype_factory",
  "asdf.tests.test_compression._get_large_tree",
  "asdf.tests.test_compression._roundtrip",
  "asdf.tests.test_fits_embed.compare_asdfs",
  "asdf.tests.test_fits_embed.create_asdf_in_fits",
  "asdf.tests.test_generic_io._roundtrip",
  "asdf.tests.test_generic_io.create_large_tree",
  "asdf.tests.test_generic_io.create_small_tree",
  "asdf.tests.test_generic_io.open",
  "asdf.tests.test_generic_io.tree",
  "asdf.tests.test_reference_files._REFFILE_PATH",
  "asdf.tests.test_reference_files._compare_trees",
  "asdf.tests.test_reference_files.collect_reference_files",
  "asdf.tests.test_reference_files.get_test_id",
  "asdf.tests.test_schema.TagReferenceType",
  "asdf.tests.test_schema.warnings",
  "asdf.tests.test_schema.yaml",
  "asdf.tests.test_yaml.run_tuple_test",
  "asdf.tests.test_yaml.yaml",
  "asdf.tree",
  "asdf.tree.all",
  "asdf.treeutil.iter_tree",
  "asdf.treeutil.walk_and_modify",
  "asdf.type_index._AsdfWriteTypeIndex",
  "asdf.type_index._BASIC_PYTHON_TYPES",
  "asdf.types",
  "asdf.types.AsdfSubclassProperty",
  "asdf.types.AsdfType",
  "asdf.types.AsdfTypeMeta",
  "asdf.types.CustomType",
  "asdf.types.ExtensionType",
  "asdf.types.ExtensionTypeMeta",
  "asdf.types.MODULE_RE",
  "asdf.types._all_asdftypes",
  "asdf.types._from_tree_tagged_missing_requirements",
  "asdf.types.format_tag",
  "asdf.util.InheritDocstrings",
  "asdf.util.filepath_to_url",
  "asdf.util.resolve_name",
  "asdf.versioning",
  "asdf.versioning.AsdfSpec",
  "asdf.versioning.AsdfVersion",
  "asdf.versioning.AsdfVersionMixin",
  "asdf.versioning._version_map",
  "asdf.versioning._yaml_base_loader",
  "asdf.versioning.default_version",
  "asdf.versioning.get_version_map",
  "asdf.versioning.split_tag_version",
  "asdf.versioning.supported_versions",
  "asdf.versioning.yaml",
  "asdf.yamlutil.AsdfDumper",
  "asdf.yamlutil.AsdfLoader",
  "asdf.yamlutil.YAML_OMAP_TAG",
  "asdf.yamlutil._flow_style_map",
  "asdf.yamlutil._style_map",
  "asdf.yamlutil._yaml_base_dumper",
  "asdf.yamlutil._yaml_base_loader",
  "asdf.yamlutil._yaml_base_type_map",
  "asdf.yamlutil._yaml_to_base_type",
  "asdf.yamlutil.custom_tree_to_tagged_tree",
  "asdf.yamlutil.ordereddict_constructor",
  "asdf.yamlutil.represent_mapping",
  "asdf.yamlutil.represent_ordered_mapping",
  "asdf.yamlutil.represent_ordereddict",
  "asdf.yamlutil.represent_scalar",
  "asdf.yamlutil.represent_sequence",
  "asdf.yamlutil.tagged_tree_to_custom_tree",
  "asdf.yamlutil.yaml",
  "astropy.coordinates.ICRS",
  "astropy.coordinates.representation.CartesianDifferential",
  "astropy.coordinates.representation.CartesianRepresentation",
  "astropy.io.fits.BinTableHDU",
  "astropy.io.fits.BinTableHDU.from_columns",
  "astropy.io.fits.Column",
  "astropy.io.fits.HDUList",
  "astropy.io.fits.ImageHDU",
  "astropy.io.fits.PrimaryHDU",
  "astropy.io.fits.hdu.hdulist.HDUList",
  "astropy.io.fits.open",
  "astropy.modeling.models.AffineTransformation2D",
  "astropy.table.Table",
  "astropy.tests.helper.TestRunner",
  "astropy.units.UnitBase",
  "astropy.units.m",
  "astropy.units.quantity.Quantity",
  "astropy.version.version",
  "bisect.bisect_left",
  "block.Block",
  "block.BlockManager",
  "block._hdu",
  "block.calculate_updated_layout",
  "bz2.BZ2Compressor",
  "bz2.BZ2Decompressor",
  "callback",
  "callback.__code__.co_argcount",
  "chain",
  "cls",
  "collections.OrderedDict",
  "collections.UserDict",
  "collections.UserList",
  "collections.UserString",
  "collections.abc.Mapping",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "collections.namedtuple",
  "colorama.Fore.GREEN",
  "colorama.Fore.RED",
  "colorama.Style.RESET_ALL",
  "colorama.init",
  "compat.jsonschemacompat.JSONSCHEMA_LT_3",
  "compat.numpycompat.NUMPY_LT_1_7",
  "compression",
  "compression.compress",
  "compression.decompress",
  "compression.get_compressed_size",
  "compression.to_compression_header",
  "compression.validate",
  "constants.ASDF_MAGIC",
  "constants.ASDF_STANDARD_COMMENT",
  "constants.BLOCK_FLAG_STREAMED",
  "constants.BLOCK_HEADER_BOILERPLATE_SIZE",
  "constants.BLOCK_MAGIC",
  "constants.INDEX_HEADER",
  "constants.MAX_BLOCKS_DIGITS",
  "constants.STSCI_SCHEMA_TAG_BASE",
  "constants.STSCI_SCHEMA_URI_BASE",
  "constants.YAML_END_MARKER_REGEX",
  "constants.YAML_TAG_PREFIX",
  "convert_to_tuples",
  "copy.copy",
  "copy.deepcopy",
  "ctypes.windll.kernel32.CloseHandle",
  "ctypes.windll.kernel32.MoveFileExW",
  "ctypes.windll.kernel32.MoveFileTransactedW",
  "ctypes.windll.ktmw32.CommitTransaction",
  "ctypes.windll.ktmw32.CreateTransaction",
  "data",
  "datetime.datetime",
  "datetime.datetime.utcfromtimestamp",
  "decorator",
  "dict.keys.__doc__",
  "distutils.version.LooseVersion",
  "do_asserts",
  "exceptions.AsdfConversionWarning",
  "exceptions.AsdfDeprecationWarning",
  "ext",
  "extension.AsdfExtensionList",
  "extension.TestExtension",
  "extension.default_extensions.extension_list",
  "extension.default_extensions.extensions",
  "extension.default_extensions.package_metadata",
  "extension.get_default_resolver",
  "extern.RangeHTTPServer.RangeHTTPRequestHandler",
  "extern.atomicfile.atomic_open",
  "extract.extract_file",
  "find_innermost_match",
  "fits_embed.AsdfInFits._open_impl",
  "fix_block",
  "fractions.Fraction",
  "funcname",
  "functools.lru_cache",
  "functools.partial",
  "functools.total_ordering",
  "gc.collect",
  "generic_io.GenericFile",
  "generic_io.InputStream",
  "generic_io.SEEK_END",
  "generic_io.SEEK_SET",
  "generic_io.get_file",
  "generic_io.get_uri",
  "generic_io.relative_uri",
  "generic_io.resolve_uri",
  "get_read_fd",
  "get_write_fd",
  "handle_mask",
  "has_block",
  "hashlib.new",
  "helpers.assert_roundtrip_tree",
  "helpers.assert_tree_match",
  "helpers.display_warnings",
  "helpers.get_test_data_path",
  "helpers.yaml_to_asdf",
  "hook",
  "httpserver.RangeHTTPServer",
  "importlib.import_module",
  "importlib.util.find_spec",
  "importlib_resources",
  "importlib_resources.path",
  "input.startswith",
  "inspect.getmembers",
  "inspect.isfunction",
  "io.BufferedRandom",
  "io.BufferedReader",
  "io.BufferedWriter",
  "io.BytesIO",
  "io.DEFAULT_BUFFER_SIZE",
  "io.FileIO",
  "io.IOBase",
  "io.RawIOBase",
  "io.StringIO",
  "io.TextIOBase",
  "io.open",
  "is_public_member",
  "itertools.combinations",
  "json.loads",
  "jsonschema.ValidationError",
  "jsonschema._utils.load_schema",
  "jsonschema.exceptions.ValidationError",
  "jsonschema.validators",
  "jsonschema.validators.Draft4Validator",
  "jsonschema.validators.Draft4Validator.ID_OF",
  "jsonschema.validators.Draft4Validator.TYPE_CHECKER.redefine",
  "jsonschema.validators.Draft4Validator.VALIDATORS",
  "jsonschema.validators.Draft4Validator.VALIDATORS.copy",
  "jsonschema.validators.RefResolver",
  "jsonschema.validators.create",
  "jsonschema.validators.update",
  "loader",
  "logging.error",
  "main.Command",
  "main.main",
  "main.main_from_args",
  "mark_block",
  "math.ceil",
  "nt",
  "numbers.Integral",
  "numpy.abs",
  "numpy.all",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.asfortranarray",
  "numpy.broadcast_arrays",
  "numpy.can_cast",
  "numpy.ceil",
  "numpy.complexfloating",
  "numpy.core.memmap",
  "numpy.dtype",
  "numpy.empty",
  "numpy.equal",
  "numpy.float",
  "numpy.float64",
  "numpy.floating",
  "numpy.frombuffer",
  "numpy.fromfile",
  "numpy.inf",
  "numpy.int",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.log10",
  "numpy.ma.MaskedArray",
  "numpy.ma.array",
  "numpy.ma.asarray",
  "numpy.ma.core.masked_array",
  "numpy.ma.is_masked",
  "numpy.ma.masked_array",
  "numpy.ma.masked_values",
  "numpy.memmap",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.number",
  "numpy.ones",
  "numpy.product",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.where",
  "numpy.zeros",
  "os.SEEK_CUR",
  "os.SEEK_END",
  "os.SEEK_SET",
  "os.W_OK",
  "os.access",
  "os.chmod",
  "os.curdir",
  "os.environ.get",
  "os.fdopen",
  "os.fstat",
  "os.getcwd",
  "os.listdir",
  "os.name",
  "os.pardir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.relpath",
  "os.path.sep",
  "os.path.sep.join",
  "os.path.split",
  "os.path.splitdrive",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.stat",
  "pathlib.Path",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkg_resources.iter_entry_points",
  "pkg_resources.parse_version",
  "platform.mac_ver",
  "posixpath.normpath",
  "posixpath.splitext",
  "pytest.File",
  "pytest.Item",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.remote_data",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.warns",
  "pytest.xfail",
  "pytest_asdf.extension.LabelMapperTestType",
  "pytest_asdf.extension.RegionsSelectorTestType",
  "pytest_asdf.plugin.ASTROPY_4_0_TAGS",
  "pytest_asdf.plugin.AsdfSchemaExampleItem",
  "pytest_asdf.plugin.AsdfSchemaFile",
  "pytest_asdf.plugin.AsdfSchemaItem",
  "pytest_asdf.plugin.is_min_astropy_version",
  "pytest_asdf.plugin.parse_schema_filename",
  "pytest_asdf.plugin.should_skip",
  "pytest_remotedata.disable_internet.INTERNET_OFF",
  "queue.Queue",
  "queue.put",
  "r",
  "r.add_mapping",
  "random.getrandbits",
  "random.seed",
  "re.compile",
  "re.match",
  "re.search",
  "re.sub",
  "recurse",
  "recurse_with_json_ids",
  "reference.Reference",
  "reference.find_references",
  "reference.make_reference",
  "reference.resolve_fragment",
  "reference.resolve_references",
  "resolver",
  "resolver.DEFAULT_TAG_TO_URL_MAPPING",
  "resolver.DEFAULT_URL_MAPPING",
  "resolver.DEFAULT_URL_MAPPING.replace",
  "resolver.Resolver",
  "resolver.ResolverChain",
  "resolver_method",
  "schema.check_schema",
  "schema.fill_defaults",
  "schema.get",
  "schema.load_custom_schema",
  "schema.remove_defaults",
  "schema.validate",
  "schema.validate_large_literals",
  "schema_loader",
  "semantic_version.SimpleSpec",
  "semantic_version.Version",
  "semantic_version.Version.__eq__",
  "semantic_version.Version.__hash__",
  "semantic_version.Version.__lt__",
  "shutil.copyfileobj",
  "shutil.rmtree",
  "six.add_metaclass",
  "six.string_types",
  "socketserver.TCPServer",
  "str.__eq__",
  "string.ascii_letters",
  "struct.calcsize",
  "struct.pack",
  "struct.unpack",
  "struct.unpack_from",
  "sys.__stderr__",
  "sys.__stdin__",
  "sys.__stdout__",
  "sys.argv",
  "sys.byteorder",
  "sys.exit",
  "sys.getfilesystemencoding",
  "sys.maxsize",
  "sys.maxunicode",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stderr.write",
  "sys.stdout",
  "sys.version_info",
  "tagged.Tagged",
  "tagged.TaggedDict",
  "tagged.TaggedList",
  "tagged.TaggedString",
  "tagged.tag_object",
  "tags.core.AsdfObject",
  "tags.core.AsdfObject.version",
  "tags.core.AsdfObject.yaml_tag",
  "tags.core.ExtensionMetadata",
  "tags.core.HistoryEntry",
  "tags.core.Software",
  "tags.core.SubclassMetadata",
  "tags.core.complex.ComplexType.from_tree",
  "tags.core.complex.ComplexType.to_tree",
  "tags.core.ndarray.NDArrayType",
  "tags.core.ndarray.NDArrayType.from_tree",
  "tags.core.ndarray.numpy_dtype_to_asdf_datatype",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.mkdtemp",
  "tests.helpers.assert_tree_match",
  "tests.helpers.get_file_sizes",
  "tests.helpers.get_test_data_path",
  "tests.httpserver.HTTPServer",
  "tests.httpserver.RangeHTTPServer",
  "threading.Event",
  "threading.Thread",
  "time.sleep",
  "time.time",
  "tolist",
  "treeutil.iter_tree",
  "treeutil.walk_and_modify",
  "type_index.AsdfTypeIndex",
  "types.AsdfType",
  "types.ModuleType",
  "types._all_asdftypes",
  "typing.NamedTuple",
  "unfix_block",
  "update",
  "urllib.parse.unquote",
  "urllib.parse.urljoin",
  "urllib.parse.urlparse",
  "urllib.parse.urlunparse",
  "urllib.request.pathname2url",
  "urllib.request.url2pathname",
  "urllib.request.urlopen",
  "util.BinaryStruct",
  "util.HashableDict",
  "util.InheritDocstrings",
  "util.calculate_padding",
  "util.filepath_to_url",
  "util.get_array_base",
  "util.get_base_uri",
  "util.get_class_name",
  "util.human_list",
  "util.iter_subclasses",
  "util.minversion",
  "util.resolve_name",
  "version.githash",
  "version.version",
  "version.version.setter",
  "versioning.AsdfSpec",
  "versioning.AsdfVersion",
  "versioning.VersionedMixin",
  "versioning.default_version",
  "versioning.get_version_map",
  "versioning.join_tag_version",
  "versioning.split_tag_version",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "weakref.ref",
  "yaml.CSafeDumper",
  "yaml.CSafeLoader",
  "yaml.MappingNode",
  "yaml.SafeDumper",
  "yaml.SafeLoader",
  "yaml.ScalarNode",
  "yaml.SequenceNode",
  "yaml.YAMLError",
  "yaml.constructor.ConstructorError",
  "yaml.dump",
  "yaml.dump_all",
  "yaml.load",
  "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
  "yaml.safe_load",
  "yamlutil._yaml_base_dumper",
  "yamlutil._yaml_base_loader",
  "yamlutil.custom_tree_to_tagged_tree",
  "yamlutil.dump_tree",
  "yamlutil.load_tree",
  "yamlutil.tagged_tree_to_custom_tree",
  "zlib.compressobj",
  "zlib.decompressobj"
 ],
 "deps": {
  "All": [],
  "Block": [],
  "CustomFlow": [],
  "CustomFlowExtension": [],
  "CustomFlowStyleExtension": [],
  "CustomFlowStyleType": [],
  "CustomStyleExtension": [],
  "CustomStyleType": [],
  "CustomType": [],
  "CustomTypeExtension": [],
  "DefaultTypeExtension": [],
  "DoesntHaveCorrectPytest": [],
  "Entry": [],
  "FancyComplexExtension": [],
  "FileWrapper": [],
  "Foo": [],
  "FooExtension": [],
  "FooType": [],
  "ForeignTypeExtension": [],
  "FractionCallable": [],
  "FractionExtension": [],
  "Fractional2dCoordExtension": [],
  "HasCorrectPytest": [],
  "MyFraction": [],
  "NoModuleType": [],
  "RandomReader": [],
  "RandomWriter": [],
  "Reader": [],
  "SomeObject": [],
  "Subclass2dCoord": [],
  "SubclassWCS": [],
  "Writer": [],
  "_compare_func": [],
  "abc": [],
  "argparse": [],
  "ascii_to_unicode": [],
  "asdf": [],
  "astropy": [],
  "bisect": [],
  "block": [],
  "bz2": [],
  "callback": [],
  "chain": [],
  "cls": [],
  "collections": [],
  "colorama": [],
  "compat": [],
  "compression": [],
  "constants": [],
  "convert_to_tuples": [],
  "copy": [],
  "ctypes": [],
  "data": [],
  "datetime": [],
  "decorator": [],
  "dict": [],
  "distutils": [],
  "do_asserts": [],
  "exceptions": [],
  "ext": [],
  "extension": [],
  "extern": [],
  "extract": [],
  "find_innermost_match": [],
  "fits_embed": [],
  "fix_block": [],
  "fractions": [],
  "funcname": [],
  "functools": [],
  "gc": [],
  "generic_io": [],
  "get_read_fd": [],
  "get_write_fd": [],
  "handle_mask": [],
  "has_block": [],
  "hashlib": [],
  "helpers": [],
  "hook": [],
  "httpserver": [],
  "importlib": [],
  "importlib_resources": [],
  "input": [],
  "inspect": [],
  "io": [],
  "is_public_member": [],
  "itertools": [],
  "json": [],
  "jsonschema": [],
  "loader": [],
  "logging": [],
  "main": [],
  "mark_block": [],
  "math": [],
  "nt": [],
  "numbers": [],
  "numpy": [],
  "os": [],
  "pathlib": [],
  "pkg_resources": [],
  "platform": [],
  "posixpath": [],
  "pytest": [],
  "pytest_asdf": [],
  "pytest_remotedata": [],
  "queue": [],
  "r": [],
  "random": [],
  "re": [],
  "recurse": [],
  "recurse_with_json_ids": [],
  "reference": [],
  "resolver": [],
  "resolver_method": [],
  "schema": [],
  "schema_loader": [],
  "semantic_version": [],
  "shutil": [],
  "six": [],
  "socketserver": [],
  "str": [],
  "string": [],
  "struct": [],
  "sys": [],
  "tagged": [],
  "tags": [],
  "tempfile": [],
  "tests": [],
  "threading": [],
  "time": [],
  "tolist": [],
  "treeutil": [],
  "type_index": [],
  "types": [],
  "typing": [],
  "unfix_block": [],
  "update": [],
  "urllib": [],
  "util": [],
  "version": [],
  "versioning": [],
  "warnings": [],
  "weakref": [],
  "yaml": [],
  "yamlutil": [],
  "zlib": []
 }
}