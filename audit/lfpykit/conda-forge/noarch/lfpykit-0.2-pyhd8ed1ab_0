{
 "bad": [
  "_omega",
  "copy.deepcopy",
  "h5py.File",
  "leg_consts",
  "lfpcalc.calc_lfp_linesource",
  "lfpcalc.calc_lfp_linesource_anisotropic",
  "lfpcalc.calc_lfp_linesource_moi",
  "lfpcalc.calc_lfp_pointsource",
  "lfpcalc.calc_lfp_pointsource_anisotropic",
  "lfpcalc.calc_lfp_pointsource_moi",
  "lfpcalc.calc_lfp_root_as_point",
  "lfpcalc.calc_lfp_root_as_point_anisotropic",
  "lfpcalc.calc_lfp_root_as_point_moi",
  "lfpykit.CellGeometry",
  "lfpykit.CurrentDipoleMoment",
  "lfpykit.LaminarCurrentSourceDensity",
  "lfpykit.LineSourcePotential",
  "lfpykit.LinearModel",
  "lfpykit.OneSphereVolumeConductor",
  "lfpykit.PointSourcePotential",
  "lfpykit.RecExtElectrode",
  "lfpykit.RecMEAElectrode",
  "lfpykit.VolumetricCurrentSourceDensity",
  "lfpykit.__path__",
  "lfpykit.eegmegcalc.FourSphereVolumeConductor",
  "lfpykit.eegmegcalc.InfiniteVolumeConductor",
  "lfpykit.eegmegcalc.MEG",
  "lfpykit.eegmegcalc.NYHeadModel",
  "lfpykit.lfpcalc._anisotropic_line_source_case_i",
  "lfpykit.lfpcalc._anisotropic_line_source_case_iia",
  "lfpykit.lfpcalc._anisotropic_line_source_case_iib",
  "lfpykit.lfpcalc._anisotropic_line_source_case_iii",
  "lfpykit.lfpcalc._anisotropic_line_source_case_iiii",
  "lfpykit.lfpcalc._check_rlimit_point",
  "lfpykit.lfpcalc._deltaS_calc",
  "lfpykit.lfpcalc._h_calc",
  "lfpykit.lfpcalc._linesource_calc_case1",
  "lfpykit.lfpcalc._linesource_calc_case2",
  "lfpykit.lfpcalc._linesource_calc_case3",
  "lfpykit.lfpcalc._r2_calc",
  "lfpykit.lfpcalc._r_root_calc",
  "lfpykit.lfpcalc.calc_lfp_linesource",
  "lfpykit.lfpcalc.calc_lfp_linesource_moi",
  "lfpykit.lfpcalc.calc_lfp_pointsource",
  "lfpykit.lfpcalc.calc_lfp_pointsource_anisotropic",
  "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
  "lfpykit.lfpcalc.calc_lfp_root_as_point",
  "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
  "lfpykit.lfpcalc.return_dist_from_segments",
  "lfpykit.models.LinearModel",
  "lfpykit.models.RecExtElectrode",
  "lfpykit.models._PrPz",
  "lfpykit.tests.test_eegmegcalc.decompose_dipole",
  "lfpykit.tests.test_eegmegcalc.make_class_object",
  "lfpykit.tests.test_eegmegcalc.make_simple_class_object",
  "lfpykit.tests.test_eegmegcalc.nyhead_file",
  "lfpykit.tests.test_eegmegcalc.test_NYHeadModel",
  "lfpykit.tests.test_eegmegcalc.test_folder",
  "lfpykit.tests.test_lfpcalc.DummyCell",
  "lfpykit.tests.test_module.get_cell",
  "loop_over_points",
  "math.acos",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsinh",
  "numpy.arctan2",
  "numpy.argmin",
  "numpy.array",
  "numpy.bitwise_and",
  "numpy.c_",
  "numpy.ceil",
  "numpy.copy",
  "numpy.cos",
  "numpy.cross",
  "numpy.diff",
  "numpy.dot",
  "numpy.empty",
  "numpy.errstate",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.float64",
  "numpy.histogramdd",
  "numpy.insert",
  "numpy.isfinite",
  "numpy.isnan",
  "numpy.isreal",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.max",
  "numpy.min",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.polynomial.legendre.Legendre",
  "numpy.r_",
  "numpy.r_.T",
  "numpy.random.uniform",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_less",
  "numpy.testing.assert_equal",
  "numpy.testing.assert_raises",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "poly_i",
  "poly_o",
  "scipy.special.lpmv",
  "ssl._create_unverified_context",
  "sys.exc_info",
  "sys.exit",
  "unittest.TestCase",
  "unittest.skipUnless",
  "urllib.request.urlopen",
  "warnings.warn"
 ],
 "deps": {
  "MEAutility": [
   "meautility/conda-forge/noarch/meautility-1.4.3-pyh9f0ad1d_1"
  ],
  "_omega": [],
  "copy": [],
  "h5py": [],
  "leg_consts": [],
  "lfpcalc": [],
  "lfpykit": [],
  "loop_over_points": [],
  "math": [],
  "numpy": [],
  "os": [],
  "poly_i": [],
  "poly_o": [],
  "scipy": [],
  "ssl": [],
  "sys": [],
  "unittest": [],
  "urllib": [],
  "warnings": []
 }
}