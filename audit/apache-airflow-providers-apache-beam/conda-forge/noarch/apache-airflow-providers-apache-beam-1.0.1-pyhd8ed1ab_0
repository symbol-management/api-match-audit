{
 "bad": [
  "abc.ABCMeta",
  "airflow.exceptions.AirflowException",
  "airflow.hooks.base.BaseHook",
  "airflow.models.BaseOperator",
  "airflow.models.DAG",
  "airflow.providers.apache.beam.example_dags.example_beam.GCP_PROJECT_ID",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_INPUT",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DATAFLOW_RUNNER",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DATAFLOW_RUNNER_BUCKET_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DATAFLOW_RUNNER_OBJECT_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DATAFLOW_RUNNER_PARTS",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DIRECT_RUNNER",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DIRECT_RUNNER_BUCKET_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DIRECT_RUNNER_OBJECT_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_DIRECT_RUNNER_PARTS",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_FLINK_RUNNER",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_FLINK_RUNNER_BUCKET_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_FLINK_RUNNER_OBJECT_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_FLINK_RUNNER_PARTS",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_SPARK_RUNNER",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_SPARK_RUNNER_BUCKET_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_SPARK_RUNNER_OBJECT_NAME",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_JAR_SPARK_RUNNER_PARTS",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_OUTPUT",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_PYTHON",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_PYTHON_DATAFLOW_ASYNC",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_STAGING",
  "airflow.providers.apache.beam.example_dags.example_beam.GCS_TMP",
  "airflow.providers.apache.beam.example_dags.example_beam.default_args",
  "airflow.providers.apache.beam.example_dags.example_beam.jar_to_local_dataflow_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.jar_to_local_direct_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.jar_to_local_flink_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.jar_to_local_spark_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_java_pipeline_dataflow",
  "airflow.providers.apache.beam.example_dags.example_beam.start_java_pipeline_direct_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_java_pipeline_flink_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_java_pipeline_spark_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_python_job_dataflow_runner_async",
  "airflow.providers.apache.beam.example_dags.example_beam.start_python_pipeline_direct_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_python_pipeline_local_direct_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_python_pipeline_local_flink_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.start_python_pipeline_local_spark_runner",
  "airflow.providers.apache.beam.example_dags.example_beam.wait_for_python_job_dataflow_runner_async_done",
  "airflow.providers.apache.beam.hooks.beam.BeamCommandRunner",
  "airflow.providers.apache.beam.hooks.beam.BeamHook",
  "airflow.providers.apache.beam.hooks.beam.BeamRunnerType.DataflowRunner.lower",
  "airflow.providers.apache.beam.hooks.beam.beam_options_to_args",
  "airflow.providers.apache.beam.operators.beam.BeamDataflowMixin",
  "airflow.providers.apache.beam.operators.beam.BeamRunJavaPipelineOperator",
  "airflow.providers.apache.beam.operators.beam.BeamRunPythonPipelineOperator",
  "airflow.providers.google.cloud.hooks.dataflow.DataflowHook",
  "airflow.providers.google.cloud.hooks.dataflow.DataflowHook.build_dataflow_job_name",
  "airflow.providers.google.cloud.hooks.dataflow.DataflowJobStatus.JOB_STATE_DONE",
  "airflow.providers.google.cloud.hooks.dataflow.process_line_and_extract_dataflow_job_id_callback",
  "airflow.providers.google.cloud.hooks.gcs.GCSHook",
  "airflow.providers.google.cloud.operators.dataflow.CheckJobRunning.IgnoreJob",
  "airflow.providers.google.cloud.operators.dataflow.CheckJobRunning.WaitForRun",
  "airflow.providers.google.cloud.operators.dataflow.DataflowConfiguration",
  "airflow.providers.google.cloud.sensors.dataflow.DataflowJobStatusSensor",
  "airflow.providers.google.cloud.transfers.gcs_to_local.GCSToLocalFilesystemOperator",
  "airflow.utils.dates.days_ago",
  "airflow.utils.decorators.apply_defaults",
  "airflow.utils.helpers.convert_camel_to_snake",
  "airflow.utils.log.logging_mixin.LoggingMixin",
  "airflow.utils.python_virtualenv.prepare_virtualenv",
  "airflow.version.version.replace",
  "contextlib.ExitStack",
  "copy.deepcopy",
  "func_log",
  "json.dumps",
  "os.environ.get",
  "select.select",
  "shlex.quote",
  "subprocess.PIPE",
  "subprocess.Popen",
  "tempfile.TemporaryDirectory",
  "textwrap.dedent",
  "typing.Callable",
  "typing.List",
  "typing.Optional",
  "typing.Tuple",
  "typing.Union",
  "urllib.parse.urlparse"
 ],
 "deps": {
  "abc": [],
  "airflow": [],
  "contextlib": [],
  "copy": [],
  "func_log": [],
  "json": [],
  "os": [],
  "select": [],
  "shlex": [],
  "subprocess": [],
  "tempfile": [],
  "textwrap": [],
  "typing": [],
  "urllib": []
 }
}