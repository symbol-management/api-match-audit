{
 "bad": [
  "ArrayType",
  "DoubleType",
  "IntegerType",
  "LogisticRidgeRegression",
  "RidgeReduction",
  "RidgeRegression",
  "StringType",
  "StructField",
  "StructType",
  "apply_logistic_model",
  "apply_model",
  "apply_model_df",
  "approx_firth.correct_approx_firth",
  "approx_firth.perform_null_firth_fit",
  "assemble_block",
  "constrained_logistic_fit",
  "create_alpha_dict",
  "cross_alphas_and_labels",
  "cross_validation",
  "evaluate_coefficients",
  "flatten_prediction_df",
  "functions._OffsetType.LOCO_OFFSET",
  "functions._OffsetType.NO_OFFSET",
  "functions._VALUES_COLUMN_NAME.array",
  "functions.__all__",
  "functions._add_intercept",
  "functions._check_spark_version",
  "functions._einsum",
  "functions._loco_dispatch",
  "functions._output_schema",
  "functions._prepare_genotype_df",
  "functions._regression_sql_type",
  "functions._residualize_in_place",
  "functions._validate_covariates_and_phenotypes",
  "functions._validate_offset",
  "generate_alphas",
  "get_irls_pieces",
  "gic",
  "glow.__init__.__all__",
  "glow.__init__.extend_all",
  "glow.__init__.functions",
  "glow.__init__.glow",
  "hail",
  "hail.MatrixTable",
  "hail.dtype",
  "hail.expr.expressions.typed_expressions.StructExpression",
  "hail.expr.types.tarray",
  "hail.expr.types.tbool",
  "hail.expr.types.tcall",
  "hail.expr.types.tfloat64",
  "hail.expr.types.tint",
  "hail.expr.types.tlocus",
  "hail.expr.types.tset",
  "hail.expr.types.tstr",
  "hail.expr.types.tstruct",
  "hail.init",
  "infer_chromosomes",
  "irls_fit",
  "irls_one_step",
  "itertools",
  "itertools.product",
  "log_loss",
  "logger_fn",
  "logistic_ridge_regression.LogisticRidgeRegression.from_ridge_reduction",
  "logistic_ridge_regression.__all__",
  "make_sample_blocks_fn",
  "map_irls_eqn",
  "map_normal_eqn",
  "new_headers",
  "numpy.double",
  "numpy.float32",
  "numpy.float64",
  "numpy.log",
  "numpy.nan",
  "numpy.power",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.stack",
  "object.dtype.type",
  "object.ravel",
  "object.shape",
  "pandas_udf",
  "parse_header_block_sample_block_label",
  "parse_header_block_sample_block_label_alpha_name",
  "pyspark.SparkContext._active_spark_context",
  "pyspark.SparkContext._jvm.io.projectglow.Glow.transform",
  "pyspark.SparkContext._jvm.io.projectglow.common.logging.PythonHlsEventRecorder.recordHlsEvent",
  "pyspark.SparkContext._jvm.io.projectglow.transformers.blockvariantsandsamples.VariantSampleBlockMaker.makeSampleBlocks",
  "pyspark.sql.functions.PandasUDFType.GROUPED_MAP",
  "pyspark.sql.functions.col",
  "pyspark.sql.functions.collect_list",
  "pyspark.sql.functions.desc",
  "pyspark.sql.functions.lit",
  "pyspark.sql.functions.mean",
  "pyspark.sql.functions.row_number",
  "r_squared",
  "reduce_irls_eqn",
  "reduce_normal_eqn",
  "ridge_reduction.__all__",
  "ridge_regression.RidgeRegression.from_ridge_reduction",
  "ridge_regression.__all__",
  "scipy.special.expit",
  "scipy.stats.chi2.sf",
  "scipy.stats.distributions.t.sf",
  "score_models",
  "sigmoid",
  "slice_label_rows",
  "solve_irls_eqn",
  "solve_normal_eqn",
  "sort_in_place",
  "statsmodels.api.families.Binomial",
  "transform_fn",
  "transpose_one",
  "wgr_functions.__all__"
 ],
 "deps": {
  "ArrayType": [],
  "DoubleType": [],
  "IntegerType": [],
  "LogisticRidgeRegression": [],
  "RidgeReduction": [],
  "RidgeRegression": [],
  "StringType": [],
  "StructField": [],
  "StructType": [],
  "apply_logistic_model": [],
  "apply_model": [],
  "apply_model_df": [],
  "approx_firth": [],
  "assemble_block": [],
  "constrained_logistic_fit": [],
  "create_alpha_dict": [],
  "cross_alphas_and_labels": [],
  "cross_validation": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.8-pyh787bdff_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "evaluate_coefficients": [],
  "flatten_prediction_df": [],
  "functions": [],
  "generate_alphas": [],
  "get_irls_pieces": [],
  "gic": [],
  "glow": [],
  "hail": [],
  "infer_chromosomes": [],
  "irls_fit": [],
  "irls_one_step": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "log_loss": [],
  "logger_fn": [],
  "logistic_ridge_regression": [],
  "make_sample_blocks_fn": [],
  "map_irls_eqn": [],
  "map_normal_eqn": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "new_headers": [],
  "nptyping": [
   "nptyping/conda-forge/noarch/nptyping-1.4.1-pyhd8ed1ab_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object": [],
  "opt_einsum": [
   "opt-einsum/conda-forge/noarch/opt-einsum-3.0.0-py_0",
   "opt_einsum/conda-forge/noarch/opt_einsum-3.3.0-pyhd8ed1ab_1"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pandas_udf": [],
  "parse_header_block_sample_block_label": [],
  "parse_header_block_sample_block_label_alpha_name": [],
  "py4j": [
   "py4j/conda-forge/noarch/py4j-0.10.7-py_1"
  ],
  "pyspark": [
   "pyspark/conda-forge/noarch/pyspark-3.0.1-pyh9f0ad1d_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "r_squared": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "reduce_irls_eqn": [],
  "reduce_normal_eqn": [],
  "ridge_reduction": [],
  "ridge_regression": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "score_models": [],
  "sigmoid": [],
  "sklearn": [
   "scikit-learn/conda-forge/linux-64/scikit-learn-0.23.1-py37h8a51577_0"
  ],
  "slice_label_rows": [],
  "solve_irls_eqn": [],
  "solve_normal_eqn": [],
  "sort_in_place": [],
  "statsmodels": [
   "statsmodels/conda-forge/linux-64/statsmodels-0.12.1-py37ha21ca33_1"
  ],
  "transform_fn": [],
  "transpose_one": [],
  "typeguard": [
   "typeguard/conda-forge/noarch/typeguard-2.5.1-py_0"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wgr_functions": []
 }
}