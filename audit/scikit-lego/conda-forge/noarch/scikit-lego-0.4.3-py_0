{
 "bad": [
  "accuracy_x1_0",
  "accuracy_x1_1",
  "autograd.numpy.abs",
  "autograd.numpy.delete",
  "autograd.numpy.dot",
  "autograd.numpy.mean",
  "autograd.numpy.newaxis",
  "autograd.numpy.ones",
  "autograd.numpy.random.normal",
  "autograd.numpy.where",
  "autograd.numpy.zeros",
  "average_func",
  "collections.abc.Iterable",
  "cvxpy",
  "cvxpy.Maximize",
  "cvxpy.Minimize",
  "cvxpy.Problem",
  "cvxpy.SolverError",
  "cvxpy.Variable",
  "cvxpy.abs",
  "cvxpy.hstack",
  "cvxpy.log_sum_exp",
  "cvxpy.multiply",
  "cvxpy.norm",
  "cvxpy.reshape",
  "cvxpy.sum",
  "cvxpy.sum_squares",
  "deadzone",
  "density",
  "expect_type_error",
  "expect_value_error",
  "func",
  "func.__name__",
  "get_split_info",
  "handler",
  "hasher",
  "hashlib.sha256",
  "itertools",
  "itertools.combinations",
  "itertools.product",
  "log_callback",
  "log_callback.setter",
  "multiclass_meta",
  "numpy.NaN",
  "numpy.datetime64",
  "numpy.float32",
  "numpy.float64",
  "numpy.inf",
  "numpy.inf.sum",
  "numpy.isinf",
  "numpy.log",
  "numpy.maximum",
  "numpy.minimum",
  "numpy.nan",
  "numpy.nanquantile",
  "numpy.quantile",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.timedelta64",
  "os.path.join",
  "pandas.DataFrame.from_dict",
  "patsy.PatsyError",
  "patsy.build_design_matrices",
  "patsy.dmatrix",
  "pytest.mark.parametrize",
  "scipy.special._ufuncs.expit",
  "score",
  "scorer",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.MetaEstimatorMixin",
  "sklearn.base.OutlierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.clone",
  "sklearn.cluster.DBSCAN",
  "sklearn.cluster.KMeans",
  "sklearn.cluster.MiniBatchKMeans",
  "sklearn.compose.ColumnTransformer",
  "sklearn.datasets.load_boston",
  "sklearn.datasets.make_classification",
  "sklearn.datasets.make_regression",
  "sklearn.dummy.DummyClassifier",
  "sklearn.dummy.DummyRegressor",
  "sklearn.ensemble.IsolationForest",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.exceptions.NotFittedError",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.base.LinearClassifierMixin",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.confusion_matrix",
  "sklearn.mixture.BayesianGaussianMixture",
  "sklearn.mixture.GaussianMixture",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass.OneVsOneClassifier",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.neighbors.KernelDensity",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.pipeline._name_estimators",
  "sklearn.pipeline.make_pipeline",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.normalize",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.estimator_checks",
  "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
  "sklearn.utils.estimator_checks.check_classifiers_classes",
  "sklearn.utils.estimator_checks.check_classifiers_one_label",
  "sklearn.utils.estimator_checks.check_classifiers_train",
  "sklearn.utils.estimator_checks.check_complex_data",
  "sklearn.utils.estimator_checks.check_decision_proba_consistency",
  "sklearn.utils.estimator_checks.check_dict_unchanged",
  "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
  "sklearn.utils.estimator_checks.check_dtype_object",
  "sklearn.utils.estimator_checks.check_estimator_sparse_data",
  "sklearn.utils.estimator_checks.check_estimators_dtypes",
  "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
  "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
  "sklearn.utils.estimator_checks.check_estimators_nan_inf",
  "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
  "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
  "sklearn.utils.estimator_checks.check_estimators_pickle",
  "sklearn.utils.estimator_checks.check_estimators_unfitted",
  "sklearn.utils.estimator_checks.check_fit1d",
  "sklearn.utils.estimator_checks.check_fit2d_1feature",
  "sklearn.utils.estimator_checks.check_fit2d_1sample",
  "sklearn.utils.estimator_checks.check_fit2d_predict1d",
  "sklearn.utils.estimator_checks.check_fit_score_takes_y",
  "sklearn.utils.estimator_checks.check_get_params_invariance",
  "sklearn.utils.estimator_checks.check_methods_subset_invariance",
  "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
  "sklearn.utils.estimator_checks.check_outliers_fit_predict",
  "sklearn.utils.estimator_checks.check_outliers_train",
  "sklearn.utils.estimator_checks.check_pipeline_consistency",
  "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
  "sklearn.utils.estimator_checks.check_regressors_int",
  "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
  "sklearn.utils.estimator_checks.check_regressors_train",
  "sklearn.utils.estimator_checks.check_sample_weights_invariance",
  "sklearn.utils.estimator_checks.check_sample_weights_list",
  "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
  "sklearn.utils.estimator_checks.check_set_params",
  "sklearn.utils.estimator_checks.check_supervised_y_2d",
  "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
  "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
  "sklearn.utils.estimator_checks.check_transformer_general",
  "sklearn.utils.estimator_checks.check_transformers_unfitted",
  "sklearn.utils.multiclass.unique_labels",
  "sklearn.utils.testing.ignore_warnings",
  "sklearn.utils.validation.FLOAT_DTYPES",
  "sklearn.utils.validation.check_X_y",
  "sklearn.utils.validation.check_array",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.check_memory",
  "sklearn.utils.validation.check_random_state",
  "sklearn.utils.validation.column_or_1d",
  "sklego.dummy.RandomRegressor.__name__",
  "sklego.linear_model.DeadZoneRegressor.__name__",
  "sklego.linear_model.DemographicParityClassifier.__name__",
  "sklego.linear_model.EqualOpportunityClassifier.__name__",
  "sklego.linear_model.ProbWeightRegression.__name__",
  "sklego.meta.ConfusionBalancer.__name__",
  "sklego.meta.DecayEstimator.__name__",
  "sklego.meta.EstimatorTransformer.__name__",
  "sklego.meta.GroupedEstimator.__name__",
  "sklego.meta.OutlierRemover.__name__",
  "sklego.meta.SubjectiveClassifier.__name__",
  "sklego.meta.SubjectiveClassifier._to_discrete",
  "sklego.meta.SubjectiveClassifier._weighted_proba",
  "sklego.meta.Thresholder.__name__",
  "sklego.mixture.BayesianGMMClassifier.__name__",
  "sklego.mixture.BayesianGMMOutlierDetector.__name__",
  "sklego.mixture.GMMClassifier.__name__",
  "sklego.mixture.GMMOutlierDetector.__name__",
  "sklego.naive_bayes.BayesianGaussianMixtureNB.__name__",
  "sklego.naive_bayes.GaussianMixtureNB.__name__",
  "sklego.neighbors.BayesianKernelDensityClassifier.__name__",
  "sklego.preprocessing.ColumnCapper.__name__",
  "sklego.preprocessing.IdentityTransformer.__name__",
  "sklego.preprocessing.InformationFilter.__name__",
  "sklego.preprocessing.IntervalEncoder.__name__",
  "sklego.preprocessing.OrthogonalTransformer.__name__",
  "sklego.preprocessing.OutlierRemover.__name__",
  "sklego.preprocessing.RandomAdder.__name__",
  "subset_picker",
  "sys",
  "sys.modules.__name__",
  "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
  "tests.conftest.estimator_checks.check_classifiers_classes",
  "tests.conftest.estimator_checks.check_classifiers_one_label",
  "tests.conftest.estimator_checks.check_classifiers_train",
  "tests.conftest.estimator_checks.check_decision_proba_consistency",
  "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
  "tests.conftest.estimator_checks.check_estimators_unfitted",
  "tests.conftest.estimator_checks.check_supervised_y_2d",
  "tests.conftest.estimator_checks.check_supervised_y_no_nan",
  "time",
  "time.time",
  "training_gradient_fun",
  "training_loss"
 ],
 "deps": {
  "accuracy_x1_0": [],
  "accuracy_x1_1": [],
  "autograd": [
   "autograd/conda-forge/noarch/autograd-1.2-py_1"
  ],
  "average_func": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cvxpy": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "deadzone": [],
  "density": [],
  "deprecated": [
   "deprecated/conda-forge/noarch/deprecated-1.2.6-py_0"
  ],
  "expect_type_error": [],
  "expect_value_error": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_split_info": [],
  "handler": [],
  "hasher": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "log_callback": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "multiclass_meta": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "patsy": [],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "score": [],
  "scorer": [],
  "sklearn": [],
  "sklego": [],
  "subset_picker": [],
  "sys": [],
  "tests": [],
  "time": [],
  "training_gradient_fun": [],
  "training_loss": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}