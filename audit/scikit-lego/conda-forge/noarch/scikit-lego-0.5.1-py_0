{
 "bad": [
  "accuracy_x1_0",
  "accuracy_x1_1",
  "autograd.grad",
  "autograd.numpy.abs",
  "autograd.numpy.array",
  "autograd.numpy.average",
  "autograd.numpy.c_",
  "autograd.numpy.delete",
  "autograd.numpy.dot",
  "autograd.numpy.exp",
  "autograd.numpy.linalg.norm",
  "autograd.numpy.mean",
  "autograd.numpy.newaxis",
  "autograd.numpy.ones",
  "autograd.numpy.quantile",
  "autograd.numpy.random.normal",
  "autograd.numpy.where",
  "autograd.numpy.zeros",
  "autograd.test_util.check_grads",
  "average_func",
  "collections.abc.Iterable",
  "copy.copy",
  "cvxpy.Maximize",
  "cvxpy.Minimize",
  "cvxpy.Problem",
  "cvxpy.SolverError",
  "cvxpy.Variable",
  "cvxpy.abs",
  "cvxpy.hstack",
  "cvxpy.log_sum_exp",
  "cvxpy.multiply",
  "cvxpy.norm",
  "cvxpy.reshape",
  "cvxpy.sum",
  "cvxpy.sum_squares",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "deadzone",
  "density",
  "deprecated.deprecated",
  "deprecated.sphinx.deprecated",
  "expect_type_error",
  "expect_value_error",
  "func",
  "func.__name__",
  "functools.partial",
  "functools.wraps",
  "get_split_info",
  "handler",
  "hasher",
  "hashlib.sha256",
  "inspect.signature",
  "itertools.combinations",
  "itertools.product",
  "log_callback",
  "log_callback.setter",
  "logging.INFO",
  "logging.getLogger",
  "multiclass_meta",
  "numpy.NaN",
  "numpy.abs",
  "numpy.all",
  "numpy.any",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argwhere",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_2d",
  "numpy.average",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.corrcoef",
  "numpy.cos",
  "numpy.cumprod",
  "numpy.datetime64",
  "numpy.delete",
  "numpy.dot",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.inf",
  "numpy.inf.sum",
  "numpy.int",
  "numpy.int32",
  "numpy.int64",
  "numpy.interp",
  "numpy.isclose",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.linalg.inv",
  "numpy.linalg.lstsq",
  "numpy.linalg.norm",
  "numpy.linalg.qr",
  "numpy.linspace",
  "numpy.log",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.memmap",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan",
  "numpy.nanquantile",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.pi",
  "numpy.putmask",
  "numpy.quantile",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.repeat",
  "numpy.sin",
  "numpy.std",
  "numpy.sum",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_approx_equal",
  "numpy.testing.assert_array_equal",
  "numpy.timedelta64",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.where",
  "numpy.zeros",
  "os.path.join",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Series",
  "pandas.concat",
  "pandas.core.frame.DataFrame",
  "pandas.cut",
  "pandas.date_range",
  "pandas.isnull",
  "pandas.read_csv",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_datetime",
  "pandas.util.hash_pandas_object",
  "patsy.PatsyError",
  "patsy.build_design_matrices",
  "patsy.dmatrix",
  "pkg_resources.resource_filename",
  "pytest.approx",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.raises",
  "scipy.ndimage.interpolation.shift",
  "scipy.optimize.minimize_scalar",
  "scipy.special._ufuncs.expit",
  "scipy.stats.gaussian_kde",
  "score",
  "scorer",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.MetaEstimatorMixin",
  "sklearn.base.OutlierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.clone",
  "sklearn.cluster.DBSCAN",
  "sklearn.cluster.KMeans",
  "sklearn.cluster.MiniBatchKMeans",
  "sklearn.compose.ColumnTransformer",
  "sklearn.datasets.fetch_openml",
  "sklearn.datasets.load_boston",
  "sklearn.datasets.make_classification",
  "sklearn.datasets.make_regression",
  "sklearn.decomposition.PCA",
  "sklearn.dummy.DummyClassifier",
  "sklearn.dummy.DummyRegressor",
  "sklearn.ensemble.IsolationForest",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.exceptions.NotFittedError",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.base.LinearClassifierMixin",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.confusion_matrix",
  "sklearn.mixture.BayesianGaussianMixture",
  "sklearn.mixture.GaussianMixture",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass.OneVsOneClassifier",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.neighbors.KernelDensity",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.pipeline._name_estimators",
  "sklearn.pipeline.make_pipeline",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.normalize",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
  "sklearn.utils.estimator_checks.check_classifiers_classes",
  "sklearn.utils.estimator_checks.check_classifiers_one_label",
  "sklearn.utils.estimator_checks.check_classifiers_train",
  "sklearn.utils.estimator_checks.check_complex_data",
  "sklearn.utils.estimator_checks.check_decision_proba_consistency",
  "sklearn.utils.estimator_checks.check_dict_unchanged",
  "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
  "sklearn.utils.estimator_checks.check_dtype_object",
  "sklearn.utils.estimator_checks.check_estimator_sparse_data",
  "sklearn.utils.estimator_checks.check_estimators_dtypes",
  "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
  "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
  "sklearn.utils.estimator_checks.check_estimators_nan_inf",
  "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
  "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
  "sklearn.utils.estimator_checks.check_estimators_pickle",
  "sklearn.utils.estimator_checks.check_estimators_unfitted",
  "sklearn.utils.estimator_checks.check_fit1d",
  "sklearn.utils.estimator_checks.check_fit2d_1feature",
  "sklearn.utils.estimator_checks.check_fit2d_1sample",
  "sklearn.utils.estimator_checks.check_fit2d_predict1d",
  "sklearn.utils.estimator_checks.check_fit_score_takes_y",
  "sklearn.utils.estimator_checks.check_get_params_invariance",
  "sklearn.utils.estimator_checks.check_methods_subset_invariance",
  "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
  "sklearn.utils.estimator_checks.check_outliers_fit_predict",
  "sklearn.utils.estimator_checks.check_outliers_train",
  "sklearn.utils.estimator_checks.check_pipeline_consistency",
  "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
  "sklearn.utils.estimator_checks.check_regressors_int",
  "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
  "sklearn.utils.estimator_checks.check_regressors_train",
  "sklearn.utils.estimator_checks.check_sample_weights_invariance",
  "sklearn.utils.estimator_checks.check_sample_weights_list",
  "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
  "sklearn.utils.estimator_checks.check_set_params",
  "sklearn.utils.estimator_checks.check_supervised_y_2d",
  "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
  "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
  "sklearn.utils.estimator_checks.check_transformer_general",
  "sklearn.utils.estimator_checks.check_transformers_unfitted",
  "sklearn.utils.multiclass.unique_labels",
  "sklearn.utils.testing.ignore_warnings",
  "sklearn.utils.validation.FLOAT_DTYPES",
  "sklearn.utils.validation.check_X_y",
  "sklearn.utils.validation.check_array",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.check_random_state",
  "sklearn.utils.validation.column_or_1d",
  "sklego.base.Clusterer",
  "sklego.base.ClustererMeta",
  "sklego.base.OutlierModel",
  "sklego.base.OutlierModelMeta",
  "sklego.base.ProbabilisticClassifier",
  "sklego.base.ProbabilisticClassifierMeta",
  "sklego.common.TrainOnlyTransformerMixin",
  "sklego.common.TrainOnlyTransformerMixin._hash",
  "sklego.common.as_list",
  "sklego.common.expanding_list",
  "sklego.common.flatten",
  "sklego.datasets.load_abalone",
  "sklego.datasets.load_chicken",
  "sklego.datasets.load_hearts",
  "sklego.datasets.load_penguins",
  "sklego.datasets.make_simpleseries",
  "sklego.decomposition.PCAOutlierDetection",
  "sklego.decomposition.PCAOutlierDetection.__name__",
  "sklego.decomposition.UMAPOutlierDetection",
  "sklego.decomposition.UMAPOutlierDetection.__name__",
  "sklego.dummy.RandomRegressor",
  "sklego.dummy.RandomRegressor.__name__",
  "sklego.linear_model.DeadZoneRegressor",
  "sklego.linear_model.DeadZoneRegressor.__name__",
  "sklego.linear_model.DemographicParityClassifier",
  "sklego.linear_model.DemographicParityClassifier.__name__",
  "sklego.linear_model.EqualOpportunityClassifier",
  "sklego.linear_model.EqualOpportunityClassifier.__name__",
  "sklego.linear_model.FairClassifier",
  "sklego.linear_model.LowessRegression",
  "sklego.linear_model.LowessRegression.__name__",
  "sklego.linear_model.ProbWeightRegression",
  "sklego.linear_model.ProbWeightRegression.__name__",
  "sklego.linear_model._DemographicParityClassifer",
  "sklego.linear_model._EqualOpportunityClassifier",
  "sklego.linear_model._FairClassifier",
  "sklego.meta.ConfusionBalancer",
  "sklego.meta.ConfusionBalancer.__name__",
  "sklego.meta.DecayEstimator",
  "sklego.meta.DecayEstimator.__name__",
  "sklego.meta.EstimatorTransformer",
  "sklego.meta.EstimatorTransformer.__name__",
  "sklego.meta.GroupedEstimator",
  "sklego.meta.GroupedEstimator.__name__",
  "sklego.meta.OutlierClassifier",
  "sklego.meta.OutlierRemover",
  "sklego.meta.OutlierRemover.__name__",
  "sklego.meta.SubjectiveClassifier",
  "sklego.meta.SubjectiveClassifier.__name__",
  "sklego.meta.SubjectiveClassifier._to_discrete",
  "sklego.meta.SubjectiveClassifier._weighted_proba",
  "sklego.meta.Thresholder",
  "sklego.meta.Thresholder.__name__",
  "sklego.meta.grouped_estimator.constant_shrinkage",
  "sklego.meta.grouped_estimator.min_n_obs_shrinkage",
  "sklego.meta.grouped_estimator.relative_shrinkage",
  "sklego.metrics.correlation_score",
  "sklego.metrics.equal_opportunity_score",
  "sklego.metrics.p_percent_score",
  "sklego.metrics.subset_score",
  "sklego.mixture.BayesianGMMClassifier",
  "sklego.mixture.BayesianGMMClassifier.__name__",
  "sklego.mixture.BayesianGMMOutlierDetector",
  "sklego.mixture.BayesianGMMOutlierDetector.__name__",
  "sklego.mixture.GMMClassifier",
  "sklego.mixture.GMMClassifier.__name__",
  "sklego.mixture.GMMOutlierDetector",
  "sklego.mixture.GMMOutlierDetector.__name__",
  "sklego.model_selection.KlusterFoldValidation",
  "sklego.model_selection.TimeGapSplit",
  "sklego.naive_bayes.BayesianGaussianMixtureNB",
  "sklego.naive_bayes.BayesianGaussianMixtureNB.__name__",
  "sklego.naive_bayes.GaussianMixtureNB",
  "sklego.naive_bayes.GaussianMixtureNB.__name__",
  "sklego.neighbors.BayesianKernelDensityClassifier",
  "sklego.neighbors.BayesianKernelDensityClassifier.__name__",
  "sklego.pipeline.DebugPipeline",
  "sklego.pipeline._log_wrapper",
  "sklego.pipeline.default_log_callback",
  "sklego.preprocessing.ColumnCapper",
  "sklego.preprocessing.ColumnCapper.__name__",
  "sklego.preprocessing.ColumnDropper",
  "sklego.preprocessing.ColumnSelector",
  "sklego.preprocessing.DictMapper",
  "sklego.preprocessing.DictMapper.__name__",
  "sklego.preprocessing.IdentityTransformer",
  "sklego.preprocessing.IdentityTransformer.__name__",
  "sklego.preprocessing.InformationFilter",
  "sklego.preprocessing.InformationFilter.__name__",
  "sklego.preprocessing.IntervalEncoder",
  "sklego.preprocessing.IntervalEncoder.__name__",
  "sklego.preprocessing.OrthogonalTransformer",
  "sklego.preprocessing.OrthogonalTransformer.__name__",
  "sklego.preprocessing.OutlierRemover",
  "sklego.preprocessing.OutlierRemover.__name__",
  "sklego.preprocessing.PandasTypeSelector",
  "sklego.preprocessing.PatsyTransformer",
  "sklego.preprocessing.RandomAdder",
  "sklego.preprocessing.RandomAdder.__name__",
  "sklego.preprocessing.RepeatingBasisFunction",
  "sklego.preprocessing.intervalencoder._mk_average",
  "sklego.preprocessing.intervalencoder._mk_monotonic_average",
  "sklego.preprocessing.projections.scalar_projection",
  "sklego.preprocessing.projections.vector_projection",
  "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction",
  "sklego.testing.check_shape_remains_same_classifier",
  "sklego.testing.check_shape_remains_same_regressor",
  "sklego.this.poem",
  "subset_picker",
  "sys.modules.__name__",
  "tests.conftest.classifier_checks",
  "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
  "tests.conftest.estimator_checks.check_classifiers_classes",
  "tests.conftest.estimator_checks.check_classifiers_one_label",
  "tests.conftest.estimator_checks.check_classifiers_train",
  "tests.conftest.estimator_checks.check_decision_proba_consistency",
  "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
  "tests.conftest.estimator_checks.check_estimators_unfitted",
  "tests.conftest.estimator_checks.check_supervised_y_2d",
  "tests.conftest.estimator_checks.check_supervised_y_no_nan",
  "tests.conftest.general_checks",
  "tests.conftest.id_func",
  "tests.conftest.k_vals",
  "tests.conftest.n_vals",
  "tests.conftest.nonmeta_checks",
  "tests.conftest.np_types",
  "tests.conftest.regressor_checks",
  "tests.conftest.transformer_checks",
  "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer",
  "tests.test_estimators.test_deadzone.dataset",
  "tests.test_estimators.test_deadzone.mod",
  "tests.test_estimators.test_demographic_parity._test_same",
  "tests.test_estimators.test_equal_opportunity._test_same",
  "tests.test_estimators.test_mixture_detector.dataset",
  "tests.test_estimators.test_neighbor_classifier.simple_dataset",
  "tests.test_estimators.test_pca_reconstruction.dataset",
  "tests.test_estimators.test_umap_reconstruction.dataset",
  "tests.test_meta.test_grouped_model.shrinkage_data",
  "tests.test_meta.test_outlier_classifier.dataset",
  "tests.test_metrics.test_subset_metric.DisabledCV",
  "tests.test_metrics.test_subset_metric.slicing_classification_dataset",
  "tests.test_model_selection.test_klusterfold.DummyCluster",
  "tests.test_model_selection.test_klusterfold.k_means_pipeline",
  "tests.test_model_selection.test_timegapsplit.X_train",
  "tests.test_model_selection.test_timegapsplit.df",
  "tests.test_model_selection.test_timegapsplit.train",
  "tests.test_model_selection.test_timegapsplit.y_train",
  "tests.test_preprocessing.test_columncapper.valid_df",
  "tests.test_preprocessing.test_columndropper.df",
  "tests.test_preprocessing.test_columnselector.df",
  "tests.test_preprocessing.test_dictmapper.mapper",
  "tests.test_preprocessing.test_interval_encoder.generate_dataset",
  "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal",
  "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthonormal",
  "tests.test_preprocessing.test_orthogonal_transformer.sample_df",
  "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix",
  "tests.test_preprocessing.test_patsy_transformer.df",
  "tests.test_preprocessing.test_repeatingbasisfunction.df",
  "time.time",
  "training_gradient_fun",
  "training_loss",
  "types.SimpleNamespace",
  "typing.Callable",
  "umap.UMAP",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn"
 ],
 "deps": {
  "accuracy_x1_0": [],
  "accuracy_x1_1": [],
  "autograd": [],
  "average_func": [],
  "collections": [],
  "copy": [],
  "cvxpy": [],
  "datetime": [],
  "deadzone": [],
  "density": [],
  "deprecated": [],
  "expect_type_error": [],
  "expect_value_error": [],
  "func": [],
  "functools": [],
  "get_split_info": [],
  "handler": [],
  "hasher": [],
  "hashlib": [],
  "inspect": [],
  "itertools": [],
  "log_callback": [],
  "logging": [],
  "multiclass_meta": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "patsy": [],
  "pkg_resources": [],
  "pytest": [],
  "scipy": [],
  "score": [],
  "scorer": [],
  "sklearn": [],
  "sklego": [],
  "subset_picker": [],
  "sys": [],
  "tests": [],
  "time": [],
  "training_gradient_fun": [],
  "training_loss": [],
  "types": [],
  "typing": [],
  "umap": [],
  "warnings": []
 }
}