{
 "bad": [
  "Parser",
  "_collect_conflicts_between",
  "_find_conflict",
  "_get_fields_and_fragments_names",
  "_get_named_type",
  "_get_referenced_fields_and_fragment_names",
  "_print_deprecated",
  "_print_fields",
  "_print_filtered_schema",
  "_print_input_value",
  "ancestors_append",
  "ancestors_pop",
  "append",
  "ast.Argument",
  "ast.BooleanValue",
  "ast.Directive",
  "ast.DirectiveDefinition",
  "ast.Document",
  "ast.EnumTypeDefinition",
  "ast.EnumValue",
  "ast.EnumValueDefinition",
  "ast.Field",
  "ast.FieldDefinition",
  "ast.FloatValue",
  "ast.FragmentDefinition",
  "ast.FragmentSpread",
  "ast.InlineFragment",
  "ast.InputObjectTypeDefinition",
  "ast.InputValueDefinition",
  "ast.IntValue",
  "ast.InterfaceTypeDefinition",
  "ast.ListType",
  "ast.ListValue",
  "ast.Name",
  "ast.NamedType",
  "ast.Node",
  "ast.NonNullType",
  "ast.ObjectField",
  "ast.ObjectTypeDefinition",
  "ast.ObjectValue",
  "ast.OperationDefinition",
  "ast.OperationTypeDefinition",
  "ast.ScalarTypeDefinition",
  "ast.SchemaDefinition",
  "ast.SelectionSet",
  "ast.StringValue",
  "ast.TypeExtensionDefinition",
  "ast.UnionTypeDefinition",
  "ast.Variable",
  "ast.VariableDefinition",
  "asyncio_utils.asyncgen_to_observable",
  "asyncio_utils.isasyncgen",
  "block",
  "build_default_value",
  "build_directive",
  "build_field_def_map",
  "build_field_map",
  "build_field_type",
  "build_implemented_interfaces",
  "build_input_value",
  "build_input_value_def_map",
  "build_input_values",
  "build_type",
  "collections.Hashable",
  "collections.Iterable",
  "collections.Mapping",
  "collections.Sequence",
  "complete_object_value",
  "complete_value_catching_error",
  "cyordereddict.OrderedDict",
  "directives.DirectiveLocation.ARGUMENT_DEFINITION",
  "directives.DirectiveLocation.ENUM",
  "directives.DirectiveLocation.ENUM_VALUE",
  "directives.DirectiveLocation.FIELD",
  "directives.DirectiveLocation.FIELD_DEFINITION",
  "directives.DirectiveLocation.FIELD_LOCATIONS",
  "directives.DirectiveLocation.FRAGMENT_DEFINITION",
  "directives.DirectiveLocation.FRAGMENT_LOCATIONS",
  "directives.DirectiveLocation.FRAGMENT_SPREAD",
  "directives.DirectiveLocation.INLINE_FRAGMENT",
  "directives.DirectiveLocation.INPUT_FIELD_DEFINITION",
  "directives.DirectiveLocation.INPUT_OBJECT",
  "directives.DirectiveLocation.INTERFACE",
  "directives.DirectiveLocation.MUTATION",
  "directives.DirectiveLocation.OBJECT",
  "directives.DirectiveLocation.OPERATION_LOCATIONS",
  "directives.DirectiveLocation.QUERY",
  "directives.DirectiveLocation.SCALAR",
  "directives.DirectiveLocation.SCHEMA",
  "directives.DirectiveLocation.SUBSCRIPTION",
  "directives.DirectiveLocation.UNION",
  "enter",
  "execute_field_callback",
  "extend_field_map",
  "extend_field_type",
  "extend_implemented_interfaces",
  "extend_interface_type",
  "extend_object_type",
  "extend_type",
  "extend_union_type",
  "fields",
  "fields.items",
  "fix_subscriber",
  "func",
  "get_complete_version",
  "get_deprecation_reason",
  "get_directive",
  "get_field_ast_value",
  "get_input_type",
  "get_interface_type",
  "get_named_type",
  "get_object_type",
  "get_output_type",
  "get_token_kind_desc",
  "get_type",
  "get_type_from_AST",
  "get_type_from_def",
  "gevent",
  "gevent.spawn",
  "graphql.__init__.VERSION",
  "graphql.__init__.get_version",
  "graphql.validation.rules.__init__.ArgumentsOfCorrectType",
  "graphql.validation.rules.__init__.DefaultValuesOfCorrectType",
  "graphql.validation.rules.__init__.FieldsOnCorrectType",
  "graphql.validation.rules.__init__.FragmentsOnCompositeTypes",
  "graphql.validation.rules.__init__.KnownArgumentNames",
  "graphql.validation.rules.__init__.KnownDirectives",
  "graphql.validation.rules.__init__.KnownFragmentNames",
  "graphql.validation.rules.__init__.KnownTypeNames",
  "graphql.validation.rules.__init__.LoneAnonymousOperation",
  "graphql.validation.rules.__init__.NoFragmentCycles",
  "graphql.validation.rules.__init__.NoUndefinedVariables",
  "graphql.validation.rules.__init__.NoUnusedFragments",
  "graphql.validation.rules.__init__.NoUnusedVariables",
  "graphql.validation.rules.__init__.OverlappingFieldsCanBeMerged",
  "graphql.validation.rules.__init__.PossibleFragmentSpreads",
  "graphql.validation.rules.__init__.ProvidedNonNullArguments",
  "graphql.validation.rules.__init__.ScalarLeafs",
  "graphql.validation.rules.__init__.UniqueArgumentNames",
  "graphql.validation.rules.__init__.UniqueFragmentNames",
  "graphql.validation.rules.__init__.UniqueInputFieldNames",
  "graphql.validation.rules.__init__.UniqueOperationNames",
  "graphql.validation.rules.__init__.UniqueVariableNames",
  "graphql.validation.rules.__init__.VariablesAreInputTypes",
  "graphql.validation.rules.__init__.VariablesInAllowedPosition",
  "handler",
  "is_spec_directive",
  "iterate_asyncgen",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.izip",
  "join",
  "language.ast.BooleanValue",
  "language.ast.Directive",
  "language.ast.DirectiveDefinition",
  "language.ast.Document",
  "language.ast.EnumTypeDefinition",
  "language.ast.EnumValue",
  "language.ast.EnumValueDefinition",
  "language.ast.Field",
  "language.ast.FieldDefinition",
  "language.ast.FloatValue",
  "language.ast.FragmentDefinition",
  "language.ast.FragmentSpread",
  "language.ast.InlineFragment",
  "language.ast.InputObjectTypeDefinition",
  "language.ast.InputValueDefinition",
  "language.ast.IntValue",
  "language.ast.InterfaceTypeDefinition",
  "language.ast.ListType",
  "language.ast.ListValue",
  "language.ast.Name",
  "language.ast.NamedType",
  "language.ast.NonNullType",
  "language.ast.ObjectField",
  "language.ast.ObjectTypeDefinition",
  "language.ast.ObjectValue",
  "language.ast.OperationDefinition",
  "language.ast.ScalarTypeDefinition",
  "language.ast.SchemaDefinition",
  "language.ast.StringValue",
  "language.ast.TypeExtensionDefinition",
  "language.ast.UnionTypeDefinition",
  "language.ast.Variable",
  "language.visitor_meta.VisitorMeta",
  "leave",
  "lexer.TokenKind.AT",
  "lexer.TokenKind.BANG",
  "lexer.TokenKind.BRACE_L",
  "lexer.TokenKind.BRACE_R",
  "lexer.TokenKind.BRACKET_L",
  "lexer.TokenKind.BRACKET_R",
  "lexer.TokenKind.COLON",
  "lexer.TokenKind.DOLLAR",
  "lexer.TokenKind.EOF",
  "lexer.TokenKind.EQUALS",
  "lexer.TokenKind.FLOAT",
  "lexer.TokenKind.INT",
  "lexer.TokenKind.NAME",
  "lexer.TokenKind.PAREN_L",
  "lexer.TokenKind.PAREN_R",
  "lexer.TokenKind.PIPE",
  "lexer.TokenKind.SPREAD",
  "lexer.TokenKind.STRING",
  "make_field_def_map",
  "make_implemented_interfaces",
  "make_input_values",
  "make_schema_def",
  "map_result",
  "method",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "object.fields",
  "os.path.abspath",
  "os.path.dirname",
  "parse_directives",
  "parse_fragment_name",
  "parse_named_type",
  "parse_value_literal",
  "path_append",
  "path_pop",
  "produce_type_def",
  "promise.Promise.all",
  "promise.Promise.rejected",
  "promise.Promise.resolve",
  "resolve_field",
  "resolve_or_error",
  "rule",
  "rx.AnonymousObserver",
  "rx.Observable.just",
  "rx.Observable.merge",
  "rx.concurrency.current_thread_scheduler",
  "rx.concurrency.current_thread_scheduler.schedule",
  "rx.concurrency.current_thread_scheduler.schedule_required",
  "rx.core.Disposable",
  "rx.core.Disposable.create",
  "rx.core.ObservableBase",
  "rx.core.ObserverBase",
  "rx.core.anonymousobserver.AnonymousObserver",
  "rx.core.autodetachobserver.AutoDetachObserver",
  "set_disposable",
  "sys",
  "sys.exc_info",
  "sys.excepthook",
  "sys.maxsize",
  "type.GraphQLDeprecatedDirective.args",
  "type.GraphQLDeprecatedDirective.name",
  "type.create_container",
  "type.description",
  "type.directives.DirectiveLocation.ARGUMENT_DEFINITION",
  "type.directives.DirectiveLocation.ENUM",
  "type.directives.DirectiveLocation.ENUM_VALUE",
  "type.directives.DirectiveLocation.FIELD",
  "type.directives.DirectiveLocation.FIELD_DEFINITION",
  "type.directives.DirectiveLocation.FIELD_LOCATIONS",
  "type.directives.DirectiveLocation.FRAGMENT_DEFINITION",
  "type.directives.DirectiveLocation.FRAGMENT_LOCATIONS",
  "type.directives.DirectiveLocation.FRAGMENT_SPREAD",
  "type.directives.DirectiveLocation.INLINE_FRAGMENT",
  "type.directives.DirectiveLocation.INPUT_FIELD_DEFINITION",
  "type.directives.DirectiveLocation.INPUT_OBJECT",
  "type.directives.DirectiveLocation.INTERFACE",
  "type.directives.DirectiveLocation.MUTATION",
  "type.directives.DirectiveLocation.OBJECT",
  "type.directives.DirectiveLocation.OPERATION_LOCATIONS",
  "type.directives.DirectiveLocation.QUERY",
  "type.directives.DirectiveLocation.SCALAR",
  "type.directives.DirectiveLocation.SCHEMA",
  "type.directives.DirectiveLocation.SUBSCRIPTION",
  "type.directives.DirectiveLocation.UNION",
  "type.directives.GraphQLIncludeDirective.args",
  "type.directives.GraphQLIncludeDirective.name",
  "type.directives.GraphQLSkipDirective.args",
  "type.directives.GraphQLSkipDirective.name",
  "type.fields",
  "type.fields.get",
  "type.fields.items",
  "type.get",
  "type.interfaces",
  "type.introspection.TypeKind.ENUM",
  "type.introspection.TypeKind.INPUT_OBJECT",
  "type.introspection.TypeKind.INTERFACE",
  "type.introspection.TypeKind.LIST",
  "type.introspection.TypeKind.NON_NULL",
  "type.introspection.TypeKind.OBJECT",
  "type.introspection.TypeKind.SCALAR",
  "type.introspection.TypeKind.UNION",
  "type.is_type_of",
  "type.name",
  "type.of_type",
  "type.parse_literal",
  "type.parse_value",
  "type.types",
  "type.values",
  "type_def_named",
  "wrap"
 ],
 "deps": {
  "Parser": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_collect_conflicts_between": [],
  "_find_conflict": [],
  "_get_fields_and_fragments_names": [],
  "_get_named_type": [],
  "_get_referenced_fields_and_fragment_names": [],
  "_print_deprecated": [],
  "_print_fields": [],
  "_print_filtered_schema": [],
  "_print_input_value": [],
  "ancestors_append": [],
  "ancestors_pop": [],
  "append": [],
  "ast": [],
  "asyncio": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "asyncio_utils": [],
  "block": [],
  "build_default_value": [],
  "build_directive": [],
  "build_field_def_map": [],
  "build_field_map": [],
  "build_field_type": [],
  "build_implemented_interfaces": [],
  "build_input_value": [],
  "build_input_value_def_map": [],
  "build_input_values": [],
  "build_type": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "complete_object_value": [],
  "complete_value_catching_error": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cyordereddict": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "directives": [],
  "enter": [],
  "execute_field_callback": [],
  "extend_field_map": [],
  "extend_field_type": [],
  "extend_implemented_interfaces": [],
  "extend_interface_type": [],
  "extend_object_type": [],
  "extend_type": [],
  "extend_union_type": [],
  "fields": [],
  "fix_subscriber": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_complete_version": [],
  "get_deprecation_reason": [],
  "get_directive": [],
  "get_field_ast_value": [],
  "get_input_type": [],
  "get_interface_type": [],
  "get_named_type": [],
  "get_object_type": [],
  "get_output_type": [],
  "get_token_kind_desc": [],
  "get_type": [],
  "get_type_from_AST": [],
  "get_type_from_def": [],
  "gevent": [],
  "graphql": [],
  "handler": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_spec_directive": [],
  "iterate_asyncgen": [],
  "itertools": [],
  "join": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "language": [],
  "leave": [],
  "lexer": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "make_field_def_map": [],
  "make_implemented_interfaces": [],
  "make_input_values": [],
  "make_schema_def": [],
  "map_result": [],
  "method": [],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "object": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "parse_directives": [],
  "parse_fragment_name": [],
  "parse_named_type": [],
  "parse_value_literal": [],
  "path_append": [],
  "path_pop": [],
  "produce_type_def": [],
  "promise": [
   "promise/conda-forge/noarch/promise-2.1-py_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "resolve_field": [],
  "resolve_or_error": [],
  "rule": [],
  "rx": [
   "rx/conda-forge/noarch/rx-3.1.0-py_0"
  ],
  "set_disposable": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "type": [],
  "type_def_named": [],
  "wrap": []
 }
}