{
 "bad": [
  "Exception.__hash__",
  "SortVisitor",
  "aclose",
  "add",
  "add_name",
  "ancestors_append",
  "ancestors_pop",
  "append",
  "append_awaitable",
  "append_awaitable_results",
  "append_awaitable_types",
  "append_fragment",
  "append_item",
  "append_node",
  "append_result",
  "append_set",
  "append_spread",
  "append_value",
  "ast.ArgumentNode",
  "ast.BooleanValueNode",
  "ast.DefinitionNode",
  "ast.DirectiveDefinitionNode",
  "ast.DirectiveNode",
  "ast.DocumentNode",
  "ast.EnumTypeDefinitionNode",
  "ast.EnumTypeExtensionNode",
  "ast.EnumValueDefinitionNode",
  "ast.EnumValueNode",
  "ast.ExecutableDefinitionNode",
  "ast.FieldDefinitionNode",
  "ast.FieldNode",
  "ast.FloatValueNode",
  "ast.FragmentDefinitionNode",
  "ast.FragmentSpreadNode",
  "ast.InlineFragmentNode",
  "ast.InputObjectTypeDefinitionNode",
  "ast.InputObjectTypeExtensionNode",
  "ast.InputValueDefinitionNode",
  "ast.IntValueNode",
  "ast.InterfaceTypeDefinitionNode",
  "ast.InterfaceTypeExtensionNode",
  "ast.ListTypeNode",
  "ast.ListValueNode",
  "ast.Location",
  "ast.NameNode",
  "ast.NamedTypeNode",
  "ast.Node",
  "ast.NonNullTypeNode",
  "ast.NullValueNode",
  "ast.ObjectFieldNode",
  "ast.ObjectTypeDefinitionNode",
  "ast.ObjectTypeExtensionNode",
  "ast.ObjectValueNode",
  "ast.OperationDefinitionNode",
  "ast.OperationType",
  "ast.OperationType.QUERY",
  "ast.OperationTypeDefinitionNode",
  "ast.ScalarTypeDefinitionNode",
  "ast.ScalarTypeExtensionNode",
  "ast.SchemaDefinitionNode",
  "ast.SchemaExtensionNode",
  "ast.SelectionNode",
  "ast.SelectionSetNode",
  "ast.StringValueNode",
  "ast.Token",
  "ast.TypeDefinitionNode",
  "ast.TypeExtensionNode",
  "ast.TypeNode",
  "ast.TypeSystemDefinitionNode",
  "ast.TypeSystemExtensionNode",
  "ast.UnionTypeDefinitionNode",
  "ast.UnionTypeExtensionNode",
  "ast.ValueNode",
  "ast.VariableDefinitionNode",
  "ast.VariableNode",
  "ast_from_value.ast_from_value",
  "asyncio.AbstractEventLoop",
  "asyncio.Event",
  "asyncio.Future",
  "asyncio.Queue",
  "asyncio.ensure_future",
  "asyncio.gather",
  "asyncio.wait",
  "athrow",
  "await_and_set_result",
  "await_complete_object_value",
  "await_completed",
  "await_result",
  "block_string.dedent_block_string_value",
  "block_string.print_block_string",
  "build_argument",
  "build_argument_def_map",
  "build_argument_map",
  "build_directive",
  "build_enum_value_map",
  "build_field",
  "build_field_def_map",
  "build_field_map",
  "build_function",
  "build_implementations_list",
  "build_input_field_map",
  "build_input_value",
  "build_input_value_def_map",
  "build_interfaces",
  "build_response_async",
  "build_type",
  "build_union_types",
  "builder",
  "collect_and_execute_subfields_async",
  "collect_referenced_types",
  "collections.defaultdict",
  "concurrent.futures.FIRST_COMPLETED",
  "copy.copy",
  "copy.deepcopy",
  "create_source_event_stream",
  "definition.GraphQLAbstractType",
  "definition.GraphQLArgument",
  "definition.GraphQLEnumType",
  "definition.GraphQLEnumValue",
  "definition.GraphQLField",
  "definition.GraphQLInputField",
  "definition.GraphQLInputObjectType",
  "definition.GraphQLInputType",
  "definition.GraphQLInterfaceType",
  "definition.GraphQLList",
  "definition.GraphQLNamedType",
  "definition.GraphQLNonNull",
  "definition.GraphQLObjectType",
  "definition.GraphQLScalarType",
  "definition.GraphQLType",
  "definition.GraphQLUnionType",
  "definition.get_named_type",
  "definition.is_abstract_type",
  "definition.is_enum_type",
  "definition.is_input_object_type",
  "definition.is_input_type",
  "definition.is_interface_type",
  "definition.is_list_type",
  "definition.is_named_type",
  "definition.is_non_null_type",
  "definition.is_object_type",
  "definition.is_output_type",
  "definition.is_required_argument",
  "definition.is_scalar_type",
  "definition.is_union_type",
  "dict.fromkeys",
  "directive_locations.DirectiveLocation.__members__",
  "directives.GraphQLDirective",
  "directives.is_directive",
  "directives.specified_directives",
  "enum.Enum",
  "error.GraphQLError",
  "error.GraphQLSyntaxError",
  "error.located_error",
  "execution.ExecutionContext",
  "execution.ExecutionResult",
  "execution.Middleware",
  "execution.execute",
  "execution.execute.ExecutionContext.build",
  "execution.execute.ExecutionResult",
  "execution.execute.assert_valid_execution_arguments",
  "execution.execute.execute",
  "execution.execute.get_field_def",
  "execution.get_directive_values",
  "extend_arg",
  "extend_enum_type",
  "extend_field",
  "extend_input_object_type",
  "extend_interface_type",
  "extend_named_type",
  "extend_object_type",
  "extend_scalar_type",
  "extend_schema.extend_schema_impl",
  "extend_union_type",
  "fn",
  "frozen_error.FrozenError",
  "func",
  "functools.cmp_to_key",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "get_completed_results",
  "get_fragment",
  "get_fragment_spreads",
  "get_fragments",
  "get_interface_type",
  "get_introspection_query.get_introspection_query",
  "get_named_type",
  "get_object_type",
  "get_operation",
  "get_operation_types",
  "get_results",
  "get_type",
  "get_variable_usages",
  "get_wrapped_type",
  "graphql.error.graphql_error.GraphQLError",
  "graphql.error.graphql_error.format_error",
  "graphql.error.graphql_error.print_error",
  "graphql.execution.execute.ExecutionContext",
  "graphql.execution.execute.ExecutionResult",
  "graphql.execution.execute.Middleware",
  "graphql.execution.execute.assert_valid_execution_arguments",
  "graphql.execution.execute.get_field_def",
  "graphql.execution.execute.get_field_entry_key",
  "graphql.execution.execute.get_typename",
  "graphql.execution.execute.invalid_return_type_error",
  "graphql.execution.middleware.GraphQLFieldResolver",
  "graphql.execution.middleware.get_middleware_resolvers",
  "graphql.execution.values.CoercedVariableValues",
  "graphql.execution.values.NodeWithDirective",
  "graphql.execution.values.coerce_variable_values",
  "graphql.execution.values.get_argument_values",
  "graphql.graphql.assume_not_awaitable",
  "graphql.graphql.graphql_impl",
  "graphql.graphql.result",
  "graphql.language.ast.ArgumentNode",
  "graphql.language.ast.DefinitionNode",
  "graphql.language.ast.DirectiveNode",
  "graphql.language.ast.EnumValueDefinitionNode",
  "graphql.language.ast.ExecutableDefinitionNode",
  "graphql.language.ast.FieldDefinitionNode",
  "graphql.language.ast.InputValueDefinitionNode",
  "graphql.language.ast.ListTypeNode",
  "graphql.language.ast.Location",
  "graphql.language.ast.NameNode",
  "graphql.language.ast.NamedTypeNode",
  "graphql.language.ast.Node",
  "graphql.language.ast.OperationType",
  "graphql.language.ast.OperationTypeDefinitionNode",
  "graphql.language.ast.SchemaExtensionNode",
  "graphql.language.ast.SelectionNode",
  "graphql.language.ast.SelectionSetNode",
  "graphql.language.ast.StringValueNode",
  "graphql.language.ast.Token",
  "graphql.language.ast.TypeDefinitionNode",
  "graphql.language.ast.TypeExtensionNode",
  "graphql.language.ast.TypeNode",
  "graphql.language.ast.TypeSystemDefinitionNode",
  "graphql.language.ast.ValueNode",
  "graphql.language.block_string.get_block_string_indentation",
  "graphql.language.block_string.leading_whitespace",
  "graphql.language.lexer._KIND_FOR_PUNCT",
  "graphql.language.lexer._punctuator_token_kinds",
  "graphql.language.lexer.char2hex",
  "graphql.language.lexer.is_name_start",
  "graphql.language.lexer.print_char",
  "graphql.language.lexer.unexpected_character_message",
  "graphql.language.lexer.uni_char_code",
  "graphql.language.location.SourceLocation",
  "graphql.language.parser.Parser",
  "graphql.language.parser.SourceType",
  "graphql.language.parser.T",
  "graphql.language.parser.get_token_desc",
  "graphql.language.parser.get_token_kind_desc",
  "graphql.language.print_location._re_newline",
  "graphql.language.print_location.print_prefixed_lines",
  "graphql.language.print_location.print_source_location",
  "graphql.language.printer.PrintAstVisitor",
  "graphql.language.printer.add_description",
  "graphql.language.printer.block",
  "graphql.language.printer.has_multiline_items",
  "graphql.language.printer.indent",
  "graphql.language.printer.is_multiline",
  "graphql.language.printer.join",
  "graphql.language.printer.wrap",
  "graphql.language.source.Source",
  "graphql.language.visitor.Stack",
  "graphql.language.visitor.Visitor",
  "graphql.language.visitor.ast",
  "graphql.pyutils.awaitable_or_value.T",
  "graphql.pyutils.convert_case._re_camel_to_snake",
  "graphql.pyutils.convert_case._re_snake_to_camel",
  "graphql.pyutils.description.Description",
  "graphql.pyutils.did_you_mean.MAX_LENGTH",
  "graphql.pyutils.event_emitter.EventEmitter",
  "graphql.pyutils.frozen_dict.FrozenDict",
  "graphql.pyutils.frozen_dict.K",
  "graphql.pyutils.frozen_dict.T",
  "graphql.pyutils.frozen_list.FrozenList",
  "graphql.pyutils.frozen_list.T",
  "graphql.pyutils.identity_func.T",
  "graphql.pyutils.inspect.inspect_recursive",
  "graphql.pyutils.inspect.max_list_size",
  "graphql.pyutils.inspect.max_recursive_depth",
  "graphql.pyutils.inspect.max_str_size",
  "graphql.pyutils.inspect.trunc_list",
  "graphql.pyutils.inspect.trunc_str",
  "graphql.pyutils.is_awaitable.CO_ITERABLE_COROUTINE",
  "graphql.pyutils.is_collection.collection_type",
  "graphql.pyutils.path.Path",
  "graphql.pyutils.suggestion_list.LexicalDistance",
  "graphql.pyutils.undefined.Undefined",
  "graphql.pyutils.undefined.UndefinedType",
  "graphql.subscription.subscribe.context",
  "graphql.subscription.subscribe.event_stream",
  "graphql.subscription.subscribe.field_def",
  "graphql.subscription.subscribe.field_name",
  "graphql.subscription.subscribe.field_node",
  "graphql.subscription.subscribe.field_nodes",
  "graphql.subscription.subscribe.fields",
  "graphql.subscription.subscribe.info",
  "graphql.subscription.subscribe.path",
  "graphql.subscription.subscribe.resolve_fn",
  "graphql.subscription.subscribe.response_name",
  "graphql.subscription.subscribe.response_names",
  "graphql.subscription.subscribe.result",
  "graphql.subscription.subscribe.result_or_stream",
  "graphql.subscription.subscribe.type_",
  "graphql.type.definition.GNT",
  "graphql.type.definition.GT",
  "graphql.type.definition.GraphQLAbstractType",
  "graphql.type.definition.GraphQLArgument",
  "graphql.type.definition.GraphQLArgumentMap",
  "graphql.type.definition.GraphQLEnumType",
  "graphql.type.definition.GraphQLEnumValue",
  "graphql.type.definition.GraphQLEnumValueMap",
  "graphql.type.definition.GraphQLField",
  "graphql.type.definition.GraphQLFieldMap",
  "graphql.type.definition.GraphQLInputField",
  "graphql.type.definition.GraphQLInputFieldMap",
  "graphql.type.definition.GraphQLInputFieldOutType",
  "graphql.type.definition.GraphQLInputObjectType",
  "graphql.type.definition.GraphQLInputType",
  "graphql.type.definition.GraphQLInterfaceType",
  "graphql.type.definition.GraphQLIsTypeOfFn",
  "graphql.type.definition.GraphQLLeafType",
  "graphql.type.definition.GraphQLList",
  "graphql.type.definition.GraphQLNamedType",
  "graphql.type.definition.GraphQLNonNull",
  "graphql.type.definition.GraphQLNullableType",
  "graphql.type.definition.GraphQLObjectType",
  "graphql.type.definition.GraphQLOutputType",
  "graphql.type.definition.GraphQLResolveInfo",
  "graphql.type.definition.GraphQLScalarLiteralParser",
  "graphql.type.definition.GraphQLScalarSerializer",
  "graphql.type.definition.GraphQLScalarType",
  "graphql.type.definition.GraphQLScalarValueParser",
  "graphql.type.definition.GraphQLType",
  "graphql.type.definition.GraphQLTypeResolver",
  "graphql.type.definition.GraphQLUnionType",
  "graphql.type.definition.GraphQLWrappingType",
  "graphql.type.definition.T",
  "graphql.type.definition.Thunk",
  "graphql.type.definition.did_you_mean_enum_value",
  "graphql.type.definition.graphql_abstract_types",
  "graphql.type.definition.graphql_composite_types",
  "graphql.type.definition.graphql_input_types",
  "graphql.type.definition.graphql_leaf_types",
  "graphql.type.definition.graphql_nullable_types",
  "graphql.type.definition.graphql_output_types",
  "graphql.type.definition.is_abstract_type",
  "graphql.type.definition.is_composite_type",
  "graphql.type.definition.is_enum_type",
  "graphql.type.definition.is_input_object_type",
  "graphql.type.definition.is_input_type",
  "graphql.type.definition.is_interface_type",
  "graphql.type.definition.is_leaf_type",
  "graphql.type.definition.is_list_type",
  "graphql.type.definition.is_named_type",
  "graphql.type.definition.is_non_null_type",
  "graphql.type.definition.is_nullable_type",
  "graphql.type.definition.is_object_type",
  "graphql.type.definition.is_output_type",
  "graphql.type.definition.is_scalar_type",
  "graphql.type.definition.is_type",
  "graphql.type.definition.is_union_type",
  "graphql.type.definition.is_wrapping_type",
  "graphql.type.definition.resolve_thunk",
  "graphql.type.directives.DEFAULT_DEPRECATION_REASON",
  "graphql.type.directives.GraphQLDeprecatedDirective",
  "graphql.type.directives.GraphQLDirective",
  "graphql.type.directives.GraphQLIncludeDirective",
  "graphql.type.directives.GraphQLSkipDirective",
  "graphql.type.directives.is_directive",
  "graphql.type.introspection.TypeKind",
  "graphql.type.introspection.introspection_types",
  "graphql.type.scalars.GraphQLBoolean",
  "graphql.type.scalars.GraphQLFloat",
  "graphql.type.scalars.GraphQLID",
  "graphql.type.scalars.GraphQLInt",
  "graphql.type.scalars.GraphQLString",
  "graphql.type.scalars.MAX_INT",
  "graphql.type.scalars.MIN_INT",
  "graphql.type.scalars.coerce_boolean",
  "graphql.type.scalars.coerce_float",
  "graphql.type.scalars.coerce_id",
  "graphql.type.scalars.coerce_int",
  "graphql.type.scalars.coerce_string",
  "graphql.type.scalars.parse_boolean_literal",
  "graphql.type.scalars.parse_float_literal",
  "graphql.type.scalars.parse_id_literal",
  "graphql.type.scalars.parse_int_literal",
  "graphql.type.scalars.parse_string_literal",
  "graphql.type.scalars.serialize_boolean",
  "graphql.type.scalars.serialize_float",
  "graphql.type.scalars.serialize_id",
  "graphql.type.scalars.serialize_int",
  "graphql.type.scalars.serialize_string",
  "graphql.type.schema.GraphQLSchema",
  "graphql.type.schema.InterfaceImplementations",
  "graphql.type.schema.TypeMap",
  "graphql.type.schema.TypeSet",
  "graphql.type.schema.is_schema",
  "graphql.type.validate.InputObjectCircularRefsValidator",
  "graphql.type.validate.SDLDefinedObject",
  "graphql.type.validate.SchemaValidationContext",
  "graphql.type.validate.get_all_implements_interface_nodes",
  "graphql.type.validate.get_all_nodes",
  "graphql.type.validate.get_all_sub_nodes",
  "graphql.type.validate.get_operation_type_node",
  "graphql.type.validate.get_union_member_type_nodes",
  "graphql.type.validate.validate_schema",
  "graphql.utilities.assert_valid_name.is_valid_name_error",
  "graphql.utilities.assert_valid_name.re_name",
  "graphql.utilities.ast_from_value._re_integer_string",
  "graphql.utilities.build_ast_schema.build_ast_schema",
  "graphql.utilities.coerce_input_value.OnErrorCB",
  "graphql.utilities.coerce_input_value.default_on_error",
  "graphql.utilities.extend_schema.extend_schema_impl",
  "graphql.utilities.extend_schema.get_deprecation_reason",
  "graphql.utilities.find_breaking_changes.BreakingChange",
  "graphql.utilities.find_breaking_changes.BreakingChangeType",
  "graphql.utilities.find_breaking_changes.Change",
  "graphql.utilities.find_breaking_changes.DangerousChange",
  "graphql.utilities.find_breaking_changes.DangerousChangeType",
  "graphql.utilities.find_breaking_changes.DictDiff",
  "graphql.utilities.find_breaking_changes.ListDiff",
  "graphql.utilities.find_breaking_changes.dict_diff",
  "graphql.utilities.find_breaking_changes.find_arg_changes",
  "graphql.utilities.find_breaking_changes.find_directive_changes",
  "graphql.utilities.find_breaking_changes.find_enum_type_changes",
  "graphql.utilities.find_breaking_changes.find_field_changes",
  "graphql.utilities.find_breaking_changes.find_implemented_interfaces_changes",
  "graphql.utilities.find_breaking_changes.find_input_object_type_changes",
  "graphql.utilities.find_breaking_changes.find_schema_changes",
  "graphql.utilities.find_breaking_changes.find_type_changes",
  "graphql.utilities.find_breaking_changes.find_union_type_changes",
  "graphql.utilities.find_breaking_changes.is_change_safe_for_input_object_field_or_field_arg",
  "graphql.utilities.find_breaking_changes.is_change_safe_for_object_or_interface_field",
  "graphql.utilities.find_breaking_changes.list_diff",
  "graphql.utilities.find_breaking_changes.stringify_value",
  "graphql.utilities.find_breaking_changes.type_kind_name",
  "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages",
  "graphql.utilities.introspection_from_schema.IntrospectionSchema",
  "graphql.utilities.print_schema.is_schema_of_common_names",
  "graphql.utilities.print_schema.print_args",
  "graphql.utilities.print_schema.print_block",
  "graphql.utilities.print_schema.print_deprecated",
  "graphql.utilities.print_schema.print_description",
  "graphql.utilities.print_schema.print_directive",
  "graphql.utilities.print_schema.print_enum",
  "graphql.utilities.print_schema.print_fields",
  "graphql.utilities.print_schema.print_filtered_schema",
  "graphql.utilities.print_schema.print_implemented_interfaces",
  "graphql.utilities.print_schema.print_input_object",
  "graphql.utilities.print_schema.print_input_value",
  "graphql.utilities.print_schema.print_interface",
  "graphql.utilities.print_schema.print_object",
  "graphql.utilities.print_schema.print_scalar",
  "graphql.utilities.print_schema.print_schema_definition",
  "graphql.utilities.print_schema.print_type",
  "graphql.utilities.print_schema.print_union",
  "graphql.utilities.separate_operations.DepGraph",
  "graphql.utilities.separate_operations.SeparateOperations",
  "graphql.utilities.separate_operations.collect_transitive_dependencies",
  "graphql.utilities.separate_operations.op_name",
  "graphql.utilities.strip_ignored_characters.dedent_block_string",
  "graphql.utilities.type_info.GetFieldDefType",
  "graphql.utilities.value_from_ast.is_missing_variable",
  "graphql.utilities.value_from_ast_untyped.value_from_ast_untyped",
  "graphql.validation.rules.ASTValidationRule",
  "graphql.validation.rules.executable_definitions.ASTValidationRule",
  "graphql.validation.rules.fields_on_correct_type.ValidationRule",
  "graphql.validation.rules.fields_on_correct_type.get_suggested_field_names",
  "graphql.validation.rules.fields_on_correct_type.get_suggested_type_names",
  "graphql.validation.rules.fragments_on_composite_types.ValidationRule",
  "graphql.validation.rules.known_argument_names.ASTValidationRule",
  "graphql.validation.rules.known_argument_names.KnownArgumentNamesOnDirectivesRule",
  "graphql.validation.rules.known_argument_names.SDLValidationContext",
  "graphql.validation.rules.known_argument_names.ValidationContext",
  "graphql.validation.rules.known_directives.ASTValidationRule",
  "graphql.validation.rules.known_directives.SDLValidationContext",
  "graphql.validation.rules.known_directives.ValidationContext",
  "graphql.validation.rules.known_directives._directive_location",
  "graphql.validation.rules.known_directives._operation_location",
  "graphql.validation.rules.known_directives.get_directive_location_for_ast_path",
  "graphql.validation.rules.known_fragment_names.ValidationRule",
  "graphql.validation.rules.known_type_names.ASTValidationRule",
  "graphql.validation.rules.known_type_names.SDLValidationContext",
  "graphql.validation.rules.known_type_names.ValidationContext",
  "graphql.validation.rules.known_type_names.is_sdl_node",
  "graphql.validation.rules.lone_anonymous_operation.ASTValidationContext",
  "graphql.validation.rules.lone_anonymous_operation.ASTValidationRule",
  "graphql.validation.rules.lone_schema_definition.SDLValidationContext",
  "graphql.validation.rules.lone_schema_definition.SDLValidationRule",
  "graphql.validation.rules.no_fragment_cycles.ASTValidationContext",
  "graphql.validation.rules.no_fragment_cycles.ASTValidationRule",
  "graphql.validation.rules.no_undefined_variables.ValidationContext",
  "graphql.validation.rules.no_undefined_variables.ValidationRule",
  "graphql.validation.rules.no_unused_fragments.ASTValidationContext",
  "graphql.validation.rules.no_unused_fragments.ASTValidationRule",
  "graphql.validation.rules.no_unused_variables.ValidationContext",
  "graphql.validation.rules.no_unused_variables.ValidationRule",
  "graphql.validation.rules.overlapping_fields_can_be_merged.Conflict",
  "graphql.validation.rules.overlapping_fields_can_be_merged.ConflictReason",
  "graphql.validation.rules.overlapping_fields_can_be_merged.MYPY",
  "graphql.validation.rules.overlapping_fields_can_be_merged.NodeAndDef",
  "graphql.validation.rules.overlapping_fields_can_be_merged.NodeAndDefCollection",
  "graphql.validation.rules.overlapping_fields_can_be_merged.PairSet",
  "graphql.validation.rules.overlapping_fields_can_be_merged.ValidationContext",
  "graphql.validation.rules.overlapping_fields_can_be_merged.ValidationRule",
  "graphql.validation.rules.overlapping_fields_can_be_merged.collect_conflicts_between",
  "graphql.validation.rules.overlapping_fields_can_be_merged.collect_conflicts_between_fields_and_fragment",
  "graphql.validation.rules.overlapping_fields_can_be_merged.collect_conflicts_between_fragments",
  "graphql.validation.rules.overlapping_fields_can_be_merged.collect_conflicts_within",
  "graphql.validation.rules.overlapping_fields_can_be_merged.collect_fields_and_fragment_names",
  "graphql.validation.rules.overlapping_fields_can_be_merged.do_types_conflict",
  "graphql.validation.rules.overlapping_fields_can_be_merged.find_conflict",
  "graphql.validation.rules.overlapping_fields_can_be_merged.find_conflicts_between_sub_selection_sets",
  "graphql.validation.rules.overlapping_fields_can_be_merged.find_conflicts_within_selection_set",
  "graphql.validation.rules.overlapping_fields_can_be_merged.get_fields_and_fragment_names",
  "graphql.validation.rules.overlapping_fields_can_be_merged.get_referenced_fields_and_fragment_names",
  "graphql.validation.rules.overlapping_fields_can_be_merged.reason_message",
  "graphql.validation.rules.overlapping_fields_can_be_merged.same_arguments",
  "graphql.validation.rules.overlapping_fields_can_be_merged.same_value",
  "graphql.validation.rules.overlapping_fields_can_be_merged.subfield_conflicts",
  "graphql.validation.rules.possible_fragment_spreads.ValidationRule",
  "graphql.validation.rules.possible_type_extensions.SDLValidationContext",
  "graphql.validation.rules.possible_type_extensions.SDLValidationRule",
  "graphql.validation.rules.possible_type_extensions._type_names_for_extension_kinds",
  "graphql.validation.rules.possible_type_extensions.def_kind_to_ext_kind",
  "graphql.validation.rules.possible_type_extensions.extension_kind_to_type_name",
  "graphql.validation.rules.possible_type_extensions.type_to_ext_kind",
  "graphql.validation.rules.provided_required_arguments.ASTValidationRule",
  "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsOnDirectivesRule",
  "graphql.validation.rules.provided_required_arguments.SDLValidationContext",
  "graphql.validation.rules.provided_required_arguments.ValidationContext",
  "graphql.validation.rules.scalar_leafs.ValidationRule",
  "graphql.validation.rules.single_field_subscriptions.ASTValidationRule",
  "graphql.validation.rules.unique_argument_names.ASTValidationContext",
  "graphql.validation.rules.unique_argument_names.ASTValidationRule",
  "graphql.validation.rules.unique_directive_names.SDLValidationContext",
  "graphql.validation.rules.unique_directive_names.SDLValidationRule",
  "graphql.validation.rules.unique_directives_per_location.ASTValidationRule",
  "graphql.validation.rules.unique_directives_per_location.SDLValidationContext",
  "graphql.validation.rules.unique_directives_per_location.ValidationContext",
  "graphql.validation.rules.unique_enum_value_names.SDLValidationContext",
  "graphql.validation.rules.unique_enum_value_names.SDLValidationRule",
  "graphql.validation.rules.unique_field_definition_names.SDLValidationContext",
  "graphql.validation.rules.unique_field_definition_names.SDLValidationRule",
  "graphql.validation.rules.unique_field_definition_names.has_field",
  "graphql.validation.rules.unique_fragment_names.ASTValidationContext",
  "graphql.validation.rules.unique_fragment_names.ASTValidationRule",
  "graphql.validation.rules.unique_input_field_names.ASTValidationContext",
  "graphql.validation.rules.unique_input_field_names.ASTValidationRule",
  "graphql.validation.rules.unique_operation_names.ASTValidationContext",
  "graphql.validation.rules.unique_operation_names.ASTValidationRule",
  "graphql.validation.rules.unique_operation_types.SDLValidationContext",
  "graphql.validation.rules.unique_operation_types.SDLValidationRule",
  "graphql.validation.rules.unique_type_names.SDLValidationContext",
  "graphql.validation.rules.unique_type_names.SDLValidationRule",
  "graphql.validation.rules.unique_variable_names.ASTValidationContext",
  "graphql.validation.rules.unique_variable_names.ASTValidationRule",
  "graphql.validation.rules.values_of_correct_type.ValidationRule",
  "graphql.validation.rules.variables_are_input_types.ValidationRule",
  "graphql.validation.rules.variables_in_allowed_position.ValidationContext",
  "graphql.validation.rules.variables_in_allowed_position.ValidationRule",
  "graphql.validation.rules.variables_in_allowed_position.allowed_variable_usage",
  "graphql.validation.validate.ValidationAbortedError",
  "graphql.validation.validate.validate_sdl",
  "graphql.validation.validation_context.ASTValidationContext",
  "graphql.validation.validation_context.NodeWithSelectionSet",
  "graphql.validation.validation_context.VariableUsage",
  "graphql.validation.validation_context.VariableUsageVisitor",
  "graphql.version._re_version",
  "graphql_error.GraphQLError",
  "inspect.isasyncgen",
  "inspect.isasyncgenfunction",
  "inspect.isawaitable",
  "inspect.isclass",
  "inspect.iscoroutine",
  "inspect.iscoroutinefunction",
  "inspect.isfunction",
  "inspect.isgenerator",
  "inspect.isgeneratorfunction",
  "inspect.ismethod",
  "inspect_method",
  "introspection.introspection_types",
  "introspection.is_introspection_type",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "json.dumps",
  "language.ArgumentNode",
  "language.BooleanValueNode",
  "language.DirectiveDefinitionNode",
  "language.DirectiveLocation",
  "language.DirectiveLocation.ARGUMENT_DEFINITION",
  "language.DirectiveLocation.ENUM",
  "language.DirectiveLocation.ENUM_VALUE",
  "language.DirectiveLocation.FIELD",
  "language.DirectiveLocation.FIELD_DEFINITION",
  "language.DirectiveLocation.FRAGMENT_DEFINITION",
  "language.DirectiveLocation.FRAGMENT_SPREAD",
  "language.DirectiveLocation.INLINE_FRAGMENT",
  "language.DirectiveLocation.INPUT_FIELD_DEFINITION",
  "language.DirectiveLocation.INPUT_OBJECT",
  "language.DirectiveLocation.INTERFACE",
  "language.DirectiveLocation.MUTATION",
  "language.DirectiveLocation.OBJECT",
  "language.DirectiveLocation.QUERY",
  "language.DirectiveLocation.SCALAR",
  "language.DirectiveLocation.SCHEMA",
  "language.DirectiveLocation.SUBSCRIPTION",
  "language.DirectiveLocation.UNION",
  "language.DirectiveLocation.VARIABLE_DEFINITION",
  "language.DirectiveNode",
  "language.DocumentNode",
  "language.EnumTypeDefinitionNode",
  "language.EnumTypeExtensionNode",
  "language.EnumValueDefinitionNode",
  "language.EnumValueNode",
  "language.ExecutableDefinitionNode",
  "language.FieldDefinitionNode",
  "language.FieldNode",
  "language.FloatValueNode",
  "language.FragmentDefinitionNode",
  "language.FragmentSpreadNode",
  "language.InlineFragmentNode",
  "language.InputObjectTypeDefinitionNode",
  "language.InputObjectTypeExtensionNode",
  "language.InputValueDefinitionNode",
  "language.IntValueNode",
  "language.InterfaceTypeDefinitionNode",
  "language.InterfaceTypeExtensionNode",
  "language.Lexer",
  "language.ListTypeNode",
  "language.ListValueNode",
  "language.NameNode",
  "language.NamedTypeNode",
  "language.Node",
  "language.NonNullTypeNode",
  "language.NullValueNode",
  "language.ObjectFieldNode",
  "language.ObjectTypeDefinitionNode",
  "language.ObjectTypeExtensionNode",
  "language.ObjectValueNode",
  "language.OperationDefinitionNode",
  "language.OperationType",
  "language.OperationType.MUTATION",
  "language.OperationType.QUERY",
  "language.OperationType.SUBSCRIPTION",
  "language.OperationTypeDefinitionNode",
  "language.ParallelVisitor",
  "language.SKIP",
  "language.ScalarTypeDefinitionNode",
  "language.ScalarTypeExtensionNode",
  "language.SchemaDefinitionNode",
  "language.SchemaExtensionNode",
  "language.SelectionNode",
  "language.SelectionSetNode",
  "language.Source",
  "language.StringValueNode",
  "language.TokenKind.BLOCK_STRING",
  "language.TokenKind.EOF",
  "language.TokenKind.SPREAD",
  "language.TypeDefinitionNode",
  "language.TypeExtensionNode",
  "language.TypeNode",
  "language.UnionTypeDefinitionNode",
  "language.UnionTypeExtensionNode",
  "language.ValueNode",
  "language.VariableDefinitionNode",
  "language.VariableNode",
  "language.Visitor",
  "language.ast.BooleanValueNode",
  "language.ast.DirectiveDefinitionNode",
  "language.ast.DocumentNode",
  "language.ast.FloatValueNode",
  "language.ast.IntValueNode",
  "language.ast.SchemaDefinitionNode",
  "language.ast.SchemaExtensionNode",
  "language.ast.StringValueNode",
  "language.block_string.dedent_block_string_value",
  "language.block_string.get_block_string_indentation",
  "language.block_string.print_block_string",
  "language.is_type_definition_node",
  "language.is_type_extension_node",
  "language.is_type_system_definition_node",
  "language.is_type_system_extension_node",
  "language.lexer.is_punctuator_token_kind",
  "language.parse",
  "language.parse_value",
  "language.print_ast",
  "language.print_location.print_location",
  "language.print_location.print_source_location",
  "language.printer.print_ast",
  "language.visit",
  "language.visitor.Visitor",
  "lexer.Lexer",
  "lexer.is_punctuator_token_kind",
  "list.__add__",
  "list.__mul__",
  "listener",
  "location.SourceLocation",
  "location.SourceLocation._make",
  "location.get_location",
  "map_async_iterator.MapAsyncIterator",
  "math.isfinite",
  "math.nan",
  "method",
  "middleware.MiddlewareManager",
  "on_error",
  "operator.attrgetter",
  "operator.itemgetter",
  "path_append",
  "path_pop",
  "pop_node",
  "pop_set",
  "pyutils.AwaitableOrValue",
  "pyutils.FrozenDict",
  "pyutils.FrozenList",
  "pyutils.Path",
  "pyutils.Undefined",
  "pyutils.cached_property",
  "pyutils.camel_to_snake",
  "pyutils.did_you_mean",
  "pyutils.inspect",
  "pyutils.is_awaitable",
  "pyutils.is_collection",
  "pyutils.is_description",
  "pyutils.is_finite",
  "pyutils.is_integer",
  "pyutils.print_path_list",
  "pyutils.snake_to_camel",
  "pyutils.suggestion_list",
  "re.compile",
  "replace_directive",
  "replace_maybe_type",
  "replace_named_type",
  "replace_type",
  "resolve_type_fn",
  "rule",
  "rules.ASTValidationRule",
  "scalars.GraphQLBoolean",
  "scalars.GraphQLString",
  "schema.GraphQLSchema",
  "schema.assert_schema",
  "set_result",
  "sort_args",
  "sort_directive",
  "sort_fields",
  "sort_input_fields",
  "sort_named_type",
  "sort_types",
  "source.Source",
  "specified_rules.specified_rules",
  "specified_rules.specified_sdl_rules",
  "sys.exc_info",
  "textwrap.dedent",
  "token_kind.TokenKind",
  "token_kind.TokenKind.AMP",
  "token_kind.TokenKind.AT",
  "token_kind.TokenKind.BANG",
  "token_kind.TokenKind.BLOCK_STRING",
  "token_kind.TokenKind.BRACE_L",
  "token_kind.TokenKind.BRACE_R",
  "token_kind.TokenKind.BRACKET_L",
  "token_kind.TokenKind.BRACKET_R",
  "token_kind.TokenKind.COLON",
  "token_kind.TokenKind.COMMENT",
  "token_kind.TokenKind.DOLLAR",
  "token_kind.TokenKind.EOF",
  "token_kind.TokenKind.EOF.value",
  "token_kind.TokenKind.EQUALS",
  "token_kind.TokenKind.FLOAT",
  "token_kind.TokenKind.INT",
  "token_kind.TokenKind.NAME",
  "token_kind.TokenKind.PAREN_L",
  "token_kind.TokenKind.PAREN_R",
  "token_kind.TokenKind.PIPE",
  "token_kind.TokenKind.SOF",
  "token_kind.TokenKind.SPREAD",
  "token_kind.TokenKind.STRING",
  "type.DEFAULT_DEPRECATION_REASON",
  "type.GraphQLAbstractType",
  "type.GraphQLArgument",
  "type.GraphQLArgumentMap",
  "type.GraphQLCompositeType",
  "type.GraphQLDeprecatedDirective",
  "type.GraphQLDirective",
  "type.GraphQLEnumType",
  "type.GraphQLEnumValue",
  "type.GraphQLEnumValueMap",
  "type.GraphQLField",
  "type.GraphQLFieldMap",
  "type.GraphQLFieldResolver",
  "type.GraphQLID",
  "type.GraphQLIncludeDirective",
  "type.GraphQLInputField",
  "type.GraphQLInputFieldMap",
  "type.GraphQLInputObjectType",
  "type.GraphQLInputType",
  "type.GraphQLInterfaceType",
  "type.GraphQLLeafType",
  "type.GraphQLList",
  "type.GraphQLNamedType",
  "type.GraphQLNonNull",
  "type.GraphQLNullableType",
  "type.GraphQLObjectType",
  "type.GraphQLOutputType",
  "type.GraphQLResolveInfo",
  "type.GraphQLScalarType",
  "type.GraphQLSchema",
  "type.GraphQLSkipDirective",
  "type.GraphQLString",
  "type.GraphQLType",
  "type.GraphQLTypeResolver",
  "type.GraphQLUnionType",
  "type.GraphQLWrappingType",
  "type.SchemaMetaFieldDef",
  "type.TypeKind.ENUM.name",
  "type.TypeKind.INPUT_OBJECT.name",
  "type.TypeKind.INTERFACE.name",
  "type.TypeKind.LIST.name",
  "type.TypeKind.NON_NULL.name",
  "type.TypeKind.OBJECT.name",
  "type.TypeKind.SCALAR.name",
  "type.TypeKind.UNION.name",
  "type.TypeMetaFieldDef",
  "type.TypeNameMetaFieldDef",
  "type.assert_interface_type",
  "type.assert_nullable_type",
  "type.assert_object_type",
  "type.assert_schema",
  "type.assert_valid_schema",
  "type.get_named_type",
  "type.get_nullable_type",
  "type.introspection_types",
  "type.introspection_types.items",
  "type.is_abstract_type",
  "type.is_composite_type",
  "type.is_enum_type",
  "type.is_input_object_type",
  "type.is_input_type",
  "type.is_interface_type",
  "type.is_introspection_type",
  "type.is_leaf_type",
  "type.is_list_type",
  "type.is_named_type",
  "type.is_non_null_type",
  "type.is_object_type",
  "type.is_output_type",
  "type.is_required_argument",
  "type.is_required_input_field",
  "type.is_scalar_type",
  "type.is_specified_directive",
  "type.is_specified_scalar_type",
  "type.is_type",
  "type.is_union_type",
  "type.specified_directives",
  "type.specified_scalar_types",
  "type.specified_scalar_types.items",
  "type.validate_schema",
  "type_",
  "type_from_ast.type_from_ast",
  "type_info.TypeInfo",
  "type_info.TypeInfoVisitor",
  "types.CoroutineType",
  "types.GeneratorType",
  "typing.Any",
  "typing.AsyncIterable",
  "typing.AsyncIterator",
  "typing.Awaitable",
  "typing.Callable",
  "typing.Collection",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.Generic",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "undefined.Undefined",
  "utilities.TypeInfo",
  "utilities.TypeInfoVisitor",
  "utilities.assert_valid_name.is_valid_name_error",
  "utilities.ast_from_value",
  "utilities.coerce_input_value.coerce_input_value",
  "utilities.do_types_overlap",
  "utilities.get_operation_root_type",
  "utilities.get_operation_root_type.get_operation_root_type",
  "utilities.is_type_sub_type_of",
  "utilities.type_comparators.is_equal_type",
  "utilities.type_comparators.is_type_sub_type_of",
  "utilities.type_from_ast",
  "utilities.type_from_ast.type_from_ast",
  "utilities.value_from_ast.value_from_ast",
  "utilities.value_from_ast_untyped.value_from_ast_untyped",
  "validate_input_object_circular_refs",
  "validation.validate",
  "validation.validate.assert_valid_sdl",
  "validation.validate.assert_valid_sdl_extension",
  "validation_context.ASTValidationContext",
  "validation_context.SDLValidationContext",
  "validation_context.ValidationContext",
  "value",
  "value_from_ast.value_from_ast",
  "values.get_argument_values",
  "values.get_directive_values",
  "values.get_variable_values",
  "version.version",
  "version.version_info",
  "version.version_info_js",
  "version.version_js",
  "visit_fn",
  "visitor.Visitor",
  "visitor.visit"
 ],
 "deps": {
  "Exception": [],
  "SortVisitor": [],
  "aclose": [],
  "add": [],
  "add_name": [],
  "ancestors_append": [],
  "ancestors_pop": [],
  "append": [],
  "append_awaitable": [],
  "append_awaitable_results": [],
  "append_awaitable_types": [],
  "append_fragment": [],
  "append_item": [],
  "append_node": [],
  "append_result": [],
  "append_set": [],
  "append_spread": [],
  "append_value": [],
  "ast": [],
  "ast_from_value": [],
  "asyncio": [],
  "athrow": [],
  "await_and_set_result": [],
  "await_complete_object_value": [],
  "await_completed": [],
  "await_result": [],
  "block_string": [],
  "build_argument": [],
  "build_argument_def_map": [],
  "build_argument_map": [],
  "build_directive": [],
  "build_enum_value_map": [],
  "build_field": [],
  "build_field_def_map": [],
  "build_field_map": [],
  "build_function": [],
  "build_implementations_list": [],
  "build_input_field_map": [],
  "build_input_value": [],
  "build_input_value_def_map": [],
  "build_interfaces": [],
  "build_response_async": [],
  "build_type": [],
  "build_union_types": [],
  "builder": [],
  "collect_and_execute_subfields_async": [],
  "collect_referenced_types": [],
  "collections": [],
  "concurrent": [],
  "copy": [],
  "create_source_event_stream": [],
  "definition": [],
  "dict": [],
  "directive_locations": [],
  "directives": [],
  "enum": [],
  "error": [],
  "execution": [],
  "extend_arg": [],
  "extend_enum_type": [],
  "extend_field": [],
  "extend_input_object_type": [],
  "extend_interface_type": [],
  "extend_named_type": [],
  "extend_object_type": [],
  "extend_scalar_type": [],
  "extend_schema": [],
  "extend_union_type": [],
  "fn": [],
  "frozen_error": [],
  "func": [],
  "functools": [],
  "get_completed_results": [],
  "get_fragment": [],
  "get_fragment_spreads": [],
  "get_fragments": [],
  "get_interface_type": [],
  "get_introspection_query": [],
  "get_named_type": [],
  "get_object_type": [],
  "get_operation": [],
  "get_operation_types": [],
  "get_results": [],
  "get_type": [],
  "get_variable_usages": [],
  "get_wrapped_type": [],
  "graphql": [],
  "graphql_error": [],
  "inspect": [],
  "inspect_method": [],
  "introspection": [],
  "itertools": [],
  "json": [],
  "language": [],
  "lexer": [],
  "list": [],
  "listener": [],
  "location": [],
  "map_async_iterator": [],
  "math": [],
  "method": [],
  "middleware": [],
  "on_error": [],
  "operator": [],
  "path_append": [],
  "path_pop": [],
  "pop_node": [],
  "pop_set": [],
  "pyutils": [],
  "re": [],
  "replace_directive": [],
  "replace_maybe_type": [],
  "replace_named_type": [],
  "replace_type": [],
  "resolve_type_fn": [],
  "rule": [],
  "rules": [],
  "scalars": [],
  "schema": [],
  "set_result": [],
  "sort_args": [],
  "sort_directive": [],
  "sort_fields": [],
  "sort_input_fields": [],
  "sort_named_type": [],
  "sort_types": [],
  "source": [],
  "specified_rules": [],
  "sys": [],
  "textwrap": [],
  "token_kind": [],
  "type": [],
  "type_": [],
  "type_from_ast": [],
  "type_info": [],
  "types": [],
  "typing": [],
  "undefined": [],
  "utilities": [],
  "validate_input_object_circular_refs": [],
  "validation": [],
  "validation_context": [],
  "value": [],
  "value_from_ast": [],
  "values": [],
  "version": [],
  "visit_fn": [],
  "visitor": []
 }
}