{
 "bad": [
  "Exception.__hash__",
  "Parser",
  "SortVisitor",
  "aclose",
  "add",
  "add_name",
  "ancestors_append",
  "ancestors_pop",
  "append",
  "append_awaitable",
  "append_awaitable_results",
  "append_awaitable_types",
  "append_fragment",
  "append_item",
  "append_node",
  "append_result",
  "append_set",
  "append_spread",
  "append_value",
  "ast.OperationType.QUERY",
  "athrow",
  "await_and_set_result",
  "await_complete_object_value",
  "await_completed",
  "await_result",
  "block",
  "build_argument",
  "build_argument_def_map",
  "build_argument_map",
  "build_directive",
  "build_enum_value_map",
  "build_field",
  "build_field_def_map",
  "build_field_map",
  "build_function",
  "build_implementations_list",
  "build_input_field_map",
  "build_input_value",
  "build_input_value_def_map",
  "build_interfaces",
  "build_response_async",
  "build_type",
  "build_union_types",
  "builder",
  "collect_and_execute_subfields_async",
  "collect_conflicts_between",
  "collect_referenced_types",
  "collections.defaultdict",
  "create_source_event_stream",
  "dict.fromkeys",
  "dict_diff",
  "did_you_mean_enum_value",
  "directive_locations.DirectiveLocation.__members__",
  "execution.execute.ExecutionContext.build",
  "execution.execute.ExecutionResult",
  "execution.execute.execute",
  "execution.get_directive_values",
  "extend_arg",
  "extend_enum_type",
  "extend_field",
  "extend_input_object_type",
  "extend_interface_type",
  "extend_named_type",
  "extend_object_type",
  "extend_scalar_type",
  "extend_union_type",
  "find_conflict",
  "find_schema_changes",
  "fn",
  "func",
  "functools.cmp_to_key",
  "functools.partial",
  "functools.reduce",
  "get_all_implements_interface_nodes",
  "get_all_nodes",
  "get_completed_results",
  "get_deprecation_reason",
  "get_fields_and_fragment_names",
  "get_fragment",
  "get_fragment_spreads",
  "get_fragments",
  "get_interface_type",
  "get_named_type",
  "get_object_type",
  "get_operation",
  "get_operation_types",
  "get_referenced_fields_and_fragment_names",
  "get_results",
  "get_token_desc",
  "get_token_kind_desc",
  "get_type",
  "get_variable_usages",
  "get_wrapped_type",
  "graphql.__init__.version",
  "graphql.validation.rules.__init__.ASTValidationRule",
  "graphql.validation.specified_rules.specified_rules",
  "graphql.validation.specified_rules.specified_sdl_rules",
  "graphql_impl",
  "has_multiline_items",
  "indent",
  "inspect.CO_ITERABLE_COROUTINE",
  "inspect_method",
  "is_change_safe_for_input_object_field_or_field_arg",
  "is_input_type",
  "is_non_null_type",
  "is_output_type",
  "itertools.chain.from_iterable",
  "join",
  "language.DirectiveLocation.ARGUMENT_DEFINITION",
  "language.DirectiveLocation.ENUM",
  "language.DirectiveLocation.ENUM_VALUE",
  "language.DirectiveLocation.FIELD",
  "language.DirectiveLocation.FIELD_DEFINITION",
  "language.DirectiveLocation.FRAGMENT_DEFINITION",
  "language.DirectiveLocation.FRAGMENT_SPREAD",
  "language.DirectiveLocation.INLINE_FRAGMENT",
  "language.DirectiveLocation.INPUT_FIELD_DEFINITION",
  "language.DirectiveLocation.INPUT_OBJECT",
  "language.DirectiveLocation.INTERFACE",
  "language.DirectiveLocation.MUTATION",
  "language.DirectiveLocation.OBJECT",
  "language.DirectiveLocation.QUERY",
  "language.DirectiveLocation.SCALAR",
  "language.DirectiveLocation.SCHEMA",
  "language.DirectiveLocation.SUBSCRIPTION",
  "language.DirectiveLocation.UNION",
  "language.DirectiveLocation.VARIABLE_DEFINITION",
  "language.OperationType.MUTATION",
  "language.OperationType.QUERY",
  "language.OperationType.SUBSCRIPTION",
  "language.TokenKind.BLOCK_STRING",
  "language.TokenKind.EOF",
  "language.TokenKind.SPREAD",
  "language.ast.DirectiveDefinitionNode",
  "language.ast.SchemaDefinitionNode",
  "language.ast.SchemaExtensionNode",
  "language.print_location.print_location",
  "language.print_location.print_source_location",
  "list.__add__",
  "list.__mul__",
  "list_diff",
  "listener",
  "method",
  "on_error",
  "op_name",
  "path_append",
  "path_pop",
  "pop_node",
  "pop_set",
  "print_block",
  "print_deprecated",
  "print_description",
  "print_fields",
  "print_filtered_schema",
  "print_input_value",
  "re",
  "re.compile",
  "replace_directive",
  "replace_maybe_type",
  "replace_named_type",
  "replace_type",
  "resolve_type_fn",
  "rule",
  "set_result",
  "sort_args",
  "sort_directive",
  "sort_fields",
  "sort_input_fields",
  "sort_named_type",
  "sort_types",
  "token_kind.TokenKind.AMP",
  "token_kind.TokenKind.AT",
  "token_kind.TokenKind.BANG",
  "token_kind.TokenKind.BLOCK_STRING",
  "token_kind.TokenKind.BRACE_L",
  "token_kind.TokenKind.BRACE_R",
  "token_kind.TokenKind.BRACKET_L",
  "token_kind.TokenKind.BRACKET_R",
  "token_kind.TokenKind.COLON",
  "token_kind.TokenKind.COMMENT",
  "token_kind.TokenKind.DOLLAR",
  "token_kind.TokenKind.EOF",
  "token_kind.TokenKind.EOF.value",
  "token_kind.TokenKind.EQUALS",
  "token_kind.TokenKind.FLOAT",
  "token_kind.TokenKind.INT",
  "token_kind.TokenKind.NAME",
  "token_kind.TokenKind.PAREN_L",
  "token_kind.TokenKind.PAREN_R",
  "token_kind.TokenKind.PIPE",
  "token_kind.TokenKind.SOF",
  "token_kind.TokenKind.SPREAD",
  "token_kind.TokenKind.STRING",
  "type.GraphQLDirective",
  "type.GraphQLNamedType",
  "type.GraphQLScalarType",
  "type.GraphQLWrappingType",
  "type.TypeKind.ENUM.name",
  "type.TypeKind.INPUT_OBJECT.name",
  "type.TypeKind.INTERFACE.name",
  "type.TypeKind.LIST.name",
  "type.TypeKind.NON_NULL.name",
  "type.TypeKind.OBJECT.name",
  "type.TypeKind.SCALAR.name",
  "type.TypeKind.UNION.name",
  "type.introspection_types.items",
  "type.specified_scalar_types.items",
  "type_",
  "utilities.ast_from_value",
  "validate_input_object_circular_refs",
  "validation.validate",
  "validation.validate.assert_valid_sdl",
  "validation.validate.assert_valid_sdl_extension",
  "value",
  "visit_fn",
  "wrap"
 ],
 "deps": {
  "asyncio": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython"
  ],
  "concurrent": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}