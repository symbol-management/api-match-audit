{
 "bad": [
  "BackendExtension",
  "Cython.Build.cythonize",
  "Cython.Distutils.build_ext.build_ext",
  "IPython.core.getipython.get_ipython",
  "add_definition",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "astunparse.Unparser",
  "astunparse.dump",
  "backends.backends",
  "backenize_with_new_header",
  "base.BackendAOT",
  "base.BackendJIT",
  "base.TypeHintRemover",
  "base.format_str",
  "base_jit.SubBackendJIT",
  "beniget.Ancestors",
  "beniget.DefUseChains",
  "beniget.UseDefChains",
  "black.FileMode",
  "black.format_str",
  "blocks_if.get_block_definitions",
  "capturex.CaptureX",
  "colorlog.ColoredFormatter",
  "colorlog.StreamHandler",
  "colorlog.getLogger",
  "concurrent.futures.ThreadPoolExecutor",
  "contextlib.suppress",
  "copy.deepcopy",
  "cython.CythonBackend",
  "cython.analyze_array_type",
  "datetime.datetime.fromtimestamp",
  "debug",
  "decor",
  "distutils.command.build_ext.build_ext",
  "distutils.command.build_ext.build_ext.build_extensions",
  "distutils.core.Distribution",
  "distutils.core.Extension",
  "distutils.core.setup",
  "distutils.sysconfig.get_config_var",
  "distutils.util.strtobool",
  "extast.parse",
  "extast.unparse",
  "fill_suppressed",
  "fluiddyn.util.mpi.comm",
  "fluiddyn.util.mpi.nb_proc",
  "fluiddyn.util.mpi.rank",
  "for_check",
  "for_classes.make_new_code_method_from_nodes",
  "for_classes.produce_code_class",
  "for_test_exterior_import_jit.foo",
  "for_test_exterior_import_jit.func_import",
  "for_test_exterior_import_jit.func_import2",
  "for_test_exterior_import_jit_2.func_import_2",
  "for_test_init.check_class",
  "for_test_init.func",
  "for_test_init.func0",
  "for_test_init.func0_boosted",
  "for_test_init.func1",
  "for_test_init.ts",
  "for_test_init.ts.is_compiling",
  "for_test_init.ts.is_transpiled",
  "for_test_justintime.MyClass",
  "for_test_justintime.MyClass2",
  "for_test_justintime.fib",
  "for_test_justintime.func0",
  "for_test_justintime.func0_jitted",
  "for_test_justintime.func1",
  "for_test_justintime.func2",
  "for_test_justintime.func_dict",
  "for_test_justintime.func_import",
  "for_test_justintime.jitted_func_import",
  "for_test_justintime.main",
  "for_test_justintime.use_fib",
  "func",
  "functools.wraps",
  "gast.AST",
  "gast.And",
  "gast.AnnAssign",
  "gast.Assign",
  "gast.Attribute",
  "gast.AugAssign",
  "gast.Call",
  "gast.ClassDef",
  "gast.Dict",
  "gast.Expr",
  "gast.FunctionDef",
  "gast.If",
  "gast.Import",
  "gast.ImportFrom",
  "gast.Load",
  "gast.Module",
  "gast.Name",
  "gast.NodeTransformer",
  "gast.NodeVisitor",
  "gast.Or",
  "gast.Param",
  "gast.Store",
  "gast.Str",
  "gast.iter_fields",
  "gast.parse",
  "glob.glob",
  "hashlib.md5",
  "importlib.reload",
  "inspect.currentframe",
  "inspect.getmodule",
  "inspect.getsource",
  "inspect.signature",
  "inspect.stack",
  "io.BytesIO",
  "io.StringIO",
  "itertools.chain",
  "itertools.product",
  "logging.DEBUG",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.basicConfig",
  "logging.getLevelName",
  "logging.getLogger",
  "mpi.Path",
  "mpi4py.MPI.COMM_WORLD",
  "multiprocessing.cpu_count",
  "names",
  "numba.NumbaBackend",
  "numpy",
  "numpy.abs",
  "numpy.allclose",
  "numpy.arange",
  "numpy.exp",
  "numpy.get_include",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.pi",
  "os.chdir",
  "os.environ",
  "os.environ.get",
  "os.environ.pop",
  "os.getenv",
  "os.name",
  "os.path.basename",
  "os.path.exists",
  "os.path.getmtime",
  "os.path.sep",
  "os.path.sep.join",
  "os.remove",
  "os.walk",
  "parser.parse_transonic_def_commands",
  "pathlib.Path",
  "pathlib.Path.cwd",
  "pathlib.Path.home",
  "pprint.pformat",
  "psutil.virtual_memory",
  "py.PythonBackend",
  "py.SubBackendJITPython",
  "pyfiglet.figlet_format",
  "pytest.mark.skipif",
  "pythran.PythranBackend",
  "pythran.dist.PythranBuildExt",
  "pythran.dist.PythranExtension",
  "re.split",
  "re.sub",
  "runpy.run_path",
  "shutil.copyfile",
  "shutil.rmtree",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.run",
  "sys.argv",
  "sys.argv.endswith",
  "sys.argv.extend",
  "sys.argv.index",
  "sys.argv.pop",
  "sys.executable",
  "sys.exit",
  "sys.modules",
  "sys.path",
  "sys.path.insert",
  "sys.path.pop",
  "sysconfig.get_config_var",
  "textwrap.dedent",
  "textwrap.indent",
  "time.sleep",
  "time.time",
  "timeit.Timer",
  "tokenize.COMMENT",
  "tokenize.NAME",
  "tokenize.OP",
  "tokenize.tokenize",
  "tokenize.untokenize",
  "trans",
  "trans.other_func",
  "transonic.Array",
  "transonic.NDim",
  "transonic.Transonic",
  "transonic.Union",
  "transonic.__version__",
  "transonic._version.__version__",
  "transonic.aheadoftime.CheckCompiling",
  "transonic.aheadoftime.Transonic",
  "transonic.aheadoftime.TransonicTemporaryJITMethod",
  "transonic.aheadoftime.TransonicTemporaryMethod",
  "transonic.aheadoftime._get_transonic_calling_module",
  "transonic.aheadoftime.backend",
  "transonic.aheadoftime.is_transpiling",
  "transonic.aheadoftime.jit_class",
  "transonic.aheadoftime.modules",
  "transonic.analyses.analyse_aot",
  "transonic.analyses.blocks_if.BlockDefinition",
  "transonic.analyses.blocks_if.find_def_code",
  "transonic.analyses.blocks_if.find_index_closing_parenthesis",
  "transonic.analyses.blocks_if.find_last_def_node",
  "transonic.analyses.blocks_if.get_signatures_from_comments",
  "transonic.analyses.capturex.CaptureX",
  "transonic.analyses.capturex.capturex",
  "transonic.analyses.capturex.code",
  "transonic.analyses.capturex.function",
  "transonic.analyses.capturex.module",
  "transonic.analyses.compute_ancestors_chains",
  "transonic.analyses.extast.CommentInserter",
  "transonic.analyses.extast.CommentLine",
  "transonic.analyses.extast.UnparserExtended",
  "transonic.analyses.extast.ast.FunctionDef",
  "transonic.analyses.extast.ast.Name",
  "transonic.analyses.extast.ast.Param",
  "transonic.analyses.extast.ast.parse",
  "transonic.analyses.extast.parse",
  "transonic.analyses.extast.unparse",
  "transonic.analyses.find_decorated_function",
  "transonic.analyses.get_decorated_dicts",
  "transonic.analyses.get_types_from_transonic_signature",
  "transonic.analyses.justintime.analysis_jit",
  "transonic.analyses.test_analyses.assert_types_from_sig",
  "transonic.analyses.test_util.source",
  "transonic.analyses.util.AnalyseLines",
  "transonic.analyses.util._fill_ast_annotations_class",
  "transonic.analyses.util._fill_ast_annotations_function",
  "transonic.analyses.util.adapt_code_dependance",
  "transonic.analyses.util.change_import_name",
  "transonic.analyses.util.code_ext",
  "transonic.analyses.util.filter_external_code",
  "transonic.analyses.util.find_path",
  "transonic.analyses.util.gather_rawcode_comments",
  "transonic.analyses.util.get_exterior_code",
  "transonic.analyses.util.packages_supported_by_pythran",
  "transonic.analyses.util.print_dumped",
  "transonic.analyses.util.print_unparsed",
  "transonic.annotation.ArrayMeta",
  "transonic.annotation.NDim",
  "transonic.annotation.TemplateVar",
  "transonic.annotation.Type",
  "transonic.annotation.UnionMeta",
  "transonic.annotation.UnionVar",
  "transonic.annotation.compute_pythran_type_from_type",
  "transonic.annotation.compute_pythran_types_from_types",
  "transonic.annotation.compute_signatures_from_typeobjects",
  "transonic.annotation.make_signature_from_template_variables",
  "transonic.annotation.make_signatures_from_typehinted_func",
  "transonic.annotation.names_template_variables",
  "transonic.annotation.normalize_type_name",
  "transonic.annotation.normalized_types",
  "transonic.backends.backends",
  "transonic.backends.base.Backend",
  "transonic.backends.cython.HeaderFunction",
  "transonic.backends.cython.SubBackendJITCython",
  "transonic.backends.cython.analyze_array_type",
  "transonic.backends.cython.compute_cython_type_from_pythran_type",
  "transonic.backends.cython.memoryview_type",
  "transonic.backends.cython.np_ndarray_type",
  "transonic.backends.for_classes.make_code_method_jit",
  "transonic.backends.for_classes.make_new_code_method_from_objects",
  "transonic.backends.for_classes.make_new_code_method_from_source",
  "transonic.backends.numba.SubBackendJITNumba",
  "transonic.backends.numba.add_numba_comments",
  "transonic.backends.py.SubBackendJITPython",
  "transonic.boost",
  "transonic.compiler.SchedulerPopen",
  "transonic.compiler.compile_extension",
  "transonic.compiler.ext_suffix",
  "transonic.compiler.has_to_build",
  "transonic.compiler.make_hex",
  "transonic.compiler.modification_date",
  "transonic.compiler.scheduler",
  "transonic.compiler.scheduler.nb_cpus",
  "transonic.compiler.wait_for_all_extensions",
  "transonic.config.backend_default",
  "transonic.config.has_to_replace",
  "transonic.config.path_root",
  "transonic.config.supported_backends",
  "transonic.dist.ParallelBuildExt",
  "transonic.dist.build_ext_classes",
  "transonic.dist.detect_transonic_extensions",
  "transonic.dist.get_logger",
  "transonic.dist.init_transonic_extensions",
  "transonic.dist.make_backend_files",
  "transonic.dist.modification_date",
  "transonic.for_test_exterior_import_jit.black",
  "transonic.for_test_exterior_import_jit.const",
  "transonic.for_test_exterior_import_jit_2.black",
  "transonic.for_test_exterior_import_jit_2.const",
  "transonic.for_test_init.A",
  "transonic.for_test_init.Transmitter",
  "transonic.for_test_init.check_class",
  "transonic.for_test_init.func0",
  "transonic.for_test_init.func_tmp",
  "transonic.for_test_init.ts",
  "transonic.for_test_justintime.const",
  "transonic.for_test_justintime.fib",
  "transonic.for_test_justintime.func",
  "transonic.for_test_justintime.func0",
  "transonic.for_test_justintime.func0_jitted",
  "transonic.for_test_justintime.jitted_func_import",
  "transonic.jit",
  "transonic.justintime.JIT",
  "transonic.justintime.ModuleJIT",
  "transonic.justintime._COMPILE_JIT",
  "transonic.justintime._get_module_jit",
  "transonic.justintime.modules",
  "transonic.justintime.path_jit",
  "transonic.justintime.path_jit.exists",
  "transonic.log._get_level_number",
  "transonic.log.formatter",
  "transonic.log.get_level",
  "transonic.log.is_enable_for",
  "transonic.log.level",
  "transonic.log.logger",
  "transonic.log.logger.debug",
  "transonic.log.logger.error",
  "transonic.log.logger.info",
  "transonic.log.logger.is_enable_for",
  "transonic.log.logger.set_level",
  "transonic.log.logger.warning",
  "transonic.log.set_level",
  "transonic.log.stream",
  "transonic.mpi.Path",
  "transonic.mpi.PathMPI",
  "transonic.mpi.PathSeq",
  "transonic.mpi.ShellProcessMPI",
  "transonic.mpi._tag",
  "transonic.mpi.barrier",
  "transonic.mpi.bcast",
  "transonic.mpi.comm",
  "transonic.mpi.has_to_build",
  "transonic.mpi.modification_date",
  "transonic.mpi.nb_proc",
  "transonic.mpi.p",
  "transonic.mpi.rank",
  "transonic.path_data_tests.here",
  "transonic.path_data_tests.path_data_tests",
  "transonic.path_data_tests.path_data_tests.exists",
  "transonic.path_data_tests.path_data_tests.glob",
  "transonic.path_data_tests.path_data_tests.split",
  "transonic.run.doc",
  "transonic.run.make_backends_files",
  "transonic.run.parse_args",
  "transonic.run.run",
  "transonic.test_build_ext.cwd",
  "transonic.test_build_ext.setup_dir",
  "transonic.test_init.for_test_init",
  "transonic.test_init_transonified.backend",
  "transonic.test_init_transonified.for_test_init",
  "transonic.test_init_transonified.module_name",
  "transonic.test_justintime.module_name",
  "transonic.test_justintime.path_classes_dir",
  "transonic.test_justintime.path_classes_dir1",
  "transonic.test_justintime.path_jit_dir",
  "transonic.test_justintime.str_relative_path",
  "transonic.test_run.header_suffixes",
  "transonic.test_run.path_dir_out",
  "transonic.util.TypeHintRemover",
  "transonic.util._PYTHRANIZE_AT_IMPORT",
  "transonic.util._mode",
  "transonic.util.black",
  "transonic.util.can_import_accelerator",
  "transonic.util.clear_cached_extensions",
  "transonic.util.ext_suffix",
  "transonic.util.find_module_name_from_path",
  "transonic.util.format_str",
  "transonic.util.get_info_from_ipython",
  "transonic.util.get_ipython_input",
  "transonic.util.get_module_name",
  "transonic.util.get_name_calling_module",
  "transonic.util.get_source_without_decorator",
  "transonic.util.has_to_build",
  "transonic.util.has_to_compile_at_import",
  "transonic.util.has_to_write",
  "transonic.util.import_from_path",
  "transonic.util.input",
  "transonic.util.is_method",
  "transonic.util.make_code_from_fdef_node",
  "transonic.util.make_hex",
  "transonic.util.modification_date",
  "transonic.util.path_jit_classes",
  "transonic.util.path_jit_classes.name",
  "transonic.util.path_root",
  "transonic.util.query_yes_no",
  "transonic.util.strip_typehints",
  "transonic.util.timeit",
  "transonic.util.write_if_has_to_write",
  "transonic_cl.cythonize.path",
  "transonic_cl.run_backend.ext_suffix",
  "transonic_cl.run_backend.logger",
  "transonic_cl.run_backend.main",
  "types.MethodType",
  "typing.Callable",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Union",
  "unittest.TestCase",
  "unittest.skipIf",
  "update_flags",
  "util.extract_returns_annotation",
  "util.extract_variable_annotations",
  "util.filter_code_typevars",
  "util.find_path",
  "util.get_annotations",
  "util.get_exterior_code",
  "util.has_to_build",
  "util.modification_date",
  "warnings.warn"
 ],
 "deps": {
  "BackendExtension": [],
  "Cython": [],
  "IPython": [],
  "add_definition": [],
  "argparse": [],
  "astunparse": [],
  "backends": [],
  "backenize_with_new_header": [],
  "base": [],
  "base_jit": [],
  "beniget": [],
  "black": [],
  "blocks_if": [],
  "capturex": [],
  "colorlog": [],
  "concurrent": [],
  "contextlib": [],
  "copy": [],
  "cython": [],
  "datetime": [],
  "debug": [],
  "decor": [],
  "distutils": [],
  "extast": [],
  "fill_suppressed": [],
  "fluiddyn": [],
  "for_check": [],
  "for_classes": [],
  "for_test_exterior_import_jit": [],
  "for_test_exterior_import_jit_2": [],
  "for_test_init": [],
  "for_test_justintime": [],
  "func": [],
  "functools": [],
  "gast": [],
  "glob": [],
  "hashlib": [],
  "importlib": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "logging": [],
  "mpi": [],
  "mpi4py": [],
  "multiprocessing": [],
  "names": [],
  "numba": [],
  "numpy": [],
  "os": [],
  "parser": [],
  "pathlib": [],
  "pprint": [],
  "psutil": [],
  "py": [],
  "pyfiglet": [],
  "pytest": [],
  "pythran": [],
  "re": [],
  "runpy": [],
  "shutil": [],
  "subprocess": [],
  "sys": [],
  "sysconfig": [],
  "textwrap": [],
  "time": [],
  "timeit": [],
  "tokenize": [],
  "trans": [],
  "transonic": [],
  "transonic_cl": [],
  "types": [],
  "typing": [],
  "unittest": [],
  "update_flags": [],
  "util": [],
  "warnings": []
 }
}