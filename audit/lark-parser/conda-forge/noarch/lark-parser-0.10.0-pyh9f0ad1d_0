{
 "bad": [
  "PyInstaller.utils.hooks.collect_data_files",
  "_apply",
  "_collapse_iambig",
  "_f",
  "_is_ambig_tree",
  "_is_iambig_tree",
  "_to_pydot",
  "aliases",
  "aliases.append",
  "aliases.items",
  "aliases.value",
  "argparse.ArgumentParser",
  "argparse.FileType",
  "ast.literal_eval",
  "codecs.open",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.deque",
  "common.LexerConf",
  "common.ParserConf",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "create_decorator",
  "earley.Parser",
  "earley.Parser.__init__",
  "earley_common.Item",
  "earley_common.TransitiveItem",
  "earley_forest.ForestSumVisitor",
  "earley_forest.ForestToParseTree",
  "earley_forest.ForestToPyDotVisitor",
  "earley_forest.SymbolNode",
  "emit",
  "exceptions.GrammarError",
  "exceptions.LexError",
  "exceptions.ParseError",
  "exceptions.UnexpectedCharacters",
  "exceptions.UnexpectedEOF",
  "exceptions.UnexpectedToken",
  "exceptions.VisitError",
  "f",
  "f.vargs_applied",
  "f.visit_wrapper",
  "func",
  "func.__name__",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "future_builtins.filter",
  "get_action",
  "get_namespace_name",
  "grammar.NonTerminal",
  "grammar.Rule",
  "grammar.Rule.deserialize",
  "grammar.RuleOptions",
  "grammar.Symbol",
  "grammar.Terminal",
  "grammar_analysis.GrammarAnalyzer",
  "grammar_analysis.GrammarAnalyzer.__init__",
  "grammar_analysis.LR0ItemSet",
  "grammar_analysis.Terminal",
  "hashlib.md5",
  "importlib.import_module",
  "inspect.getmembers",
  "inspect.getmro",
  "io.open",
  "is_quasi_complete",
  "itertools.product",
  "itertools.repeat",
  "js2py.translate_js",
  "js2py.translate_js6",
  "json.dumps",
  "lalr_analysis.IntParseTable.deserialize",
  "lalr_analysis.LALR_Analyzer",
  "lalr_analysis.Reduce",
  "lalr_analysis.Shift",
  "lalr_puppet.ParserPuppet",
  "lark.InlineTransformer",
  "lark.Lark",
  "lark.__version__",
  "lark.exceptions.LarkError",
  "lark.exceptions.LexError",
  "lark.exceptions.ParseError",
  "lark.exceptions.UnexpectedCharacters",
  "lark.exceptions.UnexpectedEOF",
  "lark.exceptions.UnexpectedInput",
  "lark.exceptions.UnexpectedToken",
  "lark.exceptions.VisitError",
  "lark.grammar.NonTerminal",
  "lark.grammar.Rule",
  "lark.grammar.RuleOptions",
  "lark.grammar.Symbol",
  "lark.grammar.Terminal",
  "lark.lark.LarkOptions",
  "lark.lark.__version__",
  "lark.lark.re",
  "lark.lark.regex",
  "lark.lexer.CallChain",
  "lark.lexer.Lexer",
  "lark.lexer.LineCounter",
  "lark.lexer.Pattern",
  "lark.lexer.PatternRE",
  "lark.lexer.PatternStr",
  "lark.lexer.TerminalDef",
  "lark.lexer.Token",
  "lark.lexer.TraditionalLexer",
  "lark.lexer.UnlessCallback",
  "lark.lexer._Lex",
  "lark.lexer._build_mres",
  "lark.lexer._create_unless",
  "lark.lexer._regexp_has_newline",
  "lark.lexer.build_mres",
  "lark.load_grammar.ApplyTemplates",
  "lark.load_grammar.CanonizeTree",
  "lark.load_grammar.EBNF_to_BNF",
  "lark.load_grammar.EXT",
  "lark.load_grammar.Grammar",
  "lark.load_grammar.GrammarLoader",
  "lark.load_grammar.IMPORT_PATHS",
  "lark.load_grammar.PrepareAnonTerminals",
  "lark.load_grammar.PrepareGrammar",
  "lark.load_grammar.PrepareLiterals",
  "lark.load_grammar.PrepareSymbols",
  "lark.load_grammar.RULES",
  "lark.load_grammar.RuleTreeToText",
  "lark.load_grammar.SimplifyRule_Visitor",
  "lark.load_grammar.TERMINALS",
  "lark.load_grammar.TerminalTreeToPattern",
  "lark.load_grammar._EMPTY",
  "lark.load_grammar._RE_FLAGS",
  "lark.load_grammar._ReplaceSymbols",
  "lark.load_grammar._TERMINAL_NAMES",
  "lark.load_grammar.__path__",
  "lark.load_grammar._find_used_symbols",
  "lark.load_grammar._imported_grammars",
  "lark.load_grammar._literal_to_pattern",
  "lark.load_grammar._make_joined_pattern",
  "lark.load_grammar._rfind",
  "lark.load_grammar.import_from_grammar_into_namespace",
  "lark.load_grammar.import_grammar",
  "lark.load_grammar.inline_args",
  "lark.load_grammar.load_grammar",
  "lark.load_grammar.nr_deepcopy_tree",
  "lark.load_grammar.options_from_rule",
  "lark.load_grammar.resolve_term_references",
  "lark.load_grammar.symbols_from_strcase",
  "lark.parse_tree_builder.AmbiguousExpander",
  "lark.parse_tree_builder.AmbiguousIntermediateExpander",
  "lark.parse_tree_builder.ChildFilter",
  "lark.parse_tree_builder.ChildFilterLALR",
  "lark.parse_tree_builder.ChildFilterLALR_NoPlaceholders",
  "lark.parse_tree_builder.ExpandSingleChild",
  "lark.parse_tree_builder.PropagatePositions",
  "lark.parse_tree_builder._should_expand",
  "lark.parse_tree_builder.apply_visit_wrapper",
  "lark.parse_tree_builder.inplace_transformer",
  "lark.parse_tree_builder.maybe_create_ambiguous_expander",
  "lark.parse_tree_builder.maybe_create_child_filter",
  "lark.parse_tree_builder.ptb_inline_args",
  "lark.parser_frontends.LALR_WithLexer",
  "lark.parser_frontends.WithLexer",
  "lark.parser_frontends.XEarley",
  "lark.parser_frontends._ParserFrontend",
  "lark.parser_frontends._get_lexer_callbacks",
  "lark.parsers.cyk.CnfWrapper",
  "lark.parsers.cyk.Grammar",
  "lark.parsers.cyk.Parser",
  "lark.parsers.cyk.Rule",
  "lark.parsers.cyk.RuleNode",
  "lark.parsers.cyk.UnitSkipRule",
  "lark.parsers.cyk._bin",
  "lark.parsers.cyk._parse",
  "lark.parsers.cyk._remove_unit_rule",
  "lark.parsers.cyk._split",
  "lark.parsers.cyk._term",
  "lark.parsers.cyk._unit",
  "lark.parsers.cyk.build_unit_skiprule",
  "lark.parsers.cyk.get_any_nt_unit_rule",
  "lark.parsers.cyk.match",
  "lark.parsers.cyk.revert_cnf",
  "lark.parsers.cyk.to_cnf",
  "lark.parsers.cyk.unroll_unit_skiprule",
  "lark.parsers.cyk.xrange",
  "lark.parsers.earley_common.Item",
  "lark.parsers.earley_common.TransitiveItem",
  "lark.parsers.earley_forest.ForestNode",
  "lark.parsers.earley_forest.ForestSumVisitor",
  "lark.parsers.earley_forest.ForestToParseTree",
  "lark.parsers.earley_forest.ForestToPyDotVisitor",
  "lark.parsers.earley_forest.ForestTransformer",
  "lark.parsers.earley_forest.ForestVisitor",
  "lark.parsers.earley_forest.PackedData",
  "lark.parsers.earley_forest.PackedNode",
  "lark.parsers.earley_forest.SymbolNode",
  "lark.parsers.earley_forest.TreeForestTransformer",
  "lark.parsers.grammar_analysis.LR0ItemSet",
  "lark.parsers.grammar_analysis.RulePtr",
  "lark.parsers.grammar_analysis.calculate_sets",
  "lark.parsers.grammar_analysis.update_set",
  "lark.parsers.lalr_analysis.Action",
  "lark.parsers.lalr_analysis.IntParseTable",
  "lark.parsers.lalr_analysis.ParseTable",
  "lark.parsers.lalr_analysis.Reduce",
  "lark.parsers.lalr_analysis.Shift",
  "lark.parsers.lalr_analysis.digraph",
  "lark.parsers.lalr_analysis.traverse",
  "lark.parsers.lalr_parser._Parser",
  "lark.parsers.lalr_puppet.ParserPuppet",
  "lark.parsers.lalr_puppet.Token",
  "lark.reconstruct.WriteTokensTransformer",
  "lark.reconstruct._isalnum",
  "lark.reconstruct.is_iter_empty",
  "lark.reconstruct2.MakeMatchTree",
  "lark.reconstruct2.MatchTree",
  "lark.reconstruct2.WriteTokensTransformer",
  "lark.reconstruct2.is_discarded_terminal",
  "lark.reconstruct2.is_iter_empty",
  "lark.tools.nearley.NearleyToLark",
  "lark.tools.nearley._get_rulename",
  "lark.tools.nearley._nearley_to_lark",
  "lark.tools.nearley.args",
  "lark.tools.nearley.create_code_for_nearley_grammar",
  "lark.tools.nearley.get_arg_parser",
  "lark.tools.nearley.main",
  "lark.tools.nearley.nearley_grammar",
  "lark.tools.nearley.nearley_grammar_parser",
  "lark.tools.nearley.parser",
  "lark.tools.serialize.argparser",
  "lark.tools.serialize.main",
  "lark.tools.serialize.serialize",
  "lark.tools.standalone.EXTRACT_STANDALONE_FILES",
  "lark.tools.standalone._dir",
  "lark.tools.standalone._larkdir",
  "lark.tools.standalone.extract_sections",
  "lark.tools.standalone.main",
  "lark.tools.standalone.strip_docstrings",
  "lark.tree.Meta",
  "lark.tree.Tree",
  "lark.tree.pydot__tree_to_graph",
  "lark.tree_matcher.Token",
  "lark.tree_matcher.Tree",
  "lark.tree_matcher._MakeTreeMatch",
  "lark.tree_matcher._best_from_group",
  "lark.tree_matcher._best_rules_from_group",
  "lark.tree_matcher._match",
  "lark.tree_matcher.is_discarded_terminal",
  "lark.tree_matcher.make_recons_rule",
  "lark.tree_matcher.make_recons_rule_to_term",
  "lark.tree_matcher.parse_rulename",
  "lark.utils.Enumerator",
  "lark.utils.Serialize",
  "lark.utils.SerializeMemoizer",
  "lark.utils._deserialize",
  "lark.utils._serialize",
  "lark.utils.categ_pattern",
  "lark.utils.classtype",
  "lark.utils.logger",
  "lark.utils.regex",
  "lark.visitors.Discard",
  "lark.visitors.Transformer",
  "lark.visitors.TransformerChain",
  "lark.visitors.VisitorBase",
  "lark.visitors._Decoratable",
  "lark.visitors._apply_decorator",
  "lark.visitors._inline_args__func",
  "lark.visitors._vargs_inline",
  "lark.visitors._vargs_meta",
  "lark.visitors._vargs_meta_inline",
  "lark.visitors._vargs_tree",
  "lark.visitors._visitor_args_func_dec",
  "lexer",
  "lexer.ContextualLexer",
  "lexer.Lexer",
  "lexer.PatternRE",
  "lexer.PatternStr",
  "lexer.TerminalDef",
  "lexer.Token",
  "lexer.Token.new_borrow_pos",
  "lexer.TraditionalLexer",
  "lexer.UnexpectedToken",
  "load_grammar.load_grammar",
  "logging.CRITICAL",
  "logging.StreamHandler",
  "logging.getLogger",
  "match",
  "math.isinf",
  "new_leaf",
  "oc",
  "operator.attrgetter",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.pardir",
  "parse_tree_builder.AmbiguousIntermediateExpander",
  "parse_tree_builder.ParseTreeBuilder",
  "parser_frontends.LALR_TraditionalLexer",
  "parser_frontends._get_lexer_callbacks",
  "parser_frontends.get_frontend",
  "parsers.cyk.Parser",
  "parsers.earley.Parser",
  "parsers.grammar_analysis.GrammarAnalyzer",
  "parsers.lalr_parser.LALR_Parser",
  "parsers.lalr_parser.LALR_Parser.deserialize",
  "parsers.xearley.Parser",
  "pickle.dump",
  "pickle.load",
  "postprocess",
  "pydot.Dot",
  "pydot.Edge",
  "pydot.Node",
  "random.randint",
  "re.compile",
  "re.escape",
  "re.match",
  "re.search",
  "re.sub",
  "read",
  "reduce",
  "scan",
  "sre_constants.error",
  "sre_parse.parse",
  "sys.argv",
  "sys.exit",
  "sys.modules.__file__",
  "sys.stdout",
  "sys.version_info",
  "token.INDENT",
  "token.STRING",
  "tokenize.COMMENT",
  "tokenize.generate_tokens",
  "tree.SlottedTree",
  "tree.Tree",
  "tree_matcher.TreeMatcher",
  "tree_matcher.TreeMatcher.__init__",
  "tree_matcher.is_discarded_terminal",
  "types.BuiltinFunctionType",
  "types.ClassType",
  "types.FunctionType",
  "types.MethodType",
  "unicodedata.category",
  "user_func",
  "utils.Enumerator",
  "utils.FS.exists",
  "utils.FS.open",
  "utils.Py36",
  "utils.STRING_TYPE",
  "utils.Serialize",
  "utils.SerializeMemoizer.deserialize",
  "utils.Str",
  "utils.Str.__eq__",
  "utils.Str.__hash__",
  "utils.bfs",
  "utils.classify",
  "utils.classify_bool",
  "utils.combine_alternatives",
  "utils.dedup_list",
  "utils.eval_escaping",
  "utils.fzset",
  "utils.get_regexp_width",
  "utils.isascii",
  "utils.logger.debug",
  "utils.logger.warning",
  "utils.smart_decorator",
  "utils.suppress",
  "vini",
  "vino",
  "visitors.Discard",
  "visitors.InlineTransformer",
  "visitors.Transformer",
  "visitors.Transformer_InPlace",
  "visitors.Transformer_NonRecursive",
  "visitors.Visitor",
  "visitors._vargs_meta",
  "visitors._vargs_meta_inline",
  "visitors.v_args",
  "vpni",
  "vpno",
  "vsni",
  "vsno",
  "vtn",
  "w",
  "wrapper"
 ],
 "deps": {
  "PyInstaller": [],
  "_apply": [],
  "_collapse_iambig": [],
  "_f": [],
  "_is_ambig_tree": [],
  "_is_iambig_tree": [],
  "_to_pydot": [],
  "aliases": [],
  "argparse": [],
  "ast": [],
  "codecs": [],
  "collections": [],
  "common": [],
  "contextlib": [],
  "copy": [],
  "create_decorator": [],
  "earley": [],
  "earley_common": [],
  "earley_forest": [],
  "emit": [],
  "exceptions": [],
  "f": [],
  "func": [],
  "functools": [],
  "future_builtins": [],
  "get_action": [],
  "get_namespace_name": [],
  "grammar": [],
  "grammar_analysis": [],
  "hashlib": [],
  "importlib": [],
  "inspect": [],
  "io": [],
  "is_quasi_complete": [],
  "itertools": [],
  "js2py": [],
  "json": [],
  "lalr_analysis": [],
  "lalr_puppet": [],
  "lark": [],
  "lexer": [],
  "load_grammar": [],
  "logging": [],
  "match": [],
  "math": [],
  "new_leaf": [],
  "oc": [],
  "operator": [],
  "os": [],
  "parse_tree_builder": [],
  "parser_frontends": [],
  "parsers": [],
  "pickle": [],
  "postprocess": [],
  "pydot": [],
  "random": [],
  "re": [],
  "read": [],
  "reduce": [],
  "scan": [],
  "sre_constants": [],
  "sre_parse": [],
  "sys": [],
  "token": [],
  "tokenize": [],
  "tree": [],
  "tree_matcher": [],
  "types": [],
  "unicodedata": [],
  "user_func": [],
  "utils": [],
  "vini": [],
  "vino": [],
  "visitors": [],
  "vpni": [],
  "vpno": [],
  "vsni": [],
  "vsno": [],
  "vtn": [],
  "w": [],
  "wrapper": []
 }
}