{
 "bad": [
  "ABatchable",
  "AVisitor",
  "AllOf",
  "BBatchable",
  "BadVisitor",
  "Batchable",
  "CountVisitor",
  "DependentVisitor",
  "DoesNotMatch",
  "EqualPositionVisitor",
  "NodeFinder",
  "NodeGatherVisitor",
  "NodeVerifyVisitor",
  "P",
  "P.__name__",
  "RemoveBarTransformer",
  "RemoveImportTransformer",
  "SimpleCodemod",
  "SimpleProvider",
  "SomeTransformer",
  "SomeVisitor",
  "TestTransformer",
  "TestVisitor",
  "Visitor",
  "VisitorA",
  "VisitorB",
  "_convert_sequencelike",
  "_convert_testlist_comp",
  "_gather_import_names",
  "_get_codegen_override",
  "_get_default",
  "_is_syntax",
  "_is_whitespace",
  "_matches",
  "_split_illegal_unicode_name",
  "add_param",
  "addclosure",
  "after_leave",
  "before_visit",
  "builtins",
  "check",
  "codecs.BOM_UTF8.decode",
  "codecs.lookup",
  "collections.abc.Sequence",
  "command_class",
  "create_token",
  "dataclasses.field.name",
  "dedent_if_necessary",
  "detect_encoding",
  "different_case_versions",
  "filter_line",
  "get_length",
  "handler",
  "hypothesis.HealthCheck.filter_too_much",
  "hypothesis.HealthCheck.too_slow",
  "hypothesis.Phase.generate",
  "hypothesis.Phase.shrink",
  "hypothesis.settings.get_profile",
  "hypothesis.settings.load_profile",
  "hypothesis.settings.register_profile",
  "hypothesmith.from_grammar",
  "iter.value",
  "itertools",
  "itertools.islice",
  "itertools.permutations",
  "itertools.product",
  "itertools.tee",
  "itertools.zip_longest",
  "leave_func",
  "libcst.CSTTransformer.on_leave",
  "libcst.CSTTransformer.on_leave_attribute",
  "libcst.CSTTransformer.on_visit",
  "libcst.CSTTransformer.on_visit_attribute",
  "libcst.CSTVisitor.on_leave",
  "libcst.CSTVisitor.on_leave_attribute",
  "libcst.CSTVisitor.on_visit",
  "libcst.CSTVisitor.on_visit_attribute",
  "libcst.MaybeSentinel.DEFAULT",
  "libcst.RemovalSentinel.REMOVE",
  "libcst.__dict__.items",
  "libcst.__dict__.values",
  "libcst._exceptions.EOFSentinel.EOF",
  "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
  "libcst._nodes.expression.ExpressionPosition.LEFT",
  "libcst._nodes.expression.ExpressionPosition.RIGHT",
  "libcst._nodes.op.Colon.field",
  "libcst._nodes.op.Comma.field",
  "libcst._nodes.whitespace.COMMENT_RE",
  "libcst._nodes.whitespace.COMMENT_RE.match",
  "libcst._nodes.whitespace.NEWLINE_RE",
  "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
  "libcst._nodes.whitespace.NEWLINE_RE.match",
  "libcst._nodes.whitespace.NEWLINE_RE.search",
  "libcst._nodes.whitespace.SIMPLE_WHITESPACE_RE",
  "libcst._nodes.whitespace.SIMPLE_WHITESPACE_RE.match",
  "libcst._nodes.whitespace.SimpleWhitespace.field",
  "libcst._nodes.whitespace.TrailingWhitespace.field",
  "libcst._parser.parso.python.token.PythonTokenTypes.ASYNC",
  "libcst._parser.parso.python.token.PythonTokenTypes.AWAIT",
  "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
  "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
  "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
  "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
  "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
  "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
  "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_STRING",
  "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
  "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
  "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
  "libcst._parser.parso.python.token.PythonTokenTypes.NUMBER",
  "libcst._parser.parso.python.token.PythonTokenTypes.OP",
  "libcst._parser.parso.python.token.PythonTokenTypes.STRING",
  "libcst._removal_sentinel.RemovalSentinel.REMOVE",
  "libcst._version.LIBCST_VERSION",
  "libcst.codegen.gather.all_libcst_nodes",
  "libcst.codegen.gather.imports",
  "libcst.codegen.gather.imports.items",
  "libcst.codegen.gather.nodebases",
  "libcst.codegen.gather.nodebases.__name__",
  "libcst.codegen.gather.nodebases.keys",
  "libcst.codegen.gather.nodeuses",
  "libcst.codegen.gather.typeclasses",
  "libcst.codegen.gen_matcher_classes.generated_code",
  "libcst.codegen.gen_type_mapping.generated_code",
  "libcst.codegen.gen_visitor_functions.generated_code",
  "libcst.codemod.CodemodTest.make_fixture_data",
  "libcst.codemod._runner.SkipReason.BLACKLISTED",
  "libcst.codemod._runner.SkipReason.GENERATED",
  "libcst.codemod._runner.SkipReason.OTHER",
  "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
  "libcst.codemod.visitors.GatherCommentsVisitor.METADATA_DEPENDENCIES",
  "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
  "libcst.codemod.visitors.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
  "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import",
  "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
  "libcst.codemod.visitors._add_imports.AddImportsVisitor.CONTEXT_KEY",
  "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
  "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
  "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.CONTEXT_KEY",
  "libcst.matchers.__init__.AnnotationMatchType",
  "libcst.matchers.__init__.AnnotationOrNoneMatchType",
  "libcst.matchers.__init__.ArgMatchType",
  "libcst.matchers.__init__.AsNameOrNoneMatchType",
  "libcst.matchers.__init__.AssignEqualMatchType",
  "libcst.matchers.__init__.AssignEqualOrNoneMatchType",
  "libcst.matchers.__init__.AssignTargetMatchType",
  "libcst.matchers.__init__.AsynchronousOrNoneMatchType",
  "libcst.matchers.__init__.AttributeOrNameMatchType",
  "libcst.matchers.__init__.AttributeOrNameOrNoneMatchType",
  "libcst.matchers.__init__.BaseAssignTargetExpression",
  "libcst.matchers.__init__.BaseAssignTargetExpressionMatchType",
  "libcst.matchers.__init__.BaseAugOp",
  "libcst.matchers.__init__.BaseAugOpMatchType",
  "libcst.matchers.__init__.BaseBinaryOp",
  "libcst.matchers.__init__.BaseBinaryOpMatchType",
  "libcst.matchers.__init__.BaseBooleanOp",
  "libcst.matchers.__init__.BaseBooleanOpMatchType",
  "libcst.matchers.__init__.BaseComp",
  "libcst.matchers.__init__.BaseCompOp",
  "libcst.matchers.__init__.BaseCompOpMatchType",
  "libcst.matchers.__init__.BaseCompoundStatement",
  "libcst.matchers.__init__.BaseDelTargetExpression",
  "libcst.matchers.__init__.BaseDelTargetExpressionMatchType",
  "libcst.matchers.__init__.BaseDict",
  "libcst.matchers.__init__.BaseDictElement",
  "libcst.matchers.__init__.BaseDictElementMatchType",
  "libcst.matchers.__init__.BaseElement",
  "libcst.matchers.__init__.BaseElementMatchType",
  "libcst.matchers.__init__.BaseExpression",
  "libcst.matchers.__init__.BaseExpressionMatchType",
  "libcst.matchers.__init__.BaseExpressionOrFromOrNoneMatchType",
  "libcst.matchers.__init__.BaseExpressionOrNoneMatchType",
  "libcst.matchers.__init__.BaseFormattedStringContent",
  "libcst.matchers.__init__.BaseFormattedStringContentMatchType",
  "libcst.matchers.__init__.BaseList",
  "libcst.matchers.__init__.BaseNumber",
  "libcst.matchers.__init__.BaseParenthesizableWhitespace",
  "libcst.matchers.__init__.BaseParenthesizableWhitespaceMatchType",
  "libcst.matchers.__init__.BaseSet",
  "libcst.matchers.__init__.BaseSimpleComp",
  "libcst.matchers.__init__.BaseSlice",
  "libcst.matchers.__init__.BaseSliceMatchType",
  "libcst.matchers.__init__.BaseSmallStatement",
  "libcst.matchers.__init__.BaseSmallStatementMatchType",
  "libcst.matchers.__init__.BaseStatement",
  "libcst.matchers.__init__.BaseStatementMatchType",
  "libcst.matchers.__init__.BaseString",
  "libcst.matchers.__init__.BaseSuite",
  "libcst.matchers.__init__.BaseSuiteMatchType",
  "libcst.matchers.__init__.BaseUnaryOp",
  "libcst.matchers.__init__.BaseUnaryOpMatchType",
  "libcst.matchers.__init__.ColonMatchType",
  "libcst.matchers.__init__.CommaMatchType",
  "libcst.matchers.__init__.CommentOrNoneMatchType",
  "libcst.matchers.__init__.CompForMatchType",
  "libcst.matchers.__init__.CompForOrNoneMatchType",
  "libcst.matchers.__init__.CompIfMatchType",
  "libcst.matchers.__init__.ComparisonTargetMatchType",
  "libcst.matchers.__init__.DecoratorMatchType",
  "libcst.matchers.__init__.DotMatchType",
  "libcst.matchers.__init__.ElseOrNoneMatchType",
  "libcst.matchers.__init__.EmptyLineMatchType",
  "libcst.matchers.__init__.ExceptHandlerMatchType",
  "libcst.matchers.__init__.FinallyOrNoneMatchType",
  "libcst.matchers.__init__.FromOrNoneMatchType",
  "libcst.matchers.__init__.IfOrElseOrNoneMatchType",
  "libcst.matchers.__init__.ImportAliasMatchType",
  "libcst.matchers.__init__.LeftCurlyBraceMatchType",
  "libcst.matchers.__init__.LeftParenMatchType",
  "libcst.matchers.__init__.LeftParenOrNoneMatchType",
  "libcst.matchers.__init__.LeftSquareBracketMatchType",
  "libcst.matchers.__init__.MetadataMatchType",
  "libcst.matchers.__init__.NameItemMatchType",
  "libcst.matchers.__init__.NameMatchType",
  "libcst.matchers.__init__.NameOrAttributeOrCallMatchType",
  "libcst.matchers.__init__.NameOrNoneMatchType",
  "libcst.matchers.__init__.NameOrTupleOrListMatchType",
  "libcst.matchers.__init__.NewlineMatchType",
  "libcst.matchers.__init__.ParamMatchType",
  "libcst.matchers.__init__.ParamOrNoneMatchType",
  "libcst.matchers.__init__.ParamOrParamStarMatchType",
  "libcst.matchers.__init__.ParamSlashMatchType",
  "libcst.matchers.__init__.ParametersMatchType",
  "libcst.matchers.__init__.RightCurlyBraceMatchType",
  "libcst.matchers.__init__.RightParenMatchType",
  "libcst.matchers.__init__.RightParenOrNoneMatchType",
  "libcst.matchers.__init__.RightSquareBracketMatchType",
  "libcst.matchers.__init__.SemicolonMatchType",
  "libcst.matchers.__init__.SimpleStatementLineOrBaseCompoundStatementMatchType",
  "libcst.matchers.__init__.SimpleStringOrFormattedStringMatchType",
  "libcst.matchers.__init__.SimpleStringOrFormattedStringOrConcatenatedStringMatchType",
  "libcst.matchers.__init__.SimpleWhitespaceMatchType",
  "libcst.matchers.__init__.SubscriptElementMatchType",
  "libcst.matchers.__init__.TrailingWhitespaceMatchType",
  "libcst.matchers.__init__.WithItemMatchType",
  "libcst.matchers.__init__._NodeABC",
  "libcst.matchers.__init__.boolMatchType",
  "libcst.matchers.__init__.strMatchType",
  "libcst.matchers.__init__.strOrNoneMatchType",
  "libcst.matchers._decorators.CONSTRUCTED_LEAVE_MATCHER_ATTR",
  "libcst.matchers._decorators.CONSTRUCTED_VISIT_MATCHER_ATTR",
  "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR",
  "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR",
  "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING",
  "libcst.metadata.ExpressionContext.DEL",
  "libcst.metadata.ExpressionContext.LOAD",
  "libcst.metadata.ExpressionContext.STORE",
  "libcst.metadata.QualifiedNameProvider.has_name",
  "libcst.metadata.QualifiedNameSource.IMPORT",
  "libcst.metadata.QualifiedNameSource.LOCAL",
  "libcst.metadata.expression_context_provider.ExpressionContext.DEL",
  "libcst.metadata.expression_context_provider.ExpressionContext.LOAD",
  "libcst.metadata.expression_context_provider.ExpressionContext.STORE",
  "libcst.metadata.scope_provider.QualifiedNameSource.BUILTIN",
  "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
  "libcst.metadata.scope_provider.QualifiedNameSource.LOCAL",
  "libcst.tests.test_pyre_integration.TEST_SUITE_PATH",
  "method",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "multiprocessing.cpu_count",
  "object.__getattribute__",
  "object.__setattr__",
  "option",
  "os.environ.get",
  "os.getcwd",
  "os.linesep.join",
  "os.listdir",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.remove",
  "os.rename",
  "p",
  "re.UNICODE",
  "s",
  "slice._codegen",
  "slice.value",
  "slice.visit",
  "slice.with_changes",
  "str.isidentifier",
  "str.strip",
  "sys",
  "sys.argv",
  "sys.exit",
  "sys.stderr",
  "sys.stdin.read",
  "sys.version_info",
  "time",
  "time.time",
  "typing.ForwardRef",
  "unittest.mock.patch.object",
  "update_annotation",
  "update_annotations",
  "v",
  "validator",
  "visit_func"
 ],
 "deps": {
  "ABatchable": [],
  "AVisitor": [],
  "AllOf": [],
  "BBatchable": [],
  "BadVisitor": [],
  "Batchable": [],
  "CountVisitor": [],
  "DependentVisitor": [],
  "DoesNotMatch": [],
  "EqualPositionVisitor": [],
  "NodeFinder": [],
  "NodeGatherVisitor": [],
  "NodeVerifyVisitor": [],
  "P": [],
  "RemoveBarTransformer": [],
  "RemoveImportTransformer": [],
  "SimpleCodemod": [],
  "SimpleProvider": [],
  "SomeTransformer": [],
  "SomeVisitor": [],
  "TestTransformer": [],
  "TestVisitor": [],
  "Visitor": [],
  "VisitorA": [],
  "VisitorB": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_convert_sequencelike": [],
  "_convert_testlist_comp": [],
  "_gather_import_names": [],
  "_get_codegen_override": [],
  "_get_default": [],
  "_is_syntax": [],
  "_is_whitespace": [],
  "_matches": [],
  "_split_illegal_unicode_name": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "add_param": [],
  "addclosure": [],
  "after_leave": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "before_visit": [],
  "builtins": [],
  "check": [],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "command_class": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "create_token": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.8-pyh787bdff_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dedent_if_necessary": [],
  "detect_encoding": [],
  "different_case_versions": [],
  "difflib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "enum": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "filter_line": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_length": [],
  "handler": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.23.12-py_0"
  ],
  "hypothesmith": [],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "iter": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "leave_func": [],
  "libcst": [],
  "method": [],
  "multiprocessing": [],
  "mypy_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "mypy_extensions/conda-forge/linux-64/mypy_extensions-0.4.2-py37_0"
  ],
  "object": [],
  "option": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "p": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "queue": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "s": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "slice": [],
  "str": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "tokenize": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "typing_inspect": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_inspect/conda-forge/noarch/typing_inspect-0.5.0-py_1"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "update_annotation": [],
  "update_annotations": [],
  "v": [],
  "validator": [],
  "visit_func": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ]
 }
}