{
 "bad": [
  "Bias",
  "absl.app.UsageError",
  "absl.app.run",
  "absl.logging.INFO",
  "absl.logging.info",
  "absl.logging.log_every_n",
  "absl.testing.absltest.TestCase",
  "absl.testing.absltest.main",
  "absl.testing.parameterized.TestCase",
  "absl.testing.parameterized.named_parameters",
  "absl.testing.parameterized.parameters",
  "accuracy",
  "apply_fn",
  "apply_fn_g",
  "apply_fn_h",
  "apply_jax",
  "apply_tf",
  "as_np_f64",
  "avg_pool",
  "axis_layer",
  "block",
  "block_cls",
  "block_group",
  "bn",
  "bn1",
  "bn2",
  "bn_i",
  "body_fun",
  "branch_fun",
  "bsuite.environments.catch.Catch",
  "build_env",
  "c",
  "c.params_dict",
  "c_first",
  "c_first_layer",
  "c_last",
  "c_last_layer",
  "clone",
  "cls",
  "cond_fun",
  "container",
  "conv",
  "conv_i",
  "core",
  "core.initial_state",
  "core_cls",
  "create_core",
  "custom_create_x",
  "custom_get_x",
  "custom_x",
  "dec_fun",
  "dec_stateful_fun",
  "depthwise",
  "dequeue",
  "df_fn",
  "double_bias",
  "double_bias.initial_state",
  "double_bias.params_dict",
  "ema",
  "ema.average",
  "ema.initialize",
  "ema_fast",
  "ema_slow",
  "ema_update",
  "emb",
  "emb.embed_dim",
  "emb.embeddings",
  "emb.vocab_size",
  "enqueue_traj",
  "ent_loss_fn",
  "examples.imagenet.dataset.Batch",
  "examples.imagenet.dataset.Split",
  "examples.imagenet.dataset.Split.from_string",
  "examples.imagenet.dataset.load",
  "examples.impala.actor.pull_params",
  "examples.impala.actor.unroll",
  "examples.impala.actor.unroll_and_push",
  "examples.impala.agent.initial_params",
  "examples.impala.agent.initial_state",
  "examples.impala.learner.run",
  "f",
  "f.__doc__",
  "f.__name__",
  "f.dtype",
  "fn",
  "format_path",
  "forward_fn",
  "forward_fn.apply",
  "forward_fn.init",
  "fun",
  "get",
  "get_params",
  "get_updates",
  "get_x",
  "grad_fun",
  "grad_hk_remat",
  "grad_jax_remat",
  "graph_fun",
  "haiku.__file__",
  "haiku._src.base",
  "haiku._src.base.PRNGSequence",
  "haiku._src.base.PRNGSequenceState",
  "haiku._src.base.StateChangedError",
  "haiku._src.base.StatePair",
  "haiku._src.base.assert_context",
  "haiku._src.base.assert_no_new_parameters",
  "haiku._src.base.assert_state_unchanged",
  "haiku._src.base.current_frame",
  "haiku._src.base.custom_creator",
  "haiku._src.base.custom_getter",
  "haiku._src.base.extract_state",
  "haiku._src.base.frame_stack",
  "haiku._src.base.get_parameter",
  "haiku._src.base.get_state",
  "haiku._src.base.inside_transform",
  "haiku._src.base.maybe_next_rng_key",
  "haiku._src.base.new_context",
  "haiku._src.base.next_rng_key",
  "haiku._src.base.next_rng_key_internal",
  "haiku._src.base.next_rng_keys",
  "haiku._src.base.params_frozen",
  "haiku._src.base.set_state",
  "haiku._src.base.with_rng",
  "haiku._src.data_structures",
  "haiku._src.data_structures.FlatComponents",
  "haiku._src.data_structures.FlatMapping",
  "haiku._src.data_structures.Stack",
  "haiku._src.data_structures.ThreadLocalStack",
  "haiku._src.data_structures.to_immutable_dict",
  "haiku._src.data_structures.to_mutable_dict",
  "haiku._src.module",
  "haiku._src.module.Module",
  "haiku._src.module.hook_methods",
  "haiku._src.module.modules_with_named_call",
  "haiku._src.module.profiler_name_scopes",
  "haiku._src.module.transparent",
  "haiku._src.utils.assert_minimum_rank",
  "haiku._src.utils.auto_repr",
  "haiku._src.utils.get_channel_index",
  "haiku._src.utils.indent",
  "haiku._src.utils.replicate",
  "haiku._src.utils.simple_dtype",
  "haiku._src.utils.tree_bytes",
  "haiku._src.utils.tree_size",
  "hidden_to_hidden",
  "init",
  "init_fn",
  "init_jax",
  "init_tf",
  "initial_conv",
  "input_to_hidden",
  "is_new",
  "is_new_rng",
  "itertools.permutations",
  "itertools.product",
  "jax.config.config.update",
  "jax.experimental.jax2tf.convert",
  "jax.experimental.optimizers.l2_norm",
  "jax_fn",
  "jax_transform",
  "jaxed_fn",
  "jf_fn",
  "jitted_init",
  "layer",
  "layer.initial_state",
  "layer.input_size",
  "ln",
  "logging_creator",
  "logging_getter",
  "loss_fn",
  "main_branch",
  "mapped_pure_fun",
  "max_pool",
  "maybe_ema",
  "maybe_sn",
  "maybe_three",
  "mlp",
  "mod",
  "mod.bias_shape",
  "mod.name",
  "model",
  "model.block_groups",
  "model.init",
  "module_fn",
  "module_matching",
  "named_fun",
  "net",
  "net_curried",
  "net_factory",
  "next_creator",
  "next_getter",
  "norm",
  "numpy.abs",
  "numpy.all",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_3d",
  "numpy.broadcast_to",
  "numpy.delete",
  "numpy.dot",
  "numpy.empty_like",
  "numpy.expand_dims",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.full",
  "numpy.int32",
  "numpy.int8",
  "numpy.mean",
  "numpy.ndarray",
  "numpy.nditer",
  "numpy.ones",
  "numpy.prod",
  "numpy.product",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.uniform",
  "numpy.sqrt",
  "numpy.square",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.tanh",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tril",
  "numpy.unique",
  "numpy.zeros",
  "numpy.zeros_like",
  "opt_init",
  "optimizer",
  "orig_next_rng_key",
  "out_tree",
  "p",
  "params_init",
  "pointwise",
  "predicate",
  "render_graph",
  "resnet_class",
  "rng_count_f",
  "s",
  "s.peek",
  "s.pop",
  "s.push",
  "sample_fn",
  "scan",
  "seq",
  "seq.params_dict",
  "slice_layer",
  "sn",
  "sn.sigma",
  "sphinxcontrib.katex.latex_defs_to_katex_macros",
  "stateful_named_call",
  "tb_pg_loss_fn",
  "tensorflow.compat.v2.Tensor",
  "tensorflow.compat.v2.cast",
  "tensorflow.compat.v2.cond",
  "tensorflow.compat.v2.data.Dataset",
  "tensorflow.compat.v2.data.experimental.AUTOTUNE",
  "tensorflow.compat.v2.enable_v2_behavior",
  "tensorflow.compat.v2.int32",
  "tensorflow.compat.v2.io.decode_raw",
  "tensorflow.compat.v2.nest.map_structure",
  "tensorflow.compat.v2.pad",
  "tensorflow.compat.v2.size",
  "tensorflow.compat.v2.squeeze",
  "tensorflow.compat.v2.strings.unicode_split",
  "tensorflow.compat.v2.transpose",
  "tensorflow.compat.v2.uint8",
  "tensorflow.function",
  "tensorflow_datasets.Split",
  "tensorflow_datasets.Split.TEST",
  "tensorflow_datasets.Split.TRAIN",
  "tensorflow_datasets.as_numpy",
  "tensorflow_datasets.load",
  "tf_transform",
  "three",
  "token_embedding_map",
  "topk_mask_internal",
  "torso",
  "torso_net",
  "transformer",
  "tree_map",
  "type_of_sequence",
  "unroll",
  "unsafe",
  "update",
  "update_fn",
  "v_apply",
  "value_and_grad_fun",
  "vanilla",
  "vanilla.initial_state",
  "vanilla.params_dict",
  "vmap_inner",
  "vqvae_f",
  "vqvae_f.apply",
  "vqvae_f.init",
  "vqvae_module",
  "vqvae_module.embeddings",
  "vtrace_td_error_and_advantage",
  "x"
 ],
 "deps": [
  [
   "absl-py-0.1.10-py_0",
   "absl-py-0.10.0-py36hc560c46_1",
   "absl-py-0.10.0-py37hc8dfbb8_1",
   "absl-py-0.10.0-pyhd8ed1ab_1",
   "absl-py-0.11.0-pyhd8ed1ab_0",
   "absl-py-0.2.2-py_0",
   "absl-py-0.3.0-py_0",
   "absl-py-0.4.0-py_0",
   "absl-py-0.4.1-py_0",
   "absl-py-0.5.0-py_0",
   "absl-py-0.6.1-py36_0",
   "absl-py-0.7.0-py36_1000",
   "absl-py-0.7.0-py37_1000",
   "absl-py-0.8.0-py27_0",
   "absl-py-0.9.0-py27h8c360ce_1"
  ],
  [
   "constructor-1.3.0-py27_0",
   "constructor-1.3.0-py34_0",
   "constructor-1.3.1-py34_1",
   "constructor-1.3.3-py35_0",
   "constructor-2.0.1-py36_0",
   "constructor-2.0.2-py27_0",
   "constructor-2.2.0-py27_0",
   "constructor-2.2.0-py27_1000",
   "constructor-3.0.1-py37_0",
   "constructor-3.0.2-py37hc8dfbb8_0",
   "constructor-3.1.0-py36h9f0ad1d_0",
   "constructor-3.1.0-py37hc8dfbb8_3",
   "constructor-3.1.0-py38h32f6830_0",
   "constructor-3.2.0-py36hd000896_1",
   "constructor-3.2.0-py37h89c1867_1",
   "constructor-3.2.0-py38h578d9bd_0"
  ],
  [
   "dm-haiku-0.0.3-pyh44b312d_0"
  ],
  [
   "dm-haiku-0.0.3-pyh44b312d_0"
  ],
  [
   "dm-haiku-0.0.3-pyh44b312d_0"
  ],
  [
   "jax-0.2.7-pyhd8ed1ab_0",
   "jax-0.2.8-pyhd8ed1ab_0",
   "jax-0.2.9-pyhd8ed1ab_0"
  ],
  [
   "sphinx-1.4.5-py34_0",
   "sphinx-1.4.5-py35_0",
   "sphinx-1.4.6-py27_0",
   "sphinx-1.4.6-py34_0",
   "sphinx-1.4.8-py35_0",
   "sphinx-1.5-py27_0",
   "sphinx-1.5.1-py35_0",
   "sphinx-1.5.1-py36_0",
   "sphinx-1.5.2-py35_0",
   "sphinx-1.5.3-py35_0",
   "sphinx-1.5.4-py27_0",
   "sphinx-1.5.4-py35_0",
   "sphinx-1.5.6-py35_0",
   "sphinx-1.5.6-py36_0",
   "sphinx-1.6.1-py35_0",
   "sphinx-1.6.3-py35_0",
   "sphinx-1.6.4-py27_0",
   "sphinx-1.6.4-py35_0",
   "sphinx-1.6.6-py35_0",
   "sphinx-1.6.7-py35_0",
   "sphinx-1.6.7-py36_0",
   "sphinx-1.7.0-py27_0",
   "sphinx-1.7.1-py27_0",
   "sphinx-1.7.4-py36_0",
   "sphinx-1.7.5-py27_0",
   "sphinx-1.7.8-py37_0",
   "sphinx-1.8.0-py36_0",
   "sphinx-1.8.1-py27_0",
   "sphinx-1.8.1-py35_0",
   "sphinx-1.8.3-py37_1000",
   "sphinx-1.8.4-py37_0",
   "sphinx-2.0.0-py_1",
   "sphinx-2.0.0-py_2",
   "sphinx-2.0.1-py_0",
   "sphinx-2.1.0-py_0",
   "sphinx-2.1.1-py_0",
   "sphinx-2.1.2-py_0",
   "sphinx-2.2.0-py_0",
   "sphinx-2.2.1-py_0",
   "sphinx-2.2.2-py_0",
   "sphinx-2.3.0-py_0",
   "sphinx-2.3.1-py_0",
   "sphinx-2.4.0-py_0",
   "sphinx-2.4.1-py_0",
   "sphinx-2.4.2-py_0",
   "sphinx-2.4.3-py_0",
   "sphinx-2.4.4-py_0",
   "sphinx-3.0.0-py_0",
   "sphinx-3.0.1-py_0",
   "sphinx-3.0.2-py_0",
   "sphinx-3.0.3-py_0",
   "sphinx-3.0.4-py_0",
   "sphinx-3.1.0-py_0",
   "sphinx-3.1.1-py_0",
   "sphinx-3.1.2-py_0",
   "sphinx-3.2.0-py_0",
   "sphinx-3.2.1-py_0",
   "sphinx-3.3.0-pyhd8ed1ab_0",
   "sphinx-3.3.1-pyhd8ed1ab_0",
   "sphinx-3.3.1-pyhd8ed1ab_1",
   "sphinx-3.4.0-pyhd8ed1ab_0",
   "sphinx-3.4.1-pyhd8ed1ab_0",
   "sphinx-3.4.2-pyhd8ed1ab_0",
   "sphinx-3.4.3-pyhd8ed1ab_0",
   "sphinx-3.5.0-pyhd8ed1ab_0",
   "sphinx-3.5.1-pyhd8ed1ab_0"
  ],
  [
   "typing-3.6.1-py35_0",
   "typing-3.6.2-py36_0",
   "typing-3.6.4-py27_0",
   "typing-3.6.6-py27_0",
   "typing-3.6.6-py35_0"
  ]
 ]
}