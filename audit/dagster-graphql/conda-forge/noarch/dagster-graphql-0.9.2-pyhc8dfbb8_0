{
 "bad": [
  "BarLogger",
  "DauphinOutput",
  "EnumRegisteringMetaclass",
  "_f",
  "_get_solid_handles",
  "_launch_pipeline_execution",
  "_yield_all",
  "a_solid_with_multilayered_config",
  "a_solid_with_three_field_config",
  "add_four",
  "apply_to_three",
  "click",
  "click.Choice",
  "click.File",
  "click.STRING",
  "click.UsageError",
  "click.command",
  "click.option",
  "click.testing.CliRunner",
  "click.version_option",
  "collections.defaultdict",
  "construct_basic_params",
  "contextlib.contextmanager",
  "copy",
  "copy.deepcopy",
  "create_execution_metadata",
  "create_execution_params",
  "dagster.DagsterEventType.STEP_FAILURE.value",
  "dagster.DagsterEventType.STEP_SKIPPED.value",
  "dagster.DagsterEventType.STEP_SUCCESS.value",
  "dagster.config.config_type.ConfigTypeKind.ANY",
  "dagster.config.config_type.ConfigTypeKind.ARRAY",
  "dagster.config.config_type.ConfigTypeKind.ENUM",
  "dagster.config.config_type.ConfigTypeKind.NONEABLE",
  "dagster.config.config_type.ConfigTypeKind.SCALAR",
  "dagster.config.config_type.ConfigTypeKind.SCALAR_UNION",
  "dagster.config.config_type.ConfigTypeKind.SELECTOR",
  "dagster.core.errors.DagsterInvalidConfigError.__class__.__name__",
  "dagster.core.events.DagsterEventType.ENGINE_EVENT",
  "dagster.core.events.DagsterEventType.HOOK_COMPLETED",
  "dagster.core.events.DagsterEventType.HOOK_ERRORED",
  "dagster.core.events.DagsterEventType.HOOK_SKIPPED",
  "dagster.core.events.DagsterEventType.OBJECT_STORE_OPERATION",
  "dagster.core.events.DagsterEventType.PIPELINE_FAILURE",
  "dagster.core.events.DagsterEventType.PIPELINE_INIT_FAILURE",
  "dagster.core.events.DagsterEventType.PIPELINE_START",
  "dagster.core.events.DagsterEventType.PIPELINE_SUCCESS",
  "dagster.core.events.DagsterEventType.STEP_EXPECTATION_RESULT",
  "dagster.core.events.DagsterEventType.STEP_FAILURE",
  "dagster.core.events.DagsterEventType.STEP_INPUT",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION.value",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.events.DagsterEventType.STEP_RESTARTED",
  "dagster.core.events.DagsterEventType.STEP_SKIPPED",
  "dagster.core.events.DagsterEventType.STEP_START",
  "dagster.core.events.DagsterEventType.STEP_SUCCESS",
  "dagster.core.events.DagsterEventType.STEP_UP_FOR_RETRY",
  "dagster.core.events.STEP_EVENTS.copy",
  "dagster.core.events.STEP_EVENTS.union",
  "dagster.core.instance.InstanceType.EPHEMERAL",
  "dagster.core.scheduler.ScheduleTickStatus.FAILURE",
  "dagster.core.scheduler.ScheduleTickStatus.SUCCESS",
  "dagster.core.scheduler.scheduler.ScheduleStatus.RUNNING.value",
  "dagster.core.scheduler.scheduler.ScheduleStatus.STOPPED.value",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDERR",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDOUT",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.NOT_STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.SUCCESS",
  "dagster.core.types.dagster_type.DagsterTypeKind.LIST",
  "dagster.core.types.dagster_type.DagsterTypeKind.NOTHING",
  "dagster.core.types.dagster_type.DagsterTypeKind.NULLABLE",
  "dagster.grpc.types.ScheduleExecutionDataMode.PREVIEW",
  "dagster.seven.mock.MagicMock",
  "dagster.seven.mock.patch",
  "dagster.seven.urljoin",
  "dagster.seven.urlparse",
  "dagster_graphql.client.util.HANDLED_EVENTS.values",
  "dagster_graphql.dauphin.Argument",
  "dagster_graphql.dauphin.Boolean",
  "dagster_graphql.dauphin.Enum",
  "dagster_graphql.dauphin.Enum.from_enum",
  "dagster_graphql.dauphin.Field",
  "dagster_graphql.dauphin.Float",
  "dagster_graphql.dauphin.GenericScalar",
  "dagster_graphql.dauphin.ID",
  "dagster_graphql.dauphin.InputObjectType",
  "dagster_graphql.dauphin.Int",
  "dagster_graphql.dauphin.Interface",
  "dagster_graphql.dauphin.List",
  "dagster_graphql.dauphin.Mutation",
  "dagster_graphql.dauphin.NonNull",
  "dagster_graphql.dauphin.ObjectType",
  "dagster_graphql.dauphin.Scalar",
  "dagster_graphql.dauphin.String",
  "dagster_graphql.dauphin.Union",
  "dagster_graphql.dauphin.create_schema",
  "dagster_graphql.dauphin.non_null_list",
  "dagster_graphql.implementation.execution.__init__._do_execute_plan",
  "dagster_graphql.schema.schedules.__init__.DauphinReconcileSchedulerStateSuccess",
  "dagster_graphql.schema.schedules.__init__.DauphinScheduleStateResult",
  "dagster_graphql.schema.schedules.__init__.DauphinScheduleTickFailureData",
  "dagster_graphql.schema.schedules.__init__.DauphinScheduleTickSuccessData",
  "div_four",
  "emit_failed_expectation",
  "emit_successful_expectation",
  "emit_successful_expectation_no_metadata",
  "errors.DauphinDagsterTypeNotFoundError",
  "errors.DauphinPythonError",
  "event_metadata_entries",
  "execution.DauphinExecutionPlan",
  "fail",
  "fail_subset",
  "first_event_of_type",
  "fn",
  "func",
  "functools.partial",
  "get_dauphin_pipeline_from_selector",
  "get_input_one",
  "get_input_two",
  "get_step_output_event",
  "get_used_solid_map",
  "graphql_context_test_suite.GraphQLContextVariant.all_readonly_variants",
  "graphql_context_test_suite.GraphQLContextVariant.all_variants",
  "graphql_context_test_suite.GraphQLContextVariant.asset_aware_sqlite_instance_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.in_memory_instance_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.postgres_with_sync_run_launcher_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_in_memory_instance_grpc",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_in_memory_instance_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_in_memory_instance_multi_location",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_in_memory_instance_out_of_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_postgres_instance_grpc",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_postgres_instance_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_postgres_instance_multi_location",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_postgres_instance_out_of_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_sqlite_instance_external_grpc_server",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_sqlite_instance_grpc",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_sqlite_instance_in_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_sqlite_instance_multi_location",
  "graphql_context_test_suite.GraphQLContextVariant.readonly_sqlite_instance_out_of_process_env",
  "graphql_context_test_suite.GraphQLContextVariant.sqlite_with_default_run_launcher_in_process_env",
  "hard_fail_or_0",
  "has_event_of_type",
  "increment",
  "materialize",
  "one",
  "os.path.exists",
  "os.path.isfile",
  "pytest.mark.asset_aware_instance",
  "pytest.mark.default_run_launcher",
  "pytest.mark.external_grpc_server_env",
  "pytest.mark.graphql_context_test_suite",
  "pytest.mark.grpc_env",
  "pytest.mark.hosted_user_process_env",
  "pytest.mark.in_memory_instance",
  "pytest.mark.multi_location",
  "pytest.mark.out_of_process_env",
  "pytest.mark.parametrize",
  "pytest.mark.postgres_instance",
  "pytest.mark.readonly",
  "pytest.mark.skipif",
  "pytest.mark.sqlite_instance",
  "pytest.mark.sync_run_launcher",
  "reset",
  "return_any",
  "return_bool",
  "return_foo",
  "return_hello",
  "return_hello_world",
  "return_int",
  "return_one",
  "return_six",
  "return_str",
  "rx.Observable.create",
  "schedules.DauphinReconcileSchedulerStateMutation.Field",
  "schedules.DauphinStartScheduleMutation.Field",
  "schedules.DauphinStopRunningScheduleMutation.Field",
  "schema.runs.DauphinRunGroup",
  "signal.SIGINT",
  "signal.SIGTERM",
  "simple_solid",
  "solid_A",
  "solid_B",
  "solid_B_prime",
  "solid_with_required_resource",
  "spawn",
  "spew",
  "static_function",
  "sum_inputs",
  "sys",
  "sys.version_info.major",
  "sys.version_info.minor",
  "takes_an_enum",
  "throw_a_thing",
  "time",
  "type.is_type_of",
  "utils.sync_execute_get_run_log_data",
  "uuid",
  "uuid.UUID",
  "weakref.ref"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "_pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "dagster": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools32": [
   "functools32/conda-forge/linux-64/functools32-3.2.3.2-py27_1"
  ],
  "future": [
   "future/conda-forge/linux-64/future-0.16.0-py34_0"
  ],
  "graphene": [
   "graphene/conda-forge/noarch/graphene-2.1.3-py_0",
   "graphene/conda-forge/noarch/graphene-2.1.6-py_0",
   "graphene/conda-forge/noarch/graphene-2.1.8-py_0",
   "graphene/conda-forge/noarch/graphene-2.1.9-pyhd8ed1ab_0"
  ],
  "graphql": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "mock": [
   "mock/conda-forge/linux-64/mock-2.0.0-py27_1000",
   "mock/conda-forge/linux-64/mock-3.0.3-py37_0"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-3.7.0-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py37hc8dfbb8_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "requests/conda-forge/linux-64/requests-2.12.0-py35_0",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2",
   "requests/conda-forge/noarch/requests-2.24.0-pyh9f0ad1d_0",
   "requests/conda-forge/noarch/requests-2.25.0-pyhd3deb0d_0",
   "requests/conda-forge/noarch/requests-2.25.1-pyhd3deb0d_0",
   "requests/conda-forge/noarch/requests-2.26.0-pyhd8ed1ab_0"
  ],
  "rx": [
   "rx/conda-forge/noarch/rx-3.0.1-py_0",
   "rx/conda-forge/noarch/rx-3.1.0-py_0",
   "rx/conda-forge/noarch/rx-3.1.1-py_0"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "lldb/conda-forge/linux-64/lldb-6.0.0-py35_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.10.0-py34_0",
   "six/conda-forge/linux-64/six-1.10.0-py34_1",
   "six/conda-forge/noarch/six-1.14.0-py_1",
   "six/conda-forge/noarch/six-1.16.0-pyh6c4a22f_0"
  ],
  "snapshottest": [
   "snapshottest/conda-forge/noarch/snapshottest-0.5.0-py_0",
   "snapshottest/conda-forge/noarch/snapshottest-0.5.1-py_0"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "pyyaml/conda-forge/linux-64/pyyaml-3.11-py35_0",
   "pyyaml/conda-forge/win-64/pyyaml-5.2-py36hfa6e2cd_0"
  ]
 }
}