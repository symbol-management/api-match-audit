{
 "bad": [
  "BarLogger",
  "DagsterGraphQLInProcessRepositoryContext",
  "DauphinConfigTypeField",
  "DauphinRegistry",
  "EnumRegisteringMetaclass",
  "ExecutionMetadata",
  "ExecutionParams",
  "ExternalPipeline",
  "ExternalPipeline.from_pipeline_def",
  "InMemoryRunLauncher",
  "PipelineRunObservableSubscribe",
  "SynchronousExecutionManager",
  "UserFacingGraphQLError",
  "_f",
  "_launch_pipeline_execution_for_created_run",
  "_start_pipeline_execution_for_created_run",
  "a_solid_with_multilayered_config",
  "a_solid_with_three_field_config",
  "add_four",
  "apply_to_three",
  "cls",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "create_schema",
  "csv_hello_world_solids_config",
  "csv_hello_world_solids_config_fs_storage",
  "dagster.DagsterEventType.STEP_FAILURE.value",
  "dagster.DagsterEventType.STEP_SKIPPED.value",
  "dagster.DagsterEventType.STEP_SUCCESS.value",
  "dagster.DagsterInstance.ephemeral",
  "dagster.DagsterInstance.from_ref",
  "dagster.EventMetadataEntry.float",
  "dagster.EventMetadataEntry.fspath",
  "dagster.EventMetadataEntry.json",
  "dagster.EventMetadataEntry.python_artifact",
  "dagster.EventMetadataEntry.text",
  "dagster.EventMetadataEntry.url",
  "dagster.ExecutionTargetHandle.for_pipeline_fn",
  "dagster.ExecutionTargetHandle.for_pipeline_module",
  "dagster.ExecutionTargetHandle.for_pipeline_python_file",
  "dagster.ExecutionTargetHandle.for_repo_fn",
  "dagster.ExecutionTargetHandle.for_repo_python_file",
  "dagster.ExecutionTargetHandle.for_repo_yaml",
  "dagster.Materialization.file",
  "dagster.PresetDefinition.from_files",
  "dagster.check.bool_param",
  "dagster.check.dict_param",
  "dagster.check.failed",
  "dagster.check.inst",
  "dagster.check.inst_param",
  "dagster.check.int_param",
  "dagster.check.invariant",
  "dagster.check.list_param",
  "dagster.check.numeric_param",
  "dagster.check.opt_dict_param",
  "dagster.check.opt_inst_param",
  "dagster.check.opt_int_param",
  "dagster.check.opt_list_param",
  "dagster.check.opt_nullable_list_param",
  "dagster.check.opt_str_param",
  "dagster.check.str_param",
  "dagster.config.config_type.ConfigTypeKind.ANY",
  "dagster.config.config_type.ConfigTypeKind.ARRAY",
  "dagster.config.config_type.ConfigTypeKind.ENUM",
  "dagster.config.config_type.ConfigTypeKind.NONEABLE",
  "dagster.config.config_type.ConfigTypeKind.SCALAR",
  "dagster.config.config_type.ConfigTypeKind.SCALAR_UNION",
  "dagster.config.config_type.ConfigTypeKind.SELECTOR",
  "dagster.core.definitions.ScheduleDefinition",
  "dagster.core.definitions.ScheduleExecutionContext",
  "dagster.core.definitions.create_environment_schema",
  "dagster.core.events.DagsterEventType.ENGINE_EVENT",
  "dagster.core.events.DagsterEventType.STEP_FAILURE",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION.value",
  "dagster.core.events.DagsterEventType.STEP_RESTARTED",
  "dagster.core.events.DagsterEventType.STEP_UP_FOR_RETRY",
  "dagster.core.events.STEP_EVENTS.copy",
  "dagster.core.events.STEP_EVENTS.union",
  "dagster.core.execution.api.execute_run",
  "dagster.core.instance.InstanceType.EPHEMERAL",
  "dagster.core.scheduler.Schedule",
  "dagster.core.scheduler.ScheduleStatus.RUNNING",
  "dagster.core.scheduler.ScheduleTickStatsSnapshot",
  "dagster.core.scheduler.ScheduleTickStatus",
  "dagster.core.scheduler.ScheduleTickStatus.FAILURE",
  "dagster.core.scheduler.ScheduleTickStatus.SKIPPED",
  "dagster.core.scheduler.ScheduleTickStatus.STARTED",
  "dagster.core.scheduler.ScheduleTickStatus.SUCCESS",
  "dagster.core.scheduler.get_schedule_change_set",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.FAILURE",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SKIPPED",
  "dagster.core.scheduler.scheduler.ScheduleTickStatus.SUCCESS",
  "dagster.core.snap.ActivePipelineData",
  "dagster.core.snap.ActiveRepositoryData",
  "dagster.core.snap.ExecutionPlanIndex",
  "dagster.core.snap.ExecutionStepInputSnap",
  "dagster.core.snap.ExecutionStepOutputSnap",
  "dagster.core.snap.ExecutionStepSnap",
  "dagster.core.snap.PipelineIndex",
  "dagster.core.snap.PipelineSnapshot",
  "dagster.core.snap.RepositoryIndex",
  "dagster.core.snap.active_pipeline_data_from_def",
  "dagster.core.snap.active_repository_data_from_def",
  "dagster.core.snap.snapshot_from_execution_plan",
  "dagster.core.storage.event_log.InMemoryEventLogStorage",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.FAILURE",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.NOT_STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.SUCCESS",
  "dagster.core.storage.runs.InMemoryRunStorage",
  "dagster.core.storage.schedules.SqliteScheduleStorage.from_local",
  "dagster.core.storage.schedules.sqlite.SqliteScheduleStorage.from_local",
  "dagster.core.types.dagster_type.DagsterTypeKind.LIST",
  "dagster.core.types.dagster_type.DagsterTypeKind.NOTHING",
  "dagster.core.types.dagster_type.DagsterTypeKind.NULLABLE",
  "dagster.serdes.ConfigurableClass",
  "dagster.serdes.ConfigurableClassData",
  "dagster.serdes.deserialize_json_to_dagster_namedtuple",
  "dagster.serdes.serialize_dagster_namedtuple",
  "dagster.seven.mock.MagicMock",
  "dagster.utils.test.get_temp_file_name",
  "dagster_event_from_dict",
  "dagster_graphql.client.util.HANDLED_EVENTS.values",
  "dagster_graphql.client.util.dagster_event_from_dict",
  "dagster_graphql.client.util.execution_params_from_pipeline_run",
  "dagster_graphql.client.util.parse_raw_log_lines",
  "dagster_graphql.dauphin.Boolean",
  "dagster_graphql.dauphin.Enum",
  "dagster_graphql.dauphin.Enum.from_enum",
  "dagster_graphql.dauphin.Field",
  "dagster_graphql.dauphin.Float",
  "dagster_graphql.dauphin.Int",
  "dagster_graphql.dauphin.Interface",
  "dagster_graphql.dauphin.List",
  "dagster_graphql.dauphin.Mutation",
  "dagster_graphql.dauphin.NonNull",
  "dagster_graphql.dauphin.ObjectType",
  "dagster_graphql.dauphin.Scalar",
  "dagster_graphql.dauphin.String",
  "dagster_graphql.dauphin.Union",
  "dagster_graphql.dauphin.create_schema",
  "dagster_graphql.dauphin.non_null_list",
  "dagster_graphql.implementation.fetch_pipelines._get_dauphin_pipeline_snapshot_from_instance",
  "dagster_graphql.schema.roots.execution_params_from_graphql",
  "dagster_graphql.schema.runs.construct_basic_params",
  "dagster_graphql.schema.runs.from_compute_log_file",
  "dagster_graphql.schema.runs.from_dagster_event_record",
  "dagster_graphql.schema.runs.from_event_record",
  "define_repository",
  "define_test_context",
  "define_test_snapshot_context",
  "define_test_subprocess_context",
  "div_four",
  "emit_failed_expectation",
  "emit_successful_expectation",
  "emit_successful_expectation_no_metadata",
  "ensure_valid_config",
  "ensure_valid_step_keys",
  "execute_dagster_graphql",
  "fail",
  "fail_subset",
  "fn",
  "func",
  "functools.partial",
  "future.standard_library.install_aliases",
  "get_dagster_schedule_def",
  "get_external_pipeline_or_raise",
  "get_external_pipeline_subset_or_raise",
  "get_input_one",
  "get_input_two",
  "get_retry_multi_execution_params",
  "materialize",
  "metaclass",
  "one",
  "queue.Empty",
  "requests.RequestException",
  "reset",
  "retry_config",
  "return_any",
  "return_bool",
  "return_foo",
  "return_hello",
  "return_hello_world",
  "return_int",
  "return_one",
  "return_six",
  "return_str",
  "rx.Observable.create",
  "simple_solid",
  "snapshottest.Snapshot",
  "solid_A",
  "solid_B",
  "solid_B_prime",
  "solid_a",
  "solid_b",
  "solid_with_required_resource",
  "spawn",
  "spew",
  "sum_inputs",
  "sync_execute_get_events",
  "sync_execute_get_run_log_data",
  "sync_get_all_logs_for_run",
  "takes_an_enum",
  "throw_a_thing",
  "time.sleep",
  "to_dauphin_config_type",
  "type.is_type_of"
 ],
 "deps": [
  [
   "click-5.1-py_0",
   "click-6.6-py35_1",
   "click-6.6-py36_1",
   "click-6.7-py35_0",
   "click-6.7-py_1",
   "click-7.0-py_0",
   "click-7.1-pyh8c360ce_0",
   "click-7.1.1-pyh8c360ce_0",
   "click-7.1.2-pyh9f0ad1d_0"
  ],
  [],
  [],
  [
   "dagster-graphql-0.7.11.post0-pyh32f6830_0",
   "dagster-graphql-0.7.11.post0-pyh32f6830_1",
   "dagster-graphql-0.7.11.post0-pyhc8dfbb8_0",
   "dagster-graphql-0.7.11.post0-pyhc8dfbb8_1",
   "dagster-graphql-0.7.12-pyh32f6830_0",
   "dagster-graphql-0.7.12-pyh32f6830_1",
   "dagster-graphql-0.7.12-pyhc8dfbb8_0",
   "dagster-graphql-0.7.12-pyhc8dfbb8_1",
   "dagster-graphql-0.7.13-pyh32f6830_0",
   "dagster-graphql-0.7.13-pyh32f6830_1",
   "dagster-graphql-0.7.13-pyhc8dfbb8_0",
   "dagster-graphql-0.7.13-pyhc8dfbb8_1",
   "dagster-graphql-0.7.14-pyh32f6830_0",
   "dagster-graphql-0.7.14-pyh32f6830_1",
   "dagster-graphql-0.7.14-pyhc8dfbb8_0",
   "dagster-graphql-0.7.14-pyhc8dfbb8_1",
   "dagster-graphql-0.7.15-pyh32f6830_0",
   "dagster-graphql-0.7.15-pyh32f6830_1",
   "dagster-graphql-0.7.15-pyhc8dfbb8_0",
   "dagster-graphql-0.7.15-pyhc8dfbb8_1",
   "dagster-graphql-0.7.16-pyh32f6830_0",
   "dagster-graphql-0.7.16-pyh32f6830_1",
   "dagster-graphql-0.7.16-pyhc8dfbb8_0",
   "dagster-graphql-0.7.16-pyhc8dfbb8_1"
  ],
  [
   "graphene-2.1.3-py_0",
   "graphene-2.1.5-py_0",
   "graphene-2.1.6-py_0",
   "graphene-2.1.8-py_0"
  ],
  [
   "graphql-core-1.1-py35_0",
   "graphql-core-1.1-py_1",
   "graphql-core-2.0-py_0",
   "graphql-core-2.1-py_0",
   "graphql-core-2.2-py_0",
   "graphql-core-2.3.1-py_0",
   "graphql-core-2.3.2-pyh9f0ad1d_0"
  ]
 ]
}