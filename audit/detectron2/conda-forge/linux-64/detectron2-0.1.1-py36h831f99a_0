{
 "bad": [
  "C2MetaArch",
  "DatasetCatalog.get",
  "DatasetCatalog.list",
  "MetadataCatalog.get",
  "PIL.Image.BILINEAR",
  "PIL.Image.EXTENT",
  "PIL.Image.LINEAR",
  "PIL.Image.NEAREST",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "PIL.ImageOps.exif_transpose",
  "PIL.__version__",
  "WrapModel",
  "_assign_op_device_option",
  "_cast_caffe2_blob_to_torch_tensor",
  "_check_and_update",
  "_check_size_scale_factor",
  "_del",
  "_fuse_once",
  "_get",
  "_get_all_paths_util",
  "_get_device_option",
  "_get_device_type",
  "_has",
  "_is_dead_end",
  "_list_to_str",
  "_make_array",
  "_output_size",
  "_replace_list",
  "_serialize",
  "_set",
  "_update_i",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "anchor_generator.build_anchor_generator",
  "argparse.ArgumentParser",
  "argparse.REMAINDER",
  "backbone.Backbone",
  "backbone.build_backbone",
  "backbone.resnet.BottleneckBlock",
  "backbone.resnet.make_stage",
  "bisect.bisect_right",
  "box_head.build_box_head",
  "box_regression.Box2BoxTransform",
  "box_regression.Box2BoxTransformRotated",
  "boxes.Boxes",
  "boxes.Boxes.BoxSizeType",
  "build.BACKBONE_REGISTRY.register",
  "build.META_ARCH_REGISTRY.register",
  "build.PROPOSAL_GENERATOR_REGISTRY.register",
  "builtin_meta._get_builtin_metadata",
  "builtin_meta._get_coco_instances_meta",
  "c10.Caffe2Compatible",
  "c10.Caffe2FastRCNNOutputsInference",
  "c10.Caffe2KeypointRCNNInference",
  "c10.Caffe2MaskRCNNInference",
  "c10.Caffe2ROIPooler",
  "c10.Caffe2RPN",
  "c2_model_loading.align_and_update_state_dicts",
  "caffe2.proto.caffe2_pb2.CUDA",
  "caffe2.proto.caffe2_pb2.DeviceOption",
  "caffe2.proto.caffe2_pb2.NetDef",
  "caffe2.proto.caffe2_pb2.OperatorDef",
  "caffe2.python.core.CreateOperator",
  "caffe2.python.core.DeviceOption",
  "caffe2.python.core.Net",
  "caffe2.python.core.get_ssa",
  "caffe2.python.net_drawer.GetPydotGraph",
  "caffe2.python.net_drawer.GetPydotGraphMinimal",
  "caffe2.python.onnx.backend.Caffe2Backend.onnx_graph_to_caffe2_net",
  "caffe2.python.utils.MakeArgument",
  "caffe2.python.workspace",
  "caffe2.python.workspace.CurrentWorkspace",
  "caffe2.python.workspace.FetchBlob",
  "caffe2.python.workspace.FetchInt8Blob",
  "caffe2.python.workspace.Int8Tensor",
  "caffe2.python.workspace.ResetWorkspace",
  "caffe2.python.workspace.SwitchWorkspace",
  "caffe2_export.export_caffe2_detection_model",
  "caffe2_export.export_onnx_model",
  "caffe2_export.run_and_save_graph",
  "caffe2_inference.ProtobufDetectionModel",
  "caffe2_modeling.META_ARCH_CAFFE2_EXPORT_TYPE_MAP",
  "caffe2_modeling.convert_batched_inputs_to_c2_format",
  "catalog.DatasetCatalog.get",
  "catalog.MetadataCatalog.get",
  "ccc",
  "cityscapes.load_cityscapes_instances",
  "cityscapes.load_cityscapes_semantic",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.JSONOutput",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.colorized",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.groundTruthSearch",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.gtInstancesFile",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.predictionPath",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.args.predictionWalk",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.evaluateImgLists",
  "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling.getPrediction",
  "cityscapesscripts.helpers.labels.id2label",
  "cityscapesscripts.helpers.labels.labels",
  "cityscapesscripts.helpers.labels.name2label",
  "cityscapesscripts.helpers.labels.name2label.id",
  "cloudpickle.dumps",
  "cloudpickle.loads",
  "coco.load_coco_json",
  "coco.load_sem_seg",
  "coco_evaluation.COCOEvaluator",
  "coco_evaluation.instances_to_coco_json",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.abc.Mapping",
  "collections.defaultdict",
  "collections.namedtuple",
  "colormap.random_color",
  "colorsys.hls_to_rgb",
  "colorsys.rgb_to_hls",
  "common.AspectRatioGroupedDataset",
  "common.DatasetFromList",
  "common.MapDataset",
  "compat.downgrade_config",
  "compat.guess_version",
  "compat.upgrade_config",
  "config.CfgNode",
  "contain_targets",
  "contextlib.ExitStack",
  "contextlib.contextmanager",
  "contextlib.redirect_stdout",
  "copy.copy",
  "copy.deepcopy",
  "cv2.CHAIN_APPROX_NONE",
  "cv2.IMREAD_GRAYSCALE",
  "cv2.RETR_CCOMP",
  "cv2.RETR_EXTERNAL",
  "cv2.__version__",
  "cv2.__version__.split",
  "cv2.connectedComponentsWithStats",
  "cv2.findContours",
  "cv2.imread",
  "cv2.imshow",
  "cv2.imwrite",
  "cv2.ocl.setUseOpenCL",
  "cv2.resize",
  "cv2.waitKey",
  "data_loader",
  "dataset_mapper.DatasetMapper",
  "datetime.datetime.now",
  "datetime.timedelta",
  "defaults._C.VERSION",
  "defaults._C.clone",
  "deform_conv_op",
  "detection_utils.annotations_to_instances",
  "detection_utils.build_transform_gen",
  "detection_utils.check_image_size",
  "detection_utils.check_metadata_consistency",
  "detection_utils.create_keypoint_hflip_indices",
  "detection_utils.filter_empty_instances",
  "detection_utils.gen_crop_transform_with_instance",
  "detection_utils.read_image",
  "detection_utils.transform_instance_annotations",
  "detection_utils.transform_proposals",
  "detectron2._C.__file__",
  "detectron2._C.box_iou_rotated",
  "detectron2._C.deform_conv_backward_filter",
  "detectron2._C.deform_conv_backward_input",
  "detectron2._C.deform_conv_forward",
  "detectron2._C.get_compiler_version",
  "detectron2._C.get_cuda_version",
  "detectron2._C.modulated_deform_conv_backward",
  "detectron2._C.modulated_deform_conv_forward",
  "detectron2._C.nms_rotated",
  "detectron2._C.roi_align_backward",
  "detectron2._C.roi_align_forward",
  "detectron2._C.roi_align_rotated_backward",
  "detectron2._C.roi_align_rotated_forward",
  "detectron2.__file__",
  "detectron2.__version__",
  "detectron2.checkpoint.DetectionCheckpointer",
  "detectron2.checkpoint.c2_model_loading.convert_basic_c2_names",
  "detectron2.checkpoint.c2_model_loading.convert_c2_detectron_names",
  "detectron2.checkpoint.catalog.Detectron2Handler",
  "detectron2.checkpoint.catalog.ModelCatalog",
  "detectron2.checkpoint.catalog.ModelCatalogHandler",
  "detectron2.config.CfgNode",
  "detectron2.config.compat._RenameConverter",
  "detectron2.config.compat._rename",
  "detectron2.config.config.global_cfg",
  "detectron2.config.defaults._C",
  "detectron2.config.get_cfg",
  "detectron2.data.DatasetCatalog.get",
  "detectron2.data.DatasetCatalog.register",
  "detectron2.data.MetadataCatalog.get",
  "detectron2.data.build.filter_images_with_few_keypoints",
  "detectron2.data.build.filter_images_with_only_crowd_annotations",
  "detectron2.data.build.get_detection_dataset_dicts",
  "detectron2.data.build.load_proposals_into_dataset",
  "detectron2.data.build.print_instances_class_histogram",
  "detectron2.data.build_detection_test_loader",
  "detectron2.data.build_detection_train_loader",
  "detectron2.data.catalog.DatasetCatalog",
  "detectron2.data.catalog.Metadata",
  "detectron2.data.catalog.MetadataCatalog",
  "detectron2.data.common.copy",
  "detectron2.data.datasets.builtin._PREDEFINED_SPLITS_COCO",
  "detectron2.data.datasets.builtin._PREDEFINED_SPLITS_COCO_PANOPTIC",
  "detectron2.data.datasets.builtin._PREDEFINED_SPLITS_LVIS",
  "detectron2.data.datasets.builtin._RAW_CITYSCAPES_SPLITS",
  "detectron2.data.datasets.builtin_meta.COCO_CATEGORIES",
  "detectron2.data.datasets.builtin_meta.COCO_PERSON_KEYPOINT_FLIP_MAP",
  "detectron2.data.datasets.builtin_meta.COCO_PERSON_KEYPOINT_NAMES",
  "detectron2.data.datasets.builtin_meta.KEYPOINT_CONNECTION_RULES",
  "detectron2.data.datasets.builtin_meta._get_coco_instances_meta",
  "detectron2.data.datasets.builtin_meta._get_coco_panoptic_separated_meta",
  "detectron2.data.datasets.cityscapes.args",
  "detectron2.data.datasets.cityscapes.dicts",
  "detectron2.data.datasets.cityscapes.dirname",
  "detectron2.data.datasets.cityscapes.fpath",
  "detectron2.data.datasets.cityscapes.img",
  "detectron2.data.datasets.cityscapes.load_cityscapes_instances",
  "detectron2.data.datasets.cityscapes.load_cityscapes_semantic",
  "detectron2.data.datasets.cityscapes.logger",
  "detectron2.data.datasets.cityscapes.meta",
  "detectron2.data.datasets.cityscapes.parser",
  "detectron2.data.datasets.cityscapes.stuff_colors",
  "detectron2.data.datasets.cityscapes.stuff_names",
  "detectron2.data.datasets.cityscapes.thing_classes",
  "detectron2.data.datasets.cityscapes.vis",
  "detectron2.data.datasets.cityscapes.visualizer",
  "detectron2.data.datasets.coco.convert_to_coco_dict",
  "detectron2.data.datasets.coco.convert_to_coco_json",
  "detectron2.data.datasets.coco.dicts",
  "detectron2.data.datasets.coco.dirname",
  "detectron2.data.datasets.coco.fpath",
  "detectron2.data.datasets.coco.img",
  "detectron2.data.datasets.coco.load_coco_json",
  "detectron2.data.datasets.coco.logger",
  "detectron2.data.datasets.coco.meta",
  "detectron2.data.datasets.coco.vis",
  "detectron2.data.datasets.coco.visualizer",
  "detectron2.data.datasets.lvis._get_lvis_instances_meta_v0_5",
  "detectron2.data.datasets.lvis.dicts",
  "detectron2.data.datasets.lvis.dirname",
  "detectron2.data.datasets.lvis.fpath",
  "detectron2.data.datasets.lvis.get_lvis_instances_meta",
  "detectron2.data.datasets.lvis.img",
  "detectron2.data.datasets.lvis.load_lvis_json",
  "detectron2.data.datasets.lvis.logger",
  "detectron2.data.datasets.lvis.meta",
  "detectron2.data.datasets.lvis.vis",
  "detectron2.data.datasets.lvis.visualizer",
  "detectron2.data.datasets.pascal_voc.CLASS_NAMES",
  "detectron2.data.datasets.pascal_voc.load_voc_instances",
  "detectron2.data.datasets.register_coco.merge_to_panoptic",
  "detectron2.data.detection_utils.SizeMismatchError",
  "detectron2.data.detection_utils.check_metadata_consistency",
  "detectron2.data.detection_utils.read_image",
  "detectron2.data.detection_utils.transform_keypoint_annotations",
  "detectron2.data.transforms.ResizeShortestEdge",
  "detectron2.data.transforms.transform.HFlip_rotated_box",
  "detectron2.data.transforms.transform.ResizeTransform",
  "detectron2.data.transforms.transform.Resize_rotated_box",
  "detectron2.data.transforms.transform_gen.TransformGen",
  "detectron2.data.transforms.transform_gen.check_dtype",
  "detectron2.engine.launch._find_free_port",
  "detectron2.engine.train_loop.HookBase",
  "detectron2.engine.train_loop.TrainerBase",
  "detectron2.evaluation.DatasetEvaluator",
  "detectron2.evaluation.coco_evaluation._evaluate_box_proposals",
  "detectron2.evaluation.coco_evaluation._evaluate_predictions_on_coco",
  "detectron2.evaluation.coco_evaluation.instances_to_coco_json",
  "detectron2.evaluation.evaluator.DatasetEvaluator",
  "detectron2.evaluation.evaluator.DatasetEvaluators",
  "detectron2.evaluation.evaluator.inference_context",
  "detectron2.evaluation.inference_on_dataset",
  "detectron2.evaluation.lvis_evaluation._evaluate_box_proposals",
  "detectron2.evaluation.lvis_evaluation._evaluate_predictions_on_lvis",
  "detectron2.evaluation.panoptic_evaluation._print_panoptic_results",
  "detectron2.evaluation.panoptic_evaluation.args",
  "detectron2.evaluation.panoptic_evaluation.logger",
  "detectron2.evaluation.panoptic_evaluation.parser",
  "detectron2.evaluation.panoptic_evaluation.pq_res",
  "detectron2.evaluation.pascal_voc_evaluation.parse_rec",
  "detectron2.evaluation.pascal_voc_evaluation.voc_ap",
  "detectron2.evaluation.pascal_voc_evaluation.voc_eval",
  "detectron2.evaluation.print_csv_format",
  "detectron2.evaluation.rotated_coco_evaluation.RotatedCOCOeval",
  "detectron2.evaluation.testing.flatten_results_dict",
  "detectron2.evaluation.verify_results",
  "detectron2.export.api.Caffe2Model",
  "detectron2.export.c10.Boxes4or5",
  "detectron2.export.c10.Caffe2Compatible",
  "detectron2.export.c10.InstancesList",
  "detectron2.export.caffe2_export._assign_device_option",
  "detectron2.export.caffe2_export._op_stats",
  "detectron2.export.caffe2_export.export_onnx_model",
  "detectron2.export.caffe2_export.logger",
  "detectron2.export.caffe2_inference.ProtobufModel",
  "detectron2.export.caffe2_inference.logger",
  "detectron2.export.caffe2_modeling.Caffe2GeneralizedRCNN",
  "detectron2.export.caffe2_modeling.Caffe2MetaArch",
  "detectron2.export.caffe2_modeling.Caffe2PanopticFPN",
  "detectron2.export.caffe2_modeling.Caffe2RetinaNet",
  "detectron2.export.caffe2_modeling._cast_to_f32",
  "detectron2.export.caffe2_modeling.assemble_rcnn_outputs_by_name",
  "detectron2.export.caffe2_modeling.convert_batched_inputs_to_c2_format",
  "detectron2.export.caffe2_modeling.set_caffe2_compatible_tensor_mode",
  "detectron2.export.patcher.Caffe2CompatibleConverter",
  "detectron2.export.patcher.GenericMixin",
  "detectron2.export.patcher.mock_fastrcnn_outputs_inference",
  "detectron2.export.patcher.mock_keypoint_rcnn_inference",
  "detectron2.export.patcher.mock_mask_rcnn_inference",
  "detectron2.export.patcher.patch",
  "detectron2.export.shared.BilinearInterpolation",
  "detectron2.export.shared.DiGraph",
  "detectron2.export.shared.IllegalGraphTransformError",
  "detectron2.export.shared.ScopedWS",
  "detectron2.export.shared._create_const_fill_op_from_c2_int8_tensor",
  "detectron2.export.shared._create_const_fill_op_from_numpy",
  "detectron2.export.shared._generic_status_identifier",
  "detectron2.export.shared._get_dependency_chain",
  "detectron2.export.shared._modify_blob_names",
  "detectron2.export.shared._rename_blob",
  "detectron2.export.shared._rename_versioned_blob_in_proto",
  "detectron2.export.shared._updater_raise",
  "detectron2.export.shared.check_set_pb_arg",
  "detectron2.export.shared.create_const_fill_op",
  "detectron2.export.shared.fetch_any_blob",
  "detectron2.export.shared.get_consumer_map",
  "detectron2.export.shared.get_pb_arg",
  "detectron2.export.shared.get_pb_arg_vali",
  "detectron2.export.shared.get_pb_arg_vals",
  "detectron2.export.shared.get_producer_map",
  "detectron2.export.shared.get_sub_graph_external_input_output",
  "detectron2.export.shared.identify_reshape_sub_graph",
  "detectron2.export.shared.logger",
  "detectron2.export.shared.onnx_compatibale_interpolate",
  "detectron2.export.shared.rename_op_input",
  "detectron2.export.shared.rename_op_output",
  "detectron2.export.shared.save_graph_base",
  "detectron2.export.shared.to_device",
  "detectron2.layers.Conv2d",
  "detectron2.layers.ConvTranspose2d",
  "detectron2.layers.DeformConv",
  "detectron2.layers.FrozenBatchNorm2d.convert_frozen_batchnorm",
  "detectron2.layers.ModulatedDeformConv",
  "detectron2.layers.ROIAlign",
  "detectron2.layers.ROIAlignRotated",
  "detectron2.layers.ShapeSpec",
  "detectron2.layers.batch_norm.AllReduce",
  "detectron2.layers.batch_norm.FrozenBatchNorm2d",
  "detectron2.layers.batched_nms",
  "detectron2.layers.batched_nms_rotated",
  "detectron2.layers.cat",
  "detectron2.layers.deform_conv.DeformConv",
  "detectron2.layers.deform_conv.ModulatedDeformConv",
  "detectron2.layers.deform_conv._DeformConv",
  "detectron2.layers.deform_conv._ModulatedDeformConv",
  "detectron2.layers.deform_conv.deform_conv",
  "detectron2.layers.deform_conv.modulated_deform_conv",
  "detectron2.layers.get_norm",
  "detectron2.layers.interpolate",
  "detectron2.layers.mask_ops.BYTES_PER_FLOAT",
  "detectron2.layers.mask_ops.GPU_MEM_LIMIT",
  "detectron2.layers.mask_ops._do_paste_mask",
  "detectron2.layers.nms.nms_rotated",
  "detectron2.layers.paste_masks_in_image",
  "detectron2.layers.roi_align.ROIAlign",
  "detectron2.layers.roi_align.roi_align",
  "detectron2.layers.roi_align_rotated.ROIAlignRotated",
  "detectron2.layers.roi_align_rotated.roi_align_rotated",
  "detectron2.layers.rotated_boxes.pairwise_iou_rotated",
  "detectron2.layers.wrappers.BatchNorm2d",
  "detectron2.layers.wrappers.ConvTranspose2d",
  "detectron2.layers.wrappers.TORCH_VERSION",
  "detectron2.layers.wrappers._NewEmptyTensorOp",
  "detectron2.model_zoo.model_zoo._ModelZooUrls",
  "detectron2.model_zoo.model_zoo.get_checkpoint_url",
  "detectron2.model_zoo.model_zoo.get_config_file",
  "detectron2.modeling._EXCLUDE",
  "detectron2.modeling.anchor_generator.ANCHOR_GENERATOR_REGISTRY",
  "detectron2.modeling.anchor_generator.BufferList",
  "detectron2.modeling.anchor_generator._create_grid_offsets",
  "detectron2.modeling.backbone.build.BACKBONE_REGISTRY",
  "detectron2.modeling.backbone.fpn.FPN",
  "detectron2.modeling.backbone.fpn.LastLevelMaxPool",
  "detectron2.modeling.backbone.fpn.LastLevelP6P7",
  "detectron2.modeling.backbone.fpn._assert_strides_are_log2_contiguous",
  "detectron2.modeling.backbone.resnet.BasicStem",
  "detectron2.modeling.backbone.resnet.BottleneckBlock",
  "detectron2.modeling.backbone.resnet.DeformBottleneckBlock",
  "detectron2.modeling.backbone.resnet.ResNet",
  "detectron2.modeling.backbone.resnet.ResNetBlockBase",
  "detectron2.modeling.backbone.resnet.make_stage",
  "detectron2.modeling.box_regression.Box2BoxTransform",
  "detectron2.modeling.box_regression._DEFAULT_SCALE_CLAMP",
  "detectron2.modeling.build_model",
  "detectron2.modeling.meta_arch.GeneralizedRCNN",
  "detectron2.modeling.meta_arch.GeneralizedRCNN._postprocess",
  "detectron2.modeling.meta_arch.PanopticFPN",
  "detectron2.modeling.meta_arch.RetinaNet",
  "detectron2.modeling.meta_arch.RetinaNet.inference",
  "detectron2.modeling.meta_arch.RetinaNet.inference_single_image",
  "detectron2.modeling.meta_arch.build.META_ARCH_REGISTRY",
  "detectron2.modeling.meta_arch.panoptic_fpn.combine_semantic_and_instance_outputs",
  "detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN",
  "detectron2.modeling.meta_arch.retinanet.RetinaNetHead",
  "detectron2.modeling.meta_arch.retinanet.permute_all_cls_and_box_to_N_HWA_K_and_concat",
  "detectron2.modeling.meta_arch.retinanet.permute_to_N_HWA_K",
  "detectron2.modeling.meta_arch.semantic_seg.SEM_SEG_HEADS_REGISTRY",
  "detectron2.modeling.meta_arch.semantic_seg.build_sem_seg_head",
  "detectron2.modeling.poolers.ROIPooler",
  "detectron2.modeling.poolers.assign_boxes_to_levels",
  "detectron2.modeling.poolers.convert_boxes_to_pooler_format",
  "detectron2.modeling.postprocessing.detector_postprocess",
  "detectron2.modeling.postprocessing.sem_seg_postprocess",
  "detectron2.modeling.proposal_generator.build.PROPOSAL_GENERATOR_REGISTRY",
  "detectron2.modeling.proposal_generator.proposal_utils.add_ground_truth_to_proposals_single_image",
  "detectron2.modeling.proposal_generator.rpn.RPN",
  "detectron2.modeling.proposal_generator.rpn.RPN_HEAD_REGISTRY",
  "detectron2.modeling.proposal_generator.rpn.build_rpn_head",
  "detectron2.modeling.proposal_generator.rpn_outputs.rpn_losses",
  "detectron2.modeling.proposal_generator.rrpn_outputs.RRPNOutputs",
  "detectron2.modeling.roi_heads.box_head.ROI_BOX_HEAD_REGISTRY",
  "detectron2.modeling.roi_heads.cascade_rcnn._ScaleGradient",
  "detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputLayers",
  "detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputs",
  "detectron2.modeling.roi_heads.fast_rcnn.fast_rcnn_inference",
  "detectron2.modeling.roi_heads.fast_rcnn.fast_rcnn_inference_single_image",
  "detectron2.modeling.roi_heads.keypoint_head.BaseKeypointRCNNHead",
  "detectron2.modeling.roi_heads.keypoint_head.BaseKeypointRCNNHead.__module__",
  "detectron2.modeling.roi_heads.keypoint_head.ROI_KEYPOINT_HEAD_REGISTRY",
  "detectron2.modeling.roi_heads.keypoint_head._TOTAL_SKIPPED",
  "detectron2.modeling.roi_heads.keypoint_head.keypoint_rcnn_inference",
  "detectron2.modeling.roi_heads.keypoint_head.keypoint_rcnn_loss",
  "detectron2.modeling.roi_heads.mask_head.BaseMaskRCNNHead",
  "detectron2.modeling.roi_heads.mask_head.BaseMaskRCNNHead.__module__",
  "detectron2.modeling.roi_heads.mask_head.ROI_MASK_HEAD_REGISTRY",
  "detectron2.modeling.roi_heads.mask_head.mask_rcnn_inference",
  "detectron2.modeling.roi_heads.mask_head.mask_rcnn_loss",
  "detectron2.modeling.roi_heads.roi_heads.ROIHeads",
  "detectron2.modeling.roi_heads.roi_heads.ROI_HEADS_REGISTRY",
  "detectron2.modeling.roi_heads.roi_heads.StandardROIHeads",
  "detectron2.modeling.roi_heads.roi_heads.select_foreground_proposals",
  "detectron2.modeling.roi_heads.roi_heads.select_proposals_with_visible_keypoints",
  "detectron2.modeling.roi_heads.rotated_fast_rcnn.RotatedFastRCNNOutputs",
  "detectron2.modeling.roi_heads.rotated_fast_rcnn.fast_rcnn_inference_rotated",
  "detectron2.modeling.roi_heads.rotated_fast_rcnn.fast_rcnn_inference_single_image_rotated",
  "detectron2.modeling.test_time_augmentation.DatasetMapperTTA",
  "detectron2.solver.build_lr_scheduler",
  "detectron2.solver.build_optimizer",
  "detectron2.solver.lr_scheduler._get_warmup_factor_at_iter",
  "detectron2.structures.BitMasks",
  "detectron2.structures.BoxMode",
  "detectron2.structures.BoxMode.XYWHA_ABS",
  "detectron2.structures.BoxMode.XYWH_ABS",
  "detectron2.structures.BoxMode.XYXY_ABS",
  "detectron2.structures.BoxMode.XYXY_ABS.value",
  "detectron2.structures.BoxMode.convert",
  "detectron2.structures.Boxes",
  "detectron2.structures.Boxes.cat",
  "detectron2.structures.ImageList",
  "detectron2.structures.ImageList.from_tensors",
  "detectron2.structures.Instances",
  "detectron2.structures.Instances.cat",
  "detectron2.structures.Keypoints",
  "detectron2.structures.PolygonMasks",
  "detectron2.structures.RotatedBoxes",
  "detectron2.structures.RotatedBoxes.cat",
  "detectron2.structures.boxes.BoxMode",
  "detectron2.structures.boxes.Boxes",
  "detectron2.structures.boxes._RawBoxType",
  "detectron2.structures.heatmaps_to_keypoints",
  "detectron2.structures.image_list.ImageList",
  "detectron2.structures.instances.Instances",
  "detectron2.structures.keypoints.Keypoints",
  "detectron2.structures.keypoints._keypoints_to_heatmap",
  "detectron2.structures.masks.BitMasks",
  "detectron2.structures.masks.PolygonMasks",
  "detectron2.structures.masks.polygon_area",
  "detectron2.structures.masks.polygons_to_bitmask",
  "detectron2.structures.masks.rasterize_polygons_within_box",
  "detectron2.structures.pairwise_iou",
  "detectron2.structures.pairwise_iou_rotated",
  "detectron2.structures.polygons_to_bitmask",
  "detectron2.structures.rotated_boxes.RotatedBoxes",
  "detectron2.utils.collect_env.collect_env_info",
  "detectron2.utils.collect_env.collect_torch_env",
  "detectron2.utils.collect_env.detect_compute_compatibility",
  "detectron2.utils.collect_env.get_env_module",
  "detectron2.utils.colormap._COLORS",
  "detectron2.utils.colormap.canvas",
  "detectron2.utils.colormap.idx",
  "detectron2.utils.colormap.size",
  "detectron2.utils.comm._LOCAL_PROCESS_GROUP",
  "detectron2.utils.comm._get_global_gloo_group",
  "detectron2.utils.comm._pad_to_largest_tensor",
  "detectron2.utils.comm._serialize_to_tensor",
  "detectron2.utils.comm.all_gather",
  "detectron2.utils.comm.gather",
  "detectron2.utils.comm.get_local_rank",
  "detectron2.utils.comm.get_rank",
  "detectron2.utils.comm.get_world_size",
  "detectron2.utils.comm.is_main_process",
  "detectron2.utils.comm.shared_random_seed",
  "detectron2.utils.comm.synchronize",
  "detectron2.utils.env._ENV_SETUP_DONE",
  "detectron2.utils.env._configure_libraries",
  "detectron2.utils.env._import_file",
  "detectron2.utils.env.seed_all_rng",
  "detectron2.utils.env.setup_custom_environment",
  "detectron2.utils.events.CommonMetricPrinter",
  "detectron2.utils.events.EventStorage",
  "detectron2.utils.events.EventWriter",
  "detectron2.utils.events.JSONWriter",
  "detectron2.utils.events.TensorboardXWriter",
  "detectron2.utils.events._CURRENT_STORAGE_STACK",
  "detectron2.utils.events.get_event_storage",
  "detectron2.utils.logger._ColorfulFormatter",
  "detectron2.utils.logger._LOG_COUNTER",
  "detectron2.utils.logger._LOG_TIMER",
  "detectron2.utils.logger._cached_log_stream",
  "detectron2.utils.logger._find_caller",
  "detectron2.utils.logger.create_small_table",
  "detectron2.utils.logger.log_every_n_seconds",
  "detectron2.utils.logger.log_first_n",
  "detectron2.utils.logger.setup_logger",
  "detectron2.utils.memory._ignore_torch_cuda_oom",
  "detectron2.utils.memory.retry_if_cuda_oom",
  "detectron2.utils.registry.Registry",
  "detectron2.utils.serialize.PicklableWrapper",
  "detectron2.utils.video_visualizer._DetectedInstance",
  "detectron2.utils.visualizer.ColorMode",
  "detectron2.utils.visualizer.ColorMode.IMAGE",
  "detectron2.utils.visualizer.ColorMode.IMAGE_BW",
  "detectron2.utils.visualizer.GenericMask",
  "detectron2.utils.visualizer.VisImage",
  "detectron2.utils.visualizer.Visualizer",
  "detectron2.utils.visualizer._KEYPOINT_THRESHOLD",
  "detectron2.utils.visualizer._LARGE_MASK_AREA_THRESH",
  "detectron2.utils.visualizer._OFF_WHITE",
  "detectron2.utils.visualizer._PanopticPrediction",
  "detectron2.utils.visualizer._RED",
  "detectron2.utils.visualizer._SMALL_OBJECT_AREA_THRESH",
  "detectron2.utils.visualizer._create_text_labels",
  "evaluator.DatasetEvaluator",
  "f",
  "fast_rcnn.FastRCNNOutputLayers",
  "fast_rcnn.FastRCNNOutputs",
  "fast_rcnn.fast_rcnn_inference",
  "file2id",
  "fmt_box_list",
  "fpn_map",
  "func",
  "functools.lru_cache",
  "functools.partial",
  "functools.wraps",
  "fvcore.transforms.transform.HFlipTransform.register_type",
  "fvcore.transforms.transform.NoOpTransform.register_type",
  "glob.glob",
  "hooks.EvalHook",
  "hooks.IterationTimer",
  "hooks.LRScheduler",
  "hooks.PeriodicCheckpointer",
  "hooks.PeriodicWriter",
  "hooks.PreciseBN",
  "id.nonzero",
  "importlib.import_module",
  "importlib.util.find_spec",
  "importlib.util.module_from_spec",
  "importlib.util.spec_from_file_location",
  "input.cpu",
  "input.dim",
  "input.gt_boxes",
  "input.is_cuda",
  "input.new_empty",
  "input.numel",
  "input.requires_grad",
  "input.shape",
  "input.size",
  "inspect.signature",
  "int.from_bytes",
  "io.BytesIO",
  "io.StringIO",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.count",
  "itertools.islice",
  "itertools.zip_longest",
  "json.dump",
  "json.dumps",
  "json.load",
  "keypoint_head.build_keypoint_head",
  "lateral_conv",
  "layer",
  "logger.log_first_n",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.WARNING",
  "logging.getLogger",
  "lr_scheduler.WarmupCosineLR",
  "lr_scheduler.WarmupMultiStepLR",
  "lvis.LVIS",
  "lvis.LVISEval",
  "lvis.LVISResults",
  "lvis.get_lvis_instances_meta",
  "lvis.register_lvis_instances",
  "lvis_v0_5_categories.LVIS_CATEGORIES",
  "mask_head.build_mask_head",
  "match",
  "matcher.Matcher",
  "math.ceil",
  "math.cos",
  "math.floor",
  "math.isclose",
  "math.log",
  "math.log2",
  "math.pi",
  "math.sin",
  "math.sqrt",
  "matplotlib.backends.backend_agg.FigureCanvasAgg",
  "matplotlib.colors.to_rgb",
  "matplotlib.figure.Figure",
  "matplotlib.lines.Line2D",
  "matplotlib.patches.Circle",
  "matplotlib.patches.Polygon",
  "matplotlib.patches.Rectangle",
  "maybe_to_cpu",
  "meta_arch.GeneralizedRCNN",
  "mock.patch",
  "mock.patch.object",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "numpy.__version__",
  "numpy.abs",
  "numpy.all",
  "numpy.arange",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bincount",
  "numpy.bool",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cos",
  "numpy.cumsum",
  "numpy.dot",
  "numpy.dtype",
  "numpy.expand_dims",
  "numpy.finfo",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.frombuffer",
  "numpy.histogram",
  "numpy.inf",
  "numpy.int",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.isfinite",
  "numpy.linalg.norm",
  "numpy.loadtxt",
  "numpy.log2",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.minimum",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ogrid",
  "numpy.pi",
  "numpy.prod",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.roll",
  "numpy.sin",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.stack",
  "numpy.str",
  "numpy.sum",
  "numpy.uint8",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "onnx.load_from_string",
  "onnx.optimizer.get_available_passes",
  "onnx.optimizer.optimize",
  "operator.itemgetter",
  "original_type",
  "os.environ",
  "os.environ.get",
  "os.fsync",
  "os.getpid",
  "os.getuid",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.relpath",
  "os.path.splitext",
  "os.urandom",
  "output_conv",
  "panopticapi.evaluation.pq_compute",
  "panopticapi.utils.id2rgb",
  "pascal_voc.register_pascal_voc",
  "patcher.ROIHeadsPatcher",
  "patcher.patch_generalized_rcnn",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "pkg_resources.resource_filename",
  "pooler",
  "poolers.ROIPooler",
  "postprocessing.detector_postprocess",
  "postprocessing.sem_seg_postprocess",
  "pprint.pformat",
  "process_polygons",
  "proposal_generator.build_proposal_generator",
  "proposal_generator.proposal_utils.add_ground_truth_to_proposals",
  "pycocotools.coco.COCO",
  "pycocotools.cocoeval.COCOeval",
  "pycocotools.cocoeval.maskUtils.iou",
  "pycocotools.mask.area",
  "pycocotools.mask.decode",
  "pycocotools.mask.encode",
  "pycocotools.mask.frPyObjects",
  "pycocotools.mask.iou",
  "pycocotools.mask.merge",
  "pycocotools.mask.toBbox",
  "random.Random",
  "random.seed",
  "re.findall",
  "re.sub",
  "register_coco.register_coco_instances",
  "register_coco.register_coco_panoptic_separated",
  "resnet.build_resnet_backbone",
  "reverse_id_mapper",
  "roi_heads.ROI_HEADS_REGISTRY.register",
  "roi_heads.StandardROIHeads",
  "roi_heads.build_roi_heads",
  "roi_heads.fast_rcnn.fast_rcnn_inference_single_image",
  "rpn.RPN",
  "rpn_outputs.RPNOutputs",
  "rpn_outputs.find_top_rpn_proposals",
  "rrpn_outputs.RRPNOutputs",
  "rrpn_outputs.find_top_rrpn_proposals",
  "samplers.InferenceSampler",
  "samplers.RepeatFactorTrainingSampler",
  "samplers.TrainingSampler",
  "sampling.subsample_labels",
  "semantic_seg.build_sem_seg_head",
  "shared.ScopedWS",
  "shared.alias",
  "shared.check_set_pb_arg",
  "shared.construct_init_net_from_params",
  "shared.fuse_alias_placeholder",
  "shared.fuse_copy_between_cpu_and_gpu",
  "shared.get_params_from_init_net",
  "shared.get_pb_arg_floats",
  "shared.get_pb_arg_valf",
  "shared.get_pb_arg_vali",
  "shared.get_pb_arg_vals",
  "shared.group_norm_replace_aten_with_caffe2",
  "shared.infer_device_type",
  "shared.mock_torch_nn_functional_interpolate",
  "shared.remove_dead_end_ops",
  "shared.remove_reshape_for_fc",
  "shared.save_graph",
  "shared.to_device",
  "short_name",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.socket",
  "stage",
  "status_updater",
  "str.encode",
  "struct.pack",
  "struct.unpack",
  "subprocess.SubprocessError",
  "subprocess.check_output",
  "sys._getframe",
  "sys.argv",
  "sys.exit",
  "sys.float_info.epsilon",
  "sys.maxsize",
  "sys.modules",
  "sys.platform",
  "sys.stdout",
  "sys.version.replace",
  "tempfile.TemporaryDirectory",
  "termcolor.colored",
  "time.perf_counter",
  "time.time",
  "torch.BoolTensor",
  "torch.ByteStorage.from_buffer",
  "torch.ByteTensor",
  "torch.FloatTensor",
  "torch.Generator",
  "torch.Size",
  "torch.Tensor",
  "torch.__config__.show",
  "torch.__file__",
  "torch.__version__",
  "torch.__version__.split",
  "torch.abs",
  "torch.all",
  "torch.arange",
  "torch.argsort",
  "torch.as_tensor",
  "torch.atan2",
  "torch.autograd.Function",
  "torch.autograd.function.Function",
  "torch.autograd.function.once_differentiable",
  "torch.autograd.profiler.profile",
  "torch.backends.cudnn.benchmark",
  "torch.bool",
  "torch.cat",
  "torch.chunk",
  "torch.clamp",
  "torch.cos",
  "torch.cuda.device_count",
  "torch.cuda.empty_cache",
  "torch.cuda.get_device_name",
  "torch.cuda.is_available",
  "torch.cuda.max_memory_allocated",
  "torch.cuda.set_device",
  "torch.cuda.synchronize",
  "torch.device",
  "torch.distributed.all_gather",
  "torch.distributed.all_reduce",
  "torch.distributed.barrier",
  "torch.distributed.gather",
  "torch.distributed.get_backend",
  "torch.distributed.get_rank",
  "torch.distributed.get_world_size",
  "torch.distributed.group.WORLD",
  "torch.distributed.init_process_group",
  "torch.distributed.is_available",
  "torch.distributed.is_initialized",
  "torch.distributed.new_group",
  "torch.distributed.reduce",
  "torch.empty",
  "torch.exp",
  "torch.flatten",
  "torch.flip",
  "torch.float32",
  "torch.floor",
  "torch.from_numpy",
  "torch.full",
  "torch.int32",
  "torch.int64",
  "torch.int8",
  "torch.isfinite",
  "torch.jit.script",
  "torch.load",
  "torch.log",
  "torch.log2",
  "torch.long",
  "torch.manual_seed",
  "torch.max",
  "torch.mean",
  "torch.meshgrid",
  "torch.min",
  "torch.multiprocessing.spawn",
  "torch.nn.AdaptiveAvgPool2d",
  "torch.nn.BatchNorm1d",
  "torch.nn.BatchNorm2d",
  "torch.nn.BatchNorm3d",
  "torch.nn.Conv2d",
  "torch.nn.ConvTranspose2d",
  "torch.nn.DataParallel",
  "torch.nn.GroupNorm",
  "torch.nn.InstanceNorm1d",
  "torch.nn.InstanceNorm2d",
  "torch.nn.InstanceNorm3d",
  "torch.nn.LayerNorm",
  "torch.nn.Linear",
  "torch.nn.LocalResponseNorm",
  "torch.nn.Module",
  "torch.nn.ModuleList",
  "torch.nn.Parameter",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.nn.SyncBatchNorm",
  "torch.nn.Upsample",
  "torch.nn.functional.batch_norm",
  "torch.nn.functional.binary_cross_entropy_with_logits",
  "torch.nn.functional.conv_transpose2d",
  "torch.nn.functional.cross_entropy",
  "torch.nn.functional.grid_sample",
  "torch.nn.functional.interpolate",
  "torch.nn.functional.max_pool2d",
  "torch.nn.functional.pad",
  "torch.nn.functional.relu",
  "torch.nn.functional.relu_",
  "torch.nn.functional.softmax",
  "torch.nn.init.constant_",
  "torch.nn.init.kaiming_normal_",
  "torch.nn.init.kaiming_uniform_",
  "torch.nn.init.normal_",
  "torch.nn.modules.batchnorm",
  "torch.nn.modules.utils._ntuple",
  "torch.nn.modules.utils._pair",
  "torch.nn.parallel.DistributedDataParallel",
  "torch.nn.parallel.distributed.DistributedDataParallel",
  "torch.nn.parameter.Parameter",
  "torch.no_grad",
  "torch.nonzero",
  "torch.ones",
  "torch.ones_like",
  "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
  "torch.onnx.export",
  "torch.onnx.is_in_onnx_export",
  "torch.ops._caffe2.AliasWithName",
  "torch.ops._caffe2.BBoxTransform",
  "torch.ops._caffe2.BatchPermutation",
  "torch.ops._caffe2.BoxWithNMSLimit",
  "torch.ops._caffe2.CollectRpnProposals",
  "torch.ops._caffe2.CopyCPUToGPU",
  "torch.ops._caffe2.CopyGPUToCPU",
  "torch.ops._caffe2.DistributeFpnProposals",
  "torch.ops._caffe2.GenerateProposals",
  "torch.ops._caffe2.HeatmapMaxKeypoint",
  "torch.ops._caffe2.ResizeNearest",
  "torch.ops._caffe2.RoIAlign",
  "torch.optim.Optimizer",
  "torch.optim.SGD",
  "torch.optim.lr_scheduler._LRScheduler",
  "torch.rand",
  "torch.randperm",
  "torch.rsqrt",
  "torch.save",
  "torch.set_rng_state",
  "torch.sin",
  "torch.sort",
  "torch.split",
  "torch.sqrt",
  "torch.stack",
  "torch.sum",
  "torch.tensor",
  "torch.trunc",
  "torch.uint8",
  "torch.unbind",
  "torch.unique",
  "torch.utils.collect_env.get_pretty_env_info",
  "torch.utils.cpp_extension.CUDA_HOME",
  "torch.utils.data",
  "torch.utils.data.Dataset",
  "torch.utils.data.IterableDataset",
  "torch.utils.data.sampler.BatchSampler",
  "torch.utils.data.sampler.Sampler",
  "torch.utils.tensorboard.SummaryWriter",
  "torch.version.debug",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "torchvision.__file__",
  "torchvision.__version__",
  "torchvision.ops.RoIPool",
  "torchvision.ops.boxes",
  "torchvision.ops.boxes.batched_nms",
  "torchvision.ops.boxes.clone",
  "torchvision.ops.boxes.device",
  "torchvision.ops.boxes.numel",
  "torchvision.ops.boxes.shape",
  "torchvision.ops.nms",
  "train_loop.HookBase",
  "train_loop.SimpleTrainer",
  "transform.ExtentTransform",
  "transform.ResizeTransform",
  "transforms",
  "transforms.CropTransform",
  "transforms.HFlipTransform",
  "transforms.RandomCrop",
  "transforms.RandomFlip",
  "transforms.ResizeShortestEdge",
  "transforms.apply_box",
  "transforms.apply_coords",
  "transforms.apply_polygons",
  "transforms.apply_segmentation",
  "transforms.apply_transform_gens",
  "transforms.transforms",
  "types.SimpleNamespace",
  "typing.Any",
  "typing.Callable",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.Iterator",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "upsample_filt",
  "utils.env.setup_environment",
  "valid",
  "visible_keypoints_in_image",
  "weakref.proxy",
  "wrappers.BatchNorm2d",
  "wrappers._NewEmptyTensorOp.apply",
  "xml.etree.ElementTree.parse"
 ],
 "deps": {
  "C2MetaArch": [],
  "DatasetCatalog": [],
  "MetadataCatalog": [],
  "PIL": [],
  "WrapModel": [],
  "_assign_op_device_option": [],
  "_cast_caffe2_blob_to_torch_tensor": [],
  "_check_and_update": [],
  "_check_size_scale_factor": [],
  "_del": [],
  "_fuse_once": [],
  "_get": [],
  "_get_all_paths_util": [],
  "_get_device_option": [],
  "_get_device_type": [],
  "_has": [],
  "_is_dead_end": [],
  "_list_to_str": [],
  "_make_array": [],
  "_output_size": [],
  "_replace_list": [],
  "_serialize": [],
  "_set": [],
  "_update_i": [],
  "abc": [],
  "anchor_generator": [],
  "argparse": [],
  "backbone": [],
  "bisect": [],
  "box_head": [],
  "box_regression": [],
  "boxes": [],
  "build": [],
  "builtin_meta": [],
  "c10": [],
  "c2_model_loading": [],
  "caffe2": [],
  "caffe2_export": [],
  "caffe2_inference": [],
  "caffe2_modeling": [],
  "catalog": [],
  "ccc": [],
  "cityscapes": [],
  "cityscapesscripts": [],
  "cloudpickle": [],
  "coco": [],
  "coco_evaluation": [],
  "collections": [],
  "colormap": [],
  "colorsys": [],
  "common": [],
  "compat": [],
  "config": [],
  "contain_targets": [],
  "contextlib": [],
  "copy": [],
  "cv2": [],
  "data_loader": [],
  "dataset_mapper": [],
  "datetime": [],
  "defaults": [],
  "deform_conv_op": [],
  "detection_utils": [],
  "detectron2": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "evaluator": [],
  "f": [],
  "fast_rcnn": [],
  "file2id": [],
  "fmt_box_list": [],
  "fpn_map": [],
  "func": [],
  "functools": [],
  "fvcore": [
   "fvcore/conda-forge/noarch/fvcore-0.1.1.post20200606-py_0",
   "fvcore/conda-forge/noarch/fvcore-0.1.1.post20200608-py_0"
  ],
  "glob": [],
  "hooks": [],
  "id": [],
  "importlib": [],
  "input": [],
  "inspect": [],
  "int": [],
  "io": [],
  "itertools": [],
  "json": [],
  "keypoint_head": [],
  "lateral_conv": [],
  "layer": [],
  "logger": [],
  "logging": [],
  "lr_scheduler": [],
  "lvis": [],
  "lvis_v0_5_categories": [],
  "mask_head": [],
  "match": [],
  "matcher": [],
  "math": [],
  "matplotlib": [],
  "maybe_to_cpu": [],
  "meta_arch": [],
  "mock": [],
  "multiprocessing": [],
  "numexpr": [
   "numexpr/conda-forge/linux-64/numexpr-2.7.3-py36h284efc9_0"
  ],
  "numpy": [],
  "onnx": [],
  "operator": [],
  "original_type": [],
  "os": [],
  "output_conv": [],
  "panopticapi": [],
  "pascal_voc": [],
  "patcher": [],
  "pickle": [],
  "pkg_resources": [],
  "pooler": [],
  "poolers": [],
  "postprocessing": [],
  "pprint": [],
  "process_polygons": [],
  "proposal_generator": [],
  "pycocotools": [],
  "random": [],
  "re": [],
  "register_coco": [],
  "resample": [
   "resample/conda-forge/noarch/resample-1.0.1-pyh9f0ad1d_0"
  ],
  "resnet": [],
  "reverse_id_mapper": [],
  "roi_heads": [],
  "rpn": [],
  "rpn_outputs": [],
  "rrpn_outputs": [],
  "samplers": [],
  "sampling": [],
  "semantic_seg": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "shared": [],
  "short_name": [],
  "socket": [],
  "stage": [],
  "status_updater": [],
  "str": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "tabulate": [
   "tabulate/conda-forge/noarch/tabulate-0.8.2-py_0",
   "tabulate/conda-forge/noarch/tabulate-0.8.4-py_0"
  ],
  "tempfile": [],
  "termcolor": [],
  "time": [],
  "torch": [],
  "torchvision": [],
  "train_loop": [],
  "transform": [],
  "transforms": [],
  "types": [],
  "typing": [],
  "upsample_filt": [],
  "utils": [],
  "valid": [],
  "visible_keypoints_in_image": [],
  "weakref": [],
  "wrappers": [],
  "xml": []
 }
}