{
 "bad": [
  "ChannelList.read",
  "EventTable.read",
  "FrequencySeries._default_xunit",
  "FrequencySeries._metadata_slots",
  "LDAStools.frameCPP",
  "LDAStools.frameCPP.Dimension",
  "LDAStools.frameCPP.FrAdcData",
  "LDAStools.frameCPP.FrEvent",
  "LDAStools.frameCPP.FrProcData",
  "LDAStools.frameCPP.FrProcData.AMPLITUDE_SPECTRAL_DENSITY",
  "LDAStools.frameCPP.FrProcData.COHERENCE",
  "LDAStools.frameCPP.FrProcData.CROSS_SPECTRAL_DENSITY",
  "LDAStools.frameCPP.FrProcData.DFT",
  "LDAStools.frameCPP.FrProcData.FREQUENCY_SERIES",
  "LDAStools.frameCPP.FrProcData.MULTI_DIMENSIONAL",
  "LDAStools.frameCPP.FrProcData.OTHER_1D_SERIES_DATA",
  "LDAStools.frameCPP.FrProcData.POWER_SPECTRAL_DENSITY",
  "LDAStools.frameCPP.FrProcData.TIME_FREQUENCY",
  "LDAStools.frameCPP.FrProcData.TIME_SERIES",
  "LDAStools.frameCPP.FrProcData.TRANSFER_FUNCTION",
  "LDAStools.frameCPP.FrProcData.UNKNOWN_SUB_TYPE",
  "LDAStools.frameCPP.FrProcData.UNKNOWN_TYPE",
  "LDAStools.frameCPP.FrProcData.WAVELETS",
  "LDAStools.frameCPP.FrSimData",
  "LDAStools.frameCPP.FrVect",
  "LDAStools.frameCPP.FrVect.DIFF_GZIP",
  "LDAStools.frameCPP.FrVect.FR_VECT_16C",
  "LDAStools.frameCPP.FrVect.FR_VECT_1U",
  "LDAStools.frameCPP.FrVect.FR_VECT_2S",
  "LDAStools.frameCPP.FrVect.FR_VECT_2U",
  "LDAStools.frameCPP.FrVect.FR_VECT_4R",
  "LDAStools.frameCPP.FrVect.FR_VECT_4S",
  "LDAStools.frameCPP.FrVect.FR_VECT_4U",
  "LDAStools.frameCPP.FrVect.FR_VECT_8C",
  "LDAStools.frameCPP.FrVect.FR_VECT_8R",
  "LDAStools.frameCPP.FrVect.FR_VECT_8S",
  "LDAStools.frameCPP.FrVect.FR_VECT_8U",
  "LDAStools.frameCPP.FrVect.FR_VECT_C",
  "LDAStools.frameCPP.FrVect.FR_VECT_STRING",
  "LDAStools.frameCPP.FrVect.GZIP",
  "LDAStools.frameCPP.FrVect.RAW",
  "LDAStools.frameCPP.FrVect.ZERO_SUPPRESS_OTHERWISE_GZIP",
  "LDAStools.frameCPP.FrVect.ZERO_SUPPRESS_WORD_2",
  "LDAStools.frameCPP.FrVect.ZERO_SUPPRESS_WORD_4",
  "LDAStools.frameCPP.FrVect.ZERO_SUPPRESS_WORD_8",
  "LDAStools.frameCPP.FrameH",
  "LDAStools.frameCPP.GPSTime",
  "LDAStools.frameCPP.GetDetector",
  "LDAStools.frameCPP.IFrameFStream",
  "LDAStools.frameCPP.OFrameFStream",
  "PRODUCTS.items",
  "PRODUCTS.keys",
  "SegmentList.read",
  "Series._ndim",
  "Table.Column",
  "TimeSeries.fetch_open_data",
  "__main__.main",
  "_check_index",
  "_fdcommon.fdfilter",
  "_framecpp.Compression",
  "_framecpp.DefaultCompressionLevel",
  "_framecpp.DetectorLocation",
  "_framecpp.FrProcDataSubType",
  "_framecpp.FrProcDataSubType.COHERENCE",
  "_framecpp.FrProcDataSubType.UNKNOWN",
  "_framecpp.FrProcDataType",
  "_framecpp.FrProcDataType.FREQUENCY_SERIES",
  "_framecpp.FrProcDataType.MULTI_DIMENSIONAL",
  "_framecpp.FrProcDataType.OTHER_1D_SERIES_DATA",
  "_framecpp.FrProcDataType.TIME_FREQUENCY",
  "_framecpp.FrProcDataType.TIME_SERIES",
  "_framecpp.FrProcDataType.UNKNOWN",
  "_framecpp.FrVectType.find",
  "_get",
  "_get_filter_keys",
  "_lal.generate_fft_plan",
  "_lal.generate_window",
  "_lal.window_from_array",
  "_new",
  "_parse_segments",
  "_poly",
  "_read",
  "_read_write",
  "_reader",
  "_registry.METHODS.items",
  "_registry.register_method",
  "_set",
  "_utils.scale_timeseries_unit",
  "_version.get_versions",
  "_warn",
  "_write",
  "_write_attrs",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abs.__doc__",
  "add_",
  "api_func",
  "append",
  "argparse.ArgumentDefaultsHelpFormatter",
  "argparse.ArgumentParser",
  "argparse.RawTextHelpFormatter",
  "array.Array",
  "array.Array._metadata_slots",
  "array.Array.copy.__doc__",
  "array_meth",
  "assert_array",
  "astro.burst_range",
  "astro.burst_range_spectrum",
  "astro.inspiral_range",
  "astro.inspiral_range_psd",
  "astro.range_spectrogram",
  "astro.range_timeseries",
  "astropy.constants.G",
  "astropy.constants.G.to",
  "astropy.constants.M_sun",
  "astropy.constants.c",
  "astropy.constants.c.to",
  "astropy.io.ascii.InconsistentTableError",
  "astropy.io.ascii.core.BaseData",
  "astropy.io.ascii.core.BaseHeader",
  "astropy.io.ascii.core.BaseReader",
  "astropy.io.ascii.core.Column",
  "astropy.io.ascii.core.InconsistentTableError",
  "astropy.io.misc.hdf5.read_table_hdf5",
  "astropy.io.registry.IORegistryError",
  "astropy.io.registry._get_valid_format",
  "astropy.io.registry._identifiers",
  "astropy.io.registry._is_best_match",
  "astropy.io.registry.get_formats",
  "astropy.io.registry.get_reader",
  "astropy.io.registry.get_writer",
  "astropy.io.registry.read",
  "astropy.io.registry.register_identifier",
  "astropy.io.registry.register_identifier.__doc__",
  "astropy.io.registry.register_reader",
  "astropy.io.registry.register_writer",
  "astropy.io.registry.write",
  "astropy.table.Column",
  "astropy.table.Table",
  "astropy.table.Table.from_pandas",
  "astropy.table.Table.read",
  "astropy.table.vstack",
  "astropy.time.Time",
  "astropy.units.Farad",
  "astropy.units.Hertz",
  "astropy.units.Hz",
  "astropy.units.IrreducibleUnit",
  "astropy.units.M_sun",
  "astropy.units.Mpc",
  "astropy.units.NamedUnit",
  "astropy.units.Quantity",
  "astropy.units.Quantity._to_own_unit.__doc__",
  "astropy.units.Quantity.copy.__doc__",
  "astropy.units.Unit",
  "astropy.units.UnitBase",
  "astropy.units.UnitConversionError",
  "astropy.units.UnitsWarning",
  "astropy.units.V",
  "astropy.units.ampere",
  "astropy.units.day",
  "astropy.units.def_unit",
  "astropy.units.dimensionless_unscaled",
  "astropy.units.format.LatexInline",
  "astropy.units.format.generic.Generic",
  "astropy.units.kiloHertz",
  "astropy.units.m",
  "astropy.units.mHz",
  "astropy.units.megaparsec",
  "astropy.units.meter",
  "astropy.units.milliHertz",
  "astropy.units.millisecond",
  "astropy.units.minute",
  "astropy.units.s",
  "astropy.units.second",
  "astropy.units.week",
  "astropy.units.year",
  "astropy.utils.data.get_readable_fileobj",
  "axes.Axes",
  "axes.Axes.draw.__doc__",
  "base._TestCliProduct.TEST_ARGS",
  "base._TestFFTMixin",
  "base._TestFrequencyDomainProduct",
  "base._TestImageProduct",
  "base._TestTimeDomainProduct",
  "base.mock_nds2_connection",
  "base.update_namespace",
  "builtins.__import__",
  "bytes.decode",
  "cache.FILE_LIKE",
  "cache._iter_cache",
  "cache.cache_segments",
  "cache.file_segment",
  "cache.preformat_cache",
  "cache.read_cache",
  "cache.read_cache_entry",
  "cache.write_cache",
  "cli.Coherence",
  "cli.Coherencegram",
  "cli.Qtransform",
  "cli.Spectrogram",
  "cli.Spectrum",
  "cli.TimeSeries",
  "cli.cliproduct.CliProduct",
  "cli.cliproduct.FrequencyDomainProduct",
  "cli.cliproduct.ImageProduct",
  "cli.cliproduct.to_float",
  "cliproduct.FFTMixin",
  "cliproduct.FrequencyDomainProduct",
  "cliproduct.ImageProduct",
  "cliproduct.TimeDomainProduct",
  "cls",
  "coherence.Coherence",
  "coherencegram.Coherencegram",
  "collections.OrderedDict",
  "collections.OrderedDict.fromkeys",
  "collections.abc.KeysView",
  "collections.abc.ValuesView",
  "collections.namedtuple",
  "colorbar.process_colorbar_kwargs",
  "colors.format_norm",
  "colors.tint",
  "contextlib.contextmanager",
  "copy.__doc__",
  "copy.copy",
  "copy.deepcopy",
  "core.TimeSeriesBase",
  "core.TimeSeriesBase._metadata_slots",
  "core.TimeSeriesBase._print_slots",
  "core.TimeSeriesBase.diff.__doc__",
  "core.TimeSeriesBase.from_nds2_buffer",
  "core.TimeSeriesBaseDict",
  "core.TimeSeriesBaseDict.__doc__.replace",
  "core.TimeSeriesBaseList",
  "core.TimeSeriesBaseList.__doc__.replace",
  "core._dynamic_scaled",
  "core._pad_series",
  "core.as_series_dict_class",
  "create",
  "ctx",
  "datafind.FflConnection",
  "datafind._type_priority",
  "datafind.find_best_frametype",
  "datafind.find_frametype",
  "datafind.find_types",
  "datafind.on_tape",
  "datafind.reconnect",
  "datafind.with_connection",
  "datetime.date",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.combine",
  "datetime.datetime.now",
  "datetime.datetime.utcnow",
  "datetime.time.min",
  "datetime.timedelta",
  "dateutil.tz.gettz",
  "dateutil.tz.tzlocal",
  "dateutil.tz.tzutc",
  "decimal.Decimal",
  "decorator",
  "decorators.return_as",
  "detector.Channel",
  "detector.Channel.MATCH.match",
  "detector.Channel.from_nds2",
  "detector.ChannelList.from_names",
  "detector.units.Unit",
  "detector.units.parse_unit",
  "distutils.spawn.find_executable",
  "distutils.version.LooseVersion",
  "docutils.nodes.reference",
  "enum.NumpyTypeEnum",
  "env",
  "env.bool_env",
  "fake",
  "fetch.register_fetcher",
  "fetcher",
  "fformat",
  "filter.OPERATORS",
  "filter.filter_table",
  "filter.parse_column_filters",
  "filter.parse_operator",
  "filter_design.bandpass",
  "filter_design.concatenate_zpks",
  "filter_design.fir_from_transfer",
  "filter_design.highpass",
  "filter_design.lowpass",
  "filter_design.notch",
  "filter_design.parse_filter",
  "filter_design.truncate_impulse",
  "filter_design.truncate_transfer",
  "filters.in_segmentlist",
  "filters.not_in_segmentlist",
  "format.lower",
  "framel.frgetvect1d",
  "framel.frputvect",
  "frequencyseries.FrequencySeries",
  "frequencyseries.FrequencySeries._default_xunit",
  "frequencyseries.FrequencySeries.from_lal",
  "frequencyseries.FrequencySeries.from_pycbc",
  "frequencyseries.SpectralVariance",
  "frequencyseries.SpectralVariance.from_spectrogram",
  "frequencyseries._fdcommon.fdfilter",
  "func",
  "func.__name__",
  "func_",
  "functools.reduce",
  "functools.update_wrapper",
  "functools.wraps",
  "getpass.getpass",
  "glue.lal.Cache",
  "glue.lal.Cache.entry_class",
  "glue.lal.Cache.from_urls",
  "glue.lal.LIGOTimeGPS",
  "glue.ligolw._ilwd.ilwdchar",
  "glue.ligolw.ilwd.get_ilwdchar_class",
  "glue.ligolw.ilwd.ilwdchar",
  "glue.ligolw.ligolw.Document",
  "glue.ligolw.ligolw.Element",
  "glue.ligolw.ligolw.LIGO_LW",
  "glue.ligolw.ligolw.Stream",
  "glue.ligolw.lsctables.SnglBurstTable",
  "glue.ligolw.lsctables.SnglBurstTable.reset_next_id",
  "glue.ligolw.lsctables.TableByName.values",
  "glue.segmentdb.query_engine.LdbdQueryEngine",
  "glue.segmentdb.segmentdb_utils.expand_version_number",
  "glue.segmentdb.segmentdb_utils.query_segments",
  "glue.segmentdb.segmentdb_utils.setup_database",
  "gps.GPSMixin",
  "gps.GPSTransform",
  "gps.GPS_SCALES",
  "gps.InvertedGPSTransform",
  "gwdatafind.connect",
  "gwf.channel_in_frame",
  "gwf.create_frvect",
  "gwf.data_segments",
  "gwf.get_channel_names",
  "gwf.get_channel_type",
  "gwf.identify_gwf",
  "gwf.iter_channel_names",
  "gwf.num_channels",
  "gwf.open_gwf",
  "gwosc.api.DEFAULT_URL",
  "gwosc.api.fetch_catalog_json",
  "gwosc.locate.get_urls",
  "gwosc.timeline.get_segments",
  "gwpy_plot.main",
  "gzip.GzipFile",
  "gzip.open",
  "h5py.Dataset",
  "h5py.File",
  "h5py.Group",
  "h5py.HLObject",
  "http.client.HTTPConnection",
  "http.client.HTTPException",
  "id_func",
  "identifier",
  "importlib.import_module",
  "index",
  "index.Index",
  "inspect.currentframe",
  "inspect.getmembers",
  "interp",
  "io.BytesIO",
  "io.IOBase",
  "io.StringIO",
  "io._framecpp.DetectorLocation.__members__",
  "io.cache.FILE_LIKE",
  "io.cache.file_segment",
  "io.cache.find_contiguous",
  "io.cache.is_cache",
  "io.cache.read_cache",
  "io.cache.sieve",
  "io.cache.write_cache",
  "io.cis.query",
  "io.core.read",
  "io.datafind.find_best_frametype",
  "io.datafind.find_frametype",
  "io.datafind.find_urls",
  "io.fetch.get_fetcher",
  "io.gwf.create_fradcdata",
  "io.gwf.create_frame",
  "io.gwf.create_frprocdata",
  "io.gwf.create_frsimdata",
  "io.gwf.create_frvect",
  "io.gwf.get_channel_type",
  "io.gwf.get_default_gwf_api",
  "io.gwf.identify_gwf",
  "io.gwf.iter_channel_names",
  "io.gwf.open_gwf",
  "io.gwf.write_frames",
  "io.hacr.HACR_COLUMNS",
  "io.hdf5.create_dataset",
  "io.hdf5.find_dataset",
  "io.hdf5.identify_hdf5",
  "io.hdf5.with_read_hdf5",
  "io.hdf5.with_write_hdf5",
  "io.ligolw.LigolwElementError",
  "io.ligolw.build_content_handler",
  "io.ligolw.ilwdchar_compat",
  "io.ligolw.is_ligolw",
  "io.ligolw.is_xml",
  "io.ligolw.patch_ligotimegps",
  "io.ligolw.read_ligolw",
  "io.ligolw.read_table",
  "io.ligolw.to_table_type",
  "io.ligolw.write_tables",
  "io.losc.fetch_catalog",
  "io.losc.fetch_losc_data",
  "io.mp.read_multi",
  "io.nds2.NDSWarning",
  "io.nds2.Nds2ChannelType",
  "io.nds2.Nds2ChannelType.any",
  "io.nds2.Nds2ChannelType.find",
  "io.nds2.Nds2ChannelType.names",
  "io.nds2.Nds2DataType",
  "io.nds2.Nds2DataType.find",
  "io.nds2.auth_connect",
  "io.nds2.fetch",
  "io.nds2.find_channels",
  "io.nds2.get_availability",
  "io.nds2.host_resolution_order",
  "io.nds2.minute_trend_times",
  "io.nds2.open_connection",
  "io.nds2.print_verbose",
  "io.pycbc.empty_hdf5_file",
  "io.registry.register_identifier",
  "io.registry.register_reader",
  "io.registry.register_writer",
  "io.sql.fetch",
  "io.utils.FILE_LIKE",
  "io.utils.file_list",
  "io.utils.file_path",
  "io.utils.identify_factory",
  "itertools.chain",
  "itertools.cycle",
  "itertools.product",
  "itertools.zip_longest",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "kerberos.KerberosError",
  "kerberos.kinit",
  "kerberos.parse_keytab",
  "lal.ADCCountUnit",
  "lal.AmpereUnit",
  "lal.C_TYPE_CODE",
  "lal.CachedDetectors",
  "lal.D_TYPE_CODE",
  "lal.DimensionlessUnit",
  "lal.I2_TYPE_CODE",
  "lal.I4_TYPE_CODE",
  "lal.I8_TYPE_CODE",
  "lal.KelvinUnit",
  "lal.KiloGramUnit",
  "lal.LIGOTimeGPS",
  "lal.MeterUnit",
  "lal.REAL4Window",
  "lal.S_TYPE_CODE",
  "lal.SecondUnit",
  "lal.StrainUnit",
  "lal.U2_TYPE_CODE",
  "lal.U4_TYPE_CODE",
  "lal.U8_TYPE_CODE",
  "lal.Unit",
  "lal.Z_TYPE_CODE",
  "lal.utils.CacheEntry",
  "lal.utils.CacheEntry.from_T050017",
  "lalframe.FrFileQueryDt",
  "lalframe.FrFileQueryNFrame",
  "lalframe.FrStreamCacheOpen",
  "lalframe.FrStreamGetTimeSeriesType",
  "lalframe.FrStreamNext",
  "lalframe.FrStreamOpen",
  "lalframe.FrStreamReadREAL4TimeSeries",
  "lalframe.FrStreamSeek",
  "lalframe.FrameNew",
  "lalframe.FrameWrite",
  "legend.HandlerLine2D",
  "libread_",
  "libwrite_",
  "ligo.lw._ilwd.ilwdchar",
  "ligo.lw.array",
  "ligo.lw.array.Name",
  "ligo.lw.array.Unit",
  "ligo.lw.array.array",
  "ligo.lw.array.getElementsByTagName",
  "ligo.lw.array.parentNode",
  "ligo.lw.array.use_in",
  "ligo.lw.ilwd.get_ilwdchar_class",
  "ligo.lw.ligolw.Array.tagName",
  "ligo.lw.ligolw.Dim.tagName",
  "ligo.lw.ligolw.Document",
  "ligo.lw.ligolw.Document.__module__.startswith",
  "ligo.lw.ligolw.ElementError",
  "ligo.lw.ligolw.FilteringLIGOLWContentHandler",
  "ligo.lw.ligolw.LIGOLWContentHandler",
  "ligo.lw.ligolw.LIGO_LW",
  "ligo.lw.ligolw.PartialLIGOLWContentHandler",
  "ligo.lw.ligolw.Time",
  "ligo.lw.ligolw.Time.tagName",
  "ligo.lw.lsctables.LIGOTimeGPS",
  "ligo.lw.lsctables.New",
  "ligo.lw.lsctables.SegmentDefTable",
  "ligo.lw.lsctables.SegmentSumTable",
  "ligo.lw.lsctables.SegmentTable",
  "ligo.lw.lsctables.SnglBurstTable",
  "ligo.lw.lsctables.TableByName",
  "ligo.lw.lsctables.TableByName.get_table",
  "ligo.lw.lsctables.TableByName.values",
  "ligo.lw.lsctables.VetoDef",
  "ligo.lw.lsctables.VetoDef.__slots__",
  "ligo.lw.lsctables.gpsproperty",
  "ligo.lw.lsctables.use_in",
  "ligo.lw.param.Param.tagName",
  "ligo.lw.param.get_param",
  "ligo.lw.param.use_in",
  "ligo.lw.table",
  "ligo.lw.table.Name",
  "ligo.lw.table.Table",
  "ligo.lw.table.Table.TableName",
  "ligo.lw.table.TableName",
  "ligo.lw.table.meta.get",
  "ligo.lw.types.ToNumPyType",
  "ligo.lw.types.ToPyType",
  "ligo.lw.types.ToPyType.copy",
  "ligo.lw.utils.ligolw_add.ligolw_add",
  "ligo.lw.utils.load_filename",
  "ligo.lw.utils.load_fileobj",
  "ligo.lw.utils.load_url",
  "ligo.lw.utils.write_filename",
  "ligo.lw.utils.write_fileobj",
  "ligo.segments.segment",
  "ligo.segments.segmentlist",
  "ligo.segments.segmentlist.coalesce.__doc__",
  "ligo.segments.segmentlist.extent",
  "ligo.segments.segmentlistdict",
  "ligolw.get_ligolw_element",
  "ligolw.ilwdchar_compat",
  "ligolw.list_tables",
  "ligolw.open_xmldoc",
  "ligolw.read_table",
  "ligolw.to_table_type",
  "ligolw.write_tables",
  "ligolw.write_tables_to_document",
  "list.__init__",
  "list.append.__doc__",
  "list.extend.__doc__",
  "log.LogFormatter",
  "log._math",
  "math.ceil",
  "math.exp",
  "math.floor",
  "math.isclose",
  "math.isinf",
  "math.log",
  "math.log10",
  "math.pi",
  "math.pi.to",
  "math.sqrt",
  "matplotlib.__version__",
  "matplotlib._pylab_helpers.Gcf.set_active",
  "matplotlib.artist.allow_rasterization",
  "matplotlib.artist.setp",
  "matplotlib.axes.Axes",
  "matplotlib.axes.Axes.hist.__doc__.replace",
  "matplotlib.axes.Axes.legend.__doc__.replace",
  "matplotlib.axes.Axes.scatter.__doc__.replace",
  "matplotlib.axes.Axes.set_xlim",
  "matplotlib.axes.SubplotBase",
  "matplotlib.axes._base._process_plot_var_args",
  "matplotlib.collections.PatchCollection",
  "matplotlib.collections.PolyCollection",
  "matplotlib.colors.ColorConverter",
  "matplotlib.colors.LogNorm",
  "matplotlib.colors.Normalize",
  "matplotlib.colors._colors_full_map.update",
  "matplotlib.colors.hsv_to_rgb",
  "matplotlib.colors.is_color_like",
  "matplotlib.colors.rgb_to_hsv",
  "matplotlib.colors.to_hex",
  "matplotlib.colors.to_rgb",
  "matplotlib.figure.Figure",
  "matplotlib.figure.SubplotParams",
  "matplotlib.get_backend",
  "matplotlib.gridspec.GridSpec",
  "matplotlib.legend.Legend.codes",
  "matplotlib.legend_handler.HandlerLine2D",
  "matplotlib.lines.Line2D",
  "matplotlib.mlab.cohere",
  "matplotlib.patches.Rectangle",
  "matplotlib.projections.get_projection_class",
  "matplotlib.projections.register_projection",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.draw_if_interactive",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.get_fignums",
  "matplotlib.pyplot.new_figure_manager.__module__",
  "matplotlib.rcParams",
  "matplotlib.rcParams.by_key",
  "matplotlib.rcParams.get",
  "matplotlib.rcParams.update",
  "matplotlib.rc_context",
  "matplotlib.rcsetup.interactive_bk",
  "matplotlib.scale.LinearScale",
  "matplotlib.scale.LogScale",
  "matplotlib.scale.register_scale",
  "matplotlib.style.use",
  "matplotlib.ticker.AutoMinorLocator",
  "matplotlib.ticker.Formatter",
  "matplotlib.ticker.LogFormatterMathtext",
  "matplotlib.ticker.LogFormatterSciNotation",
  "matplotlib.ticker.LogLocator",
  "matplotlib.ticker.MaxNLocator",
  "matplotlib.ticker.MultipleLocator",
  "matplotlib.ticker.NullFormatter",
  "matplotlib.ticker.is_close_to_int",
  "matplotlib.transforms.Transform",
  "matplotlib.use",
  "maya.when",
  "misc.gprint",
  "misc.if_not_none",
  "misc.null_context",
  "misc.round_to_power",
  "misc.unique",
  "mp.multiprocess_with_queues",
  "mp.read_multi",
  "mpl_toolkits.axes_grid1.inset_locator.inset_axes",
  "mpl_toolkits.axes_grid1.make_axes_locatable",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "myfunc",
  "nds2.NDS2_TYPE_NAME.values",
  "nds2.NDSWarning",
  "nds2.Nds2ChannelType",
  "nds2.Nds2ChannelType.MTREND.value",
  "nds2.Nds2ChannelType.any",
  "nds2.Nds2DataType",
  "nds2.Nds2DataType.FLOAT64.value",
  "nds2.Nds2DataType.any",
  "nds2._get_nds2_name",
  "nds2._get_nds2_names",
  "nds2.auth_connect",
  "nds2.availability",
  "nds2.buffer",
  "nds2.channel",
  "nds2.channel.channel_type_to_string",
  "nds2.connect",
  "nds2.connection",
  "nds2.find_channels",
  "nds2.get_availability",
  "nds2.host_resolution_order",
  "nds2.minute_trend_times",
  "nds2.open_connection",
  "nds2.parse_nds_env",
  "nds2.simple_segment",
  "new_func",
  "numbers.Integral",
  "numbers.Number",
  "numpy.abs",
  "numpy.abs.__doc__",
  "numpy.absolute",
  "numpy.all",
  "numpy.allclose",
  "numpy.angle",
  "numpy.append",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.argwhere",
  "numpy.array",
  "numpy.array2string",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.atleast_2d",
  "numpy.average",
  "numpy.bool_",
  "numpy.can_cast",
  "numpy.ceil",
  "numpy.column_stack",
  "numpy.complex",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.cumsum",
  "numpy.diff",
  "numpy.dtype",
  "numpy.empty",
  "numpy.errstate",
  "numpy.exp",
  "numpy.fft.ifft",
  "numpy.fft.ifftshift",
  "numpy.fft.irfft",
  "numpy.fft.rfft",
  "numpy.fft.rfftfreq",
  "numpy.float32",
  "numpy.float64",
  "numpy.float_",
  "numpy.floor",
  "numpy.geomspace",
  "numpy.histogram",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.int_",
  "numpy.integer",
  "numpy.interp",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.iterable",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.log10",
  "numpy.logspace",
  "numpy.longdouble",
  "numpy.max",
  "numpy.may_share_memory",
  "numpy.mean",
  "numpy.median",
  "numpy.median.__doc__",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.ndarray.__getitem__",
  "numpy.ndarray.all",
  "numpy.ndarray.dumps.__doc__",
  "numpy.ndarray.tolist.__doc__",
  "numpy.ndarray.tostring.__doc__",
  "numpy.ndim",
  "numpy.nditer",
  "numpy.nonzero",
  "numpy.object_",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.percentile",
  "numpy.pi",
  "numpy.prod",
  "numpy.rad2deg",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.recarray",
  "numpy.require",
  "numpy.result_type",
  "numpy.rint",
  "numpy.roll",
  "numpy.round",
  "numpy.savetxt",
  "numpy.set_printoptions",
  "numpy.shape",
  "numpy.shares_memory",
  "numpy.sin",
  "numpy.size",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.typeDict",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.unicode_",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "op_",
  "op_func",
  "operator.and_",
  "operator.attrgetter",
  "operator.eq",
  "operator.ge",
  "operator.gt",
  "operator.itemgetter",
  "operator.le",
  "operator.lt",
  "operator.mul",
  "operator.ne",
  "operator.or_",
  "origin",
  "os.SEEK_CUR",
  "os.SEEK_END",
  "os.curdir",
  "os.environ",
  "os.environ.get",
  "os.environ.lower",
  "os.environ.pop",
  "os.getenv",
  "os.makedirs",
  "os.path.basename",
  "os.path.curdir",
  "os.path.getmtime",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "os.remove",
  "os.stat",
  "os.walk",
  "pandas.api.types.infer_dtype",
  "pandas.read_sql",
  "pickle.UnpicklingError",
  "pickle.loads",
  "platform.platform",
  "platform.python_version",
  "plot.Plot",
  "plot.SegmentAxes",
  "plot.gps.GPSTransform",
  "plot.gps.GPS_SCALES",
  "plot.tex.HAS_TEX",
  "plot.tex.label_to_latex",
  "plot.text.default_unit_label",
  "plot_func",
  "plotter",
  "posixpath.join",
  "posixpath.splitext",
  "print.__doc__",
  "progress.progress_bar",
  "pycbc.psd.welch",
  "pycbc.types.FrequencySeries",
  "pycbc.types.FrequencySeries.read",
  "pycbc.types.TimeSeries",
  "pymysql.connect",
  "pytest.approx",
  "pytest.deprecated_call",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.usefixtures",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "qtransform.Qtransform",
  "qtransform.q_scan",
  "query_",
  "query_method",
  "queue.Queue",
  "range_func",
  "rc.MPL_RCPARAMS",
  "rc.get_subplot_params",
  "rc.rcParams",
  "rc.rc_params",
  "re.I",
  "re.Pattern",
  "re._pattern_type",
  "re.compile",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "read",
  "read_",
  "read_timeseries",
  "read_timeseriesdict",
  "reader",
  "registry.get_read_format",
  "returntype",
  "returntype.__name__",
  "scale_",
  "scipy.integrate.trapz",
  "scipy.interpolate.InterpolatedUnivariateSpline",
  "scipy.interpolate.interp2d",
  "scipy.io.wavfile.read",
  "scipy.io.wavfile.write",
  "scipy.signal.argrelmax",
  "scipy.signal.argrelmin",
  "scipy.signal.bilinear",
  "scipy.signal.bode",
  "scipy.signal.cheby1",
  "scipy.signal.detrend",
  "scipy.signal.dlti",
  "scipy.signal.fftconvolve",
  "scipy.signal.filtfilt",
  "scipy.signal.find_peaks",
  "scipy.signal.firwin",
  "scipy.signal.freqs",
  "scipy.signal.gausspulse",
  "scipy.signal.get_window",
  "scipy.signal.hann",
  "scipy.signal.iirdesign",
  "scipy.signal.lfilter",
  "scipy.signal.lti",
  "scipy.signal.ltisys.LinearTimeInvariant",
  "scipy.signal.periodogram",
  "scipy.signal.resample",
  "scipy.signal.sos2zpk",
  "scipy.signal.sosfilt",
  "scipy.signal.sosfiltfilt",
  "scipy.signal.spectrogram",
  "scipy.signal.windows.windows._win_equiv.__name__",
  "scipy.signal.zpk2sos",
  "scipy.signal.zpk2tf",
  "scipy.special.expit",
  "segments.DataQualityDict",
  "segments.DataQualityDict.from_ligolw_tables",
  "segments.DataQualityFlag",
  "segments.DataQualityFlag.fetch_open_data",
  "segments.DataQualityFlag.query",
  "segments.DataQualityFlag.query_dqsegdb",
  "segments.Segment",
  "segments.SegmentList",
  "segments.SegmentListDict",
  "segments.SegmentRectangle",
  "selector",
  "series.Series",
  "series.Series._metadata_slots",
  "shell.call",
  "shell.which",
  "shutil.rmtree",
  "signal.filter_design.bandpass",
  "signal.filter_design.concatenate_zpks",
  "signal.filter_design.fir_from_transfer",
  "signal.filter_design.highpass",
  "signal.filter_design.lowpass",
  "signal.filter_design.notch",
  "signal.filter_design.parse_filter",
  "signal.qtransform.DEFAULT_FRANGE",
  "signal.qtransform.DEFAULT_MISMATCH",
  "signal.qtransform.DEFAULT_QRANGE",
  "signal.qtransform.q_scan",
  "signal.spectral.average_spectrogram",
  "signal.spectral.csd",
  "signal.spectral.get_method",
  "signal.spectral.psd",
  "signal.spectral.rayleigh",
  "signal.spectral.spectrogram",
  "signal.window.planck",
  "signal.window.recommended_overlap",
  "sliceutils.format_nd_slice",
  "sliceutils.null_slice",
  "sliceutils.slice_axis_attributes",
  "socket.timeout",
  "spec_func",
  "spectral._lal.generate_fft_plan",
  "spectral._lal.generate_window",
  "spectral._lal.median",
  "spectral._lal.median_mean",
  "spectral._lal.welch",
  "spectral._median_mean.median_mean",
  "spectral._pycbc.bartlett",
  "spectral._pycbc.median",
  "spectral._pycbc.median_mean",
  "spectral._pycbc.welch",
  "spectral._registry.METHODS",
  "spectral._registry.METHODS.pop",
  "spectral._registry.get_method",
  "spectral._registry.register_method",
  "spectral._scipy.bartlett",
  "spectral._scipy.median",
  "spectral._scipy.welch",
  "spectral._ui._chunk_timeseries",
  "spectral._ui.normalize_fft_params",
  "spectral._ui.seconds_to_samples",
  "spectral._utils.scale_timeseries_unit",
  "spectrogram.FFTMixin",
  "spectrogram.Spectrogram",
  "spectrogram.Spectrogram.from_spectra",
  "spectrogram.SpectrogramList",
  "spectrogram.coherence.from_timeseries",
  "spectrum.Spectrum",
  "sql.fetch",
  "sql.format_db_selection",
  "sqlalchemy.engine.Engine",
  "sqlalchemy.engine.create_engine",
  "sqlalchemy.exc.ProgrammingError",
  "ssl.SSLError",
  "statevector.StateTimeSeries",
  "str.title",
  "struct.error",
  "struct.unpack",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.check_output",
  "sys.argv",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.isatty",
  "sys.version_info",
  "table.EventTable",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile._TemporaryFileWrapper",
  "tempfile.mkdtemp",
  "tempfile.mktemp",
  "test_array.TestArray",
  "test_axes.TestAxes",
  "test_cache.cache",
  "test_coherence.TestCliCoherence.TEST_ARGS",
  "test_core.TestTimeSeriesBase",
  "test_core.TestTimeSeriesBaseDict",
  "test_core.TestTimeSeriesBaseList",
  "test_series.TestSeries",
  "test_spectrogram.TestCliSpectrogram",
  "test_spectrum.TestCliSpectrum",
  "test_table.TestEventTable",
  "test_timeseries.LOSC_FETCH_ERROR",
  "test_timeseries.LOSC_GW150914_SEGMENT",
  "test_timeseries.LOSC_IFO",
  "testing.mocks.nds2_availability",
  "testing.mocks.nds2_buffer",
  "testing.mocks.nds2_buffer_from_timeseries",
  "testing.mocks.nds2_channel",
  "testing.mocks.nds2_connection",
  "testing.mocks.segdb_expand_version_number",
  "testing.mocks.segdb_query_segments",
  "testing.utils.TEST_GWF_FILE",
  "testing.utils.TEST_HDF5_FILE",
  "testing.utils.TemporaryFilename",
  "testing.utils.assert_allclose",
  "testing.utils.assert_array_equal",
  "testing.utils.assert_dict_equal",
  "testing.utils.assert_flag_equal",
  "testing.utils.assert_quantity_almost_equal",
  "testing.utils.assert_quantity_equal",
  "testing.utils.assert_quantity_sub_equal",
  "testing.utils.assert_segmentlist_equal",
  "testing.utils.assert_table_equal",
  "testing.utils.assert_zpk_equal",
  "testing.utils.skip_minimum_version",
  "testing.utils.skip_missing_dependency",
  "testing.utils.test_read_write",
  "tex.float_to_latex",
  "tex.has_tex",
  "tex.label_to_latex",
  "text.to_string",
  "threading.Thread",
  "threading.Thread.__init__",
  "time.LIGOTimeGPS",
  "time.Time",
  "time.from_gps",
  "time.gps_types",
  "time.tconvert",
  "time.time",
  "time.to_gps",
  "timeseries.TimeSeries",
  "timeseries.TimeSeries._default_xunit",
  "timeseries.TimeSeries.dt.__delete__",
  "timeseries.TimeSeries.dt.__get__",
  "timeseries.TimeSeries.dt.__set__",
  "timeseries.TimeSeries.epoch.__delete__",
  "timeseries.TimeSeries.epoch.__get__",
  "timeseries.TimeSeries.epoch.__set__",
  "timeseries.TimeSeries.read",
  "timeseries.TimeSeries.span.__delete__",
  "timeseries.TimeSeries.span.__get__",
  "timeseries.TimeSeries.span.__set__",
  "timeseries.TimeSeries.t0.__delete__",
  "timeseries.TimeSeries.t0.__get__",
  "timeseries.TimeSeries.t0.__set__",
  "timeseries.TimeSeriesDict",
  "timeseries.TimeSeriesDict.get",
  "timeseries.TimeSeriesDict.read",
  "timeseries.TimeSeriesList",
  "timeseries.core._format_time",
  "to_s",
  "token.ENDMARKER",
  "token.NAME",
  "token.NEWLINE",
  "token.STRING",
  "tokenize.generate_tokens",
  "type.lower",
  "type.setter",
  "type.title",
  "type.values",
  "type_",
  "types.Array2D",
  "types.Array2D.__getitem__.__doc__",
  "types.Array2D._wrap_function.__doc__",
  "types.Array2D.dx.__delete__",
  "types.Array2D.dx.__get__",
  "types.Array2D.dx.__set__",
  "types.Array2D.dy.__delete__",
  "types.Array2D.dy.__get__",
  "types.Array2D.dy.__set__",
  "types.Array2D.x0.__delete__",
  "types.Array2D.x0.__get__",
  "types.Array2D.x0.__set__",
  "types.Array2D.xindex.__delete__",
  "types.Array2D.xindex.__get__",
  "types.Array2D.xindex.__set__",
  "types.Array2D.y0.__delete__",
  "types.Array2D.y0.__get__",
  "types.Array2D.y0.__set__",
  "types.Array2D.yindex.__delete__",
  "types.Array2D.yindex.__get__",
  "types.Array2D.yindex.__set__",
  "types.Array2D.yspan.__delete__",
  "types.Array2D.yspan.__get__",
  "types.Array2D.yspan.__set__",
  "types.GeneratorType",
  "types.Series",
  "types.Series._metadata_slots",
  "types.Series.dx",
  "types.Series.dx.__delete__",
  "types.Series.dx.__get__",
  "types.Series.dx.__set__",
  "types.Series.x0",
  "types.Series.x0.__delete__",
  "types.Series.x0.__get__",
  "types.Series.x0.__set__",
  "types.Series.xindex",
  "types.Series.xindex.__delete__",
  "types.Series.xindex.__get__",
  "types.Series.xindex.__set__",
  "types.Series.xspan",
  "types.io.ascii.register_ascii_series_io",
  "types.io.hdf5.read_hdf5_array",
  "types.io.ligolw.read_series",
  "types.sliceutils.null_slice",
  "types.tests.test_array2d.TestArray2D",
  "types.tests.test_series.TestSeries",
  "units.parse_unit",
  "unittest.mock.MagicMock",
  "unittest.mock.call",
  "unittest.mock.create_autospec",
  "unittest.mock.patch",
  "unittest.mock.patch.dict",
  "urllib.error.HTTPError",
  "urllib.error.URLError",
  "urllib.parse.urlencode",
  "urllib.parse.urljoin",
  "urllib.parse.urlparse",
  "urllib.request.urlopen",
  "utils.AXES_PARAMS",
  "utils.AxesTestBase",
  "utils.FIGURE_PARAMS",
  "utils.FILE_LIKE",
  "utils.FigureTestBase",
  "utils.TemporaryFilename",
  "utils.color_cycle",
  "utils.decorators.deprecated_function",
  "utils.decorators.return_as",
  "utils.enum.NumpyTypeEnum",
  "utils.env.bool_env",
  "utils.file_list",
  "utils.file_path",
  "utils.gopen",
  "utils.gprint",
  "utils.identify_factory",
  "utils.lal.Cache",
  "utils.lal.CacheGlob",
  "utils.lal.CacheImport",
  "utils.lal.CacheMerge",
  "utils.lal.LAL_DETECTORS.keys",
  "utils.lal.LIGOTimeGPS",
  "utils.lal.find_typed_function",
  "utils.lal.from_lal_unit",
  "utils.lal.to_lal_ligotimegps",
  "utils.lal.to_lal_type_str",
  "utils.lal.to_lal_unit",
  "utils.marker_cycle",
  "utils.misc.if_not_none",
  "utils.misc.null_context",
  "utils.mp.multiprocess_with_queues",
  "utils.progress.progress_bar",
  "utils.read_with_columns",
  "utils.read_with_selection",
  "utils.round_to_power",
  "utils.shell.which",
  "utils.tests.test_enum.TestNumpyTypeEnum",
  "utils.unique",
  "veto_def",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "wave.Error",
  "wave.open",
  "window.canonical_name",
  "window.planck",
  "window.recommended_overlap",
  "wrapped_func",
  "write_timeseriesdict",
  "writer",
  "xml.sax.SAXException",
  "xtype"
 ],
 "deps": {
  "ChannelList": [],
  "EventTable": [],
  "FrequencySeries": [],
  "LDAStools": [],
  "PRODUCTS": [],
  "SegmentList": [],
  "Series": [],
  "Table": [],
  "TimeSeries": [],
  "__main__": [],
  "_check_index": [],
  "_fdcommon": [],
  "_framecpp": [],
  "_get": [],
  "_get_filter_keys": [],
  "_lal": [],
  "_new": [],
  "_parse_segments": [],
  "_poly": [],
  "_read": [],
  "_read_write": [],
  "_reader": [],
  "_registry": [],
  "_set": [],
  "_utils": [],
  "_version": [],
  "_warn": [],
  "_write": [],
  "_write_attrs": [],
  "abc": [],
  "abs": [],
  "add_": [],
  "api_func": [],
  "append": [],
  "argparse": [],
  "array": [],
  "array_meth": [],
  "assert_array": [],
  "astro": [],
  "astropy": [],
  "axes": [],
  "base": [],
  "builtins": [],
  "bytes": [],
  "cache": [],
  "ciecplib": [
   "ciecplib/conda-forge/noarch/ciecplib-0.2.0-py_0"
  ],
  "cli": [],
  "cliproduct": [],
  "cls": [],
  "coherence": [],
  "coherencegram": [],
  "collections": [],
  "colorbar": [],
  "colors": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.1-py_0"
  ],
  "contextlib": [],
  "copy": [],
  "core": [],
  "create": [],
  "ctx": [],
  "datafind": [],
  "datetime": [],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decimal": [],
  "decorator": [],
  "decorators": [],
  "delta": [
   "delta/conda-forge/noarch/delta-0.4.2-py_0"
  ],
  "detector": [],
  "distutils": [],
  "docutils": [],
  "dqsegdb2": [
   "dqsegdb2/conda-forge/noarch/dqsegdb2-1.0.1-py_0"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "env": [],
  "fake": [],
  "fetch": [],
  "fetcher": [],
  "fformat": [],
  "filter": [],
  "filter_design": [],
  "filters": [],
  "format": [],
  "framel": [],
  "freezegun": [
   "freezegun/conda-forge/noarch/freezegun-1.1.0-pyhd8ed1ab_0"
  ],
  "frequencyseries": [],
  "func": [],
  "func_": [],
  "functools": [],
  "getpass": [],
  "glue": [],
  "gps": [],
  "gwdatafind": [
   "gwdatafind/conda-forge/noarch/gwdatafind-1.0.4-pyh9f0ad1d_1"
  ],
  "gwf": [],
  "gwosc": [],
  "gwpy": [
   "gwpy/conda-forge/noarch/gwpy-2.0.2-pyhd8ed1ab_0"
  ],
  "gwpy_plot": [],
  "gzip": [],
  "h5py": [],
  "http": [],
  "id_func": [],
  "identifier": [],
  "importlib": [],
  "index": [],
  "inspect": [],
  "interp": [],
  "io": [],
  "itertools": [],
  "json": [],
  "kerberos": [],
  "lal": [],
  "lalframe": [],
  "legend": [],
  "libread_": [],
  "libwrite_": [],
  "ligo": [],
  "ligolw": [],
  "list": [],
  "log": [],
  "math": [],
  "matplotlib": [],
  "maya": [],
  "misc": [],
  "mp": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "myfunc": [],
  "nds2": [],
  "new_func": [],
  "numbers": [],
  "numpy": [],
  "op_": [],
  "op_func": [],
  "operator": [],
  "origin": [],
  "os": [],
  "pandas": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pickle": [],
  "platform": [],
  "plot": [],
  "plot_func": [],
  "plotter": [],
  "posixpath": [],
  "print": [],
  "progress": [],
  "pycbc": [],
  "pymysql": [],
  "pytest": [],
  "pytz": [
   "pytz/conda-forge/noarch/pytz-2019.2-py_0"
  ],
  "qtransform": [],
  "query_": [],
  "query_method": [],
  "queue": [],
  "range_func": [],
  "rc": [],
  "re": [],
  "read": [],
  "read_": [],
  "read_timeseries": [],
  "read_timeseriesdict": [],
  "reader": [],
  "registry": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "returntype": [],
  "root_numpy": [
   "root_numpy/conda-forge/linux-64/root_numpy-4.8.0-py37h2039b18_5"
  ],
  "scale_": [],
  "scipy": [],
  "segments": [],
  "selector": [],
  "series": [],
  "shell": [],
  "shutil": [],
  "signal": [],
  "sliceutils": [],
  "socket": [],
  "spec_func": [],
  "spectral": [],
  "spectrogram": [],
  "spectrum": [],
  "sql": [],
  "sqlalchemy": [],
  "ssl": [],
  "statevector": [],
  "str": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "table": [],
  "tempfile": [],
  "test_array": [],
  "test_axes": [],
  "test_cache": [],
  "test_coherence": [],
  "test_core": [],
  "test_series": [],
  "test_spectrogram": [],
  "test_spectrum": [],
  "test_table": [],
  "test_timeseries": [],
  "testing": [],
  "tex": [],
  "text": [],
  "threading": [],
  "time": [],
  "timeseries": [],
  "to_s": [],
  "token": [],
  "tokenize": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.19.2-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.36.1-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.41.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.44.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.46.0-pyh9f0ad1d_0"
  ],
  "type": [],
  "type_": [],
  "types": [],
  "units": [],
  "unittest": [],
  "urllib": [],
  "utils": [],
  "veto_def": [],
  "warnings": [],
  "wave": [],
  "window": [],
  "wrapped_func": [],
  "write_timeseriesdict": [],
  "writer": [],
  "xml": [],
  "xtype": []
 }
}