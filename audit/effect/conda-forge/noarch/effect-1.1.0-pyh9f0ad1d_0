{
 "bad": [
  "MyIntent",
  "PerformerContainer",
  "WrappedIntent",
  "_run_callbacks",
  "attr.ib",
  "attr.s",
  "cd",
  "code_under_test",
  "contextlib.contextmanager",
  "d",
  "d.consume",
  "d.consumed",
  "dispatcher",
  "f",
  "failed",
  "fallback_dispatcher",
  "fmt_log",
  "func",
  "functools.partial",
  "functools.reduce",
  "get_effect",
  "internal",
  "itertools.count",
  "multiprocessing.pool.ThreadPool",
  "object.__new__",
  "operator",
  "operator.add",
  "operator.attrgetter",
  "performer",
  "py.test.raises",
  "py.test.warns",
  "py3_generator_with_return",
  "pytest",
  "pytest.raises",
  "raise_",
  "sequence.consume",
  "should_retry",
  "sys",
  "sys.version_info",
  "tail_equals",
  "td",
  "testtools.TestCase",
  "testtools.assertions.assert_that",
  "testtools.matchers.Equals",
  "testtools.matchers.MatchesListwise",
  "testtools.matchers.MatchesStructure",
  "testtools.matchers.Mismatch",
  "testtools.matchers.raises",
  "testtools.testcase.TestCase",
  "time",
  "time.sleep",
  "traceback",
  "traceback.TracebackException.from_exception",
  "traceback.extract_stack",
  "try_",
  "types",
  "types.GeneratorType",
  "v",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "MyIntent": [],
  "PerformerContainer": [],
  "WrappedIntent": [],
  "_run_callbacks": [],
  "attr": [
   "attrs/conda-forge/noarch/attrs-18.2.0-py_0"
  ],
  "cd": [],
  "code_under_test": [],
  "contextlib": [],
  "d": [],
  "dispatcher": [],
  "f": [],
  "failed": [],
  "fallback_dispatcher": [],
  "fmt_log": [],
  "func": [],
  "functools": [],
  "get_effect": [],
  "internal": [],
  "itertools": [],
  "multiprocessing": [],
  "object": [],
  "operator": [],
  "performer": [],
  "py": [],
  "py3_generator_with_return": [],
  "pytest": [],
  "raise_": [],
  "sequence": [
   "sequence-model/conda-forge/noarch/sequence-model-0.3.0-pyhd8ed1ab_0"
  ],
  "should_retry": [],
  "sys": [],
  "tail_equals": [],
  "td": [],
  "testtools": [],
  "time": [],
  "traceback": [],
  "try_": [],
  "types": [],
  "v": [],
  "warnings": []
 }
}