{
 "bad": [
  "_util.packed_net_bytes_to_int",
  "base58.b58decode",
  "base58.b58encode",
  "base64.b32decode",
  "base64.b32encode",
  "codecs.LENGTH_PREFIXED_VAR_SIZE",
  "codecs.codec_by_name",
  "collections.abc.ItemsView",
  "collections.abc.KeysView",
  "collections.abc.KeysView._hash",
  "collections.abc.Mapping",
  "collections.abc.Sequence",
  "collections.abc.Sequence.__contains__",
  "collections.abc.ValuesView",
  "exceptions.BinaryParseError",
  "exceptions.ProtocolExistsError",
  "exceptions.ProtocolLookupError",
  "exceptions.ProtocolNotFoundError",
  "exceptions.StringParseError",
  "idna.decode",
  "idna.encode",
  "importlib.import_module",
  "io.BytesIO",
  "locale.getpreferredencoding",
  "multiaddr.codecs.CODEC_CACHE",
  "multiaddr.codecs.NoneCodec",
  "multiaddr.codecs.fspath.LENGTH_PREFIXED_VAR_SIZE",
  "multiaddr.codecs.fspath.fsdecode",
  "multiaddr.codecs.fspath.fsencode",
  "multiaddr.codecs.fspath.os",
  "multiaddr.codecs.idna.LENGTH_PREFIXED_VAR_SIZE",
  "multiaddr.codecs.p2p.LENGTH_PREFIXED_VAR_SIZE",
  "multiaddr.codecs.utf8.LENGTH_PREFIXED_VAR_SIZE",
  "multiaddr.exceptions.BinaryParseError",
  "multiaddr.exceptions.Error",
  "multiaddr.exceptions.LookupError",
  "multiaddr.exceptions.ParseError",
  "multiaddr.exceptions.ProtocolExistsError",
  "multiaddr.exceptions.ProtocolLookupError",
  "multiaddr.exceptions.ProtocolManagerError",
  "multiaddr.exceptions.ProtocolNotFoundError",
  "multiaddr.exceptions.StringParseError",
  "multiaddr.multiaddr.MultiAddrItems",
  "multiaddr.multiaddr.MultiAddrKeys",
  "multiaddr.multiaddr.MultiAddrValues",
  "multiaddr.multiaddr.Multiaddr",
  "multiaddr.multiaddr.collections",
  "multiaddr.multiaddr.collections.abc",
  "multiaddr.multiaddr.protocols",
  "multiaddr.protocols.PROTOCOLS",
  "multiaddr.protocols.P_DCCP",
  "multiaddr.protocols.P_DNS",
  "multiaddr.protocols.P_DNS4",
  "multiaddr.protocols.P_DNS6",
  "multiaddr.protocols.P_DNSADDR",
  "multiaddr.protocols.P_HTTP",
  "multiaddr.protocols.P_HTTPS",
  "multiaddr.protocols.P_IP4",
  "multiaddr.protocols.P_IP6",
  "multiaddr.protocols.P_IP6ZONE",
  "multiaddr.protocols.P_ONION",
  "multiaddr.protocols.P_ONION3",
  "multiaddr.protocols.P_P2P",
  "multiaddr.protocols.P_P2P_CIRCUIT",
  "multiaddr.protocols.P_P2P_WEBRTC_DIRECT",
  "multiaddr.protocols.P_P2P_WEBRTC_STAR",
  "multiaddr.protocols.P_P2P_WEBSOCKET_STAR",
  "multiaddr.protocols.P_QUIC",
  "multiaddr.protocols.P_SCTP",
  "multiaddr.protocols.P_TCP",
  "multiaddr.protocols.P_UDP",
  "multiaddr.protocols.P_UDT",
  "multiaddr.protocols.P_UNIX",
  "multiaddr.protocols.P_UTP",
  "multiaddr.protocols.P_WS",
  "multiaddr.protocols.P_WSS",
  "multiaddr.protocols.Protocol",
  "multiaddr.protocols._codes_to_protocols",
  "multiaddr.protocols._names_to_protocols",
  "multiaddr.protocols.protocol_with_code",
  "multiaddr.protocols.protocol_with_name",
  "multiaddr.transforms.bytes_iter",
  "multiaddr.transforms.size_for_addr",
  "multiaddr.transforms.string_iter",
  "netaddr.IPAddress",
  "os.fsdecode",
  "os.fsencode",
  "protocols.protocol_with_any",
  "protocols.protocol_with_code",
  "protocols.protocol_with_name",
  "six.PY2",
  "six.binary_type",
  "six.integer_types",
  "six.raise_from",
  "six.string_types",
  "six.text_type",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "sys.getfilesystemencoding",
  "transforms.bytes_iter",
  "transforms.string_to_bytes",
  "varint.decode_stream",
  "varint.encode"
 ],
 "deps": {
  "_util": [],
  "base58": [],
  "base64": [],
  "codecs": [],
  "collections": [],
  "exceptions": [],
  "idna": [],
  "importlib": [],
  "io": [],
  "locale": [],
  "multiaddr": [],
  "netaddr": [],
  "os": [],
  "protocols": [],
  "six": [],
  "struct": [],
  "sys": [],
  "transforms": [],
  "varint": []
 }
}