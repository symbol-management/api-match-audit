{
 "bad": [
  "_end_trace",
  "aiohttp.ClientSession",
  "aiohttp.TraceConfig",
  "aiohttp.TraceRequestEndParams",
  "aiohttp.TraceRequestExceptionParams",
  "aiohttp.TraceRequestStartParams",
  "opentelemetry.context.attach",
  "opentelemetry.context.detach",
  "opentelemetry.context.get_value",
  "opentelemetry.instrumentation.aiohttp_client._SpanNameT",
  "opentelemetry.instrumentation.aiohttp_client._UrlFilterT",
  "opentelemetry.instrumentation.aiohttp_client._instrument",
  "opentelemetry.instrumentation.aiohttp_client._uninstrument",
  "opentelemetry.instrumentation.aiohttp_client._uninstrument_session",
  "opentelemetry.instrumentation.aiohttp_client.create_trace_config",
  "opentelemetry.instrumentation.aiohttp_client.version.__version__",
  "opentelemetry.instrumentation.instrumentor.BaseInstrumentor",
  "opentelemetry.instrumentation.utils.http_status_to_status_code",
  "opentelemetry.instrumentation.utils.unwrap",
  "opentelemetry.propagators.inject",
  "opentelemetry.trace.SpanKind.CLIENT",
  "opentelemetry.trace.TracerProvider",
  "opentelemetry.trace.get_tracer",
  "opentelemetry.trace.set_span_in_context",
  "opentelemetry.trace.status.Status",
  "opentelemetry.trace.status.StatusCode.ERROR",
  "types.SimpleNamespace",
  "typing.Callable",
  "typing.Optional",
  "typing.Union",
  "wrapt.wrap_function_wrapper"
 ],
 "deps": {
  "_end_trace": [],
  "aiohttp": [],
  "opentelemetry": [],
  "types": [],
  "typing": [],
  "wrapt": []
 }
}