{
 "bad": [
  "AttributePath",
  "AttributeValue",
  "BaseHTTPServer.BaseHTTPRequestHandler",
  "ConditionalOp",
  "DBParameterGroup",
  "FakeEvent",
  "FakePartition",
  "NetworkAclAssociation",
  "OpClass",
  "OpDefault",
  "StringIO",
  "_adjust",
  "_assert_default_policy",
  "_class",
  "_convert",
  "_convert_to_bytes",
  "_f",
  "_field_match",
  "_orig_get_adapter",
  "_parse_number_parameter",
  "_random_uppercase_or_digit_sequence",
  "backend_app",
  "backend_app.add_url_rule",
  "backend_app.debug",
  "backend_app.service",
  "backend_app.test_client_class",
  "backend_app.url_map",
  "backend_app.url_map.converters",
  "backend_app.view_functions",
  "boto.ec2.instance.Instance.VALID_ATTRIBUTES",
  "boto.s3.key.Key.base_user_settable_fields",
  "botocore.awsrequest.AWSResponse",
  "botocore.awsrequest.HTTPConnectionPool.ConnectionCls",
  "botocore.awsrequest.HTTPSConnectionPool.ConnectionCls",
  "botocore.handlers.BUILTIN_HANDLERS.append",
  "builtins.str",
  "comparison_func",
  "compat.StringIO.close",
  "compat.basestring",
  "constants.DECISIONS_FIELDS.get",
  "conv",
  "core.httpretty.CONNECT",
  "core.httpretty.DELETE",
  "core.httpretty.GET",
  "core.httpretty.HEAD",
  "core.httpretty.OPTIONS",
  "core.httpretty.PATCH",
  "core.httpretty.POST",
  "core.httpretty.PUT",
  "core.httpretty.Response",
  "core.httpretty.disable",
  "core.httpretty.enable",
  "core.httpretty.is_enabled",
  "core.httpretty.last_request",
  "core.httpretty.last_request.headers",
  "core.httpretty.register_uri",
  "core.httpretty.reset",
  "cryptography.hazmat.primitives.serialization.Encoding.DER",
  "cryptography.hazmat.primitives.serialization.Encoding.PEM",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
  "cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo",
  "datetime.datetime.min",
  "datetime.datetime.strftime",
  "datetime.strftime",
  "decimal.Decimal",
  "decode_hex",
  "decorate_callable",
  "decorate_class",
  "dict.__contains__",
  "dict.__getitem__",
  "do_parse",
  "do_validate_s3",
  "docker.types.LogConfig.types.JSON",
  "errno.EAGAIN",
  "exceptions.InvalidRoleFormat.pattern",
  "exceptions.ItemSizeTooLarge.item_size_too_large_msg",
  "exceptions.UnformattedGetAttTemplateException.description.format",
  "expand",
  "expand_attrs",
  "f",
  "fail_schedule_activity_task",
  "filter_function",
  "flask.request.headers",
  "flask.request.headers.items",
  "flask.request.method",
  "flask.request.url",
  "flatten_attrs",
  "func",
  "func_elem_factory",
  "function",
  "get_ec2_keys",
  "get_ec2_tags",
  "get_ec2_values",
  "get_elbv2_tags",
  "get_index_and_direction_from_token",
  "get_kms_tags",
  "get_resource_types",
  "get_target_group_tags",
  "handler",
  "hashlib.md5",
  "hashlib.sha256",
  "id.to_dict",
  "importlib.resources",
  "importlib_resources",
  "importlib_resources.read_text",
  "inst_ref",
  "is_tracked",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.cycle",
  "itertools.islice",
  "itertools.tee",
  "json.get",
  "make_int",
  "method",
  "mock",
  "mock.patch",
  "mocked_backend",
  "models.cognitoidentity_backends.create_identity_pool",
  "models.cognitoidentity_backends.describe_identity_pool",
  "models.cognitoidentity_backends.get_credentials_for_identity",
  "models.cognitoidentity_backends.get_id",
  "models.cognitoidentity_backends.get_open_id_token",
  "models.cognitoidentity_backends.get_open_id_token_for_developer_identity",
  "models.cognitoidp_backends.admin_add_user_to_group",
  "models.cognitoidp_backends.admin_create_user",
  "models.cognitoidp_backends.admin_delete_user",
  "models.cognitoidp_backends.admin_disable_user",
  "models.cognitoidp_backends.admin_enable_user",
  "models.cognitoidp_backends.admin_get_user",
  "models.cognitoidp_backends.admin_initiate_auth",
  "models.cognitoidp_backends.admin_list_groups_for_user",
  "models.cognitoidp_backends.admin_remove_user_from_group",
  "models.cognitoidp_backends.admin_update_user_attributes",
  "models.cognitoidp_backends.associate_software_token",
  "models.cognitoidp_backends.change_password",
  "models.cognitoidp_backends.confirm_forgot_password",
  "models.cognitoidp_backends.confirm_sign_up",
  "models.cognitoidp_backends.create_group",
  "models.cognitoidp_backends.create_identity_provider",
  "models.cognitoidp_backends.create_resource_server",
  "models.cognitoidp_backends.create_user_pool",
  "models.cognitoidp_backends.create_user_pool_client",
  "models.cognitoidp_backends.create_user_pool_domain",
  "models.cognitoidp_backends.delete_group",
  "models.cognitoidp_backends.delete_identity_provider",
  "models.cognitoidp_backends.delete_user_pool",
  "models.cognitoidp_backends.delete_user_pool_client",
  "models.cognitoidp_backends.delete_user_pool_domain",
  "models.cognitoidp_backends.describe_identity_provider",
  "models.cognitoidp_backends.describe_user_pool",
  "models.cognitoidp_backends.describe_user_pool_client",
  "models.cognitoidp_backends.describe_user_pool_domain",
  "models.cognitoidp_backends.get_group",
  "models.cognitoidp_backends.initiate_auth",
  "models.cognitoidp_backends.list_groups",
  "models.cognitoidp_backends.list_identity_providers",
  "models.cognitoidp_backends.list_user_pool_clients",
  "models.cognitoidp_backends.list_user_pools",
  "models.cognitoidp_backends.list_users",
  "models.cognitoidp_backends.list_users_in_group",
  "models.cognitoidp_backends.respond_to_auth_challenge",
  "models.cognitoidp_backends.set_user_mfa_preference",
  "models.cognitoidp_backends.sign_up",
  "models.cognitoidp_backends.update_identity_provider",
  "models.cognitoidp_backends.update_user_pool_client",
  "models.cognitoidp_backends.update_user_pool_domain",
  "models.cognitoidp_backends.verify_software_token",
  "models.dynamodb_backend.create_table",
  "models.dynamodb_backend.decorator",
  "models.dynamodb_backend.delete_item",
  "models.dynamodb_backend.delete_table",
  "models.dynamodb_backend.deprecated_decorator",
  "models.dynamodb_backend.get_item",
  "models.dynamodb_backend.put_item",
  "models.dynamodb_backend.query",
  "models.dynamodb_backend.scan",
  "models.dynamodb_backend.tables",
  "models.dynamodb_backend.tables.keys",
  "models.dynamodb_backend.update_table_throughput",
  "models.glue_backend.decorator",
  "models.iam_backend.add_role_to_instance_profile",
  "models.iam_backend.add_user_to_group",
  "models.iam_backend.attach_group_policy",
  "models.iam_backend.attach_role_policy",
  "models.iam_backend.attach_user_policy",
  "models.iam_backend.create_access_key",
  "models.iam_backend.create_account_alias",
  "models.iam_backend.create_group",
  "models.iam_backend.create_instance_profile",
  "models.iam_backend.create_login_profile",
  "models.iam_backend.create_open_id_connect_provider",
  "models.iam_backend.create_policy",
  "models.iam_backend.create_policy_version",
  "models.iam_backend.create_role",
  "models.iam_backend.create_saml_provider",
  "models.iam_backend.create_user",
  "models.iam_backend.create_virtual_mfa_device",
  "models.iam_backend.deactivate_mfa_device",
  "models.iam_backend.decorator",
  "models.iam_backend.delete_access_key",
  "models.iam_backend.delete_account_alias",
  "models.iam_backend.delete_account_password_policy",
  "models.iam_backend.delete_group",
  "models.iam_backend.delete_instance_profile",
  "models.iam_backend.delete_login_profile",
  "models.iam_backend.delete_open_id_connect_provider",
  "models.iam_backend.delete_policy",
  "models.iam_backend.delete_policy_version",
  "models.iam_backend.delete_role",
  "models.iam_backend.delete_role_policy",
  "models.iam_backend.delete_saml_provider",
  "models.iam_backend.delete_server_certificate",
  "models.iam_backend.delete_signing_certificate",
  "models.iam_backend.delete_ssh_public_key",
  "models.iam_backend.delete_user",
  "models.iam_backend.delete_user_policy",
  "models.iam_backend.delete_virtual_mfa_device",
  "models.iam_backend.deprecated_decorator",
  "models.iam_backend.detach_group_policy",
  "models.iam_backend.detach_role_policy",
  "models.iam_backend.detach_user_policy",
  "models.iam_backend.enable_mfa_device",
  "models.iam_backend.generate_report",
  "models.iam_backend.get_access_key_last_used",
  "models.iam_backend.get_account_authorization_details",
  "models.iam_backend.get_account_password_policy",
  "models.iam_backend.get_account_summary",
  "models.iam_backend.get_all_access_keys",
  "models.iam_backend.get_all_server_certs",
  "models.iam_backend.get_all_ssh_public_keys",
  "models.iam_backend.get_credential_report",
  "models.iam_backend.get_group",
  "models.iam_backend.get_group_policy",
  "models.iam_backend.get_groups_for_user",
  "models.iam_backend.get_instance_profile",
  "models.iam_backend.get_instance_profiles",
  "models.iam_backend.get_instance_profiles_for_role",
  "models.iam_backend.get_login_profile",
  "models.iam_backend.get_open_id_connect_provider",
  "models.iam_backend.get_policy",
  "models.iam_backend.get_policy_version",
  "models.iam_backend.get_role",
  "models.iam_backend.get_role_policy",
  "models.iam_backend.get_roles",
  "models.iam_backend.get_saml_provider",
  "models.iam_backend.get_server_certificate",
  "models.iam_backend.get_ssh_public_key",
  "models.iam_backend.get_user",
  "models.iam_backend.get_user_from_access_key_id",
  "models.iam_backend.get_user_policy",
  "models.iam_backend.list_account_aliases",
  "models.iam_backend.list_attached_group_policies",
  "models.iam_backend.list_attached_role_policies",
  "models.iam_backend.list_attached_user_policies",
  "models.iam_backend.list_group_policies",
  "models.iam_backend.list_groups",
  "models.iam_backend.list_mfa_devices",
  "models.iam_backend.list_open_id_connect_providers",
  "models.iam_backend.list_policies",
  "models.iam_backend.list_policy_versions",
  "models.iam_backend.list_role_policies",
  "models.iam_backend.list_role_tags",
  "models.iam_backend.list_roles",
  "models.iam_backend.list_saml_providers",
  "models.iam_backend.list_signing_certificates",
  "models.iam_backend.list_user_policies",
  "models.iam_backend.list_user_tags",
  "models.iam_backend.list_users",
  "models.iam_backend.list_virtual_mfa_devices",
  "models.iam_backend.put_group_policy",
  "models.iam_backend.put_role_policy",
  "models.iam_backend.put_user_policy",
  "models.iam_backend.remove_role_from_instance_profile",
  "models.iam_backend.remove_user_from_group",
  "models.iam_backend.report_generated",
  "models.iam_backend.tag_role",
  "models.iam_backend.untag_role",
  "models.iam_backend.update_access_key",
  "models.iam_backend.update_account_password_policy",
  "models.iam_backend.update_login_profile",
  "models.iam_backend.update_role",
  "models.iam_backend.update_role_description",
  "models.iam_backend.update_saml_provider",
  "models.iam_backend.update_signing_certificate",
  "models.iam_backend.update_ssh_public_key",
  "models.iam_backend.update_user",
  "models.iam_backend.upload_server_certificate",
  "models.iam_backend.upload_signing_certificate",
  "models.iam_backend.upload_ssh_public_key",
  "models.moto_api_backend.reset",
  "models.route53_backend.change_tags_for_resource",
  "models.route53_backend.create_health_check",
  "models.route53_backend.create_hosted_zone",
  "models.route53_backend.decorator",
  "models.route53_backend.delete_health_check",
  "models.route53_backend.delete_hosted_zone",
  "models.route53_backend.deprecated_decorator",
  "models.route53_backend.get_all_hosted_zones",
  "models.route53_backend.get_health_checks",
  "models.route53_backend.get_hosted_zone",
  "models.route53_backend.list_tags_for_resource",
  "models.s3_backend.decorator",
  "models.s3_backend.deprecated_decorator",
  "models.secretsmanager_backends.create_secret",
  "models.secretsmanager_backends.delete_secret",
  "models.secretsmanager_backends.describe_secret",
  "models.secretsmanager_backends.get_random_password",
  "models.secretsmanager_backends.get_resource_policy",
  "models.secretsmanager_backends.get_secret_value",
  "models.secretsmanager_backends.list_secret_version_ids",
  "models.secretsmanager_backends.list_secrets",
  "models.secretsmanager_backends.put_secret_value",
  "models.secretsmanager_backends.restore_secret",
  "models.secretsmanager_backends.rotate_secret",
  "models.secretsmanager_backends.update_secret",
  "models.ses_backend.add_template",
  "models.ses_backend.create_configuration_set",
  "models.ses_backend.create_configuration_set_event_destination",
  "models.ses_backend.create_receipt_rule",
  "models.ses_backend.create_receipt_rule_set",
  "models.ses_backend.decorator",
  "models.ses_backend.delete_identity",
  "models.ses_backend.deprecated_decorator",
  "models.ses_backend.get_send_quota",
  "models.ses_backend.get_send_statistics",
  "models.ses_backend.get_template",
  "models.ses_backend.list_identities",
  "models.ses_backend.list_templates",
  "models.ses_backend.list_verified_email_addresses",
  "models.ses_backend.send_email",
  "models.ses_backend.send_raw_email",
  "models.ses_backend.send_templated_email",
  "models.ses_backend.set_identity_notification_topic",
  "models.ses_backend.verify_domain",
  "models.ses_backend.verify_email_address",
  "models.ses_backend.verify_email_identity",
  "models.sts_backend.assume_role",
  "models.sts_backend.assume_role_with_saml",
  "models.sts_backend.assume_role_with_web_identity",
  "models.sts_backend.decorator",
  "models.sts_backend.deprecated_decorator",
  "models.sts_backend.get_assumed_role_from_access_key",
  "models.sts_backend.get_federation_token",
  "models.sts_backend.get_session_token",
  "moto.__init__.lazy_load",
  "moto.acm.__init__.acm_backends",
  "moto.acm.__init__.base_decorator",
  "moto.apigateway.__init__.apigateway_backends",
  "moto.apigateway.__init__.base_decorator",
  "moto.apigateway.__init__.deprecated_base_decorator",
  "moto.applicationautoscaling.__init__.applicationautoscaling_backends",
  "moto.applicationautoscaling.__init__.base_decorator",
  "moto.athena.__init__.athena_backends",
  "moto.athena.__init__.base_decorator",
  "moto.athena.__init__.deprecated_base_decorator",
  "moto.autoscaling.__init__.autoscaling_backends",
  "moto.autoscaling.__init__.base_decorator",
  "moto.autoscaling.__init__.deprecated_base_decorator",
  "moto.autoscaling.autoscaling_backends.notify_terminate_instances",
  "moto.awslambda.__init__.base_decorator",
  "moto.awslambda.__init__.deprecated_base_decorator",
  "moto.awslambda.__init__.lambda_backends",
  "moto.awslambda.lambda_backends.get_function",
  "moto.awslambda.lambda_backends.send_dynamodb_items",
  "moto.awslambda.lambda_backends.send_log_event",
  "moto.awslambda.lambda_backends.send_sns_message",
  "moto.awslambda.lambda_backends.send_sqs_batch",
  "moto.batch.__init__.base_decorator",
  "moto.batch.__init__.batch_backends",
  "moto.cloudformation.__init__.base_decorator",
  "moto.cloudformation.__init__.cloudformation_backends",
  "moto.cloudformation.__init__.deprecated_base_decorator",
  "moto.cloudwatch.__init__.base_decorator",
  "moto.cloudwatch.__init__.cloudwatch_backends",
  "moto.cloudwatch.__init__.deprecated_base_decorator",
  "moto.codecommit.__init__.base_decorator",
  "moto.codecommit.__init__.codecommit_backends",
  "moto.codepipeline.__init__.base_decorator",
  "moto.codepipeline.__init__.codepipeline_backends",
  "moto.cognitoidentity.__init__.base_decorator",
  "moto.cognitoidentity.__init__.cognitoidentity_backends",
  "moto.cognitoidentity.__init__.deprecated_base_decorator",
  "moto.cognitoidp.__init__.base_decorator",
  "moto.cognitoidp.__init__.cognitoidp_backends",
  "moto.cognitoidp.__init__.deprecated_base_decorator",
  "moto.compat.collections_abc.Iterable",
  "moto.compat.collections_abc.Mapping",
  "moto.config.__init__.base_decorator",
  "moto.config.__init__.config_backends",
  "moto.core.CloudFormationModel.__subclasses__",
  "moto.core.__init__.moto_api_backend",
  "moto.datapipeline.__init__.base_decorator",
  "moto.datapipeline.__init__.datapipeline_backends",
  "moto.datapipeline.__init__.deprecated_base_decorator",
  "moto.datasync.__init__.base_decorator",
  "moto.datasync.__init__.datasync_backends",
  "moto.datasync.__init__.deprecated_base_decorator",
  "moto.dynamodb.__init__.dynamodb_backend",
  "moto.dynamodb2.__init__.base_decorator",
  "moto.dynamodb2.__init__.deprecated_base_decorator",
  "moto.dynamodb2.dynamodb_backends2.get_table",
  "moto.dynamodb2.models.__init__.DynamoDBBackend",
  "moto.dynamodb2.models.__init__.DynamoJsonEncoder",
  "moto.dynamodb2.models.__init__.GlobalSecondaryIndex",
  "moto.dynamodb2.models.__init__.Item",
  "moto.dynamodb2.models.__init__.LimitedSizeDict",
  "moto.dynamodb2.models.__init__.LocalSecondaryIndex",
  "moto.dynamodb2.models.__init__.SecondaryIndex",
  "moto.dynamodb2.models.__init__.StreamRecord",
  "moto.dynamodb2.models.__init__.StreamShard",
  "moto.dynamodb2.models.__init__.Table",
  "moto.dynamodb2.models.__init__.dynamodb_backends",
  "moto.dynamodb2.models.dynamo_type.DDBType.NUMBER",
  "moto.dynamodb2.parsing.tokens.Token.ATTRIBUTE",
  "moto.dynamodb2.parsing.tokens.Token.ATTRIBUTE_NAME",
  "moto.dynamodb2.parsing.tokens.Token.ATTRIBUTE_VALUE",
  "moto.dynamodb2.parsing.tokens.Token.CLOSE_ROUND_BRACKET",
  "moto.dynamodb2.parsing.tokens.Token.CLOSE_SQUARE_BRACKET",
  "moto.dynamodb2.parsing.tokens.Token.COMMA",
  "moto.dynamodb2.parsing.tokens.Token.DOT",
  "moto.dynamodb2.parsing.tokens.Token.EQUAL_SIGN",
  "moto.dynamodb2.parsing.tokens.Token.MINUS_SIGN",
  "moto.dynamodb2.parsing.tokens.Token.NUMBER",
  "moto.dynamodb2.parsing.tokens.Token.OPEN_ROUND_BRACKET",
  "moto.dynamodb2.parsing.tokens.Token.OPEN_SQUARE_BRACKET",
  "moto.dynamodb2.parsing.tokens.Token.PLUS_SIGN",
  "moto.dynamodb2.parsing.tokens.Token.WHITESPACE",
  "moto.dynamodbstreams.__init__.base_decorator",
  "moto.dynamodbstreams.__init__.dynamodbstreams_backends",
  "moto.dynamodbstreams.dynamodbstreams_backends.list_streams",
  "moto.ec2.__init__.base_decorator",
  "moto.ec2.__init__.deprecated_base_decorator",
  "moto.ec2.__init__.ec2_backends",
  "moto.ec2.ec2_backends.items",
  "moto.ec2.models.ec2_backends.create_tags",
  "moto.ec2.models.ec2_backends.get_subnet",
  "moto.ec2.models.ec2_backends.keys",
  "moto.ec2.responses.__init__.AccountAttributes",
  "moto.ec2.responses.__init__.AmazonDevPay",
  "moto.ec2.responses.__init__.AmisResponse",
  "moto.ec2.responses.__init__.AvailabilityZonesAndRegions",
  "moto.ec2.responses.__init__.CustomerGateways",
  "moto.ec2.responses.__init__.DHCPOptions",
  "moto.ec2.responses.__init__.ElasticBlockStore",
  "moto.ec2.responses.__init__.ElasticIPAddresses",
  "moto.ec2.responses.__init__.ElasticNetworkInterfaces",
  "moto.ec2.responses.__init__.General",
  "moto.ec2.responses.__init__.IPAddresses",
  "moto.ec2.responses.__init__.InstanceResponse",
  "moto.ec2.responses.__init__.InternetGateways",
  "moto.ec2.responses.__init__.KeyPairs",
  "moto.ec2.responses.__init__.LaunchTemplates",
  "moto.ec2.responses.__init__.Monitoring",
  "moto.ec2.responses.__init__.NatGateways",
  "moto.ec2.responses.__init__.NetworkACLs",
  "moto.ec2.responses.__init__.PlacementGroups",
  "moto.ec2.responses.__init__.ReservedInstances",
  "moto.ec2.responses.__init__.RouteTables",
  "moto.ec2.responses.__init__.SecurityGroups",
  "moto.ec2.responses.__init__.SpotFleets",
  "moto.ec2.responses.__init__.SpotInstances",
  "moto.ec2.responses.__init__.Subnets",
  "moto.ec2.responses.__init__.TagResponse",
  "moto.ec2.responses.__init__.VMExport",
  "moto.ec2.responses.__init__.VMImport",
  "moto.ec2.responses.__init__.VPCPeeringConnections",
  "moto.ec2.responses.__init__.VPCs",
  "moto.ec2.responses.__init__.VPNConnections",
  "moto.ec2.responses.__init__.VirtualPrivateGateways",
  "moto.ec2.responses.__init__.Windows",
  "moto.ec2instanceconnect.__init__.base_decorator",
  "moto.ec2instanceconnect.__init__.ec2instanceconnect_backends",
  "moto.ecr.__init__.base_decorator",
  "moto.ecr.__init__.deprecated_base_decorator",
  "moto.ecr.__init__.ecr_backends",
  "moto.ecs.__init__.base_decorator",
  "moto.ecs.__init__.deprecated_base_decorator",
  "moto.ecs.__init__.ecs_backends",
  "moto.ecs.ecs_backends.items",
  "moto.elasticbeanstalk.__init__.eb_backends",
  "moto.elb.__init__.base_decorator",
  "moto.elb.__init__.deprecated_base_decorator",
  "moto.elb.__init__.elb_backends",
  "moto.elb.responses.ELBResponse.dispatch",
  "moto.elbv2.__init__.base_decorator",
  "moto.elbv2.__init__.elbv2_backends",
  "moto.elbv2.elbv2_backends.notify_terminate_instances",
  "moto.elbv2.responses.ELBV2Response.dispatch",
  "moto.emr.__init__.base_decorator",
  "moto.emr.__init__.deprecated_base_decorator",
  "moto.emr.__init__.emr_backends",
  "moto.events.__init__.base_decorator",
  "moto.events.__init__.events_backends",
  "moto.glacier.__init__.base_decorator",
  "moto.glacier.__init__.deprecated_base_decorator",
  "moto.glacier.__init__.glacier_backends",
  "moto.glue.__init__.glue_backend",
  "moto.iam.__init__.iam_backend",
  "moto.iam.iam_backend.get_user_from_access_key_id",
  "moto.iam.models.iam_backend.get_role_by_arn",
  "moto.instance_metadata.__init__.instance_metadata_backend",
  "moto.iot.__init__.base_decorator",
  "moto.iot.__init__.iot_backends",
  "moto.iot.iot_backends.describe_thing",
  "moto.iotdata.__init__.base_decorator",
  "moto.iotdata.__init__.iotdata_backends",
  "moto.kinesis.__init__.base_decorator",
  "moto.kinesis.__init__.deprecated_base_decorator",
  "moto.kinesis.__init__.kinesis_backends",
  "moto.kinesisvideo.__init__.base_decorator",
  "moto.kinesisvideo.__init__.kinesisvideo_backends",
  "moto.kinesisvideo.kinesisvideo_backends._get_stream",
  "moto.kinesisvideoarchivedmedia.__init__.base_decorator",
  "moto.kinesisvideoarchivedmedia.__init__.kinesisvideoarchivedmedia_backends",
  "moto.kms.__init__.base_decorator",
  "moto.kms.__init__.deprecated_base_decorator",
  "moto.kms.__init__.kms_backends",
  "moto.logs.__init__.base_decorator",
  "moto.logs.__init__.deprecated_base_decorator",
  "moto.logs.__init__.logs_backends",
  "moto.logs.logs_backends.create_log_group",
  "moto.managedblockchain.__init__.base_decorator",
  "moto.managedblockchain.__init__.deprecated_base_decorator",
  "moto.managedblockchain.__init__.managedblockchain_backends",
  "moto.opsworks.__init__.base_decorator",
  "moto.opsworks.__init__.deprecated_base_decorator",
  "moto.opsworks.__init__.opsworks_backends",
  "moto.organizations.__init__.base_decorator",
  "moto.organizations.__init__.organizations_backend",
  "moto.organizations.__init__.organizations_backends",
  "moto.organizations.utils.ACCOUNT_ARN_FORMAT.format",
  "moto.organizations.utils.MASTER_ACCOUNT_ARN_FORMAT.format",
  "moto.organizations.utils.ORGANIZATION_ARN_FORMAT.format",
  "moto.packages.httpretty.HTTPretty.METHODS",
  "moto.packages.httpretty.HTTPretty.disable",
  "moto.packages.httpretty.HTTPretty.enable",
  "moto.packages.httpretty.HTTPretty.is_enabled",
  "moto.packages.httpretty.HTTPretty.register_uri",
  "moto.packages.httpretty.HTTPretty.reset",
  "moto.packages.httpretty.__init__.EmptyRequestHeaders",
  "moto.packages.httpretty.__init__.httprettified",
  "moto.packages.httpretty.__init__.httpretty",
  "moto.polly.__init__.base_decorator",
  "moto.polly.__init__.polly_backends",
  "moto.ram.__init__.base_decorator",
  "moto.ram.__init__.ram_backends",
  "moto.rds.__init__.base_decorator",
  "moto.rds.__init__.deprecated_base_decorator",
  "moto.rds.__init__.rds_backends",
  "moto.rds2.__init__.base_decorator",
  "moto.rds2.__init__.deprecated_base_decorator",
  "moto.rds2.__init__.rds2_backends",
  "moto.redshift.__init__.base_decorator",
  "moto.redshift.__init__.deprecated_base_decorator",
  "moto.redshift.__init__.redshift_backends",
  "moto.resourcegroups.__init__.base_decorator",
  "moto.resourcegroups.__init__.resourcegroups_backends",
  "moto.resourcegroupstaggingapi.__init__.base_decorator",
  "moto.resourcegroupstaggingapi.__init__.resourcegroupstaggingapi_backends",
  "moto.route53.__init__.route53_backend",
  "moto.s3.__init__.s3_backend",
  "moto.s3.models.s3_backend.get_object",
  "moto.s3.s3_backend.get_object",
  "moto.sagemaker.__init__.sagemaker_backend",
  "moto.sagemaker.__init__.sagemaker_backends",
  "moto.secretsmanager.__init__.base_decorator",
  "moto.secretsmanager.__init__.secretsmanager_backends",
  "moto.ses.__init__.ses_backend",
  "moto.sns.__init__.base_decorator",
  "moto.sns.__init__.deprecated_base_decorator",
  "moto.sns.__init__.sns_backends",
  "moto.sns.models.sns_backends.publish",
  "moto.sqs.__init__.base_decorator",
  "moto.sqs.__init__.deprecated_base_decorator",
  "moto.sqs.__init__.sqs_backends",
  "moto.sqs.sqs_backends.queues.values",
  "moto.sqs.sqs_backends.send_message",
  "moto.ssm.__init__.base_decorator",
  "moto.ssm.__init__.ssm_backends",
  "moto.stepfunctions.__init__.base_decorator",
  "moto.stepfunctions.__init__.stepfunction_backends",
  "moto.sts.__init__.sts_backend",
  "moto.swf.__init__.base_decorator",
  "moto.swf.__init__.deprecated_base_decorator",
  "moto.swf.__init__.swf_backends",
  "moto.swf.models.__init__.ActivityType",
  "moto.swf.models.__init__.Domain",
  "moto.swf.models.__init__.KNOWN_SWF_TYPES",
  "moto.swf.models.__init__.SWFBackend",
  "moto.swf.models.__init__.SWFDomainAlreadyExistsFault",
  "moto.swf.models.__init__.SWFDomainDeprecatedFault",
  "moto.swf.models.__init__.SWFTypeAlreadyExistsFault",
  "moto.swf.models.__init__.SWFTypeDeprecatedFault",
  "moto.swf.models.__init__.SWFUnknownResourceFault",
  "moto.swf.models.__init__.SWFValidationException",
  "moto.swf.models.__init__.WorkflowExecution",
  "moto.swf.models.__init__.WorkflowType",
  "moto.swf.models.__init__.swf_backends",
  "moto.xray.__init__.base_decorator",
  "moto.xray.__init__.xray_backends",
  "node_executor",
  "ordereddict.OrderedDict",
  "os.environ.get",
  "os.linesep.join",
  "os.path.abspath",
  "os.path.join",
  "os.urandom",
  "processor",
  "pytz.utc",
  "re.I",
  "re.IGNORECASE",
  "re.M",
  "re.UNICODE",
  "recursively_get_dependencies",
  "requests.packages.urllib3.contrib.pyopenssl.extract_from_urllib3",
  "requests.packages.urllib3.contrib.pyopenssl.inject_into_urllib3",
  "requests_func",
  "response_callback",
  "responses.AWSCertificateManagerResponse.dispatch",
  "responses.ActionAuthenticatorMixin.set_initial_no_auth_action_count",
  "responses.ApplicationAutoScalingResponse.dispatch",
  "responses.AthenaResponse.dispatch",
  "responses.AutoScalingResponse.dispatch",
  "responses.BatchResponse.dispatch",
  "responses.CloudFormationResponse.dispatch",
  "responses.CloudWatchResponse.dispatch",
  "responses.CodeCommitResponse.dispatch",
  "responses.CodePipelineResponse.dispatch",
  "responses.CognitoIdentityResponse.dispatch",
  "responses.CognitoIdpResponse.dispatch",
  "responses.ConfigResponse.dispatch",
  "responses.DELETE",
  "responses.DataPipelineResponse.dispatch",
  "responses.DataSyncResponse.dispatch",
  "responses.DynamoDBStreamsHandler.dispatch",
  "responses.DynamoHandler.dispatch",
  "responses.EBResponse.dispatch",
  "responses.EC2ContainerServiceResponse.dispatch",
  "responses.EC2Response.dispatch",
  "responses.ECRResponse.dispatch",
  "responses.Ec2InstanceConnectResponse.dispatch",
  "responses.ElasticMapReduceResponse.dispatch",
  "responses.EmailResponse.dispatch",
  "responses.EventsHandler.dispatch",
  "responses.GET",
  "responses.GlacierResponse.all_vault_response",
  "responses.GlacierResponse.vault_archive_individual_response",
  "responses.GlacierResponse.vault_archive_response",
  "responses.GlacierResponse.vault_jobs_individual_response",
  "responses.GlacierResponse.vault_jobs_output_response",
  "responses.GlacierResponse.vault_jobs_response",
  "responses.GlacierResponse.vault_response",
  "responses.GlueResponse.dispatch",
  "responses.HEAD",
  "responses.IamResponse.dispatch",
  "responses.KinesisResponse.dispatch",
  "responses.KmsResponse.dispatch",
  "responses.LogsResponse.dispatch",
  "responses.ManagedBlockchainResponse.invitation_response",
  "responses.ManagedBlockchainResponse.invitationid_response",
  "responses.ManagedBlockchainResponse.member_response",
  "responses.ManagedBlockchainResponse.memberid_response",
  "responses.ManagedBlockchainResponse.network_response",
  "responses.ManagedBlockchainResponse.networkid_response",
  "responses.ManagedBlockchainResponse.node_response",
  "responses.ManagedBlockchainResponse.nodeid_response",
  "responses.ManagedBlockchainResponse.proposal_response",
  "responses.ManagedBlockchainResponse.proposal_votes_response",
  "responses.ManagedBlockchainResponse.proposalid_response",
  "responses.OPTIONS",
  "responses.OpsWorksResponse.dispatch",
  "responses.OrganizationsResponse.dispatch",
  "responses.PATCH",
  "responses.POST",
  "responses.PUT",
  "responses.PollyResponse.dispatch",
  "responses.RDS2Response.dispatch",
  "responses.RDSResponse.dispatch",
  "responses.RedshiftResponse.dispatch",
  "responses.ResourceAccessManagerResponse.dispatch",
  "responses.ResourceGroupsResponse.dispatch",
  "responses.ResourceGroupsTaggingAPIResponse.dispatch",
  "responses.S3ResponseInstance.ambiguous_response",
  "responses.S3ResponseInstance.bucket_response",
  "responses.S3ResponseInstance.key_or_control_response",
  "responses.SNSResponse.dispatch",
  "responses.SWFResponse.dispatch",
  "responses.SageMakerResponse.dispatch",
  "responses.SecretsManagerResponse.dispatch",
  "responses.SimpleSystemManagerResponse.dispatch",
  "responses.StepFunctionResponse.dispatch",
  "responses.TokenResponse.dispatch",
  "responses.XRayResponse.dispatch",
  "responses._default_mock",
  "responses._default_mock._matches.insert",
  "six.moves.http_client.responses.get",
  "six.moves.range",
  "six.moves.urllib.parse.parse_qs",
  "six.moves.urllib.parse.parse_qsl",
  "six.moves.urllib.parse.quote",
  "six.moves.urllib.parse.unquote",
  "six.moves.urllib.parse.urlencode",
  "six.moves.urllib.parse.urlparse",
  "six.moves.urllib.parse.urlsplit",
  "socket.AF_INET",
  "socket.IPPROTO_TCP",
  "socket.SOCK_STREAM",
  "socket.SocketType",
  "socket.__dict__",
  "socket._socketobject",
  "socket.error",
  "socket.gethostbyname",
  "socket.gethostname",
  "socks",
  "socks.socksocket",
  "ssl.sslwrap_simple",
  "str.encode",
  "struct.pack",
  "struct.unpack",
  "sys",
  "sys.argv",
  "sys.getdefaultencoding",
  "sys.getsizeof",
  "sys.version_info",
  "tag_filter",
  "time",
  "time.mktime",
  "time.sleep",
  "time.time",
  "to_attr",
  "transform",
  "type.lower",
  "types.ClassType",
  "urllib.quote",
  "urllib.quote_plus",
  "urllib.unquote",
  "urlparse.parse_qs",
  "urlparse.unquote",
  "urlparse.urlparse",
  "urlparse.urlsplit",
  "urlparse.urlunsplit",
  "utf8",
  "val",
  "werkzeug.wrappers.Request.from_values"
 ],
 "deps": {
  "AttributePath": [],
  "AttributeValue": [],
  "BaseHTTPServer": [],
  "ConditionalOp": [],
  "DBParameterGroup": [],
  "FakeEvent": [],
  "FakePartition": [],
  "NetworkAclAssociation": [],
  "OpClass": [],
  "OpDefault": [],
  "StringIO": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_adjust": [],
  "_assert_default_policy": [],
  "_class": [],
  "_convert": [],
  "_convert_to_bytes": [],
  "_f": [],
  "_field_match": [],
  "_orig_get_adapter": [],
  "_parse_number_parameter": [],
  "_random_uppercase_or_digit_sequence": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "aws_xray_sdk": [
   "aws-xray-sdk/conda-forge/noarch/aws-xray-sdk-0.95-py_0"
  ],
  "backend_app": [],
  "backports": [
   "backports.tempfile/conda-forge/noarch/backports.tempfile-1.0-py_0"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "binascii": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "boto": [
   "boto/conda-forge/noarch/boto-2.49.0-py_0"
  ],
  "boto3": [
   "boto3/conda-forge/noarch/boto3-1.13.1-pyh9f0ad1d_0"
  ],
  "botocore": [
   "botocore/conda-forge/noarch/botocore-1.10.82-py_0"
  ],
  "builtins": [],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cfnlint": [
   "cfn-lint/conda-forge/noarch/cfn-lint-0.23.1-py_0"
  ],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "comparison_func": [],
  "compat": [],
  "constants": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "conv": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "core": [],
  "cryptography": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decimal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "decode_hex": [],
  "decorate_callable": [],
  "decorate_class": [],
  "dict": [],
  "do_parse": [],
  "do_validate_s3": [],
  "docker": [
   "docker-py/conda-forge/linux-64/docker-py-4.4.4-py37h9c2f6ca_0"
  ],
  "email": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "errno": [],
  "exceptions": [],
  "expand": [],
  "expand_attrs": [],
  "f": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.11.1-pyh9f0ad1d_1"
  ],
  "fail_schedule_activity_task": [],
  "filter_function": [],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "flatten_attrs": [],
  "fnmatch": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "func": [],
  "func_elem_factory": [],
  "function": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_ec2_keys": [],
  "get_ec2_tags": [],
  "get_ec2_values": [],
  "get_elbv2_tags": [],
  "get_index_and_direction_from_token": [],
  "get_kms_tags": [],
  "get_resource_types": [],
  "get_target_group_tags": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "handler": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "hmac": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "http": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "id": [],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "importlib_resources": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inst_ref": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ipaddress": [
   "ipaddress/conda-forge/noarch/ipaddress-1.0.22-py_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_tracked": [],
  "itertools": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.10-py_1"
  ],
  "jose": [
   "python-jose-cryptodome/conda-forge/noarch/python-jose-cryptodome-1.3.2-py_0",
   "python-jose/conda-forge/noarch/python-jose-3.2.0-pyhd8ed1ab_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jsondiff": [
   "jsondiff/conda-forge/noarch/jsondiff-1.1.1-py_0"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "make_int": [],
  "method": [],
  "mock": [],
  "mocked_backend": [],
  "models": [],
  "moto": [],
  "node_executor": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ordereddict": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "processor": [],
  "pytz": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pytz/conda-forge/noarch/pytz-2018.4-py_0"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "recursively_get_dependencies": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "requests_func": [],
  "response_callback": [],
  "responses": [
   "responses/conda-forge/noarch/responses-0.9.0-py_0"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "socks": [],
  "sshpubkeys": [
   "sshpubkeys/conda-forge/noarch/sshpubkeys-3.1.0-py_0"
  ],
  "ssl": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "str": [],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "tag_filter": [],
  "tarfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test": [
   "abtem/conda-forge/noarch/abtem-1.0.0b11-pyhd8ed1ab_0",
   "ansible-runner/conda-forge/noarch/ansible-runner-1.4.6-pyh9f0ad1d_0",
   "awssert/conda-forge/noarch/awssert-1.0.0-pyhd8ed1ab_0",
   "botorch/conda-forge/noarch/botorch-0.2.2-py_0",
   "dolfyn/conda-forge/noarch/dolfyn-0.8.1-py_1",
   "fairlearn/conda-forge/noarch/fairlearn-0.4.6-py_0",
   "flask-redis/conda-forge/noarch/flask-redis-0.4.0-py_0",
   "forest/conda-forge/noarch/forest-0.3.1-py_0",
   "gpytorch/conda-forge/noarch/gpytorch-1.4.0-pyhd8ed1ab_0",
   "ibm-cloud-sdk-core/conda-forge/noarch/ibm-cloud-sdk-core-3.1.0-pyh9f0ad1d_0",
   "ioos_qartod/conda-forge/noarch/ioos_qartod-0.0.3-py_1",
   "label-maker/conda-forge/noarch/label-maker-0.8.0-pyh9f0ad1d_0",
   "otfmi/conda-forge/noarch/otfmi-0.10-pyh44b312d_0",
   "px4tools/conda-forge/noarch/px4tools-0.9.6-py_1000",
   "py-readability-metrics/conda-forge/noarch/py-readability-metrics-1.4.5-pyhd8ed1ab_0",
   "pyinstrument/conda-forge/noarch/pyinstrument-3.1.0-py_0",
   "pypd/conda-forge/noarch/pypd-1.1.0-py_0",
   "pyreportjasper/conda-forge/noarch/pyreportjasper-2.1.0-pyhd3deb0d_0",
   "python-awips/conda-forge/noarch/python-awips-18.1.2-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython",
   "pyulog/conda-forge/noarch/pyulog-0.6.0-py_0",
   "radiant-mlhub/conda-forge/noarch/radiant-mlhub-0.1.3-pyhd8ed1ab_0",
   "sat-search/conda-forge/noarch/sat-search-0.3.0-py_0",
   "sklearn-json/conda-forge/noarch/sklearn-json-0.1.0-pyhd8ed1ab_0",
   "tatsu/conda-forge/noarch/tatsu-5.6.1-pyhd8ed1ab_0"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "to_attr": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "transform": [],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib3": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "urllib3/conda-forge/noarch/urllib3-1.26.5-pyhd8ed1ab_0"
  ],
  "urlparse": [],
  "utf8": [],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "val": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-1.0.0-py_0"
  ],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "xmltodict": [
   "xmltodict/conda-forge/noarch/xmltodict-0.12.0-py_0"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}