{
 "bad": [
  "Asset",
  "ComposedRule.lazy_and",
  "Equity",
  "Equity._kwargnames",
  "Future",
  "Future._kwargnames",
  "GroupedRowTransform",
  "IPython.display",
  "IPython.display.HTML",
  "IPython.display.Image",
  "IPython.display.SVG",
  "IPython.display.display",
  "InvalidClassifierComparison",
  "NotAssetConvertible",
  "NumExprFactor",
  "RecarrayField",
  "__doc__.format",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "__main__.zipline_magic",
  "_adjustments.load_adjustments_from_sqlite",
  "_coerce_to_dtype",
  "_core.adjusted_arrays_from_rows_with_assets",
  "_core.adjusted_arrays_from_rows_without_assets",
  "_core.baseline_arrays_from_rows_with_assets",
  "_core.baseline_arrays_from_rows_without_assets",
  "_core.getname",
  "_enum",
  "_equality_check",
  "_equities._compute_row_slices",
  "_equities._read_bcolz_data",
  "_expect_bounded",
  "_factorize.factorize_strings",
  "_factorize.factorize_strings_known_categories",
  "_factorize.smallest_uint_that_can_hold",
  "_finance_ext.calculate_position_tracker_stats",
  "_finance_ext.update_position_last_sale_prices",
  "_float64window.AdjustedArrayWindow",
  "_get_filled_close",
  "_int64window.AdjustedArrayWindow",
  "_labelwindow.AdjustedArrayWindow",
  "_make_sids",
  "_protocol.InnerPosition",
  "_raw_data_for_asset",
  "_uint8window.AdjustedArrayWindow",
  "_version.get_versions",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "actual",
  "adj_class",
  "adjustments.SQLiteAdjustmentReader",
  "adjustments.SQLiteAdjustmentWriter",
  "advance_current",
  "alembic.migration.MigrationContext",
  "alembic.migration.MigrationContext.configure",
  "alembic.operations.Operations",
  "aliased_type",
  "append_output",
  "array",
  "array.array",
  "assert_eq",
  "asset_writer.SQLITE_MAX_VARIABLE_NUMBER",
  "asset_writer.split_delimited_symbol",
  "asset_writer.symbol_columns",
  "assets.Asset",
  "asymmetric_round_price",
  "atexit",
  "atexit.register",
  "base.DEFAULT_FX_RATE",
  "base.FXRateReader",
  "base.PipelineLoader",
  "basic.Clip",
  "basic.Returns",
  "basic.exponential_weights",
  "bcolz",
  "bcolz.attrs.attrs",
  "bcolz.carray",
  "bcolz.ctable",
  "bcolz.ctable.fromdataframe",
  "bcolz.open",
  "bcolz_daily_bars.BcolzDailyBarReader",
  "bcolz_daily_bars.BcolzDailyBarWriter",
  "binascii",
  "binascii.hexlify",
  "bisect.insort",
  "blaze",
  "blaze.Expr",
  "blaze.data",
  "blaze.expr.Field",
  "blaze.expr.Label",
  "blaze.expr.ReLabel",
  "blaze.expr.Symbol",
  "blaze.ndim",
  "blaze.transform",
  "blotter.Blotter",
  "bottleneck",
  "bottleneck.nanargmax",
  "bottleneck.nanargmin",
  "bottleneck.nanmax",
  "bottleneck.nanmean",
  "bottleneck.nanmedian",
  "bottleneck.nanmin",
  "bottleneck.nanstd",
  "bottleneck.nansum",
  "cache_popitem",
  "cache_renew",
  "calculate_minute_capital_changes",
  "calculate_payout",
  "cf_template",
  "cgi.escape",
  "clean_f",
  "click",
  "click.Choice",
  "click.ClickException",
  "click.File",
  "click.ParamType",
  "click.Path",
  "click.STRING",
  "click.echo",
  "click.group",
  "click.option",
  "click.pass_context",
  "click.progressbar",
  "cls",
  "cmp_",
  "cmp_start",
  "cmp_stop",
  "collections.Iterable",
  "collections.Mapping",
  "collections.MutableMapping",
  "collections.OrderedDict",
  "collections.OrderedDict.move_to_end",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "commuted_method_getter",
  "compute",
  "context_tricks.CallbackManager",
  "contextlib",
  "contextlib.ExitStack",
  "contextlib.GeneratorContextManager",
  "contextlib.contextmanager",
  "contextlib2.ExitStack",
  "continuous_futures.ADJUSTMENT_STYLES",
  "continuous_futures.ContinuousFuture",
  "continuous_futures.OrderedContracts",
  "convert_datelike_to_long",
  "copy.copy",
  "copy.deepcopy",
  "core.create_daily_bar_data",
  "core.create_minute_bar_data",
  "core.make_simple_equity_info",
  "core.register",
  "core.tmp_asset_finder",
  "core.tmp_dir",
  "core.write_hdf5_daily_bars",
  "ctypes.Structure",
  "ctypes.c_ubyte",
  "ctypes.c_uint",
  "ctypes.c_ulong",
  "ctypes.c_ulonglong",
  "ctypes.c_ushort",
  "ctypes.py_object",
  "ctypes.pythonapi",
  "ctypes.pythonapi.PyDictProxy_New",
  "ctypes.sizeof",
  "data.adjustments.SQLiteAdjustmentReader",
  "data.adjustments.SQLiteAdjustmentWriter",
  "data.bcolz_daily_bars.BcolzDailyBarReader",
  "data.bcolz_daily_bars.BcolzDailyBarWriter",
  "data.data_portal.DEFAULT_DAILY_HISTORY_PREFETCH",
  "data.data_portal.DEFAULT_MINUTE_HISTORY_PREFETCH",
  "data.data_portal.DataPortal",
  "data.equity_pricing.EquityPricing.currency.name",
  "data.fx.HDF5FXRateReader",
  "data.fx.HDF5FXRateWriter",
  "data.fx.InMemoryFXRateReader",
  "data.hdf5_daily_bars.HDF5DailyBarReader.from_file",
  "data.hdf5_daily_bars.HDF5DailyBarWriter",
  "data.hdf5_daily_bars.MultiCountryDailyBarReader",
  "data.minute_bars.BcolzMinuteBarReader",
  "data.minute_bars.BcolzMinuteBarWriter",
  "data.minute_bars.FUTURES_MINUTES_PER_DAY",
  "data.minute_bars.US_EQUITIES_MINUTES_PER_DAY",
  "data.resample.MinuteResampleSessionBarReader",
  "data.resample.minute_frame_to_session_frame",
  "data.testing.TestingDataSet.columns",
  "dataset.Column",
  "dataset.DataSet",
  "datashape.Date",
  "datashape.DateTime",
  "datashape.Option",
  "datashape.String",
  "datashape.dispatch.namespace",
  "datashape.integral",
  "datashape.isrecord",
  "datashape.isscalar",
  "datashape.istabular",
  "datashape.util.testing.assert_dshape_equal",
  "datashape.util.testing.assert_dshape_equal.funcs",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.time",
  "datetime.timedelta",
  "datetime.tzinfo",
  "dateutil.relativedelta.relativedelta",
  "dateutil.rrule",
  "dateutil.rrule.DAILY",
  "dateutil.rrule.FR",
  "dateutil.rrule.MO",
  "dateutil.rrule.MONTHLY",
  "dateutil.rrule.SA",
  "dateutil.rrule.SU",
  "dateutil.rrule.TH",
  "dateutil.rrule.TU",
  "dateutil.rrule.WE",
  "dateutil.rrule.YEARLY",
  "dateutil.rrule.rrule",
  "dateutil.rrule.rruleset",
  "debug.debug_mro_failure",
  "decimal.Decimal",
  "display_cls",
  "distutils.dir_util",
  "distutils.dir_util.copy_tree",
  "distutils.version.StrictVersion",
  "domain.Domain",
  "domain.GENERIC",
  "domain.US_EQUITIES",
  "domain.infer_domain",
  "downsample_helpers.expect_downsample_frequency",
  "downsample_helpers.select_sampling_indices",
  "downsampled_type",
  "empyrical",
  "empyrical.alpha_beta_aligned",
  "empyrical.annual_volatility",
  "empyrical.cum_returns",
  "empyrical.downside_risk",
  "empyrical.max_drawdown",
  "empyrical.sharpe_ratio",
  "empyrical.sortino_ratio",
  "errno",
  "errno.EEXIST",
  "errno.ENOENT",
  "error_message",
  "every_bar",
  "exc_type",
  "exchange_info.ExchangeInfo",
  "execute_order_cancellation_policy",
  "f",
  "f.__doc__",
  "f.__doc__.format",
  "f.__name__",
  "f.read",
  "f.write",
  "factor.CustomFactor",
  "factor.Factor",
  "factors.PeerCount",
  "filter.CustomFilter",
  "filter_kwargs",
  "filters.ArrayPredicate",
  "filters.Filter",
  "filters.NotNullFilter",
  "filters.NullFilter",
  "filters.NumExprFilter.create",
  "finance.trading.SimulationParameters",
  "fn",
  "format_attrs",
  "format_inputs",
  "func",
  "function",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.total_ordering",
  "functools.update_wrapper",
  "functools.wraps",
  "futures.CMES_CODE_TO_MONTH",
  "get_funcname",
  "get_ipython",
  "get_loader",
  "get_single_asset_value",
  "get_value",
  "glob.glob",
  "graph.ExecutionPlan",
  "graph.SCREEN_NAME",
  "graph.TermGraph",
  "graph.maybe_specialize",
  "gzip",
  "gzip.open",
  "h5py",
  "h5py.File",
  "hashlib",
  "hashlib.md5",
  "heapq",
  "heapq.merge",
  "hooks.DelegatingHooks",
  "html.escape",
  "iface.PIPELINE_HOOKS_CONTEXT_MANAGERS",
  "iface.PipelineHooks",
  "iface.PipelineHooks._signatures",
  "impl",
  "importlib.import_module",
  "input_validation.coerce_string",
  "inspect",
  "inspect.ArgSpec",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "inst",
  "interface.Interface",
  "interface.default",
  "interface.implements",
  "intervaltree.IntervalTree",
  "io.BytesIO",
  "ipywidgets",
  "ipywidgets.VBox",
  "isnan",
  "iso3166.countries_by_name",
  "iso3166.countries_by_name.alpha2",
  "iso4217.Currency",
  "item",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.compress",
  "itertools.count",
  "itertools.product",
  "itertools.repeat",
  "join_op",
  "json",
  "json.dump",
  "json.load",
  "json.loads",
  "left_op",
  "loader_group_key",
  "logbook",
  "logbook.ERROR",
  "logbook.INFO",
  "logbook.Logger",
  "logbook.NestedSetup",
  "logbook.NullHandler",
  "logbook.Processor",
  "logbook.StderrHandler",
  "logbook.StreamHandler",
  "logbook.TestHandler",
  "lru.LRU",
  "make_adjustment",
  "make_param_sets",
  "make_processor_assignment",
  "mangle",
  "math",
  "math.ceil",
  "math.copysign",
  "math.fabs",
  "math.isnan",
  "math.sqrt",
  "matplotlib.pyplot",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "maybe_s",
  "maybe_specialize",
  "mean",
  "method",
  "metric.AlphaBeta",
  "metric.BenchmarkReturnsAndVolatility",
  "metric.CashFlow",
  "metric.DailyLedgerField",
  "metric.MaxLeverage",
  "metric.NumTradingDays",
  "metric.Orders",
  "metric.PNL",
  "metric.PeriodLabel",
  "metric.Returns",
  "metric.ReturnsStatistic",
  "metric.SimpleLedgerField",
  "metric.StartOfPeriodLedgerField",
  "metric.Transactions",
  "metric._ClassicRiskMetrics",
  "metric._ConstantCumulativeRiskMetric",
  "minute_bars.BcolzMinuteBarReader",
  "minute_bars.BcolzMinuteBarWriter",
  "mixins.AliasedMixin",
  "mixins.ConstantMixin",
  "mixins.CustomTermMixin",
  "mixins.DownsampledMixin",
  "mixins.IfElseMixin",
  "mixins.LatestMixin",
  "mixins.PositiveWindowLengthMixin",
  "mixins.RestrictedDTypeMixin",
  "mixins.SingleInputMixin",
  "mixins.SliceMixin",
  "mixins.StandardOutputs",
  "mkdict",
  "mock.patch",
  "mock.patch.object",
  "most_recent_data",
  "multipledispatch.dispatch",
  "name_as_arg",
  "networkx",
  "networkx.DiGraph",
  "networkx.cycles.simple_cycles",
  "networkx.topological_sort",
  "networkx.write_dot",
  "no.NoHooks",
  "nose.tools.assert_almost_equal",
  "nose.tools.assert_almost_equals",
  "nose.tools.assert_dict_contains_subset",
  "nose.tools.assert_false",
  "nose.tools.assert_greater",
  "nose.tools.assert_greater_equal",
  "nose.tools.assert_in",
  "nose.tools.assert_is",
  "nose.tools.assert_is_instance",
  "nose.tools.assert_is_none",
  "nose.tools.assert_is_not",
  "nose.tools.assert_is_not_none",
  "nose.tools.assert_less",
  "nose.tools.assert_less_equal",
  "nose.tools.assert_multi_line_equal",
  "nose.tools.assert_not_almost_equal",
  "nose.tools.assert_not_almost_equals",
  "nose.tools.assert_not_equal",
  "nose.tools.assert_not_equals",
  "nose.tools.assert_not_in",
  "nose.tools.assert_not_is_instance",
  "nose.tools.assert_raises",
  "nose.tools.assert_raises_regexp",
  "nose.tools.assert_regexp_matches",
  "nose.tools.assert_true",
  "nose.tools.assert_tuple_equal",
  "nose.tools.nottest",
  "numbers",
  "numbers.Integral",
  "numbers.Number",
  "numbers.Real",
  "numexpr",
  "numexpr.evaluate",
  "numexpr.necompiler.getExprNames",
  "numpy",
  "numpy.NAN",
  "numpy.NINF",
  "numpy.NaN",
  "numpy.__version__",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.append",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.average",
  "numpy.bool",
  "numpy.bool_",
  "numpy.broadcast",
  "numpy.broadcast_arrays",
  "numpy.busday_count",
  "numpy.clip",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.copyto",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.datetime64",
  "numpy.delete",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.dstack",
  "numpy.dtype",
  "numpy.dtype.kind",
  "numpy.dtype.name",
  "numpy.dtype.type",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.exp",
  "numpy.eye",
  "numpy.flatnonzero",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.fmax",
  "numpy.fmax.accumulate",
  "numpy.full",
  "numpy.full_like",
  "numpy.get_printoptions",
  "numpy.geterr",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.in1d",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.isfinite",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.ix_",
  "numpy.lib.apply_along_axis",
  "numpy.lib.stride_tricks.as_strided",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.log",
  "numpy.log2",
  "numpy.logical_and.reduce",
  "numpy.max",
  "numpy.maximum",
  "numpy.maximum.accumulate",
  "numpy.mean",
  "numpy.min",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.nanargmax",
  "numpy.nanargmin",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmedian",
  "numpy.nanmin",
  "numpy.nanpercentile",
  "numpy.nanstd",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.random",
  "numpy.random.RandomState",
  "numpy.random.rand",
  "numpy.ravel",
  "numpy.recarray",
  "numpy.repeat",
  "numpy.roll",
  "numpy.round",
  "numpy.s_",
  "numpy.searchsorted",
  "numpy.set_printoptions",
  "numpy.setdiff1d",
  "numpy.seterr",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.take",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_compare",
  "numpy.testing.assert_array_equal",
  "numpy.testing.utils.assert_array_compare",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint8",
  "numpy.union1d",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.void",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "object.__getattribute__",
  "object.__new__",
  "odo.odo",
  "once_a_day",
  "only_contains",
  "op",
  "operator",
  "operator.and_",
  "operator.attrgetter",
  "operator.eq",
  "operator.gt",
  "operator.itemgetter",
  "operator.le",
  "operator.lt",
  "operator.methodcaller",
  "operator.mul",
  "operator.ne",
  "operator.or_",
  "os",
  "os.devnull",
  "os.environ",
  "os.environ.get",
  "os.environ.pop",
  "os.getenv",
  "os.listdir",
  "os.makedirs",
  "os.name",
  "os.path",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getmtime",
  "os.path.isdir",
  "os.path.join",
  "os.path.realpath",
  "os.path.split",
  "os.remove",
  "os.utime",
  "pandas",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.DataFrame",
  "pandas.DataFrame.from_records",
  "pandas.DatetimeIndex",
  "pandas.HDFStore",
  "pandas.Index",
  "pandas.Int64Index",
  "pandas.MultiIndex",
  "pandas.MultiIndex.from_arrays",
  "pandas.MultiIndex.from_product",
  "pandas.NaT",
  "pandas.NaT.value",
  "pandas.Panel",
  "pandas.Panel.from_dict",
  "pandas.Series",
  "pandas.Timedelta",
  "pandas.Timestamp",
  "pandas.Timestamp.max.tz_localize",
  "pandas.Timestamp.utcnow",
  "pandas.__version__",
  "pandas.concat",
  "pandas.core.common.PerformanceWarning",
  "pandas.core.indexing.get_indexers_list",
  "pandas.date_range",
  "pandas.isnull",
  "pandas.notnull",
  "pandas.option_context",
  "pandas.parser.CParserError",
  "pandas.qcut",
  "pandas.read_csv",
  "pandas.read_sql",
  "pandas.to_datetime",
  "pandas.tseries.offsets.CDay",
  "pandas.tseries.offsets.MonthBegin",
  "pandas.tseries.tools.normalize_date",
  "pandas.util.testing.assert_equal",
  "pandas.util.testing.assert_frame_equal",
  "pandas.util.testing.assert_index_equal",
  "pandas.util.testing.assert_panel_equal",
  "pandas.util.testing.assert_series_equal",
  "past_auto_close_date",
  "paths.ensure_directory",
  "periods_in_range",
  "pickle",
  "pickle.dump",
  "position.Position",
  "pprint.pformat",
  "pred",
  "predicates.assert_equal",
  "prepare_inputs",
  "preprocessor",
  "pygments.formatters.TerminalFormatter",
  "pygments.highlight",
  "pygments.lexers.PythonLexer",
  "pytz",
  "pytz.timezone",
  "pytz.utc",
  "pytz.utc.zone",
  "re",
  "re.MULTILINE",
  "re.compile",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "read",
  "read_csv",
  "real_compute",
  "regress",
  "request_pair",
  "requests",
  "requests.exceptions.ConnectionError",
  "requests.get",
  "responses",
  "responses.RequestsMock",
  "return_type",
  "right_op",
  "run_pipeline",
  "scipy.stats.linregress",
  "scipy.stats.rankdata",
  "scipy.stats.spearmanr",
  "sentinel.sentinel",
  "sentinels.NotSpecified",
  "should_clean",
  "shutil",
  "shutil.copy2",
  "shutil.copytree",
  "shutil.move",
  "shutil.rmtree",
  "six",
  "six.PY2",
  "six.PY3",
  "six.StringIO",
  "six.b",
  "six.exec_",
  "six.iteritems",
  "six.itervalues",
  "six.moves._thread.allocate_lock",
  "six.moves.filter",
  "six.moves.map",
  "six.moves.range",
  "six.moves.reduce",
  "six.moves.urllib.parse.urlencode",
  "six.moves.zip",
  "six.moves.zip_longest",
  "six.raise_from",
  "six.string_types",
  "six.text_type",
  "six.viewkeys",
  "six.viewvalues",
  "six.with_metaclass",
  "skip_this_input",
  "slice_type",
  "split_adj_factor",
  "sqlalchemy",
  "sqlalchemy.CheckConstraint",
  "sqlalchemy.Column",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.MetaData",
  "sqlalchemy.Table",
  "sqlalchemy.Text",
  "sqlalchemy.create_engine",
  "sqlalchemy.exc.OperationalError",
  "sqlalchemy.func.max",
  "sqlalchemy.insert",
  "sqlalchemy.select",
  "sqlite3",
  "sqlite3.connect",
  "statistical.RollingLinearRegression",
  "statistical.RollingPearson",
  "statistical.RollingSpearman",
  "string.ascii_uppercase",
  "struct",
  "struct.Struct",
  "sub_method",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.check_call",
  "synthetic.EyeLoader",
  "synthetic.SeededRandomLoader",
  "sys",
  "sys._getframe",
  "sys.exc_info",
  "sys.float_info",
  "sys.float_info.epsilon",
  "sys.stderr",
  "sys.stdout",
  "table_day_to_session",
  "tables",
  "tables.open_file",
  "talib.EMA",
  "tarfile",
  "tarfile.open",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "tempfile.tempdir",
  "term.AssetExists",
  "term.ComputableTerm",
  "term.LoadableTerm",
  "term.Term",
  "testfixtures.TempDirectory",
  "textwrap.dedent",
  "threading",
  "threading.local",
  "time",
  "time.time",
  "to",
  "to_frame",
  "toolz.complement",
  "toolz.compose",
  "toolz.concat",
  "toolz.concatv",
  "toolz.curried.do",
  "toolz.curried.operator",
  "toolz.curried.operator.attrgetter",
  "toolz.curried.operator.contains",
  "toolz.curried.operator.getitem",
  "toolz.curried.operator.setitem",
  "toolz.curry",
  "toolz.dissoc",
  "toolz.first",
  "toolz.flip",
  "toolz.groupby",
  "toolz.identity",
  "toolz.keyfilter",
  "toolz.keymap",
  "toolz.memoize",
  "toolz.merge",
  "toolz.merge_with",
  "toolz.partition_all",
  "toolz.peek",
  "toolz.sandbox.unzip",
  "toolz.sliding_window",
  "toolz.take",
  "toolz.valmap",
  "traceback.format_exception",
  "trading_calendars.TradingCalendar",
  "trading_calendars.calendar_utils.global_calendar_dispatcher",
  "trading_calendars.calendar_utils.global_calendar_dispatcher._calendars",
  "trading_calendars.clear_calendars",
  "trading_calendars.deregister_calendar",
  "trading_calendars.get_calendar",
  "trading_calendars.register_calendar",
  "trading_calendars.register_calendar_alias",
  "trading_calendars.register_calendar_type",
  "trading_calendars.utils.memoize.lazyval",
  "trading_calendars.utils.pandas_utils.days_at_time",
  "type.__call__",
  "types.CodeType",
  "types.DictProxyType",
  "types.MappingProxyType",
  "unittest.TestCase",
  "update_hits",
  "user_function",
  "utils.check_dts",
  "utils.classproperty.classproperty",
  "utils.enum.enum",
  "utils.final.FinalMeta",
  "utils.final.final",
  "utils.is_sorted_ascending",
  "utils.memoize.remember_last",
  "utils.numpy_utils.numpy_version",
  "utils.pandas_utils.new_pandas",
  "utils.shift_dates",
  "uuid",
  "uuid.uuid4",
  "valid_bounds",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "weakref.WeakKeyDictionary",
  "weakref.WeakValueDictionary",
  "weakref.ref",
  "window_type",
  "write_sid",
  "writeln",
  "zipfile.ZipFile",
  "zipline.__file__",
  "zipline.__init__._",
  "zipline._protocol.handle_non_market_minutes",
  "zipline.api.attach_pipeline",
  "zipline.api.date_rules.every_day",
  "zipline.api.order",
  "zipline.api.order_percent",
  "zipline.api.order_target",
  "zipline.api.order_target_percent",
  "zipline.api.order_target_value",
  "zipline.api.order_value",
  "zipline.api.pipeline_output",
  "zipline.api.record",
  "zipline.api.schedule_function",
  "zipline.api.set_slippage",
  "zipline.api.sid",
  "zipline.api.symbol",
  "zipline.assets.asset_db_schema.asset_router.c.asset_type.name",
  "zipline.assets.asset_db_schema.asset_router.c.sid.name",
  "zipline.assets.asset_db_schema.asset_router.name",
  "zipline.assets.asset_db_schema.equities.columns",
  "zipline.assets.asset_db_schema.exchanges.set_index",
  "zipline.assets.asset_db_schema.exchanges.values",
  "zipline.assets.asset_db_schema.metadata.create_all",
  "zipline.assets.continuous_futures.CHAIN_PREDICATES",
  "zipline.assets.continuous_futures.ContinuousFuture",
  "zipline.country.CountryCode.ARGENTINA",
  "zipline.country.CountryCode.AUSTRALIA",
  "zipline.country.CountryCode.AUSTRIA",
  "zipline.country.CountryCode.BELGIUM",
  "zipline.country.CountryCode.BRAZIL",
  "zipline.country.CountryCode.CANADA",
  "zipline.country.CountryCode.CHILE",
  "zipline.country.CountryCode.CHINA",
  "zipline.country.CountryCode.COLOMBIA",
  "zipline.country.CountryCode.CZECH_REPUBLIC",
  "zipline.country.CountryCode.DENMARK",
  "zipline.country.CountryCode.FINLAND",
  "zipline.country.CountryCode.FRANCE",
  "zipline.country.CountryCode.GERMANY",
  "zipline.country.CountryCode.GREECE",
  "zipline.country.CountryCode.HONG_KONG",
  "zipline.country.CountryCode.HUNGARY",
  "zipline.country.CountryCode.INDIA",
  "zipline.country.CountryCode.INDONESIA",
  "zipline.country.CountryCode.IRELAND",
  "zipline.country.CountryCode.ITALY",
  "zipline.country.CountryCode.JAPAN",
  "zipline.country.CountryCode.MALAYSIA",
  "zipline.country.CountryCode.MEXICO",
  "zipline.country.CountryCode.NETHERLANDS",
  "zipline.country.CountryCode.NEW_ZEALAND",
  "zipline.country.CountryCode.NORWAY",
  "zipline.country.CountryCode.PAKISTAN",
  "zipline.country.CountryCode.PERU",
  "zipline.country.CountryCode.PHILIPPINES",
  "zipline.country.CountryCode.POLAND",
  "zipline.country.CountryCode.PORTUGAL",
  "zipline.country.CountryCode.RUSSIA",
  "zipline.country.CountryCode.SINGAPORE",
  "zipline.country.CountryCode.SOUTH_AFRICA",
  "zipline.country.CountryCode.SOUTH_KOREA",
  "zipline.country.CountryCode.SPAIN",
  "zipline.country.CountryCode.SWEDEN",
  "zipline.country.CountryCode.SWITZERLAND",
  "zipline.country.CountryCode.TAIWAN",
  "zipline.country.CountryCode.THAILAND",
  "zipline.country.CountryCode.TURKEY",
  "zipline.country.CountryCode.UNITED_KINGDOM",
  "zipline.country.CountryCode.UNITED_STATES",
  "zipline.data._minute_bar_internal.find_last_traded_position_internal",
  "zipline.data._minute_bar_internal.find_position_of_minute",
  "zipline.data._minute_bar_internal.minute_value",
  "zipline.data.bundles.bundles.keys",
  "zipline.finance.metrics.__init__.default_metrics",
  "zipline.finance.order.ORDER_STATUS.CANCELLED",
  "zipline.finance.order.ORDER_STATUS.FILLED",
  "zipline.gens.sim_engine.BAR",
  "zipline.gens.sim_engine.BEFORE_TRADING_START_BAR",
  "zipline.gens.sim_engine.MINUTE_END",
  "zipline.gens.sim_engine.MinuteSimulationClock",
  "zipline.gens.sim_engine.NANOS_IN_MINUTE",
  "zipline.gens.sim_engine.SESSION_END",
  "zipline.gens.sim_engine.SESSION_START",
  "zipline.lib._float64window.AdjustedArrayWindow",
  "zipline.lib._int64window.AdjustedArrayWindow",
  "zipline.lib.adjustment.Adjustment",
  "zipline.lib.adjustment.Datetime641DArrayOverwrite",
  "zipline.lib.adjustment.Datetime64Overwrite",
  "zipline.lib.adjustment.Float641DArrayOverwrite",
  "zipline.lib.adjustment.Float64Add",
  "zipline.lib.adjustment.Float64Multiply",
  "zipline.lib.adjustment.Float64Overwrite",
  "zipline.lib.labelarray.LabelArray.SUPPORTED_SCALAR_TYPES",
  "zipline.lib.rank.is_missing",
  "zipline.lib.rank.masked_rankdata_2d",
  "zipline.lib.rank.rankdata_1d_descending",
  "zipline.pipeline.classifiers.Classifier.ALLOWED_DTYPES",
  "zipline.pipeline.common.EVENT_DATE_FIELD_NAME.groupby",
  "zipline.pipeline.common.EVENT_DATE_FIELD_NAME.union",
  "zipline.pipeline.common.EVENT_DATE_FIELD_NAME.values",
  "zipline.pipeline.common.SID_FIELD_NAME.union",
  "zipline.pipeline.common.TS_FIELD_NAME.astype",
  "zipline.pipeline.common.TS_FIELD_NAME.min",
  "zipline.pipeline.common.TS_FIELD_NAME.union",
  "zipline.pipeline.common.TS_FIELD_NAME.values",
  "zipline.pipeline.data.EquityPricing.close",
  "zipline.pipeline.data.EquityPricing.high",
  "zipline.pipeline.data.EquityPricing.low",
  "zipline.pipeline.data.EquityPricing.open",
  "zipline.pipeline.data.EquityPricing.volume",
  "zipline.pipeline.data.USEquityPricing.columns",
  "zipline.pipeline.data.testing.TestingDataSet.columns",
  "zipline.pipeline.expression.MATH_BINOPS.union",
  "zipline.pipeline.factors.Factor.ALLOWED_DTYPES",
  "zipline.pipeline.filters.Filter.ALLOWED_DTYPES",
  "zipline.pipeline.loaders.USEquityPricingLoader.without_fx",
  "zipline.pipeline.loaders.earnings_estimates.metadata_columns.union",
  "zipline.protocol.DATASOURCE_TYPE.CUSTOM",
  "zipline.protocol.DATASOURCE_TYPE.DONE",
  "zipline.protocol.DATASOURCE_TYPE.TRADE",
  "zipline.utils.events.calendars.US_EQUITIES",
  "zipline.utils.events.calendars.US_FUTURES",
  "zipline.utils.events.time_rules.every_minute"
 ],
 "deps": {
  "Asset": [],
  "ComposedRule": [],
  "Equity": [],
  "Future": [],
  "GroupedRowTransform": [],
  "IPython": [],
  "InvalidClassifierComparison": [],
  "NotAssetConvertible": [],
  "NumExprFactor": [],
  "RecarrayField": [],
  "__doc__": [],
  "__future__": [],
  "__main__": [],
  "_adjustments": [],
  "_coerce_to_dtype": [],
  "_core": [],
  "_enum": [],
  "_equality_check": [],
  "_equities": [],
  "_expect_bounded": [],
  "_factorize": [],
  "_finance_ext": [],
  "_float64window": [],
  "_get_filled_close": [],
  "_int64window": [],
  "_labelwindow": [],
  "_make_sids": [],
  "_protocol": [],
  "_raw_data_for_asset": [],
  "_uint8window": [],
  "_version": [],
  "abc": [],
  "actual": [],
  "adj_class": [],
  "adjustments": [],
  "advance_current": [],
  "alembic": [],
  "aliased_type": [],
  "append_output": [],
  "array": [],
  "assert_eq": [],
  "asset_writer": [],
  "assets": [],
  "asymmetric_round_price": [],
  "atexit": [],
  "base": [],
  "basic": [],
  "bcolz": [],
  "bcolz_daily_bars": [],
  "binascii": [],
  "bisect": [],
  "blaze": [],
  "blotter": [],
  "bottleneck": [],
  "cache_popitem": [],
  "cache_renew": [],
  "calculate_minute_capital_changes": [],
  "calculate_payout": [],
  "cf_template": [],
  "cgi": [],
  "clean_f": [],
  "click": [],
  "cls": [],
  "cmp_": [],
  "cmp_start": [],
  "cmp_stop": [],
  "collections": [],
  "commuted_method_getter": [],
  "compute": [],
  "context_tricks": [],
  "contextlib": [],
  "contextlib2": [],
  "continuous_futures": [],
  "convert_datelike_to_long": [],
  "copy": [],
  "core": [],
  "ctypes": [],
  "data": [],
  "dataset": [],
  "datashape": [],
  "datetime": [],
  "dateutil": [],
  "debug": [],
  "decimal": [],
  "display_cls": [],
  "distutils": [],
  "domain": [],
  "downsample_helpers": [],
  "downsampled_type": [],
  "empyrical": [],
  "errno": [],
  "error_message": [],
  "every_bar": [],
  "exc_type": [],
  "exchange_info": [],
  "execute_order_cancellation_policy": [],
  "f": [],
  "factor": [],
  "factors": [],
  "filter": [],
  "filter_kwargs": [],
  "filters": [],
  "finance": [],
  "fn": [],
  "format_attrs": [],
  "format_inputs": [],
  "func": [],
  "function": [],
  "functools": [],
  "futures": [],
  "get_funcname": [],
  "get_ipython": [],
  "get_loader": [],
  "get_single_asset_value": [],
  "get_value": [],
  "glob": [],
  "graph": [],
  "gzip": [],
  "h5py": [],
  "hashlib": [],
  "heapq": [],
  "hooks": [],
  "html": [],
  "iface": [],
  "impl": [],
  "importlib": [],
  "input_validation": [],
  "inspect": [],
  "inst": [],
  "interface": [],
  "intervaltree": [],
  "io": [],
  "ipywidgets": [],
  "isnan": [],
  "iso3166": [],
  "iso4217": [],
  "item": [],
  "itertools": [],
  "join_op": [],
  "json": [],
  "left_op": [],
  "loader_group_key": [],
  "logbook": [],
  "lru": [],
  "make_adjustment": [],
  "make_param_sets": [],
  "make_processor_assignment": [],
  "mangle": [],
  "math": [],
  "matplotlib": [],
  "maybe_s": [],
  "maybe_specialize": [],
  "mean": [],
  "method": [],
  "metric": [],
  "minute_bars": [],
  "mixins": [],
  "mkdict": [],
  "mock": [],
  "most_recent_data": [],
  "multipledispatch": [],
  "name_as_arg": [],
  "networkx": [],
  "no": [],
  "nose": [],
  "numbers": [],
  "numexpr": [],
  "numpy": [],
  "object": [],
  "odo": [],
  "once_a_day": [],
  "only_contains": [],
  "op": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "past_auto_close_date": [],
  "paths": [],
  "periods_in_range": [],
  "pickle": [],
  "position": [],
  "pprint": [],
  "pred": [],
  "predicates": [],
  "prepare_inputs": [],
  "preprocessor": [],
  "pygments": [],
  "pytz": [],
  "re": [],
  "read": [],
  "read_csv": [],
  "real_compute": [],
  "regress": [],
  "request_pair": [],
  "requests": [],
  "responses": [],
  "return_type": [],
  "right_op": [],
  "run_pipeline": [],
  "scipy": [],
  "sentinel": [],
  "sentinels": [],
  "should_clean": [],
  "shutil": [],
  "six": [],
  "skip_this_input": [],
  "slice_type": [],
  "split_adj_factor": [],
  "sqlalchemy": [],
  "sqlite3": [],
  "statistical": [],
  "string": [],
  "struct": [],
  "sub_method": [],
  "subprocess": [],
  "synthetic": [],
  "sys": [],
  "table_day_to_session": [],
  "tables": [],
  "talib": [],
  "tarfile": [],
  "tempfile": [],
  "term": [],
  "testfixtures": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "to": [],
  "to_frame": [],
  "toolz": [],
  "traceback": [],
  "trading_calendars": [],
  "type": [],
  "types": [],
  "unittest": [],
  "update_hits": [],
  "user_function": [],
  "utils": [],
  "uuid": [],
  "valid_bounds": [],
  "warnings": [],
  "weakref": [],
  "window_type": [],
  "write_sid": [],
  "writeln": [],
  "zipfile": [],
  "zipline": []
 }
}