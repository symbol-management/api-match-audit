{
 "bad": [
  "_has_exclusive_writes",
  "_pystencils_fields",
  "_tensors_to_dict",
  "backward_func",
  "backward_function",
  "backward_loop",
  "collections.abc.Iterable",
  "cppimport",
  "cppimport.imp",
  "enum.Enum",
  "forward_function",
  "forward_loop",
  "functools.partial",
  "functools.reduce",
  "graphviz",
  "graphviz.Digraph",
  "hashlib",
  "hashlib.md5",
  "input.field",
  "is_out_of_bound",
  "itertools",
  "itertools.chain.from_iterable",
  "jinja2",
  "jinja2.StrictUndefined",
  "jinja2.Template",
  "keyword",
  "keyword.iskeyword",
  "lbmpy.boundaries.boundaryconditions.Boundary",
  "lbmpy.boundaries.boundaryhandling.BoundaryOffsetInfo",
  "lbmpy.boundaries.boundaryhandling.BoundaryOffsetInfo.inv_dir",
  "lbmpy.boundaries.boundaryhandling.BoundaryOffsetInfo.offset_from_dir",
  "lbmpy.boundaries.boundaryhandling.LatticeBoltzmannBoundaryHandling",
  "lbmpy.lbstep.LatticeBoltzmannStep",
  "lbmpy.methods.abstractlbmethod.AbstractLbMethod",
  "lbmpy.methods.abstractlbmethod.LbmCollisionRule",
  "numpy.dtype",
  "numpy.float32",
  "numpy.float64",
  "numpy.zeros",
  "os.environ.copy",
  "os.path.exists",
  "p_tqdm",
  "p_tqdm.p_umap",
  "pycuda.autoinit",
  "pycuda.driver",
  "pycuda.driver.Context",
  "pycuda.driver.Context.get_device",
  "pycuda.gpuarray",
  "pystencils",
  "pystencils.Assignment",
  "pystencils.AssignmentCollection",
  "pystencils.Field",
  "pystencils.Field.Access",
  "pystencils.Field.create_fixed_size",
  "pystencils.Field.create_from_numpy_array",
  "pystencils.Field.new_field_with_different_name",
  "pystencils.TypedSymbol",
  "pystencils.astnodes.Block",
  "pystencils.astnodes.ConditionalFieldAccess",
  "pystencils.astnodes.FieldPointerSymbol",
  "pystencils.astnodes.FieldShapeSymbol",
  "pystencils.astnodes.FieldStrideSymbol",
  "pystencils.astnodes.KernelFunction",
  "pystencils.astnodes.KernelFunction.fields_read",
  "pystencils.astnodes.KernelFunction.fields_written",
  "pystencils.astnodes.Node",
  "pystencils.astnodes.NodeOrExpr",
  "pystencils.astnodes.ResolvedFieldAccess",
  "pystencils.astnodes.SympyAssignment",
  "pystencils.autodiff.AdjointField",
  "pystencils.autodiff.backends._pytorch.numpy_dtype_to_torch",
  "pystencils.autodiff.backends._pytorch.torch_dtype_to_numpy",
  "pystencils.backends",
  "pystencils.backends.cbackend",
  "pystencils.backends.cbackend.CustomCodeNode",
  "pystencils.backends.cbackend.get_global_declarations",
  "pystencils.backends.cbackend.get_headers",
  "pystencils.cache",
  "pystencils.cache.disk_cache_no_fallback",
  "pystencils.cpu.cpujit.get_cache_config",
  "pystencils.cpu.cpujit.get_compiler_config",
  "pystencils.create_kernel",
  "pystencils.data_types.Type",
  "pystencils.data_types.TypedMatrixSymbol",
  "pystencils.data_types.TypedSymbol",
  "pystencils.data_types.cast_func",
  "pystencils.datahandling",
  "pystencils.datahandling.SerialDataHandling",
  "pystencils.field.Field",
  "pystencils.field.Field.create_from_numpy_array",
  "pystencils.field.FieldType",
  "pystencils.field.FieldType.GENERIC",
  "pystencils.field._parse_description",
  "pystencils.field._parse_part1",
  "pystencils.field.create_numpy_array_with_layout",
  "pystencils.field.layout_string_to_tuple",
  "pystencils.field.spatial_layout_string_to_tuple",
  "pystencils.fields",
  "pystencils.get_code_str",
  "pystencils.gpucuda",
  "pystencils.gpucuda.__file__",
  "pystencils.gpucuda.cudajit.USE_FAST_MATH",
  "pystencils.include.get_pycuda_include_path",
  "pystencils.include.get_pystencils_include_path",
  "pystencils.interpolation_astnodes.InterpolatorAccess",
  "pystencils.kernel_wrapper",
  "pystencils.kernel_wrapper.KernelWrapper",
  "pystencils.kernelparameters",
  "pystencils.kernelparameters.FieldPointerSymbol",
  "pystencils.kernelparameters.FieldShapeSymbol",
  "pystencils.kernelparameters.FieldStrideSymbol",
  "pystencils.math_optimizations.ReplaceOptim",
  "pystencils.math_optimizations.optimize_assignments",
  "pystencils.show_code",
  "pystencils.simp.sympy_cse",
  "pystencils.simp.sympy_cse_on_assignment_list",
  "pystencils.timeloop",
  "pystencils.timeloop.TimeLoop",
  "pystencils.x_vector",
  "string",
  "string.digits",
  "stringcase",
  "stringcase.pascalcase",
  "stringcase.snakecase",
  "subprocess",
  "subprocess.check_call",
  "sympy",
  "sympy.Add",
  "sympy.Expr",
  "sympy.Function",
  "sympy.Function.__new__",
  "sympy.Matrix",
  "sympy.MatrixSymbol",
  "sympy.MutableDenseMatrix",
  "sympy.Or",
  "sympy.S",
  "sympy.Symbol",
  "sympy.diff",
  "sympy.matrices.dense.matrix_multiply_elementwise",
  "sympy.solve",
  "sympy.symbols",
  "sympy.sympify",
  "sys",
  "sys.path.append",
  "sysconfig",
  "sysconfig.get_paths",
  "tensorflow",
  "tensorflow.RegisterGradient",
  "tensorflow.Variable",
  "tensorflow.compat.v1.get_default_graph",
  "tensorflow.compat.v1.py_func",
  "tensorflow.constant",
  "tensorflow.load_op_library",
  "tensorflow.placeholder",
  "tensorflow.sysconfig.get_compile_flags",
  "tensorflow.sysconfig.get_link_flags",
  "torch",
  "torch.Tensor",
  "torch.autograd.Function",
  "torch.device",
  "torch.tensor",
  "torch.utils.cpp_extension.load",
  "torch.zeros",
  "typing.Any",
  "typing.List",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "unidecode.unidecode",
  "uuid",
  "uuid.uuid4",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.17.5-py36h95a1406_0",
   "numpy/conda-forge/linux-64/numpy-1.18.4-py37h8960a57_0",
   "numpy/conda-forge/linux-64/numpy-1.19.2-py36h68c22af_1"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}