{
 "bad": [
  "BytesList",
  "CustomHook",
  "Exception",
  "Object",
  "RuntimeError",
  "ValueError",
  "__name__",
  "block",
  "depth",
  "dict",
  "enumerate",
  "float",
  "int",
  "isinstance",
  "len",
  "list",
  "max",
  "min",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.array_equal",
  "numpy.concatenate",
  "numpy.float32",
  "numpy.hstack",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.mean",
  "numpy.multiply",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random_integers",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.reshape",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.testing.assert_almost_equal",
  "numpy.tile",
  "numpy.uint8",
  "numpy.var",
  "numpy.zeros",
  "object",
  "prediction_fn",
  "print",
  "property",
  "range",
  "session_wrapper",
  "set",
  "sorted",
  "str",
  "string_to_bytes",
  "super",
  "tensorflow.contrib.framework.python.ops.add_arg_scope",
  "tensorflow.contrib.layers.batch_norm",
  "tensorflow.contrib.layers.conv2d",
  "tensorflow.contrib.training.python.training.evaluation.evaluation_loop",
  "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
  "tensorflow.python.framework.dtypes",
  "tensorflow.python.framework.dtypes.float32",
  "tensorflow.python.framework.dtypes.int32",
  "tensorflow.python.framework.dtypes.int64",
  "tensorflow.python.framework.dtypes.string",
  "tensorflow.python.framework.dtypes.uint16",
  "tensorflow.python.framework.dtypes.uint8",
  "tensorflow.python.framework.ops.Graph",
  "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
  "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
  "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
  "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
  "tensorflow.python.framework.ops.IndexedSlices",
  "tensorflow.python.framework.ops.Tensor",
  "tensorflow.python.framework.ops.add_to_collection",
  "tensorflow.python.framework.ops.control_dependencies",
  "tensorflow.python.framework.ops.get_collection",
  "tensorflow.python.framework.ops.get_default_graph",
  "tensorflow.python.framework.ops.name_scope",
  "tensorflow.python.framework.ops.reset_default_graph",
  "tensorflow.python.framework.tensor_shape.scalar",
  "tensorflow.python.ops.array_ops.concat",
  "tensorflow.python.ops.array_ops.expand_dims",
  "tensorflow.python.ops.array_ops.ones",
  "tensorflow.python.ops.array_ops.pad",
  "tensorflow.python.ops.array_ops.placeholder",
  "tensorflow.python.ops.array_ops.reshape",
  "tensorflow.python.ops.array_ops.shape",
  "tensorflow.python.ops.array_ops.slice",
  "tensorflow.python.ops.array_ops.squeeze",
  "tensorflow.python.ops.array_ops.stack",
  "tensorflow.python.ops.array_ops.transpose",
  "tensorflow.python.ops.array_ops.where",
  "tensorflow.python.ops.array_ops.zeros",
  "tensorflow.python.ops.array_ops.zeros_like",
  "tensorflow.python.ops.control_flow_ops.case",
  "tensorflow.python.ops.control_flow_ops.cond",
  "tensorflow.python.ops.control_flow_ops.group",
  "tensorflow.python.ops.image_ops.decode_image",
  "tensorflow.python.ops.image_ops.decode_jpeg",
  "tensorflow.python.ops.image_ops.decode_png",
  "tensorflow.python.ops.image_ops.encode_jpeg",
  "tensorflow.python.ops.image_ops.encode_png",
  "tensorflow.python.ops.image_ops.is_jpeg",
  "tensorflow.python.ops.image_ops.resize_bilinear",
  "tensorflow.python.ops.map_fn.map_fn",
  "tensorflow.python.ops.math_ops.equal",
  "tensorflow.python.ops.math_ops.greater_equal",
  "tensorflow.python.ops.math_ops.logical_or",
  "tensorflow.python.ops.metrics.accuracy",
  "tensorflow.python.ops.nn_ops.relu",
  "tensorflow.python.ops.parsing_ops.decode_raw",
  "tensorflow.python.platform.tf_logging.info",
  "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
  "tensorflow.python.training.saver.restore",
  "tensorflow.python.training.saver.save",
  "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
  "tf_slim.data.parallel_reader.ParallelReader",
  "tf_slim.data.parallel_reader.get_data_files",
  "tf_slim.data.parallel_reader.parallel_read",
  "tf_slim.data.parallel_reader.single_pass_read",
  "train_step_fn",
  "tuple",
  "type",
  "zip"
 ],
 "deps": [
  [
   "events-0.3-py_0",
   "events-0.4-pyhd8ed1ab_0"
  ],
  [],
  [
   "tf_slim-1.0-py_0",
   "tf_slim-1.0-py_1"
  ]
 ]
}