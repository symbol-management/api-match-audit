{
 "bad": [
  "Bio.SeqIO",
  "Bio.SeqIO.parse",
  "MoleculeShim",
  "PIL.Image",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "PIL.ImageFilter",
  "PIL.ImageFilter.MedianFilter",
  "VAE_KLDivergence",
  "_ensure_float",
  "_get_SiteEnvironments",
  "_list_or_tensor",
  "_make_pytorch_shapes_consistent",
  "_make_tf_shapes_consistent",
  "_optimize",
  "_realize_",
  "_valid_bond",
  "activation",
  "alpha",
  "apply_gradient_for_batch",
  "ast.literal_eval",
  "bce",
  "c",
  "ce_loss",
  "collections",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.abc.Iterable",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "conv",
  "copy",
  "copy.deepcopy",
  "csv",
  "csv.reader",
  "csv.writer",
  "deepchem.data.DiskDataset.create_dataset",
  "deepchem.data.DiskDataset.from_numpy",
  "deepchem.data.DiskDataset.merge",
  "deepchem.models.ANIRegression",
  "deepchem.models.TextCNNModel.build_char_dict",
  "deepchem.models.xgboost_models.XGBoostModel",
  "deepchem.molnet.load_pcba_128",
  "deepchem.molnet.load_pcba_146",
  "deepchem.molnet.load_pcba_2475",
  "deepchem.rl.__init__.Environment",
  "deepchem.rl.__init__.GymEnvironment",
  "dense",
  "dense1",
  "dense2",
  "dgl",
  "dgl.batch",
  "dgl.function",
  "dgl.function.copy_u",
  "dgl.graph",
  "dgl.mean_nodes",
  "dropout",
  "func",
  "function",
  "functools",
  "functools.reduce",
  "functools.wraps",
  "generator",
  "generator_closure",
  "get_embedder",
  "gzip",
  "gzip.open",
  "hashlib",
  "hashlib.md5",
  "heapq.heappush",
  "heapq.heappushpop",
  "importlib",
  "importlib.import_module",
  "inception_layer",
  "init",
  "inner_init",
  "input.ref",
  "inspect",
  "inspect.getfullargspec",
  "inspect.getmembers",
  "inspect.isclass",
  "io.StringIO",
  "iterate",
  "itertools",
  "itertools.chain",
  "itertools.combinations",
  "itertools.product",
  "json",
  "json.dump",
  "json.load",
  "layer",
  "logging",
  "logging.exception",
  "logging.getLogger",
  "logging.info",
  "logging.warning",
  "ls",
  "math",
  "math.ceil",
  "math.cos",
  "math.pi",
  "math.pow",
  "matminer.featurizers.composition.ElementProperty.from_preset",
  "mdtraj",
  "mdtraj.Trajectory",
  "mdtraj.geometry.compute_neighborlist",
  "mdtraj.load",
  "mordred.descriptors.__all__",
  "multiprocessing",
  "multiprocessing.Pool",
  "multiprocessing.dummy.Pool",
  "networkx.Graph",
  "networkx.algorithms.isomorphism.GraphMatcher",
  "networkx.connected_components",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.amax",
  "numpy.amin",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array2string",
  "numpy.array_equal",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.ceil",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.cross",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.diag",
  "numpy.digitize",
  "numpy.divide",
  "numpy.dot",
  "numpy.empty",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.fliplr",
  "numpy.flipud",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.float_",
  "numpy.floor",
  "numpy.full_like",
  "numpy.hstack",
  "numpy.inf",
  "numpy.insert",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.lexsort",
  "numpy.linalg.eig",
  "numpy.linalg.matrix_power",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.logical_and",
  "numpy.math.ceil",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.pad",
  "numpy.pi",
  "numpy.power",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.remainder",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.save",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.subtract",
  "numpy.sum",
  "numpy.take",
  "numpy.tanh",
  "numpy.tensordot",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.transpose",
  "numpy.triu",
  "numpy.triu_indices_from",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "operator.mul",
  "os",
  "os.environ",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.urandom",
  "pandas",
  "pandas.DataFrame",
  "pandas.concat",
  "pandas.notnull",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.to_numeric",
  "pdbfixer",
  "pdbfixer.PDBFixer",
  "penalty",
  "per_atom",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "pkg_resources",
  "pkg_resources.resource_filename",
  "place_holder",
  "platform",
  "platform.system",
  "pyGPGO.GPGO.GPGO",
  "pyGPGO.acquisition.Acquisition",
  "pyGPGO.covfunc.matern32",
  "pyGPGO.surrogates.GaussianProcess.GaussianProcess",
  "pymatgen.Composition",
  "pymatgen.Molecule",
  "pymatgen.Structure",
  "pymatgen.Structure.from_dict",
  "pymatgen.symmetry.analyzer.PointGroupAnalyzer",
  "random",
  "random.choice",
  "random.randint",
  "random.shuffle",
  "rdkit.Chem",
  "rdkit.Chem.AddHs",
  "rdkit.Chem.AllChem",
  "rdkit.Chem.AllChem.Compute2DCoords",
  "rdkit.Chem.AllChem.ComputeGasteigerCharges",
  "rdkit.Chem.AllChem.ETKDG",
  "rdkit.Chem.AllChem.ETKDGv3",
  "rdkit.Chem.AllChem.EmbedMolecule",
  "rdkit.Chem.AllChem.EmbedMultipleConfs",
  "rdkit.Chem.AllChem.GetBestRMS",
  "rdkit.Chem.AllChem.GetMACCSKeysFingerprint",
  "rdkit.Chem.AllChem.GetMorganFingerprintAsBitVect",
  "rdkit.Chem.AllChem.MMFFGetMoleculeForceField",
  "rdkit.Chem.AllChem.MMFFGetMoleculeProperties",
  "rdkit.Chem.AllChem.MMFFOptimizeMolecule",
  "rdkit.Chem.AllChem.MMFFSanitizeMolecule",
  "rdkit.Chem.AllChem.Mol",
  "rdkit.Chem.AllChem.UFFGetMoleculeForceField",
  "rdkit.Chem.Atom",
  "rdkit.Chem.ChemicalFeatures",
  "rdkit.Chem.ChemicalFeatures.BuildFeatureFactory",
  "rdkit.Chem.Descriptors",
  "rdkit.Chem.Descriptors.descList",
  "rdkit.Chem.FindAtomEnvironmentOfRadiusN",
  "rdkit.Chem.GetDistanceMatrix",
  "rdkit.Chem.GetSymmSSSR",
  "rdkit.Chem.Kekulize",
  "rdkit.Chem.Mol",
  "rdkit.Chem.MolFromMol2File",
  "rdkit.Chem.MolFromPDBBlock",
  "rdkit.Chem.MolFromPDBFile",
  "rdkit.Chem.MolFromSmarts",
  "rdkit.Chem.MolFromSmiles",
  "rdkit.Chem.MolToPDBBlock",
  "rdkit.Chem.MolToSmiles",
  "rdkit.Chem.PDBWriter",
  "rdkit.Chem.PathToSubmol",
  "rdkit.Chem.RWMol",
  "rdkit.Chem.RemoveHs",
  "rdkit.Chem.SDMolSupplier",
  "rdkit.Chem.SDWriter",
  "rdkit.Chem.SanitizeMol",
  "rdkit.Chem.Scaffolds.MurckoScaffold.MurckoScaffoldSmiles",
  "rdkit.Chem.rdChemReactions",
  "rdkit.Chem.rdChemReactions.ReactionFromSmarts",
  "rdkit.Chem.rdDepictor.Compute2DCoords",
  "rdkit.Chem.rdMolDescriptors",
  "rdkit.Chem.rdMolDescriptors.CalcExactMolWt",
  "rdkit.Chem.rdMolDescriptors.GetMorganFingerprint",
  "rdkit.Chem.rdMolDescriptors.GetMorganFingerprintAsBitVect",
  "rdkit.Chem.rdchem.BondType.AROMATIC",
  "rdkit.Chem.rdchem.BondType.DOUBLE",
  "rdkit.Chem.rdchem.BondType.SINGLE",
  "rdkit.Chem.rdchem.BondType.TRIPLE",
  "rdkit.Chem.rdchem.HybridizationType.SP",
  "rdkit.Chem.rdchem.HybridizationType.SP2",
  "rdkit.Chem.rdchem.HybridizationType.SP3",
  "rdkit.Chem.rdchem.HybridizationType.SP3D",
  "rdkit.Chem.rdchem.HybridizationType.SP3D2",
  "rdkit.Chem.rdchem.Mol",
  "rdkit.Chem.rdmolfiles",
  "rdkit.Chem.rdmolfiles.CanonicalRankAtoms",
  "rdkit.Chem.rdmolfiles.MolToPDBFile",
  "rdkit.Chem.rdmolops",
  "rdkit.Chem.rdmolops.CombineMols",
  "rdkit.Chem.rdmolops.FastFindRings",
  "rdkit.Chem.rdmolops.GetAdjacencyMatrix",
  "rdkit.Chem.rdmolops.RenumberAtoms",
  "rdkit.DataStructs",
  "rdkit.DataStructs.BulkTanimotoSimilarity",
  "rdkit.DataStructs.DiceSimilarity",
  "rdkit.ML.Cluster.Butina",
  "rdkit.ML.Cluster.Butina.ClusterData",
  "rdkit.ML.Scoring.Scoring.CalcBEDROC",
  "rdkit.RDConfig",
  "rdkit.RDConfig.RDDataDir",
  "rdkit.SimDivFilters.rdSimDivPickers.MaxMinPicker",
  "re",
  "replace_atom_types",
  "rnn_layer",
  "scipy",
  "scipy.ndimage",
  "scipy.ndimage.gaussian_filter",
  "scipy.ndimage.imread",
  "scipy.ndimage.rotate",
  "scipy.ndimage.shift",
  "scipy.signal.correlate2d",
  "scipy.spatial.ConvexHull",
  "scipy.spatial.distance.cdist",
  "scipy.spatial.distance.pdist",
  "scipy.spatial.distance.squareform",
  "scipy.spatial.transform.Rotation",
  "scipy.spatial.transform.Rotation.align_vectors",
  "scipy.stats.pearsonr",
  "shard_generator",
  "shutil",
  "shutil.copytree",
  "shutil.move",
  "shutil.rmtree",
  "simtk",
  "simtk.openmm.app.PDBFile",
  "simtk.openmm.app.PDBFile.writeFile",
  "sklearn",
  "sklearn.base.BaseEstimator",
  "sklearn.cross_decomposition.PLSRegression",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.gaussian_process.GaussianProcessRegressor",
  "sklearn.kernel_ridge.KernelRidge",
  "sklearn.linear_model.BayesianRidge",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.auc",
  "sklearn.metrics.balanced_accuracy_score",
  "sklearn.metrics.cohen_kappa_score",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.jaccard_score",
  "sklearn.metrics.matthews_corrcoef",
  "sklearn.metrics.mean_absolute_error",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.precision_recall_curve",
  "sklearn.metrics.precision_score",
  "sklearn.metrics.r2_score",
  "sklearn.metrics.recall_score",
  "sklearn.metrics.roc_auc_score",
  "sklearn.model_selection.train_test_split",
  "sklearn.svm.SVC",
  "string",
  "string.ascii_letters",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.check_output",
  "sys",
  "sys.version_info",
  "t",
  "t.__class__.__name__",
  "tarfile",
  "tarfile.open",
  "tempfile",
  "tempfile.TemporaryDirectory",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tensorflow",
  "tensorflow.GradientTape",
  "tensorflow.Graph",
  "tensorflow.Tensor",
  "tensorflow.TensorShape",
  "tensorflow.Variable",
  "tensorflow.abs",
  "tensorflow.acos",
  "tensorflow.as_dtype",
  "tensorflow.boolean_mask",
  "tensorflow.cast",
  "tensorflow.clip_by_value",
  "tensorflow.compat.v1.train.linear_cosine_decay",
  "tensorflow.concat",
  "tensorflow.constant",
  "tensorflow.constant_initializer",
  "tensorflow.cos",
  "tensorflow.data.Dataset.from_generator",
  "tensorflow.dynamic_partition",
  "tensorflow.equal",
  "tensorflow.exp",
  "tensorflow.expand_dims",
  "tensorflow.eye",
  "tensorflow.feature_column.input_layer",
  "tensorflow.fill",
  "tensorflow.float32",
  "tensorflow.float64",
  "tensorflow.function",
  "tensorflow.gather",
  "tensorflow.gather_nd",
  "tensorflow.int32",
  "tensorflow.is_tensor",
  "tensorflow.keras.Input",
  "tensorflow.keras.Model",
  "tensorflow.keras.activations",
  "tensorflow.keras.backend",
  "tensorflow.keras.backend.concatenate",
  "tensorflow.keras.backend.dot",
  "tensorflow.keras.backend.function",
  "tensorflow.keras.backend.zeros",
  "tensorflow.keras.initializers",
  "tensorflow.keras.initializers.RandomNormal",
  "tensorflow.keras.initializers.TruncatedNormal",
  "tensorflow.keras.initializers.VarianceScaling",
  "tensorflow.keras.initializers.get",
  "tensorflow.keras.layers",
  "tensorflow.keras.layers.Activation",
  "tensorflow.keras.layers.Add",
  "tensorflow.keras.layers.BatchNormalization",
  "tensorflow.keras.layers.Bidirectional",
  "tensorflow.keras.layers.Concatenate",
  "tensorflow.keras.layers.Conv1D",
  "tensorflow.keras.layers.Conv2D",
  "tensorflow.keras.layers.Dense",
  "tensorflow.keras.layers.Dropout",
  "tensorflow.keras.layers.Embedding",
  "tensorflow.keras.layers.Flatten",
  "tensorflow.keras.layers.GRU",
  "tensorflow.keras.layers.GlobalAveragePooling2D",
  "tensorflow.keras.layers.Input",
  "tensorflow.keras.layers.LSTM",
  "tensorflow.keras.layers.Lambda",
  "tensorflow.keras.layers.Layer",
  "tensorflow.keras.layers.MaxPool2D",
  "tensorflow.keras.layers.Multiply",
  "tensorflow.keras.layers.ReLU",
  "tensorflow.keras.layers.Reshape",
  "tensorflow.keras.layers.Softmax",
  "tensorflow.keras.losses.binary_crossentropy",
  "tensorflow.keras.losses.categorical_crossentropy",
  "tensorflow.keras.losses.hinge",
  "tensorflow.keras.models.Model",
  "tensorflow.keras.optimizers.Adagrad",
  "tensorflow.keras.optimizers.Adam",
  "tensorflow.keras.optimizers.RMSprop",
  "tensorflow.keras.optimizers.SGD",
  "tensorflow.keras.optimizers.schedules.ExponentialDecay",
  "tensorflow.keras.optimizers.schedules.PolynomialDecay",
  "tensorflow.keras.preprocessing.image.ImageDataGenerator",
  "tensorflow.less_equal",
  "tensorflow.math.divide",
  "tensorflow.math.l2_normalize",
  "tensorflow.math.log",
  "tensorflow.math.segment_sum",
  "tensorflow.math.squared_difference",
  "tensorflow.math.unsorted_segment_max",
  "tensorflow.math.unsorted_segment_sum",
  "tensorflow.matmul",
  "tensorflow.maximum",
  "tensorflow.meshgrid",
  "tensorflow.minimum",
  "tensorflow.multiply",
  "tensorflow.nn.batch_normalization",
  "tensorflow.nn.bias_add",
  "tensorflow.nn.dropout",
  "tensorflow.nn.embedding_lookup",
  "tensorflow.nn.l2_loss",
  "tensorflow.nn.moments",
  "tensorflow.nn.relu",
  "tensorflow.nn.sigmoid",
  "tensorflow.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.nn.softmax",
  "tensorflow.nn.softmax_cross_entropy_with_logits",
  "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.nn.tanh",
  "tensorflow.nn.top_k",
  "tensorflow.not_equal",
  "tensorflow.one_hot",
  "tensorflow.ones_like",
  "tensorflow.pad",
  "tensorflow.pow",
  "tensorflow.python.ops.array_ops",
  "tensorflow.python.ops.array_ops.shape",
  "tensorflow.random.normal",
  "tensorflow.random.truncated_normal",
  "tensorflow.range",
  "tensorflow.reduce_max",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.reverse",
  "tensorflow.round",
  "tensorflow.shape",
  "tensorflow.sigmoid",
  "tensorflow.sign",
  "tensorflow.slice",
  "tensorflow.split",
  "tensorflow.sqrt",
  "tensorflow.square",
  "tensorflow.squeeze",
  "tensorflow.stack",
  "tensorflow.subtract",
  "tensorflow.summary.scalar",
  "tensorflow.tensor_scatter_nd_update",
  "tensorflow.tile",
  "tensorflow.train.Checkpoint",
  "tensorflow.train.CheckpointManager",
  "tensorflow.train.get_checkpoint_state",
  "tensorflow.train.latest_checkpoint",
  "tensorflow.transpose",
  "tensorflow.unique",
  "tensorflow.where",
  "tensorflow.zeros",
  "tensorflow.zeros_like",
  "tensorflow_probability.distributions.Normal",
  "threading",
  "time",
  "time.time",
  "to_one_hot",
  "torch",
  "torch.Tensor",
  "torch.as_tensor",
  "torch.cat",
  "torch.clamp",
  "torch.from_numpy",
  "torch.load",
  "torch.log",
  "torch.mean",
  "torch.nn",
  "torch.nn.BCELoss",
  "torch.nn.BCEWithLogitsLoss",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.L1Loss",
  "torch.nn.Linear",
  "torch.nn.LogSoftmax",
  "torch.nn.MSELoss",
  "torch.nn.Module",
  "torch.nn.Parameter",
  "torch.nn.functional",
  "torch.nn.functional.softmax",
  "torch.nn.functional.softplus",
  "torch.nn.init.xavier_uniform_",
  "torch.optim.Adagrad",
  "torch.optim.Adam",
  "torch.optim.RMSprop",
  "torch.optim.SGD",
  "torch.optim.lr_scheduler.ExponentialLR",
  "torch.optim.lr_scheduler.LambdaLR",
  "torch.optim.lr_scheduler.StepLR",
  "torch.reshape",
  "torch.save",
  "torch.sigmoid",
  "torch.square",
  "torch.squeeze",
  "torch.stack",
  "torch.sum",
  "torch.unsqueeze",
  "torch.utils.data.IterableDataset",
  "torch.utils.data.get_worker_info",
  "torch.utils.tensorboard",
  "torch.zeros",
  "transform_generator",
  "typing.Any",
  "typing.Callable",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.Generator",
  "typing.IO",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "unittest",
  "unittest.TestCase",
  "urllib.request.urlretrieve",
  "vars.append",
  "wandb.api.api_key",
  "warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xgboost",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor",
  "zipfile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "Bio": [],
  "MoleculeShim": [],
  "PIL": [],
  "VAE_KLDivergence": [],
  "_ensure_float": [],
  "_get_SiteEnvironments": [],
  "_list_or_tensor": [],
  "_make_pytorch_shapes_consistent": [],
  "_make_tf_shapes_consistent": [],
  "_optimize": [],
  "_realize_": [],
  "_valid_bond": [],
  "activation": [],
  "alpha": [],
  "apply_gradient_for_batch": [],
  "ast": [],
  "bce": [],
  "c": [],
  "ce_loss": [],
  "collections": [],
  "conv": [],
  "copy": [],
  "csv": [],
  "deepchem": [],
  "dense": [],
  "dense1": [],
  "dense2": [],
  "dgl": [],
  "dropout": [],
  "flaky": [
   "flaky/conda-forge/noarch/flaky-3.5.0-py_0"
  ],
  "func": [],
  "function": [],
  "functools": [],
  "generator": [],
  "generator_closure": [],
  "get_embedder": [],
  "gzip": [],
  "hashlib": [],
  "heapq": [],
  "importlib": [],
  "inception_layer": [],
  "init": [],
  "inner_init": [],
  "input": [],
  "inspect": [],
  "io": [],
  "iterate": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-0.14.0-py_0"
  ],
  "json": [],
  "layer": [],
  "logging": [],
  "ls": [],
  "math": [],
  "matminer": [
   "matminer/conda-forge/noarch/matminer-0.7.2-pyhd8ed1ab_0"
  ],
  "mdtraj": [],
  "mordred": [
   "mordred/conda-forge/noarch/mordred-1.2.0-py_0"
  ],
  "multiprocessing": [],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "numpy": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "pdbfixer": [],
  "penalty": [],
  "per_atom": [],
  "pickle": [],
  "pkg_resources": [],
  "place_holder": [],
  "platform": [],
  "pubchempy": [
   "pubchempy/conda-forge/noarch/pubchempy-1.0.4-py_0"
  ],
  "pyGPGO": [],
  "pymatgen": [],
  "random": [],
  "rdkit": [],
  "re": [],
  "replace_atom_types": [],
  "rnn_layer": [],
  "scipy": [],
  "shard_generator": [],
  "shutil": [],
  "simdna": [
   "simdna/conda-forge/noarch/simdna-0.4.3.2-py_0"
  ],
  "simtk": [],
  "sklearn": [],
  "string": [],
  "subprocess": [],
  "sys": [],
  "t": [],
  "tarfile": [],
  "tempfile": [],
  "tensorflow": [],
  "tensorflow_probability": [
   "tensorflow-probability/conda-forge/noarch/tensorflow-probability-0.8.0-py_0"
  ],
  "threading": [],
  "time": [],
  "to_one_hot": [],
  "torch": [],
  "torch_geometric": [
   "pytorch_geometric/conda-forge/noarch/pytorch_geometric-1.6.0-pyh9f0ad1d_0"
  ],
  "transform_generator": [],
  "transformers": [
   "transformers/conda-forge/noarch/transformers-4.4.2-pyhd8ed1ab_0"
  ],
  "typing": [],
  "unittest": [],
  "urllib": [],
  "vars": [],
  "wandb": [
   "wandb/conda-forge/noarch/wandb-0.10.8-pyh9f0ad1d_0"
  ],
  "warnings": [],
  "xgboost": [],
  "zipfile": []
 }
}