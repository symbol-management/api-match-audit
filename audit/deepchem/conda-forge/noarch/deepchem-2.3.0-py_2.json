{
 "bad": [
  "AtomShim",
  "Bio.SeqIO.parse",
  "ExampleWGAN",
  "Exception.__init__",
  "MoleculeShim",
  "PIL.Image",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "UncertaintyModel",
  "VarModel",
  "_realize_",
  "activation",
  "activation_fn",
  "add_layers_to_list",
  "alpha",
  "atomnet",
  "attn_embedding_layer",
  "build_layers",
  "c",
  "collections.Counter",
  "collections.Sequence",
  "copy.deepcopy",
  "count_features",
  "create_tensors",
  "deepchem.data.DiskDataset.create_dataset",
  "deepchem.data.DiskDataset.from_numpy",
  "deepchem.data.DiskDataset.merge",
  "deepchem.data.EpisodeGenerator",
  "deepchem.data.ImageLoader.load_img",
  "deepchem.data.NumpyDataset.from_DiskDataset",
  "deepchem.data.NumpyDataset.from_json",
  "deepchem.data.SupportGenerator",
  "deepchem.data.dataset_difference",
  "deepchem.data.get_task_dataset_minus_support",
  "deepchem.data.get_task_support",
  "deepchem.data.get_task_test",
  "deepchem.data.remove_dead_examples",
  "deepchem.models.Model.get_model_filename",
  "deepchem.models.SingletaskToMultitask._to_singletask",
  "deepchem.models.TextCNNModel.build_char_dict",
  "deepchem.models.losses.BinaryCrossEntropy",
  "deepchem.models.losses.CategoricalCrossEntropy",
  "deepchem.models.losses.HingeLoss",
  "deepchem.models.losses.L2Loss",
  "deepchem.models.losses.Loss",
  "deepchem.models.losses.SigmoidCrossEntropy",
  "deepchem.models.losses.SoftmaxCrossEntropy",
  "deepchem.models.losses.SparseSoftmaxCrossEntropy",
  "deepchem.models.tensorgraph.layers.ANIFeat",
  "deepchem.models.tensorgraph.layers.Add",
  "deepchem.models.tensorgraph.layers.AlphaShareLayer",
  "deepchem.models.tensorgraph.layers.AtomicConvolution",
  "deepchem.models.tensorgraph.layers.AttnLSTMEmbedding",
  "deepchem.models.tensorgraph.layers.AvgPool2D",
  "deepchem.models.tensorgraph.layers.BatchNorm",
  "deepchem.models.tensorgraph.layers.BetaShare",
  "deepchem.models.tensorgraph.layers.Cast",
  "deepchem.models.tensorgraph.layers.CombineMeanStd",
  "deepchem.models.tensorgraph.layers.Concat",
  "deepchem.models.tensorgraph.layers.Constant",
  "deepchem.models.tensorgraph.layers.Conv1D",
  "deepchem.models.tensorgraph.layers.Conv2D",
  "deepchem.models.tensorgraph.layers.Conv2DTranspose",
  "deepchem.models.tensorgraph.layers.Conv3D",
  "deepchem.models.tensorgraph.layers.Conv3DTranspose",
  "deepchem.models.tensorgraph.layers.Dense",
  "deepchem.models.tensorgraph.layers.Divide",
  "deepchem.models.tensorgraph.layers.Dropout",
  "deepchem.models.tensorgraph.layers.Exp",
  "deepchem.models.tensorgraph.layers.Feature",
  "deepchem.models.tensorgraph.layers.Flatten",
  "deepchem.models.tensorgraph.layers.GRU",
  "deepchem.models.tensorgraph.layers.Gather",
  "deepchem.models.tensorgraph.layers.GraphCNN",
  "deepchem.models.tensorgraph.layers.GraphConv",
  "deepchem.models.tensorgraph.layers.GraphEmbedPoolLayer",
  "deepchem.models.tensorgraph.layers.GraphGather",
  "deepchem.models.tensorgraph.layers.GraphPool",
  "deepchem.models.tensorgraph.layers.Highway",
  "deepchem.models.tensorgraph.layers.HingeLoss",
  "deepchem.models.tensorgraph.layers.Input",
  "deepchem.models.tensorgraph.layers.InputFifoQueue",
  "deepchem.models.tensorgraph.layers.InteratomicL2Distances",
  "deepchem.models.tensorgraph.layers.IterRefLSTMEmbedding",
  "deepchem.models.tensorgraph.layers.KerasLayer",
  "deepchem.models.tensorgraph.layers.L1Loss",
  "deepchem.models.tensorgraph.layers.L2Loss",
  "deepchem.models.tensorgraph.layers.LSTM",
  "deepchem.models.tensorgraph.layers.LSTMStep",
  "deepchem.models.tensorgraph.layers.Label",
  "deepchem.models.tensorgraph.layers.Layer",
  "deepchem.models.tensorgraph.layers.LayerSplitter",
  "deepchem.models.tensorgraph.layers.Log",
  "deepchem.models.tensorgraph.layers.MaxPool1D",
  "deepchem.models.tensorgraph.layers.MaxPool2D",
  "deepchem.models.tensorgraph.layers.MaxPool3D",
  "deepchem.models.tensorgraph.layers.Multiply",
  "deepchem.models.tensorgraph.layers.NeighborList",
  "deepchem.models.tensorgraph.layers.ReLU",
  "deepchem.models.tensorgraph.layers.ReduceMax",
  "deepchem.models.tensorgraph.layers.ReduceMean",
  "deepchem.models.tensorgraph.layers.ReduceSquareDifference",
  "deepchem.models.tensorgraph.layers.ReduceSum",
  "deepchem.models.tensorgraph.layers.Repeat",
  "deepchem.models.tensorgraph.layers.Reshape",
  "deepchem.models.tensorgraph.layers.Sigmoid",
  "deepchem.models.tensorgraph.layers.SigmoidCrossEntropy",
  "deepchem.models.tensorgraph.layers.SluiceLoss",
  "deepchem.models.tensorgraph.layers.SoftMax",
  "deepchem.models.tensorgraph.layers.SoftMaxCrossEntropy",
  "deepchem.models.tensorgraph.layers.SparseSoftMaxCrossEntropy",
  "deepchem.models.tensorgraph.layers.Squeeze",
  "deepchem.models.tensorgraph.layers.Stack",
  "deepchem.models.tensorgraph.layers.StopGradient",
  "deepchem.models.tensorgraph.layers.TensorWrapper",
  "deepchem.models.tensorgraph.layers.TimeSeriesDense",
  "deepchem.models.tensorgraph.layers.ToFloat",
  "deepchem.models.tensorgraph.layers.Transpose",
  "deepchem.models.tensorgraph.layers.Variable",
  "deepchem.models.tensorgraph.layers.VinaFreeEnergy",
  "deepchem.models.tensorgraph.layers.WeightDecay",
  "deepchem.models.tensorgraph.layers.WeightedError",
  "deepchem.models.tensorgraph.layers.WeightedLinearCombo",
  "deepchem.models.tensorgraph.layers.Weights",
  "deepchem.models.tensorgraph.layers.convert_to_layers",
  "deepchem.models.tensorgraph.model_ops.add_bias",
  "deepchem.models.tensorgraph.model_ops.cast_to_floatx",
  "deepchem.models.tensorgraph.model_ops.concatenate",
  "deepchem.models.tensorgraph.model_ops.dot",
  "deepchem.models.tensorgraph.model_ops.elu",
  "deepchem.models.tensorgraph.model_ops.epsilon",
  "deepchem.models.tensorgraph.model_ops.fully_connected_layer",
  "deepchem.models.tensorgraph.model_ops.get_ndim",
  "deepchem.models.tensorgraph.model_ops.hard_sigmoid",
  "deepchem.models.tensorgraph.model_ops.max",
  "deepchem.models.tensorgraph.model_ops.multitask_logits",
  "deepchem.models.tensorgraph.model_ops.random_normal_variable",
  "deepchem.models.tensorgraph.model_ops.random_uniform_variable",
  "deepchem.models.tensorgraph.model_ops.relu",
  "deepchem.models.tensorgraph.model_ops.selu",
  "deepchem.models.tensorgraph.model_ops.softmax_N",
  "deepchem.models.tensorgraph.model_ops.sqrt",
  "deepchem.models.tensorgraph.model_ops.sum",
  "deepchem.models.tensorgraph.model_ops.zeros",
  "deepchem.splits.SpecifiedIndexSplitter",
  "deepchem.utils.save.encode_bio_sequence",
  "deepchem.utils.save.load_csv_files",
  "deepchem.utils.save.load_data",
  "deepchem.utils.save.load_dataset_from_disk",
  "deepchem.utils.save.load_from_disk",
  "deepchem.utils.save.load_sdf_files",
  "deepchem.utils.save.log",
  "deepchem.utils.save.save_dataset_to_disk",
  "deepchem.utils.save.save_metadata",
  "deepchem.utils.save.save_to_disk",
  "deepchem.utils.save.seq_one_hot_encode",
  "dense",
  "dense1",
  "dense2",
  "edge_network",
  "f",
  "find_features",
  "flaky.flaky",
  "fn",
  "function",
  "functools.reduce",
  "generator",
  "generator_closure",
  "get_embedder",
  "get_image",
  "get_voxels",
  "gru",
  "hash_function",
  "heapq.heappush",
  "heapq.heappushpop",
  "inception_layer",
  "init",
  "init_fn",
  "inner_activation",
  "inner_init",
  "input_fn",
  "io.StringIO",
  "iter_ref_embedding_layer",
  "iterate",
  "jacobian",
  "layer",
  "layer.max_degree",
  "layer.min_degree",
  "layer.trainable_variables",
  "layer2",
  "loss",
  "lstm",
  "mdtraj.load",
  "multiprocessing.dummy.Pool",
  "networkx.Graph",
  "networkx.connected_components",
  "nose.tools.assert_equal",
  "nose.tools.assert_equals",
  "nose.tools.assert_true",
  "nose.tools.nottest",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.amax",
  "numpy.amin",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.ceil",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.cross",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.diag",
  "numpy.divide",
  "numpy.dot",
  "numpy.dtype",
  "numpy.empty",
  "numpy.equal",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.fliplr",
  "numpy.flipud",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.float_",
  "numpy.floor",
  "numpy.full_like",
  "numpy.greater",
  "numpy.hstack",
  "numpy.identity",
  "numpy.inf",
  "numpy.insert",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.lexsort",
  "numpy.linalg.eig",
  "numpy.linalg.norm",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.log",
  "numpy.logical_and",
  "numpy.math.ceil",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.newaxis.flatten",
  "numpy.nonzero",
  "numpy.not_equal",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.pad",
  "numpy.pi",
  "numpy.power",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.random.binomial",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.remainder",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.sum",
  "numpy.tanh",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.transpose",
  "numpy.triu_indices",
  "numpy.triu_indices_from",
  "numpy.true_divide",
  "numpy.uint8",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "operator.mul",
  "place_holder",
  "pyGPGO.GPGO.GPGO",
  "pyGPGO.acquisition.Acquisition",
  "pyGPGO.covfunc.matern32",
  "pyGPGO.surrogates.GaussianProcess.GaussianProcess",
  "randomizer",
  "rdkit.Chem.AddHs",
  "rdkit.Chem.AllChem.Compute2DCoords",
  "rdkit.Chem.AllChem.ComputeGasteigerCharges",
  "rdkit.Chem.AllChem.EmbedMultipleConfs",
  "rdkit.Chem.AllChem.GetBestRMS",
  "rdkit.Chem.AllChem.GetMorganFingerprintAsBitVect",
  "rdkit.Chem.AllChem.MMFFGetMoleculeForceField",
  "rdkit.Chem.AllChem.MMFFGetMoleculeProperties",
  "rdkit.Chem.AllChem.MMFFSanitizeMolecule",
  "rdkit.Chem.AllChem.Mol",
  "rdkit.Chem.AllChem.UFFGetMoleculeForceField",
  "rdkit.Chem.Descriptors.descList",
  "rdkit.Chem.FindAtomEnvironmentOfRadiusN",
  "rdkit.Chem.Fingerprints.FingerprintMols.FingerprintMol",
  "rdkit.Chem.GetSymmSSSR",
  "rdkit.Chem.Mol",
  "rdkit.Chem.MolFromMol2File",
  "rdkit.Chem.MolFromPDBBlock",
  "rdkit.Chem.MolFromPDBFile",
  "rdkit.Chem.MolFromSmarts",
  "rdkit.Chem.MolFromSmiles",
  "rdkit.Chem.MolToPDBBlock",
  "rdkit.Chem.MolToSmiles",
  "rdkit.Chem.PDBWriter",
  "rdkit.Chem.PathToSubmol",
  "rdkit.Chem.RemoveHs",
  "rdkit.Chem.SDMolSupplier",
  "rdkit.Chem.SDWriter",
  "rdkit.Chem.SanitizeMol",
  "rdkit.Chem.rdChemReactions.ReactionFromSmarts",
  "rdkit.Chem.rdMolDescriptors.CalcExactMolWt",
  "rdkit.Chem.rdMolDescriptors.GetMorganFingerprint",
  "rdkit.Chem.rdMolDescriptors.GetMorganFingerprintAsBitVect",
  "rdkit.Chem.rdchem.BondType.AROMATIC",
  "rdkit.Chem.rdchem.BondType.DOUBLE",
  "rdkit.Chem.rdchem.BondType.SINGLE",
  "rdkit.Chem.rdchem.BondType.TRIPLE",
  "rdkit.Chem.rdchem.HybridizationType.SP",
  "rdkit.Chem.rdchem.HybridizationType.SP2",
  "rdkit.Chem.rdchem.HybridizationType.SP3",
  "rdkit.Chem.rdchem.HybridizationType.SP3D",
  "rdkit.Chem.rdchem.HybridizationType.SP3D2",
  "rdkit.Chem.rdmolfiles.CanonicalRankAtoms",
  "rdkit.Chem.rdmolops.CombineMols",
  "rdkit.Chem.rdmolops.FastFindRings",
  "rdkit.Chem.rdmolops.RenumberAtoms",
  "rdkit.DataStructs.BulkTanimotoSimilarity",
  "rdkit.DataStructs.DiceSimilarity",
  "rdkit.SimDivFilters.rdSimDivPickers.MaxMinPicker",
  "readout_layer",
  "replace_atom_types",
  "res",
  "rnn_layer",
  "run_layers",
  "scipy.misc.face",
  "scipy.signal.correlate2d",
  "scipy.spatial.ConvexHull",
  "scipy.stats.pearsonr",
  "shard_generator",
  "sigmoid",
  "simdna.synthetic.EmbedInABackground",
  "simdna.synthetic.EmbeddableEmbedder",
  "simdna.synthetic.GenerateSequenceNTimes",
  "simdna.synthetic.InsideCentralBp",
  "simdna.synthetic.IsInTraceLabelGenerator",
  "simdna.synthetic.LoadedEncodeMotifs",
  "simdna.synthetic.PairEmbeddableGenerator",
  "simdna.synthetic.PwmSamplerFromLoadedMotifs",
  "simdna.synthetic.RandomSubsetOfEmbedders",
  "simdna.synthetic.RepeatedEmbedder",
  "simdna.synthetic.ReverseComplementWrapper",
  "simdna.synthetic.SubstringEmbedder",
  "simdna.synthetic.UniformIntegerGenerator",
  "simdna.synthetic.UniformPositionGenerator",
  "simdna.synthetic.ZeroOrderBackgroundGenerator",
  "six.integer_types",
  "sklearn.cross_decomposition.PLSRegression",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.gaussian_process.GaussianProcessRegressor",
  "sklearn.linear_model.BayesianRidge",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.metrics.auc",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.jaccard_similarity_score",
  "sklearn.metrics.mean_absolute_error",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.precision_recall_curve",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.train_test_split",
  "subprocess.call",
  "tensorflow.GraphKeys.SUMMARIES",
  "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
  "tensorflow.contrib.distributions.Normal",
  "tensorflow.contrib.eager.implicit_value_and_gradients",
  "tensorflow.contrib.opt.PowerSignOptimizer",
  "tensorflow.data.Dataset.from_generator",
  "tensorflow.estimator.ModeKeys.EVAL",
  "tensorflow.estimator.ModeKeys.PREDICT",
  "tensorflow.estimator.ModeKeys.TRAIN",
  "tensorflow.math.divide",
  "tensorflow.python.ops.array_ops.shape",
  "tensorflow.python.platform.googletest.TestCase",
  "tensorflow.train.CheckpointManager",
  "tg",
  "tg.add_output",
  "tg.get_layer_variable_values",
  "to_final_id",
  "transform_generator",
  "unittest.TestCase",
  "urllib.urlretrieve",
  "val_grad_fn",
  "vars.append",
  "vars.difference",
  "warnings.warn",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor"
 ],
 "deps": [
  [],
  [
   "nose-1.3.7-py27_1",
   "nose-1.3.7-py27h8c360ce_1004",
   "nose-1.3.7-py35_0",
   "nose-1.3.7-py35_1",
   "nose-1.3.7-py35_2",
   "nose-1.3.7-py_1006"
  ],
  [
   "pandas-0.25.2-py37hb3f55d8_0",
   "pandas-0.25.3-py38hb3f55d8_0",
   "pandas-1.0.0-py37hb3f55d8_0",
   "pandas-1.0.1-py38hb3f55d8_0",
   "pandas-1.0.2-py36h830a2c2_0",
   "pandas-1.0.4-py36h01e7d0c_0",
   "pandas-1.0.5-py37h0da4684_0",
   "pandas-1.0.5-py38hcb8c335_0",
   "pandas-1.1.0-py37h3340039_0",
   "pandas-1.1.1-py38h950e882_0",
   "pandas-1.1.2-py38h950e882_0",
   "pandas-1.1.3-py36h01e7d0c_1",
   "pandas-1.1.3-py36h01e7d0c_2",
   "pandas-1.1.3-py36h7c3b610_2",
   "pandas-1.1.3-py36h831f99a_0",
   "pandas-1.1.3-py39h1670d02_2",
   "pandas-1.1.3-py39hd56b5f2_2",
   "pandas-1.1.5-py36hcf32051_0",
   "pandas-1.1.5-py37hdc94413_0",
   "pandas-1.1.5-py38h51da96c_0",
   "pandas-1.2.0-py37hdc94413_0",
   "pandas-1.2.0-py37hdc94413_1",
   "pandas-1.2.0-py39hde0f152_1",
   "pandas-1.2.1-py38h51da96c_0",
   "pandas-1.2.2-py37h40f5888_0",
   "pandas-1.2.2-py37hdc94413_0"
  ],
  [
   "rdkit-2018.03.1-py27h4ce040e_0",
   "rdkit-2018.03.3-py27hf2429ea_0",
   "rdkit-2018.03.3-py35hf2429ea_0",
   "rdkit-2018.09.1-py27h270f4b7_1001",
   "rdkit-2018.09.1-py36h4a7b924_1000",
   "rdkit-2018.09.1-py36h548bfbe_1",
   "rdkit-2018.09.1-py37h0c1dfbd_0",
   "rdkit-2018.09.2-py27h270f4b7_0",
   "rdkit-2019.03.4-py37hb31dc5d_0",
   "rdkit-2019.09.1-py36hb31dc5d_0",
   "rdkit-2019.09.2-py36hb31dc5d_0",
   "rdkit-2019.09.3-py37he9dd633_1",
   "rdkit-2019.09.3-py38he9dd633_1",
   "rdkit-2020.03.1-py38h10dae1c_3",
   "rdkit-2020.03.3-py36h866857e_0",
   "rdkit-2020.03.5-py37h3f38cc2_0",
   "rdkit-2020.03.5-py38h3082ae4_0",
   "rdkit-2020.03.6-py37h0c252aa_0",
   "rdkit-2020.03.6-py37h53b44e5_1",
   "rdkit-2020.03.6-py38hcd8ae3c_0",
   "rdkit-2020.09.2-py37h8f71f70_0",
   "rdkit-2020.09.2-py39h65247da_0",
   "rdkit-2020.09.3-py36hb039eae_0",
   "rdkit-2020.09.3-py39h045bdbb_0",
   "rdkit-2020.09.4-py36hb3b0795_0",
   "rdkit-Release_2017_09-py35_0",
   "rdkit-Release_2017_09-py36_0",
   "rdkit-Release_2017_09_3-py27_3",
   "rdkit-Release_2017_09_3-py35_1"
  ],
  [
   "scipy-0.17.1-np110py27_blas_openblas_202",
   "scipy-0.17.1-np110py27_blas_openblas_203",
   "scipy-0.17.1-np110py34_blas_openblas_201",
   "scipy-0.17.1-np110py34_blas_openblas_202",
   "scipy-0.17.1-np110py34_blas_openblas_204",
   "scipy-0.17.1-np110py34_blas_openblas_205",
   "scipy-0.17.1-np110py35_blas_openblas_200",
   "scipy-0.17.1-np111py34_blas_openblas_200",
   "scipy-0.17.1-np111py35_blas_openblas_201",
   "scipy-0.17.1-np111py35_blas_openblas_202",
   "scipy-0.17.1-np111py35_blas_openblas_203",
   "scipy-0.18.0-np110py27_blas_openblas_200",
   "scipy-0.18.0-np110py34_blas_openblas_202",
   "scipy-0.18.0-np110py35_blas_openblas_201",
   "scipy-0.18.1-np110py27_blas_openblas_200",
   "scipy-0.18.1-np110py27_blas_openblas_201",
   "scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy-0.18.1-np112py35_blas_openblas_201",
   "scipy-0.19.0-np111py35_blas_openblas_200",
   "scipy-0.19.0-np112py36_blas_openblas_200",
   "scipy-0.19.0-np113py27_blas_openblas_202",
   "scipy-0.19.0-np113py35_blas_openblas_202",
   "scipy-0.19.1-np111py27_blas_openblas_200",
   "scipy-0.19.1-np113py27_blas_openblas_200",
   "scipy-0.19.1-py35_blas_openblas_201",
   "scipy-0.19.1-py36_blas_openblas_202"
  ],
  [
   "simdna-0.4.2-py_0",
   "simdna-0.4.3.2-py_0",
   "simdna-0.4.3.2-py_1"
  ],
  [
   "scikit-learn-0.17.1-np110py27_blas_openblas_201",
   "scikit-learn-0.17.1-np110py27_blas_openblas_202",
   "scikit-learn-0.17.1-np111py27_blas_openblas_200",
   "scikit-learn-0.17.1-np111py34_blas_openblas_201",
   "scikit-learn-0.17.1-np111py35_blas_openblas_201",
   "scikit-learn-0.18-np110py27_blas_openblas_202",
   "scikit-learn-0.18-np111py27_blas_openblas_203",
   "scikit-learn-0.18-np111py36_blas_openblas_203",
   "scikit-learn-0.18-np112py27_blas_openblas_204",
   "scikit-learn-0.18.1-np112py36_blas_openblas_200",
   "scikit-learn-0.18.2-np112py36_blas_openblas_200",
   "scikit-learn-0.18.2-np113py27_blas_openblas_200",
   "scikit-learn-0.18.2-np113py35_blas_openblas_200",
   "scikit-learn-0.19.0-py36_blas_openblas_201",
   "scikit-learn-0.19.1-py36_blas_openblas_200",
   "scikit-learn-0.20.0-py36_blas_openblasha84fab4_201",
   "scikit-learn-0.20.2-py27_blas_openblashebff5e3_1400",
   "scikit-learn-0.20.3-py27_blas_openblashebff5e3_0",
   "scikit-learn-0.21.2-py36h627018c_0",
   "scikit-learn-0.21.3-py37hcdab131_0",
   "scikit-learn-0.22-py38hcdab131_0",
   "scikit-learn-0.22-py38hcdab131_1",
   "scikit-learn-0.22.1-py37hcdab131_0",
   "scikit-learn-0.22.1-py37hcdab131_1",
   "scikit-learn-0.22.1-py38hcdab131_0",
   "scikit-learn-0.22.2.post1-py36hcdab131_0",
   "scikit-learn-0.23.0-py37h8a51577_0",
   "scikit-learn-0.23.2-py36h9e5ed8f_1",
   "scikit-learn-0.23.2-py36hb6e6923_2",
   "scikit-learn-0.23.2-py38h519568a_1",
   "scikit-learn-0.24.0-py36he4fde30_0",
   "scikit-learn-0.24.1-py36he4fde30_0"
  ],
  []
 ]
}