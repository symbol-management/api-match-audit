{
 "bad": [
  "DummyCallback",
  "MyDataset",
  "MyNet",
  "apply_",
  "batch_sizes",
  "cb",
  "cb.initialize",
  "cb.set_params",
  "collections.abc.Sequence",
  "contextlib.contextmanager",
  "contextlib.suppress",
  "cv",
  "cv_cls",
  "dataset",
  "decorator",
  "enum.Enum",
  "fnmatch.fnmatch",
  "func",
  "functools.partial",
  "get_ipython",
  "iterator",
  "itertools.chain",
  "itertools.cycle",
  "json.dump",
  "json.load",
  "mock",
  "mock.call_args_list",
  "mock.call_count",
  "module",
  "module.to",
  "numbers.Number",
  "numpy.allclose",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.average",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.eye",
  "numpy.float32",
  "numpy.floor",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int64",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isscalar",
  "numpy.mean",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.newaxis.astype",
  "numpy.ones",
  "numpy.pi",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.repeat",
  "numpy.s_",
  "numpy.zeros",
  "opt",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pathlib.Path",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pkg_resources.get_distribution",
  "pkg_resources.parse_version",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "re.compile",
  "sklearn.base.BaseEstimator.get_params",
  "sklearn.base.BaseEstimator.set_params",
  "sklearn.base.clone",
  "sklearn.datasets.make_classification",
  "sklearn.datasets.make_regression",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.scorer._BaseScorer",
  "sklearn.metrics.scorer.check_scoring",
  "sklearn.metrics.scorer.make_scorer",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.GroupKFold",
  "sklearn.model_selection.PredefinedSplit",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.StratifiedShuffleSplit",
  "sklearn.model_selection._validation._score",
  "sklearn.model_selection.check_cv",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.utils.deprecated",
  "sklearn.utils.safe_indexing",
  "skorch.MIN_TORCH_VERSION",
  "skorch.NeuralNet",
  "skorch.NeuralNet.__doc__",
  "skorch.NeuralNetClassifier",
  "skorch.NeuralNetRegressor",
  "skorch.NeuralNetRegressor.score",
  "skorch.callbacks.BatchScoring",
  "skorch.callbacks.Callback",
  "skorch.callbacks.EpochScoring",
  "skorch.callbacks.EpochTimer",
  "skorch.callbacks.PrintLog",
  "skorch.callbacks.logging.EpochTimer",
  "skorch.callbacks.lr_scheduler.WarmRestartLR",
  "skorch.callbacks.scoring.ScoringBase",
  "skorch.callbacks.scoring.cache_net_infer",
  "skorch.callbacks.scoring.convert_sklearn_metric_function",
  "skorch.classifier.NeuralNetBinaryClassifier",
  "skorch.classifier.NeuralNetClassifier",
  "skorch.classifier.get_neural_net_binary_clf_doc",
  "skorch.classifier.get_neural_net_clf_doc",
  "skorch.classifier.neural_net_binary_clf_criterion_text",
  "skorch.classifier.neural_net_binary_clf_doc_start",
  "skorch.classifier.neural_net_clf_criterion_text",
  "skorch.classifier.neural_net_clf_doc_start",
  "skorch.dataset.CVSplit",
  "skorch.dataset.Dataset",
  "skorch.dataset._apply_to_data",
  "skorch.dataset.get_len",
  "skorch.dataset.multi_indexing",
  "skorch.dataset.uses_placeholder_y",
  "skorch.exceptions.DeviceWarning",
  "skorch.exceptions.NotInitializedError",
  "skorch.exceptions.SkorchException",
  "skorch.exceptions.SkorchWarning",
  "skorch.helper.SliceDict",
  "skorch.helper.filter_requires_grad",
  "skorch.helper.filtered_optimizer",
  "skorch.helper.predefined_split",
  "skorch.history.History",
  "skorch.history._incomplete_mapper",
  "skorch.history._missingno",
  "skorch.history.filter_missing",
  "skorch.history.partial_index",
  "skorch.msg",
  "skorch.regressor.NeuralNetRegressor",
  "skorch.regressor.get_neural_net_reg_doc",
  "skorch.regressor.neural_net_reg_criterion_text",
  "skorch.regressor.neural_net_reg_doc_start",
  "skorch.tests.conftest.F",
  "skorch.tests.conftest.pandas_installed",
  "skorch.tests.test_classifier.MyBinaryClassifier",
  "skorch.tests.test_classifier.MyClassifier",
  "skorch.tests.test_net.MyClassifier",
  "skorch.tests.test_regressor.MyRegressor",
  "skorch.torch_version",
  "skorch.utils.Ansi",
  "skorch.utils.Ansi.ENDC.value",
  "skorch.utils.FirstStepAccumulator",
  "skorch.utils._indexing_dict",
  "skorch.utils._indexing_list_tuple_of_data",
  "skorch.utils._indexing_ndframe",
  "skorch.utils._indexing_none",
  "skorch.utils._indexing_other",
  "skorch.utils._make_optimizer",
  "skorch.utils._make_split",
  "skorch.utils._none",
  "skorch.utils._normalize_numpy_indices",
  "skorch.utils.check_indexing",
  "skorch.utils.data_from_dataset",
  "skorch.utils.duplicate_items",
  "skorch.utils.flatten",
  "skorch.utils.get_dim",
  "skorch.utils.is_dataset",
  "skorch.utils.is_pandas_ndframe",
  "skorch.utils.is_skorch_dataset",
  "skorch.utils.is_torch_data_type",
  "skorch.utils.multi_indexing",
  "skorch.utils.noop",
  "skorch.utils.open_file_like",
  "skorch.utils.params_for",
  "skorch.utils.to_numpy",
  "skorch.utils.to_tensor",
  "skorch.utils.train_loss_score",
  "skorch.utils.valid_loss_score",
  "sys.modules",
  "sys.stdout.flush",
  "tabulate.tabulate",
  "tempfile.SpooledTemporaryFile",
  "time.time",
  "to_tensor_",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.Tensor",
  "torch.abs",
  "torch.arange",
  "torch.cat",
  "torch.cuda.FloatTensor",
  "torch.cuda.is_available",
  "torch.device",
  "torch.exp",
  "torch.from_numpy",
  "torch.isclose",
  "torch.load",
  "torch.log",
  "torch.manual_seed",
  "torch.nn.BCELoss",
  "torch.nn.BCEWithLogitsLoss",
  "torch.nn.Dropout",
  "torch.nn.Linear",
  "torch.nn.MSELoss",
  "torch.nn.Module",
  "torch.nn.NLLLoss",
  "torch.nn.PReLU",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.nn.Softmax",
  "torch.nn.functional",
  "torch.nn.functional.relu",
  "torch.nn.functional.sigmoid",
  "torch.nn.functional.softmax",
  "torch.nn.functional.tanh",
  "torch.nn.utils.clip_grad_norm_",
  "torch.nn.utils.rnn.PackedSequence",
  "torch.no_grad",
  "torch.ones",
  "torch.optim.LBFGS",
  "torch.optim.SGD",
  "torch.optim.lr_scheduler.ReduceLROnPlateau",
  "torch.optim.lr_scheduler._LRScheduler",
  "torch.optim.optimizer.Optimizer",
  "torch.randn",
  "torch.save",
  "torch.set_grad_enabled",
  "torch.tensor",
  "torch.utils.data.DataLoader",
  "torch.utils.data.Dataset",
  "torch.utils.data.TensorDataset",
  "torch.utils.data.dataset.Subset",
  "torch.zeros",
  "tqdm.tqdm",
  "tqdm.tqdm_notebook",
  "type_truth_table",
  "types.MethodType",
  "unittest.mock.Mock",
  "unittest.mock.patch",
  "uses_cuda",
  "warnings.warn",
  "wrap_cls"
 ],
 "deps": {
  "DummyCallback": [],
  "MyDataset": [],
  "MyNet": [],
  "apply_": [],
  "batch_sizes": [],
  "cb": [],
  "collections": [],
  "contextlib": [],
  "cv": [],
  "cv_cls": [],
  "dataset": [],
  "decorator": [],
  "enum": [],
  "fnmatch": [],
  "func": [],
  "functools": [],
  "get_ipython": [],
  "iterator": [],
  "itertools": [],
  "json": [],
  "mock": [],
  "module": [],
  "numbers": [],
  "numpy": [],
  "opt": [],
  "pandas": [],
  "pathlib": [],
  "pickle": [],
  "pkg_resources": [],
  "pytest": [],
  "re": [],
  "sklearn": [],
  "skorch": [],
  "sys": [],
  "tabulate": [],
  "tempfile": [],
  "time": [],
  "to_tensor_": [],
  "torch": [],
  "tqdm": [],
  "type_truth_table": [],
  "types": [],
  "unittest": [],
  "uses_cuda": [],
  "warnings": [],
  "wrap_cls": []
 }
}