{
 "bad": [
  "EventError",
  "ExpressionParser",
  "InvalidModelError",
  "InvalidStochMLError",
  "ModelError",
  "ParameterError",
  "ReactionError",
  "SimulationError",
  "SpeciesError",
  "StochMLImportError",
  "ToString",
  "ValidationError",
  "__customPropParser",
  "ast.BitXor",
  "ast.Call",
  "ast.NodeTransformer",
  "ast.NodeVisitor",
  "ast.Num",
  "ast.Pow",
  "ast.copy_location",
  "ast.parse",
  "cmp",
  "collections.Iterable",
  "collections.OrderedDict",
  "collections.UserDict",
  "collections.UserList",
  "collections.UserList.__getattribute__",
  "collections.UserList.__getitem__",
  "csv.writer",
  "datetime.datetime.now",
  "datetime.datetime.timestamp",
  "decorate",
  "events.values",
  "functools.partial",
  "functools.reduce",
  "gillespy2.AssignmentRule",
  "gillespy2.Event",
  "gillespy2.EventAssignment",
  "gillespy2.EventTrigger",
  "gillespy2.FunctionDefinition",
  "gillespy2.Model",
  "gillespy2.Parameter",
  "gillespy2.RateRule",
  "gillespy2.Reaction",
  "gillespy2.Species",
  "gillespy2.__version__.__version__",
  "gillespy2.core.GillesPySolver",
  "gillespy2.core.Model",
  "gillespy2.core.Model.__init__",
  "gillespy2.core.Parameter",
  "gillespy2.core.Reaction",
  "gillespy2.core.Species",
  "gillespy2.core._formatter",
  "gillespy2.core._handler",
  "gillespy2.core.gillespy2.Model",
  "gillespy2.core.gillespy2.Parameter",
  "gillespy2.core.gillespy2.RateRule",
  "gillespy2.core.gillespy2.Reaction",
  "gillespy2.core.gillespy2.SortableObject",
  "gillespy2.core.gillespy2.Species",
  "gillespy2.core.gillespy2.StochMLDocument",
  "gillespy2.core.gillespyError.BuildError",
  "gillespy2.core.gillespyError.DirectoryError",
  "gillespy2.core.gillespyError.ExecutionError",
  "gillespy2.core.gillespyError.InvalidModelError",
  "gillespy2.core.gillespyError.ModelError",
  "gillespy2.core.gillespyError.ResultsError",
  "gillespy2.core.gillespyError.SimulationError",
  "gillespy2.core.gillespyError.SolverError",
  "gillespy2.core.log",
  "gillespy2.core.log.debug",
  "gillespy2.core.log.warn",
  "gillespy2.core.log.warning",
  "gillespy2.core.results.Results",
  "gillespy2.core.results.Trajectory",
  "gillespy2.core.results._plot_iterate",
  "gillespy2.core.results._plotplotly_iterate",
  "gillespy2.core.results.common_rgb_values",
  "gillespy2.sbml.SBMLimport.__get_compartments",
  "gillespy2.sbml.SBMLimport.__get_constraints",
  "gillespy2.sbml.SBMLimport.__get_events",
  "gillespy2.sbml.SBMLimport.__get_function_definitions",
  "gillespy2.sbml.SBMLimport.__get_initial_assignments",
  "gillespy2.sbml.SBMLimport.__get_kinetic_law",
  "gillespy2.sbml.SBMLimport.__get_math",
  "gillespy2.sbml.SBMLimport.__get_parameters",
  "gillespy2.sbml.SBMLimport.__get_reactions",
  "gillespy2.sbml.SBMLimport.__get_rules",
  "gillespy2.sbml.SBMLimport.__get_species",
  "gillespy2.sbml.SBMLimport.__read_sbml_model",
  "gillespy2.sbml.SBMLimport.__resolve_evals",
  "gillespy2.sbml.SBMLimport.convert",
  "gillespy2.sbml.SBMLimport.eval_globals",
  "gillespy2.sbml.SBMLimport.init_state",
  "gillespy2.sbml.SBMLimport.math",
  "gillespy2.sbml.SBMLimport.piecewise",
  "gillespy2.sbml.SBMLimport.postponed_evals",
  "gillespy2.sbml.SBMLimport.traverse_math",
  "gillespy2.solvers.auto.SSASolver",
  "gillespy2.solvers.auto.SSASolver.run",
  "gillespy2.solvers.auto.ssa_solver.get_best_ssa_solver",
  "gillespy2.solvers.cpp.SSACSolver",
  "gillespy2.solvers.cpp.can_use_cpp",
  "gillespy2.solvers.cpp.check_cpp_support",
  "gillespy2.solvers.cpp.example_models.Example",
  "gillespy2.solvers.cpp.ssa_c_solver.GILLESPY_C_DIRECTORY",
  "gillespy2.solvers.cpp.ssa_c_solver.GILLESPY_PATH",
  "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver",
  "gillespy2.solvers.cpp.ssa_c_solver._copy_files",
  "gillespy2.solvers.cpp.ssa_c_solver._parse_binary_output",
  "gillespy2.solvers.cpp.ssa_c_solver._write_constants",
  "gillespy2.solvers.cpp.ssa_c_solver._write_propensity",
  "gillespy2.solvers.cpp.ssa_c_solver._write_reactions",
  "gillespy2.solvers.cpp.ssa_c_solver.gillespy2",
  "gillespy2.solvers.cpp.variable_ssa_c_solver.GILLESPY_C_DIRECTORY",
  "gillespy2.solvers.cpp.variable_ssa_c_solver.GILLESPY_PATH",
  "gillespy2.solvers.cpp.variable_ssa_c_solver.VariableSSACSolver",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._copy_files",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._parse_binary_output",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._update_parameters",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._write_propensity",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._write_reactions",
  "gillespy2.solvers.cpp.variable_ssa_c_solver._write_variables",
  "gillespy2.solvers.cpp.variable_ssa_c_solver.gillespy2",
  "gillespy2.solvers.cython.CythonSSASolver",
  "gillespy2.solvers.cython.can_use_cython",
  "gillespy2.solvers.numpy.Tau.initialize",
  "gillespy2.solvers.numpy.Tau.select",
  "gillespy2.solvers.numpy.basic_ode_solver.BasicODESolver",
  "gillespy2.solvers.numpy.basic_tau_hybrid_solver.BasicTauHybridSolver",
  "gillespy2.solvers.numpy.basic_tau_hybrid_solver.__piecewise",
  "gillespy2.solvers.numpy.basic_tau_hybrid_solver.__xor",
  "gillespy2.solvers.numpy.basic_tau_hybrid_solver.eval_globals",
  "gillespy2.solvers.numpy.basic_tau_leaping_solver.BasicTauLeapingSolver",
  "gillespy2.solvers.numpy.can_use_numpy",
  "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver",
  "gillespy2.solvers.stochkit.stochkit_solvers.StochKitBaseSolver",
  "gillespyError.SimulationError",
  "heapq.heappop",
  "heapq.heappush",
  "inspect.getfile",
  "libsbml.ASTNode",
  "libsbml.formulaToL3String",
  "libsbml.formulaToString",
  "libsbml.readSBML",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.getLogger",
  "math.__dict__",
  "math.__dict__.copy",
  "math.floor",
  "math.log",
  "math.sqrt",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.fill_between",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.style.available",
  "matplotlib.pyplot.style.use",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.ylabel",
  "numpy.array",
  "numpy.copy",
  "numpy.diff",
  "numpy.e",
  "numpy.empty",
  "numpy.float",
  "numpy.float64",
  "numpy.frombuffer",
  "numpy.get_include",
  "numpy.inf",
  "numpy.int",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.nan",
  "numpy.random.poisson",
  "numpy.random.seed",
  "numpy.stack",
  "numpy.sum",
  "numpy.where",
  "numpy.zeros",
  "operator.ixor",
  "os.environ.get",
  "os.killpg",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.pathsep",
  "os.setsid",
  "pyximport.install",
  "random.randint",
  "random.random",
  "random.seed",
  "random.uniform",
  "re.DOTALL",
  "re.compile",
  "scipy.integrate.ode",
  "scipy.integrate.solve_ivp",
  "shutil.copy",
  "shutil.rmtree",
  "signal.SIGINT",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.TimeoutExpired",
  "subprocess.run",
  "sys.version_info",
  "tempfile.TemporaryDirectory",
  "tempfile.mkdtemp",
  "threading.Event",
  "threading.Thread",
  "uuid.uuid4",
  "warnings.warn",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.fromString",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.tostring"
 ],
 "deps": {
  "EventError": [],
  "ExpressionParser": [],
  "InvalidModelError": [],
  "InvalidStochMLError": [],
  "ModelError": [],
  "ParameterError": [],
  "ReactionError": [],
  "SimulationError": [],
  "SpeciesError": [],
  "StochMLImportError": [],
  "ToString": [],
  "ValidationError": [],
  "__customPropParser": [],
  "ast": [],
  "cmp": [],
  "collections": [],
  "csv": [],
  "datetime": [],
  "decorate": [],
  "events": [
   "events/conda-forge/noarch/events-0.4-pyhd8ed1ab_0"
  ],
  "functools": [],
  "gillespy2": [],
  "gillespyError": [],
  "heapq": [],
  "inspect": [],
  "libsbml": [],
  "logging": [],
  "math": [],
  "matplotlib": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "plotly": [
   "plotly/conda-forge/noarch/plotly-3.7.0-py_0",
   "plotly/conda-forge/noarch/plotly-4.14.0-pyhd3deb0d_0",
   "plotly/conda-forge/noarch/plotly-4.5.4-pyh8c360ce_0",
   "plotly/conda-forge/noarch/plotly-4.7.1-pyh9f0ad1d_0"
  ],
  "pyximport": [],
  "random": [],
  "re": [],
  "scipy": [],
  "shutil": [],
  "signal": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "threading": [],
  "uuid": [],
  "warnings": [],
  "xml": []
 }
}