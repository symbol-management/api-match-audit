{
 "bad": [
  "abc.ABC",
  "abc.abstractmethod",
  "importlib.import_module",
  "json.dumps",
  "json.loads",
  "logging.WARNING",
  "logging.getLogger",
  "param.Boolean",
  "param.Integer",
  "param.Number",
  "param.Parameterized",
  "param.String",
  "param.serializer.JSONSerialization.deserialize_parameters",
  "param.serializer.JSONSerialization.serialize_parameters",
  "param_persist.agents.base.AgentBase",
  "param_persist.agents.sqlalchemy_agent.SqlAlchemyAgent",
  "param_persist.agents.sqlalchemy_agent.log",
  "param_persist.agents.sqlalchemy_agent.sqlalchemy_session",
  "param_persist.sqlalchemy.models.Base",
  "param_persist.sqlalchemy.models.Base.metadata.create_all",
  "param_persist.sqlalchemy.models.Base.metadata.drop_all",
  "param_persist.sqlalchemy.models.InstanceModel",
  "param_persist.sqlalchemy.models.ParamModel",
  "param_persist.sqlalchemy.models.param_model.Base",
  "parameterized_class",
  "pytest.fixture",
  "pytest.raises",
  "pytest.yield_fixture",
  "sqlalchemy.CHAR",
  "sqlalchemy.Column",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.String",
  "sqlalchemy.create_engine",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.orm.Session",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.scoped_session",
  "sqlalchemy.orm.sessionmaker",
  "tests.unit_tests.agents.sqlalchemy_agent.conftest.sqlalchemy_engine",
  "tests.unit_tests.agents.sqlalchemy_agent.conftest.sqlalchemy_session_factory",
  "tests.unit_tests.agents.sqlalchemy_agent.test_sqlalchemy_agent.AgentTestParam",
  "tests.unit_tests.agents.sqlalchemy_agent.test_sqlalchemy_agent.AgentTestParamMissing",
  "tests.unit_tests.agents.test_base_agent.BaseTestAgent",
  "tests.unit_tests.sqlalchemy_data_models.conftest.engine",
  "tests.unit_tests.sqlalchemy_data_models.conftest.session",
  "tests.unit_tests.sqlalchemy_data_models.conftest.session_factory",
  "uuid.uuid4",
  "wrapped_function"
 ],
 "deps": {
  "abc": [],
  "importlib": [],
  "json": [],
  "logging": [],
  "param": [],
  "param_persist": [],
  "parameterized_class": [],
  "pytest": [],
  "sqlalchemy": [],
  "tests": [],
  "uuid": [],
  "wrapped_function": []
 }
}