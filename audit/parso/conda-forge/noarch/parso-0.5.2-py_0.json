{
 "bad": [
  "Exception.__init__",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "add_if_spaces",
  "add_not_spaces",
  "addclosure",
  "ast.literal_eval",
  "binary_search",
  "check_expr",
  "codecs.BOM_UTF8.decode",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "create_context",
  "create_token",
  "current_suite",
  "dedent_if_necessary",
  "detect_encoding",
  "different_case_versions",
  "func",
  "is_definition",
  "iterate",
  "itertools.permutations",
  "itertools.product",
  "meta",
  "parso.cache.load_module",
  "parso.cache.parser_cache",
  "parso.cache.save_module",
  "parso.python.token.PythonTokenTypes.DEDENT",
  "parso.python.token.PythonTokenTypes.ENDMARKER",
  "parso.python.token.PythonTokenTypes.ERRORTOKEN",
  "parso.python.token.PythonTokenTypes.ERROR_DEDENT",
  "parso.python.token.PythonTokenTypes.FSTRING_END",
  "parso.python.token.PythonTokenTypes.FSTRING_START",
  "parso.python.token.PythonTokenTypes.FSTRING_STRING",
  "parso.python.token.PythonTokenTypes.INDENT",
  "parso.python.token.PythonTokenTypes.NAME",
  "parso.python.token.PythonTokenTypes.NEWLINE",
  "parso.python.token.PythonTokenTypes.NUMBER",
  "parso.python.token.PythonTokenTypes.OP",
  "parso.python.token.PythonTokenTypes.STRING",
  "parso.python.tree.AssertStmt",
  "parso.python.tree.Class",
  "parso.python.tree.Decorator",
  "parso.python.tree.EndMarker",
  "parso.python.tree.ExprStmt",
  "parso.python.tree.FStringEnd",
  "parso.python.tree.FStringStart",
  "parso.python.tree.FStringString",
  "parso.python.tree.Flow",
  "parso.python.tree.ForStmt",
  "parso.python.tree.Function",
  "parso.python.tree.GlobalStmt",
  "parso.python.tree.IfStmt",
  "parso.python.tree.ImportFrom",
  "parso.python.tree.ImportName",
  "parso.python.tree.Keyword",
  "parso.python.tree.KeywordStatement",
  "parso.python.tree.Lambda",
  "parso.python.tree.Module",
  "parso.python.tree.Name",
  "parso.python.tree.Newline",
  "parso.python.tree.Number",
  "parso.python.tree.Operator",
  "parso.python.tree.PythonErrorLeaf",
  "parso.python.tree.PythonErrorNode",
  "parso.python.tree.PythonNode",
  "parso.python.tree.ReturnStmt",
  "parso.python.tree.Scope",
  "parso.python.tree.String",
  "parso.python.tree.SyncCompFor",
  "parso.python.tree.TryStmt",
  "parso.python.tree.WhileStmt",
  "parso.python.tree.WithStmt",
  "parso.python.tree.YieldExpr",
  "parso.python.tree.search_ancestor",
  "process_comp_for",
  "raise_",
  "rule_cls",
  "search_all_comp_ancestors",
  "search_namedexpr_in_comp_for",
  "str.isidentifier",
  "type.__new__"
 ],
 "deps": [
  []
 ]
}