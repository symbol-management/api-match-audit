{
 "bad": [
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "copy.deepcopy",
  "create_error",
  "difflib.unified_diff",
  "foyer.Forcefield",
  "foyer.atomtyper._iterate_rules",
  "foyer.atomtyper._load_rules",
  "foyer.atomtyper._resolve_atomtypes",
  "foyer.atomtyper.find_atomtypes",
  "foyer.element.Element",
  "foyer.examples.files.modify_oplsa_silica.all_atomtypes",
  "foyer.examples.files.modify_oplsa_silica.atomtypes",
  "foyer.examples.files.modify_oplsa_silica.new_overrides",
  "foyer.examples.files.modify_oplsa_silica.out_string",
  "foyer.examples.files.modify_oplsa_silica.overrides",
  "foyer.examples.files.modify_oplsa_silica.overrides_list",
  "foyer.examples.files.modify_oplsa_silica.rbtorsion",
  "foyer.examples.files.modify_oplsa_silica.root",
  "foyer.examples.files.modify_oplsa_silica.to_remove",
  "foyer.examples.files.modify_oplsa_silica.torsion_types",
  "foyer.exceptions.FoyerError",
  "foyer.exceptions.FoyerWarning",
  "foyer.exceptions.MultipleValidationError",
  "foyer.exceptions.ValidationError",
  "foyer.exceptions.ValidationWarning",
  "foyer.exceptions.raise_collected",
  "foyer.forcefield.Forcefield",
  "foyer.forcefield._check_angles",
  "foyer.forcefield._check_bonds",
  "foyer.forcefield._check_dihedrals",
  "foyer.forcefield._check_independent_residues",
  "foyer.forcefield._error_or_warn",
  "foyer.forcefield._separate_urey_bradleys",
  "foyer.forcefield._structure_from_residue",
  "foyer.forcefield._topology_from_parmed",
  "foyer.forcefield._unwrap_typemap",
  "foyer.forcefield.generate_topology",
  "foyer.forcefield.preprocess_forcefield_files",
  "foyer.forcefields",
  "foyer.forcefields.ForceFields",
  "foyer.forcefields.forcefields",
  "foyer.forcefields.forcefields.get_ff_path",
  "foyer.forcefields.forcefields.get_forcefield",
  "foyer.forcefields.forcefields.get_forcefield_paths",
  "foyer.forcefields.get_forcefield",
  "foyer.smarts.GRAMMAR",
  "foyer.smarts.SMARTS",
  "foyer.smarts_graph.SMARTSGraph",
  "foyer.smarts_graph.SMARTSMatcher",
  "foyer.smarts_graph._find_chordless_cycles",
  "foyer.smarts_graph._prepare_atoms",
  "foyer.tests.test_atomtyping.OPLS_TESTFILES_DIR",
  "foyer.tests.test_forcefield.FF_DIR",
  "foyer.tests.test_forcefield.FORCEFIELDS",
  "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JA962170",
  "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JP0484579",
  "foyer.tests.test_graph.TEST_BANK",
  "foyer.tests.test_opls.OPLSAA",
  "foyer.tests.test_opls.OPLS_TESTFILES_DIR",
  "foyer.tests.test_opls.TestOPLS",
  "foyer.tests.test_plugin.foyer",
  "foyer.tests.test_smarts.PARSER",
  "foyer.tests.test_smarts._rule_match",
  "foyer.tests.test_smarts._rule_match_count",
  "foyer.tests.test_trappe.TRAPPE_TESTFILES_DIR",
  "foyer.tests.test_trappe.TRAPPE_UA",
  "foyer.tests.test_trappe.TestTraPPE",
  "foyer.tests.test_validator.ERRORS",
  "foyer.tests.test_validator.FF_DIR",
  "foyer.tests.test_validator.FORCEFIELDS",
  "foyer.tests.test_validator.XMLS",
  "foyer.tests.utils.atomtype",
  "foyer.tests.utils.get_fn",
  "foyer.tests.utils.glob_fn",
  "foyer.tests.utils.register_mock_request",
  "foyer.utils.external.get_ref",
  "foyer.utils.io.DelayImportError",
  "foyer.utils.io.MESSAGES",
  "foyer.utils.io.has_mbuild",
  "foyer.utils.io.import_",
  "foyer.utils.io.mbuild",
  "foyer.utils.nbfixes.apply_nbfix",
  "foyer.validator.Validator",
  "foyer.xml_writer._elements_equal",
  "foyer.xml_writer._infer_coulomb14scale",
  "foyer.xml_writer._infer_lj14scale",
  "foyer.xml_writer._remove_duplicate_elements",
  "foyer.xml_writer._unique_periodictorsion_parameters",
  "foyer.xml_writer._update_defs",
  "foyer.xml_writer._write_angles",
  "foyer.xml_writer._write_atoms",
  "foyer.xml_writer._write_bonds",
  "foyer.xml_writer._write_periodic_torsions",
  "foyer.xml_writer._write_rb_torsions",
  "foyer.xml_writer.write_foyer",
  "glob.glob",
  "importlib.import_module",
  "inspect.currentframe",
  "inspect.getouterframes",
  "itertools.chain",
  "itertools.combinations",
  "lxml.etree.Comment",
  "lxml.etree.DocumentInvalid",
  "lxml.etree.Element",
  "lxml.etree.ElementTree",
  "lxml.etree.SubElement",
  "lxml.etree.XMLSchema",
  "lxml.etree.XMLSyntaxError",
  "lxml.etree.fromstring",
  "lxml.etree.parse",
  "lxml.etree.tostring",
  "mbuild.Compound",
  "mbuild.Particle",
  "mbuild.recipes.Alkane",
  "networkx.Graph",
  "networkx.get_node_attributes",
  "numpy.allclose",
  "numpy.any",
  "numpy.array",
  "numpy.empty",
  "numpy.isclose",
  "numpy.nan",
  "numpy.pi",
  "numpy.unique",
  "os.linesep",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "parmed.Structure",
  "parmed.Structure.write_foyer",
  "parmed.load_file",
  "parmed.openmm.load_topology",
  "parmed.periodic_table.AtomicNum",
  "parmed.periodic_table.Element",
  "parmed.periodic_table.KNOWN_ELEMENTS",
  "pkg_resources.iter_entry_points",
  "pkg_resources.resource_filename",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.timeout",
  "pytest.raises",
  "pytest.warns",
  "re.sub",
  "simtk.openmm.CMMotionRemover",
  "simtk.openmm.HarmonicBondForce",
  "simtk.openmm.LocalCoordinatesSite",
  "simtk.openmm.OutOfPlaneSite",
  "simtk.openmm.System",
  "simtk.openmm.ThreeParticleAverageSite",
  "simtk.openmm.TwoParticleAverageSite",
  "simtk.openmm.Vec3",
  "simtk.openmm.app.ForceField",
  "simtk.openmm.app.ForceField._SystemData",
  "simtk.openmm.app.Topology",
  "simtk.openmm.app.element.Element",
  "simtk.openmm.app.element.Element.getByAtomicNumber",
  "simtk.openmm.app.element.Element.getBySymbol",
  "simtk.openmm.app.element.get_by_symbol",
  "simtk.openmm.app.element.hydrogen",
  "simtk.openmm.app.forcefield.AllBonds",
  "simtk.openmm.app.forcefield.CutoffNonPeriodic",
  "simtk.openmm.app.forcefield.HAngles",
  "simtk.openmm.app.forcefield.HBonds",
  "simtk.openmm.app.forcefield.NoCutoff",
  "simtk.openmm.app.forcefield.NonbondedGenerator",
  "simtk.openmm.app.forcefield._convertParameterToNumber",
  "simtk.unit.dalton",
  "simtk.unit.is_quantity",
  "simtk.unit.nanometer",
  "sys.stderr",
  "tempfile.NamedTemporaryFile",
  "textwrap.dedent",
  "unittest.SkipTest",
  "urllib.parse.urljoin",
  "warnings.warn",
  "xml.etree.ElementTree.ParseError",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.tostring"
 ],
 "deps": {
  "collections": [],
  "copy": [],
  "create_error": [],
  "difflib": [],
  "foyer": [],
  "glob": [],
  "importlib": [],
  "inspect": [],
  "itertools": [],
  "lark": [
   "lark-parser/conda-forge/noarch/lark-parser-0.10.0-pyh9f0ad1d_0"
  ],
  "lxml": [],
  "mbuild": [
   "mbuild/conda-forge/noarch/mbuild-0.10.12-pyhd8ed1ab_0"
  ],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "numpy": [],
  "os": [],
  "parmed": [],
  "pkg_resources": [],
  "pytest": [],
  "re": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "simtk": [],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "unittest": [],
  "urllib": [],
  "warnings": [],
  "xml": []
 }
}