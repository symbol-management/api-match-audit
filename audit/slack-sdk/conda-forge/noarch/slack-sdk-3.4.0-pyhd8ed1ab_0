{
 "bad": [
  "abc.ABCMeta",
  "abc.abstractmethod",
  "aiohttp.BasicAuth",
  "aiohttp.ClientConnectionError",
  "aiohttp.ClientSession",
  "aiohttp.ClientTimeout",
  "aiohttp.ClientWebSocketResponse",
  "aiohttp.ContentTypeError",
  "aiohttp.FormData",
  "aiohttp.WSMessage",
  "aiohttp.WSMsgType",
  "aiohttp.WSMsgType.CLOSE",
  "aiohttp.WSMsgType.CLOSED",
  "aiohttp.WSMsgType.CLOSING",
  "aiohttp.WSMsgType.ERROR",
  "aiohttp.WSMsgType.TEXT",
  "aiohttp.__version__",
  "async_base_client.AsyncBaseClient",
  "async_base_client.AsyncSlackResponse",
  "async_internal_utils._files_to_data",
  "async_internal_utils._get_event_loop",
  "async_internal_utils._request_with_session",
  "async_slack_response.AsyncSlackResponse",
  "async_state_store.AsyncOAuthStateStore",
  "asyncio.AbstractEventLoop",
  "asyncio.Future",
  "asyncio.Queue",
  "asyncio.TimeoutError",
  "asyncio.ensure_future",
  "asyncio.futures.Future",
  "asyncio.get_event_loop",
  "asyncio.new_event_loop",
  "asyncio.set_event_loop",
  "asyncio.sleep",
  "base64.b64encode",
  "base64.encodebytes",
  "base_client.BaseClient",
  "base_client.SlackResponse",
  "basic_components.ButtonStyles",
  "basic_components.ConfirmObject",
  "basic_components.ConfirmObject.parse",
  "basic_components.DispatchActionConfig",
  "basic_components.MarkdownTextObject",
  "basic_components.MarkdownTextObject.from_str",
  "basic_components.MarkdownTextObject.type",
  "basic_components.Option",
  "basic_components.Option.parse_all",
  "basic_components.OptionGroup",
  "basic_components.OptionGroup.parse_all",
  "basic_components.PlainTextObject",
  "basic_components.PlainTextObject.type",
  "basic_components.TextObject",
  "basic_components.TextObject.parse",
  "basic_objects.JsonObject",
  "block_elements.BlockElement",
  "block_elements.BlockElement.parse",
  "block_elements.BlockElement.parse_all",
  "block_elements.InputInteractiveElement",
  "block_elements.InteractiveElement",
  "callback",
  "callback.__module__",
  "callback.__name__",
  "close_method",
  "collections.defaultdict",
  "concurrent.futures.thread.ThreadPoolExecutor",
  "connection.Connection",
  "connection.ConnectionState",
  "convert_params",
  "copy.copy",
  "copy.deepcopy",
  "datetime.datetime",
  "datetime.datetime.utcfromtimestamp",
  "datetime.datetime.utcnow",
  "default_arg.DefaultArg",
  "default_arg.NotGiven",
  "deprecation.show_2020_01_deprecation",
  "errno.EBADF",
  "errors.SlackClientConfigurationError",
  "frame_header.FrameHeader",
  "frame_header.FrameHeader.OPCODE_BINARY",
  "frame_header.FrameHeader.OPCODE_CLOSE",
  "frame_header.FrameHeader.OPCODE_CONTINUATION",
  "frame_header.FrameHeader.OPCODE_PING",
  "frame_header.FrameHeader.OPCODE_PONG",
  "frame_header.FrameHeader.OPCODE_TEXT",
  "func",
  "functools.wraps",
  "group.Group",
  "hashlib.sha1",
  "hashlib.sha256",
  "hmac.compare_digest",
  "hmac.new",
  "http.client.HTTPResponse",
  "inspect.FullArgSpec",
  "inspect.getfullargspec",
  "inspect.iscoroutinefunction",
  "inspect.signature",
  "internal_utils._build_body",
  "internal_utils._build_query",
  "internal_utils._build_req_args",
  "internal_utils._build_request_headers",
  "internal_utils._debug_log_response",
  "internal_utils._get_url",
  "internal_utils._is_iterable",
  "internal_utils._next_cursor_is_present",
  "internal_utils._parse_web_class_objects",
  "internal_utils._to_dict_without_not_given",
  "internal_utils._update_call_participants",
  "internal_utils._warn_if_text_is_missing",
  "internal_utils.convert_bool_to_0_or_1",
  "internal_utils.get_user_agent",
  "internals._build_data_frame_for_sending",
  "internals._establish_new_socket_connection",
  "internals._generate_sec_websocket_key",
  "internals._parse_handshake_response",
  "internals._parse_text_payload",
  "internals._receive_messages",
  "internals._to_readable_opcode",
  "internals._validate_sec_websocket_accept",
  "interval_runner.IntervalRunner",
  "io.BytesIO",
  "io.IOBase",
  "is_not_empty",
  "itertools.cycle",
  "json.decoder.JSONDecodeError",
  "json.dumps",
  "json.loads",
  "json.pop",
  "legacy_base_client.LegacyBaseClient",
  "legacy_base_client.SlackResponse",
  "legacy_slack_response.LegacySlackResponse",
  "listener",
  "logging.DEBUG",
  "logging.Logger",
  "logging.NullHandler",
  "logging.getLogger",
  "method",
  "mimetypes.guess_type",
  "models.bot.Bot",
  "models.installation.Installation",
  "os.environ.get",
  "os.name",
  "os.path.sep",
  "os.remove",
  "os.urandom",
  "pathlib.Path.home",
  "platform.release",
  "platform.system",
  "proxy_env_variable_loader.load_http_proxy_from_env",
  "queue.Empty",
  "queue.Queue",
  "random.choices",
  "random.random",
  "re.IGNORECASE",
  "re.match",
  "re.sub",
  "response.AuditLogsResponse",
  "response.GroupCreateResponse",
  "response.GroupDeleteResponse",
  "response.GroupPatchResponse",
  "response.GroupUpdateResponse",
  "response.ReadGroupResponse",
  "response.ReadUserResponse",
  "response.SCIMResponse",
  "response.SearchGroupsResponse",
  "response.SearchUsersResponse",
  "response.UserCreateResponse",
  "response.UserDeleteResponse",
  "response.UserPatchResponse",
  "response.UserUpdateResponse",
  "signal.SIGHUP",
  "signal.SIGINT",
  "signal.SIGTERM",
  "slack.web.async_internal_utils._request_with_session",
  "slack_response.SlackResponse",
  "slack_sdk.models.blocks.Block.parse_all",
  "slack_sdk.models.blocks.DynamicSelectElementTypes.union",
  "slack_sdk.models.blocks.Option.from_single_value",
  "slack_sdk.models.blocks.PlainTextObject.type",
  "slack_sdk.models.blocks.TextObject.parse",
  "slack_sdk.web.WebClient.BASE_URL",
  "slack_sdk.web.legacy_client.LegacyWebClient.BASE_URL",
  "socket.error",
  "socket.socket",
  "socket.socket.IPPROTO_TCP",
  "socket.socket.SOCK_STREAM",
  "socket.socket.SOL_SOCKET",
  "socket.socket.SOL_TCP",
  "socket.socket.SO_KEEPALIVE",
  "socket.socket.TCP_NODELAY",
  "socket.socket.getaddrinfo",
  "socket.socket.socket",
  "socket.timeout",
  "sqlalchemy.Column",
  "sqlalchemy.DateTime",
  "sqlalchemy.Index",
  "sqlalchemy.Integer",
  "sqlalchemy.MetaData",
  "sqlalchemy.String",
  "sqlalchemy.Table",
  "sqlalchemy.and_",
  "sqlalchemy.desc",
  "sqlalchemy.engine.Engine",
  "sqlalchemy.sql.func.now",
  "sqlalchemy.sql.sqltypes.Boolean",
  "sqlite3.Connection",
  "sqlite3.connect",
  "ssl.PROTOCOL_SSLv23",
  "ssl.SOCK_STREAM",
  "ssl.SSLContext",
  "ssl.SSLSocket",
  "ssl.SSLZeroReturnError",
  "state_store.OAuthStateStore",
  "str.encode",
  "struct.pack",
  "struct.unpack",
  "sys.version_info",
  "sys.version_info.major",
  "sys.version_info.minor",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "threading.current_thread",
  "threading.main_thread",
  "time.sleep",
  "time.time",
  "to_dict",
  "to_dict_compatible",
  "type.name",
  "types.TypeAndValue",
  "typing.Any",
  "typing.Awaitable",
  "typing.BinaryIO",
  "typing.Callable",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "urllib.error.HTTPError",
  "urllib.parse.quote",
  "urllib.parse.urlencode",
  "urllib.parse.urljoin",
  "urllib.parse.urlparse",
  "urllib.request.HTTPSHandler",
  "urllib.request.OpenerDirector",
  "urllib.request.ProxyHandler",
  "urllib.request.Request",
  "urllib.request.build_opener",
  "urllib.request.urlopen",
  "user.User",
  "uuid.uuid4",
  "warnings.warn",
  "web.classes.attachments.Attachment",
  "web.classes.blocks.Block",
  "webhook_response.WebhookResponse",
  "websocket.enableTrace",
  "websockets.ConnectionClosedError",
  "websockets.client.WebSocketClientProtocol",
  "websockets.connect"
 ],
 "deps": {
  "abc": [],
  "aiohttp": [],
  "async_base_client": [],
  "async_internal_utils": [],
  "async_slack_response": [],
  "async_state_store": [],
  "asyncio": [],
  "base64": [],
  "base_client": [],
  "basic_components": [],
  "basic_objects": [],
  "block_elements": [],
  "botocore": [
   "botocore/conda-forge/noarch/botocore-1.10.15-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.32-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.37-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.44-py_0",
   "botocore/conda-forge/noarch/botocore-1.10.49-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.110-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.16-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.180-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.198-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.238-py_2",
   "botocore/conda-forge/noarch/botocore-1.12.242-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.30-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.47-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.51-py_0",
   "botocore/conda-forge/noarch/botocore-1.12.85-py_0",
   "botocore/conda-forge/noarch/botocore-1.13.16-py_0",
   "botocore/conda-forge/noarch/botocore-1.13.34-py_0",
   "botocore/conda-forge/noarch/botocore-1.14.13-py_0",
   "botocore/conda-forge/noarch/botocore-1.14.7-py_0",
   "botocore/conda-forge/noarch/botocore-1.16.14-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.17.1-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.17.29-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.17.61-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.18.11-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.18.3-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.19.6-pyh9f0ad1d_0",
   "botocore/conda-forge/noarch/botocore-1.19.7-pyhd3deb0d_0",
   "botocore/conda-forge/noarch/botocore-1.19.9-pyhd3deb0d_0",
   "botocore/conda-forge/noarch/botocore-1.20.3-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.20.9-pyhd8ed1ab_0",
   "botocore/conda-forge/noarch/botocore-1.9.3-py_0"
  ],
  "callback": [],
  "close_method": [],
  "collections": [],
  "concurrent": [],
  "connection": [],
  "convert_params": [],
  "copy": [],
  "datetime": [],
  "default_arg": [],
  "deprecation": [],
  "errno": [],
  "errors": [],
  "frame_header": [],
  "func": [],
  "functools": [],
  "group": [],
  "hashlib": [],
  "hmac": [],
  "http": [],
  "inspect": [],
  "internal_utils": [],
  "internals": [],
  "interval_runner": [],
  "io": [],
  "is_not_empty": [],
  "itertools": [],
  "json": [],
  "legacy_base_client": [],
  "legacy_slack_response": [],
  "listener": [],
  "logging": [],
  "method": [],
  "mimetypes": [],
  "models": [],
  "os": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "platform": [],
  "proxy_env_variable_loader": [],
  "queue": [],
  "random": [],
  "re": [],
  "response": [],
  "signal": [],
  "slack": [
   "slack-sdk/conda-forge/noarch/slack-sdk-3.4.0-pyhd8ed1ab_0"
  ],
  "slack_response": [],
  "slack_sdk": [
   "slack-sdk/conda-forge/noarch/slack-sdk-3.4.0-pyhd8ed1ab_0"
  ],
  "socket": [],
  "sqlalchemy": [],
  "sqlite3": [],
  "ssl": [],
  "state_store": [],
  "str": [],
  "struct": [],
  "sys": [],
  "threading": [],
  "time": [],
  "to_dict": [],
  "to_dict_compatible": [],
  "type": [],
  "types": [],
  "typing": [],
  "urllib": [],
  "user": [],
  "uuid": [],
  "warnings": [],
  "web": [],
  "webhook_response": [],
  "websocket": [
   "websocket-client/conda-forge/noarch/websocket-client-0.47.0-py_0"
  ],
  "websockets": []
 }
}