{
 "bad": [
  "AttributeError",
  "BaseException",
  "BlockingIOError",
  "Exception",
  "IOError",
  "ImportError",
  "IndexError",
  "InterruptedError",
  "KeyError",
  "NotImplementedError",
  "OSError",
  "ReferenceError",
  "RuntimeError",
  "StopIteration",
  "TypeError",
  "ValueError",
  "__name__",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "all",
  "bool",
  "buffer",
  "bytearray",
  "bytearray_type",
  "bytes",
  "callable",
  "callback",
  "checker",
  "chunker",
  "classmethod",
  "cls",
  "cls.ITEM.repr",
  "cls.SCHEMA.fields",
  "cls.decode",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "copy_reg.pickle",
  "crc32c.crc32",
  "dict",
  "e",
  "enumerate",
  "errno.EINTR",
  "error",
  "error_class",
  "error_type",
  "error_type.__name__",
  "f",
  "filter",
  "float",
  "frozenset",
  "get_type",
  "getattr",
  "globals",
  "gssapi.raw.misc.GSSError",
  "hasattr",
  "hash",
  "hex",
  "id",
  "int",
  "io.BytesIO",
  "isinstance",
  "issubclass",
  "iter",
  "kafka.admin.acl_resource.ACLResourcePatternType.LITERAL.value",
  "kafka.client_async.selectors.DefaultSelector",
  "kafka.conn.ConnectionStates.DISCONNECTED",
  "kafka.coordinator.base.Generation.NO_GENERATION",
  "kafka.coordinator.protocol.ConsumerProtocol.ASSIGNMENT.decode",
  "kafka.coordinator.protocol.ConsumerProtocol.METADATA.decode",
  "kafka.coordinator.protocol.ConsumerProtocol.PROTOCOL_TYPE",
  "kafka.metrics.stats.Histogram.ConstantBinScheme",
  "kafka.metrics.stats.Histogram.LinearBinScheme",
  "kafka.metrics.stats.rate.TimeUnit.NANOSECONDS",
  "kafka.protocol.commit.OffsetCommitRequest.DEFAULT_GENERATION_ID",
  "kafka.protocol.commit.OffsetCommitRequest.DEFAULT_RETENTION_TIME",
  "kafka.protocol.group.JoinGroupRequest.UNKNOWN_MEMBER_ID",
  "kafka.protocol.offset.OffsetResetStrategy.EARLIEST",
  "kafka.protocol.offset.OffsetResetStrategy.LATEST",
  "kafka.protocol.offset.OffsetResetStrategy.NONE",
  "kafka.record.legacy_records.LegacyRecordBatch.RECORD_OVERHEAD_V0",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_GZIP",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_LZ4",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_NONE",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_SNAPPY",
  "kafka.vendor.enum34.IntEnum",
  "kafka.vendor.six.Iterator",
  "kafka.vendor.six.PY2",
  "kafka.vendor.six.PY3",
  "kafka.vendor.six.add_metaclass",
  "kafka.vendor.six.integer_types",
  "kafka.vendor.six.iteritems",
  "kafka.vendor.six.itervalues",
  "kafka.vendor.six.moves.range",
  "kafka.vendor.six.reraise",
  "kafka.vendor.six.string_types",
  "len",
  "len_func",
  "list",
  "listener",
  "logging.NullHandler",
  "lz4.frame.compress",
  "lz4.frame.decompress",
  "make_measure_fn",
  "map",
  "max",
  "memoryview",
  "min",
  "new_err_cls",
  "next",
  "object",
  "ord",
  "print",
  "property",
  "random.shuffle",
  "random.uniform",
  "range",
  "reporter",
  "repr",
  "reset_override_configs",
  "sensor_name",
  "set",
  "sorted",
  "staticmethod",
  "str",
  "struct.error",
  "sum",
  "super",
  "time_time",
  "tuple",
  "type",
  "type_int",
  "write",
  "write_byte",
  "zip"
 ],
 "deps": [
  [
   "events-0.3-py_0",
   "events-0.4-pyhd8ed1ab_0"
  ],
  [],
  [
   "lz4-1.1.0-py27h3b97293_1",
   "lz4-1.1.0-py36ha8eefa0_1001",
   "lz4-1.1.0-py37h3b97293_1",
   "lz4-2.2.1-py36hd79334b_0",
   "lz4-2.2.1-py37hd79334b_0",
   "lz4-3.0.2-py36hb0567cf_1",
   "lz4-3.0.2-py36hd35f07f_2",
   "lz4-3.0.2-py37hd79334b_0",
   "lz4-3.0.2-py38h66f7c9e_2",
   "lz4-3.0.2-py38hd79334b_0",
   "lz4-3.1.0-py36h70ad0e3_1",
   "lz4-3.1.0-py36hd35f07f_1",
   "lz4-3.1.0-py37h5a7ed16_1",
   "lz4-3.1.1-py36hf406cef_1",
   "lz4-3.1.2-py36hf406cef_0",
   "lz4-3.1.2-py37hfa9d782_0",
   "lz4-3.1.3-py37hfa9d782_0"
  ]
 ]
}