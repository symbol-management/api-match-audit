{
 "bad": [
  "Queue.Empty",
  "Queue.Full",
  "Queue.Queue",
  "StringIO",
  "StringIO.StringIO",
  "__future__.absolute_import",
  "__future__.division",
  "__new__",
  "__spec__.submodule_search_locations",
  "_handle_error",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "array",
  "array.array",
  "atexit",
  "atexit._exithandlers.remove",
  "atexit.register",
  "atexit.unregister",
  "binascii",
  "binascii.crc32",
  "buffer",
  "callback",
  "checker",
  "chunker",
  "collections",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "copy_reg",
  "copy_reg.pickle",
  "copyreg",
  "crc32c.crc32",
  "errno",
  "errno.EALREADY",
  "errno.EINPROGRESS",
  "errno.EINTR",
  "errno.EISCONN",
  "errno.EWOULDBLOCK",
  "errno.WSAEWOULDBLOCK",
  "errno.errorcode.get",
  "error_class",
  "error_type",
  "error_type.__name__",
  "f",
  "failed_payloads",
  "functools",
  "functools.partial",
  "functools.wraps",
  "gssapi",
  "gssapi.raw.misc.GSSError",
  "gzip",
  "gzip.GzipFile",
  "inspect",
  "inspect.getmembers",
  "inspect.isclass",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "itertools",
  "itertools.cycle",
  "itertools.imap",
  "itertools.izip_longest",
  "itertools.repeat",
  "itertools.zip_longest",
  "kafka.admin.acl_resource.ACLResourcePatternType.LITERAL.value",
  "kafka.client_async.selectors.DefaultSelector",
  "kafka.conn.ConnectionStates.DISCONNECTED",
  "kafka.coordinator.base.Generation.NO_GENERATION",
  "kafka.coordinator.protocol.ConsumerProtocol.ASSIGNMENT.decode",
  "kafka.coordinator.protocol.ConsumerProtocol.METADATA.decode",
  "kafka.coordinator.protocol.ConsumerProtocol.PROTOCOL_TYPE",
  "kafka.errors.kafka_errors.get",
  "kafka.protocol.KafkaProtocol.decode_consumer_metadata_response",
  "kafka.protocol.KafkaProtocol.decode_fetch_response",
  "kafka.protocol.KafkaProtocol.decode_list_offset_response",
  "kafka.protocol.KafkaProtocol.decode_metadata_response",
  "kafka.protocol.KafkaProtocol.decode_offset_commit_response",
  "kafka.protocol.KafkaProtocol.decode_offset_fetch_response",
  "kafka.protocol.KafkaProtocol.decode_offset_response",
  "kafka.protocol.KafkaProtocol.decode_produce_response",
  "kafka.protocol.KafkaProtocol.encode_consumer_metadata_request",
  "kafka.protocol.KafkaProtocol.encode_fetch_request",
  "kafka.protocol.KafkaProtocol.encode_list_offset_request",
  "kafka.protocol.KafkaProtocol.encode_metadata_request",
  "kafka.protocol.KafkaProtocol.encode_offset_commit_request",
  "kafka.protocol.KafkaProtocol.encode_offset_fetch_request",
  "kafka.protocol.KafkaProtocol.encode_offset_request",
  "kafka.protocol.KafkaProtocol.encode_produce_request",
  "kafka.protocol.commit.OffsetCommitRequest.DEFAULT_GENERATION_ID",
  "kafka.protocol.commit.OffsetCommitRequest.DEFAULT_RETENTION_TIME",
  "kafka.protocol.group.JoinGroupRequest.UNKNOWN_MEMBER_ID",
  "kafka.protocol.offset.OffsetResetStrategy.EARLIEST",
  "kafka.protocol.offset.OffsetResetStrategy.LATEST",
  "kafka.protocol.offset.OffsetResetStrategy.NONE",
  "kafka.record.legacy_records.LegacyRecordBatch.RECORD_OVERHEAD_V0",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_GZIP",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_LZ4",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_NONE",
  "kafka.record.legacy_records.LegacyRecordBatchBuilder.CODEC_SNAPPY",
  "kafka.vendor.six.moves.queue",
  "kafka.vendor.six.moves.queue.Empty",
  "kafka.vendor.six.moves.queue.Full",
  "kafka.vendor.six.moves.queue.Queue",
  "kafka.vendor.six.moves.range",
  "listener",
  "logging",
  "logging.DEBUG",
  "logging.Handler",
  "logging.NullHandler",
  "logging.WARNING",
  "logging.getLogger",
  "lz4.frame",
  "lz4.frame.compress",
  "lz4.frame.decompress",
  "lz4f",
  "lz4framed",
  "make_measure_fn",
  "math",
  "math.ceil",
  "math.sqrt",
  "member_type",
  "member_type.__dict__",
  "meta",
  "meta.__prepare__",
  "metaclass",
  "multiprocessing.Manager",
  "multiprocessing.Process",
  "new_err_cls",
  "numbers",
  "object.__new__",
  "operator",
  "operator.attrgetter",
  "operator.getitem",
  "operator.itemgetter",
  "operator.methodcaller",
  "platform",
  "platform.python_implementation",
  "queue.Empty",
  "queue.Full",
  "queue.Queue",
  "random",
  "random.choice",
  "random.randint",
  "random.shuffle",
  "random.uniform",
  "re",
  "re.compile",
  "select",
  "select.EPOLLIN",
  "select.EPOLLOUT",
  "select.KQ_EV_ADD",
  "select.KQ_EV_DELETE",
  "select.KQ_FILTER_READ",
  "select.KQ_FILTER_WRITE",
  "select.POLLIN",
  "select.POLLOUT",
  "select.error",
  "select.kevent",
  "select.select",
  "selectors",
  "sensor_name",
  "snappy",
  "socket",
  "socket.AF_INET",
  "socket.AF_INET6",
  "socket.AF_UNSPEC",
  "socket.IPPROTO_TCP",
  "socket.SOCK_STREAM",
  "socket.SOMAXCONN",
  "socket.TCP_NODELAY",
  "socket.error",
  "socket.gaierror",
  "socket.getaddrinfo",
  "socket.inet_pton",
  "socket.socket",
  "socket.socketpair",
  "socket.timeout",
  "ssl",
  "ssl.CERT_OPTIONAL",
  "ssl.CERT_REQUIRED",
  "ssl.OP_NO_SSLv2",
  "ssl.OP_NO_SSLv3",
  "ssl.PROTOCOL_SSLv23",
  "ssl.SSLContext",
  "ssl.SSLEOFError",
  "ssl.SSLError",
  "ssl.SSLWantReadError",
  "ssl.SSLWantWriteError",
  "ssl.SSLZeroReturnError",
  "ssl.VERIFY_CRL_CHECK_LEAF",
  "ssl.get_default_verify_paths",
  "struct",
  "struct.API_KEY",
  "struct.API_VERSION",
  "struct.Struct",
  "struct.calcsize",
  "struct.error",
  "struct.pack",
  "struct.pack_into",
  "struct.unpack",
  "struct.unpack_from",
  "sys",
  "sys._getframe",
  "sys.exc_info",
  "sys.maxsize",
  "sys.meta_path",
  "sys.meta_path.append",
  "sys.modules",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stdin.read",
  "sys.stdout",
  "sys.version_info",
  "threading",
  "threading.Condition",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "threading.current_thread",
  "time",
  "time.sleep",
  "time.time",
  "type.__new__",
  "types",
  "types.ClassType",
  "types.MethodType",
  "types.ModuleType",
  "unicode",
  "warnings",
  "warnings.warn",
  "weakref",
  "weakref.proxy",
  "write",
  "write_byte",
  "xxhash"
 ],
 "deps": {
  "Queue": [],
  "StringIO": [],
  "__future__": [],
  "__new__": [],
  "__spec__": [],
  "_handle_error": [],
  "abc": [],
  "array": [],
  "atexit": [],
  "binascii": [],
  "buffer": [],
  "callback": [],
  "checker": [],
  "chunker": [],
  "collections": [],
  "copy": [],
  "copy_reg": [],
  "copyreg": [],
  "crc32c": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "errno": [],
  "error_class": [],
  "error_type": [],
  "f": [],
  "failed_payloads": [],
  "functools": [],
  "gssapi": [],
  "gzip": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "kafka": [],
  "listener": [],
  "logging": [],
  "lz4": [],
  "lz4f": [],
  "lz4framed": [],
  "make_measure_fn": [],
  "math": [],
  "member_type": [],
  "meta": [],
  "metaclass": [],
  "multiprocessing": [],
  "new_err_cls": [],
  "numbers": [],
  "object": [],
  "operator": [],
  "platform": [],
  "queue": [],
  "random": [],
  "re": [],
  "select": [],
  "selectors": [],
  "sensor_name": [],
  "snappy": [],
  "socket": [],
  "ssl": [],
  "struct": [],
  "sys": [],
  "threading": [],
  "time": [],
  "type": [],
  "types": [],
  "unicode": [],
  "warnings": [],
  "weakref": [],
  "write": [],
  "write_byte": [],
  "xxhash": []
 }
}