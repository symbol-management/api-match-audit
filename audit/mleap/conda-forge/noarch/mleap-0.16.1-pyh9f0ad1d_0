{
 "bad": [
  "collections.OrderedDict",
  "datetime.datetime.now",
  "enum.Enum",
  "gensim.models.Word2Vec",
  "json.dump",
  "json.load",
  "logging.ERROR",
  "logging.getLogger",
  "math.exp",
  "math.sin",
  "mleap.__version__",
  "mleap.bundle.serialize.MLeapDeserializer",
  "mleap.bundle.serialize.MLeapSerializer",
  "mleap.bundle.serialize.Vector",
  "mleap.bundle.serialize._type_map",
  "mleap.gensim.word2vec.SimpleSparkSerializer",
  "mleap.gensim.word2vec.Word2Vec",
  "mleap.gensim.word2vec.mleap_init",
  "mleap.gensim.word2vec.sent2vec",
  "mleap.gensim.word2vec.serialize_to_bundle",
  "mleap.pyspark.feature.math_binary.BinaryOperation",
  "mleap.pyspark.feature.math_binary.BinaryOperation.Add",
  "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
  "mleap.pyspark.feature.math_binary.MathBinary",
  "mleap.pyspark.feature.math_unary.MathUnary",
  "mleap.pyspark.feature.math_unary.UnaryOperation",
  "mleap.pyspark.feature.math_unary.UnaryOperation.Exp",
  "mleap.pyspark.feature.math_unary.UnaryOperation.Sin",
  "mleap.pyspark.feature.string_map.StringMap",
  "mleap.pyspark.feature.string_map.StringMap.from_dataframe",
  "mleap.pyspark.py2scala.ScalaNone",
  "mleap.pyspark.py2scala.Some",
  "mleap.pyspark.py2scala.jvm_scala_object",
  "mleap.pyspark.spark_support.SimpleSparkSerializer",
  "mleap.pyspark.spark_support.deserializeFromBundle",
  "mleap.pyspark.spark_support.serializeToBundle",
  "mleap.sklearn.base.LinearRegression",
  "mleap.sklearn.base.SimpleSerializer",
  "mleap.sklearn.base.deserialize_from_bundle",
  "mleap.sklearn.base.mleap_init",
  "mleap.sklearn.base.serialize_to_bundle",
  "mleap.sklearn.decomposition.pca.SimpleSparkSerializer",
  "mleap.sklearn.decomposition.pca.mleap_init",
  "mleap.sklearn.decomposition.pca.serialize_to_bundle",
  "mleap.sklearn.ensemble.forest.SimpleSerializer",
  "mleap.sklearn.ensemble.forest.mleap_init",
  "mleap.sklearn.ensemble.forest.serialize_to_bundle",
  "mleap.sklearn.extensions.data.Imputer",
  "mleap.sklearn.feature_extraction.text.CountVectorizer",
  "mleap.sklearn.feature_extraction.text.CountVectorizerSerializer",
  "mleap.sklearn.feature_extraction.text.TfidfStep",
  "mleap.sklearn.feature_extraction.text.TfidfVectorizer",
  "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer",
  "mleap.sklearn.feature_extraction.text.mleap_init",
  "mleap.sklearn.feature_extraction.text.ops",
  "mleap.sklearn.feature_extraction.text.serialize_to_bundle",
  "mleap.sklearn.feature_union.SimplekSerializer",
  "mleap.sklearn.feature_union.deserialize_from_bundle",
  "mleap.sklearn.feature_union.mleap_init",
  "mleap.sklearn.feature_union.serialize_to_bundle",
  "mleap.sklearn.logistic.LogisticRegression",
  "mleap.sklearn.logistic.LogisticRegressionCV",
  "mleap.sklearn.logistic.SimpleSerializer",
  "mleap.sklearn.logistic.deserialize_from_bundle",
  "mleap.sklearn.logistic.mleap_init",
  "mleap.sklearn.logistic.serialize_to_bundle",
  "mleap.sklearn.pipeline.SimpleSerializer",
  "mleap.sklearn.pipeline.deserialize_from_bundle",
  "mleap.sklearn.pipeline.mleap_init",
  "mleap.sklearn.pipeline.serialize_to_bundle",
  "mleap.sklearn.pipeline.zip_pipeline",
  "mleap.sklearn.preprocessing.data.Binarizer",
  "mleap.sklearn.preprocessing.data.BinarizerSerializer",
  "mleap.sklearn.preprocessing.data.FeatureExtractor",
  "mleap.sklearn.preprocessing.data.Imputer",
  "mleap.sklearn.preprocessing.data.ImputerSerializer",
  "mleap.sklearn.preprocessing.data.LabelEncoder",
  "mleap.sklearn.preprocessing.data.MathBinary",
  "mleap.sklearn.preprocessing.data.MathUnary",
  "mleap.sklearn.preprocessing.data.MinMaxScaler",
  "mleap.sklearn.preprocessing.data.MinMaxScalerSerializer",
  "mleap.sklearn.preprocessing.data.OneHotEncoder",
  "mleap.sklearn.preprocessing.data.OneHotEncoderSerializer",
  "mleap.sklearn.preprocessing.data.PolynomialExpansionSerializer",
  "mleap.sklearn.preprocessing.data.PolynomialFeatures",
  "mleap.sklearn.preprocessing.data.SimpleSerializer",
  "mleap.sklearn.preprocessing.data.StandardScaler",
  "mleap.sklearn.preprocessing.data.StandardScalerSerializer",
  "mleap.sklearn.preprocessing.data.StringMap",
  "mleap.sklearn.preprocessing.data._check_numpy_unicode_bug",
  "mleap.sklearn.preprocessing.data._to_list",
  "mleap.sklearn.preprocessing.data.deserialize_from_bundle",
  "mleap.sklearn.preprocessing.data.mleap_init",
  "mleap.sklearn.preprocessing.data.ops",
  "mleap.sklearn.preprocessing.data.serialize_to_bundle",
  "mleap.sklearn.svm.SimpleSerializer",
  "mleap.sklearn.svm.deserialize_from_bundle",
  "mleap.sklearn.svm.mleap_init",
  "mleap.sklearn.svm.serialize_to_bundle",
  "mleap.sklearn.tree.tree.DecisionTreeClassifier",
  "mleap.sklearn.tree.tree.SimpleSerializer",
  "mleap.sklearn.tree.tree.mleap_init",
  "mleap.sklearn.tree.tree.serialize_to_bundle",
  "mleap.version.version",
  "numpy.NaN",
  "numpy.abs",
  "numpy.add",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.cos",
  "numpy.cumsum",
  "numpy.divide",
  "numpy.exp",
  "numpy.float32",
  "numpy.float64",
  "numpy.hstack",
  "numpy.intersect1d",
  "numpy.log",
  "numpy.multiply",
  "numpy.ndarray",
  "numpy.object_",
  "numpy.random.randn",
  "numpy.remainder",
  "numpy.reshape",
  "numpy.searchsorted",
  "numpy.setdiff1d",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.square",
  "numpy.subtract",
  "numpy.tan",
  "numpy.testing.assert_array_equal",
  "numpy.unique",
  "numpy.var",
  "numpy.zeros",
  "os.environ",
  "os.mkdir",
  "os.path.abspath",
  "os.path.exists",
  "os.path.join",
  "os.walk",
  "pandas.DataFrame",
  "pandas.testing.assert_frame_equal",
  "pandas.util.testing.assert_frame_equal",
  "py4j.protocol.Py4JJavaError",
  "pyspark.keyword_only",
  "pyspark.ml.Pipeline",
  "pyspark.ml.base.Transformer",
  "pyspark.ml.param.shared.HasInputCol",
  "pyspark.ml.param.shared.HasOutputCol",
  "pyspark.ml.param.shared.Param",
  "pyspark.ml.param.shared.Params._dummy",
  "pyspark.ml.param.shared.TypeConverters.toString",
  "pyspark.ml.util.JavaMLReadable",
  "pyspark.ml.util.JavaMLWritable",
  "pyspark.ml.util._jvm",
  "pyspark.ml.wrapper.JavaTransformer",
  "pyspark.ml.wrapper.JavaTransformer._from_java",
  "pyspark.sql.DataFrame",
  "pyspark.sql.SparkSession.builder.config",
  "pyspark.sql.types.DoubleType",
  "pyspark.sql.types.FloatType",
  "pyspark.sql.types.StringType",
  "pyspark.sql.types.StructField",
  "pyspark.sql.types.StructType",
  "re.search",
  "shutil.rmtree",
  "six.string_types",
  "sklearn.datasets.load_iris",
  "sklearn.decomposition.pca.PCA",
  "sklearn.ensemble.forest.RandomForestClassifier",
  "sklearn.ensemble.forest.RandomForestRegressor",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.TfidfVectorizer",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.LogisticRegressionCV",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.Binarizer",
  "sklearn.preprocessing.Imputer",
  "sklearn.preprocessing.Imputer.__init__",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.PolynomialFeatures",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.data.BaseEstimator",
  "sklearn.preprocessing.data.OneHotEncoder",
  "sklearn.preprocessing.data.TransformerMixin",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVC",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree._tree.TREE_UNDEFINED",
  "sklearn.utils.column_or_1d",
  "sklearn.utils.fixes.np_version",
  "sklearn.utils.validation.check_is_fitted",
  "sys.modules",
  "sys.modules.mleap",
  "sys.modules.mleap.feature",
  "sys.modules.mleap.feature.MathBinary",
  "sys.modules.mleap.feature.MathUnary",
  "sys.modules.mleap.feature.StringMap",
  "tempfile.mkdtemp",
  "tests.pyspark.feature.math_binary_test.INPUT_SCHEMA",
  "tests.pyspark.feature.math_unary_test.INPUT_SCHEMA",
  "tests.pyspark.feature.string_map_test.INPUT_SCHEMA",
  "tests.pyspark.feature.string_map_test.OUTPUT_SCHEMA",
  "tests.pyspark.feature.string_map_test.StringMapTest",
  "tests.pyspark.feature.string_map_test._deserialize_from_file",
  "tests.pyspark.feature.string_map_test._serialize_to_file",
  "tests.pyspark.feature.string_map_test._to_jar_file_path",
  "tests.pyspark.lib.assertions._print_dfs",
  "tests.pyspark.lib.assertions.assert_df",
  "tests.pyspark.lib.spark_session.spark_session",
  "tests.sklearn.base_tests.to_standard_normal_quartile",
  "traverse",
  "unittest.TestCase",
  "uuid.uuid1",
  "uuid.uuid4",
  "validate_args",
  "warnings.warn",
  "zipfile.ZIP_DEFLATED",
  "zipfile.ZipFile"
 ],
 "deps": {
  "collections": [],
  "datetime": [],
  "enum": [],
  "gensim": [],
  "json": [],
  "logging": [],
  "math": [],
  "mleap": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "py4j": [],
  "pyspark": [],
  "re": [],
  "shutil": [],
  "six": [],
  "sklearn": [],
  "sys": [],
  "tempfile": [],
  "tests": [],
  "traverse": [],
  "unittest": [],
  "uuid": [],
  "validate_args": [],
  "warnings": [],
  "zipfile": []
 }
}