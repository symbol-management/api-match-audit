{
 "bad": [
  "dill.dumps",
  "dill.loads",
  "examples.autoencoder_example.df",
  "examples.autoencoder_example.mg",
  "examples.autoencoder_example.na",
  "examples.autoencoder_example.small_model",
  "examples.autoencoder_example.spark",
  "examples.autoencoder_example.spark_model",
  "examples.autoencoder_example.t",
  "examples.autoencoder_example.va",
  "examples.cnn_example.cnn_model",
  "examples.cnn_example.df",
  "examples.cnn_example.encoded",
  "examples.cnn_example.mg",
  "examples.cnn_example.p",
  "examples.cnn_example.spark",
  "examples.cnn_example.spark_model",
  "examples.cnn_example.va",
  "examples.simple_dnn.accuracy",
  "examples.simple_dnn.adam_config",
  "examples.simple_dnn.df",
  "examples.simple_dnn.encoder",
  "examples.simple_dnn.evaluator",
  "examples.simple_dnn.loaded_pipeline",
  "examples.simple_dnn.mg",
  "examples.simple_dnn.p",
  "examples.simple_dnn.predictions",
  "examples.simple_dnn.small_model",
  "examples.simple_dnn.spark",
  "examples.simple_dnn.spark_model",
  "examples.simple_dnn.vector_assembler",
  "flask.Flask",
  "flask.request.data",
  "google.protobuf.json_format.MessageToJson",
  "google.protobuf.json_format.Parse",
  "itertools.count",
  "json.dumps",
  "json.loads",
  "logging.ERROR",
  "logging.getLogger",
  "multiprocessing.Process",
  "multiprocessing.set_start_method",
  "numpy.asarray",
  "numpy.random.choice",
  "pickle.dumps",
  "pickle.loads",
  "pyspark.SparkContext._active_spark_context.getConf",
  "pyspark.context.SparkContext._active_spark_context",
  "pyspark.keyword_only",
  "pyspark.ml.Model",
  "pyspark.ml.Pipeline",
  "pyspark.ml.PipelineModel",
  "pyspark.ml.base.Estimator",
  "pyspark.ml.evaluation.MulticlassClassificationEvaluator",
  "pyspark.ml.feature.Normalizer",
  "pyspark.ml.feature.OneHotEncoder",
  "pyspark.ml.feature.StopWordsRemover",
  "pyspark.ml.feature.VectorAssembler",
  "pyspark.ml.linalg.Vectors.dense",
  "pyspark.ml.param.Param",
  "pyspark.ml.param.Params._dummy",
  "pyspark.ml.param.TypeConverters.toBoolean",
  "pyspark.ml.param.TypeConverters.toFloat",
  "pyspark.ml.param.TypeConverters.toInt",
  "pyspark.ml.param.TypeConverters.toString",
  "pyspark.ml.param.shared.HasInputCol",
  "pyspark.ml.param.shared.HasLabelCol",
  "pyspark.ml.param.shared.HasPredictionCol",
  "pyspark.ml.pipeline.Pipeline",
  "pyspark.ml.pipeline.PipelineModel",
  "pyspark.ml.pipeline.PipelineModel.load",
  "pyspark.ml.util.Identifiable",
  "pyspark.ml.util.JavaMLReader",
  "pyspark.ml.util.JavaMLWriter",
  "pyspark.ml.util.MLReadable",
  "pyspark.ml.util.MLWritable",
  "pyspark.ml.wrapper.JavaParams._new_java_obj",
  "pyspark.sql.Row",
  "pyspark.sql.SparkSession.builder.appName",
  "pyspark.sql.functions.rand",
  "requests.get",
  "requests.post",
  "socket.gethostbyname",
  "socket.gethostname",
  "sparkflow.HogwildSparkModel.HogwildSparkModel",
  "sparkflow.HogwildSparkModel.get_server_weights",
  "sparkflow.HogwildSparkModel.handle_model",
  "sparkflow.HogwildSparkModel.log",
  "sparkflow.HogwildSparkModel.put_deltas_to_server",
  "sparkflow.RWLock.RWLock",
  "sparkflow.graph_utils.build_adam_config",
  "sparkflow.graph_utils.build_graph",
  "sparkflow.graph_utils.generate_config",
  "sparkflow.ml_util.convert_weights_to_json",
  "sparkflow.ml_util.handle_features",
  "sparkflow.ml_util.handle_feed_dict",
  "sparkflow.ml_util.handle_shuffle",
  "sparkflow.ml_util.predict_func",
  "sparkflow.ml_util.tensorflow_get_weights",
  "sparkflow.ml_util.tensorflow_set_weights",
  "sparkflow.pipeline_util.PysparkObjId",
  "sparkflow.pipeline_util.PysparkPipelineWrapper",
  "sparkflow.pipeline_util.PysparkPipelineWrapper.unwrap",
  "sparkflow.pipeline_util.PysparkReaderWriter",
  "sparkflow.pipeline_util.load_byte_array",
  "sparkflow.tensorflow_async.SparkAsyncDL",
  "sparkflow.tensorflow_async.SparkAsyncDLModel",
  "sparkflow.tensorflow_async.build_optimizer",
  "sparkflow.tensorflow_async.handle_data",
  "sparkflow.tensorflow_model_loader.load_tensorflow_model",
  "sys.version_info",
  "tensorflow.Graph",
  "tensorflow.GraphKeys.LOSSES",
  "tensorflow.MetaGraphDef",
  "tensorflow.Session",
  "tensorflow.argmax",
  "tensorflow.float32",
  "tensorflow.get_collection",
  "tensorflow.get_default_graph",
  "tensorflow.get_default_session",
  "tensorflow.global_variables_initializer",
  "tensorflow.glorot_uniform_initializer",
  "tensorflow.gradients",
  "tensorflow.layers.conv2d",
  "tensorflow.layers.dense",
  "tensorflow.layers.flatten",
  "tensorflow.layers.max_pooling2d",
  "tensorflow.losses.mean_squared_error",
  "tensorflow.losses.softmax_cross_entropy",
  "tensorflow.nn.relu",
  "tensorflow.nn.sigmoid",
  "tensorflow.placeholder",
  "tensorflow.reshape",
  "tensorflow.train.AdadeltaOptimizer",
  "tensorflow.train.AdagradDAOptimizer",
  "tensorflow.train.AdagradOptimizer",
  "tensorflow.train.AdamOptimizer",
  "tensorflow.train.FtrlOptimizer",
  "tensorflow.train.GradientDescentOptimizer",
  "tensorflow.train.MomentumOptimizer",
  "tensorflow.train.ProximalAdagradOptimizer",
  "tensorflow.train.ProximalGradientDescentOptimizer",
  "tensorflow.train.RMSPropOptimizer",
  "tensorflow.train.Server.create_local_server",
  "tensorflow.train.export_meta_graph",
  "tensorflow.train.import_meta_graph",
  "tensorflow.train.latest_checkpoint",
  "tensorflow.trainable_variables",
  "threading.Condition",
  "threading.Lock",
  "time.sleep",
  "uuid.uuid4",
  "zlib.compress",
  "zlib.decompress"
 ],
 "deps": {
  "dill": [],
  "examples": [],
  "flask": [],
  "google": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "multiprocessing": [],
  "numpy": [],
  "pickle": [],
  "pyspark": [],
  "requests": [],
  "socket": [],
  "sparkflow": [],
  "sys": [],
  "tensorflow": [],
  "threading": [],
  "time": [],
  "uuid": [],
  "zlib": []
 }
}