{
 "bad": [
  "_utils.SECP256K1_N",
  "_utils.ec_point",
  "_utils.hmac_sha512",
  "_utils.normalize_string",
  "_utils.pbkdf2_hmac_sha512",
  "_utils.sha256",
  "abc.ABC",
  "abc.abstractmethod",
  "bitarray.bitarray",
  "bitarray.util.ba2int",
  "bitarray.util.int2ba",
  "collections.abc.Mapping",
  "cytoolz.curry",
  "cytoolz.dissoc",
  "cytoolz.identity",
  "cytoolz.merge",
  "cytoolz.partial",
  "cytoolz.pipe",
  "deterministic.HDPath",
  "eth_account._utils.signing.CHAIN_ID_OFFSET",
  "eth_account._utils.signing.V_OFFSET",
  "eth_account._utils.signing._pad_to_eth_word",
  "eth_account._utils.signing.extract_chain_id",
  "eth_account._utils.signing.hash_of_signed_transaction",
  "eth_account._utils.signing.sign_message_hash",
  "eth_account._utils.signing.sign_transaction_dict",
  "eth_account._utils.signing.sign_transaction_hash",
  "eth_account._utils.signing.to_bytes32",
  "eth_account._utils.signing.to_eth_v",
  "eth_account._utils.signing.to_standard_signature_bytes",
  "eth_account._utils.signing.to_standard_v",
  "eth_account._utils.structured_data.hashing._encode_data",
  "eth_account._utils.structured_data.hashing.encode_data",
  "eth_account._utils.structured_data.hashing.encode_struct",
  "eth_account._utils.structured_data.hashing.encode_type",
  "eth_account._utils.structured_data.hashing.field_identifier",
  "eth_account._utils.structured_data.hashing.flatten_multidimensional_array",
  "eth_account._utils.structured_data.hashing.get_array_dimensions",
  "eth_account._utils.structured_data.hashing.get_dependencies",
  "eth_account._utils.structured_data.hashing.get_depths_and_dimensions",
  "eth_account._utils.structured_data.hashing.hash_domain",
  "eth_account._utils.structured_data.hashing.hash_message",
  "eth_account._utils.structured_data.hashing.hash_struct_type",
  "eth_account._utils.structured_data.hashing.is_array_type",
  "eth_account._utils.structured_data.hashing.load_and_validate_structured_message",
  "eth_account._utils.structured_data.validation.IDENTIFIER_REGEX",
  "eth_account._utils.structured_data.validation.TYPE_REGEX",
  "eth_account._utils.structured_data.validation.validate_EIP712Domain_schema",
  "eth_account._utils.structured_data.validation.validate_field_declared_only_once_in_struct",
  "eth_account._utils.structured_data.validation.validate_has_attribute",
  "eth_account._utils.structured_data.validation.validate_primaryType_attribute",
  "eth_account._utils.structured_data.validation.validate_types_attribute",
  "eth_account._utils.transactions.ALLOWED_TRANSACTION_KEYS",
  "eth_account._utils.transactions.ChainAwareUnsignedTransaction",
  "eth_account._utils.transactions.REQUIRED_TRANSACITON_KEYS",
  "eth_account._utils.transactions.TRANSACTION_DEFAULTS",
  "eth_account._utils.transactions.TRANSACTION_VALID_VALUES",
  "eth_account._utils.transactions.Transaction",
  "eth_account._utils.transactions.Transaction.from_bytes",
  "eth_account._utils.transactions.UNSIGNED_TRANSACTION_FIELDS",
  "eth_account._utils.transactions.UnsignedTransaction",
  "eth_account._utils.transactions.VALID_EMPTY_ADDRESSES",
  "eth_account._utils.transactions.assert_valid_fields",
  "eth_account._utils.transactions.encode_transaction",
  "eth_account._utils.transactions.is_empty_or_checksum_address",
  "eth_account._utils.transactions.is_int_or_prefixed_hexstr",
  "eth_account._utils.transactions.is_none",
  "eth_account._utils.transactions.serializable_unsigned_transaction_from_dict",
  "eth_account._utils.transactions.strip_signature",
  "eth_account._utils.transactions.vrs_from",
  "eth_account._utils.validation.is_valid_address",
  "eth_account.datastructures.SignedMessage",
  "eth_account.datastructures.SignedTransaction",
  "eth_account.datastructures.__getitem__",
  "eth_account.hdaccount.ETHEREUM_DEFAULT_PATH",
  "eth_account.hdaccount._utils.PBKDF2_ROUNDS",
  "eth_account.hdaccount.deterministic.BASE_NODE_IDENTIFIERS",
  "eth_account.hdaccount.deterministic.HARD_NODE_SUFFIXES",
  "eth_account.hdaccount.deterministic.HardNode",
  "eth_account.hdaccount.deterministic.Node",
  "eth_account.hdaccount.deterministic.SoftNode",
  "eth_account.hdaccount.deterministic.derive_child_key",
  "eth_account.hdaccount.generate_mnemonic",
  "eth_account.hdaccount.key_from_seed",
  "eth_account.hdaccount.mnemonic.Mnemonic",
  "eth_account.hdaccount.mnemonic.VALID_ENTROPY_SIZES",
  "eth_account.hdaccount.mnemonic.VALID_WORD_COUNTS",
  "eth_account.hdaccount.mnemonic.WORDLIST_DIR",
  "eth_account.hdaccount.mnemonic.WORDLIST_LEN",
  "eth_account.hdaccount.mnemonic.get_wordlist",
  "eth_account.hdaccount.seed_from_mnemonic",
  "eth_account.messages.SignableMessage",
  "eth_account.messages._hash_eip191_message",
  "eth_account.messages.encode_defunct",
  "eth_account.signers.base.BaseAccount",
  "eth_account.signers.local.LocalAccount",
  "eth_keyfile.create_keyfile_json",
  "eth_keyfile.decode_keyfile_json",
  "eth_keys.keys.PrivateKey",
  "eth_utils.ValidationError",
  "eth_utils.curried.ValidationError",
  "eth_utils.curried.apply_formatters_to_dict",
  "eth_utils.curried.apply_one_of_formatters",
  "eth_utils.curried.combomethod",
  "eth_utils.curried.hexstr_if_str",
  "eth_utils.curried.is_0x_prefixed",
  "eth_utils.curried.is_bytes",
  "eth_utils.curried.is_dict",
  "eth_utils.curried.is_integer",
  "eth_utils.curried.is_string",
  "eth_utils.curried.keccak",
  "eth_utils.curried.text_if_str",
  "eth_utils.curried.to_bytes",
  "eth_utils.curried.to_canonical_address",
  "eth_utils.curried.to_int",
  "eth_utils.curried.to_text",
  "eth_utils.is_binary_address",
  "eth_utils.is_checksum_address",
  "eth_utils.keccak",
  "eth_utils.to_bytes",
  "eth_utils.to_int",
  "eth_utils.to_tuple",
  "eth_utils.toolz.first",
  "hashlib.pbkdf2_hmac",
  "hashlib.sha256",
  "hashlib.sha512",
  "hmac.new",
  "int.__new__",
  "itertools.groupby",
  "itertools.islice",
  "json.dumps",
  "json.loads",
  "mnemonic.Mnemonic",
  "mnemonic.Mnemonic.detect_language",
  "mnemonic.Mnemonic.to_seed",
  "node_class",
  "operator.itemgetter",
  "os.getenv",
  "os.urandom",
  "re.match",
  "rlp.sedes.Binary.fixed_length",
  "tuple.__getitem__",
  "typing.Dict",
  "typing.List",
  "typing.NamedTuple",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "unicodedata.normalize",
  "validation.is_valid_address",
  "validation.validate_structured_data",
  "warnings.warn"
 ],
 "deps": {
  "_utils": [],
  "abc": [],
  "bitarray": [],
  "collections": [],
  "cytoolz": [],
  "deterministic": [],
  "eth_abi": [
   "eth-abi/conda-forge/noarch/eth-abi-2.1.1-py_2"
  ],
  "eth_account": [],
  "eth_keyfile": [],
  "eth_keys": [
   "eth-keys/conda-forge/noarch/eth-keys-0.3.3-pyh9f0ad1d_0"
  ],
  "eth_rlp": [
   "eth-rlp/conda-forge/noarch/eth-rlp-0.2.0-py_0"
  ],
  "eth_typing": [
   "eth-typing/conda-forge/noarch/eth-typing-2.2.1-py_0"
  ],
  "eth_utils": [],
  "hashlib": [],
  "hexbytes": [
   "hexbytes/conda-forge/noarch/hexbytes-0.2.1-py_0"
  ],
  "hmac": [],
  "int": [],
  "itertools": [],
  "json": [],
  "mnemonic": [],
  "node_class": [],
  "operator": [],
  "os": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "re": [],
  "rlp": [
   "rlp/conda-forge/noarch/rlp-2.0.1-pyhd3deb0d_0"
  ],
  "secrets": [
   "python2-secrets/conda-forge/noarch/python2-secrets-1.0.5-py_0"
  ],
  "tuple": [],
  "typing": [],
  "unicodedata": [],
  "validation": [],
  "warnings": []
 }
}