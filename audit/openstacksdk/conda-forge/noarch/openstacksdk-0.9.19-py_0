{
 "bad": [
  "AnotherType",
  "Child",
  "Example",
  "FakestResource",
  "Nope",
  "Parent",
  "Person_ES",
  "Test._alternate_id",
  "Test._body_mapping",
  "Test._get_one_match",
  "Test._header_mapping",
  "Test._uri_mapping",
  "Test.base_path",
  "Test.existing",
  "Test.find",
  "Test.id_attribute",
  "Test.list",
  "Test.new",
  "TestResourceBar",
  "TestResourceFoo",
  "abc",
  "abc.ABCMeta",
  "cls",
  "collections",
  "collections.MutableMapping",
  "collections.namedtuple",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "decorated",
  "examples.compute.create",
  "examples.compute.create.create_server",
  "examples.compute.delete",
  "examples.compute.delete.delete_keypair",
  "examples.compute.delete.delete_server",
  "examples.compute.find",
  "examples.compute.find.find_flavor",
  "examples.compute.find.find_image",
  "examples.compute.find.find_keypair",
  "examples.compute.list",
  "examples.compute.list.list_flavors",
  "examples.compute.list.list_images",
  "examples.compute.list.list_keypairs",
  "examples.compute.list.list_servers",
  "examples.connect",
  "examples.connect.create_connection_from_config",
  "examples.identity.list",
  "examples.identity.list.list_credentials",
  "examples.identity.list.list_domains",
  "examples.identity.list.list_endpoints",
  "examples.identity.list.list_groups",
  "examples.identity.list.list_projects",
  "examples.identity.list.list_regions",
  "examples.identity.list.list_services",
  "examples.identity.list.list_users",
  "examples.image.create",
  "examples.image.create.upload_image",
  "examples.image.delete",
  "examples.image.delete.delete_image",
  "examples.image.list",
  "examples.image.list.list_images",
  "examples.network.create",
  "examples.network.create.create_network",
  "examples.network.delete",
  "examples.network.delete.delete_network",
  "examples.network.find",
  "examples.network.find.find_network",
  "examples.network.list",
  "examples.network.list.list_networks",
  "examples.network.list.list_ports",
  "examples.network.list.list_routers",
  "examples.network.list.list_security_groups",
  "examples.network.list.list_subnets",
  "fake_open",
  "fixtures",
  "fixtures.EnvironmentVariable",
  "fixtures.FakeLogger",
  "fixtures.MonkeyPatch",
  "fixtures.NestedTempfile",
  "fixtures.StringStream",
  "fixtures.TempDir",
  "fixtures.TempHomeDir",
  "fixtures.Timeout",
  "func",
  "functools",
  "functools.partial",
  "get_one_match",
  "hashlib",
  "hashlib.md5",
  "id.deleter",
  "itertools",
  "itertools.accumulate",
  "itertools.chain",
  "json",
  "json.JSONEncoder",
  "json.dumps",
  "json.loads",
  "keystoneauth1.exceptions.ClientException",
  "keystoneauth1.exceptions.EndpointNotFound",
  "keystoneauth1.exceptions.HttpError",
  "keystoneauth1.exceptions.VersionNotAvailable",
  "keystoneauth1.session.create_by_id",
  "keystoneauth1.session.get",
  "keystoneauth1.session.get.call_count",
  "keystoneauth1.session.get.side_effect",
  "keystoneauth1.session.update_by_id",
  "logging",
  "logging.DEBUG",
  "logging.FileHandler",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "method",
  "mock",
  "mock.ANY",
  "mock.MagicMock",
  "mock.Mock",
  "mock.PropertyMock",
  "mock.call",
  "mock.mock_open",
  "mock.patch",
  "mock.patch.object",
  "mock.sentinel.project_id",
  "mock.sentinel.result_set_tags",
  "object.__getattribute__",
  "openstack.bare_metal.bare_metal_service.BareMetalService.UNVERSIONED",
  "openstack.block_store.v2.snapshot.id",
  "openstack.block_store.v2.snapshot.name",
  "openstack.block_store.v2.type.Type.new",
  "openstack.block_store.v2.volume.id",
  "openstack.block_store.v2.volume.name",
  "openstack.cluster.cluster_service.ClusterService.UNVERSIONED",
  "openstack.cluster.v1.cluster.Cluster.new",
  "openstack.cluster.v1.cluster_policy.ClusterPolicy.new",
  "openstack.cluster.v1.node.Node.new",
  "openstack.cluster.v1.node.adopt",
  "openstack.compute.compute_service.ComputeService.UNVERSIONED",
  "openstack.compute.v2.image.Image.existing",
  "openstack.compute.v2.server.Server.existing",
  "openstack.compute.v2.server.add_fixed_ip",
  "openstack.compute.v2.server.add_floating_ip",
  "openstack.compute.v2.server.add_security_group",
  "openstack.compute.v2.server.backup",
  "openstack.compute.v2.server.change_password",
  "openstack.compute.v2.server.confirm_resize",
  "openstack.compute.v2.server.create_image",
  "openstack.compute.v2.server.evacuate",
  "openstack.compute.v2.server.force_delete",
  "openstack.compute.v2.server.get_console_output",
  "openstack.compute.v2.server.live_migrate",
  "openstack.compute.v2.server.lock",
  "openstack.compute.v2.server.migrate",
  "openstack.compute.v2.server.pause",
  "openstack.compute.v2.server.reboot",
  "openstack.compute.v2.server.rebuild",
  "openstack.compute.v2.server.remove_fixed_ip",
  "openstack.compute.v2.server.remove_floating_ip",
  "openstack.compute.v2.server.remove_security_group",
  "openstack.compute.v2.server.rescue",
  "openstack.compute.v2.server.resize",
  "openstack.compute.v2.server.resume",
  "openstack.compute.v2.server.revert_resize",
  "openstack.compute.v2.server.shelve",
  "openstack.compute.v2.server.start",
  "openstack.compute.v2.server.stop",
  "openstack.compute.v2.server.suspend",
  "openstack.compute.v2.server.unlock",
  "openstack.compute.v2.server.unpause",
  "openstack.compute.v2.server.unrescue",
  "openstack.compute.v2.server.unshelve",
  "openstack.compute.v2.service.disable",
  "openstack.compute.v2.service.enable",
  "openstack.compute.v2.service.force_down",
  "openstack.database.v1.instance.id",
  "openstack.identity.identity_service.IdentityService.UNVERSIONED",
  "openstack.identity.v3.domain.id",
  "openstack.identity.v3.group.id",
  "openstack.identity.v3.project.id",
  "openstack.identity.v3.user.id",
  "openstack.image.v2.image.__name__",
  "openstack.image.v2.image.add_tag",
  "openstack.image.v2.image.deactivate",
  "openstack.image.v2.image.download",
  "openstack.image.v2.image.reactivate",
  "openstack.image.v2.image.remove_tag",
  "openstack.load_balancer.load_balancer_service.LoadBalancerService.UNVERSIONED",
  "openstack.load_balancer.v2.pool.name",
  "openstack.message.message_service.MessageService.UNVERSIONED",
  "openstack.message.v1.claim.Claim.new",
  "openstack.message.v1.message.Message.new",
  "openstack.message.v2.claim.Claim.new",
  "openstack.message.v2.message.Message.new",
  "openstack.message.v2.message.claim_id",
  "openstack.message.v2.message.post",
  "openstack.message.v2.queue.Queue.new",
  "openstack.message.v2.subscription.Subscription.new",
  "openstack.network.network_service.NetworkService.UNVERSIONED",
  "openstack.network.v2.address_scope.id",
  "openstack.network.v2.address_scope.name",
  "openstack.network.v2.agent.add_agent_to_network",
  "openstack.network.v2.agent.add_router_to_agent",
  "openstack.network.v2.agent.id",
  "openstack.network.v2.agent.remove_agent_from_network",
  "openstack.network.v2.agent.remove_router_from_agent",
  "openstack.network.v2.flavor.associate_flavor_with_service_profile",
  "openstack.network.v2.flavor.disassociate_flavor_from_service_profile",
  "openstack.network.v2.flavor.name",
  "openstack.network.v2.floating_ip.FloatingIP.base_path",
  "openstack.network.v2.floating_ip.FloatingIP.resources_key",
  "openstack.network.v2.floating_ip.FloatingIP.service",
  "openstack.network.v2.network.Network.new",
  "openstack.network.v2.network.id",
  "openstack.network.v2.port.id",
  "openstack.network.v2.qos_policy.QoSPolicy.new",
  "openstack.network.v2.router.Router.new",
  "openstack.network.v2.router.add_gateway",
  "openstack.network.v2.router.add_interface",
  "openstack.network.v2.router.id",
  "openstack.network.v2.router.remove_gateway",
  "openstack.network.v2.router.remove_interface",
  "openstack.network.v2.service_profile.id",
  "openstack.network.v2.subnet_pool.id",
  "openstack.network.v2.subnet_pool.name",
  "openstack.network.v2.tag.TagMixin._tag_query_parameters",
  "openstack.object_store.v1.account.Account.new",
  "openstack.object_store.v1.account.delete_metadata",
  "openstack.object_store.v1.account.set_metadata",
  "openstack.object_store.v1.container.Container.existing",
  "openstack.object_store.v1.container.Container.from_id",
  "openstack.object_store.v1.container.Container.list",
  "openstack.object_store.v1.container.Container.new",
  "openstack.object_store.v1.container.bytes_used",
  "openstack.object_store.v1.container.metadata",
  "openstack.object_store.v1.container.name",
  "openstack.object_store.v1.container.object_count",
  "openstack.object_store.v1.container.read_ACL",
  "openstack.object_store.v1.container.sync_key",
  "openstack.object_store.v1.container.write_ACL",
  "openstack.object_store.v1.obj.Object.existing",
  "openstack.object_store.v1.obj.Object.list",
  "openstack.object_store.v1.obj.Object.new",
  "openstack.object_store.v1.obj.container",
  "openstack.orchestration.orchestration_service.OrchestrationService.UNVERSIONED",
  "openstack.orchestration.v1.stack.Stack.existing",
  "openstack.orchestration.v1.template.Template.new",
  "openstack.resource2.Body.key",
  "openstack.resource2.Header.key",
  "openstack.resource2.URI.key",
  "openstack.session.__name__",
  "openstack.telemetry.alarm.v2.alarm.Alarm.existing",
  "openstack.telemetry.alarm.v2.alarm.Alarm.from_id",
  "openstack.telemetry.v2.sample.Sample.list",
  "openstack.tests.functional.load_balancer.base.service_exists",
  "openstack.version.find",
  "openstack.workflow.workflow_service.WorkflowService.UNVERSIONED",
  "os",
  "os.environ.get",
  "os.getenv",
  "os.path.join",
  "os_client_config",
  "os_client_config.OpenStackConfig",
  "partial",
  "proxy_class",
  "re",
  "re.sub",
  "six.moves.builtins.__name__",
  "six.moves.urllib.parse",
  "six.moves.urllib.parse.urlencode",
  "six.moves.urllib.parse.urlparse",
  "six.moves.urllib.parse.urlsplit",
  "sys",
  "sys.modules",
  "sys.stderr",
  "sys.stdout",
  "testtools",
  "testtools.TestCase",
  "testtools.matchers",
  "testtools.matchers.raises",
  "time",
  "time.sleep",
  "unittest",
  "unittest.TestCase",
  "unittest.skip",
  "unittest.skipUnless",
  "uuid",
  "uuid.UUID",
  "uuid.uuid4"
 ],
 "deps": {
  "AnotherType": [],
  "Child": [],
  "Example": [],
  "FakestResource": [],
  "Nope": [],
  "Parent": [],
  "Person_ES": [],
  "Test": [
   "netket/conda-forge/noarch/netket-3.0b2-pyhd8ed1ab_0"
  ],
  "TestResourceBar": [],
  "TestResourceFoo": [],
  "abc": [],
  "cls": [],
  "collections": [],
  "copy": [],
  "decorated": [],
  "deprecation": [
   "deprecation/conda-forge/noarch/deprecation-2.0.1-py_0"
  ],
  "examples": [],
  "fake_open": [],
  "fixtures": [],
  "func": [],
  "functools": [],
  "get_one_match": [],
  "hashlib": [],
  "id": [],
  "itertools": [],
  "json": [],
  "jsonpatch": [
   "jsonpatch/conda-forge/noarch/jsonpatch-1.24-py_0"
  ],
  "keystoneauth1": [
   "keystoneauth1/conda-forge/noarch/keystoneauth1-3.11.2-py_0"
  ],
  "logging": [],
  "method": [],
  "mock": [],
  "object": [],
  "openstack": [],
  "os": [],
  "os_client_config": [],
  "partial": [],
  "pbr": [
   "pbr/conda-forge/noarch/pbr-5.1.1-py_0"
  ],
  "proxy_class": [],
  "re": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "stevedore": [
   "stevedore/conda-forge/noarch/stevedore-1.26.0-py_0"
  ],
  "sys": [],
  "testtools": [],
  "time": [],
  "unittest": [],
  "uuid": []
 }
}