{
 "bad": [
  "NEF",
  "_check_coords",
  "_ressources.read_remote_shapefile",
  "affine.Affine",
  "affine.Affine.scale",
  "affine.Affine.translation",
  "cartopy.crs.Miller",
  "cartopy.crs.Mollweide",
  "cartopy.crs.PlateCarree",
  "cartopy.feature.COLORS",
  "cartopy.feature.NaturalEarthFeature",
  "cartopy.io.shapereader.natural_earth",
  "cartopy.mpl.geoaxes.GeoAxes",
  "contextlib.contextmanager",
  "copy.copy",
  "core._geopandas._enumerate_duplicates",
  "core._geopandas.from_geopandas",
  "core.regions.Regions",
  "defined_regions.natural_earth._maybe_get_column",
  "distutils.version.LooseVersion",
  "formatting._display",
  "func",
  "geopandas.GeoDataFrame.from_dict",
  "lowercase",
  "mask._mask_2D",
  "mask._mask_3D",
  "matplotlib.collections.LineCollection",
  "matplotlib.colors.to_rgba_array",
  "matplotlib.path.Path",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.use",
  "numpy.NaN",
  "numpy.__version__",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argwhere",
  "numpy.array",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.diff",
  "numpy.empty",
  "numpy.equal",
  "numpy.float",
  "numpy.hstack",
  "numpy.int",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.ma.allequal",
  "numpy.ma.masked_invalid",
  "numpy.meshgrid",
  "numpy.mod",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.round",
  "numpy.split",
  "numpy.stack",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.io.formats.console.get_console_size",
  "pandas.testing.assert_series_equal",
  "plot._plot",
  "plot._plot_regions",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.warns",
  "pytest.xfail",
  "rasterio.features.rasterize",
  "regionmask.defined_regions._ar6_pre_revisions.all",
  "regionmask.defined_regions._ar6_pre_revisions.separate_pacific",
  "regionmask.defined_regions.ar6.all",
  "regionmask.defined_regions.ar6.land",
  "regionmask.defined_regions.ar6.ocean",
  "regionmask.defined_regions.natural_earth.countries_110",
  "regionmask.defined_regions.natural_earth.countries_50",
  "regionmask.defined_regions.natural_earth.land_110",
  "regionmask.defined_regions.natural_earth.ocean_basins_50",
  "regionmask.defined_regions.natural_earth.us_states_10",
  "regionmask.defined_regions.natural_earth.us_states_50",
  "regionmask.defined_regions.srex.__repr__",
  "regions.Regions",
  "uppercase",
  "utils._equally_spaced_on_split_lon",
  "utils._find_splitpoint",
  "utils._is_180",
  "utils._is_numeric",
  "utils._maybe_to_dict",
  "utils._sanitize_names_abbrevs",
  "utils._wrapAngle",
  "utils.dummy_lat",
  "utils.dummy_ll_dict",
  "utils.dummy_lon",
  "utils.dummy_outlines",
  "utils.dummy_outlines_poly",
  "utils.dummy_region",
  "utils.dummy_region.mask",
  "utils.dummy_region.mask_3D",
  "utils.equally_spaced",
  "utils.expected_mask_2D",
  "utils.expected_mask_3D",
  "version.version",
  "warnings.filterwarnings",
  "warnings.warn"
 ],
 "deps": {
  "NEF": [],
  "_check_coords": [],
  "_ressources": [],
  "affine": [],
  "cartopy": [],
  "contextlib": [],
  "copy": [],
  "core": [],
  "defined_regions": [],
  "distutils": [],
  "formatting": [],
  "func": [],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.3.0-py_1"
  ],
  "lowercase": [],
  "mask": [],
  "matplotlib": [],
  "numpy": [],
  "pandas": [],
  "plot": [],
  "pytest": [],
  "rasterio": [],
  "regionmask": [
   "regionmask/conda-forge/noarch/regionmask-0.6.0-py_0"
  ],
  "regions": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "six": [
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "uppercase": [],
  "utils": [],
  "version": [],
  "warnings": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.13.0-py_0",
   "xarray/conda-forge/noarch/xarray-0.17.0-pyhd8ed1ab_0"
  ]
 }
}