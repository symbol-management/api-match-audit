{
 "bad": [
  "NEF",
  "_check_coords",
  "_ressources.read_remote_shapefile",
  "affine.Affine",
  "affine.Affine.scale",
  "affine.Affine.translation",
  "cartopy.crs.Miller",
  "cartopy.crs.Mollweide",
  "cartopy.crs.PlateCarree",
  "cartopy.feature.COLORS",
  "cartopy.feature.NaturalEarthFeature",
  "cartopy.io.shapereader.natural_earth",
  "cartopy.mpl.geoaxes.GeoAxes",
  "contextlib.contextmanager",
  "copy.copy",
  "core._geopandas._enumerate_duplicates",
  "core._geopandas.from_geopandas",
  "core.regions.Regions",
  "defined_regions.natural_earth._maybe_get_column",
  "distutils.version.LooseVersion",
  "formatting._display",
  "func",
  "geopandas.GeoDataFrame",
  "geopandas.GeoDataFrame.from_dict",
  "geopandas.GeoSeries",
  "geopandas.read_file",
  "lowercase",
  "mask._mask_2D",
  "mask._mask_3D",
  "matplotlib.collections.LineCollection",
  "matplotlib.colors.to_rgba_array",
  "matplotlib.path.Path",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.use",
  "numpy.NaN",
  "numpy.__version__",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argwhere",
  "numpy.array",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.diff",
  "numpy.empty",
  "numpy.equal",
  "numpy.float",
  "numpy.hstack",
  "numpy.int",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.ma.allequal",
  "numpy.ma.masked_invalid",
  "numpy.meshgrid",
  "numpy.mod",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.round",
  "numpy.split",
  "numpy.stack",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.io.formats.console.get_console_size",
  "pandas.testing.assert_series_equal",
  "plot._plot",
  "plot._plot_regions",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.warns",
  "pytest.xfail",
  "rasterio.features.rasterize",
  "regionmask.Region_cls",
  "regionmask.Regions",
  "regionmask.Regions_cls",
  "regionmask._OneRegion",
  "regionmask.core._geopandas._check_duplicates",
  "regionmask.core._geopandas._check_missing",
  "regionmask.core._geopandas._construct_abbrevs",
  "regionmask.core._geopandas._enumerate_duplicates",
  "regionmask.core._geopandas._prepare_gdf_for_mask",
  "regionmask.core.formatting._display_metadata",
  "regionmask.core.formatting._display_regions_gp",
  "regionmask.core.formatting.maybe_truncate",
  "regionmask.core.formatting.pretty_print",
  "regionmask.core.mask._create_xarray",
  "regionmask.core.mask._create_xarray_2D",
  "regionmask.core.mask._determine_method",
  "regionmask.core.mask._extract_lon_lat",
  "regionmask.core.mask._get_LON_LAT_out_shape",
  "regionmask.core.mask._mask",
  "regionmask.core.mask._mask_contains",
  "regionmask.core.mask._mask_edgepoints_shapely",
  "regionmask.core.mask._mask_rasterize",
  "regionmask.core.mask._mask_rasterize_flip",
  "regionmask.core.mask._mask_rasterize_no_offset",
  "regionmask.core.mask._mask_rasterize_split",
  "regionmask.core.mask._mask_shapely",
  "regionmask.core.mask._parse_input",
  "regionmask.core.mask._transform_from_latlon",
  "regionmask.core.plot._draw_poly",
  "regionmask.core.plot._flatten_polygons",
  "regionmask.core.plot._polygons_coords",
  "regionmask.core.plot._subsample",
  "regionmask.core.regions.Region_cls",
  "regionmask.core.regions.Regions",
  "regionmask.core.regions.Regions_cls",
  "regionmask.core.regions._OneRegion",
  "regionmask.core.utils._create_dict_of_numbered_string",
  "regionmask.core.utils._equally_spaced_on_split_lon",
  "regionmask.core.utils._find_splitpoint",
  "regionmask.core.utils._is_180",
  "regionmask.core.utils._is_numeric",
  "regionmask.core.utils._maybe_to_dict",
  "regionmask.core.utils._sanitize_names_abbrevs",
  "regionmask.core.utils._wrapAngle",
  "regionmask.core.utils._wrapAngle180",
  "regionmask.core.utils._wrapAngle360",
  "regionmask.core.utils.create_lon_lat_dataarray_from_bounds",
  "regionmask.core.utils.equally_spaced",
  "regionmask.create_mask_contains",
  "regionmask.defined_regions._ar6.REPR",
  "regionmask.defined_regions._ar6.ar6_cls",
  "regionmask.defined_regions._ar6_pre_revisions.REPR",
  "regionmask.defined_regions._ar6_pre_revisions._combine_to_multipolygon",
  "regionmask.defined_regions._ar6_pre_revisions.all",
  "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls",
  "regionmask.defined_regions._ar6_pre_revisions.land",
  "regionmask.defined_regions._ar6_pre_revisions.ocean",
  "regionmask.defined_regions._ar6_pre_revisions.separate_pacific",
  "regionmask.defined_regions._maybe_get_column",
  "regionmask.defined_regions._ressources.REMOTE_RESSOURCE",
  "regionmask.defined_regions._ressources.fetch_remote_shapefile",
  "regionmask.defined_regions.ar6.all",
  "regionmask.defined_regions.ar6.land",
  "regionmask.defined_regions.ar6.ocean",
  "regionmask.defined_regions.giorgi",
  "regionmask.defined_regions.natural_earth._maybe_get_column",
  "regionmask.defined_regions.natural_earth._obtain_ne",
  "regionmask.defined_regions.natural_earth.countries_110",
  "regionmask.defined_regions.natural_earth.countries_50",
  "regionmask.defined_regions.natural_earth.land_110",
  "regionmask.defined_regions.natural_earth.natural_earth_cls",
  "regionmask.defined_regions.natural_earth.ocean_basins_50",
  "regionmask.defined_regions.natural_earth.us_states_10",
  "regionmask.defined_regions.natural_earth.us_states_50",
  "regionmask.defined_regions.srex",
  "regionmask.defined_regions.srex.__repr__",
  "regionmask.from_geopandas",
  "regionmask.mask_3D_geopandas",
  "regionmask.mask_geopandas",
  "regionmask.plot_3D_mask",
  "regionmask.test.test_Regions._create_expected_str_list",
  "regionmask.test.test_Regions.abbrevs",
  "regionmask.test.test_Regions.abbrevs_dict",
  "regionmask.test.test_Regions.all_first_numbers",
  "regionmask.test.test_Regions.all_numbers",
  "regionmask.test.test_Regions.all_test_regions",
  "regionmask.test.test_Regions.name",
  "regionmask.test.test_Regions.names",
  "regionmask.test.test_Regions.names_dict",
  "regionmask.test.test_Regions.numbers1",
  "regionmask.test.test_Regions.numbers2",
  "regionmask.test.test_Regions.numbers3",
  "regionmask.test.test_Regions.outl1",
  "regionmask.test.test_Regions.outl2",
  "regionmask.test.test_Regions.outlines",
  "regionmask.test.test_Regions.poly",
  "regionmask.test.test_Regions.poly1",
  "regionmask.test.test_Regions.poly2",
  "regionmask.test.test_Regions.test_regions1",
  "regionmask.test.test_Regions.test_regions2",
  "regionmask.test.test_Regions.test_regions3",
  "regionmask.test.test_Regions_cls.abbrevs",
  "regionmask.test.test_Regions_cls.name",
  "regionmask.test.test_Regions_cls.names",
  "regionmask.test.test_Regions_cls.numbers",
  "regionmask.test.test_Regions_cls.outl1",
  "regionmask.test.test_Regions_cls.outl2",
  "regionmask.test.test_Regions_cls.outlines",
  "regionmask.test.test_Regions_cls.poly",
  "regionmask.test.test_Regions_cls.poly1",
  "regionmask.test.test_Regions_cls.poly2",
  "regionmask.test.test_Regions_cls.r1",
  "regionmask.test.test_Regions_cls.r2",
  "regionmask.test.test_Regions_cls.r3",
  "regionmask.test.test_defined_regions._defined_region",
  "regionmask.test.test_geopandas.geodataframe_clean",
  "regionmask.test.test_geopandas.geodataframe_duplicates",
  "regionmask.test.test_geopandas.geodataframe_missing",
  "regionmask.test.test_geopandas.series_duplicates",
  "regionmask.test.test_geopandas.series_unique",
  "regionmask.test.test_mask.METHODS",
  "regionmask.test.test_mask._expected_rectangle",
  "regionmask.test.test_mask.close_to_equal",
  "regionmask.test.test_mask.ds_GLOB_360",
  "regionmask.test.test_mask.ds_GLOB_360_part",
  "regionmask.test.test_mask.ds_US_180",
  "regionmask.test.test_mask.ds_US_360",
  "regionmask.test.test_mask.ds_for_45_deg",
  "regionmask.test.test_mask.equal",
  "regionmask.test.test_mask.expected_mask_edge",
  "regionmask.test.test_mask.expected_mask_interior_and_edge",
  "regionmask.test.test_mask.grid_2D",
  "regionmask.test.test_mask.lat",
  "regionmask.test.test_mask.lat_2D",
  "regionmask.test.test_mask.lon180",
  "regionmask.test.test_mask.lon360",
  "regionmask.test.test_mask.lon_2D",
  "regionmask.test.test_mask.outline_180",
  "regionmask.test.test_mask.outline_360",
  "regionmask.test.test_mask.outline_45_deg",
  "regionmask.test.test_mask.outline_GLOB_180",
  "regionmask.test.test_mask.outline_GLOB_360",
  "regionmask.test.test_mask.outline_hole_180",
  "regionmask.test.test_mask.outline_hole_360",
  "regionmask.test.test_mask.poly",
  "regionmask.test.test_mask.r_45_def_ccw",
  "regionmask.test.test_mask.r_45_def_cw",
  "regionmask.test.test_mask.r_GLOB_180",
  "regionmask.test.test_mask.r_GLOB_360",
  "regionmask.test.test_mask.r_US_180_ccw",
  "regionmask.test.test_mask.r_US_180_cw",
  "regionmask.test.test_mask.r_US_360_ccw",
  "regionmask.test.test_mask.r_US_360_cw",
  "regionmask.test.test_mask.r_US_hole_180_ccw",
  "regionmask.test.test_mask.r_US_hole_180_cw",
  "regionmask.test.test_mask.r_US_hole_360_ccw",
  "regionmask.test.test_mask.r_US_hole_360_cw",
  "regionmask.test.test_mask.un_equal",
  "regionmask.test.test_mask_defined_regions.ds_glob_1",
  "regionmask.test.test_mask_defined_regions.ds_glob_2",
  "regionmask.test.test_mask_defined_regions.ds_glob_360_2",
  "regionmask.test.test_mask_defined_regions.ds_glob_360_2_part",
  "regionmask.test.test_mask_defined_regions.regions",
  "regionmask.test.test_plot.abbrevs",
  "regionmask.test.test_plot.figure_context",
  "regionmask.test.test_plot.interior1_closed",
  "regionmask.test.test_plot.interior2_closed",
  "regionmask.test.test_plot.multipoly",
  "regionmask.test.test_plot.name",
  "regionmask.test.test_plot.names",
  "regionmask.test.test_plot.numbers",
  "regionmask.test.test_plot.outl1",
  "regionmask.test.test_plot.outl1_closed",
  "regionmask.test.test_plot.outl2",
  "regionmask.test.test_plot.outl2_closed",
  "regionmask.test.test_plot.outlines",
  "regionmask.test.test_plot.poly",
  "regionmask.test.test_plot.poly1",
  "regionmask.test.test_plot.poly1_interior1",
  "regionmask.test.test_plot.poly1_interior2",
  "regionmask.test.test_plot.poly2",
  "regionmask.test.test_plot.r1",
  "regionmask.test.test_plot.r2",
  "regionmask.test.test_plot.r3",
  "regionmask.test.utils.dummy_lat",
  "regionmask.test.utils.dummy_lon",
  "regionmask.test.utils.dummy_outlines",
  "regionmask.test.utils.dummy_region",
  "regionmask.test.utils.outl1",
  "regionmask.test.utils.outl2",
  "regionmask.test.utils.outl3",
  "regions.Regions",
  "shapely.geometry.MultiPolygon",
  "shapely.geometry.Polygon",
  "shapely.vectorized.contains",
  "six.string_types",
  "six.text_type",
  "uppercase",
  "utils._equally_spaced_on_split_lon",
  "utils._find_splitpoint",
  "utils._is_180",
  "utils._is_numeric",
  "utils._maybe_to_dict",
  "utils._sanitize_names_abbrevs",
  "utils._wrapAngle",
  "utils.dummy_lat",
  "utils.dummy_ll_dict",
  "utils.dummy_lon",
  "utils.dummy_outlines",
  "utils.dummy_outlines_poly",
  "utils.dummy_region",
  "utils.dummy_region.mask",
  "utils.dummy_region.mask_3D",
  "utils.equally_spaced",
  "utils.expected_mask_2D",
  "utils.expected_mask_3D",
  "version.version",
  "warnings.filterwarnings",
  "warnings.warn",
  "xarray",
  "xarray.DataArray",
  "xarray.Dataset",
  "xarray.__version__",
  "xarray.concat",
  "xarray.testing.assert_equal"
 ],
 "deps": {
  "NEF": [],
  "_check_coords": [],
  "_ressources": [],
  "affine": [],
  "cartopy": [],
  "contextlib": [],
  "copy": [],
  "core": [],
  "defined_regions": [],
  "distutils": [],
  "formatting": [],
  "func": [],
  "geopandas": [],
  "lowercase": [],
  "mask": [],
  "matplotlib": [],
  "numpy": [],
  "pandas": [],
  "plot": [],
  "pytest": [],
  "rasterio": [],
  "regionmask": [],
  "regions": [],
  "shapely": [],
  "six": [],
  "uppercase": [],
  "utils": [],
  "version": [],
  "warnings": [],
  "xarray": []
 }
}