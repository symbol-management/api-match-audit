{
 "bad": [
  "NEF",
  "_check_coords",
  "_get_LON_LAT_out_shape",
  "_mask_contains",
  "_mask_rasterize",
  "_parse_input",
  "cartopy.crs",
  "cartopy.crs.Miller",
  "cartopy.crs.Mollweide",
  "cartopy.crs.PlateCarree",
  "cartopy.feature",
  "cartopy.feature.COLORS",
  "cartopy.feature.NaturalEarthFeature",
  "cartopy.io.shapereader",
  "cartopy.io.shapereader.natural_earth",
  "cartopy.mpl.geoaxes",
  "cartopy.mpl.geoaxes.GeoAxes",
  "contextlib",
  "contextlib.contextmanager",
  "copy",
  "copy.copy",
  "distutils.version.LooseVersion",
  "func",
  "geopandas.GeoDataFrame.from_dict",
  "lowercase",
  "matplotlib",
  "matplotlib.collections.LineCollection",
  "matplotlib.colors.to_rgba_array",
  "matplotlib.path",
  "matplotlib.path.Path",
  "matplotlib.pyplot",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.use",
  "numpy",
  "numpy.NaN",
  "numpy.__version__",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argwhere",
  "numpy.array",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.diff",
  "numpy.empty",
  "numpy.equal",
  "numpy.float",
  "numpy.hstack",
  "numpy.int",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.ma.allequal",
  "numpy.ma.masked_invalid",
  "numpy.meshgrid",
  "numpy.mod",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.round",
  "numpy.split",
  "numpy.stack",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.io.formats.console",
  "pandas.io.formats.console.get_console_size",
  "pandas.testing.assert_series_equal",
  "pytest",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.warns",
  "pytest.xfail",
  "rasterio.features",
  "rasterio.features.rasterize",
  "regionmask.__init__.version",
  "regionmask.defined_regions._ar6_pre_revisions.all",
  "regionmask.defined_regions._ar6_pre_revisions.separate_pacific",
  "regionmask.defined_regions.ar6.all",
  "regionmask.defined_regions.ar6.land",
  "regionmask.defined_regions.ar6.ocean",
  "regionmask.defined_regions.natural_earth.countries_110",
  "regionmask.defined_regions.natural_earth.countries_50",
  "regionmask.defined_regions.natural_earth.land_110",
  "regionmask.defined_regions.natural_earth.ocean_basins_50",
  "regionmask.defined_regions.natural_earth.us_states_10",
  "regionmask.defined_regions.natural_earth.us_states_50",
  "regionmask.defined_regions.srex.__repr__",
  "shapely.geometry",
  "shapely.geometry.MultiPolygon",
  "shapely.geometry.Polygon",
  "shapely.vectorized",
  "shapely.vectorized.contains",
  "uppercase",
  "utils.dummy_region.mask",
  "utils.dummy_region.mask_3D",
  "warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "xarray",
  "xarray.DataArray",
  "xarray.Dataset",
  "xarray.__version__",
  "xarray.concat",
  "xarray.testing.assert_equal"
 ],
 "deps": {
  "NEF": [],
  "_check_coords": [],
  "_get_LON_LAT_out_shape": [],
  "_mask_contains": [],
  "_mask_rasterize": [],
  "_parse_input": [],
  "affine": [
   "affine/conda-forge/noarch/affine-2.3.0-py_0"
  ],
  "cartopy": [],
  "contextlib": [],
  "copy": [],
  "distutils": [],
  "func": [],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "lowercase": [],
  "matplotlib": [],
  "numpy": [],
  "pandas": [],
  "pooch": [
   "pooch/conda-forge/noarch/pooch-1.3.0-pyhd8ed1ab_0"
  ],
  "pytest": [],
  "rasterio": [],
  "regionmask": [],
  "shapely": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "uppercase": [],
  "utils": [],
  "warnings": [],
  "xarray": []
 }
}