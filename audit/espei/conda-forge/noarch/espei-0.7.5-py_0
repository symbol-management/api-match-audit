{
 "bad": [
  "FormattedParameter",
  "_equilibrium",
  "_recursive_shape",
  "_tuplify",
  "_version.get_versions",
  "aliases",
  "argparse.ArgumentParser",
  "bibtexparser.bparser.BibTexParser",
  "bibtexparser.customization.convert_to_unicode",
  "bibtexparser.loads",
  "cerberus.Validator",
  "citing.ESPEI_BIBTEX",
  "citing.ESPEI_CITATION",
  "collections.OrderedDict",
  "collections.namedtuple",
  "copy.deepcopy",
  "dask.__version__",
  "dask.config.paths",
  "distributed.Client",
  "distributed.LocalCluster",
  "distributed.__version__",
  "distributed.config",
  "emcee.EnsembleSampler",
  "emcee.__version__",
  "espei.TRACE",
  "espei.__citation__",
  "espei.__version__",
  "espei.__version__.split",
  "espei._version.version_json",
  "espei.core_utils._zpf_conditions_shape",
  "espei.core_utils.get_data",
  "espei.core_utils.get_prop_data",
  "espei.core_utils.get_samples",
  "espei.core_utils.get_weights",
  "espei.core_utils.ravel_conditions",
  "espei.core_utils.ravel_zpf_values",
  "espei.core_utils.recursive_map",
  "espei.datasets.DatasetError",
  "espei.datasets.add_ideal_exclusions",
  "espei.datasets.apply_tags",
  "espei.datasets.check_dataset",
  "espei.datasets.clean_dataset",
  "espei.datasets.load_datasets",
  "espei.datasets.recursive_glob",
  "espei.error_functions.activity_error.chempot_error",
  "espei.error_functions.activity_error.target_chempots_from_activity",
  "espei.error_functions.calculate_activity_error",
  "espei.error_functions.calculate_non_equilibrium_thermochemical_probability",
  "espei.error_functions.calculate_zpf_error",
  "espei.error_functions.context.TRACE",
  "espei.error_functions.context.setup_context",
  "espei.error_functions.get_thermochemical_data",
  "espei.error_functions.get_zpf_data",
  "espei.error_functions.non_equilibrium_thermochemical_error.calculate_points_array",
  "espei.error_functions.non_equilibrium_thermochemical_error.get_prop_samples",
  "espei.error_functions.zpf_error.PhaseRegion",
  "espei.error_functions.zpf_error.driving_force_to_hyperplane",
  "espei.error_functions.zpf_error.estimate_hyperplane",
  "espei.error_functions.zpf_error.extract_conditions",
  "espei.error_functions.zpf_error.extract_phases_comps",
  "espei.error_functions.zpf_error.update_phase_record_parameters",
  "espei.espei_script.TRACE",
  "espei.espei_script._raise_dask_work_stealing",
  "espei.espei_script.get_run_settings",
  "espei.espei_script.log_version_info",
  "espei.espei_script.main",
  "espei.espei_script.parser",
  "espei.espei_script.run_espei",
  "espei.generate_parameters",
  "espei.optimizers.opt_mcmc.EmceeOptimizer",
  "espei.optimizers.opt_mcmc.TRACE",
  "espei.optimizers.opt_scipy.TRACE",
  "espei.parameter_selection.model_building.build_candidate_models",
  "espei.parameter_selection.model_building.build_feature_sets",
  "espei.parameter_selection.model_building.make_successive",
  "espei.parameter_selection.redlich_kister.calc_interaction_product",
  "espei.parameter_selection.redlich_kister.calc_site_fraction_product",
  "espei.parameter_selection.selection.TRACE",
  "espei.parameter_selection.selection.fit_model",
  "espei.parameter_selection.selection.score_model",
  "espei.parameter_selection.selection.select_model",
  "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix",
  "espei.parameter_selection.utils.feature_transforms",
  "espei.parameter_selection.utils.get_data_quantities",
  "espei.parameter_selection.utils.shift_reference_state",
  "espei.paramselect.TRACE",
  "espei.paramselect._build_feature_matrix",
  "espei.paramselect._param_present_in_database",
  "espei.paramselect.fit_formation_energy",
  "espei.paramselect.fit_ternary_interactions",
  "espei.paramselect.get_next_symbol",
  "espei.paramselect.phase_fit",
  "espei.plot._compare_data_to_parameters",
  "espei.plot._translate_endmember_to_array",
  "espei.plot.dataplot",
  "espei.plot.eqdataplot",
  "espei.plot.plot_mapping",
  "espei.priors.DistributionParameter",
  "espei.priors.PriorSpec",
  "espei.priors.build_prior_specs",
  "espei.priors.rv_zero",
  "espei.refdata.SGTE91",
  "espei.refdata.is_pure_element_expr",
  "espei.rstate.numpy_rstate",
  "espei.shadow_functions.calculate_",
  "espei.shadow_functions.equilibrium_",
  "espei.shadow_functions.no_op_equilibrium_",
  "espei.sublattice_tools.canonical_sort_key",
  "espei.sublattice_tools.canonicalize",
  "espei.sublattice_tools.endmembers_from_interaction",
  "espei.sublattice_tools.generate_endmembers",
  "espei.sublattice_tools.generate_interactions",
  "espei.sublattice_tools.generate_symmetric_group",
  "espei.sublattice_tools.interaction_test",
  "espei.sublattice_tools.recursive_tuplify",
  "espei.sublattice_tools.sorted_interactions",
  "espei.sublattice_tools.tuplify",
  "espei.utils.ImmediateClient",
  "espei.utils.PickleableTinyDB",
  "espei.utils.bib_marker_map",
  "espei.utils.bibliography_database",
  "espei.utils.build_sitefractions",
  "espei.utils.database_symbols_to_fit",
  "espei.utils.flexible_open_string",
  "espei.utils.formatted_constituent_array",
  "espei.utils.get_dask_config_paths",
  "espei.utils.optimal_parameters",
  "espei.utils.parameter_term",
  "espei.utils.sigfigs",
  "espei.utils.unpack_piecewise",
  "espei.validation.ESPEIValidator",
  "espei.validation.MODULE_DIR",
  "espei.validation.schema.errors",
  "espei.validation.schema.normalized",
  "espei.validation.schema.validate",
  "feat_transform",
  "fnmatch.filter",
  "graph.OptGraph",
  "graph.OptNode",
  "itertools.chain",
  "itertools.combinations",
  "itertools.product",
  "json.load",
  "json.loads",
  "logging.DEBUG",
  "logging.INFO",
  "logging.WARNING",
  "logging.addLevelName",
  "logging.basicConfig",
  "logging.debug",
  "logging.info",
  "logging.log",
  "logging.warning",
  "matplotlib.lines.Line2D",
  "matplotlib.pyplot.figaspect",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "multiprocessing.cpu_count",
  "numpy.abs",
  "numpy.all",
  "numpy.any",
  "numpy.arange",
  "numpy.argpartition",
  "numpy.around",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.atleast_2d",
  "numpy.concatenate",
  "numpy.dot",
  "numpy.empty",
  "numpy.float",
  "numpy.float64",
  "numpy.floor",
  "numpy.full_like",
  "numpy.inf",
  "numpy.int",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.isscalar",
  "numpy.linalg.LinAlgError",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.log10",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nanmean",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.object",
  "numpy.ones",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.repeat",
  "numpy.roll",
  "numpy.save",
  "numpy.square",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.tile",
  "numpy.zeros",
  "numpy.zeros_like",
  "operator.itemgetter",
  "opt_base.OptimizerBase",
  "os.listdir",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.path.splitext",
  "os.walk",
  "permute",
  "pycalphad.Database",
  "pycalphad.Model",
  "pycalphad.ReferenceState",
  "pycalphad.__version__",
  "pycalphad.calculate",
  "pycalphad.codegen.callables.build_callables",
  "pycalphad.codegen.callables.build_phase_records",
  "pycalphad.core.calculate._compute_phase_values",
  "pycalphad.core.calculate._sample_phase_constitution",
  "pycalphad.core.eqsolver._solve_eq_at_conditions",
  "pycalphad.core.equilibrium._adjust_conditions",
  "pycalphad.core.light_dataset.LightDataset",
  "pycalphad.core.phase_rec.PhaseRecord",
  "pycalphad.core.starting_point.starting_point",
  "pycalphad.core.utils.filter_phases",
  "pycalphad.core.utils.generate_dof",
  "pycalphad.core.utils.get_pure_elements",
  "pycalphad.core.utils.get_state_variables",
  "pycalphad.core.utils.instantiate_models",
  "pycalphad.core.utils.point_sample",
  "pycalphad.core.utils.unpack_components",
  "pycalphad.core.utils.unpack_kwarg",
  "pycalphad.equilibrium",
  "pycalphad.io.database.Species",
  "pycalphad.plot.eqplot._map_coord_to_variable",
  "pycalphad.plot.eqplot.eqplot",
  "pycalphad.plot.eqplot.unpack_condition",
  "pycalphad.plot.utils.phase_legend",
  "pycalphad.variables",
  "pycalphad.variables.N",
  "pycalphad.variables.P",
  "pycalphad.variables.R",
  "pycalphad.variables.SiteFraction",
  "pycalphad.variables.Species",
  "pycalphad.variables.StateVariable",
  "pycalphad.variables.T",
  "pycalphad.variables.X",
  "re.compile",
  "recursive_zip",
  "scipy.optimize.minimize",
  "scipy.stats.norm",
  "scipy.stats.norm.logpdf",
  "scipy.stats.triang",
  "scipy.stats.uniform",
  "six.string_types",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.Ridge",
  "symengine.__version__",
  "sympy.Add",
  "sympy.And",
  "sympy.Matrix",
  "sympy.Piecewise",
  "sympy.S",
  "sympy.S.One",
  "sympy.S.Zero",
  "sympy.Symbol",
  "sympy.__version__",
  "sympy.diff",
  "sympy.exp",
  "sympy.log",
  "sys.argv",
  "time.time",
  "tinydb.Query",
  "tinydb.TinyDB",
  "tinydb.storages.MemoryStorage",
  "tinydb.where",
  "typing.Any",
  "typing.Dict",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Sequence",
  "utils.OptimizerError",
  "warnings.filterwarnings",
  "warnings.warn",
  "yaml.FullLoader",
  "yaml.load",
  "yaml.safe_load"
 ],
 "deps": {
  "FormattedParameter": [],
  "_equilibrium": [],
  "_recursive_shape": [],
  "_tuplify": [],
  "_version": [],
  "aliases": [],
  "argparse": [],
  "bibtexparser": [],
  "cerberus": [],
  "citing": [],
  "collections": [],
  "copy": [],
  "dask": [],
  "distributed": [],
  "emcee": [],
  "espei": [],
  "feat_transform": [],
  "fnmatch": [],
  "graph": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "matplotlib": [],
  "multiprocessing": [],
  "numpy": [],
  "operator": [],
  "opt_base": [],
  "os": [],
  "permute": [],
  "pycalphad": [],
  "re": [],
  "recursive_zip": [],
  "scipy": [],
  "six": [],
  "sklearn": [],
  "symengine": [],
  "sympy": [],
  "sys": [],
  "time": [],
  "tinydb": [],
  "typing": [],
  "utils": [],
  "warnings": [],
  "yaml": []
 }
}