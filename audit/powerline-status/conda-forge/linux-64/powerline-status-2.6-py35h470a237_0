{
 "bad": [
  "Exception.__init__",
  "IPython.Prompts.BasePrompt",
  "IPython.core.hooks.TryNext",
  "IPython.core.magic.Magics",
  "IPython.core.magic.line_magic",
  "IPython.core.magic.magics_class",
  "IPython.core.prompts.PromptManager",
  "IPython.ipapi.TryNext",
  "IPython.ipapi.get",
  "IPython.terminal.prompts.Prompts",
  "Marked",
  "PowerClass",
  "PowerlineClass",
  "Renderer",
  "ValueError.__init__",
  "__builtin__.unichr",
  "__builtin__.unicode",
  "__builtin__.xrange",
  "__main__.__dict__",
  "__main__.powerline",
  "__main__.powerline_on_bwipe",
  "_access_check",
  "_contents_func",
  "_saved_msfn",
  "add_multiplier",
  "append",
  "argparse.ArgumentParser",
  "argparse.REMAINDER",
  "atexit.register",
  "bytes.__getitem__",
  "bytes.__getslice__",
  "bytes.__new__",
  "bzrlib.library_state.BzrLibraryState",
  "bzrlib.status.show_tree_status",
  "bzrlib.trace.DefaultConfig",
  "bzrlib.ui.SilentUIFactory",
  "bzrlib.workingtree.WorkingTree.open",
  "check",
  "cmp_func",
  "codecs.open",
  "codecs.register_error",
  "codecs.utf_8_decode",
  "collections.Hashable",
  "collections.defaultdict",
  "collections.defaultdict.__new__",
  "collections.namedtuple",
  "condition_function",
  "constructor",
  "copy.copy",
  "copy.deepcopy",
  "csv.Error",
  "csv.Sniffer",
  "csv.reader",
  "ctypes.CDLL",
  "ctypes.CFUNCTYPE",
  "ctypes.POINTER",
  "ctypes.Structure",
  "ctypes.byref",
  "ctypes.c_byte",
  "ctypes.c_char_p",
  "ctypes.c_int",
  "ctypes.c_long",
  "ctypes.c_size_t",
  "ctypes.c_ssize_t",
  "ctypes.c_uint32",
  "ctypes.c_uint64",
  "ctypes.c_ulong",
  "ctypes.c_ulonglong",
  "ctypes.c_void_p",
  "ctypes.cdll",
  "ctypes.create_string_buffer",
  "ctypes.get_errno",
  "ctypes.pointer",
  "ctypes.util.find_library",
  "ctypes.windll",
  "ctypes.windll.kernel32.GetTickCount64",
  "datetime.datetime.now",
  "dbus.Interface",
  "dbus.SessionBus",
  "dbus.SystemBus",
  "dbus.exceptions.DBusException",
  "devget",
  "dict.__setitem__",
  "dict.update",
  "errno.EACCES",
  "errno.EAGAIN",
  "errno.EINTR",
  "errno.ENOENT",
  "errno.ENOSPC",
  "errno.ENOTDIR",
  "exclude_function",
  "f",
  "f.encode",
  "f.replace",
  "f.rindex",
  "file_changed",
  "format.encode",
  "format.format",
  "func",
  "function",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "fw",
  "fw.unwatch",
  "gc.get_referents",
  "gen_display_condition",
  "get",
  "get_highlighting",
  "get_key",
  "get_module_attr",
  "get_omitted_args",
  "get_segment",
  "get_segment_info",
  "get_segment_selector",
  "get_selector",
  "getpass.getuser",
  "handler_class",
  "hglib.open",
  "hl_groups",
  "i3",
  "i3.Subscription",
  "i3ipc.Connection",
  "imaplib.IMAP4",
  "imaplib.IMAP4_SSL",
  "imaplib.IMAP4_SSL_PORT",
  "include_function",
  "inspect.ArgSpec",
  "inspect.getargspec",
  "io.StringIO",
  "itertools.chain",
  "itertools.count",
  "json.dumps",
  "json.load",
  "json.loads",
  "keyfunc",
  "libqtile.bar.CALCULATED",
  "libqtile.widget.TextBox",
  "listed_key",
  "locale.LC_MESSAGES",
  "locale.getdefaultlocale",
  "locale.getlocale",
  "locale.getpreferredencoding",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.Handler",
  "logging.Logger",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "matcher",
  "math.log",
  "mpd.MPDClient",
  "multiprocessing.cpu_count",
  "object.__getattribute__",
  "operator.iadd",
  "os.F_OK",
  "os.X_OK",
  "os.access",
  "os.curdir",
  "os.defpath",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.getloadavg",
  "os.getuid",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getmtime",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.ismount",
  "os.path.join",
  "os.path.normcase",
  "os.path.realpath",
  "os.path.relpath",
  "os.pathsep",
  "os.sep",
  "os.strerror",
  "os.walk",
  "pdb.main",
  "pick_color",
  "pkgutil.extend_path",
  "platform.python_implementation",
  "powerline.DEFAULT_UPDATE_INTERVAL",
  "powerline.FailedUnicode",
  "powerline.LOG_KEYS",
  "powerline.Powerline",
  "powerline.PowerlineLogger",
  "powerline._config_loader_condition",
  "powerline._fallback_logger",
  "powerline._find_config_files",
  "powerline._generate_change_callback",
  "powerline._get_log_keys",
  "powerline._set_log_handlers",
  "powerline.bindings.awesome.powerline-awesome.main",
  "powerline.bindings.bar.powerline-bar.args",
  "powerline.bindings.bar.powerline-bar.conn",
  "powerline.bindings.bar.powerline-bar.lock",
  "powerline.bindings.bar.powerline-bar.modes",
  "powerline.bindings.bar.powerline-bar.parser",
  "powerline.bindings.bar.powerline-bar.powerline",
  "powerline.bindings.bar.powerline-bar.render",
  "powerline.bindings.bar.powerline-bar.update",
  "powerline.bindings.bar.powerline-bar.write",
  "powerline.bindings.config.CONFIG_FILE_NAME",
  "powerline.bindings.config.CONFIG_MATCHERS",
  "powerline.bindings.config.CONFIG_PRIORITY",
  "powerline.bindings.config.EmptyArgs",
  "powerline.bindings.config.TMUX_VAR_RE",
  "powerline.bindings.config.check_command",
  "powerline.bindings.config.deduce_command",
  "powerline.bindings.config.get_main_config",
  "powerline.bindings.config.get_tmux_configs",
  "powerline.bindings.config.init_tmux_environment",
  "powerline.bindings.config.list_all_tmux_configs",
  "powerline.bindings.config.shell_command",
  "powerline.bindings.config.source_tmux_files",
  "powerline.bindings.config.tmux_setup",
  "powerline.bindings.config.uses",
  "powerline.bindings.i3.powerline-i3.interval",
  "powerline.bindings.i3.powerline-i3.lock",
  "powerline.bindings.i3.powerline-i3.name",
  "powerline.bindings.i3.powerline-i3.powerline",
  "powerline.bindings.i3.powerline-i3.render",
  "powerline.bindings.i3.powerline-i3.start_time",
  "powerline.bindings.ipython.post_0_11.ConfigurableIPythonPowerline",
  "powerline.bindings.ipython.post_0_11.PowerlineMagics",
  "powerline.bindings.ipython.post_0_11.PowerlinePromptManager",
  "powerline.bindings.ipython.post_0_11.ShutdownHook",
  "powerline.bindings.ipython.post_0_11.has_prompt_manager",
  "powerline.bindings.ipython.post_0_11.old_prompt_manager",
  "powerline.bindings.ipython.pre_0_11.ConfigurableIPythonPowerline",
  "powerline.bindings.ipython.pre_0_11.IPythonInfo",
  "powerline.bindings.ipython.pre_0_11.PowerlinePrompt",
  "powerline.bindings.ipython.pre_0_11.PowerlinePrompt1",
  "powerline.bindings.ipython.pre_0_11.PowerlinePrompt2",
  "powerline.bindings.ipython.pre_0_11.PowerlinePromptOut",
  "powerline.bindings.ipython.pre_0_11.ShutdownHook",
  "powerline.bindings.ipython.since_5.ConfigurableIPythonPowerline",
  "powerline.bindings.ipython.since_5.PowerlinePrompts",
  "powerline.bindings.lemonbar.powerline-lemonbar.args",
  "powerline.bindings.lemonbar.powerline-lemonbar.bars",
  "powerline.bindings.lemonbar.powerline-lemonbar.command",
  "powerline.bindings.lemonbar.powerline-lemonbar.conn",
  "powerline.bindings.lemonbar.powerline-lemonbar.lock",
  "powerline.bindings.lemonbar.powerline-lemonbar.modes",
  "powerline.bindings.lemonbar.powerline-lemonbar.parser",
  "powerline.bindings.lemonbar.powerline-lemonbar.powerline",
  "powerline.bindings.lemonbar.powerline-lemonbar.process",
  "powerline.bindings.lemonbar.powerline-lemonbar.render",
  "powerline.bindings.lemonbar.powerline-lemonbar.update",
  "powerline.bindings.pdb.PowerlineRenderBytesResult",
  "powerline.bindings.pdb.PowerlineRenderResult",
  "powerline.bindings.pdb.main",
  "powerline.bindings.pdb.use_powerline_prompt",
  "powerline.bindings.qtile.widget.PowerlineTextBox",
  "powerline.bindings.qtile.widget.QTilePowerline",
  "powerline.bindings.tmux.DIGITS",
  "powerline.bindings.tmux.NON_DIGITS",
  "powerline.bindings.tmux.TmuxVersionInfo",
  "powerline.bindings.tmux._run_tmux",
  "powerline.bindings.tmux.get_tmux_executable_name",
  "powerline.bindings.tmux.get_tmux_output",
  "powerline.bindings.tmux.get_tmux_version",
  "powerline.bindings.tmux.run_tmux_command",
  "powerline.bindings.tmux.set_tmux_environment",
  "powerline.bindings.tmux.source_tmux_file",
  "powerline.bindings.vim.FalseObject",
  "powerline.bindings.vim.TabBufSegmentInfo",
  "powerline.bindings.vim.Tabpage",
  "powerline.bindings.vim.VimEnviron",
  "powerline.bindings.vim.VimFunc",
  "powerline.bindings.vim.Window",
  "powerline.bindings.vim.WindowVars",
  "powerline.bindings.vim._getbufvar",
  "powerline.bindings.vim._id",
  "powerline.bindings.vim._last_tab_nr",
  "powerline.bindings.vim._vim_exists",
  "powerline.bindings.vim._vim_to_python",
  "powerline.bindings.vim._vim_to_python_types",
  "powerline.bindings.vim.buffer_caches",
  "powerline.bindings.vim.buffer_name",
  "powerline.bindings.vim.bufvar_exists",
  "powerline.bindings.vim.create_ruby_dpowerline",
  "powerline.bindings.vim.current_tabpage",
  "powerline.bindings.vim.did_autocmd",
  "powerline.bindings.vim.environ",
  "powerline.bindings.vim.eval_bytes",
  "powerline.bindings.vim.eval_unicode",
  "powerline.bindings.vim.get_buffer",
  "powerline.bindings.vim.get_vim_encoding",
  "powerline.bindings.vim.getbufvar",
  "powerline.bindings.vim.list_tabpage_buffers_segment_info",
  "powerline.bindings.vim.list_tabpages",
  "powerline.bindings.vim.powerline_vim_strtrans_error",
  "powerline.bindings.vim.python_to_vim",
  "powerline.bindings.vim.python_to_vim_types",
  "powerline.bindings.vim.register_buffer_cache",
  "powerline.bindings.vim.rettype_eval",
  "powerline.bindings.vim.rettype_func",
  "powerline.bindings.vim.safe_bytes_eval",
  "powerline.bindings.vim.str_to_bytes",
  "powerline.bindings.vim.unicode_eval",
  "powerline.bindings.vim.vim",
  "powerline.bindings.vim.vim_bufname",
  "powerline.bindings.vim.vim_command_exists",
  "powerline.bindings.vim.vim_encoding",
  "powerline.bindings.vim.vim_func_exists",
  "powerline.bindings.vim.vim_get_autoload_func",
  "powerline.bindings.vim.vim_get_func",
  "powerline.bindings.vim.vim_getbufoption",
  "powerline.bindings.vim.vim_getoption",
  "powerline.bindings.vim.vim_getvar",
  "powerline.bindings.vim.vim_getwinvar",
  "powerline.bindings.vim.vim_global_exists",
  "powerline.bindings.vim.vim_strtrans",
  "powerline.bindings.wm.DEFAULT_UPDATE_INTERVAL",
  "powerline.bindings.wm.XRANDR_OUTPUT_RE",
  "powerline.bindings.wm.awesome.AwesomeThread",
  "powerline.bindings.wm.awesome.read_to_log",
  "powerline.bindings.wm.awesome.run",
  "powerline.bindings.wm.conn",
  "powerline.bindings.wm.get_connected_xrandr_outputs",
  "powerline.bindings.wm.get_i3_connection",
  "powerline.bindings.wm.wm_threads",
  "powerline.bindings.wm.wm_threads.keys",
  "powerline.bindings.zsh.Args",
  "powerline.bindings.zsh.Environment",
  "powerline.bindings.zsh.Prompt",
  "powerline.bindings.zsh.ZshPowerline",
  "powerline.bindings.zsh.environ",
  "powerline.bindings.zsh.get_var_config",
  "powerline.bindings.zsh.set_prompt",
  "powerline.bindings.zsh.shutdown",
  "powerline.bindings.zsh.string",
  "powerline.bindings.zsh.used_powerlines",
  "powerline.bindings.zsh.zsh",
  "powerline.bindings.zsh.zsh_expand",
  "powerline.colorscheme.ATTR_BOLD",
  "powerline.colorscheme.ATTR_ITALIC",
  "powerline.colorscheme.ATTR_UNDERLINE",
  "powerline.colorscheme.Colorscheme",
  "powerline.colorscheme.get_attrs_flag",
  "powerline.colorscheme.pick_gradient_value",
  "powerline.commands.config.ConfigArgParser",
  "powerline.commands.config.SHELL_ACTIONS",
  "powerline.commands.config.StrFunction",
  "powerline.commands.config.TMUX_ACTIONS",
  "powerline.commands.lemonbar.get_argparser",
  "powerline.commands.main.arg_to_unicode",
  "powerline.commands.main.finish_args",
  "powerline.commands.main.int_or_sig",
  "powerline.config.BINDINGS_DIRECTORY",
  "powerline.config.DEFAULT_SYSTEM_CONFIG_DIR",
  "powerline.config.POWERLINE_ROOT",
  "powerline.config.TMUX_CONFIG_DIRECTORY",
  "powerline.create_logger",
  "powerline.finish_common_config",
  "powerline.gen_module_attr_getter",
  "powerline.generate_config_finder",
  "powerline.get_config_paths",
  "powerline.get_default_theme",
  "powerline.get_fallback_logger",
  "powerline.ipython.IPythonInfo",
  "powerline.ipython.IPythonPowerline",
  "powerline.ipython.RewriteResult",
  "powerline.lemonbar.LemonbarPowerline",
  "powerline.lib.add_divider_highlight_group",
  "powerline.lib.config.ConfigLoader",
  "powerline.lib.config.DeferredWatcher",
  "powerline.lib.config.DummyWatcher",
  "powerline.lib.config.load_json_config",
  "powerline.lib.config.open_file",
  "powerline.lib.dict.REMOVE_THIS_KEY",
  "powerline.lib.dict._clear_special_values",
  "powerline.lib.dict._setmerged",
  "powerline.lib.dict.mergeargs",
  "powerline.lib.dict.mergedicts",
  "powerline.lib.dict.mergedicts_copy",
  "powerline.lib.dict.updated",
  "powerline.lib.encoding.get_preferred_arguments_encoding",
  "powerline.lib.encoding.get_preferred_environment_encoding",
  "powerline.lib.encoding.get_preferred_file_contents_encoding",
  "powerline.lib.encoding.get_preferred_file_name_encoding",
  "powerline.lib.encoding.get_preferred_input_encoding",
  "powerline.lib.encoding.get_preferred_output_encoding",
  "powerline.lib.encoding.get_unicode_writer",
  "powerline.lib.encoding.locale",
  "powerline.lib.humanize_bytes.humanize_bytes",
  "powerline.lib.humanize_bytes.unit_list",
  "powerline.lib.inotify.INotify",
  "powerline.lib.inotify.INotifyError",
  "powerline.lib.inotify._inotify",
  "powerline.lib.inotify.ctypes",
  "powerline.lib.inotify.load_inotify",
  "powerline.lib.inotify.os",
  "powerline.lib.inotify.sys",
  "powerline.lib.memoize.default_cache_key",
  "powerline.lib.monotonic.GetTickCount64",
  "powerline.lib.monotonic._mach_timebase_info",
  "powerline.lib.monotonic.libc",
  "powerline.lib.monotonic.libc_name",
  "powerline.lib.monotonic.librt",
  "powerline.lib.monotonic.mach_absolute_time",
  "powerline.lib.monotonic.mach_timebase_info",
  "powerline.lib.monotonic.mach_timebase_info_data_p",
  "powerline.lib.monotonic.mach_timebase_info_data_t",
  "powerline.lib.monotonic.monotonic",
  "powerline.lib.monotonic.timebase",
  "powerline.lib.monotonic.timespec",
  "powerline.lib.monotonic.tspec",
  "powerline.lib.overrides.keyvaluesplit",
  "powerline.lib.overrides.parse_override_var",
  "powerline.lib.overrides.parse_value",
  "powerline.lib.overrides.parsedotval",
  "powerline.lib.path.join",
  "powerline.lib.path.realpath",
  "powerline.lib.shell.asrun",
  "powerline.lib.shell.readlines",
  "powerline.lib.shell.run_cmd",
  "powerline.lib.shell.which",
  "powerline.lib.threaded.KwThreadedSegment",
  "powerline.lib.threaded.MultiRunnedThread",
  "powerline.lib.threaded.ThreadedSegment",
  "powerline.lib.unicode.FailedUnicode",
  "powerline.lib.unicode._strwidth_documentation",
  "powerline.lib.unicode._unichr",
  "powerline.lib.unicode.last_swe_idx",
  "powerline.lib.unicode.out_u",
  "powerline.lib.unicode.powerline_decode_error",
  "powerline.lib.unicode.register_strwidth_error",
  "powerline.lib.unicode.safe_unicode",
  "powerline.lib.unicode.string",
  "powerline.lib.unicode.strwidth_ucs_2",
  "powerline.lib.unicode.strwidth_ucs_4",
  "powerline.lib.unicode.surrogate_pair_to_character",
  "powerline.lib.unicode.tointiter",
  "powerline.lib.unicode.u",
  "powerline.lib.unicode.unichr",
  "powerline.lib.unicode.unicode",
  "powerline.lib.unicode.unicode.__getitem__",
  "powerline.lib.unicode.unicode.__getslice__",
  "powerline.lib.unicode.unicode.__new__",
  "powerline.lib.unicode.unicode.encode",
  "powerline.lib.url.urllib_read",
  "powerline.lib.url.urllib_urlencode",
  "powerline.lib.vcs.FileStatusCache",
  "powerline.lib.vcs.TreeStatusCache",
  "powerline.lib.vcs._branch_watcher",
  "powerline.lib.vcs._file_watcher",
  "powerline.lib.vcs._tree_status_cache",
  "powerline.lib.vcs.branch_lock",
  "powerline.lib.vcs.branch_name_cache",
  "powerline.lib.vcs.branch_watcher",
  "powerline.lib.vcs.bzr.CoerceIO",
  "powerline.lib.vcs.bzr.branch_name_from_config_file",
  "powerline.lib.vcs.bzr.nick_pat",
  "powerline.lib.vcs.bzr.state",
  "powerline.lib.vcs.file_status_cache",
  "powerline.lib.vcs.file_status_lock",
  "powerline.lib.vcs.file_watcher",
  "powerline.lib.vcs.generate_directories",
  "powerline.lib.vcs.get_branch_name",
  "powerline.lib.vcs.get_fallback_create_watcher",
  "powerline.lib.vcs.get_file_status",
  "powerline.lib.vcs.git.GitRepository",
  "powerline.lib.vcs.git.Repository",
  "powerline.lib.vcs.git._ref_pat",
  "powerline.lib.vcs.git.branch_name_from_config_file",
  "powerline.lib.vcs.git.git_directory",
  "powerline.lib.vcs.guess",
  "powerline.lib.vcs.mercurial.branch_name_from_config_file",
  "powerline.lib.vcs.tree_status",
  "powerline.lib.vcs.vcs_props",
  "powerline.lib.vcs.vcs_props_bytes",
  "powerline.lib.watcher.create_file_watcher",
  "powerline.lib.watcher.create_tree_watcher",
  "powerline.lib.watcher.inotify.BaseDirChanged",
  "powerline.lib.watcher.inotify.DirTooLarge",
  "powerline.lib.watcher.inotify.INotifyFileWatcher",
  "powerline.lib.watcher.inotify.INotifyTreeWatcher",
  "powerline.lib.watcher.inotify.NoSuchDir",
  "powerline.lib.watcher.stat.StatFileWatcher",
  "powerline.lib.watcher.tree.DummyTreeWatcher",
  "powerline.lib.watcher.tree.TreeWatcher",
  "powerline.lib.watcher.uv.UvFileWatcher",
  "powerline.lib.watcher.uv.UvNotFound",
  "powerline.lib.watcher.uv.UvThread",
  "powerline.lib.watcher.uv.UvTreeWatcher",
  "powerline.lib.watcher.uv.UvWatcher",
  "powerline.lib.watcher.uv._uv_thread",
  "powerline.lib.watcher.uv.import_pyuv",
  "powerline.lib.watcher.uv.normpath",
  "powerline.lib.watcher.uv.pyuv",
  "powerline.lib.watcher.uv.pyuv_version_info",
  "powerline.lib.watcher.uv.start_uv_thread",
  "powerline.lib.wraps_saveargs",
  "powerline.lint.args_spec",
  "powerline.lint.checks._highlight_group_spec",
  "powerline.lint.checks.check_args",
  "powerline.lint.checks.check_args_variant",
  "powerline.lint.checks.check_color",
  "powerline.lint.checks.check_config",
  "powerline.lint.checks.check_exinclude_function",
  "powerline.lint.checks.check_ext",
  "powerline.lint.checks.check_full_segment_data",
  "powerline.lint.checks.check_group",
  "powerline.lint.checks.check_highlight_group",
  "powerline.lint.checks.check_highlight_groups",
  "powerline.lint.checks.check_hl_group_name",
  "powerline.lint.checks.check_key_compatibility",
  "powerline.lint.checks.check_log_file_level",
  "powerline.lint.checks.check_logging_handler",
  "powerline.lint.checks.check_matcher_func",
  "powerline.lint.checks.check_segment_data_key",
  "powerline.lint.checks.check_segment_function",
  "powerline.lint.checks.check_segment_module",
  "powerline.lint.checks.check_top_theme",
  "powerline.lint.checks.check_translated_group_name",
  "powerline.lint.checks.common_names",
  "powerline.lint.checks.generic_keys",
  "powerline.lint.checks.get_all_possible_functions",
  "powerline.lint.checks.get_function_strings",
  "powerline.lint.checks.get_one_segment_function",
  "powerline.lint.checks.highlight_group_spec",
  "powerline.lint.checks.highlight_keys",
  "powerline.lint.checks.hl_exists",
  "powerline.lint.checks.hl_group_in_colorscheme",
  "powerline.lint.checks.list_sep",
  "powerline.lint.checks.logging",
  "powerline.lint.checks.register_common_name",
  "powerline.lint.checks.required_keys",
  "powerline.lint.checks.threaded_args_specs",
  "powerline.lint.checks.type_keys",
  "powerline.lint.color_spec",
  "powerline.lint.colors_spec",
  "powerline.lint.colorscheme_spec",
  "powerline.lint.common_theme_spec",
  "powerline.lint.context.Context",
  "powerline.lint.context.JStr",
  "powerline.lint.context.key_sep",
  "powerline.lint.context.list_themes",
  "powerline.lint.dict2",
  "powerline.lint.divider_spec",
  "powerline.lint.dividers_spec",
  "powerline.lint.divside_spec",
  "powerline.lint.exinclude_spec",
  "powerline.lint.ext_spec",
  "powerline.lint.ext_theme_spec",
  "powerline.lint.find_all_ext_config_files",
  "powerline.lint.function_name_re",
  "powerline.lint.gen_components_spec",
  "powerline.lint.generate_json_config_loader",
  "powerline.lint.group_name_spec",
  "powerline.lint.group_spec",
  "powerline.lint.groups_spec",
  "powerline.lint.imp.WithPath",
  "powerline.lint.imp.import_function",
  "powerline.lint.imp.import_segment",
  "powerline.lint.inspect.getconfigargspec",
  "powerline.lint.load_json_file",
  "powerline.lint.log_format_spec",
  "powerline.lint.log_level_spec",
  "powerline.lint.logging",
  "powerline.lint.main_spec",
  "powerline.lint.main_theme_spec",
  "powerline.lint.markedjson.composer.Composer",
  "powerline.lint.markedjson.composer.Composer.__init__",
  "powerline.lint.markedjson.composer.ComposerError",
  "powerline.lint.markedjson.constructor.BaseConstructor",
  "powerline.lint.markedjson.constructor.Constructor",
  "powerline.lint.markedjson.constructor.Constructor.__init__",
  "powerline.lint.markedjson.constructor.ConstructorError",
  "powerline.lint.markedjson.constructor.marked",
  "powerline.lint.markedjson.error.DelayedEchoErr",
  "powerline.lint.markedjson.error.EchoErr",
  "powerline.lint.markedjson.error.Mark",
  "powerline.lint.markedjson.error.MarkedError",
  "powerline.lint.markedjson.error.NON_PRINTABLE_RE",
  "powerline.lint.markedjson.error.NON_PRINTABLE_RE.search",
  "powerline.lint.markedjson.error.NON_PRINTABLE_STR",
  "powerline.lint.markedjson.error.NON_PRINTABLE_STR.translate",
  "powerline.lint.markedjson.error.echoerr",
  "powerline.lint.markedjson.error.format_error",
  "powerline.lint.markedjson.error.repl",
  "powerline.lint.markedjson.error.strtrans",
  "powerline.lint.markedjson.events.CollectionEndEvent",
  "powerline.lint.markedjson.events.CollectionStartEvent",
  "powerline.lint.markedjson.events.DocumentEndEvent",
  "powerline.lint.markedjson.events.DocumentStartEvent",
  "powerline.lint.markedjson.events.Event",
  "powerline.lint.markedjson.events.MappingEndEvent",
  "powerline.lint.markedjson.events.MappingStartEvent",
  "powerline.lint.markedjson.events.NodeEvent",
  "powerline.lint.markedjson.events.ScalarEvent",
  "powerline.lint.markedjson.events.SequenceEndEvent",
  "powerline.lint.markedjson.events.SequenceStartEvent",
  "powerline.lint.markedjson.events.StreamEndEvent",
  "powerline.lint.markedjson.events.StreamStartEvent",
  "powerline.lint.markedjson.load",
  "powerline.lint.markedjson.loader.Loader",
  "powerline.lint.markedjson.markedvalue.MarkedDict",
  "powerline.lint.markedjson.markedvalue.MarkedFloat",
  "powerline.lint.markedjson.markedvalue.MarkedInt",
  "powerline.lint.markedjson.markedvalue.MarkedList",
  "powerline.lint.markedjson.markedvalue.MarkedUnicode",
  "powerline.lint.markedjson.markedvalue.MarkedValue",
  "powerline.lint.markedjson.markedvalue.classcache",
  "powerline.lint.markedjson.markedvalue.gen_getnewargs",
  "powerline.lint.markedjson.markedvalue.gen_init",
  "powerline.lint.markedjson.markedvalue.gen_marked_value",
  "powerline.lint.markedjson.markedvalue.gen_new",
  "powerline.lint.markedjson.markedvalue.specialclasses",
  "powerline.lint.markedjson.nodes.CollectionNode",
  "powerline.lint.markedjson.nodes.MappingNode",
  "powerline.lint.markedjson.nodes.Node",
  "powerline.lint.markedjson.nodes.ScalarNode",
  "powerline.lint.markedjson.nodes.SequenceNode",
  "powerline.lint.markedjson.parser.Parser",
  "powerline.lint.markedjson.parser.Parser.__init__",
  "powerline.lint.markedjson.parser.ParserError",
  "powerline.lint.markedjson.reader.Reader",
  "powerline.lint.markedjson.reader.Reader.__init__",
  "powerline.lint.markedjson.reader.ReaderError",
  "powerline.lint.markedjson.resolver.BaseResolver",
  "powerline.lint.markedjson.resolver.Resolver",
  "powerline.lint.markedjson.resolver.Resolver.__init__",
  "powerline.lint.markedjson.scanner.Scanner",
  "powerline.lint.markedjson.scanner.Scanner.__init__",
  "powerline.lint.markedjson.scanner.ScannerError",
  "powerline.lint.markedjson.scanner.SimpleKey",
  "powerline.lint.markedjson.scanner.hexdigits_set",
  "powerline.lint.markedjson.tokens.FlowEntryToken",
  "powerline.lint.markedjson.tokens.FlowMappingEndToken",
  "powerline.lint.markedjson.tokens.FlowMappingStartToken",
  "powerline.lint.markedjson.tokens.FlowSequenceEndToken",
  "powerline.lint.markedjson.tokens.FlowSequenceStartToken",
  "powerline.lint.markedjson.tokens.KeyToken",
  "powerline.lint.markedjson.tokens.ScalarToken",
  "powerline.lint.markedjson.tokens.StreamEndToken",
  "powerline.lint.markedjson.tokens.StreamStartToken",
  "powerline.lint.markedjson.tokens.Token",
  "powerline.lint.markedjson.tokens.ValueToken",
  "powerline.lint.mode_translations_value_spec",
  "powerline.lint.name_spec",
  "powerline.lint.open_file",
  "powerline.lint.register_common_names",
  "powerline.lint.segdict_spec",
  "powerline.lint.segment_data_value_spec",
  "powerline.lint.segment_module_spec",
  "powerline.lint.segment_spec",
  "powerline.lint.segment_spec_base",
  "powerline.lint.segments_spec",
  "powerline.lint.selfcheck.havemarks",
  "powerline.lint.shell_colorscheme_spec",
  "powerline.lint.shell_mode_spec",
  "powerline.lint.spaces_spec",
  "powerline.lint.spec.NON_PRINTABLE_RE",
  "powerline.lint.spec.Spec",
  "powerline.lint.subsegment_spec",
  "powerline.lint.term_color_spec",
  "powerline.lint.theme_spec",
  "powerline.lint.top_colorscheme_spec",
  "powerline.lint.top_theme_spec",
  "powerline.lint.true_color_spec",
  "powerline.lint.updated_with_config",
  "powerline.lint.vim_colorscheme_spec",
  "powerline.lint.vim_mode_spec",
  "powerline.listers.vim.buffer_updated_segment_info",
  "powerline.listers.vim.tabpage_updated_segment_info",
  "powerline.listers.vim.vim",
  "powerline.load_config",
  "powerline.logging",
  "powerline.matchers.vim.plugin.nerdtree.NERD_TREE_RE",
  "powerline.pdb.PDBPowerline",
  "powerline.renderer.NBSP",
  "powerline.renderer.Renderer",
  "powerline.renderer.Renderer.character_translations.copy",
  "powerline.renderer.Renderer.render",
  "powerline.renderer.Renderer.segment_info.copy",
  "powerline.renderer.construct_returned_value",
  "powerline.renderer.np_character_translations",
  "powerline.renderer.np_control_character_translations",
  "powerline.renderer.np_invalid_character_re",
  "powerline.renderer.np_invalid_character_translations",
  "powerline.renderer.os",
  "powerline.renderer.translate_np",
  "powerline.renderers.i3bar.I3barRenderer",
  "powerline.renderers.ipython.IPythonRenderer",
  "powerline.renderers.ipython.pre_5.IPythonNonPromptRenderer",
  "powerline.renderers.ipython.pre_5.IPythonPre50Renderer",
  "powerline.renderers.ipython.pre_5.IPythonPromptRenderer",
  "powerline.renderers.ipython.pre_5.RendererProxy",
  "powerline.renderers.ipython.since_5.IPythonPygmentsRenderer",
  "powerline.renderers.ipython.since_5.PowerlinePromptStyle",
  "powerline.renderers.ipython.since_5.PowerlinePromptToken",
  "powerline.renderers.ipython.since_5.PowerlineStyleDict",
  "powerline.renderers.lemonbar.LemonbarRenderer",
  "powerline.renderers.pango_markup.PangoMarkupRenderer",
  "powerline.renderers.pdb.PDBRenderer",
  "powerline.renderers.shell.PromptRenderer",
  "powerline.renderers.shell.ShellRenderer",
  "powerline.renderers.shell.ShellRenderer.character_translations.copy",
  "powerline.renderers.shell.bash.BashPromptRenderer",
  "powerline.renderers.shell.int_to_rgb",
  "powerline.renderers.shell.ksh.KshPromptRenderer",
  "powerline.renderers.shell.readline.ReadlineRenderer",
  "powerline.renderers.shell.tcsh.TcshPromptRenderer",
  "powerline.renderers.shell.zsh.ZshPromptRenderer",
  "powerline.renderers.shell.zsh.ZshPromptRenderer.character_translations.copy",
  "powerline.renderers.tmux.TmuxRenderer",
  "powerline.renderers.tmux.attrs_to_tmux_attrs",
  "powerline.renderers.vim.VimRenderer",
  "powerline.renderers.vim._vim_mode",
  "powerline.renderers.vim.mode_translations",
  "powerline.renderers.vim.vim",
  "powerline.renderers.vim.vim_mode",
  "powerline.reraise",
  "powerline.segment.always_true",
  "powerline.segment.gen_segment_getter",
  "powerline.segment.get_attr_func",
  "powerline.segment.get_fallback_segment",
  "powerline.segment.get_function",
  "powerline.segment.get_segment_key",
  "powerline.segment.get_string",
  "powerline.segment.list_segment_key_values",
  "powerline.segment.process_segment",
  "powerline.segment.process_segment_lister",
  "powerline.segment.segment_getters",
  "powerline.segment.set_segment_highlighting",
  "powerline.segments.Segment",
  "powerline.segments.common.bat._fetch_battery_info",
  "powerline.segments.common.bat._get_battery_status",
  "powerline.segments.common.env.CwdSegment",
  "powerline.segments.common.env._geteuid",
  "powerline.segments.common.env.os",
  "powerline.segments.common.env.username",
  "powerline.segments.common.mail.EmailIMAPSegment",
  "powerline.segments.common.mail._IMAPKey",
  "powerline.segments.common.net.ExternalIpSegment",
  "powerline.segments.common.net.NetworkLoadSegment",
  "powerline.segments.common.net._external_ip",
  "powerline.segments.common.net._get_bytes",
  "powerline.segments.common.net._get_interfaces",
  "powerline.segments.common.net._interface_start_re",
  "powerline.segments.common.net._interface_starts",
  "powerline.segments.common.players.ClementinePlayerSegment",
  "powerline.segments.common.players.CmusPlayerSegment",
  "powerline.segments.common.players.DbusPlayerSegment",
  "powerline.segments.common.players.ITunesPlayerSegment",
  "powerline.segments.common.players.MpdPlayerSegment",
  "powerline.segments.common.players.PlayerSegment",
  "powerline.segments.common.players.RDIOPlayerSegment",
  "powerline.segments.common.players.RhythmboxPlayerSegment",
  "powerline.segments.common.players.STATE_SYMBOLS",
  "powerline.segments.common.players.SpotifyAppleScriptPlayerSegment",
  "powerline.segments.common.players.SpotifyDbusPlayerSegment",
  "powerline.segments.common.players._common_args",
  "powerline.segments.common.players._convert_seconds",
  "powerline.segments.common.players._convert_state",
  "powerline.segments.common.players._get_dbus_player_status",
  "powerline.segments.common.players._old_name",
  "powerline.segments.common.players.spotify_apple_script",
  "powerline.segments.common.players.spotify_dbus",
  "powerline.segments.common.sys.CPULoadPercentSegment",
  "powerline.segments.common.sys._get_uptime",
  "powerline.segments.common.sys.psutil",
  "powerline.segments.common.time.UNICODE_TEXT_TRANSLATION",
  "powerline.segments.common.vcs.BranchSegment",
  "powerline.segments.common.vcs.StashSegment",
  "powerline.segments.common.vcs.stash",
  "powerline.segments.common.wthr.WeatherSegment",
  "powerline.segments.common.wthr.temp_conversions",
  "powerline.segments.common.wthr.temp_units",
  "powerline.segments.common.wthr.weather_conditions_codes",
  "powerline.segments.common.wthr.weather_conditions_icons",
  "powerline.segments.i3wm.SCRATCHPAD_ICONS",
  "powerline.segments.i3wm.WORKSPACE_REGEX",
  "powerline.segments.i3wm.format_name",
  "powerline.segments.i3wm.scratchpad_groups",
  "powerline.segments.i3wm.workspace_groups",
  "powerline.segments.shell.ShellCwdSegment",
  "powerline.segments.vim.CSV_PARSE_LINES",
  "powerline.segments.vim.CSV_SNIFF_LINES",
  "powerline.segments.vim.SCHEME_RE",
  "powerline.segments.vim.VimBranchSegment",
  "powerline.segments.vim.VimStashSegment",
  "powerline.segments.vim.csv_cache",
  "powerline.segments.vim.detect_text_csv_dialect",
  "powerline.segments.vim.plugin.capslock.vim",
  "powerline.segments.vim.plugin.commandt.FINDERS_WITHOUT_PATH",
  "powerline.segments.vim.plugin.commandt.finder",
  "powerline.segments.vim.plugin.commandt.initialize",
  "powerline.segments.vim.plugin.commandt.vim",
  "powerline.segments.vim.plugin.nerdtree.vim",
  "powerline.segments.vim.plugin.syntastic.vim",
  "powerline.segments.vim.plugin.tagbar.currenttag",
  "powerline.segments.vim.plugin.tagbar.tag_cache",
  "powerline.segments.vim.plugin.tagbar.vim",
  "powerline.segments.vim.process_csv_buffer",
  "powerline.segments.vim.read_csv",
  "powerline.segments.vim.sniffer",
  "powerline.segments.vim.trailing_whitespace_cache",
  "powerline.segments.vim.vim",
  "powerline.segments.vim.vim_funcs",
  "powerline.segments.vim.vim_modes",
  "powerline.segments.vim.window_cached",
  "powerline.segments.with_docstring",
  "powerline.shell.ShellPowerline",
  "powerline.theme.Theme",
  "powerline.theme.add_spaces_center",
  "powerline.theme.add_spaces_left",
  "powerline.theme.add_spaces_right",
  "powerline.theme.expand_functions",
  "powerline.theme.new_empty_segment_line",
  "powerline.theme.requires_filesystem_watcher",
  "powerline.theme.requires_segment_info",
  "powerline.vim.VimPowerline",
  "powerline.vim.VimVarHandler",
  "powerline.vim._override_from",
  "powerline.vim.get_default_pycmd",
  "powerline.vim.pycmd",
  "powerline.vim.set_pycmd",
  "powerline.vim.vim",
  "print_path",
  "prompt_class",
  "prototype",
  "psutil.Process.username",
  "psutil.cpu_percent",
  "pwd.getpwuid",
  "pygments.token.Token.Generic.Prompt.Powerline",
  "raw_input",
  "re.MULTILINE",
  "re.X",
  "re.compile",
  "re.search",
  "recurse",
  "replace_env",
  "saved_msfn",
  "shlex.split",
  "shutil.which",
  "socket.gethostname",
  "string.hexdigits",
  "struct.Struct",
  "strwidth",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.check_call",
  "sys.argv",
  "sys.exc_info",
  "sys.exit",
  "sys.getfilesystemencoding",
  "sys.maxunicode",
  "sys.modules",
  "sys.modules.pop",
  "sys.path",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.version_info",
  "threading.Event",
  "threading.Lock",
  "threading.RLock",
  "threading.Thread",
  "threading.Timer",
  "time.CLOCK_MONOTONIC",
  "time.CLOCK_MONOTONIC_RAW",
  "time.clock_gettime",
  "time.clock_gettime.argtypes",
  "time.sleep",
  "tuple.__add__",
  "tuple.__new__",
  "type.__getattribute__",
  "types.FrameType",
  "types.GeneratorType",
  "types.MethodType",
  "unicodedata.combining",
  "unicodedata.east_asian_width",
  "urllib2.HTTPError",
  "urllib2.urlopen",
  "vim.command",
  "vim.current.window",
  "vim.eval",
  "vim.strwidth",
  "w",
  "warnings.warn",
  "weakref.WeakValueDictionary",
  "weakref.ref",
  "win32com.client.GetObject",
  "wref",
  "xml.sax.saxutils.escape",
  "zsh.columns",
  "zsh.environ",
  "zsh.eval",
  "zsh.expand",
  "zsh.getvalue",
  "zsh.last_exit_code",
  "zsh.pipestatus",
  "zsh.set_special_string",
  "zsh.setvalue"
 ],
 "deps": {
  "Exception": [],
  "IPython": [],
  "Marked": [],
  "PowerClass": [],
  "PowerlineClass": [],
  "Renderer": [],
  "ValueError": [],
  "__builtin__": [],
  "__main__": [],
  "_access_check": [],
  "_contents_func": [],
  "_saved_msfn": [],
  "add_multiplier": [],
  "append": [],
  "argparse": [],
  "atexit": [],
  "bytes": [],
  "bzrlib": [],
  "check": [],
  "cmp_func": [],
  "codecs": [],
  "collections": [],
  "condition_function": [],
  "constructor": [],
  "copy": [],
  "csv": [],
  "ctypes": [],
  "datetime": [],
  "dbus": [],
  "devget": [],
  "dict": [],
  "ee": [
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.208-py_0",
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.209-py_0",
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.216-pyh8c360ce_0",
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.218-pyh9f0ad1d_0",
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.219-pyh9f0ad1d_0",
   "earthengine-api/conda-forge/noarch/earthengine-api-0.1.234-pyh9f0ad1d_0"
  ],
  "errno": [],
  "events": [
   "events/conda-forge/noarch/events-0.4-pyhd8ed1ab_0"
  ],
  "exclude_function": [],
  "f": [],
  "file_changed": [],
  "format": [],
  "func": [],
  "function": [],
  "functools": [],
  "fw": [],
  "gc": [],
  "gen_display_condition": [],
  "get": [],
  "get_highlighting": [],
  "get_key": [],
  "get_module_attr": [],
  "get_omitted_args": [],
  "get_segment": [],
  "get_segment_info": [],
  "get_segment_selector": [],
  "get_selector": [],
  "getpass": [],
  "handler_class": [],
  "hglib": [],
  "hl_groups": [],
  "i3": [],
  "i3ipc": [],
  "imaplib": [],
  "include_function": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "keyfunc": [],
  "libqtile": [],
  "listed_key": [],
  "locale": [],
  "logging": [],
  "matcher": [],
  "math": [],
  "mpd": [],
  "multiprocessing": [],
  "object": [],
  "operator": [],
  "os": [],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.7-py_0"
  ],
  "pick_color": [],
  "pkgutil": [],
  "platform": [],
  "powerline": [],
  "print_path": [],
  "prompt_class": [],
  "prompt_toolkit": [
   "prompt-toolkit/conda-forge/noarch/prompt-toolkit-3.0.11-pyha770c72_0"
  ],
  "prototype": [],
  "psutil": [],
  "pwd": [],
  "pygments": [],
  "raw_input": [],
  "re": [],
  "recurse": [],
  "replace_env": [],
  "saved_msfn": [],
  "shlex": [],
  "shutil": [],
  "socket": [],
  "string": [],
  "struct": [],
  "strwidth": [],
  "subprocess": [],
  "sys": [],
  "threading": [],
  "time": [],
  "tuple": [],
  "type": [],
  "types": [],
  "unicodedata": [],
  "urllib2": [],
  "vim": [],
  "w": [],
  "warnings": [],
  "weakref": [],
  "win32com": [],
  "wref": [],
  "xml": [],
  "zsh": []
 }
}