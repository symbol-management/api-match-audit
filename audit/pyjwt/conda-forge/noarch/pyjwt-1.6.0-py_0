{
 "bad": [
  "ECAlgorithm.SHA256",
  "ECAlgorithm.SHA384",
  "ECAlgorithm.SHA512",
  "HMACAlgorithm.SHA256",
  "HMACAlgorithm.SHA384",
  "HMACAlgorithm.SHA512",
  "RSAAlgorithm.SHA256",
  "RSAAlgorithm.SHA384",
  "RSAAlgorithm.SHA512",
  "RSAPSSAlgorithm.SHA256",
  "RSAPSSAlgorithm.SHA384",
  "RSAPSSAlgorithm.SHA512",
  "collections.Iterable",
  "collections.Mapping",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
  "cryptography.hazmat.primitives.asymmetric.padding",
  "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.padding.PSS",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmp1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmq1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_iqmp",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_recover_prime_factors",
  "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature",
  "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hashes.SHA384",
  "cryptography.hazmat.primitives.hashes.SHA512",
  "cryptography.hazmat.primitives.serialization.load_pem_private_key",
  "cryptography.hazmat.primitives.serialization.load_pem_public_key",
  "cryptography.hazmat.primitives.serialization.load_ssh_public_key",
  "ecdsa",
  "ecdsa.SigningKey",
  "ecdsa.SigningKey.from_pem",
  "ecdsa.VerifyingKey",
  "ecdsa.VerifyingKey.from_pem",
  "ecdsa.der.UnexpectedDER",
  "ecdsa.util.sigdecode_string",
  "ecdsa.util.sigencode_string",
  "hashlib",
  "hashlib.sha256",
  "hashlib.sha384",
  "hashlib.sha512",
  "hmac",
  "hmac.compare_digest",
  "hmac.new",
  "input.encode",
  "struct",
  "struct.pack",
  "struct.unpack",
  "sys",
  "sys.stdin.isatty",
  "sys.stdin.readline",
  "time",
  "warnings.warn"
 ],
 "deps": {
  "Crypto": [
   "pycrypto/conda-forge/linux-64/pycrypto-2.6.1-py27h516909a_1003"
  ],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "argparse": [
   "argparse/conda-forge/osx-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "binascii": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython"
  ],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}