{
 "bad": [
  "copy.copy",
  "data_layer_cls",
  "datetime.datetime",
  "flask.abort",
  "flask.current_app.config",
  "flask.current_app.config.get",
  "flask.current_app.extensions",
  "flask.current_app.extensions.captureException",
  "flask.jsonify",
  "flask.make_response",
  "flask.request.args",
  "flask.request.args.get",
  "flask.request.endpoint",
  "flask.request.get_json",
  "flask.request.headers",
  "flask.request.headers.split",
  "flask.request.method",
  "flask.request.method.lower",
  "flask.request.oauth",
  "flask.request.path",
  "flask.request.path.split",
  "flask.request.view_args",
  "flask.url_for",
  "flask.views.MethodView",
  "flask.views.MethodViewType",
  "flask.wrappers.Response",
  "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer",
  "flask_rest_jsonapi.data_layers.base.BaseDataLayer",
  "flask_rest_jsonapi.data_layers.filtering.alchemy.Node",
  "flask_rest_jsonapi.data_layers.filtering.alchemy.create_filters",
  "flask_rest_jsonapi.decorators.check_headers",
  "flask_rest_jsonapi.decorators.check_method_requirements",
  "flask_rest_jsonapi.decorators.jsonapi_exception_formatter",
  "flask_rest_jsonapi.errors.jsonapi_errors",
  "flask_rest_jsonapi.exceptions.BadRequest",
  "flask_rest_jsonapi.exceptions.InvalidField",
  "flask_rest_jsonapi.exceptions.InvalidFilters",
  "flask_rest_jsonapi.exceptions.InvalidInclude",
  "flask_rest_jsonapi.exceptions.InvalidSort",
  "flask_rest_jsonapi.exceptions.InvalidType",
  "flask_rest_jsonapi.exceptions.JsonApiException",
  "flask_rest_jsonapi.exceptions.ObjectNotFound",
  "flask_rest_jsonapi.exceptions.RelatedObjectNotFound",
  "flask_rest_jsonapi.exceptions.RelationNotFound",
  "flask_rest_jsonapi.pagination.add_pagination_links",
  "flask_rest_jsonapi.querystring.QueryStringManager",
  "flask_rest_jsonapi.resource.Resource",
  "flask_rest_jsonapi.resource.ResourceList",
  "flask_rest_jsonapi.resource.ResourceMeta",
  "flask_rest_jsonapi.resource.ResourceRelationship",
  "flask_rest_jsonapi.schema.compute_schema",
  "flask_rest_jsonapi.schema.get_model_field",
  "flask_rest_jsonapi.schema.get_nested_fields",
  "flask_rest_jsonapi.schema.get_related_schema",
  "flask_rest_jsonapi.schema.get_relationships",
  "flask_rest_jsonapi.schema.get_schema_field",
  "flask_rest_jsonapi.schema.get_schema_from_type",
  "flask_rest_jsonapi.utils.JSONEncoder",
  "func",
  "functools.wraps",
  "inspect.getmro",
  "json.JSONEncoder",
  "json.JSONEncoder.default",
  "json.dumps",
  "json.loads",
  "marshmallow.ValidationError",
  "marshmallow.base.SchemaABC",
  "marshmallow.class_registry._registry.items",
  "marshmallow.class_registry.get_class",
  "marshmallow_jsonapi.exceptions.IncorrectTypeError",
  "marshmallow_jsonapi.fields.List",
  "marshmallow_jsonapi.fields.Nested",
  "marshmallow_jsonapi.fields.Relationship",
  "math.ceil",
  "method",
  "nested_model",
  "six.moves.urllib.parse.urlencode",
  "six.with_metaclass",
  "sqlalchemy.and_",
  "sqlalchemy.inspection.inspect",
  "sqlalchemy.not_",
  "sqlalchemy.or_",
  "sqlalchemy.orm.ColumnProperty",
  "sqlalchemy.orm.RelationshipProperty",
  "sqlalchemy.orm.attributes.QueryableAttribute",
  "sqlalchemy.orm.collections.InstrumentedList",
  "sqlalchemy.orm.exc.NoResultFound",
  "sqlalchemy.orm.joinedload",
  "types.MethodType",
  "uuid.UUID",
  "view"
 ],
 "deps": {
  "copy": [],
  "data_layer_cls": [],
  "datetime": [],
  "flask": [],
  "flask_rest_jsonapi": [],
  "func": [],
  "functools": [],
  "inspect": [],
  "json": [],
  "marshmallow": [],
  "marshmallow_jsonapi": [],
  "math": [],
  "method": [],
  "nested_model": [],
  "six": [],
  "sqlalchemy": [],
  "types": [],
  "uuid": [],
  "view": []
 }
}