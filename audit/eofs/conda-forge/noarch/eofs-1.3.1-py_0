{
 "bad": [
  "__asma",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "_broadcast_weights",
  "cdms2",
  "cdms2.MV.reshape",
  "cdms2.createAxis",
  "cdms2.createVariable",
  "cdms2.isVariable",
  "cf_units.Unit",
  "collections",
  "collections.Iterable",
  "copy.copy",
  "eofs.T",
  "eofs.__file__",
  "eofs.__init__.__all__",
  "eofs.compressed",
  "eofs.multivariate.__init__.__all__",
  "eofs.reshape",
  "eofs.shape",
  "eofs.tools.__init__.__all__",
  "functools.reduce",
  "iris.analysis.cartography.area_weights",
  "iris.analysis.cartography.cosine_latitude_weights",
  "iris.coords.DimCoord",
  "iris.cube.Cube",
  "iris.exceptions.CoordinateMultiDimError",
  "iris.exceptions.CoordinateNotFoundError",
  "numpy",
  "numpy.abs",
  "numpy.arange",
  "numpy.broadcast_arrays",
  "numpy.concatenate",
  "numpy.corrcoef",
  "numpy.cos",
  "numpy.datetime64",
  "numpy.deg2rad",
  "numpy.diag",
  "numpy.dot",
  "numpy.float64",
  "numpy.int",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.load",
  "numpy.logical_not",
  "numpy.ma",
  "numpy.ma.MaskedArray",
  "numpy.ma.allclose",
  "numpy.ma.array",
  "numpy.ma.dot",
  "numpy.ma.is_masked",
  "numpy.ma.masked_invalid",
  "numpy.ma.outer",
  "numpy.max",
  "numpy.min",
  "numpy.nan",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.outer",
  "numpy.prod",
  "numpy.product",
  "numpy.rollaxis",
  "numpy.seterr",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.where",
  "os",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.join",
  "pytest",
  "pytest.mark.parametrize",
  "pytest.raises",
  "pytest.skip",
  "standard.correlation_map",
  "standard.covariance_map",
  "time_check",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xarray",
  "xray",
  "xray.DataArray",
  "xray.IndexVariable"
 ],
 "deps": {
  "__asma": [],
  "__future__": [],
  "_broadcast_weights": [],
  "cdms2": [],
  "cf_units": [],
  "collections": [],
  "copy": [],
  "eofs": [],
  "functools": [],
  "iris": [],
  "numpy": [],
  "os": [],
  "pycodestyle": [
   "pycodestyle/conda-forge/noarch/pycodestyle-2.6.0-pyh9f0ad1d_0"
  ],
  "pytest": [],
  "standard": [],
  "time_check": [],
  "warnings": [],
  "xarray": [],
  "xray": []
 }
}