{
 "bad": [
  "CMA_f_wrapper",
  "DIRECT.solve",
  "DIRECT_f_wrapper",
  "EI.AcquisitionEI",
  "ES.AcquisitionEntropySearch",
  "GPy.inference.mcmc.HMC",
  "GPy.kern.Matern32",
  "GPy.kern.Matern52",
  "GPy.kern.RBF",
  "GPy.models.GPRegression",
  "GPy.models.InputWarpedGP",
  "GPy.models.SparseGPRegression",
  "GPy.models.WarpedGP",
  "GPy.priors.Gamma.from_EV",
  "GPyOpt.__version__",
  "GPyOpt.acquisitions.AcquisitionBase",
  "GPyOpt.acquisitions.EI.AcquisitionEI",
  "GPyOpt.acquisitions.EI_mcmc.AcquisitionEI_MCMC",
  "GPyOpt.acquisitions.LCB.AcquisitionLCB",
  "GPyOpt.acquisitions.LCB_mcmc.AcquisitionLCB_MCMC",
  "GPyOpt.acquisitions.LP.AcquisitionLP",
  "GPyOpt.acquisitions.MPI.AcquisitionMPI",
  "GPyOpt.acquisitions.MPI_mcmc.AcquisitionMPI_MCMC",
  "GPyOpt.core.evaluators.base.EvaluatorBase",
  "GPyOpt.core.evaluators.batch_local_penalization.LocalPenalization",
  "GPyOpt.core.evaluators.batch_local_penalization.estimate_L",
  "GPyOpt.core.evaluators.batch_random.RandomBatch",
  "GPyOpt.core.evaluators.batch_thompson.ThompsonBatch",
  "GPyOpt.core.evaluators.sequential.Sequential",
  "GPyOpt.core.task.cost.CostModel",
  "GPyOpt.core.task.objective.Objective",
  "GPyOpt.core.task.space.Design_space",
  "GPyOpt.core.task.variables.BanditVariable",
  "GPyOpt.core.task.variables.CategoricalVariable",
  "GPyOpt.core.task.variables.ContinuousVariable",
  "GPyOpt.core.task.variables.DiscreteVariable",
  "GPyOpt.core.task.variables.Variable",
  "GPyOpt.experiment_design.grid_design.GridDesign",
  "GPyOpt.experiment_design.grid_design.iroot",
  "GPyOpt.experiment_design.grid_design.multigrid",
  "GPyOpt.experiment_design.latin_design.LatinDesign",
  "GPyOpt.experiment_design.random_design.RandomDesign",
  "GPyOpt.experiment_design.random_design.samples_multidimensional_uniform",
  "GPyOpt.experiment_design.sobol_design.SobolDesign",
  "GPyOpt.interface.config_parser.default_config",
  "GPyOpt.interface.config_parser.update_config",
  "GPyOpt.interface.output.DataSaver",
  "GPyOpt.interface.output.Logger",
  "GPyOpt.interface.output.Report",
  "GPyOpt.methods.bayesian_optimization.BayesianOptimization",
  "GPyOpt.methods.modular_bayesian_optimization.ModularBayesianOptimization",
  "GPyOpt.models.GPModel",
  "GPyOpt.models.GPModel_MCMC",
  "GPyOpt.models.base.BOModel",
  "GPyOpt.models.gpmodel.GPModel",
  "GPyOpt.objective_examples.experiments1d.function1d",
  "GPyOpt.objective_examples.experiments2d.function2d",
  "GPyOpt.optimization.acquisition_optimizer.ContextManager",
  "GPyOpt.optimization.acquisition_optimizer.max_objective_anchor_points_logic",
  "GPyOpt.optimization.acquisition_optimizer.random_design_type",
  "GPyOpt.optimization.acquisition_optimizer.sobol_design_type",
  "GPyOpt.optimization.acquisition_optimizer.thompson_sampling_anchor_points_logic",
  "GPyOpt.optimization.anchor_points_generator.AnchorPointsGenerator",
  "GPyOpt.optimization.anchor_points_generator.ObjectiveAnchorPointsGenerator",
  "GPyOpt.optimization.anchor_points_generator.RandomAnchorPointsGenerator",
  "GPyOpt.optimization.anchor_points_generator.ThompsonSamplingAnchorPointsGenerator",
  "GPyOpt.optimization.optimizer.OptCma",
  "GPyOpt.optimization.optimizer.OptDirect",
  "GPyOpt.optimization.optimizer.OptLbfgs",
  "GPyOpt.optimization.optimizer.OptimizationWithContext",
  "GPyOpt.optimization.optimizer.Optimizer",
  "GPyOpt.util.epmgp.eps",
  "GPyOpt.util.epmgp.l2p",
  "GPyOpt.util.epmgp.log_relative_gauss",
  "GPyOpt.util.epmgp.lt_factor",
  "GPyOpt.util.epmgp.min_faktor",
  "GPyOpt.util.epmgp.sq2",
  "GPyOpt.util.general.reshape",
  "GPyOpt.util.general.values_to_array",
  "GPyOpt.util.mcmc_sampler.AffineInvariantEnsembleSampler",
  "GPyOpt.util.mcmc_sampler.McmcSampler",
  "InvalidVariableNameError",
  "LCB.AcquisitionLCB",
  "LCB_mcmc.AcquisitionLCB_MCMC",
  "LP.AcquisitionLP",
  "MPI.AcquisitionMPI",
  "MPI_mcmc.AcquisitionMPI_MCMC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "acquisitions.AcquisitionEI",
  "acquisitions.AcquisitionEI_MCMC",
  "acquisitions.AcquisitionLCB",
  "acquisitions.AcquisitionLCB_MCMC",
  "acquisitions.AcquisitionLP",
  "acquisitions.AcquisitionMPI",
  "acquisitions.AcquisitionMPI_MCMC",
  "acquisitions.select_acquisition",
  "add_context",
  "anchor_points_generator.ObjectiveAnchorPointsGenerator",
  "anchor_points_generator.ThompsonSamplingAnchorPointsGenerator",
  "ast.literal_eval",
  "base.AcquisitionBase",
  "base.AcquisitionBase.__init__",
  "base.BOModel",
  "base.EvaluatorBase",
  "base.ExperimentDesign",
  "base.SamplingBasedBatchEvaluator",
  "batch_local_penalization.LocalPenalization",
  "batch_random.RandomBatch",
  "batch_thompson.ThompsonBatch",
  "cma.fmin",
  "config_parser.default_config",
  "copy.deepcopy",
  "core.bo.BO",
  "core.errors.FullyExploredOptimizationDomainError",
  "core.errors.InvalidConfigError",
  "core.errors.InvalidVariableNameError",
  "core.evaluators.LocalPenalization",
  "core.evaluators.RandomBatch",
  "core.evaluators.Sequential",
  "core.evaluators.ThompsonBatch",
  "core.evaluators.select_evaluator",
  "core.task.SingleObjective",
  "core.task.cost.CostModel",
  "core.task.cost.constant_cost_withGradients",
  "core.task.objective.SingleObjective",
  "core.task.space.Design_space",
  "core.task.space.Design_space.fromConfig",
  "core.task.variables.BanditVariable",
  "core.task.variables.CategoricalVariable",
  "core.task.variables.DiscreteVariable",
  "csv.writer",
  "datetime.datetime.now",
  "df",
  "emcee.EnsembleSampler",
  "errors.InvalidConfigError",
  "experiment_design.initial_design",
  "f",
  "f_copy",
  "f_df",
  "gpmodel.GPModel",
  "gpmodel.GPModel_MCMC",
  "grid_design.GridDesign",
  "imp.load_source",
  "is_duplicate",
  "itertools.product",
  "json.load",
  "latin_design.LatinDesign",
  "matplotlib.pyplot.axis",
  "matplotlib.pyplot.axvline",
  "matplotlib.pyplot.colorbar",
  "matplotlib.pyplot.contourf",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "methods.ModularBayesianOptimization",
  "models.GPModel",
  "models.gpmodel.GPModel",
  "models.gpmodel.GPModel_MCMC",
  "models.input_warped_gpmodel.InputWarpedGPModel",
  "models.rfmodel.RFModel",
  "models.select_model",
  "models.warpedgpmodel.WarpedGPModel",
  "multiprocessing.Pipe",
  "multiprocessing.Process",
  "numpy.Infinity",
  "numpy.NAN",
  "numpy.NINF",
  "numpy.NaN",
  "numpy.PINF",
  "numpy.abs",
  "numpy.add",
  "numpy.all",
  "numpy.amax",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_2d",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cos",
  "numpy.cumprod",
  "numpy.delete",
  "numpy.diag",
  "numpy.diagonal",
  "numpy.dot",
  "numpy.einsum",
  "numpy.empty",
  "numpy.exp",
  "numpy.eye",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.float32",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int64",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.isposinf",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.cholesky",
  "numpy.linalg.linalg.LinAlgError",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.linspace",
  "numpy.log",
  "numpy.log1p",
  "numpy.max",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.multiply",
  "numpy.ndarray",
  "numpy.ndarray.flatten",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.prod",
  "numpy.ptp",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.uniform",
  "numpy.reshape",
  "numpy.rot90",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.square",
  "numpy.subtract",
  "numpy.sum",
  "numpy.triu",
  "numpy.triu_indices",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "optimization.AcquisitionOptimizer",
  "optimization.acquisition_optimizer.AcquisitionOptimizer",
  "optimization.acquisition_optimizer.ContextManager",
  "optimization.anchor_points_generator.RandomAnchorPointsGenerator",
  "optimization.anchor_points_generator.ThompsonSamplingAnchorPointsGenerator",
  "optimization.optimizer.apply_optimizer",
  "optimization.optimizer.choose_optimizer",
  "optimizer.apply_optimizer",
  "optimizer.choose_optimizer",
  "os.chdir",
  "os.path.join",
  "plotting.plots_bo.plot_acquisition",
  "plotting.plots_bo.plot_convergence",
  "pyDOE.lhs",
  "pylab.grid",
  "pylab.savefig",
  "random_design.RandomDesign",
  "rfmodel.RFModel",
  "scipy.optimize.minimize",
  "scipy.special.erfc",
  "scipy.stats.norm.cdf",
  "scipy.stats.norm.logcdf",
  "scipy.stats.norm.ppf",
  "sequential.Sequential",
  "sklearn.ensemble.RandomForestRegressor",
  "sobol_design.SobolDesign",
  "sobol_seq.i4_sobol_generate",
  "time.strftime",
  "time.time",
  "util.arguments_manager.ArgumentsManager",
  "util.duplicate_manager.DuplicateManager",
  "util.epmgp.joint_min",
  "util.general.best_value",
  "util.general.get_quantiles",
  "util.general.normalize",
  "util.general.reshape",
  "util.general.samples_multidimensional_uniform",
  "util.general.spawn",
  "util.io.gen_datestr",
  "variables.create_variable",
  "warnings.filterwarnings",
  "warpedgpmodel.WarpedGPModel"
 ],
 "deps": {
  "CMA_f_wrapper": [],
  "DIRECT": [],
  "DIRECT_f_wrapper": [],
  "EI": [],
  "ES": [],
  "GPy": [],
  "GPyOpt": [],
  "InvalidVariableNameError": [],
  "LCB": [],
  "LCB_mcmc": [],
  "LP": [],
  "MPI": [],
  "MPI_mcmc": [],
  "abc": [],
  "acquisitions": [],
  "add_context": [],
  "anchor_points_generator": [],
  "ast": [],
  "base": [],
  "batch_local_penalization": [],
  "batch_random": [],
  "batch_thompson": [],
  "cma": [],
  "config_parser": [],
  "constraint": [
   "python-constraint/conda-forge/noarch/python-constraint-1.3.1-py_1"
  ],
  "copy": [],
  "core": [],
  "csv": [],
  "datetime": [],
  "df": [],
  "emcee": [],
  "errors": [],
  "experiment_design": [],
  "f": [],
  "f_copy": [],
  "f_df": [],
  "gpmodel": [],
  "grid_design": [],
  "imp": [],
  "is_duplicate": [],
  "itertools": [],
  "json": [],
  "latin_design": [],
  "matplotlib": [],
  "methods": [],
  "models": [],
  "multiprocessing": [],
  "numpy": [],
  "optimization": [],
  "optimizer": [],
  "os": [],
  "plotting": [],
  "pyDOE": [],
  "pylab": [],
  "random_design": [],
  "rfmodel": [],
  "scipy": [],
  "sequential": [],
  "six": [
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "sklearn": [],
  "sobol_design": [],
  "sobol_seq": [],
  "time": [],
  "util": [],
  "variables": [],
  "warnings": [],
  "warpedgpmodel": []
 }
}