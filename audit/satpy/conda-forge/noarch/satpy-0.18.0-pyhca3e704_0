{
 "bad": [
  "FakeMod",
  "FakeZarr",
  "Foo",
  "MockScene",
  "Queue.Queue",
  "_area_id",
  "_calc_chunks",
  "_google_cloud_platform.get_bucket_files",
  "_histogram_equalization_helper",
  "_linear_normalization_from_0to1",
  "_merge_colormaps",
  "cls",
  "cmap_comp",
  "collections.Mapping",
  "collections.abc.Mapping",
  "comp",
  "comp._refl3x",
  "comp.area",
  "comp.filename",
  "compositor",
  "compositor.id",
  "dask",
  "dask.array.atleast_2d",
  "dask.array.fliplr",
  "dask.array.flipud",
  "dask.array.meshgrid",
  "dask.distributed.get_client",
  "errno",
  "errno.EEXIST",
  "filetype_cls",
  "fill_h5",
  "flatten",
  "fun",
  "func",
  "geotiepoints.SatelliteInterpolator",
  "geotiepoints.interpolator.Interpolator",
  "geotiepoints.metop20kmto1km",
  "geotiepoints.modisinterpolator.modis_1km_to_250m",
  "geotiepoints.modisinterpolator.modis_1km_to_500m",
  "geotiepoints.modisinterpolator.modis_5km_to_1km",
  "geotiepoints.multilinear.MultilinearInterpolator",
  "get_ipython",
  "get_lrec",
  "h5py.h5r.Reference",
  "h5py.h5r.get_name",
  "hashlib.sha1",
  "histogram_equalization",
  "imageio",
  "interpolation_function",
  "interpolator",
  "is_int",
  "itertools",
  "itertools.product",
  "libtiff.TIFF",
  "libtiff.TIFF.open",
  "loader",
  "logging.Logger.trace",
  "logging_on",
  "make_day_night_masks",
  "make_xarray",
  "method_to_decorate",
  "mloader",
  "mock",
  "mock.MagicMock",
  "mock.patch",
  "mock.patch.dict",
  "mock_open",
  "netCDF4.Dataset",
  "netCDF4.Variable",
  "netCDF4.default_fillvals",
  "netCDF4.default_fillvals.get",
  "numpy.NaN",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.bitwise_and",
  "numpy.bitwise_or",
  "numpy.byte",
  "numpy.bytes_",
  "numpy.datetime64",
  "numpy.deg2rad",
  "numpy.divmod",
  "numpy.e",
  "numpy.equal",
  "numpy.fabs",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.isnat",
  "numpy.left_shift",
  "numpy.log",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.ma.vstack",
  "numpy.maximum",
  "numpy.nan",
  "numpy.newaxis.astype",
  "numpy.object_",
  "numpy.power",
  "numpy.rad2deg",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.uniform",
  "numpy.right_shift",
  "numpy.rint",
  "numpy.stack",
  "numpy.string_",
  "numpy.timedelta64",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "os.chdir",
  "os.close",
  "os.environ.get",
  "os.environ.pop",
  "os.getcwd",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.rmdir",
  "p",
  "proj",
  "psp",
  "psp.get_angles",
  "pycoast.ContourWriterAGG.assert_called_with",
  "pycoast.ContourWriterAGG.return_value",
  "pygac.gac_calibration.calibrate_solar",
  "pygac.gac_calibration.calibrate_thermal",
  "pygac.gac_klm.GACKLMReader",
  "pygac.gac_pod.GACPODReader",
  "pygac.gac_pod.GACPODReader.return_value.get_angles.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_calibrated_channels.assert_called_once",
  "pygac.gac_pod.GACPODReader.return_value.get_calibrated_channels.return_value.__getitem__.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_lonlat.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_midnight_scanline.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_miss_lines.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_qual_flags.assert_called_once",
  "pygac.gac_pod.GACPODReader.return_value.get_qual_flags.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_times.return_value",
  "pygac.gac_pod.GACPODReader.return_value.get_tle_lines.return_value",
  "pygac.gac_pod.GACPODReader.return_value.mask",
  "pygac.utils",
  "pygrib",
  "pygrib.open",
  "pyhdf.SD.SD",
  "pyhdf.SD.SDC",
  "pyhdf.SD.SDC.CHAR",
  "pyhdf.SD.SDC.CREATE",
  "pyhdf.SD.SDC.FLOAT32",
  "pyhdf.SD.SDC.FLOAT64",
  "pyhdf.SD.SDC.INT16",
  "pyhdf.SD.SDC.INT32",
  "pyhdf.SD.SDC.INT8",
  "pyhdf.SD.SDC.READ",
  "pyhdf.SD.SDC.TRUNC",
  "pyhdf.SD.SDC.UCHAR",
  "pyhdf.SD.SDC.UINT16",
  "pyhdf.SD.SDC.UINT32",
  "pyhdf.SD.SDC.UINT8",
  "pyhdf.SD.SDC.WRITE",
  "pyhdf.SD.SDS",
  "pyhdf.error.HDF4Error",
  "pyninjotiff.ninjotiff",
  "pyninjotiff.ninjotiff.get_product_config",
  "pyninjotiff.ninjotiff.save",
  "pyproj.CRS.from_string",
  "pyresample.bilinear.xarr.XArrayResamplerBilinear",
  "pyresample.boundary.AreaDefBoundary",
  "pyresample.boundary.Boundary",
  "pyresample.bucket",
  "pyresample.bucket.BucketResampler",
  "pyresample.ewa.fornav",
  "pyresample.ewa.ll2cr",
  "pyresample.geometry",
  "pyresample.geometry.AreaDefinition",
  "pyresample.geometry.BaseDefinition",
  "pyresample.geometry.StackedAreaDefinition",
  "pyresample.geometry.SwathDefinition",
  "pyresample.kd_tree.XArrayResamplerNN",
  "pyresample.parse_area_file",
  "pyresample.utils",
  "pyresample.utils.get_area_def",
  "pyresample.utils.get_area_def_from_raster",
  "pyresample.utils.parse_area_file",
  "pyresample.utils.proj4_radius_parameters",
  "pyresample.utils.proj4_str_to_dict",
  "re.DOTALL",
  "ref_cor",
  "ref_cor.attrs",
  "resampler_class",
  "satpy.DatasetID.from_dict",
  "satpy.MultiScene.from_files",
  "satpy.__init__.CALIBRATION_ORDER",
  "satpy.__init__.DEFAULT_CALIBRATION_ORDER",
  "satpy.composites.__init__.BackgroundCompositor",
  "satpy.composites.__init__.CloudCompositor",
  "satpy.composites.__init__.ColormapCompositor",
  "satpy.composites.__init__.CompositeBase",
  "satpy.composites.__init__.DayNightCompositor",
  "satpy.composites.__init__.Filler",
  "satpy.composites.__init__.FillingCompositor",
  "satpy.composites.__init__.GenericCompositor",
  "satpy.composites.__init__.IncompatibleAreas",
  "satpy.composites.__init__.IncompatibleTimes",
  "satpy.composites.__init__.LOG",
  "satpy.composites.__init__.LuminanceSharpeningCompositor",
  "satpy.composites.__init__.NEGLIBLE_COORDS",
  "satpy.composites.__init__.NIRReflectance",
  "satpy.composites.__init__.PaletteCompositor",
  "satpy.composites.__init__.RGBCompositor",
  "satpy.composites.__init__.RatioSharpenedRGB",
  "satpy.composites.__init__.RealisticColors",
  "satpy.composites.__init__.SandwichCompositor",
  "satpy.composites.__init__.SelfSharpenedRGB",
  "satpy.composites.__init__.SunZenithCorrectorBase",
  "satpy.composites.__init__._mean4",
  "satpy.composites.__init__.add_bands",
  "satpy.composites.__init__.check_times",
  "satpy.composites.__init__.enhance2dataset",
  "satpy.composites.__init__.zero_missing_data",
  "satpy.demo.__init__._makedirs",
  "satpy.enhancements.__init__.LOG",
  "satpy.enhancements.__init__._lookup_delayed",
  "satpy.enhancements.__init__._merge_colormaps",
  "satpy.enhancements.__init__._three_d_effect_delayed",
  "satpy.enhancements.__init__.apply_enhancement",
  "satpy.enhancements.__init__.create_colormap",
  "satpy.readers.OLD_READER_NAMES.keys",
  "satpy.readers.__init__.DatasetDict",
  "satpy.readers.__init__.LOG",
  "satpy.readers.__init__.OLD_READER_NAMES",
  "satpy.readers.__init__.TooManyResults",
  "satpy.readers.__init__._wl_dist",
  "satpy.readers.__init__.configs_for_reader",
  "satpy.readers.__init__.filter_keys_by_dataset_id",
  "satpy.readers.__init__.get_best_dataset_key",
  "satpy.readers.__init__.get_key",
  "satpy.readers.__init__.load_reader",
  "satpy.readers.__init__.read_reader_config",
  "satpy.readers.electrol_hrit.HRITGOMSEpilogueFileHandler.filename",
  "satpy.readers.electrol_hrit.HRITGOMSEpilogueFileHandler.mda",
  "satpy.readers.electrol_hrit.HRITGOMSPrologueFileHandler.filename",
  "satpy.readers.electrol_hrit.HRITGOMSPrologueFileHandler.mda",
  "satpy.readers.file_handlers.BaseFileHandler.__abstractmethods__",
  "satpy.readers.file_handlers.BaseFileHandler._abstractmethods__",
  "satpy.readers.goes_imager_hrit.HRITGOESFileHandler.filename",
  "satpy.readers.goes_imager_hrit.HRITGOESFileHandler.mda",
  "satpy.readers.goes_imager_hrit.HRITGOESPrologueFileHandler.filename",
  "satpy.readers.goes_imager_hrit.HRITGOESPrologueFileHandler.mda",
  "satpy.readers.goes_imager_hrit.SPACECRAFTS.get",
  "satpy.readers.goes_imager_nc.GOESEUMNCFileHandler._is_vis",
  "satpy.readers.goes_imager_nc.GOESNCFileHandler._is_vis",
  "satpy.readers.hdfeos_base.HDFEOSGeoReader.DATASET_NAMES",
  "satpy.readers.hdfeos_base.HDFEOSGeoReader.read_mda",
  "satpy.readers.hrit_base.base_hdr_map.copy",
  "satpy.readers.hrit_jma.HRITJMAFileHandler.filename",
  "satpy.readers.hrit_jma.HRITJMAFileHandler.mda",
  "satpy.readers.hrit_jma.PLATFORMS.items",
  "satpy.readers.netcdf_utils.netCDF4.Variable",
  "satpy.readers.seviri_base.CHANNEL_NAMES.items",
  "satpy.readers.seviri_base.CHANNEL_NAMES.values",
  "satpy.readers.seviri_l1b_native_hdr.GSDTRecords.gp_pk_header",
  "satpy.readers.seviri_l1b_native_hdr.GSDTRecords.gp_pk_sh1",
  "satpy.readers.seviri_l1b_native_hdr.native_header.itemsize",
  "satpy.satin.helper_functions.boundaries_to_extent",
  "satpy.tests.__init__.suite",
  "satpy.tests.compositor_tests.__init__.TestAddBands",
  "satpy.tests.compositor_tests.__init__.TestBackgroundCompositor",
  "satpy.tests.compositor_tests.__init__.TestCloudTopHeightCompositor",
  "satpy.tests.compositor_tests.__init__.TestColormapCompositor",
  "satpy.tests.compositor_tests.__init__.TestDayNightCompositor",
  "satpy.tests.compositor_tests.__init__.TestDifferenceCompositor",
  "satpy.tests.compositor_tests.__init__.TestFillingCompositor",
  "satpy.tests.compositor_tests.__init__.TestGenericCompositor",
  "satpy.tests.compositor_tests.__init__.TestInlineComposites",
  "satpy.tests.compositor_tests.__init__.TestLuminanceSharpeningCompositor",
  "satpy.tests.compositor_tests.__init__.TestMatchDataArrays",
  "satpy.tests.compositor_tests.__init__.TestNIRReflectance",
  "satpy.tests.compositor_tests.__init__.TestPSPAtmosphericalCorrection",
  "satpy.tests.compositor_tests.__init__.TestPSPRayleighReflectance",
  "satpy.tests.compositor_tests.__init__.TestPaletteCompositor",
  "satpy.tests.compositor_tests.__init__.TestPrecipCloudsCompositor",
  "satpy.tests.compositor_tests.__init__.TestRatioSharpenedCompositors",
  "satpy.tests.compositor_tests.__init__.TestSandwichCompositor",
  "satpy.tests.compositor_tests.__init__.TestSingleBandCompositor",
  "satpy.tests.compositor_tests.__init__.TestStaticImageCompositor",
  "satpy.tests.compositor_tests.__init__.TestSunZenithCorrector",
  "satpy.tests.compositor_tests.__init__._enhance2dataset",
  "satpy.writers.__init__.DecisionTree",
  "satpy.writers.__init__.EnhancementDecisionTree",
  "satpy.writers.__init__.Enhancer",
  "satpy.writers.__init__.ImageWriter",
  "satpy.writers.__init__.LOG",
  "satpy.writers.__init__.Writer",
  "satpy.writers.__init__._burn_overlay",
  "satpy.writers.__init__.add_decorate",
  "satpy.writers.__init__.add_logo",
  "satpy.writers.__init__.add_overlay",
  "satpy.writers.__init__.add_text",
  "satpy.writers.__init__.compute_writer_results",
  "satpy.writers.__init__.configs_for_writer",
  "satpy.writers.__init__.get_enhanced_image",
  "satpy.writers.__init__.load_writer_configs",
  "satpy.writers.__init__.read_writer_config",
  "satpy.writers.__init__.split_results",
  "satpy.writers.__init__.to_image",
  "scale_inplace",
  "scipy.interpolate.interpnd.LinearNDInterpolator",
  "scipy.interpolate.interpnd._ndim_coords_from_arrays",
  "scipy.special.erf",
  "six.moves.configparser",
  "six.moves.configparser.ConfigParser",
  "six.moves.reduce",
  "socket.gethostname",
  "sys",
  "sys.argv",
  "sys.exit",
  "sys.modules",
  "sys.platform.startswith",
  "sys.version_info",
  "sys.version_info.major",
  "test_func",
  "tile_gen",
  "tile_gen.xy_factors",
  "time",
  "time.mktime",
  "time.time",
  "timestamp_func",
  "tmp_mock",
  "trollimage.colormap.pubu.colors",
  "trollimage.colormap.pubu.values",
  "tuple.__hash__",
  "unittest.mock.patch.dict",
  "unittest.mock.patch.multiple",
  "unittest.mock.patch.object",
  "unittest2",
  "unittest2.TestCase",
  "unittest2.TestLoader",
  "unittest2.TestSuite",
  "unittest2.main",
  "unittest2.skip",
  "unittest2.skipIf",
  "urllib2.URLError",
  "urllib2.urlopen",
  "writer_class",
  "xrda"
 ],
 "deps": {
  "FakeMod": [],
  "FakeZarr": [],
  "Foo": [],
  "MockScene": [],
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "Queue": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_area_id": [],
  "_calc_chunks": [],
  "_google_cloud_platform": [],
  "_histogram_equalization_helper": [],
  "_linear_normalization_from_0to1": [],
  "_merge_colormaps": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bz2": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cartopy": [
   "cartopy/conda-forge/linux-64/cartopy-0.17.0-py27hbeedcd3_1007"
  ],
  "cls": [],
  "cmap_comp": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "comp": [],
  "compositor": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "eccodes": [
   "python-eccodes/conda-forge/linux-64/python-eccodes-2020.10.0-py39h1dff97c_0"
  ],
  "errno": [],
  "filetype_cls": [],
  "fill_h5": [],
  "flatten": [],
  "fnmatch": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "fun": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gcsfs": [
   "gcsfs/conda-forge/noarch/gcsfs-0.7.1-py_0"
  ],
  "geotiepoints": [],
  "geoviews": [
   "geoviews-core/conda-forge/noarch/geoviews-core-1.6.6-py_0"
  ],
  "get_ipython": [],
  "get_lrec": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "glymur": [
   "glymur/conda-forge/noarch/glymur-0.9.1-py_1"
  ],
  "h5netcdf": [
   "h5netcdf/conda-forge/noarch/h5netcdf-0.7.4-py_0"
  ],
  "h5py": [
   "h5py/conda-forge/linux-64/h5py-2.7.1-py36_1"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "histogram_equalization": [],
  "imageio": [],
  "interpolation_function": [],
  "interpolator": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_int": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "libtiff": [],
  "loader": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "logging_on": [],
  "make_day_night_masks": [],
  "make_xarray": [],
  "method_to_decorate": [],
  "mloader": [],
  "mock": [],
  "mock_open": [],
  "netCDF4": [
   "netcdf4/conda-forge/linux-64/netcdf4-1.4.3.2-py27h597e859_0",
   "netcdf4/conda-forge/linux-64/netcdf4-1.5.4-mpi_mpich_py38hf106642_1"
  ],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "p": [],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pint": [
   "pint/conda-forge/noarch/pint-0.11-py_1"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pprint": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "proj": [],
  "psp": [],
  "pycoast": [
   "pycoast/conda-forge/noarch/pycoast-1.2.2-py_0"
  ],
  "pydecorate": [
   "pydecorate/conda-forge/noarch/pydecorate-0.2.1-py_0"
  ],
  "pygac": [],
  "pygrib": [],
  "pyhdf": [],
  "pyninjotiff": [],
  "pyorbital": [
   "pyorbital/conda-forge/noarch/pyorbital-1.5.0-py_0"
  ],
  "pyproj": [
   "pyproj/conda-forge/linux-64/pyproj-2.6.1.post1-py36he34cbb8_0"
  ],
  "pyresample": [],
  "pyspectral": [
   "pyspectral/conda-forge/noarch/pyspectral-0.9.5-py_1"
  ],
  "queue": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "rasterio": [
   "rasterio/conda-forge/linux-64/rasterio-1.0.28-py27h900e953_1",
   "rasterio/conda-forge/linux-64/rasterio-1.2.5-py39hbc9cc8e_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ref_cor": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "resampler_class": [],
  "satpy": [],
  "scale_inplace": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "tables": [
   "pytables/conda-forge/linux-64/pytables-3.6.1-py37h2e9e83b_3"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test_func": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tile_gen": [],
  "time": [],
  "timestamp_func": [],
  "tmp_mock": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "trollimage": [
   "trollimage/conda-forge/noarch/trollimage-1.13.0-py_0"
  ],
  "trollsift": [
   "trollsift/conda-forge/noarch/trollsift-0.2.1-py_0"
  ],
  "tuple": [],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest2": [],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib2": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "writer_class": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.15.0-py_0"
  ],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "xrda": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ],
  "zarr": [
   "zarr/conda-forge/noarch/zarr-2.7.0-pyhd8ed1ab_0"
  ]
 }
}