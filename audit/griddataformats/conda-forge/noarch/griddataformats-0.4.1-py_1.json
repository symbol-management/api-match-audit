{
 "bad": [
  "AttributeError",
  "DerivedGrid",
  "Exception",
  "IndexError",
  "KeyError",
  "NotImplementedError",
  "Record",
  "StopIteration",
  "TypeError",
  "ValueError",
  "__name__",
  "_transform",
  "decode_header",
  "dict",
  "enumerate",
  "exporter",
  "float",
  "func",
  "get_versions",
  "gridData.CCP4.CCP4",
  "gridData.CCP4.CCP4._detect_byteorder",
  "gridData.CCP4.struct",
  "gridData.CCP4.warnings",
  "gridData.Grid",
  "gridData.OpenDX.DXInitObject",
  "gridData.OpenDX.DXParseError",
  "gridData.OpenDX.DXParser",
  "gridData.OpenDX.DXParserNoTokens",
  "gridData.OpenDX.DXclass",
  "gridData.OpenDX.Token",
  "gridData.OpenDX.array",
  "gridData.OpenDX.field",
  "gridData.OpenDX.gridconnections",
  "gridData.OpenDX.gridpositions",
  "gridData.OpenDX.numpy",
  "gridData.OpenDX.re",
  "gridData.OpenDX.warnings",
  "gridData._version.json",
  "gridData._version.version_json",
  "gridData.core.Grid",
  "gridData.core._grid",
  "gridData.core.ndmeshgrid",
  "gridData.core.numpy",
  "gridData.core.os",
  "gridData.core.six",
  "gridData.gOpenMol.Record",
  "gridData.gOpenMol.numpy",
  "gridData.gOpenMol.struct",
  "gridData.gOpenMol.warnings",
  "gridData.tests.test_ccp4.ccp4data",
  "gridData.tests.test_ccp4.g",
  "gridData.tests.test_ccp4.pytest",
  "gridData.tests.test_dx.pytest",
  "gridData.tests.test_grid.data",
  "gridData.tests.test_grid.f_arithmetic",
  "gridData.tests.test_grid.pytest",
  "gridData.tests.test_grid.six",
  "int",
  "isinstance",
  "len",
  "list",
  "loader",
  "map",
  "numpy.arange",
  "numpy.array",
  "numpy.diag",
  "numpy.eye",
  "numpy.float32",
  "numpy.fromfile",
  "numpy.histogramdd",
  "numpy.int64",
  "numpy.ma.MaskedArray",
  "numpy.ones",
  "numpy.random.random",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.zeros",
  "object",
  "object.id",
  "object.write",
  "open",
  "pkg_resources.resource_filename",
  "property",
  "six.moves.cPickle.HIGHEST_PROTOCOL",
  "six.moves.cPickle.dump",
  "six.moves.cPickle.load",
  "six.moves.range",
  "six.moves.zip",
  "six.next",
  "sorted",
  "staticmethod",
  "str",
  "struct.calcsize",
  "struct.unpack",
  "tuple",
  "type",
  "vars",
  "zip"
 ],
 "deps": []
}