{
 "bad": [
  "S3Mock",
  "_DictWithSchema",
  "_upload_file_to_s3",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "accept_file",
  "add_numbers",
  "add_one",
  "boto3.client",
  "boto3.resource",
  "botocore.exceptions.ClientError",
  "botocore.exceptions.WaiterError",
  "botocore.handlers.disable_signing",
  "client.ECSClient",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "conftest.AWS_REGION",
  "conftest.TEST_CLOUDWATCH_LOG_GROUP_NAME",
  "conftest.TEST_CLOUDWATCH_LOG_STREAM_NAME",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "csv.DictReader",
  "csv.DictWriter",
  "dagster.Array",
  "dagster.AssetMaterialization",
  "dagster.Bool",
  "dagster.DagsterEvent",
  "dagster.DagsterEventType.STEP_START",
  "dagster.Enum",
  "dagster.EnumValue",
  "dagster.EventMetadataEntry.path",
  "dagster.Field",
  "dagster.FileHandle",
  "dagster.Float",
  "dagster.InputDefinition",
  "dagster.Int",
  "dagster.IntSource",
  "dagster.List",
  "dagster.ModeDefinition",
  "dagster.Noneable",
  "dagster.Output",
  "dagster.OutputDefinition",
  "dagster.Permissive",
  "dagster.PipelineRun",
  "dagster.ResourceDefinition.hardcoded_resource",
  "dagster.SerializationStrategy",
  "dagster.Shape",
  "dagster.String",
  "dagster.StringSource",
  "dagster.SystemStorageData",
  "dagster.__version__",
  "dagster.check.NotImplementedCheckError",
  "dagster.check.bool_param",
  "dagster.check.dict_param",
  "dagster.check.inst_param",
  "dagster.check.int_param",
  "dagster.check.invariant",
  "dagster.check.list_param",
  "dagster.check.not_implemented",
  "dagster.check.opt_callable_param",
  "dagster.check.opt_inst_param",
  "dagster.check.opt_str_param",
  "dagster.check.opt_subclass_param",
  "dagster.check.param_invariant",
  "dagster.check.str_param",
  "dagster.configured",
  "dagster.core.definitions.events.ObjectStoreOperation",
  "dagster.core.definitions.events.ObjectStoreOperationType.CP_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.GET_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.RM_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.SET_OBJECT",
  "dagster.core.definitions.no_step_launcher.no_step_launcher",
  "dagster.core.definitions.step_launcher.StepLauncher",
  "dagster.core.errors.DagsterSubprocessError",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.events.EngineEventData",
  "dagster.core.events.log_step_event",
  "dagster.core.execution.api.create_execution_plan",
  "dagster.core.execution.api.execute_plan",
  "dagster.core.execution.api.scoped_pipeline_context",
  "dagster.core.execution.plan.external_step.PICKLED_EVENTS_FILE_NAME",
  "dagster.core.execution.plan.external_step.PICKLED_STEP_RUN_REF_FILE_NAME",
  "dagster.core.execution.plan.external_step.run_step_from_ref",
  "dagster.core.execution.plan.external_step.step_context_to_step_run_ref",
  "dagster.core.execution.plan.objects.StepOutputHandle",
  "dagster.core.instance.DagsterInstance",
  "dagster.core.instance.DagsterInstance.ephemeral",
  "dagster.core.instance.DagsterInstance.from_config",
  "dagster.core.instance.InstanceType.PERSISTENT",
  "dagster.core.launcher.CliApiRunLauncher",
  "dagster.core.launcher.RunLauncher",
  "dagster.core.log_manager.coerce_valid_log_level",
  "dagster.core.storage.compute_log_manager.ComputeIOType",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDERR",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDOUT",
  "dagster.core.storage.compute_log_manager.ComputeLogFileData",
  "dagster.core.storage.compute_log_manager.ComputeLogManager",
  "dagster.core.storage.compute_log_manager.MAX_BYTES_FILE_READ",
  "dagster.core.storage.event_log.SqliteEventLogStorage",
  "dagster.core.storage.file_cache.FileCache",
  "dagster.core.storage.file_manager.FileHandle",
  "dagster.core.storage.file_manager.FileManager",
  "dagster.core.storage.file_manager.TempfileManager",
  "dagster.core.storage.file_manager.check_file_like_obj",
  "dagster.core.storage.intermediate_storage.ObjectStoreIntermediateStorage",
  "dagster.core.storage.local_compute_log_manager.IO_TYPE_EXTENSION",
  "dagster.core.storage.local_compute_log_manager.LocalComputeLogManager",
  "dagster.core.storage.object_store.DEFAULT_SERIALIZATION_STRATEGY",
  "dagster.core.storage.object_store.ObjectStore",
  "dagster.core.storage.pipeline_run.PipelineRun",
  "dagster.core.storage.root.LocalArtifactStorage",
  "dagster.core.storage.runs.SqliteRunStorage.from_local",
  "dagster.core.storage.system_storage.build_intermediate_storage_from_object_store",
  "dagster.core.storage.system_storage.fs_intermediate_storage",
  "dagster.core.storage.system_storage.fs_system_storage",
  "dagster.core.storage.system_storage.mem_intermediate_storage",
  "dagster.core.storage.system_storage.mem_system_storage",
  "dagster.core.storage.type_storage.TypeStoragePlugin",
  "dagster.core.storage.type_storage.TypeStoragePluginRegistry",
  "dagster.core.types.dagster_type.Bool",
  "dagster.core.types.dagster_type.PythonObjectDagsterType",
  "dagster.core.types.dagster_type.String",
  "dagster.core.types.dagster_type.create_any_type",
  "dagster.core.types.dagster_type.resolve_dagster_type",
  "dagster.core.types.marshal.SerializationStrategy",
  "dagster.core.utils.check_dagster_package_version",
  "dagster.core.utils.make_new_run_id",
  "dagster.dagster_type_loader",
  "dagster.execute_pipeline",
  "dagster.execute_solid",
  "dagster.intermediate_storage",
  "dagster.lambda_solid",
  "dagster.logger",
  "dagster.pipeline",
  "dagster.reconstructable",
  "dagster.resource",
  "dagster.serdes.ConfigurableClass",
  "dagster.serdes.ConfigurableClassData",
  "dagster.seven.TemporaryDirectory",
  "dagster.seven.get_system_temp_directory",
  "dagster.seven.json.dumps",
  "dagster.seven.mock.MagicMock",
  "dagster.seven.mock.patch",
  "dagster.seven.mock.patch.object",
  "dagster.seven.urlparse",
  "dagster.solid",
  "dagster.system_storage",
  "dagster.usable_as_dagster_type",
  "dagster.utils.ensure_dir",
  "dagster.utils.ensure_file",
  "dagster.utils.merger.deep_merge_dicts",
  "dagster.utils.merger.merge_dicts",
  "dagster.utils.test.create_test_pipeline_execution_context",
  "dagster.utils.test.get_temp_file_handle_with_data",
  "dagster.utils.test.yield_empty_pipeline_context",
  "dagster_aws.cloudwatch.cloudwatch_logger",
  "dagster_aws.cloudwatch.loggers.CloudwatchLogsHandler",
  "dagster_aws.cloudwatch.loggers.EPOCH",
  "dagster_aws.cloudwatch.loggers.MAXIMUM_BATCH_SIZE",
  "dagster_aws.cloudwatch.loggers.OVERHEAD",
  "dagster_aws.cloudwatch.loggers.millisecond_timestamp",
  "dagster_aws.ecs.client.ECSClient",
  "dagster_aws.ecs.client.networkConfiguration",
  "dagster_aws.ecs.client.testclient",
  "dagster_aws.emr.EmrClusterState",
  "dagster_aws.emr.EmrClusterState.Waiting",
  "dagster_aws.emr.EmrError",
  "dagster_aws.emr.EmrJobRunner",
  "dagster_aws.emr.EmrJobRunner.construct_step_dict_for_command",
  "dagster_aws.emr.configs._define_auto_scaling_policy",
  "dagster_aws.emr.configs._define_bootstrap_actions",
  "dagster_aws.emr.configs._define_configurations",
  "dagster_aws.emr.configs._define_ebs_configuration",
  "dagster_aws.emr.configs._define_instance_fleets",
  "dagster_aws.emr.configs._define_instance_groups",
  "dagster_aws.emr.configs._define_steps",
  "dagster_aws.emr.emr.EmrError",
  "dagster_aws.emr.emr._FALLBACK_INSTANCE_PROFILE",
  "dagster_aws.emr.emr._FALLBACK_SERVICE_ROLE",
  "dagster_aws.emr.emr._get_reason",
  "dagster_aws.emr.emr_step_main.DONE",
  "dagster_aws.emr.emr_step_main.__file__",
  "dagster_aws.emr.emr_step_main.event_writing_loop",
  "dagster_aws.emr.emr_step_main.main",
  "dagster_aws.emr.pyspark_step_launcher.CODE_ZIP_NAME",
  "dagster_aws.emr.pyspark_step_launcher.EMR_SPARK_HOME",
  "dagster_aws.emr.pyspark_step_launcher.EmrPySparkStepLauncher",
  "dagster_aws.emr.pyspark_step_launcher.emr_pyspark_step_launcher",
  "dagster_aws.emr.types.EMR_CLUSTER_TERMINATED_STATES",
  "dagster_aws.emr.types.EmrClusterState",
  "dagster_aws.emr.utils.subset_run_config",
  "dagster_aws.redshift.FakeRedshiftResource.QUERY_RESULT",
  "dagster_aws.redshift.fake_redshift_resource",
  "dagster_aws.redshift.redshift_resource",
  "dagster_aws.redshift.resources.FakeRedshiftResource",
  "dagster_aws.redshift.resources.RedshiftResource",
  "dagster_aws.redshift.resources._BaseRedshiftResource",
  "dagster_aws.redshift.resources.define_redshift_config",
  "dagster_aws.s3.S3ComputeLogManager",
  "dagster_aws.s3.S3FileCache",
  "dagster_aws.s3.S3FileHandle",
  "dagster_aws.s3.S3FileManager",
  "dagster_aws.s3.S3IntermediateStorage",
  "dagster_aws.s3.S3ObjectStore",
  "dagster_aws.s3.compute_log_manager.S3ComputeLogManager",
  "dagster_aws.s3.file_cache.S3FileCache",
  "dagster_aws.s3.file_handle_to_s3",
  "dagster_aws.s3.file_manager.S3FileHandle",
  "dagster_aws.s3.file_manager.S3FileManager",
  "dagster_aws.s3.intermediate_storage.S3IntermediateStorage",
  "dagster_aws.s3.object_store.S3ObjectStore",
  "dagster_aws.s3.resources.S3_SESSION_CONFIG",
  "dagster_aws.s3.resources._s3_session_from_config",
  "dagster_aws.s3.s3_fake_resource.S3FakeSession",
  "dagster_aws.s3.s3_file_manager",
  "dagster_aws.s3.s3_plus_default_storage_defs",
  "dagster_aws.s3.s3_resource",
  "dagster_aws.s3.solids.dict_with_fields",
  "dagster_aws.s3.solids.last_key",
  "dagster_aws.s3.system_storage.s3_intermediate_storage",
  "dagster_aws.s3.system_storage.s3_system_storage",
  "dagster_aws.utils.mrjob.log4j.Log4jRecord",
  "dagster_aws.utils.mrjob.log4j._HADOOP_LOG4J_LINE_ALTERNATE_RE",
  "dagster_aws.utils.mrjob.log4j._HADOOP_LOG4J_LINE_RE",
  "dagster_aws.utils.mrjob.log4j.parse_hadoop_log4j_records",
  "dagster_aws.utils.mrjob.retry._DEFAULT_BACKOFF",
  "dagster_aws.utils.mrjob.retry._DEFAULT_MAX_BACKOFF",
  "dagster_aws.utils.mrjob.retry._DEFAULT_MAX_TRIES",
  "dagster_aws.utils.mrjob.retry._DEFAULT_MULTIPLIER",
  "dagster_aws.utils.mrjob.retry.log",
  "dagster_aws.utils.mrjob.utils._AWS_BACKOFF",
  "dagster_aws.utils.mrjob.utils._AWS_BACKOFF_MULTIPLIER",
  "dagster_aws.utils.mrjob.utils._AWS_MAX_TRIES",
  "dagster_aws.utils.mrjob.utils._boto3_now",
  "dagster_aws.utils.mrjob.utils._client_error_code",
  "dagster_aws.utils.mrjob.utils._client_error_status",
  "dagster_aws.utils.mrjob.utils._is_retriable_client_error",
  "dagster_aws.utils.mrjob.utils._wrap_aws_client",
  "dagster_aws.utils.mrjob.utils.strip_microseconds",
  "dagster_aws.version.__version__",
  "dagster_aws_tests.cloudwatch_tests.conftest.AWS_REGION",
  "dagster_aws_tests.cloudwatch_tests.conftest.TEST_CLOUDWATCH_LOG_GROUP_NAME",
  "dagster_aws_tests.cloudwatch_tests.conftest.TEST_CLOUDWATCH_LOG_STREAM_NAME",
  "dagster_aws_tests.cloudwatch_tests.test_loggers.NUM_POLL_ATTEMPTS",
  "dagster_aws_tests.cloudwatch_tests.test_loggers.TEN_MINUTES_MS",
  "dagster_aws_tests.cloudwatch_tests.test_loggers.hello_cloudwatch",
  "dagster_aws_tests.cloudwatch_tests.test_loggers.hello_cloudwatch_pipeline",
  "dagster_aws_tests.emr_tests.test_emr.REGION",
  "dagster_aws_tests.emr_tests.test_emr_step_main.EVENTS",
  "dagster_aws_tests.emr_tests.test_emr_step_main.make_event",
  "dagster_aws_tests.emr_tests.test_emr_step_main.start_event_writing_thread",
  "dagster_aws_tests.emr_tests.test_pyspark.BASE_EMR_PYSPARK_STEP_LAUNCHER_CONFIG",
  "dagster_aws_tests.emr_tests.test_pyspark.MODE_DEFS",
  "dagster_aws_tests.emr_tests.test_pyspark.S3_BUCKET",
  "dagster_aws_tests.emr_tests.test_pyspark.define_do_nothing_pipe",
  "dagster_aws_tests.emr_tests.test_pyspark.define_pyspark_pipe",
  "dagster_aws_tests.emr_tests.test_pyspark.do_nothing_pipe",
  "dagster_aws_tests.emr_tests.test_pyspark.do_nothing_solid",
  "dagster_aws_tests.emr_tests.test_pyspark.filter_df_solid",
  "dagster_aws_tests.emr_tests.test_pyspark.make_df_solid",
  "dagster_aws_tests.emr_tests.test_pyspark.pyspark_pipe",
  "dagster_aws_tests.emr_tests.test_pyspark.sync_code",
  "dagster_aws_tests.emr_tests.test_pyspark_step_launcher.EVENTS",
  "dagster_aws_tests.redshift_tests.test_resources.QUERY_RESULT",
  "dagster_aws_tests.redshift_tests.test_resources.REDSHIFT_CREATE_TABLE_QUERY",
  "dagster_aws_tests.redshift_tests.test_resources.REDSHIFT_ENV",
  "dagster_aws_tests.redshift_tests.test_resources.REDSHIFT_FAILED_LOAD_QUERY",
  "dagster_aws_tests.redshift_tests.test_resources.REDSHIFT_LOAD_FILE_CONTENTS",
  "dagster_aws_tests.redshift_tests.test_resources.mock_execute_query_conn",
  "dagster_aws_tests.redshift_tests.test_resources.multi_redshift_solid",
  "dagster_aws_tests.redshift_tests.test_resources.single_redshift_solid",
  "dagster_aws_tests.s3_tests.test_compute_log_manager.EXPECTED_LOGS",
  "dagster_aws_tests.s3_tests.test_compute_log_manager.HELLO_WORLD",
  "dagster_aws_tests.s3_tests.test_compute_log_manager.SEPARATOR",
  "dagster_aws_tests.s3_tests.test_file_handle_to_s3.create_file_handle_pipeline",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.CsvSerializationStrategy",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.FancyStringS3TypeStoragePlugin",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.LessSimpleDataFrame",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.LowercaseString",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.UppercaseSerializationStrategy",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.define_inty_pipeline",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.get_step_output",
  "dagster_aws_tests.s3_tests.test_intermediate_storage.nettest",
  "dagster_aws_tests.s3_tests.test_s3_file_manager.create_s3_key",
  "dagster_aws_tests.utils_tests.mrjob_tests.test_log4j.MULTILINE_LOG4J",
  "dagster_aws_tests.utils_tests.mrjob_tests.test_log4j.SIMPLE_LOG4J",
  "dagster_aws_tests.utils_tests.mrjob_tests.test_utils.EPS",
  "dagster_pyspark.DataFrame",
  "dagster_pyspark.pyspark_resource",
  "dagster_pyspark.utils.build_pyspark_zip",
  "dagster_spark.configs_spark.spark_config",
  "dagster_spark.utils.flatten_dict",
  "dagster_spark.utils.format_for_cli",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "dateutil.tz.tzutc",
  "delete_for_results",
  "easy",
  "emit_file",
  "emit_temp_handle",
  "enum.Enum",
  "events",
  "f",
  "f.__doc__",
  "f.__name__",
  "file_manager.S3FileHandle",
  "file_manager.S3FileManager",
  "functools.partial",
  "get_step_dict",
  "gzip.GzipFile",
  "intermediate_storage.S3IntermediateStorage",
  "io.BytesIO",
  "io.StringIO",
  "json.loads",
  "klass",
  "logging.Handler",
  "logging.critical",
  "logging.error",
  "logging.exception",
  "logging.getLogger",
  "logging.getLoggerClass",
  "logging.info",
  "logging.warning",
  "moto.mock_ecs",
  "moto.mock_emr",
  "moto.mock_logs",
  "moto.mock_s3",
  "object_store.S3ObjectStore",
  "os.environ",
  "os.environ.get",
  "os.getenv",
  "os.linesep",
  "os.listdir",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.unlink",
  "pickle.dump",
  "pickle.dumps",
  "pickle.loads",
  "psycopg2.InternalError",
  "psycopg2.connect",
  "psycopg2.extensions.cursor",
  "pyspark.sql.Row",
  "pyspark.sql.types.IntegerType",
  "pyspark.sql.types.StringType",
  "pyspark.sql.types.StructField",
  "pyspark.sql.types.StructType",
  "pytest.fixture",
  "pytest.mark.nettest",
  "pytest.mark.skipif",
  "pytest.raises",
  "queue.Empty",
  "queue.Queue",
  "re.compile",
  "re.sub",
  "retry.RetryWrapper",
  "return_one",
  "six.ensure_binary",
  "six.ensure_str",
  "six.raise_from",
  "six.with_metaclass",
  "socket.error",
  "ssl.SSLError",
  "subprocess.call",
  "sys.argv",
  "sys.stderr",
  "sys.stdout",
  "sys.version_info",
  "test_solid",
  "threading.Thread",
  "time.mktime",
  "time.sleep",
  "time.time",
  "types.EMR_CLUSTER_TERMINATED_STATES",
  "types.EbsVolumeType",
  "types.EmrActionOnFailure",
  "types.EmrAdjustmentType",
  "types.EmrClusterState",
  "types.EmrComparisonOperator",
  "types.EmrInstanceRole",
  "types.EmrMarket",
  "types.EmrRepoUpgradeOnBoot",
  "types.EmrScaleDownBehavior",
  "types.EmrStatistic",
  "types.EmrStepState",
  "types.EmrStepState.Completed",
  "types.EmrStepState.Failed",
  "types.EmrStepState.Pending",
  "types.EmrStepState.Running",
  "types.EmrSupportedProducts",
  "types.EmrTimeoutAction",
  "types.EmrUnit",
  "user_throw_exception",
  "uuid.UUID",
  "uuid.uuid4",
  "version.__version__",
  "yaml.SafeLoader",
  "yaml.load"
 ],
 "deps": {
  "S3Mock": [],
  "_DictWithSchema": [],
  "_upload_file_to_s3": [],
  "abc": [],
  "accept_file": [],
  "add_numbers": [],
  "add_one": [],
  "boto3": [],
  "botocore": [],
  "client": [],
  "collections": [],
  "conftest": [],
  "contextlib": [],
  "copy": [],
  "csv": [],
  "dagster": [],
  "dagster_aws": [],
  "dagster_aws_tests": [],
  "dagster_pyspark": [],
  "dagster_spark": [],
  "datetime": [],
  "dateutil": [],
  "delete_for_results": [],
  "easy": [],
  "emit_file": [],
  "emit_temp_handle": [],
  "enum": [],
  "events": [],
  "f": [],
  "file_manager": [],
  "functools": [],
  "get_step_dict": [],
  "gzip": [],
  "intermediate_storage": [],
  "io": [],
  "json": [],
  "klass": [],
  "logging": [],
  "moto": [],
  "object_store": [],
  "os": [],
  "pickle": [],
  "psycopg2": [],
  "pyspark": [],
  "pytest": [],
  "queue": [],
  "re": [],
  "retry": [],
  "return_one": [],
  "six": [],
  "socket": [],
  "ssl": [],
  "subprocess": [],
  "sys": [],
  "test_solid": [],
  "threading": [],
  "time": [],
  "types": [],
  "user_throw_exception": [],
  "uuid": [],
  "version": [],
  "yaml": []
 }
}