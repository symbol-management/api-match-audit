{
 "bad": [
  "ConfigParser",
  "ConfigParser.ConfigParser._boolean_states",
  "FindFirstLeaf",
  "FlattenRec",
  "GlobalStyles",
  "HasSubtype",
  "ImplicitStringConcatenation",
  "InsertNodes",
  "PreviousNonCommentToken",
  "RecExpression",
  "RecGetLeaves",
  "RecSplicer",
  "_AppendFirstLeafTokenSubtype",
  "_AppendSubtypeRec",
  "_AppendTokenSubtype",
  "_AsyncFunction",
  "_CheckPythonVersion",
  "_DecrementSplitPenalty",
  "_DetermineMustSplitAnnotation",
  "_FilterLine",
  "_FirstChildNode",
  "_GLOBAL_STYLE_FACTORY",
  "_GetFirstChildLeaf",
  "_IncreasePenalty",
  "_InsertNodeAt",
  "_IsCompoundStatement",
  "_LastChildNode",
  "_MakeFormatTokenList",
  "_ParenState",
  "_RecAnnotate",
  "_RetainRequiredVerticalSpacingBetweenTokens",
  "_SetArgListSubtype",
  "_SetSplitPenalty",
  "_SetStronglyConnected",
  "_SetUnbreakable",
  "_VisitNodeRec",
  "__builtin__",
  "__builtin__.unicode",
  "__future__.print_function",
  "__future__.unicode_literals",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.SUPPRESS",
  "ast",
  "ast.parse",
  "cStringIO",
  "cStringIO.StringIO",
  "codecs",
  "collections",
  "collections.deque",
  "collections.namedtuple",
  "concurrent.futures",
  "configparser",
  "configparser.ConfigParser.BOOLEAN_STATES",
  "contextlib",
  "contextlib.contextmanager",
  "difflib",
  "difflib.unified_diff",
  "fnmatch",
  "fnmatch.fnmatch",
  "heapq",
  "heapq.heappop",
  "heapq.heappush",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "io.open",
  "itertools.ifilter",
  "keyword",
  "keyword.iskeyword",
  "lib2to3.pgen2.driver",
  "lib2to3.pgen2.driver.Driver",
  "lib2to3.pgen2.parse",
  "lib2to3.pgen2.parse.ParseError",
  "lib2to3.pgen2.token",
  "lib2to3.pgen2.token.COMMENT",
  "lib2to3.pgen2.token.DEDENT",
  "lib2to3.pgen2.token.DOT",
  "lib2to3.pgen2.token.ENDMARKER",
  "lib2to3.pgen2.token.INDENT",
  "lib2to3.pgen2.token.LPAR",
  "lib2to3.pgen2.token.NAME",
  "lib2to3.pgen2.token.NEWLINE",
  "lib2to3.pgen2.token.NUMBER",
  "lib2to3.pgen2.token.N_TOKENS",
  "lib2to3.pgen2.token.RPAR",
  "lib2to3.pgen2.token.SEMI",
  "lib2to3.pgen2.token.STRING",
  "lib2to3.pgen2.token.VBAR",
  "lib2to3.pgen2.token.matching_bracket",
  "lib2to3.pgen2.token.node",
  "lib2to3.pgen2.token.tok_name",
  "lib2to3.pgen2.token.value",
  "lib2to3.pgen2.tokenize",
  "lib2to3.pgen2.tokenize.detect_encoding",
  "lib2to3.pygram",
  "lib2to3.pygram.python_grammar.copy",
  "lib2to3.pygram.python_grammar.number2symbol",
  "lib2to3.pygram.python_grammar.symbol2number",
  "lib2to3.pygram.python_grammar_no_print_statement.copy",
  "lib2to3.pygram.python_symbols",
  "lib2to3.pygram.python_symbols.atom",
  "lib2to3.pygram.python_symbols.file_input",
  "lib2to3.pygram.python_symbols.simple_stmt",
  "lib2to3.pytree",
  "lib2to3.pytree.Leaf",
  "lib2to3.pytree.Node",
  "lib2to3.pytree.convert",
  "msvcrt",
  "msvcrt.setmode",
  "multiprocessing",
  "multiprocessing.cpu_count",
  "os.O_BINARY",
  "os.getcwd",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.remove",
  "re.DOTALL",
  "re.IGNORECASE",
  "style_factory",
  "sys.stderr.write",
  "sys.stdout.buffer.write",
  "sys.stdout.fileno",
  "sys.stdout.write",
  "tempfile",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "textwrap",
  "textwrap.dedent",
  "unittest",
  "unittest.TestCase",
  "unittest.main",
  "unittest.skipIf",
  "unittest.skipUnless",
  "yapf.__init__.FormatFiles",
  "yapf.__init__._FormatFile",
  "yapf.__init__._GetLines",
  "yapf.__init__.__version__",
  "yapf.__init__.main",
  "yapf.__init__.run_main",
  "yapf.yapflib.format_token.Subtype.ASSIGN_OPERATOR",
  "yapf.yapflib.format_token.Subtype.BINARY_OPERATOR",
  "yapf.yapflib.format_token.Subtype.COMP_FOR",
  "yapf.yapflib.format_token.Subtype.COMP_IF",
  "yapf.yapflib.format_token.Subtype.DECORATOR",
  "yapf.yapflib.format_token.Subtype.DEFAULT_OR_NAMED_ASSIGN",
  "yapf.yapflib.format_token.Subtype.DEFAULT_OR_NAMED_ASSIGN_ARG_LIST",
  "yapf.yapflib.format_token.Subtype.DICTIONARY_KEY",
  "yapf.yapflib.format_token.Subtype.DICTIONARY_KEY_PART",
  "yapf.yapflib.format_token.Subtype.DICTIONARY_VALUE",
  "yapf.yapflib.format_token.Subtype.DICT_SET_GENERATOR",
  "yapf.yapflib.format_token.Subtype.FUNC_DEF",
  "yapf.yapflib.format_token.Subtype.KWARGS_STAR_STAR",
  "yapf.yapflib.format_token.Subtype.NONE",
  "yapf.yapflib.format_token.Subtype.SUBSCRIPT_BRACKET",
  "yapf.yapflib.format_token.Subtype.SUBSCRIPT_COLON",
  "yapf.yapflib.format_token.Subtype.TYPED_NAME",
  "yapf.yapflib.format_token.Subtype.TYPED_NAME_ARG_LIST",
  "yapf.yapflib.format_token.Subtype.UNARY_OPERATOR",
  "yapf.yapflib.format_token.Subtype.VARARGS_LIST",
  "yapf.yapflib.format_token.Subtype.VARARGS_STAR",
  "yapf.yapflib.pytree_utils.Annotation.CHILD_INDENT",
  "yapf.yapflib.pytree_utils.Annotation.MUST_SPLIT",
  "yapf.yapflib.pytree_utils.Annotation.NEWLINES",
  "yapf.yapflib.pytree_utils.Annotation.SPLIT_PENALTY",
  "yapf.yapflib.pytree_utils.Annotation.SUBTYPE"
 ],
 "deps": {
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "yapf": [
   "yapf/conda-forge/linux-64/yapf-0.12.1-py35_0",
   "yapf/conda-forge/noarch/yapf-0.18.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.20.2-py_0",
   "yapf/conda-forge/noarch/yapf-0.21.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.23.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.26.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.27.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.28.0-py_0",
   "yapf/conda-forge/noarch/yapf-0.30.0-pyh9f0ad1d_0"
  ]
 }
}