{
 "bad": [
  "PIL.Image.BILINEAR",
  "_convert_spec",
  "_generate_from_spec",
  "_parameterized_setup",
  "_slice",
  "_slice_and_pad",
  "_validate_spec",
  "absl.flags.FLAGS.test_tmpdir",
  "acme.adders.reverb.ReplayDataset",
  "acme.adders.reverb.ReplayDataset.from_table_signature",
  "acme.adders.reverb.ReplaySample",
  "acme.adders.reverb.SampleInfo",
  "acme.adders.reverb.deprecated.base",
  "acme.adders.reverb.deprecated.base.Step",
  "acme.datasets.reverb.Client",
  "acme.datasets.reverb.Server",
  "acme.datasets.reverb.TFClient",
  "acme.datasets.reverb.Table",
  "acme.datasets.reverb.rate_limiters.MinSize",
  "acme.datasets.reverb.selectors.Fifo",
  "acme.datasets.reverb.selectors.Uniform",
  "acme.utils.loggers.csv.DictReader",
  "argmax",
  "batch_error",
  "batch_loss",
  "bsuite.baselines.utils.replay",
  "bsuite.environments.catch",
  "bsuite.environments.catch.Catch",
  "bsuite.environments.deep_sea",
  "bsuite.environments.deep_sea.DeepSea",
  "cce",
  "check_numerics",
  "check_rank",
  "curr_net",
  "dm_env.StepType.FIRST",
  "dm_env.StepType.LAST",
  "dm_env.StepType.MID",
  "fn",
  "gc",
  "gc.collect",
  "grad_fn",
  "head",
  "init_fn",
  "itertools",
  "itertools.islice",
  "make_support",
  "mirror_structure",
  "model",
  "model.initial_state",
  "module",
  "module._input_signature",
  "module._layers",
  "module.initial_state",
  "module.trainable_variables",
  "module.variables",
  "net1",
  "net1.initial_state",
  "net1.trainable_variables",
  "net2",
  "net2.initial_state",
  "net2.trainable_variables",
  "network_head",
  "numpy.broadcast_to",
  "numpy.float32",
  "numpy.float64",
  "numpy.isfinite",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.dirichlet",
  "numpy.random.randint",
  "numpy.stack",
  "numpy.uint64",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.join",
  "policy",
  "priority_fn",
  "reverb",
  "reverb.ReplaySample",
  "reverb.SampleInfo",
  "reverb.Writer",
  "rlax",
  "rlax.categorical_importance_sampling_ratios",
  "rlax.double_q_learning",
  "rlax.entropy_loss",
  "rlax.epsilon_greedy",
  "rlax.huber_loss",
  "rlax.periodic_update",
  "rlax.policy_gradient_loss",
  "rlax.vtrace_td_error_and_advantage",
  "scipy.special.softmax",
  "should_terminate",
  "signal.SIGTERM",
  "signal.Signals",
  "sys",
  "sys.argv",
  "tensorflow.Module",
  "tensorflow.TensorSpec.from_spec",
  "tensorflow.data.Dataset",
  "tensorflow.data.Dataset.from_generator",
  "tensorflow.data.Dataset.from_tensors",
  "tensorflow.data.Dataset.range",
  "tensorflow.debugging.assert_equal",
  "tensorflow.distribute.ReduceOp.MEAN",
  "tensorflow.distribute.get_replica_context",
  "tensorflow.dtypes.as_dtype",
  "tensorflow.function",
  "tensorflow.image.convert_image_dtype",
  "tensorflow.initializers.VarianceScaling",
  "tensorflow.keras.losses.SparseCategoricalCrossentropy",
  "tensorflow.linalg.global_norm",
  "tensorflow.math.cumprod",
  "tensorflow.math.exp",
  "tensorflow.math.is_finite",
  "tensorflow.math.log",
  "tensorflow.math.log_softmax",
  "tensorflow.math.maximum",
  "tensorflow.math.minimum",
  "tensorflow.math.mod",
  "tensorflow.math.reduce_sum",
  "tensorflow.math.softplus",
  "tensorflow.nn.moments",
  "tensorflow.nn.pool",
  "tensorflow.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.nn.softmax",
  "tensorflow.nn.softmax_cross_entropy_with_logits",
  "tensorflow.nn.softplus",
  "tensorflow.nn.tanh",
  "tensorflow.python.saved_model.revived_types",
  "tensorflow.python.saved_model.revived_types.VersionedTypeRegistration",
  "tensorflow.python.saved_model.revived_types.register_revived_type",
  "tensorflow.random.normal",
  "tensorflow.random.uniform",
  "tensorflow.saved_model.load",
  "tensorflow.saved_model.save",
  "tensorflow.summary.scalar",
  "tensorflow.test.TestCase",
  "tensorflow.test.main",
  "tensorflow.train.experimental.PythonState",
  "tensorflow.vectorized_map",
  "tensorflow_probability.bijectors",
  "tensorflow_probability.distributions",
  "tensorflow_probability.distributions.Categorical",
  "tensorflow_probability.distributions.Distribution",
  "tensorflow_probability.experimental.as_composite",
  "tensorflow_probability.experimental.register_composite",
  "tensorflow_probability.experimental.substrates.jax.distributions",
  "time",
  "time.sleep",
  "time.time",
  "trfl",
  "trfl.assert_rank_and_shape_compatibility",
  "trfl.base_ops.LossOutput",
  "trfl.batched_index",
  "trfl.double_qlearning",
  "trfl.policy_entropy_loss",
  "trfl.policy_gradient",
  "trfl.td_learning",
  "trfl.vtrace_from_importance_weights",
  "unittest.mock.patch.object",
  "w"
 ],
 "deps": {
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "_convert_spec": [],
  "_generate_from_spec": [],
  "_parameterized_setup": [],
  "_slice": [],
  "_slice_and_pad": [],
  "_validate_spec": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "absl": [
   "absl-py/conda-forge/noarch/absl-py-0.12.0-pyhd8ed1ab_0"
  ],
  "acme": [],
  "argmax": [],
  "batch_error": [],
  "batch_loss": [],
  "bsuite": [],
  "cce": [],
  "check_numerics": [],
  "check_rank": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "concurrent": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "curr_net": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.8-pyh787bdff_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dm_env": [
   "dm-env/conda-forge/noarch/dm-env-1.4-pyhd8ed1ab_0"
  ],
  "fn": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gc": [],
  "grad_fn": [],
  "gym": [
   "gym/conda-forge/linux-64/gym-0.18.0-py36hcb3619a_1"
  ],
  "haiku": [
   "dm-haiku/conda-forge/noarch/dm-haiku-0.0.4-pyhd8ed1ab_0"
  ],
  "head": [],
  "init_fn": [],
  "itertools": [],
  "jax": [
   "jax/conda-forge/noarch/jax-0.1.73-py_0"
  ],
  "make_support": [],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "mirror_structure": [],
  "model": [],
  "module": [],
  "net1": [],
  "net2": [],
  "network_head": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "optax": [
   "optax/conda-forge/noarch/optax-0.0.9-pyhd8ed1ab_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "policy": [],
  "priority_fn": [],
  "queue": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "reverb": [],
  "rlax": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "should_terminate": [],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sonnet": [
   "dm-sonnet/conda-forge/noarch/dm-sonnet-2.0.0-pyhd8ed1ab_1"
  ],
  "sys": [],
  "tensorflow": [
   "tensorflow-base/conda-forge/linux-64/tensorflow-base-1.13.1-py36h76b4ce7_8"
  ],
  "tensorflow_probability": [
   "tensorflow-probability/conda-forge/noarch/tensorflow-probability-0.8.0-py_0"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "tree": [
   "dm-tree/conda-forge/linux-64/dm-tree-0.1.5-py37h10a2094_1"
  ],
  "trfl": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "w": []
 }
}