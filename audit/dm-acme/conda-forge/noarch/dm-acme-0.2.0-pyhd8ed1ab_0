{
 "bad": [
  "PIL.Image.BILINEAR",
  "PIL.Image.fromarray",
  "_slice",
  "_slice_and_pad",
  "abc.ABC",
  "abc.abstractmethod",
  "absl.flags.FLAGS.test_tmpdir",
  "acme.Actor",
  "acme.EnvironmentLoop",
  "acme.Learner",
  "acme.Saveable",
  "acme._metadata._MAJOR_VERSION",
  "acme._metadata._MINOR_VERSION",
  "acme._metadata._PATCH_VERSION",
  "acme.adders.Adder",
  "acme.adders.base.Adder",
  "acme.adders.reverb.Client",
  "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
  "acme.adders.reverb.NStepTransitionAdder",
  "acme.adders.reverb.NStepTransitionAdder.signature",
  "acme.adders.reverb.ReplayDataset",
  "acme.adders.reverb.ReplayDataset.from_table_signature",
  "acme.adders.reverb.ReplaySample",
  "acme.adders.reverb.SampleInfo",
  "acme.adders.reverb.SequenceAdder",
  "acme.adders.reverb.SequenceAdder.signature",
  "acme.adders.reverb.Server",
  "acme.adders.reverb.Step",
  "acme.adders.reverb.TFClient",
  "acme.adders.reverb.Table",
  "acme.adders.reverb.Table.queue",
  "acme.adders.reverb.base.DEFAULT_PRIORITY_TABLE",
  "acme.adders.reverb.base.PriorityFn",
  "acme.adders.reverb.base.PriorityFnInput",
  "acme.adders.reverb.base.PriorityFnMapping",
  "acme.adders.reverb.base.ReverbAdder",
  "acme.adders.reverb.base.Step",
  "acme.adders.reverb.base.spec_like_to_tensor_spec",
  "acme.adders.reverb.deprecated.base",
  "acme.adders.reverb.deprecated.base.Step",
  "acme.adders.reverb.episode.EpisodeAdder",
  "acme.adders.reverb.rate_limiters.MinSize",
  "acme.adders.reverb.selectors.Fifo",
  "acme.adders.reverb.selectors.Prioritized",
  "acme.adders.reverb.selectors.Uniform",
  "acme.adders.reverb.sequence.SequenceAdder",
  "acme.adders.reverb.sequence_test.TEST_CASES",
  "acme.adders.reverb.test_utils.AdderTestMixin",
  "acme.adders.reverb.test_utils.FakeClient",
  "acme.adders.reverb.test_utils.FakeWriter",
  "acme.adders.reverb.test_utils.Step",
  "acme.adders.reverb.test_utils._numeric_to_spec",
  "acme.adders.reverb.test_utils.make_sequence",
  "acme.adders.reverb.test_utils.make_trajectory",
  "acme.adders.reverb.transition.NStepTransitionAdder",
  "acme.adders.reverb.transition_test.TEST_CASES",
  "acme.adders.reverb.utils.calculate_priorities",
  "acme.adders.reverb.utils.final_step_like",
  "acme.adders.reverb.utils.zeros_like",
  "acme.agents.agent.Agent",
  "acme.agents.agent._calculate_num_learner_steps",
  "acme.agents.jax.actors.Action",
  "acme.agents.jax.actors.FeedForwardActor",
  "acme.agents.jax.actors.FeedForwardPolicy",
  "acme.agents.jax.actors.Observation",
  "acme.agents.jax.actors.RNGKey",
  "acme.agents.jax.actors.RecurrentActor",
  "acme.agents.jax.actors.RecurrentPolicy",
  "acme.agents.jax.actors.RecurrentState",
  "acme.agents.jax.actors_test._make_fake_env",
  "acme.agents.jax.actors_test._transform_without_rng",
  "acme.agents.jax.dqn.DQN",
  "acme.agents.jax.dqn.learning.DQNLearner",
  "acme.agents.jax.dqn.learning.LearnerOutputs",
  "acme.agents.jax.dqn.learning.TrainingState",
  "acme.agents.jax.impala.IMPALA",
  "acme.agents.jax.impala.acting.IMPALAActor",
  "acme.agents.jax.impala.acting.PolicyValueFn",
  "acme.agents.jax.impala.acting._LogitsAndValue",
  "acme.agents.jax.impala.agent_test.MyNetwork",
  "acme.agents.jax.impala.learning.IMPALALearner",
  "acme.agents.jax.impala.learning.TrainingState",
  "acme.agents.jax.impala.types.Action",
  "acme.agents.jax.impala.types.Observation",
  "acme.agents.tf.actors.FeedForwardActor",
  "acme.agents.tf.actors.RecurrentActor",
  "acme.agents.tf.actors.tfd",
  "acme.agents.tf.actors_test._make_fake_env",
  "acme.agents.tf.bc.BCLearner",
  "acme.agents.tf.bcq.DiscreteBCQLearner",
  "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner",
  "acme.agents.tf.bcq.discrete_learning_test._make_network",
  "acme.agents.tf.d4pg.D4PG",
  "acme.agents.tf.d4pg.agent_test.make_networks",
  "acme.agents.tf.d4pg.learning.D4PGLearner",
  "acme.agents.tf.ddpg.DDPG",
  "acme.agents.tf.ddpg.agent_test.make_networks",
  "acme.agents.tf.ddpg.learning.DDPGLearner",
  "acme.agents.tf.dmpo.DistributionalMPO",
  "acme.agents.tf.dmpo.agent_test.make_networks",
  "acme.agents.tf.dmpo.learning.DistributionalMPOLearner",
  "acme.agents.tf.dqfd.agent",
  "acme.agents.tf.dqfd.agent.DQfD",
  "acme.agents.tf.dqfd.agent_test._make_network",
  "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
  "acme.agents.tf.dqfd.bsuite_demonstrations.FLAGS",
  "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_dataset",
  "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_stochastic_dataset",
  "acme.agents.tf.dqfd.bsuite_demonstrations._nested_stack",
  "acme.agents.tf.dqfd.bsuite_demonstrations._optimal_deep_sea_policy",
  "acme.agents.tf.dqfd.bsuite_demonstrations._run_optimal_deep_sea_episode",
  "acme.agents.tf.dqn.DQN",
  "acme.agents.tf.dqn.DQNLearner",
  "acme.agents.tf.dqn.agent_test._make_network",
  "acme.agents.tf.dqn.learning.DQNLearner",
  "acme.agents.tf.impala.IMPALA",
  "acme.agents.tf.impala.acting.IMPALAActor",
  "acme.agents.tf.impala.acting.tfd",
  "acme.agents.tf.impala.agent_test._make_network",
  "acme.agents.tf.impala.learning.IMPALALearner",
  "acme.agents.tf.impala.learning.tfd",
  "acme.agents.tf.mcts.MCTS",
  "acme.agents.tf.mcts.acting.MCTSActor",
  "acme.agents.tf.mcts.learning.AZLearner",
  "acme.agents.tf.mcts.models.Model",
  "acme.agents.tf.mcts.models.base.Model",
  "acme.agents.tf.mcts.models.mlp.MLPTransitionModel",
  "acme.agents.tf.mcts.models.simulator.Checkpoint",
  "acme.agents.tf.mcts.models.simulator.Simulator",
  "acme.agents.tf.mcts.search.Node",
  "acme.agents.tf.mcts.search.SearchPolicy",
  "acme.agents.tf.mcts.search.argmax",
  "acme.agents.tf.mcts.search.bfs",
  "acme.agents.tf.mcts.search.check_numerics",
  "acme.agents.tf.mcts.search.mcts",
  "acme.agents.tf.mcts.search.puct",
  "acme.agents.tf.mcts.search.visit_count_policy",
  "acme.agents.tf.mcts.types.Action",
  "acme.agents.tf.mcts.types.EvaluationFn",
  "acme.agents.tf.mcts.types.Observation",
  "acme.agents.tf.mcts.types.Probs",
  "acme.agents.tf.mcts.types.Value",
  "acme.agents.tf.mpo.MPO",
  "acme.agents.tf.mpo.agent_test.make_networks",
  "acme.agents.tf.mpo.learning.MPOLearner",
  "acme.agents.tf.r2d2.R2D2",
  "acme.agents.tf.r2d2.agent_test.SimpleNetwork",
  "acme.agents.tf.r2d2.learning.R2D2Learner",
  "acme.agents.tf.r2d2.learning.Variables",
  "acme.agents.tf.r2d2.learning.compute_priority",
  "acme.agents.tf.r2d3.R2D3",
  "acme.agents.tf.r2d3.agent_test.SimpleNetwork",
  "acme.core.Actor",
  "acme.core.Learner",
  "acme.core.Saveable",
  "acme.core.T",
  "acme.core.VariableSource",
  "acme.core.Worker",
  "acme.datasets.make_reverb_dataset",
  "acme.datasets.reverb.Client",
  "acme.datasets.reverb.Server",
  "acme.datasets.reverb.TFClient",
  "acme.datasets.reverb.Table",
  "acme.datasets.reverb._spec_to_shapes_and_dtypes",
  "acme.datasets.reverb.make_dataset",
  "acme.datasets.reverb.make_reverb_dataset",
  "acme.datasets.reverb.rate_limiters.MinSize",
  "acme.datasets.reverb.selectors.Fifo",
  "acme.datasets.reverb.selectors.Uniform",
  "acme.datasets.reverb_test.DatasetsTest",
  "acme.datasets.reverb_test._check_specs",
  "acme.datasets.reverb_test._reverb_client",
  "acme.datasets.reverb_test._reverb_server",
  "acme.environment_loop.EnvironmentLoop",
  "acme.environment_loop_test.EPISODE_LENGTH",
  "acme.environment_loop_test.F32",
  "acme.environment_loop_test.F32_1x3",
  "acme.environment_loop_test.F32_2_MIN_0_MAX_1",
  "acme.environment_loop_test.F32_2x1_MIN_0_MAX_1",
  "acme.environment_loop_test.TEST_CASES",
  "acme.environment_loop_test.TREE",
  "acme.environment_loop_test.TREE_MIN_0_MAX_1",
  "acme.environment_loop_test._parameterized_setup",
  "acme.jax.networks.Logits",
  "acme.jax.networks.PolicyValueHead",
  "acme.jax.networks.PolicyValueRNN",
  "acme.jax.networks.Value",
  "acme.jax.networks.atari.AtariTorso",
  "acme.jax.networks.atari.DeepAtariTorso",
  "acme.jax.networks.atari.Images",
  "acme.jax.networks.atari.ResidualBlock",
  "acme.jax.networks.base.LSTMOutputs",
  "acme.jax.networks.base.Logits",
  "acme.jax.networks.base.Module",
  "acme.jax.networks.base.QNetwork",
  "acme.jax.networks.base.QValues",
  "acme.jax.networks.base.Value",
  "acme.jax.networks.continuous.uniform_initializer",
  "acme.jax.networks.distributional.tfd",
  "acme.jax.networks.duelling.DuellingMLP",
  "acme.jax.networks.embedding.OAREmbedding",
  "acme.jax.networks.policy_value.PolicyValueHead",
  "acme.jax.savers.CheckpointState",
  "acme.jax.savers.Checkpointer",
  "acme.jax.savers._ARRAY_NAME",
  "acme.jax.savers._DEFAULT_CHECKPOINT_TTL",
  "acme.jax.savers._EXEMPLAR_NAME",
  "acme.jax.savers.restore_from_path",
  "acme.jax.savers.save_to_path",
  "acme.jax.savers_test.DummySaveable",
  "acme.jax.savers_test.nest_assert_equal",
  "acme.jax.utils.T",
  "acme.jax.utils._flatten",
  "acme.jax.utils._transform_without_rng",
  "acme.jax.utils.add_batch_dim",
  "acme.jax.utils.batch_concat",
  "acme.jax.utils.prefetch",
  "acme.jax.utils.to_numpy",
  "acme.jax.utils.to_numpy_squeeze",
  "acme.jax.utils.zeros_like",
  "acme.jax.variable_utils.VariableClient",
  "acme.jax.variable_utils_test.dummy_network",
  "acme.specs.Array",
  "acme.specs.BoundedArray",
  "acme.specs.DiscreteArray",
  "acme.specs.EnvironmentSpec",
  "acme.specs.make_environment_spec",
  "acme.testing.fakes.Actor",
  "acme.testing.fakes.ContinuousEnvironment",
  "acme.testing.fakes.DiscreteEnvironment",
  "acme.testing.fakes.Environment",
  "acme.testing.fakes.VariableSource",
  "acme.testing.fakes._BaseDiscreteEnvironment",
  "acme.testing.fakes._generate_from_spec",
  "acme.testing.fakes._validate_spec",
  "acme.testing.fakes.transition_dataset",
  "acme.testing.test_utils.TestCase",
  "acme.tf.losses.MPO",
  "acme.tf.losses.categorical",
  "acme.tf.losses.distributional.l2_project",
  "acme.tf.losses.distributional.multiaxis_l2_project",
  "acme.tf.losses.distributional_test._reference_l2_project",
  "acme.tf.losses.dpg",
  "acme.tf.losses.huber",
  "acme.tf.losses.mpo._MPO_FLOAT_EPSILON",
  "acme.tf.losses.mpo.compute_cross_entropy_loss",
  "acme.tf.losses.mpo.compute_nonparametric_kl_from_normalized_weights",
  "acme.tf.losses.mpo.compute_parametric_kl_penalty_and_dual_loss",
  "acme.tf.losses.mpo.compute_weights_and_temperature_loss",
  "acme.tf.losses.mpo.tfd",
  "acme.tf.losses.r2d2.LossCoreExtra",
  "acme.tf.losses.r2d2._compute_n_step_sequence_targets",
  "acme.tf.losses.r2d2._signed_hyperbolic_tx",
  "acme.tf.losses.r2d2._signed_parabolic_tx",
  "acme.tf.losses.transformed_n_step_loss",
  "acme.tf.networks.ClipToSpec",
  "acme.tf.networks.ClippedGaussian",
  "acme.tf.networks.CriticDeepRNN",
  "acme.tf.networks.CriticMultiplexer",
  "acme.tf.networks.DiscreteValuedDistribution",
  "acme.tf.networks.DiscreteValuedHead",
  "acme.tf.networks.LayerNormMLP",
  "acme.tf.networks.MultivariateNormalDiagHead",
  "acme.tf.networks.PolicyValueHead",
  "acme.tf.networks.RNNCore",
  "acme.tf.networks.StochasticMeanHead",
  "acme.tf.networks.StochasticSamplingHead",
  "acme.tf.networks.atari.AtariTorso",
  "acme.tf.networks.atari.Images",
  "acme.tf.networks.atari.Logits",
  "acme.tf.networks.atari.QValues",
  "acme.tf.networks.atari.Value",
  "acme.tf.networks.base.Module",
  "acme.tf.networks.base.RNNCore",
  "acme.tf.networks.base.State",
  "acme.tf.networks.continuous.ResidualLayernormWrapper",
  "acme.tf.networks.continuous.uniform_initializer",
  "acme.tf.networks.discrete.DiscreteFilteredQNetwork",
  "acme.tf.networks.distributional.DiscreteValuedHead",
  "acme.tf.networks.distributional.GaussianMixture",
  "acme.tf.networks.distributional.UnivariateGaussianMixture",
  "acme.tf.networks.distributional._MIN_SCALE",
  "acme.tf.networks.distributional.snt_init",
  "acme.tf.networks.distributional.tfd",
  "acme.tf.networks.distributions.DiscreteValuedDistribution",
  "acme.tf.networks.distributions.tfd",
  "acme.tf.networks.duelling.DuellingMLP",
  "acme.tf.networks.embedding.OAREmbedding",
  "acme.tf.networks.multihead.TensorTransformation",
  "acme.tf.networks.multihead.tfd",
  "acme.tf.networks.multiplexers.TensorTransformation",
  "acme.tf.networks.noise.tfd",
  "acme.tf.networks.policy_value.PolicyValueHead",
  "acme.tf.networks.recurrence.CriticDeepRNN",
  "acme.tf.networks.recurrence.LSTM",
  "acme.tf.networks.recurrence.PolicyCriticRNNState",
  "acme.tf.networks.recurrence.RNNState",
  "acme.tf.networks.recurrence.RNNUnpackWrapper",
  "acme.tf.networks.recurrence.UnpackWrapper",
  "acme.tf.networks.recurrence_test.Critic",
  "acme.tf.networks.recurrence_test.RNNCritic",
  "acme.tf.networks.rescaling.tfb",
  "acme.tf.networks.rescaling.tfd",
  "acme.tf.networks.stochastic.tfd",
  "acme.tf.networks.vision.ResNetTorso",
  "acme.tf.networks.vision.ResidualBlockGroup",
  "acme.tf.networks.vision._preprocess_inputs",
  "acme.tf.savers.Checkpointable",
  "acme.tf.savers.Checkpointer",
  "acme.tf.savers.CheckpointingRunner",
  "acme.tf.savers.PythonState",
  "acme.tf.savers.SaveableAdapter",
  "acme.tf.savers.Snapshot",
  "acme.tf.savers.Snapshotter",
  "acme.tf.savers.TFSaveable",
  "acme.tf.savers._DEFAULT_CHECKPOINT_TTL",
  "acme.tf.savers._DEFAULT_SNAPSHOT_TTL",
  "acme.tf.savers._get_input_signature",
  "acme.tf.savers.make_snapshot",
  "acme.tf.savers_test.DummySaveable",
  "acme.tf.savers_test.time",
  "acme.tf.utils.TransformationWrapper",
  "acme.tf.utils.add_batch_dim",
  "acme.tf.utils.batch_concat",
  "acme.tf.utils.batch_to_sequence",
  "acme.tf.utils.create_variables",
  "acme.tf.utils.squeeze_batch_dim",
  "acme.tf.utils.stack_sequence_fields",
  "acme.tf.utils.tile_nested",
  "acme.tf.utils.tile_tensor",
  "acme.tf.utils.to_numpy",
  "acme.tf.utils.to_numpy_squeeze",
  "acme.tf.utils.to_sonnet_module",
  "acme.tf.utils.zeros_like",
  "acme.tf.utils_test.PolicyValueHead",
  "acme.tf.variable_utils.VariableClient",
  "acme.tf.variable_utils_test._BATCH_SIZE",
  "acme.tf.variable_utils_test._INPUT_SIZE",
  "acme.tf.variable_utils_test._MLP_LAYERS",
  "acme.tf.variable_utils_test._UPDATE_PERIOD",
  "acme.types.Nest",
  "acme.types.NestedArray",
  "acme.types.NestedSpec",
  "acme.types.NestedTensor",
  "acme.types.TensorTransformation",
  "acme.types.TensorValuedCallable",
  "acme.utils.async_utils.AsyncExecutor",
  "acme.utils.async_utils.E",
  "acme.utils.counting.Counter",
  "acme.utils.counting.Number",
  "acme.utils.counting._prefix_keys",
  "acme.utils.counting_test.Barrier",
  "acme.utils.loggers.Logger",
  "acme.utils.loggers.LoggingData",
  "acme.utils.loggers.TerminalLogger",
  "acme.utils.loggers.aggregators.Dispatcher",
  "acme.utils.loggers.base.Logger",
  "acme.utils.loggers.base.LoggingData",
  "acme.utils.loggers.base.tensor_to_numpy",
  "acme.utils.loggers.base.to_numpy",
  "acme.utils.loggers.csv.CSVLogger",
  "acme.utils.loggers.csv.DictReader",
  "acme.utils.loggers.filters.NoneFilter",
  "acme.utils.loggers.filters.TimeFilter",
  "acme.utils.loggers.make_default_logger",
  "acme.utils.loggers.terminal.TerminalLogger",
  "acme.utils.loggers.terminal._format_key",
  "acme.utils.loggers.terminal._format_value",
  "acme.utils.loggers.terminal.serialize",
  "acme.utils.loggers.tf_summary._format_key",
  "acme.utils.paths",
  "acme.utils.paths.FLAGS",
  "acme.utils.paths._ACME_ID",
  "acme.utils.paths.get_unique_id",
  "acme.utils.paths.process_path",
  "acme.utils.paths_test.FLAGS",
  "acme.utils.tree_utils.ElementType",
  "acme.utils.tree_utils.broadcast_structures",
  "acme.utils.tree_utils.fast_map_structure",
  "acme.utils.tree_utils.stack_sequence_fields",
  "acme.utils.tree_utils.unstack_sequence_fields",
  "acme.utils.tree_utils_test.TEST_SEQUENCE",
  "acme.wrappers.FrameStackingWrapper",
  "acme.wrappers.SinglePrecisionWrapper",
  "acme.wrappers.atari_wrapper.AtariWrapper",
  "acme.wrappers.atari_wrapper.LIVES_INDEX",
  "acme.wrappers.atari_wrapper.NUM_COLOR_CHANNELS",
  "acme.wrappers.atari_wrapper.RGB_INDEX",
  "acme.wrappers.atari_wrapper._ZeroDiscountOnLifeLoss",
  "acme.wrappers.atari_wrapper_test.SKIP_GYM_MESSAGE",
  "acme.wrappers.atari_wrapper_test.SKIP_GYM_TESTS",
  "acme.wrappers.base.EnvironmentWrapper",
  "acme.wrappers.canonical_spec._convert_spec",
  "acme.wrappers.canonical_spec._scale_nested_action",
  "acme.wrappers.frame_stacking.FrameStacker",
  "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment",
  "acme.wrappers.gym_wrapper.GymAtariAdapter",
  "acme.wrappers.gym_wrapper.GymWrapper",
  "acme.wrappers.gym_wrapper._convert_to_spec",
  "acme.wrappers.gym_wrapper_test.SKIP_GYM_MESSAGE",
  "acme.wrappers.gym_wrapper_test.SKIP_GYM_TESTS",
  "acme.wrappers.observation_action_reward.OAR",
  "acme.wrappers.single_precision._convert_spec",
  "acme.wrappers.single_precision._convert_value",
  "acme.wrappers.video.VideoWrapper",
  "acme.wrappers.video._make_animation",
  "batch_error",
  "batch_loss",
  "bsuite.baselines.utils.replay.Replay",
  "bsuite.environments.catch.Catch",
  "bsuite.environments.deep_sea.DeepSea",
  "build_conv_layer",
  "cce",
  "check_rank",
  "collections.deque",
  "concurrent.futures.Future",
  "concurrent.futures.ThreadPoolExecutor",
  "copy.deepcopy",
  "csv.DictWriter",
  "curr_net",
  "datetime.timedelta",
  "dm_env.StepType.FIRST",
  "dm_env.StepType.LAST",
  "dm_env.StepType.MID",
  "fn",
  "functools.partial",
  "gc.collect",
  "grad_fn",
  "gym.Env",
  "gym.Space",
  "gym.make",
  "gym.spaces.Box",
  "gym.spaces.Dict",
  "gym.spaces.Discrete",
  "gym.spaces.MultiBinary",
  "gym.spaces.MultiDiscrete",
  "gym.spaces.Tuple",
  "haiku.Conv2D",
  "haiku.DeepRNN",
  "haiku.Flatten",
  "haiku.LSTM",
  "haiku.LSTMState",
  "haiku.LayerNorm",
  "haiku.Linear",
  "haiku.Module",
  "haiku.PRNGSequence",
  "haiku.Params",
  "haiku.RNNCore",
  "haiku.Sequential",
  "haiku.Transformed",
  "haiku.initializers.UniformScaling",
  "haiku.initializers.VarianceScaling",
  "haiku.max_pool",
  "haiku.nets.MLP",
  "haiku.static_unroll",
  "haiku.transform",
  "haiku.without_apply_rng",
  "head",
  "init_fn",
  "itertools.islice",
  "make_initial_state",
  "make_support",
  "matplotlib.animation.Animation",
  "matplotlib.animation.FuncAnimation",
  "matplotlib.pyplot.subplots",
  "matplotlib.use",
  "mirror_structure",
  "model",
  "model.initial_state",
  "module",
  "module._input_signature",
  "module._layers",
  "module.initial_state",
  "module.trainable_variables",
  "module.variables",
  "net1",
  "net1.initial_state",
  "net1.trainable_variables",
  "net2",
  "net2.initial_state",
  "net2.trainable_variables",
  "network_head",
  "numpy",
  "numpy.all",
  "numpy.allclose",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.broadcast",
  "numpy.broadcast_to",
  "numpy.ceil",
  "numpy.clip",
  "numpy.copy",
  "numpy.dtype",
  "numpy.flatnonzero",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.inf",
  "numpy.int32",
  "numpy.int64",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.load",
  "numpy.max",
  "numpy.ndarray",
  "numpy.number",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.prod",
  "numpy.product",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.dirichlet",
  "numpy.random.randint",
  "numpy.reshape",
  "numpy.result_type",
  "numpy.savez",
  "numpy.shape",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.tensordot",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "operator.iadd",
  "operator.imul",
  "operator.itemgetter",
  "optax.GradientTransformation",
  "optax.OptState",
  "optax.adam",
  "optax.apply_updates",
  "optax.chain",
  "optax.clip_by_global_norm",
  "os.makedirs",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.join",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "policy",
  "priority_fn",
  "queue.Empty",
  "queue.Full",
  "queue.Queue",
  "reverb.Client",
  "reverb.ReplaySample",
  "reverb.SampleInfo",
  "reverb.Writer",
  "rlax.categorical_importance_sampling_ratios",
  "rlax.double_q_learning",
  "rlax.entropy_loss",
  "rlax.epsilon_greedy",
  "rlax.huber_loss",
  "rlax.periodic_update",
  "rlax.policy_gradient_loss",
  "rlax.vtrace_td_error_and_advantage",
  "scipy.special.softmax",
  "should_terminate",
  "signal.SIGTERM",
  "signal.Signals",
  "signal.signal",
  "sonnet.BatchApply",
  "sonnet.Conv2D",
  "sonnet.DeepRNN",
  "sonnet.Flatten",
  "sonnet.LSTM",
  "sonnet.LSTMState",
  "sonnet.LayerNorm",
  "sonnet.Linear",
  "sonnet.Module",
  "sonnet.Optimizer",
  "sonnet.RNNCore",
  "sonnet.Reshape",
  "sonnet.Sequential",
  "sonnet.allow_empty_variables",
  "sonnet.distribute.Replicator",
  "sonnet.dynamic_unroll",
  "sonnet.initializers",
  "sonnet.initializers.Initializer",
  "sonnet.merge_leading_dims",
  "sonnet.nets.MLP",
  "sonnet.once",
  "sonnet.optimizers.Adam",
  "sonnet.split_leading_dim",
  "sonnet.static_unroll",
  "sys.argv",
  "tensorflow.DType",
  "tensorflow.GradientTape",
  "tensorflow.Module",
  "tensorflow.Tensor",
  "tensorflow.TensorShape",
  "tensorflow.TensorSpec",
  "tensorflow.TensorSpec.from_spec",
  "tensorflow.Variable",
  "tensorflow.abs",
  "tensorflow.argmax",
  "tensorflow.as_dtype",
  "tensorflow.assert_equal",
  "tensorflow.broadcast_dynamic_shape",
  "tensorflow.broadcast_to",
  "tensorflow.cast",
  "tensorflow.clip_by_global_norm",
  "tensorflow.clip_by_norm",
  "tensorflow.clip_by_value",
  "tensorflow.concat",
  "tensorflow.constant",
  "tensorflow.convert_to_tensor",
  "tensorflow.data.Dataset",
  "tensorflow.data.Dataset.from_generator",
  "tensorflow.data.Dataset.from_tensors",
  "tensorflow.data.Dataset.range",
  "tensorflow.data.experimental.AUTOTUNE",
  "tensorflow.data.experimental.sample_from_datasets",
  "tensorflow.debugging.assert_equal",
  "tensorflow.debugging.assert_shapes",
  "tensorflow.distribute.ReduceOp.MEAN",
  "tensorflow.distribute.Strategy",
  "tensorflow.distribute.get_replica_context",
  "tensorflow.dtypes.as_dtype",
  "tensorflow.equal",
  "tensorflow.expand_dims",
  "tensorflow.fill",
  "tensorflow.float32",
  "tensorflow.float64",
  "tensorflow.function",
  "tensorflow.gather",
  "tensorflow.gather_nd",
  "tensorflow.identity",
  "tensorflow.image.convert_image_dtype",
  "tensorflow.initializers.VarianceScaling",
  "tensorflow.initializers.Zeros",
  "tensorflow.int32",
  "tensorflow.int64",
  "tensorflow.keras.losses.SparseCategoricalCrossentropy",
  "tensorflow.linalg.global_norm",
  "tensorflow.linspace",
  "tensorflow.math.cumprod",
  "tensorflow.math.exp",
  "tensorflow.math.is_finite",
  "tensorflow.math.log",
  "tensorflow.math.log_softmax",
  "tensorflow.math.maximum",
  "tensorflow.math.minimum",
  "tensorflow.math.mod",
  "tensorflow.math.reduce_sum",
  "tensorflow.math.softplus",
  "tensorflow.maximum",
  "tensorflow.minimum",
  "tensorflow.name_scope",
  "tensorflow.nn.elu",
  "tensorflow.nn.moments",
  "tensorflow.nn.pool",
  "tensorflow.nn.relu",
  "tensorflow.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.nn.softmax",
  "tensorflow.nn.softmax_cross_entropy_with_logits",
  "tensorflow.nn.softplus",
  "tensorflow.nn.tanh",
  "tensorflow.norm",
  "tensorflow.one_hot",
  "tensorflow.ones",
  "tensorflow.ones_like",
  "tensorflow.pow",
  "tensorflow.python.saved_model.revived_types.VersionedTypeRegistration",
  "tensorflow.python.saved_model.revived_types.register_revived_type",
  "tensorflow.random.normal",
  "tensorflow.random.uniform",
  "tensorflow.range",
  "tensorflow.rank",
  "tensorflow.reduce_logsumexp",
  "tensorflow.reduce_max",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_min",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.roll",
  "tensorflow.saved_model.load",
  "tensorflow.saved_model.save",
  "tensorflow.shape",
  "tensorflow.sign",
  "tensorflow.size",
  "tensorflow.slice",
  "tensorflow.sqrt",
  "tensorflow.square",
  "tensorflow.squeeze",
  "tensorflow.stack",
  "tensorflow.stop_gradient",
  "tensorflow.summary.create_file_writer",
  "tensorflow.summary.scalar",
  "tensorflow.tanh",
  "tensorflow.test.TestCase",
  "tensorflow.test.main",
  "tensorflow.tile",
  "tensorflow.train.Checkpoint",
  "tensorflow.train.CheckpointManager",
  "tensorflow.train.experimental.PythonState",
  "tensorflow.transpose",
  "tensorflow.uint64",
  "tensorflow.vectorized_map",
  "tensorflow.where",
  "tensorflow.zeros",
  "tensorflow.zeros_like",
  "tensorflow_probability.bijectors",
  "tensorflow_probability.distributions",
  "tensorflow_probability.distributions.Categorical",
  "tensorflow_probability.distributions.Distribution",
  "tensorflow_probability.experimental.as_composite",
  "tensorflow_probability.experimental.register_composite",
  "tensorflow_probability.experimental.substrates.jax.distributions",
  "threading.Barrier",
  "threading.Condition",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "time.sleep",
  "time.time",
  "to_ckptable",
  "tree.assert_same_structure",
  "tree.flatten",
  "tree.is_nested",
  "tree.map_structure",
  "tree.map_structure_with_path",
  "tree.unflatten_as",
  "trfl.assert_rank_and_shape_compatibility",
  "trfl.base_ops.LossOutput",
  "trfl.batched_index",
  "trfl.double_qlearning",
  "trfl.epsilon_greedy",
  "trfl.policy_entropy_loss",
  "trfl.policy_gradient",
  "trfl.td_learning",
  "trfl.vtrace_from_importance_weights",
  "types.MethodType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Generator",
  "typing.Generic",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.NamedTuple",
  "typing.NoReturn",
  "typing.Optional",
  "typing.Sequence",
  "typing.Text",
  "typing.TextIO",
  "typing.Tuple",
  "typing.TypeVar",
  "typing.Union",
  "unittest.mock.patch.object",
  "unittest.skipIf",
  "uuid.uuid1",
  "w"
 ],
 "deps": {
  "PIL": [],
  "_slice": [],
  "_slice_and_pad": [],
  "abc": [],
  "absl": [
   "absl-py/conda-forge/noarch/absl-py-0.10.0-pyhd8ed1ab_1"
  ],
  "acme": [],
  "batch_error": [],
  "batch_loss": [],
  "bsuite": [],
  "build_conv_layer": [],
  "cce": [],
  "check_rank": [],
  "collections": [],
  "concurrent": [],
  "copy": [],
  "csv": [],
  "curr_net": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.6-py_0"
  ],
  "datetime": [],
  "dm_env": [
   "dm-env/conda-forge/noarch/dm-env-1.3-pyhd8ed1ab_0"
  ],
  "fn": [],
  "functools": [],
  "gc": [],
  "grad_fn": [],
  "gym": [],
  "haiku": [],
  "head": [],
  "init_fn": [],
  "itertools": [],
  "jax": [
   "jax/conda-forge/noarch/jax-0.1.72-py_0",
   "jax/conda-forge/noarch/jax-0.2.9-pyhd8ed1ab_0"
  ],
  "make_initial_state": [],
  "make_support": [],
  "matplotlib": [],
  "mirror_structure": [],
  "model": [],
  "module": [],
  "net1": [],
  "net2": [],
  "network_head": [],
  "numpy": [],
  "operator": [],
  "optax": [],
  "os": [],
  "pickle": [],
  "policy": [],
  "priority_fn": [],
  "queue": [],
  "reverb": [],
  "rlax": [],
  "scipy": [],
  "should_terminate": [],
  "signal": [],
  "sonnet": [],
  "sys": [],
  "tensorflow": [],
  "tensorflow_probability": [],
  "threading": [],
  "time": [],
  "to_ckptable": [],
  "tree": [],
  "trfl": [],
  "types": [],
  "typing": [],
  "unittest": [],
  "uuid": [],
  "w": []
 }
}