{
 "bad": [
  "Crypto.Hash.keccak",
  "Crypto.Hash.keccak.new",
  "ReturnType",
  "_add_import",
  "_build_if_lll",
  "_build_opcodes",
  "_can_compare_with_uint256",
  "abc",
  "abc.ABC",
  "abc.abstractmethod",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.RawTextHelpFormatter",
  "ast",
  "ast.AST",
  "ast.Constant",
  "ast.Expr",
  "ast.Index",
  "ast.NodeTransformer",
  "ast.Str",
  "ast.UAdd",
  "ast.USub",
  "ast.Yield",
  "ast.parse",
  "binascii",
  "binascii.unhexlify",
  "calcer",
  "cast_type",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.deque",
  "contextlib",
  "contextlib.contextmanager",
  "copier",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "decimal",
  "decimal.Decimal",
  "decimal.ROUND_DOWN",
  "decimal.getcontext",
  "dict.fromkeys",
  "elementgetter",
  "enum.auto",
  "err_type",
  "f",
  "fn",
  "fn.__name__",
  "func",
  "functools",
  "functools.partial",
  "functools.wraps",
  "generate_assembly",
  "generate_bytecode",
  "get_common_types",
  "get_out_type",
  "get_type",
  "hashlib",
  "hashlib.sha256",
  "http.server.BaseHTTPRequestHandler",
  "http.server.HTTPServer",
  "importlib",
  "importlib.import_module",
  "input.typ",
  "input.typ.maxlen",
  "input.typ.typ",
  "io",
  "io.BytesIO",
  "itertools",
  "itertools.chain",
  "itertools.product",
  "json",
  "json.decoder.JSONDecodeError",
  "json.dumps",
  "json.loads",
  "load_bytearray",
  "math",
  "math.ceil",
  "math.floor",
  "math.trunc",
  "mzero",
  "node",
  "node.get",
  "node.get_ancestor",
  "node.target",
  "node.target.id",
  "node.value",
  "nodes.VyperNode",
  "nodes.__dict__.items",
  "object.__repr__",
  "operator",
  "operator.add",
  "operator.eq",
  "operator.floordiv",
  "operator.ge",
  "operator.gt",
  "operator.le",
  "operator.lt",
  "operator.mod",
  "operator.mul",
  "operator.ne",
  "operator.neg",
  "operator.not_",
  "operator.sub",
  "os",
  "os.environ.get",
  "parse_body",
  "pathlib.Path",
  "pkg_resources",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkgutil",
  "pkgutil.iter_modules",
  "re",
  "re.compile",
  "re.finditer",
  "re.match",
  "re.sub",
  "replace_constant",
  "semantic_version.NpmSpec",
  "sha3",
  "sha3.sha3_256",
  "socketserver.ThreadingMixIn",
  "sortkey",
  "synonymise",
  "sys",
  "sys.argv",
  "sys.argv.pop",
  "sys.exc_info",
  "sys.modules",
  "sys.stdin.read",
  "sys.tracebacklimit",
  "sys.version_info.major",
  "sys.version_info.minor",
  "textwrap",
  "textwrap.indent",
  "tokenize",
  "tokenize.COMMENT",
  "tokenize.NAME",
  "tokenize.OP",
  "tokenize.TokenError",
  "tokenize.TokenInfo",
  "tokenize.tokenize",
  "tokenize.untokenize",
  "type_",
  "types",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "uuid",
  "uuid.uuid4",
  "v",
  "visitor_fn",
  "vy_class",
  "vyper.__init__._version_file",
  "vyper.__version__.encode",
  "vyper.ast.Add",
  "vyper.ast.And",
  "vyper.ast.AnnAssign",
  "vyper.ast.Assign",
  "vyper.ast.Attribute",
  "vyper.ast.AugAssign",
  "vyper.ast.BinOp",
  "vyper.ast.BoolOp",
  "vyper.ast.Break",
  "vyper.ast.Bytes",
  "vyper.ast.Bytes.from_node",
  "vyper.ast.Call",
  "vyper.ast.Compare",
  "vyper.ast.Constant",
  "vyper.ast.Continue",
  "vyper.ast.Decimal",
  "vyper.ast.Dict",
  "vyper.ast.Div",
  "vyper.ast.Eq",
  "vyper.ast.EventDef",
  "vyper.ast.Expr",
  "vyper.ast.For",
  "vyper.ast.FunctionDef",
  "vyper.ast.FunctionDef.from_node",
  "vyper.ast.Gt",
  "vyper.ast.GtE",
  "vyper.ast.Hex",
  "vyper.ast.Hex.from_node",
  "vyper.ast.If",
  "vyper.ast.Import",
  "vyper.ast.ImportFrom",
  "vyper.ast.In",
  "vyper.ast.Index",
  "vyper.ast.Int",
  "vyper.ast.Int.from_node",
  "vyper.ast.InterfaceDef",
  "vyper.ast.List",
  "vyper.ast.Lt",
  "vyper.ast.LtE",
  "vyper.ast.Mod",
  "vyper.ast.Module",
  "vyper.ast.Mult",
  "vyper.ast.Name",
  "vyper.ast.NameConstant",
  "vyper.ast.Not",
  "vyper.ast.NotEq",
  "vyper.ast.NotIn",
  "vyper.ast.Num",
  "vyper.ast.Or",
  "vyper.ast.Pass",
  "vyper.ast.Pow",
  "vyper.ast.Raise",
  "vyper.ast.Return",
  "vyper.ast.Str",
  "vyper.ast.StructDef",
  "vyper.ast.Sub",
  "vyper.ast.Subscript",
  "vyper.ast.Tuple",
  "vyper.ast.USub",
  "vyper.ast.UnaryOp",
  "vyper.ast.VyperNode",
  "vyper.ast.arg",
  "vyper.ast.arguments",
  "vyper.compiler.OUTPUT_FORMATS.keys",
  "vyper.compiler.__init__.OUTPUT_FORMATS",
  "vyper.compiler.__init__.UNKNOWN_CONTRACT_NAME",
  "vyper.compiler.__init__.compile_codes",
  "vyper.context.environment.CONSTANT_ENVIRONMENT_VARS",
  "vyper.context.environment.MUTABLE_ENVIRONMENT_VARS",
  "vyper.context.types.__init__.get_primitive_types",
  "vyper.context.types.bases.DataLocation.CALLDATA",
  "vyper.context.types.bases.DataLocation.MEMORY",
  "vyper.context.types.bases.DataLocation.STORAGE",
  "vyper.context.types.bases.DataLocation.UNSET",
  "vyper.context.types.function.FunctionVisibility.EXTERNAL",
  "vyper.context.types.function.FunctionVisibility.INTERNAL",
  "vyper.context.types.function.StateMutability.NONPAYABLE",
  "vyper.context.types.function.StateMutability.PAYABLE",
  "vyper.context.types.function.StateMutability.PURE",
  "vyper.context.types.function.StateMutability.VIEW",
  "vyper.functions.DISPATCH_TABLE.build_LLL",
  "vyper.functions.DISPATCH_TABLE.get",
  "vyper.functions.STMT_DISPATCH_TABLE.build_LLL",
  "vyper.opcodes.DEFAULT_EVM_VERSION",
  "vyper.opcodes.EVM_VERSIONS",
  "vyper.opcodes.OPCODES",
  "vyper.parser.context.Constancy.Constant",
  "vyper.parser.context.Constancy.Mutable",
  "vyper.parser.parser.LLLnode.from_list",
  "vyper.parser.parser_utils.LLLnode.from_list",
  "vyper.parser.parser_utils.LLLnode.repr_show_gas",
  "vyper.signatures.FunctionSignature.from_definition",
  "vyper.utils.LOADED_LIMITS",
  "vyper.utils.LOADED_LIMITS.items",
  "vyper.utils.LOADED_LIMITS.keys",
  "vyper.utils.MemoryPositions.ADDRSIZE",
  "vyper.utils.MemoryPositions.FREE_LOOP_INDEX",
  "vyper.utils.MemoryPositions.FREE_VAR_SPACE",
  "vyper.utils.MemoryPositions.FREE_VAR_SPACE2",
  "vyper.utils.MemoryPositions.MAXDECIMAL",
  "vyper.utils.MemoryPositions.MAXNUM",
  "vyper.utils.MemoryPositions.MINDECIMAL",
  "vyper.utils.MemoryPositions.MINNUM",
  "vyper.utils.MemoryPositions.RESERVED_MEMORY",
  "vyper.utils.SizeLimits.ADDRSIZE",
  "vyper.utils.SizeLimits.MAXDECIMAL",
  "vyper.utils.SizeLimits.MAXNUM",
  "vyper.utils.SizeLimits.MAX_UINT256",
  "vyper.utils.SizeLimits.MINDECIMAL",
  "vyper.utils.SizeLimits.MINNUM",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "wrapped_fn"
 ],
 "deps": {
  "Crypto": [],
  "ReturnType": [],
  "_add_import": [],
  "_build_if_lll": [],
  "_build_opcodes": [],
  "_can_compare_with_uint256": [],
  "abc": [],
  "argparse": [],
  "ast": [],
  "asttokens": [
   "asttokens/conda-forge/noarch/asttokens-2.0.5-pyhd8ed1ab_0"
  ],
  "binascii": [],
  "calcer": [],
  "cast_type": [],
  "collections": [],
  "contextlib": [],
  "copier": [],
  "copy": [],
  "decimal": [],
  "dict": [],
  "elementgetter": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "err_type": [],
  "f": [],
  "fn": [],
  "func": [],
  "functools": [],
  "generate_assembly": [],
  "generate_bytecode": [],
  "get_common_types": [],
  "get_out_type": [],
  "get_type": [],
  "hashlib": [],
  "http": [],
  "importlib": [],
  "input": [],
  "io": [],
  "itertools": [],
  "json": [],
  "load_bytearray": [],
  "math": [],
  "mzero": [],
  "node": [],
  "nodes": [],
  "object": [],
  "operator": [],
  "os": [],
  "parse_body": [],
  "pathlib": [],
  "pkg_resources": [],
  "pkgutil": [],
  "re": [],
  "replace_constant": [],
  "semantic_version": [
   "semantic_version/conda-forge/noarch/semantic_version-2.6.0-py_0"
  ],
  "sha3": [],
  "socketserver": [],
  "sortkey": [],
  "synonymise": [],
  "sys": [],
  "textwrap": [],
  "tokenize": [],
  "type_": [],
  "types": [],
  "typing": [],
  "uuid": [],
  "v": [],
  "visitor_fn": [],
  "vy_class": [],
  "vyper": [],
  "warnings": [],
  "wrapped_fn": []
 }
}