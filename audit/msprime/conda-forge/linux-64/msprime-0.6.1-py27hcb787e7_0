{
 "bad": [
  "_msprime",
  "_msprime.FORWARD",
  "_msprime.FileFormatError",
  "_msprime.HaplotypeGenerator",
  "_msprime.IndividualTable",
  "_msprime.MigrationTable",
  "_msprime.MutationGenerator",
  "_msprime.MutationTable",
  "_msprime.NODE_IS_SAMPLE",
  "_msprime.PopulationTable",
  "_msprime.ProvenanceTable",
  "_msprime.REVERSE",
  "_msprime.RandomGenerator",
  "_msprime.SAMPLE_COUNTS",
  "_msprime.SAMPLE_LISTS",
  "_msprime.Simulator",
  "_msprime.SiteTable",
  "_msprime.SparseTree",
  "_msprime.SparseTreeIterator",
  "_msprime.TableCollection",
  "_msprime.TreeDiffIterator",
  "_msprime.TreeSequence",
  "_msprime.VariantGenerator",
  "_msprime.VcfConverter",
  "_msprime.VersionTooNewError",
  "_msprime.VersionTooOldError",
  "_msprime.get_gsl_version",
  "_version.version",
  "array.array",
  "cls",
  "collections.Iterable",
  "datetime.datetime.min.isoformat",
  "format.lower",
  "get_derived_state",
  "hashlib.md5",
  "iterator",
  "itertools",
  "itertools.chain",
  "msprime.DuplicatePositionsError",
  "msprime.MassMigration",
  "msprime.MigrationRateChange",
  "msprime.NODE_IS_SAMPLE",
  "msprime.NULL_INDIVIDUAL",
  "msprime.PopulationConfiguration",
  "msprime.PopulationParametersChange",
  "msprime.ProvenanceTable",
  "msprime.TableCollection",
  "msprime.TreeSequence.load_tables",
  "msprime.load",
  "msprime.load_legacy",
  "msprime.provenance.id",
  "msprime.provenance.record",
  "msprime.provenance.timestamp",
  "msprime.simulate",
  "msprime.tables.ll_tables",
  "msprime.tables.provenances.add_row",
  "msprime.tables.sequence_length",
  "msprime.tables.simplify",
  "msprime.tables.tree_sequence",
  "numpy.bitwise_and",
  "numpy.float64",
  "numpy.nan",
  "numpy.uint32",
  "os.getpid",
  "signal.SIGPIPE",
  "signal.SIG_DFL",
  "six.moves.copyreg",
  "six.moves.copyreg.pickle",
  "sys",
  "sys.argv",
  "sys.exit",
  "sys.float_info.max",
  "sys.stdout",
  "sys.version_info",
  "unpack_bytes",
  "unpack_strings",
  "weight_fun",
  "wfn"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_msprime": [],
  "_version": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "array": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cls": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "format": [],
  "get_derived_state": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "h5py": [
   "h5py/conda-forge/linux-64/h5py-2.7.1-py36_1"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "iterator": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-py_2"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "msprime": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "six": [],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "svgwrite": [
   "svgwrite/conda-forge/noarch/svgwrite-1.1.12-py_0"
  ],
  "sys": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unpack_bytes": [],
  "unpack_strings": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weight_fun": [],
  "wfn": []
 }
}