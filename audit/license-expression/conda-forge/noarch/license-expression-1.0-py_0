{
 "bad": [
  "LicenseSymbol",
  "LicenseWithExceptionSymbol",
  "Token.sort",
  "__future__.absolute_import",
  "__future__.print_function",
  "__future__.unicode_literals",
  "add_item",
  "build_token_with_symbol",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "copy.copy",
  "copy.deepcopy",
  "functools.total_ordering",
  "get_tokens",
  "itertools",
  "itertools.chain.from_iterable",
  "license_expression.__init__.BaseSymbol",
  "license_expression.__init__.ExpressionError",
  "license_expression.__init__.ExpressionParseError",
  "license_expression.__init__.KEYWORDS",
  "license_expression.__init__.KEYWORDS_STRINGS",
  "license_expression.__init__.KW_AND",
  "license_expression.__init__.KW_LPAR",
  "license_expression.__init__.KW_OR",
  "license_expression.__init__.KW_RPAR",
  "license_expression.__init__.KW_WITH",
  "license_expression.__init__.Keyword",
  "license_expression.__init__.LicenseSymbol",
  "license_expression.__init__.LicenseSymbolLike",
  "license_expression.__init__.LicenseWithExceptionSymbol",
  "license_expression.__init__.Licensing",
  "license_expression.__init__.OPERATORS",
  "license_expression.__init__.PARSE_EXPRESSION_NOT_UNICODE",
  "license_expression.__init__.PARSE_INVALID_EXCEPTION",
  "license_expression.__init__.PARSE_INVALID_SYMBOL",
  "license_expression.__init__.PARSE_INVALID_SYMBOL_AS_EXCEPTION",
  "license_expression.__init__.Renderable",
  "license_expression.__init__.RenderableFunction",
  "license_expression.__init__.TOKEN_WITH",
  "license_expression.__init__._simple_tokenizer",
  "license_expression.__init__.build_symbols_from_unknown_tokens",
  "license_expression.__init__.build_token_groups_for_with_subexpression",
  "license_expression.__init__.is_with_subexpression",
  "license_expression.__init__.ordered_unique",
  "license_expression.__init__.replace_with_subexpression_by_license_symbol",
  "license_expression.__init__.str",
  "logging",
  "logging.DEBUG",
  "logging.basicConfig",
  "logging.getLogger",
  "match_getter",
  "ordered_unique",
  "re",
  "re.MULTILINE",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "rendered_items_append",
  "string",
  "sys",
  "sys.stdout",
  "triple_clear",
  "triple_popleft",
  "tripple_append",
  "walk"
 ],
 "deps": {
  "LicenseSymbol": [],
  "LicenseWithExceptionSymbol": [],
  "Token": [],
  "__future__": [],
  "add_item": [],
  "boolean": [
   "boolean.py/conda-forge/noarch/boolean.py-3.7-py_0"
  ],
  "build_token_with_symbol": [],
  "collections": [],
  "copy": [],
  "functools": [],
  "get_tokens": [],
  "itertools": [],
  "license_expression": [],
  "logging": [],
  "match_getter": [],
  "ordered_unique": [],
  "re": [],
  "rendered_items_append": [],
  "string": [],
  "sys": [],
  "triple_clear": [],
  "triple_popleft": [],
  "tripple_append": [],
  "walk": []
 }
}