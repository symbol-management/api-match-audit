{
 "bad": [
  "Collect",
  "IPython.display.HTML",
  "IPython.display.display",
  "PriceClass",
  "__future__.print_function",
  "_agen_to_foo",
  "_ids",
  "_ids_ids",
  "_run",
  "aiofiles",
  "aiofiles.open",
  "aiohttp",
  "aiohttp.ClientSession",
  "aiohttp.WSMsgType.CLOSED",
  "aiohttp.WSMsgType.ERROR",
  "aiohttp.WSMsgType.TEXT",
  "asyncio",
  "asyncio.Queue",
  "asyncio.QueueEmpty",
  "asyncio.create_task",
  "asyncio.gather",
  "asyncio.get_event_loop",
  "asyncio.iscoroutine",
  "asyncio.sleep",
  "asyncpg",
  "asyncpg.connect",
  "base.Node.expire",
  "base.Node.interval",
  "base.StreamEnd",
  "base.StreamNone",
  "base.StreamRepeat",
  "boltons.funcutils.wraps",
  "callback",
  "collections.namedtuple",
  "concurrent.futures.ThreadPoolExecutor",
  "concurrent.futures._base",
  "concurrent.futures._base.Future",
  "concurrent.futures.thread",
  "concurrent.futures.thread.BrokenThreadPool",
  "concurrent.futures.thread._WorkItem",
  "concurrent.futures.thread._shutdown",
  "concurrent.futures.thread._threads_queues.clear",
  "confluent_kafka.Consumer",
  "confluent_kafka.KafkaError",
  "confluent_kafka.KafkaError._PARTITION_EOF",
  "confluent_kafka.Producer",
  "copy",
  "copy.deepcopy",
  "datetime.datetime",
  "datetime.datetime.now",
  "f",
  "functools",
  "functools.partial",
  "functools.wraps",
  "gevent.monkey",
  "gevent.monkey.patch_all",
  "gevent.spawn",
  "graph._Graph",
  "graphviz.Digraph",
  "graphviz.Source",
  "input.Const",
  "input.Foo",
  "inspect",
  "inspect.getfullargspec",
  "inspect.isgeneratorfunction",
  "ipydagred3",
  "ipydagred3.DagreD3Widget",
  "ipydagred3.Graph",
  "json",
  "json.dumps",
  "json.loads",
  "k",
  "k._node_wrapper",
  "lazy.LazyNode",
  "lazy.node.Node",
  "math",
  "math.acos",
  "math.asin",
  "math.atan",
  "math.ceil",
  "math.cos",
  "math.erf",
  "math.exp",
  "math.floor",
  "math.log",
  "math.sin",
  "math.sqrt",
  "math.tan",
  "meth",
  "meth.__name__",
  "n",
  "new_value",
  "node",
  "node.Node",
  "node.Node.__add__",
  "node.Node.__and__",
  "node.Node.__array_function__",
  "node.Node.__array_ufunc__",
  "node.Node.__bool__",
  "node.Node.__div__",
  "node.Node.__eq__",
  "node.Node.__floordiv__",
  "node.Node.__ge__",
  "node.Node.__gt__",
  "node.Node.__invert__",
  "node.Node.__le__",
  "node.Node.__len__",
  "node.Node.__lt__",
  "node.Node.__mod__",
  "node.Node.__mul__",
  "node.Node.__ne__",
  "node.Node.__neg__",
  "node.Node.__nonzero__",
  "node.Node.__or__",
  "node.Node.__pow__",
  "node.Node.__radd__",
  "node.Node.__rand__",
  "node.Node.__rdiv__",
  "node.Node.__rmod__",
  "node.Node.__rmul__",
  "node.Node.__ror__",
  "node.Node.__rpow__",
  "node.Node.__rsub__",
  "node.Node.__rtruediv__",
  "node.Node.__sub__",
  "node.Node.__truediv__",
  "node.Node._print",
  "node.Node.abs",
  "node.Node.acos",
  "node.Node.apply",
  "node.Node.asin",
  "node.Node.atan",
  "node.Node.average",
  "node.Node.ceil",
  "node.Node.cos",
  "node.Node.dagre",
  "node.Node.delay",
  "node.Node.dictMerge",
  "node.Node.ema",
  "node.Node.erf",
  "node.Node.exp",
  "node.Node.float",
  "node.Node.floor",
  "node.Node.graph",
  "node.Node.graphviz",
  "node.Node.if_",
  "node.Node.int",
  "node.Node.invert",
  "node.Node.listMerge",
  "node.Node.log",
  "node.Node.map",
  "node.Node.merge",
  "node.Node.perspective",
  "node.Node.pprint",
  "node.Node.print",
  "node.Node.reduce",
  "node.Node.rollingAverage",
  "node.Node.rollingCount",
  "node.Node.rollingMax",
  "node.Node.rollingMin",
  "node.Node.rollingSum",
  "node.Node.round",
  "node.Node.sin",
  "node.Node.sma",
  "node.Node.sqrt",
  "node.Node.sum",
  "node.Node.tan",
  "node.Node.unroll",
  "node.Node.unrollDataFrame",
  "node.Node.window",
  "node._gen_node",
  "numpy",
  "numpy.add",
  "numpy.all",
  "numpy.any",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.cos",
  "numpy.divide",
  "numpy.exp",
  "numpy.lib.scimath.log",
  "numpy.lib.scimath.sqrt",
  "numpy.multiply",
  "numpy.random.normal",
  "numpy.sin",
  "numpy.subtract",
  "numpy.tan",
  "os",
  "os.path",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.remove",
  "out",
  "output._OUTPUT_GRAPHVIZSHAPE",
  "pandas",
  "pandas.Series",
  "perspective.PerspectiveWidget",
  "pytest",
  "pytest.mark.skipif",
  "random",
  "random.randint",
  "random.random",
  "read_file",
  "rec",
  "requests",
  "requests.get",
  "requests.post",
  "scipy",
  "scipy.special.erf",
  "six",
  "six.iteritems",
  "six.itervalues",
  "socketIO_client_nexus.SocketIO",
  "statistics",
  "statistics.mean",
  "streaming.Foo",
  "streaming.StreamingNode",
  "sympy",
  "sympy.dotprint",
  "sympy.exp",
  "sympy.init_printing",
  "sympy.ln",
  "sympy.parsing.sympy_parser.implicit_multiplication_application",
  "sympy.parsing.sympy_parser.parse_expr",
  "sympy.parsing.sympy_parser.standard_transformations",
  "sympy.preorder_traversal",
  "sympy.sqrt",
  "sympy.stats.Normal",
  "sympy.stats.cdf",
  "sympy.symbols",
  "sympy.utilities.lambdify.lambdify",
  "temporalcache.expire",
  "temporalcache.interval",
  "thread.run",
  "time",
  "time.sleep",
  "time.time",
  "tributary.__init__._PATCHED",
  "tributary.functional.__init__._EXECUTOR",
  "tributary.functional.__init__.run_submit",
  "tributary.functional.__init__.submit",
  "tributary.lazy.control.__init__.If",
  "tributary.lazy.output.__init__.Dagre",
  "tributary.lazy.output.__init__.Graph",
  "tributary.lazy.output.__init__.GraphViz",
  "tributary.lazy.output.__init__.Print",
  "tributary.lazy.output.__init__._print",
  "tributary.streaming.__init__.graph",
  "tributary.streaming.__init__.nodes",
  "tributary.streaming.__init__.out",
  "tributary.streaming.control.__init__.If",
  "tributary.symbolic.__init__.symbols",
  "types",
  "types.AsyncGeneratorType",
  "types.FunctionType",
  "types.GeneratorType",
  "urllib.parse.urlparse",
  "urlparse.urlparse",
  "utils.LazyToStreaming",
  "utils._CALCULATIONS_GRAPHVIZSHAPE",
  "utils._CONTROL_GRAPHVIZSHAPE",
  "utils._either_type",
  "utils._raise",
  "websocket.create_connection",
  "z"
 ],
 "deps": {
  "Collect": [],
  "IPython": [],
  "PriceClass": [],
  "__future__": [],
  "_agen_to_foo": [],
  "_ids": [],
  "_ids_ids": [],
  "_run": [],
  "aiofiles": [],
  "aiohttp": [],
  "asyncio": [],
  "asyncpg": [],
  "base": [],
  "boltons": [],
  "callback": [],
  "collections": [],
  "concurrent": [],
  "confluent_kafka": [],
  "copy": [],
  "datetime": [],
  "f": [],
  "functools": [],
  "gevent": [],
  "graph": [],
  "graphviz": [],
  "input": [],
  "inspect": [],
  "ipydagred3": [],
  "json": [],
  "k": [],
  "lazy": [],
  "math": [],
  "meth": [],
  "n": [],
  "new_value": [],
  "node": [],
  "numpy": [],
  "os": [],
  "out": [],
  "output": [],
  "pandas": [],
  "perspective": [],
  "pytest": [],
  "random": [],
  "read_file": [],
  "rec": [],
  "requests": [],
  "scipy": [],
  "six": [],
  "socketIO_client_nexus": [],
  "statistics": [],
  "streaming": [],
  "sympy": [],
  "temporalcache": [],
  "thread": [],
  "time": [],
  "tributary": [],
  "types": [],
  "urllib": [],
  "urlparse": [],
  "utils": [],
  "websocket": [],
  "z": []
 }
}