{
 "bad": [
  "__future__.division",
  "__future__.print_function",
  "_gohlketransforms.euler_matrix",
  "_gohlketransforms.quaternion_from_euler",
  "_gohlketransforms.quaternion_from_matrix",
  "_gohlketransforms.quaternion_matrix",
  "_gohlketransforms.reflection_from_matrix",
  "_gohlketransforms.reflection_matrix",
  "_gohlketransforms.scale_from_matrix",
  "_gohlketransforms.scale_matrix",
  "_gohlketransforms.shear_from_matrix",
  "_gohlketransforms.shear_matrix",
  "arcball_constrain_to_axis",
  "arcball_map_to_sphere",
  "axangles.axangle2mat",
  "cos",
  "doctest",
  "doctest.testmod",
  "euler._AXES2TUPLE.items",
  "euler._AXES2TUPLE.keys",
  "euler.__dict__",
  "func",
  "functools.reduce",
  "importlib.import_module",
  "itertools.permutations",
  "itertools.product",
  "json",
  "json.loads",
  "math",
  "math.acos",
  "math.asin",
  "math.atan",
  "math.atan2",
  "math.cos",
  "math.floor",
  "math.pi",
  "math.sin",
  "math.sqrt",
  "math.tan",
  "nose.SkipTest",
  "nose.tools.assert_equal",
  "nose.tools.assert_false",
  "nose.tools.assert_raises",
  "nose.tools.assert_true",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.cross",
  "numpy.diag",
  "numpy.dot",
  "numpy.empty",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.fabs",
  "numpy.finfo",
  "numpy.float",
  "numpy.float64",
  "numpy.identity",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.isnan",
  "numpy.linalg.cholesky",
  "numpy.linalg.det",
  "numpy.linalg.eig",
  "numpy.linalg.eigh",
  "numpy.linalg.inv",
  "numpy.linalg.pinv",
  "numpy.linalg.svd",
  "numpy.maximum_sctype",
  "numpy.mean",
  "numpy.nan",
  "numpy.negative",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.prod",
  "numpy.r_",
  "numpy.radians",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.random",
  "numpy.real",
  "numpy.roll",
  "numpy.set_printoptions",
  "numpy.sign",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_raises",
  "numpy.testing.dec",
  "numpy.testing.dec.slow",
  "numpy.trace",
  "numpy.triu",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "quaternion_matrix",
  "quaternions.axangle2quat",
  "quaternions.fillpositive",
  "quaternions.mat2quat",
  "quaternions.nearly_equivalent",
  "quaternions.qconjugate",
  "quaternions.qeye",
  "quaternions.qinverse",
  "quaternions.qisunit",
  "quaternions.qmult",
  "quaternions.qnorm",
  "quaternions.quat2axangle",
  "quaternions.quat2mat",
  "quaternions.rotate_vector",
  "random",
  "reflections.aff2rfnorm",
  "reflections.rfnorm2aff",
  "shears.aff2sadn",
  "shears.sadn2aff",
  "sin",
  "sympy",
  "sympy.Symbol",
  "sympy.acos",
  "sympy.cos",
  "sympy.latex",
  "sympy.matrices.Matrix",
  "sympy.matrices.eye",
  "sympy.matrices.zeros",
  "sympy.simplify",
  "sympy.sin",
  "sympy.solve",
  "sympy.sqrt",
  "sympy.symbols",
  "sys",
  "taitbryan.axangle2euler",
  "taitbryan.euler2axangle",
  "taitbryan.euler2mat",
  "taitbryan.euler2quat",
  "taitbryan.mat2euler",
  "taitbryan.quat2euler",
  "transforms3d.__init__.get_versions",
  "unit_vector",
  "vector_norm",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "zooms.aff2zfdir",
  "zooms.zfdir2aff"
 ],
 "deps": {
  "__future__": [],
  "_gohlketransforms": [],
  "arcball_constrain_to_axis": [],
  "arcball_map_to_sphere": [],
  "axangles": [],
  "cos": [],
  "doctest": [],
  "euler": [],
  "func": [],
  "functools": [],
  "importlib": [],
  "itertools": [],
  "json": [],
  "math": [],
  "nose": [],
  "numpy": [],
  "quaternion_matrix": [],
  "quaternions": [],
  "random": [],
  "reflections": [],
  "shears": [],
  "sin": [],
  "sympy": [],
  "sys": [],
  "taitbryan": [],
  "transforms3d": [],
  "unit_vector": [],
  "vector_norm": [],
  "warnings": [],
  "zooms": []
 }
}