{
 "bad": [
  "_TYPE",
  "abc.ABC",
  "abc.abstractmethod",
  "atexit.register",
  "atexit.unregister",
  "collections.MutableMapping",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "datetime.datetime.utcfromtimestamp",
  "enum.Enum",
  "error_handler_class",
  "error_handler_class.__name__",
  "events",
  "func",
  "func.__name__",
  "json.dumps",
  "logging.getLogger",
  "math.inf",
  "opentelemetry.configuration.Configuration",
  "opentelemetry.context",
  "opentelemetry.context.Context",
  "opentelemetry.context.attach",
  "opentelemetry.context.detach",
  "opentelemetry.context.set_value",
  "opentelemetry.context.span_id",
  "opentelemetry.context.trace_id",
  "opentelemetry.context.trace_state",
  "opentelemetry.metrics.BoundCounter",
  "opentelemetry.metrics.BoundUpDownCounter",
  "opentelemetry.metrics.BoundValueRecorder",
  "opentelemetry.metrics.Counter",
  "opentelemetry.metrics.InstrumentT",
  "opentelemetry.metrics.Meter",
  "opentelemetry.metrics.MeterProvider",
  "opentelemetry.metrics.Metric",
  "opentelemetry.metrics.Observer",
  "opentelemetry.metrics.ObserverCallbackT",
  "opentelemetry.metrics.SumObserver",
  "opentelemetry.metrics.UpDownCounter",
  "opentelemetry.metrics.UpDownSumObserver",
  "opentelemetry.metrics.ValueObserver",
  "opentelemetry.metrics.ValueRecorder",
  "opentelemetry.metrics.ValueT",
  "opentelemetry.sdk.error_handler.DefaultErrorHandler",
  "opentelemetry.sdk.error_handler.ErrorHandler",
  "opentelemetry.sdk.error_handler.logger",
  "opentelemetry.sdk.metrics.Accumulation",
  "opentelemetry.sdk.metrics.Accumulator",
  "opentelemetry.sdk.metrics.BaseBoundInstrument",
  "opentelemetry.sdk.metrics.BoundCounter",
  "opentelemetry.sdk.metrics.BoundUpDownCounter",
  "opentelemetry.sdk.metrics.BoundValueRecorder",
  "opentelemetry.sdk.metrics.Counter",
  "opentelemetry.sdk.metrics.Metric",
  "opentelemetry.sdk.metrics.Observer",
  "opentelemetry.sdk.metrics.SumObserver",
  "opentelemetry.sdk.metrics.UpDownCounter",
  "opentelemetry.sdk.metrics.UpDownSumObserver",
  "opentelemetry.sdk.metrics.ValueObserver",
  "opentelemetry.sdk.metrics.ValueRecorder",
  "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter",
  "opentelemetry.sdk.metrics.export.ExportRecord",
  "opentelemetry.sdk.metrics.export.MetricsExportResult",
  "opentelemetry.sdk.metrics.export.MetricsExportResult.FAILURE",
  "opentelemetry.sdk.metrics.export.MetricsExportResult.SUCCESS",
  "opentelemetry.sdk.metrics.export.MetricsExporter",
  "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
  "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator",
  "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator",
  "opentelemetry.sdk.metrics.export.aggregate.SumAggregator",
  "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator",
  "opentelemetry.sdk.metrics.export.aggregate.logger",
  "opentelemetry.sdk.metrics.export.controller.PushController",
  "opentelemetry.sdk.metrics.export.processor.Processor",
  "opentelemetry.sdk.metrics.logger",
  "opentelemetry.sdk.metrics.view.View",
  "opentelemetry.sdk.metrics.view.ViewConfig",
  "opentelemetry.sdk.metrics.view.ViewData",
  "opentelemetry.sdk.metrics.view.ViewManager",
  "opentelemetry.sdk.metrics.view.get_default_aggregator",
  "opentelemetry.sdk.metrics.view.logger",
  "opentelemetry.sdk.resources.Attributes",
  "opentelemetry.sdk.resources.LabelValue",
  "opentelemetry.sdk.resources.OPENTELEMETRY_SDK_VERSION",
  "opentelemetry.sdk.resources.OTELResourceDetector",
  "opentelemetry.sdk.resources.OTEL_RESOURCE_ATTRIBUTES",
  "opentelemetry.sdk.resources.Resource",
  "opentelemetry.sdk.resources.Resource.create",
  "opentelemetry.sdk.resources.ResourceDetector",
  "opentelemetry.sdk.resources.TELEMETRY_SDK_LANGUAGE",
  "opentelemetry.sdk.resources.TELEMETRY_SDK_NAME",
  "opentelemetry.sdk.resources.TELEMETRY_SDK_VERSION",
  "opentelemetry.sdk.resources._EMPTY_RESOURCE",
  "opentelemetry.sdk.resources.logger",
  "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor",
  "opentelemetry.sdk.trace.Event",
  "opentelemetry.sdk.trace.EventBase",
  "opentelemetry.sdk.trace.MAX_NUM_ATTRIBUTES",
  "opentelemetry.sdk.trace.MAX_NUM_EVENTS",
  "opentelemetry.sdk.trace.MAX_NUM_LINKS",
  "opentelemetry.sdk.trace.Span",
  "opentelemetry.sdk.trace.SpanProcessor",
  "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor",
  "opentelemetry.sdk.trace.Tracer",
  "opentelemetry.sdk.trace.VALID_ATTR_VALUE_TYPES",
  "opentelemetry.sdk.trace._Span",
  "opentelemetry.sdk.trace._check_span_ended",
  "opentelemetry.sdk.trace._create_immutable_attributes",
  "opentelemetry.sdk.trace._filter_attribute_values",
  "opentelemetry.sdk.trace._is_valid_attribute_value",
  "opentelemetry.sdk.trace.export.SpanExportResult",
  "opentelemetry.sdk.trace.export.SpanExportResult.FAILURE",
  "opentelemetry.sdk.trace.export.SpanExportResult.SUCCESS",
  "opentelemetry.sdk.trace.export.SpanExporter",
  "opentelemetry.sdk.trace.export._FlushRequest",
  "opentelemetry.sdk.trace.export.logger",
  "opentelemetry.sdk.trace.logger",
  "opentelemetry.sdk.trace.propagation.b3_format._extract_first_element",
  "opentelemetry.sdk.trace.propagation.b3_format.format_span_id",
  "opentelemetry.sdk.trace.propagation.b3_format.format_trace_id",
  "opentelemetry.sdk.trace.sampling.DEFAULT_ON",
  "opentelemetry.sdk.trace.sampling.Decision",
  "opentelemetry.sdk.trace.sampling.Sampler",
  "opentelemetry.sdk.trace.sampling.SamplingResult",
  "opentelemetry.sdk.util.BoundedDict",
  "opentelemetry.sdk.util.BoundedDict.from_map",
  "opentelemetry.sdk.util.BoundedList",
  "opentelemetry.sdk.util.BoundedList.from_seq",
  "opentelemetry.sdk.util.get_dict_as_key",
  "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
  "opentelemetry.sdk.util.ns_to_iso_str",
  "opentelemetry.trace.DefaultSpan",
  "opentelemetry.trace.INVALID_SPAN",
  "opentelemetry.trace.INVALID_SPAN_CONTEXT",
  "opentelemetry.trace.INVALID_SPAN_ID",
  "opentelemetry.trace.INVALID_TRACE_ID",
  "opentelemetry.trace.IdsGenerator",
  "opentelemetry.trace.Link",
  "opentelemetry.trace.RandomIdsGenerator",
  "opentelemetry.trace.Span",
  "opentelemetry.trace.SpanContext",
  "opentelemetry.trace.SpanKind",
  "opentelemetry.trace.SpanKind.INTERNAL",
  "opentelemetry.trace.Status",
  "opentelemetry.trace.TraceFlags",
  "opentelemetry.trace.TraceFlags.DEFAULT",
  "opentelemetry.trace.TraceFlags.SAMPLED",
  "opentelemetry.trace.TraceState",
  "opentelemetry.trace.Tracer",
  "opentelemetry.trace.TracerProvider",
  "opentelemetry.trace.format_span_id",
  "opentelemetry.trace.format_trace_id",
  "opentelemetry.trace.get_current_span",
  "opentelemetry.trace.get_tracer_provider",
  "opentelemetry.trace.propagation.SPAN_KEY",
  "opentelemetry.trace.propagation.textmap.Getter",
  "opentelemetry.trace.propagation.textmap.Setter",
  "opentelemetry.trace.propagation.textmap.TextMapPropagator",
  "opentelemetry.trace.propagation.textmap.TextMapPropagatorT",
  "opentelemetry.trace.set_span_in_context",
  "opentelemetry.trace.status.Status",
  "opentelemetry.trace.status.StatusCode.ERROR",
  "opentelemetry.trace.status.StatusCode.UNSET",
  "opentelemetry.util.time_ns",
  "opentelemetry.util.types.AttributeValue",
  "opentelemetry.util.types.Attributes",
  "os.environ.get",
  "os.linesep",
  "pkg_resources.get_distribution",
  "pkg_resources.iter_entry_points",
  "re.compile",
  "sys.stdout",
  "threading.Condition",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "traceback.format_exc",
  "types.MappingProxyType",
  "types.TracebackType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.IO",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.MutableSequence",
  "typing.Optional",
  "typing.Sequence",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union"
 ],
 "deps": {
  "_TYPE": [],
  "abc": [],
  "atexit": [],
  "collections": [],
  "contextlib": [],
  "datetime": [],
  "enum": [],
  "error_handler_class": [],
  "events": [],
  "func": [],
  "json": [],
  "logging": [],
  "math": [],
  "opentelemetry": [],
  "os": [],
  "pkg_resources": [],
  "re": [],
  "sys": [],
  "threading": [],
  "traceback": [],
  "types": [],
  "typing": []
 }
}