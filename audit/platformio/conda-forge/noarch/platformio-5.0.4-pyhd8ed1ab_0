{
 "bad": [
  "OpenSSL.SSL.VERIFY_FAIL_IF_NO_PEER_CERT",
  "OpenSSL.SSL.VERIFY_PEER",
  "Queue.Empty",
  "Queue.LifoQueue",
  "SCons.Action.Action",
  "SCons.Builder.Builder",
  "SCons.Builder.ListEmitter",
  "SCons.Builder.match_splitext",
  "SCons.Defaults.SharedObjectEmitter",
  "SCons.Defaults.StaticObjectEmitter",
  "SCons.Defaults.processDefines",
  "SCons.Node.FS.File",
  "SCons.Node.Python.Value",
  "SCons.Node.Python.Value.__init__",
  "SCons.Scanner.Scanner",
  "SCons.Script.ARGUMENTS.get",
  "SCons.Script.AllowSubstExceptions",
  "SCons.Script.AlwaysBuild",
  "SCons.Script.COMMAND_LINE_TARGETS",
  "SCons.Script.DEFAULT_TARGETS",
  "SCons.Script.Default",
  "SCons.Script.DefaultEnvironment",
  "SCons.Script.Export",
  "SCons.Script.Import",
  "SCons.Script.SConscript",
  "SCons.Script.Variables",
  "SCons.Tool.createObjBuilders",
  "SCons.Util.case_sensitive_suffixes",
  "SCons.Util.is_Sequence",
  "SCons.Util.splitext",
  "_add_file",
  "_already_depends",
  "_append_board",
  "_append_build_item",
  "_append_defect",
  "_append_pio_macros",
  "_calculate_size",
  "_cleanup_cmds",
  "_cleanup_debug_flags",
  "_cleanup_dir",
  "_configure_defaults",
  "_correct_found_libs",
  "_extract_defines",
  "_extract_filepath",
  "_first_arg_from_list",
  "_format_availale_bytes",
  "_get_configuration_data",
  "_get_debug_data",
  "_get_hardware_data",
  "_get_packages_data",
  "_get_pattern",
  "_get_plaform_data",
  "_get_project_data",
  "_get_size_output",
  "_is_builtin",
  "_is_match_pattern",
  "_look_for_mbed_disk",
  "_look_for_serial_port",
  "_lookup_in_ldpath",
  "_path_to_name",
  "_print_deps_tree",
  "_relpath",
  "_replace",
  "_rules_to_set",
  "_safe_echo",
  "_search_include_dir",
  "_write_and_flush",
  "archiver",
  "atexit.register",
  "autobahn.twisted.resource.WebSocketResource",
  "autobahn.twisted.websocket.WebSocketServerFactory",
  "autobahn.twisted.websocket.WebSocketServerProtocol",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "binascii.crc32",
  "bottle.template",
  "callback",
  "cb",
  "cb_filter",
  "certifi.where",
  "click.BOOL",
  "click.BadParameter",
  "click.Choice",
  "click.ClickException",
  "click.FloatRange",
  "click.INT",
  "click.IntRange",
  "click.MultiCommand",
  "click.ParamType",
  "click.Path",
  "click.UNPROCESSED",
  "click.UsageError",
  "click._compat.isatty",
  "click.argument",
  "click.command",
  "click.confirm",
  "click.echo",
  "click.get_current_context",
  "click.get_terminal_size",
  "click.group",
  "click.launch",
  "click.option",
  "click.parser.split_arg_string",
  "click.pass_context",
  "click.pass_obj",
  "click.progressbar",
  "click.prompt",
  "click.secho",
  "click.style",
  "click.testing.CliRunner",
  "click.unstyle",
  "click.version_option",
  "click_completion.get_auto_shell",
  "click_completion.get_code",
  "click_completion.init",
  "click_completion.install",
  "cls",
  "codecs.open",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.deque",
  "configparser.ConfigParser",
  "configparser.Error",
  "contextlib.contextmanager",
  "datetime.date.today",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "delete_tmptest_files",
  "elftools.elf.descriptions.describe_sh_flags",
  "elftools.elf.elffile.ELFFile",
  "email.utils.parsedate_tz",
  "fcntl.LOCK_EX",
  "fcntl.LOCK_NB",
  "fcntl.LOCK_UN",
  "fcntl.flock",
  "fnmatch.fnmatch",
  "func",
  "functools.cmp_to_key",
  "functools.wraps",
  "getpass.getuser",
  "glob.glob",
  "hashlib.md5",
  "hashlib.new",
  "hashlib.sha1",
  "inspect.getmembers",
  "inspect.isclass",
  "inspect.isroutine",
  "io.BytesIO",
  "io.DEFAULT_BUFFER_SIZE",
  "io.StringIO",
  "io.open",
  "itertools.chain",
  "itertools.product",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "jsonrpc.Dispatcher",
  "jsonrpc.JSONRPCResponseManager.handle",
  "jsonrpc.exceptions.JSONRPCDispatchException",
  "locale.getdefaultlocale",
  "mDNSListener",
  "marshmallow.EXCLUDE",
  "marshmallow.Schema",
  "marshmallow.ValidationError",
  "marshmallow.__version_info__",
  "marshmallow.fields.Bool",
  "marshmallow.fields.Email",
  "marshmallow.fields.List",
  "marshmallow.fields.Nested",
  "marshmallow.fields.Str",
  "marshmallow.fields.Url",
  "marshmallow.validate.Length",
  "marshmallow.validate.OneOf",
  "marshmallow.validate.Regexp",
  "marshmallow.validates",
  "math.ceil",
  "math.floor",
  "method",
  "mimetypes.add_type",
  "msvcrt.LK_NBLCK",
  "msvcrt.LK_UNLCK",
  "msvcrt.locking",
  "multiprocessing.cpu_count",
  "operator.itemgetter",
  "os.SEEK_END",
  "os.chdir",
  "os.chmod",
  "os.close",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.environ.items",
  "os.fdopen",
  "os.getcwd",
  "os.getenv",
  "os.getuid",
  "os.listdir",
  "os.makedirs",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getatime",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.sep",
  "os.path.sep.join",
  "os.path.splitdrive",
  "os.path.splitext",
  "os.pathsep",
  "os.pathsep.join",
  "os.pipe",
  "os.readlink",
  "os.remove",
  "os.rename",
  "os.rmdir",
  "os.sep",
  "os.stat",
  "os.symlink",
  "os.sys.path",
  "os.unlink",
  "os.utime",
  "os.walk",
  "parser",
  "platform.architecture",
  "platform.machine",
  "platform.platform",
  "platform.python_version",
  "platform.system",
  "platform_cls",
  "platformio.VERSION",
  "platformio.__accounts_api__",
  "platformio.__check_internet_hosts__",
  "platformio.__core_packages__",
  "platformio.__core_packages__.items",
  "platformio.__default_requests_timeout__",
  "platformio.__main__.cli",
  "platformio.__main__.configure",
  "platformio.__main__.main",
  "platformio.__pioremote_endpoint__",
  "platformio.__registry_api__",
  "platformio.__version__",
  "platformio.app.DEFAULT_SETTINGS",
  "platformio.app.DEFAULT_SETTINGS.items",
  "platformio.app.SESSION_VARS",
  "platformio.app.State",
  "platformio.app.delete_state_item",
  "platformio.app.get_cid",
  "platformio.app.get_host_id",
  "platformio.app.get_host_name",
  "platformio.app.get_session_var",
  "platformio.app.get_setting",
  "platformio.app.get_state_item",
  "platformio.app.get_user_agent",
  "platformio.app.is_disabled_progressbar",
  "platformio.app.projects_dir_validate",
  "platformio.app.reset_settings",
  "platformio.app.sanitize_setting",
  "platformio.app.set_session_var",
  "platformio.app.set_setting",
  "platformio.app.set_state_item",
  "platformio.builder.main.DEFAULT_ENV_OPTIONS",
  "platformio.builder.main._new_targets",
  "platformio.builder.main.clivars",
  "platformio.builder.main.config",
  "platformio.builder.main.env",
  "platformio.builder.main.projenv",
  "platformio.builder.tools.compilation_db.CompilationDbEntryAction",
  "platformio.builder.tools.compilation_db.ScanCompilationDb",
  "platformio.builder.tools.compilation_db.WriteCompilationDb",
  "platformio.builder.tools.compilation_db.__COMPILATION_DB_ENTRIES",
  "platformio.builder.tools.compilation_db.__CompilationDbNode",
  "platformio.builder.tools.compilation_db.makeEmitCompilationDbEntry",
  "platformio.builder.tools.pioide.DumpIDEData",
  "platformio.builder.tools.pioide._dump_defines",
  "platformio.builder.tools.pioide._dump_includes",
  "platformio.builder.tools.pioide._escape_build_flag",
  "platformio.builder.tools.pioide._get_svd_path",
  "platformio.builder.tools.piolib.ArduinoLibBuilder",
  "platformio.builder.tools.piolib.ConfigureProjectLibBuilder",
  "platformio.builder.tools.piolib.GetLibBuilders",
  "platformio.builder.tools.piolib.GetLibSourceDirs",
  "platformio.builder.tools.piolib.IsCompatibleLibBuilder",
  "platformio.builder.tools.piolib.LibBuilderBase",
  "platformio.builder.tools.piolib.LibBuilderFactory",
  "platformio.builder.tools.piolib.MbedLibBuilder",
  "platformio.builder.tools.piolib.ProjectAsLibBuilder",
  "platformio.builder.tools.piomaxlen.MAX_LINE_LENGTH",
  "platformio.builder.tools.piomaxlen._file_long_data",
  "platformio.builder.tools.piomaxlen.long_incflags_hook",
  "platformio.builder.tools.piomaxlen.long_sources_hook",
  "platformio.builder.tools.piomisc.ConfigureDebugFlags",
  "platformio.builder.tools.piomisc.ConfigureTestTarget",
  "platformio.builder.tools.piomisc.ConvertInoToCpp",
  "platformio.builder.tools.piomisc.GetActualLDScript",
  "platformio.builder.tools.piomisc.GetCompilerType",
  "platformio.builder.tools.piomisc.GetExtraScripts",
  "platformio.builder.tools.piomisc.InoToCPPConverter",
  "platformio.builder.tools.piomisc._get_compiler_type",
  "platformio.builder.tools.pioplatform.BoardConfig",
  "platformio.builder.tools.pioplatform.GetFrameworkScript",
  "platformio.builder.tools.pioplatform.LoadPioPlatform",
  "platformio.builder.tools.pioplatform.PioPlatform",
  "platformio.builder.tools.pioplatform.PrintConfiguration",
  "platformio.builder.tools.pioproject.GetProjectConfig",
  "platformio.builder.tools.pioproject.GetProjectOption",
  "platformio.builder.tools.pioproject.GetProjectOptions",
  "platformio.builder.tools.pioproject.LoadProjectOptions",
  "platformio.builder.tools.piosize.DumpSizeData",
  "platformio.builder.tools.piosize._calculate_firmware_size",
  "platformio.builder.tools.piosize._collect_sections_info",
  "platformio.builder.tools.piosize._collect_symbols_info",
  "platformio.builder.tools.piosize._determine_section",
  "platformio.builder.tools.piosize._get_demangled_names",
  "platformio.builder.tools.piosize._get_symbol_locations",
  "platformio.builder.tools.piosize._is_flash_section",
  "platformio.builder.tools.piosize._is_ram_section",
  "platformio.builder.tools.piosize._is_valid_symbol",
  "platformio.builder.tools.piosize._run_tool",
  "platformio.builder.tools.piotarget.AddCustomTarget",
  "platformio.builder.tools.piotarget.AddPlatformTarget",
  "platformio.builder.tools.piotarget.AddTarget",
  "platformio.builder.tools.piotarget.DumpTargets",
  "platformio.builder.tools.piotarget.PioClean",
  "platformio.builder.tools.piotarget.VerboseAction",
  "platformio.builder.tools.pioupload.AutodetectUploadPort",
  "platformio.builder.tools.pioupload.CheckUploadSize",
  "platformio.builder.tools.pioupload.FlushSerialBuffer",
  "platformio.builder.tools.pioupload.PrintUploadInfo",
  "platformio.builder.tools.pioupload.TouchSerialPort",
  "platformio.builder.tools.pioupload.UploadToDisk",
  "platformio.builder.tools.pioupload.WaitForNewSerialPort",
  "platformio.builder.tools.platformio.AddBuildMiddleware",
  "platformio.builder.tools.platformio.BuildFrameworks",
  "platformio.builder.tools.platformio.BuildLibrary",
  "platformio.builder.tools.platformio.BuildProgram",
  "platformio.builder.tools.platformio.BuildSources",
  "platformio.builder.tools.platformio.CollectBuildFiles",
  "platformio.builder.tools.platformio.GetBuildType",
  "platformio.builder.tools.platformio.MatchSourceFiles",
  "platformio.builder.tools.platformio.ParseFlagsExtended",
  "platformio.builder.tools.platformio.ProcessFlags",
  "platformio.builder.tools.platformio.ProcessProgramDeps",
  "platformio.builder.tools.platformio.ProcessProjectDeps",
  "platformio.builder.tools.platformio.ProcessUnFlags",
  "platformio.builder.tools.platformio.SRC_ASM_EXT",
  "platformio.builder.tools.platformio.SRC_BUILD_EXT",
  "platformio.builder.tools.platformio.SRC_CXX_EXT",
  "platformio.builder.tools.platformio.SRC_C_EXT",
  "platformio.builder.tools.platformio.SRC_FILTER_DEFAULT",
  "platformio.builder.tools.platformio.SRC_HEADER_EXT",
  "platformio.builder.tools.platformio.scons_patched_match_splitext",
  "platformio.cache.ContentCache",
  "platformio.cache.ContentCache.key_from_args",
  "platformio.cache.cleanup_content_cache",
  "platformio.clients.account.AccountAlreadyAuthorized",
  "platformio.clients.account.AccountClient",
  "platformio.clients.account.AccountClient.delete_local_session",
  "platformio.clients.account.AccountError",
  "platformio.clients.account.AccountNotAuthorized",
  "platformio.clients.http.EndpointSession",
  "platformio.clients.http.EndpointSessionIterator",
  "platformio.clients.http.HTTPClient",
  "platformio.clients.http.HTTPClientError",
  "platformio.clients.http.InternetIsOffline",
  "platformio.clients.http._internet_on",
  "platformio.clients.http.ensure_internet_on",
  "platformio.clients.http.fetch_remote_content",
  "platformio.clients.registry.RegistryClient",
  "platformio.commands.PlatformioCLI",
  "platformio.commands.PlatformioCLI.in_silence",
  "platformio.commands.PlatformioCLI.leftover_args",
  "platformio.commands.access.cli",
  "platformio.commands.access.validate_client",
  "platformio.commands.access.validate_urn",
  "platformio.commands.account.cli",
  "platformio.commands.account.print_packages",
  "platformio.commands.account.print_profile",
  "platformio.commands.account.print_subscriptions",
  "platformio.commands.account.validate_email",
  "platformio.commands.account.validate_password",
  "platformio.commands.account.validate_username",
  "platformio.commands.boards._get_boards",
  "platformio.commands.boards._print_boards_json",
  "platformio.commands.boards.print_boards",
  "platformio.commands.check.command.collect_component_stats",
  "platformio.commands.check.command.print_check_summary",
  "platformio.commands.check.command.print_defects_stats",
  "platformio.commands.check.command.print_processing_footer",
  "platformio.commands.check.command.print_processing_header",
  "platformio.commands.check.command.results_to_json",
  "platformio.commands.check.defect.DefectItem",
  "platformio.commands.check.defect.DefectItem.SEVERITY_HIGH",
  "platformio.commands.check.defect.DefectItem.SEVERITY_LABELS",
  "platformio.commands.check.defect.DefectItem.SEVERITY_LABELS.values",
  "platformio.commands.check.defect.DefectItem.SEVERITY_LOW",
  "platformio.commands.check.defect.DefectItem.SEVERITY_MEDIUM",
  "platformio.commands.check.defect.DefectItem.severity_to_int",
  "platformio.commands.check.tools.CheckToolFactory.new",
  "platformio.commands.check.tools.base.CheckToolBase",
  "platformio.commands.check.tools.clangtidy.ClangtidyCheckTool",
  "platformio.commands.check.tools.cppcheck.CppcheckCheckTool",
  "platformio.commands.check.tools.pvsstudio.PvsStudioCheckTool",
  "platformio.commands.ci._copy_contents",
  "platformio.commands.ci._copy_project_conf",
  "platformio.commands.ci._exclude_contents",
  "platformio.commands.ci.validate_path",
  "platformio.commands.debug.exception.DebugError",
  "platformio.commands.debug.exception.DebugInvalidOptionsError",
  "platformio.commands.debug.exception.DebugSupportError",
  "platformio.commands.debug.helpers.GDBMIConsoleStream",
  "platformio.commands.debug.helpers.configure_esp32_load_cmds",
  "platformio.commands.debug.helpers.configure_initial_debug_options",
  "platformio.commands.debug.helpers.escape_gdbmi_stream",
  "platformio.commands.debug.helpers.get_default_debug_env",
  "platformio.commands.debug.helpers.has_debug_symbols",
  "platformio.commands.debug.helpers.is_gdbmi_mode",
  "platformio.commands.debug.helpers.is_prog_obsolete",
  "platformio.commands.debug.helpers.predebug_project",
  "platformio.commands.debug.helpers.reveal_debug_port",
  "platformio.commands.debug.initcfgs.GDB_BLACKMAGIC_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_DEFAULT_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_JLINK_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_MSPDEBUG_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_QEMU_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_RENODE_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.GDB_STUTIL_INIT_CONFIG",
  "platformio.commands.debug.initcfgs.TOOL_TO_CONFIG",
  "platformio.commands.debug.initcfgs.get_gdb_init_config",
  "platformio.commands.debug.process.base.BaseProcess",
  "platformio.commands.debug.process.client.GDBClient",
  "platformio.commands.debug.process.client.reactor.run",
  "platformio.commands.debug.process.server.DebugServer",
  "platformio.commands.device.DeviceMonitorFilter",
  "platformio.commands.device.command.cli",
  "platformio.commands.device.command.device_monitor",
  "platformio.commands.device.filters.hexlify.Hexlify",
  "platformio.commands.device.filters.log2file.LogToFile",
  "platformio.commands.device.filters.send_on_enter.SendOnEnter",
  "platformio.commands.device.filters.time.Timestamp",
  "platformio.commands.device.helpers.apply_project_monitor_options",
  "platformio.commands.device.helpers.get_board_hwids",
  "platformio.commands.device.helpers.get_project_options",
  "platformio.commands.device.helpers.load_monitor_filter",
  "platformio.commands.device.helpers.options_to_argv",
  "platformio.commands.device.helpers.register_platform_filters",
  "platformio.commands.home.command.is_port_used",
  "platformio.commands.home.helpers.AsyncSession",
  "platformio.commands.home.helpers.get_core_fullpath",
  "platformio.commands.home.helpers.requests_session",
  "platformio.commands.home.rpc.handlers.account.AccountRPC",
  "platformio.commands.home.rpc.handlers.app.AppRPC",
  "platformio.commands.home.rpc.handlers.app.AppRPC.load_state",
  "platformio.commands.home.rpc.handlers.ide.IDERPC",
  "platformio.commands.home.rpc.handlers.misc.MiscRPC",
  "platformio.commands.home.rpc.handlers.os.OSRPC",
  "platformio.commands.home.rpc.handlers.os.OSRPC.fetch_content",
  "platformio.commands.home.rpc.handlers.piocore.MultiThreadingStdStream",
  "platformio.commands.home.rpc.handlers.piocore.PIOCoreRPC",
  "platformio.commands.home.rpc.handlers.piocore.PIOCoreRPC.call",
  "platformio.commands.home.rpc.handlers.project.ProjectRPC",
  "platformio.commands.home.rpc.server.JSONRPCServerFactory",
  "platformio.commands.home.rpc.server.JSONRPCServerProtocol",
  "platformio.commands.home.web.WebRoot",
  "platformio.commands.lib.command.CTX_META_INPUT_DIRS_KEY",
  "platformio.commands.lib.command.CTX_META_PROJECT_ENVIRONMENTS_KEY",
  "platformio.commands.lib.command.CTX_META_STORAGE_DIRS_KEY",
  "platformio.commands.lib.command.CTX_META_STORAGE_LIBDEPS_KEY",
  "platformio.commands.lib.command._save_deps",
  "platformio.commands.lib.command.cli",
  "platformio.commands.lib.command.get_project_global_lib_dir",
  "platformio.commands.lib.command.lib_update",
  "platformio.commands.lib.command.print_lib_item",
  "platformio.commands.lib.command.print_storage_header",
  "platformio.commands.lib.helpers.get_builtin_libs",
  "platformio.commands.lib.helpers.ignore_deps_by_specs",
  "platformio.commands.lib.helpers.is_builtin_lib",
  "platformio.commands.lib.helpers.save_project_libdeps",
  "platformio.commands.org.cli",
  "platformio.commands.org.validate_orgname",
  "platformio.commands.package.cli",
  "platformio.commands.package.validate_datetime",
  "platformio.commands.platform._get_installed_platform_data",
  "platformio.commands.platform._get_platform_data",
  "platformio.commands.platform._get_registry_platform_data",
  "platformio.commands.platform._get_registry_platforms",
  "platformio.commands.platform._print_platforms",
  "platformio.commands.platform.cli",
  "platformio.commands.platform.platform_install",
  "platformio.commands.platform.platform_update",
  "platformio.commands.project._install_dependent_platforms",
  "platformio.commands.project.cli",
  "platformio.commands.project.get_best_envname",
  "platformio.commands.project.init_base_project",
  "platformio.commands.project.init_cvs_ignore",
  "platformio.commands.project.project_init",
  "platformio.commands.project.update_board_envs",
  "platformio.commands.project.update_project_env",
  "platformio.commands.project.validate_boards",
  "platformio.commands.remote.ac.base.AsyncCommandBase",
  "platformio.commands.remote.ac.process.ProcessAsyncCmd",
  "platformio.commands.remote.ac.psync.ProjectSyncAsyncCmd",
  "platformio.commands.remote.ac.serial.SerialPortAsyncCmd",
  "platformio.commands.remote.client.agent_list.AgentListClient",
  "platformio.commands.remote.client.agent_service.RemoteAgentService",
  "platformio.commands.remote.client.async_base.AsyncClientBase",
  "platformio.commands.remote.client.async_base.AsyncClientBase.__init__",
  "platformio.commands.remote.client.base.RemoteClientBase",
  "platformio.commands.remote.client.base.RemoteClientBase.__init__",
  "platformio.commands.remote.client.base.RemoteClientBase.cb_disconnected",
  "platformio.commands.remote.client.device_list.DeviceListClient",
  "platformio.commands.remote.client.device_monitor.DeviceMonitorClient",
  "platformio.commands.remote.client.device_monitor.SMBridgeFactory",
  "platformio.commands.remote.client.device_monitor.SMBridgeProtocol",
  "platformio.commands.remote.client.run_or_test.RunOrTestClient",
  "platformio.commands.remote.client.update_core.UpdateCoreClient",
  "platformio.commands.remote.command.remote_agent",
  "platformio.commands.remote.command.remote_device",
  "platformio.commands.remote.factory.client.RemoteClientFactory",
  "platformio.commands.remote.factory.ssl.SSLContextFactory",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.COMPLETED.value",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.DBINDEX",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.DBINDEX.value",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.DELETE",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.DELETE.value",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.EXTRACTED",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.EXTRACTED.value",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.UPLOAD",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.UPLOAD.value",
  "platformio.commands.remote.projectsync.PROJECT_SYNC_STAGE.lookupByValue",
  "platformio.commands.remote.projectsync.ProjectSync",
  "platformio.commands.run.command.DEFAULT_JOB_NUMS",
  "platformio.commands.run.command.cli",
  "platformio.commands.run.command.print_processing_footer",
  "platformio.commands.run.command.print_processing_header",
  "platformio.commands.run.command.print_processing_summary",
  "platformio.commands.run.command.print_target_list",
  "platformio.commands.run.command.process_env",
  "platformio.commands.run.helpers.clean_build_dir",
  "platformio.commands.run.helpers.handle_legacy_libdeps",
  "platformio.commands.run.processor.EnvironmentProcessor",
  "platformio.commands.settings.cli",
  "platformio.commands.settings.format_value",
  "platformio.commands.settings.settings_get",
  "platformio.commands.system.command.cli",
  "platformio.commands.system.command.completion",
  "platformio.commands.system.completion.get_completion_install_path",
  "platformio.commands.system.completion.install_completion_code",
  "platformio.commands.system.completion.is_completion_code_installed",
  "platformio.commands.system.completion.uninstall_completion_code",
  "platformio.commands.team.cli",
  "platformio.commands.team.validate_orgname_teamname",
  "platformio.commands.team.validate_teamname",
  "platformio.commands.test.command.cli",
  "platformio.commands.test.command.cli.command",
  "platformio.commands.test.command.cli.group",
  "platformio.commands.test.command.get_test_names",
  "platformio.commands.test.command.print_processing_footer",
  "platformio.commands.test.command.print_processing_header",
  "platformio.commands.test.command.print_testing_summary",
  "platformio.commands.test.embedded.EmbeddedTestProcessor",
  "platformio.commands.test.native.NativeTestProcessor",
  "platformio.commands.test.processor.CTX_META_TEST_IS_RUNNING",
  "platformio.commands.test.processor.CTX_META_TEST_RUNNING_NAME",
  "platformio.commands.test.processor.TRANSPORT_OPTIONS",
  "platformio.commands.test.processor.TestProcessorBase",
  "platformio.commands.upgrade.get_develop_latest_version",
  "platformio.commands.upgrade.get_latest_version",
  "platformio.commands.upgrade.get_pip_package",
  "platformio.commands.upgrade.get_pypi_latest_version",
  "platformio.compat.CYGWIN",
  "platformio.compat.MACOS",
  "platformio.compat.PY2",
  "platformio.compat.WINDOWS",
  "platformio.compat.ci_strings_are_equal",
  "platformio.compat.dump_json_to_unicode",
  "platformio.compat.ensure_python3",
  "platformio.compat.get_filesystem_encoding",
  "platformio.compat.get_locale_encoding",
  "platformio.compat.get_object_members",
  "platformio.compat.glob_escape",
  "platformio.compat.glob_recursive",
  "platformio.compat.hashlib_encode_data",
  "platformio.compat.is_bytes",
  "platformio.compat.load_python_module",
  "platformio.compat.string_types",
  "platformio.exception.AbortedByUser",
  "platformio.exception.CIBuildEnvsEmpty",
  "platformio.exception.CygwinEnvDetected",
  "platformio.exception.GetLatestVersionError",
  "platformio.exception.GetSerialPortsError",
  "platformio.exception.HomeDirPermissionsError",
  "platformio.exception.InvalidJSONFile",
  "platformio.exception.InvalidSettingName",
  "platformio.exception.InvalidSettingValue",
  "platformio.exception.InvalidUdevRules",
  "platformio.exception.MinitermException",
  "platformio.exception.MissedUdevRules",
  "platformio.exception.OutdatedUdevRules",
  "platformio.exception.PlatformioException",
  "platformio.exception.ReturnErrorCode",
  "platformio.exception.TestDirNotExists",
  "platformio.exception.UpgradeError",
  "platformio.exception.UserSideException",
  "platformio.fs.calculate_file_hashsum",
  "platformio.fs.calculate_folder_size",
  "platformio.fs.cd",
  "platformio.fs.change_filemtime",
  "platformio.fs.ensure_udev_rules",
  "platformio.fs.expanduser",
  "platformio.fs.get_source_dir",
  "platformio.fs.humanize_file_size",
  "platformio.fs.load_json",
  "platformio.fs.match_src_files",
  "platformio.fs.path_endswith_ext",
  "platformio.fs.rmtree",
  "platformio.fs.to_unix_path",
  "platformio.ide.projectgenerator.ProjectGenerator",
  "platformio.ide.projectgenerator.ProjectGenerator.get_supported_ides",
  "platformio.maintenance.Upgrader",
  "platformio.maintenance.after_upgrade",
  "platformio.maintenance.check_internal_updates",
  "platformio.maintenance.check_platformio_upgrade",
  "platformio.maintenance.on_platformio_end",
  "platformio.maintenance.on_platformio_exception",
  "platformio.maintenance.on_platformio_start",
  "platformio.maintenance.set_caller",
  "platformio.package.download.FileDownloader",
  "platformio.package.exception.ManifestException",
  "platformio.package.exception.ManifestParserError",
  "platformio.package.exception.ManifestValidationError",
  "platformio.package.exception.MissingPackageManifestError",
  "platformio.package.exception.NotGlobalLibDir",
  "platformio.package.exception.PackageException",
  "platformio.package.exception.PlatformioException",
  "platformio.package.exception.UnknownManifestError",
  "platformio.package.exception.UnknownPackageError",
  "platformio.package.exception.UserSideException",
  "platformio.package.lockfile.LOCKFILE_CURRENT_INTERFACE",
  "platformio.package.lockfile.LOCKFILE_DELAY",
  "platformio.package.lockfile.LOCKFILE_INTERFACE_FCNTL",
  "platformio.package.lockfile.LOCKFILE_INTERFACE_MSVCRT",
  "platformio.package.lockfile.LOCKFILE_TIMEOUT",
  "platformio.package.lockfile.LockFile",
  "platformio.package.lockfile.LockFileExists",
  "platformio.package.lockfile.LockFileTimeoutError",
  "platformio.package.manager._download.PackageManagerDownloadMixin",
  "platformio.package.manager._install.PackageManagerInstallMixin",
  "platformio.package.manager._legacy.PackageManagerLegacyMixin",
  "platformio.package.manager._registry.PackageManageRegistryMixin",
  "platformio.package.manager._registry.RegistryFileMirrorIterator",
  "platformio.package.manager._uninstall.PackageManagerUninstallMixin",
  "platformio.package.manager._update.PackageManagerUpdateMixin",
  "platformio.package.manager.base.BasePackageManager",
  "platformio.package.manager.core._remove_unnecessary_packages",
  "platformio.package.manager.core.build_contrib_pysite_package",
  "platformio.package.manager.core.get_contrib_pysite_deps",
  "platformio.package.manager.core.get_core_package_dir",
  "platformio.package.manager.core.inject_contrib_pysite",
  "platformio.package.manager.core.update_core_packages",
  "platformio.package.manager.library.LibraryPackageManager",
  "platformio.package.manager.platform.PlatformPackageManager",
  "platformio.package.manager.tool.ToolPackageManager",
  "platformio.package.manifest.parser.BaseManifestParser",
  "platformio.package.manifest.parser.ManifestFileType",
  "platformio.package.manifest.parser.ManifestFileType.LIBRARY_JSON",
  "platformio.package.manifest.parser.ManifestFileType.LIBRARY_PROPERTIES",
  "platformio.package.manifest.parser.ManifestFileType.MODULE_JSON",
  "platformio.package.manifest.parser.ManifestFileType.PACKAGE_JSON",
  "platformio.package.manifest.parser.ManifestFileType.PLATFORM_JSON",
  "platformio.package.manifest.parser.ManifestFileType.from_dir",
  "platformio.package.manifest.parser.ManifestFileType.items",
  "platformio.package.manifest.parser.ManifestParserError",
  "platformio.package.manifest.parser.ManifestParserFactory",
  "platformio.package.manifest.parser.ManifestParserFactory.new_from_dir",
  "platformio.package.manifest.parser.ManifestParserFactory.new_from_file",
  "platformio.package.manifest.parser.ManifestParserFactory.new_from_url",
  "platformio.package.manifest.schema.AuthorSchema",
  "platformio.package.manifest.schema.BaseSchema",
  "platformio.package.manifest.schema.CompatSchema",
  "platformio.package.manifest.schema.DependencySchema",
  "platformio.package.manifest.schema.ExampleSchema",
  "platformio.package.manifest.schema.ExportSchema",
  "platformio.package.manifest.schema.MARSHMALLOW_2",
  "platformio.package.manifest.schema.ManifestSchema",
  "platformio.package.manifest.schema.RepositorySchema",
  "platformio.package.manifest.schema.StrictListField",
  "platformio.package.manifest.schema.StrictSchema",
  "platformio.package.meta.PackageItem",
  "platformio.package.meta.PackageItem.METAFILE_NAME",
  "platformio.package.meta.PackageMetaData",
  "platformio.package.meta.PackageOutdatedResult",
  "platformio.package.meta.PackageSpec",
  "platformio.package.meta.PackageType.LIBRARY",
  "platformio.package.meta.PackageType.PLATFORM",
  "platformio.package.meta.PackageType.TOOL",
  "platformio.package.meta.PackageType.from_archive",
  "platformio.package.meta.PackageType.get_manifest_map",
  "platformio.package.meta.PackageType.items",
  "platformio.package.pack.PackagePacker",
  "platformio.package.unpack.BaseArchiver",
  "platformio.package.unpack.ExtractArchiveItemError",
  "platformio.package.unpack.FileUnpacker",
  "platformio.package.unpack.FileUnpacker.new_archiver",
  "platformio.package.unpack.TARArchiver",
  "platformio.package.unpack.ZIPArchiver",
  "platformio.package.vcsclient.GitClient",
  "platformio.package.vcsclient.VCSBaseException",
  "platformio.package.vcsclient.VCSClientBase",
  "platformio.package.vcsclient.VCSClientFactory.new",
  "platformio.package.version.cast_version_to_semver",
  "platformio.package.version.get_original_version",
  "platformio.package.version.pepver_to_semver",
  "platformio.platform._packages.PlatformPackagesMixin",
  "platformio.platform._run.PlatformRunMixin",
  "platformio.platform.base.PlatformBase",
  "platformio.platform.base.PlatformBase.decode_scons_arg",
  "platformio.platform.board.PlatformBoardConfig",
  "platformio.platform.exception.BuildScriptNotFound",
  "platformio.platform.exception.IncompatiblePlatform",
  "platformio.platform.exception.InvalidBoardManifest",
  "platformio.platform.exception.PlatformException",
  "platformio.platform.exception.UnknownBoard",
  "platformio.platform.exception.UnknownPlatform",
  "platformio.platform.factory.PlatformFactory.new",
  "platformio.proc.AsyncPipeBase",
  "platformio.proc.BuildAsyncPipe",
  "platformio.proc.LineBufferedAsyncPipe",
  "platformio.proc.WINDOWS",
  "platformio.proc.append_env_path",
  "platformio.proc.capture_std_streams",
  "platformio.proc.copy_pythonpath_to_osenv",
  "platformio.proc.exec_command",
  "platformio.proc.get_pythonexe_path",
  "platformio.proc.is_ci",
  "platformio.proc.is_container",
  "platformio.proc.where_is_program",
  "platformio.project.config.CONFIG_HEADER",
  "platformio.project.config.MISSING",
  "platformio.project.config.ProjectConfig",
  "platformio.project.config.ProjectConfig.get_instance",
  "platformio.project.config.ProjectConfig.parse_multi_values",
  "platformio.project.config.ProjectConfigBase",
  "platformio.project.config.ProjectConfigDirsMixin",
  "platformio.project.config.ProjectOptions.get",
  "platformio.project.config.ProjectOptions.values",
  "platformio.project.exception.InvalidProjectConfError",
  "platformio.project.exception.NotPlatformIOProjectError",
  "platformio.project.exception.ProjectEnvsNotAvailableError",
  "platformio.project.exception.ProjectError",
  "platformio.project.exception.ProjectOptionValueError",
  "platformio.project.exception.UndefinedEnvPlatformError",
  "platformio.project.exception.UnknownEnvNamesError",
  "platformio.project.helpers.compute_project_checksum",
  "platformio.project.helpers.find_project_dir_above",
  "platformio.project.helpers.get_default_projects_dir",
  "platformio.project.helpers.get_project_cache_dir",
  "platformio.project.helpers.get_project_core_dir",
  "platformio.project.helpers.get_project_dir",
  "platformio.project.helpers.get_project_global_lib_dir",
  "platformio.project.helpers.is_platformio_project",
  "platformio.project.helpers.load_project_ide_data",
  "platformio.project.options.ConfigEnvOption",
  "platformio.project.options.ConfigOption",
  "platformio.project.options.ConfigPlatformioOption",
  "platformio.project.options.ProjectOptions",
  "platformio.project.options.ProjectOptions.default",
  "platformio.project.options.ProjectOptions.get",
  "platformio.project.options.ProjectOptions.type.choices",
  "platformio.project.options.ProjectOptions.values",
  "platformio.project.options.get_config_options_schema",
  "platformio.telemetry.MPDataPusher",
  "platformio.telemetry.MeasurementProtocol",
  "platformio.telemetry.TelemetryBase",
  "platformio.telemetry.backup_reports",
  "platformio.telemetry.dump_run_environment",
  "platformio.telemetry.measure_ci",
  "platformio.telemetry.on_command",
  "platformio.telemetry.on_exception",
  "platformio.telemetry.resend_backuped_reports",
  "platformio.telemetry.send_event",
  "platformio.telemetry.send_exception",
  "platformio.telemetry.send_run_environment",
  "platformio.util.get_logical_devices",
  "platformio.util.get_mdns_services",
  "platformio.util.get_serial_ports",
  "platformio.util.get_serialports",
  "platformio.util.get_systype",
  "platformio.util.humanize_duration_time",
  "platformio.util.items_in_list",
  "platformio.util.items_to_list",
  "platformio.util.memoized",
  "platformio.util.merge_dicts",
  "platformio.util.parse_date",
  "platformio.util.print_labeled_bar",
  "platformio.util.singleton",
  "platformio.util.throttle",
  "re.I",
  "re.M",
  "re.MULTILINE",
  "re.X",
  "re.compile",
  "re.findall",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "requests.Session",
  "requests.exceptions.HTTPError",
  "requests.exceptions.RequestException",
  "requests.get",
  "requests.packages.urllib3.util.retry.Retry",
  "scripts.docspregen.API_FRAMEWORKS",
  "scripts.docspregen.API_PACKAGES",
  "scripts.docspregen.BOARDS",
  "scripts.docspregen.DOCS_ROOT_DIR",
  "scripts.docspregen.PLATFORM_MANIFESTS",
  "scripts.docspregen.RST_COPYRIGHT",
  "scripts.docspregen.campaign_url",
  "scripts.docspregen.generate_boards_table",
  "scripts.docspregen.generate_debug_contents",
  "scripts.docspregen.generate_framework",
  "scripts.docspregen.generate_frameworks_contents",
  "scripts.docspregen.generate_packages",
  "scripts.docspregen.generate_platform",
  "scripts.docspregen.generate_platforms_contents",
  "scripts.docspregen.is_compat_platform_and_framework",
  "scripts.docspregen.main",
  "scripts.docspregen.update_boards",
  "scripts.docspregen.update_debugging",
  "scripts.docspregen.update_embedded_board",
  "scripts.docspregen.update_framework_docs",
  "scripts.docspregen.update_platform_docs",
  "scripts.docspregen.update_project_examples",
  "scripts.fixsymlink.fix_symlink",
  "scripts.fixsymlink.main",
  "scripts.get-platformio.MAIN_SCRIPT_URL",
  "scripts.get-platformio.download_file",
  "scripts.get-platformio.download_with_curl",
  "scripts.get-platformio.download_with_requests",
  "scripts.get-platformio.download_with_urllib",
  "scripts.get-platformio.download_with_urllib3",
  "scripts.get-platformio.download_with_wget",
  "scripts.get-platformio.main",
  "scripts.install_devplatforms.main",
  "semantic_version.SimpleSpec",
  "semantic_version.Version",
  "semantic_version.Version.coerce",
  "serial.Serial",
  "serial.SerialException",
  "serial.iterbytes",
  "serial.tools.list_ports.comports",
  "serial.tools.miniterm.TRANSFORMATIONS",
  "serial.tools.miniterm.TRANSFORMATIONS.keys",
  "serial.tools.miniterm.Transform",
  "serial.tools.miniterm.Transform.__init__",
  "serial.tools.miniterm.main",
  "shutil.copyfile",
  "shutil.copytree",
  "shutil.move",
  "shutil.rmtree",
  "signal.SIGINT",
  "signal.default_int_handler",
  "signal.signal",
  "site.addsitedir",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.error",
  "socket.gethostname",
  "socket.setdefaulttimeout",
  "socket.socket",
  "stat.S_IREAD",
  "stat.S_IWRITE",
  "string.Template",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
  "sys.argv",
  "sys.executable",
  "sys.exit",
  "sys.getdefaultencoding",
  "sys.getfilesystemencoding",
  "sys.modules",
  "sys.path",
  "sys.path.append",
  "sys.path.insert",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdout",
  "sys.stdout.write",
  "sys.version_info",
  "sys.version_info.major",
  "sys.version_info.minor",
  "tabulate.tabulate",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile._get_candidate_names",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "threading.Thread",
  "threading.get_ident",
  "time.mktime",
  "time.sleep",
  "time.strftime",
  "time.strptime",
  "time.time",
  "traceback.format_exc",
  "twisted.cred.credentials.UsernamePassword",
  "twisted.internet.defer.CancelledError",
  "twisted.internet.defer.Deferred",
  "twisted.internet.defer.ensureDeferred",
  "twisted.internet.defer.inlineCallbacks",
  "twisted.internet.defer.maybeDeferred",
  "twisted.internet.defer.returnValue",
  "twisted.internet.endpoints._parse",
  "twisted.internet.error.CannotListenError",
  "twisted.internet.protocol.ProcessProtocol",
  "twisted.internet.protocol.Protocol",
  "twisted.internet.protocol.ReconnectingClientFactory",
  "twisted.internet.protocol.ReconnectingClientFactory.clientConnectionFailed",
  "twisted.internet.protocol.ReconnectingClientFactory.clientConnectionLost",
  "twisted.internet.protocol.ReconnectingClientFactory.resetDelay",
  "twisted.internet.protocol.ServerFactory",
  "twisted.internet.reactor",
  "twisted.internet.reactor.callLater",
  "twisted.internet.reactor.connectSSL",
  "twisted.internet.reactor.connectTCP",
  "twisted.internet.reactor.getThreadPool",
  "twisted.internet.reactor.listenTCP",
  "twisted.internet.reactor.run",
  "twisted.internet.reactor.running",
  "twisted.internet.reactor.spawnProcess",
  "twisted.internet.reactor.stop",
  "twisted.internet.serialport.SerialPort",
  "twisted.internet.ssl.ClientContextFactory",
  "twisted.internet.stdio.StandardIO",
  "twisted.internet.task.LoopingCall",
  "twisted.internet.task.deferLater",
  "twisted.internet.threads.deferToThread",
  "twisted.internet.utils.getProcessOutputAndValue",
  "twisted.logger.ILogObserver",
  "twisted.logger.LogLevel.info",
  "twisted.logger.LogLevel.warn",
  "twisted.logger.Logger",
  "twisted.logger.formatEvent",
  "twisted.python.constants.FlagConstant",
  "twisted.python.constants.Flags",
  "twisted.python.failure.Failure",
  "twisted.spread.pb.DeadReferenceError",
  "twisted.spread.pb.Error",
  "twisted.spread.pb.PBClientFactory",
  "twisted.spread.pb.PBClientFactory.clientConnectionLost",
  "twisted.spread.pb.PBClientFactory.clientConnectionMade",
  "twisted.spread.pb.PBConnectionLost",
  "twisted.spread.pb.Referenceable",
  "twisted.web.server.Site",
  "twisted.web.static.File",
  "twisted.web.static.File.render_GET",
  "unicode",
  "urllib.parse.ParseResult",
  "urllib.parse.urlparse",
  "urllib.parse.urlunparse",
  "urllib.quote",
  "urllib.urlopen",
  "urllib3.PoolManager",
  "urllib3.disable_warnings",
  "urlparse.urljoin",
  "urlparse.urlparse",
  "uuid.UUID",
  "uuid.getnode",
  "xml.etree.ElementTree.fromstring",
  "zeroconf.BadTypeInNameException",
  "zeroconf.InterfaceChoice.All",
  "zeroconf.ServiceBrowser",
  "zeroconf.Zeroconf",
  "zeroconf.service_type_name",
  "zipfile.ZipFile",
  "zlib.compress",
  "zlib.decompress",
  "zope.interface.provider"
 ],
 "deps": {
  "OpenSSL": [],
  "Queue": [],
  "SCons": [],
  "_add_file": [],
  "_already_depends": [],
  "_append_board": [],
  "_append_build_item": [],
  "_append_defect": [],
  "_append_pio_macros": [],
  "_calculate_size": [],
  "_cleanup_cmds": [],
  "_cleanup_debug_flags": [],
  "_cleanup_dir": [],
  "_configure_defaults": [],
  "_correct_found_libs": [],
  "_extract_defines": [],
  "_extract_filepath": [],
  "_first_arg_from_list": [],
  "_format_availale_bytes": [],
  "_get_configuration_data": [],
  "_get_debug_data": [],
  "_get_hardware_data": [],
  "_get_packages_data": [],
  "_get_pattern": [],
  "_get_plaform_data": [],
  "_get_project_data": [],
  "_get_size_output": [],
  "_is_builtin": [],
  "_is_match_pattern": [],
  "_look_for_mbed_disk": [],
  "_look_for_serial_port": [],
  "_lookup_in_ldpath": [],
  "_path_to_name": [],
  "_print_deps_tree": [],
  "_relpath": [],
  "_replace": [],
  "_rules_to_set": [],
  "_safe_echo": [],
  "_search_include_dir": [],
  "_write_and_flush": [],
  "archiver": [],
  "atexit": [],
  "autobahn": [],
  "base64": [],
  "binascii": [],
  "bottle": [],
  "callback": [],
  "cb": [],
  "cb_filter": [],
  "certifi": [],
  "click": [],
  "click_completion": [],
  "cls": [],
  "codecs": [],
  "collections": [],
  "configparser": [],
  "contextlib": [],
  "datetime": [],
  "delete_tmptest_files": [],
  "elftools": [],
  "email": [],
  "fcntl": [],
  "fnmatch": [],
  "func": [],
  "functools": [],
  "getpass": [],
  "glob": [],
  "hashlib": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "jsonrpc": [],
  "locale": [],
  "mDNSListener": [],
  "marshmallow": [],
  "math": [],
  "method": [],
  "mimetypes": [],
  "msvcrt": [],
  "multiprocessing": [],
  "operator": [],
  "os": [],
  "parser": [],
  "platform": [],
  "platform_cls": [],
  "platformio": [],
  "re": [],
  "requests": [],
  "scripts": [],
  "semantic_version": [],
  "serial": [],
  "shutil": [],
  "signal": [],
  "site": [],
  "socket": [],
  "stat": [],
  "string": [],
  "subprocess": [],
  "sys": [],
  "tabulate": [],
  "tarfile": [],
  "tempfile": [],
  "threading": [],
  "time": [],
  "traceback": [],
  "twisted": [],
  "unicode": [],
  "urllib": [],
  "urllib3": [],
  "urlparse": [],
  "uuid": [],
  "xml": [],
  "zeroconf": [],
  "zipfile": [],
  "zlib": [],
  "zope": []
 }
}