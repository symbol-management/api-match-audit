{
 "bad": [
  "CreateArticle",
  "CreateArticle.Field",
  "CustomOptions",
  "connection_field_factory",
  "converter",
  "converter.convert_sqlalchemy_column",
  "converter.convert_sqlalchemy_composite",
  "converter.convert_sqlalchemy_composite.register",
  "converter.convert_sqlalchemy_hybrid_method",
  "converter.convert_sqlalchemy_relationship",
  "enums._convert_sa_to_graphene_enum",
  "enums.enum_for_field",
  "enums.enum_for_sa_enum",
  "enums.sort_argument_for_object_type",
  "enums.sort_enum_for_object_type",
  "fields.SQLAlchemyConnectionField",
  "fields.SQLAlchemyConnectionField.connection_resolver",
  "fields.UnsortedSQLAlchemyConnectionField",
  "fields.createConnectionField",
  "fields.default_connection_field_factory",
  "fields.registerConnectionFieldFactory",
  "fields.unregisterConnectionFieldFactory",
  "get_name",
  "graphene.Enum.from_enum",
  "graphene.relay.Node.Field",
  "makeNodes",
  "mock.Mock",
  "models.Article",
  "models.Article.reporter.property",
  "models.Base",
  "models.Base.metadata.create_all",
  "models.CompositeFullName",
  "models.Editor",
  "models.Editor.sort_argument",
  "models.HairKind",
  "models.HairKind.LONG",
  "models.HairKind.SHORT",
  "models.Pet",
  "models.Pet.hair_kind",
  "models.Pet.id",
  "models.Pet.id.name",
  "models.Pet.name",
  "models.Pet.pet_kind",
  "models.Pet.sort_argument",
  "models.ReflectedEditor",
  "models.Reporter",
  "models.Reporter.favorite_article.property",
  "models.Reporter.pets.property",
  "on_resolve",
  "promise.Promise.resolve",
  "pytest.fixture",
  "pytest.raises",
  "pytest.warns",
  "pytest.yield_fixture",
  "registry.Registry",
  "registry.get_global_registry",
  "registry.reset_global_registry",
  "sqlalchemy.Column",
  "sqlalchemy.Date",
  "sqlalchemy.Enum",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.String",
  "sqlalchemy.Table",
  "sqlalchemy.create_engine",
  "sqlalchemy.dialects.postgresql.ARRAY",
  "sqlalchemy.dialects.postgresql.CIDR",
  "sqlalchemy.dialects.postgresql.ENUM",
  "sqlalchemy.dialects.postgresql.HSTORE",
  "sqlalchemy.dialects.postgresql.INET",
  "sqlalchemy.dialects.postgresql.JSON",
  "sqlalchemy.dialects.postgresql.JSONB",
  "sqlalchemy.dialects.postgresql.UUID",
  "sqlalchemy.exc.ArgumentError",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.ext.hybrid.hybrid_property",
  "sqlalchemy.func.cast",
  "sqlalchemy.func.count",
  "sqlalchemy.func.sum",
  "sqlalchemy.inspect",
  "sqlalchemy.inspection.inspect",
  "sqlalchemy.orm.ColumnProperty",
  "sqlalchemy.orm.CompositeProperty",
  "sqlalchemy.orm.RelationshipProperty",
  "sqlalchemy.orm.class_mapper",
  "sqlalchemy.orm.column_property",
  "sqlalchemy.orm.composite",
  "sqlalchemy.orm.composite.doc",
  "sqlalchemy.orm.exc.NoResultFound",
  "sqlalchemy.orm.exc.UnmappedClassError",
  "sqlalchemy.orm.exc.UnmappedInstanceError",
  "sqlalchemy.orm.interfaces.MANYTOMANY",
  "sqlalchemy.orm.interfaces.MANYTOONE",
  "sqlalchemy.orm.interfaces.ONETOMANY",
  "sqlalchemy.orm.mapper",
  "sqlalchemy.orm.object_mapper",
  "sqlalchemy.orm.query.Query",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.scoped_session",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.select",
  "sqlalchemy.types.BigInteger",
  "sqlalchemy.types.Binary",
  "sqlalchemy.types.Boolean",
  "sqlalchemy.types.Date",
  "sqlalchemy.types.DateTime",
  "sqlalchemy.types.Enum",
  "sqlalchemy.types.Float",
  "sqlalchemy.types.Integer",
  "sqlalchemy.types.Numeric",
  "sqlalchemy.types.SmallInteger",
  "sqlalchemy.types.String",
  "sqlalchemy.types.Text",
  "sqlalchemy.types.Time",
  "sqlalchemy.types.Unicode",
  "sqlalchemy.types.UnicodeText",
  "test_query.add_test_data",
  "test_query.to_std_dicts",
  "type.Edge.node._type.sort_argument",
  "type.__name__",
  "type.choices",
  "types.ORMField",
  "types.SQLAlchemyObjectType",
  "types.SQLAlchemyObjectTypeOptions",
  "utils.EnumValue",
  "utils.get_query",
  "utils.get_session",
  "utils.is_mapped_class",
  "utils.is_mapped_instance",
  "utils.sort_argument_for_model",
  "utils.sort_enum_for_model",
  "utils.to_enum_value_name",
  "utils.to_type_name",
  "warnings.warn"
 ],
 "deps": {
  "CreateArticle": [],
  "CustomOptions": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "connection_field_factory": [],
  "converter": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "enums": [],
  "fields": [],
  "functools": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "get_name": [],
  "graphene": [
   "graphene/conda-forge/noarch/graphene-2.1.8-py_0"
  ],
  "graphql_relay": [
   "graphql-relay/conda-forge/noarch/graphql-relay-3.0.0-py_0"
  ],
  "makeNodes": [],
  "mock": [],
  "models": [],
  "on_resolve": [],
  "promise": [
   "promise/conda-forge/noarch/promise-2.2.1-py_0"
  ],
  "pytest": [],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "registry": [],
  "singledispatch": [
   "singledispatch/conda-forge/noarch/singledispatch-3.5.0-pyh44b312d_0"
  ],
  "sqlalchemy": [],
  "sqlalchemy_utils": [
   "sqlalchemy-utils/conda-forge/noarch/sqlalchemy-utils-0.36.6-pyh9f0ad1d_0"
  ],
  "test_query": [],
  "type": [],
  "types": [],
  "utils": [],
  "warnings": []
 }
}