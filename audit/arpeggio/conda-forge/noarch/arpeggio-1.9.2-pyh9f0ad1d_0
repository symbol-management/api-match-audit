{
 "bad": [
  "DummySemAction",
  "OneOrMore",
  "ParserPython",
  "ZeroOrMore",
  "_resolve",
  "append",
  "arpeggio.And",
  "arpeggio.ArpeggioError",
  "arpeggio.Combine",
  "arpeggio.CrossRef",
  "arpeggio.DEFAULT_WS",
  "arpeggio.DebugPrinter",
  "arpeggio.Decorator",
  "arpeggio.EOF",
  "arpeggio.EndOfFile",
  "arpeggio.GrammarError",
  "arpeggio.Kwd",
  "arpeggio.Match",
  "arpeggio.NOMATCH_MARKER",
  "arpeggio.NoMatch",
  "arpeggio.NonTerminal",
  "arpeggio.Not",
  "arpeggio.OneOrMore",
  "arpeggio.Optional",
  "arpeggio.OrderedChoice",
  "arpeggio.PTNodeVisitor",
  "arpeggio.ParseTreeNode",
  "arpeggio.Parser",
  "arpeggio.ParserPython",
  "arpeggio.ParsingExpression",
  "arpeggio.RegExMatch",
  "arpeggio.Repetition",
  "arpeggio.SemanticAction",
  "arpeggio.SemanticAction.first_pass",
  "arpeggio.SemanticActionResults",
  "arpeggio.SemanticError",
  "arpeggio.Sequence",
  "arpeggio.StrMatch",
  "arpeggio.SyntaxPredicate",
  "arpeggio.Terminal",
  "arpeggio.UnorderedGroup",
  "arpeggio.ZeroOrMore",
  "arpeggio.cleanpeg.AND",
  "arpeggio.cleanpeg.ASSIGNMENT",
  "arpeggio.cleanpeg.CLOSE",
  "arpeggio.cleanpeg.NOT",
  "arpeggio.cleanpeg.ONE_OR_MORE",
  "arpeggio.cleanpeg.OPEN",
  "arpeggio.cleanpeg.OPTIONAL",
  "arpeggio.cleanpeg.ORDERED_CHOICE",
  "arpeggio.cleanpeg.ParserPEG",
  "arpeggio.cleanpeg.UNORDERED_GROUP",
  "arpeggio.cleanpeg.ZERO_OR_MORE",
  "arpeggio.cleanpeg.comment",
  "arpeggio.cleanpeg.ordered_choice",
  "arpeggio.cleanpeg.peggrammar",
  "arpeggio.cleanpeg.rule_name",
  "arpeggio.export.DOTExportAdapter",
  "arpeggio.export.DOTExporter",
  "arpeggio.export.ExportAdapter",
  "arpeggio.export.Exporter",
  "arpeggio.export.PMDOTExportAdapter",
  "arpeggio.export.PMDOTExporter",
  "arpeggio.export.PTDOTExportAdapter",
  "arpeggio.export.PTDOTExporter",
  "arpeggio.flatten",
  "arpeggio.peg.AND",
  "arpeggio.peg.CLOSE",
  "arpeggio.peg.LEFT_ARROW",
  "arpeggio.peg.NOT",
  "arpeggio.peg.ONE_OR_MORE",
  "arpeggio.peg.OPEN",
  "arpeggio.peg.OPTIONAL",
  "arpeggio.peg.ORDERED_CHOICE",
  "arpeggio.peg.PEGVisitor",
  "arpeggio.peg.PEG_ESCAPE_SEQUENCES_RE",
  "arpeggio.peg.ParserPEG",
  "arpeggio.peg.UNORDERED_GROUP",
  "arpeggio.peg.ZERO_OR_MORE",
  "arpeggio.peg.comment",
  "arpeggio.peg.ordered_choice",
  "arpeggio.peg.peggrammar",
  "arpeggio.peg.rule",
  "arpeggio.peg.rule_name",
  "arpeggio.tests.regressions.issue_16.test_issue_16.argument",
  "arpeggio.tests.regressions.issue_16.test_issue_16.grammar",
  "arpeggio.tests.regressions.issue_16.test_issue_16.sem_actions",
  "arpeggio.tests.regressions.issue_20.test_issue_20.g",
  "arpeggio.tests.regressions.issue_32.test_issue_32.check_parser",
  "arpeggio.tests.regressions.issue_32.test_issue_32.check_regex",
  "arpeggio.tests.regressions.issue_43.test_issue43.try_grammer",
  "arpeggio.tests.test_default_semantic_action.ParenthesesSA",
  "arpeggio.tests.test_default_semantic_action.RuleSA",
  "arpeggio.tests.test_default_semantic_action.grammar",
  "arpeggio.tests.test_default_semantic_action.number_str",
  "arpeggio.tests.test_default_semantic_action.p_removed",
  "arpeggio.tests.test_default_semantic_action.parentheses",
  "arpeggio.tests.test_default_semantic_action.parse_tree_node",
  "arpeggio.tests.test_default_semantic_action.rulea",
  "arpeggio.tests.test_default_semantic_action.text",
  "arpeggio.tests.test_examples.PY_LT_3_5",
  "arpeggio.tests.test_exporter.calc",
  "arpeggio.tests.test_exporter.expression",
  "arpeggio.tests.test_exporter.factor",
  "arpeggio.tests.test_exporter.number",
  "arpeggio.tests.test_exporter.parser",
  "arpeggio.tests.test_exporter.term",
  "arpeggio.tests.test_flags.foo",
  "arpeggio.tests.test_flags.parser_ci",
  "arpeggio.tests.test_flags.parser_nonci",
  "arpeggio.tests.test_peg_parser.clean_grammar",
  "arpeggio.tests.test_peg_parser.grammar",
  "arpeggio.tests.test_position.parse_tree",
  "arpeggio.tests.test_ptnode_navigation_expressions.foo",
  "arpeggio.tests.test_python_parser.calc",
  "arpeggio.tests.test_python_parser.expression",
  "arpeggio.tests.test_python_parser.factor",
  "arpeggio.tests.test_python_parser.number",
  "arpeggio.tests.test_python_parser.term",
  "arpeggio.tests.test_reduce_tree.grammar",
  "arpeggio.tests.test_semantic_action_results.Visitor",
  "arpeggio.tests.test_semantic_action_results.first_sar",
  "arpeggio.tests.test_semantic_action_results.grammar",
  "arpeggio.tests.test_semantic_action_results.third_sar",
  "arpeggio.tests.test_unicode.grammar",
  "arpeggio.tests.test_visitor.Visitor",
  "arpeggio.tests.test_visitor.first_sar",
  "arpeggio.tests.test_visitor.grammar",
  "arpeggio.tests.test_visitor.third_sar",
  "arpeggio.text",
  "arpeggio.utils.isstr",
  "arpeggio.visit_parse_tree",
  "bisect.bisect_left",
  "calc.CalcVisitor",
  "codecs.decode",
  "codecs.open",
  "copy.copy",
  "curr_expr",
  "examples.calc.calc.CalcVisitor",
  "examples.calc.calc.calc",
  "examples.calc.calc.expression",
  "examples.calc.calc.factor",
  "examples.calc.calc.main",
  "examples.calc.calc.number",
  "examples.calc.calc.term",
  "examples.calc.calc_cleanpeg.main",
  "examples.calc.calc_peg.main",
  "examples.csv.csv.CSVVisitor",
  "examples.csv.csv.csvfile",
  "examples.csv.csv.main",
  "examples.csv.csv.record",
  "examples.csv.csv_peg.main",
  "get_rule_by_name",
  "glob.glob",
  "imp.find_module",
  "imp.load_module",
  "importlib.util.module_from_spec",
  "importlib.util.spec_from_file_location",
  "inner_from_python",
  "io.StringIO",
  "io.open",
  "my_rule",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.splitext",
  "p",
  "peg.PEGVisitor",
  "peg.ParserPEG",
  "pprint.PrettyPrinter",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.raises",
  "re.DOTALL",
  "re.IGNORECASE",
  "re.MULTILINE",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.match",
  "resolve",
  "resolve_rule_by_name",
  "rule_to_exp_str",
  "sem_action",
  "sem_action.__class__.__name__",
  "sem_action.__name__",
  "sem_action.first_pass",
  "sep",
  "sys.path.insert",
  "sys.stderr",
  "sys.stdout",
  "sys.version",
  "sys.version_info",
  "tree_walk",
  "types.FunctionType",
  "visit_parse_tree"
 ],
 "deps": {
  "DummySemAction": [],
  "OneOrMore": [],
  "ParserPython": [],
  "ZeroOrMore": [],
  "_resolve": [],
  "append": [],
  "arpeggio": [],
  "bisect": [],
  "calc": [],
  "codecs": [],
  "copy": [],
  "curr_expr": [],
  "examples": [],
  "get_rule_by_name": [],
  "glob": [],
  "imp": [],
  "importlib": [],
  "inner_from_python": [],
  "io": [],
  "my_rule": [],
  "os": [],
  "p": [],
  "peg": [],
  "pprint": [],
  "pytest": [],
  "re": [],
  "resolve": [],
  "resolve_rule_by_name": [],
  "rule_to_exp_str": [],
  "sem_action": [],
  "sep": [],
  "sys": [],
  "tree_walk": [],
  "types": [],
  "visit_parse_tree": []
 }
}