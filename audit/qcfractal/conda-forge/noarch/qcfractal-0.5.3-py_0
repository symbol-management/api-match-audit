{
 "bad": [
  "Data",
  "Meta",
  "_build_subset",
  "_version.get_versions",
  "abc.ABC",
  "abc.abstractmethod",
  "adapters.build_queue_adapter",
  "argparse.ArgumentError",
  "argparse.ArgumentParser",
  "ast.parse",
  "asyncio.get_event_loop",
  "atexit.register",
  "base_adapter.BaseAdapter",
  "base_adapter.BaseAdapter.__init__",
  "bcrypt.checkpw",
  "bcrypt.gensalt",
  "bcrypt.hashpw",
  "bson.json_util.dumps",
  "cleanup",
  "cli_utils.argparse_config_merge",
  "cli_utils.import_module",
  "cli_utils.install_signal_handlers",
  "cli_utils.read_config_file",
  "cluster_class",
  "collection.Collection",
  "collection.Collection.DataModel",
  "collection_utils.nCr",
  "collection_utils.register_collection",
  "collections.Mapping",
  "collections.abc.Iterable",
  "collections.collection_factory",
  "collections.collections_name_map",
  "collections.defaultdict",
  "common_models.DriverEnum",
  "common_models.KeywordSet",
  "common_models.Molecule",
  "common_models.Molecule.from_data",
  "common_models.ObjectId",
  "common_models.OptimizationSpecification",
  "common_models.QCSpecification",
  "concurrent.futures.ProcessPoolExecutor",
  "concurrent.futures.ThreadPoolExecutor",
  "constants.get_scale",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "cryptography.hazmat.primitives.serialization.Encoding.PEM",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
  "cryptography.x509.oid.NameOID.COMMON_NAME",
  "dask.distributed.Client",
  "dask.distributed.wait",
  "dataset.Dataset",
  "dataset.Dataset.DataModel",
  "datetime.datetime",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "dict_utils.replace_dict_keys",
  "executor_adapter.DaskAdapter",
  "executor_adapter.ExecutorAdapter",
  "extras.get_information",
  "f",
  "fireworks_adapter.FireworksAdapter",
  "func",
  "glob.glob",
  "gridoptimization.GridOptimizationInput",
  "gridoptimization.GridOptimizationRecord",
  "gridoptimization_service.GridOptimizationService",
  "hashlib.sha1",
  "importlib.import_module",
  "interface.FractalClient",
  "interface.data.get_molecule",
  "interface.models.GridOptimizationRecord",
  "interface.models.KeywordSet",
  "interface.models.Molecule",
  "interface.models.ObjectId",
  "interface.models.OptimizationRecord",
  "interface.models.QCSpecification",
  "interface.models.ResultRecord",
  "interface.models.TorsionDriveRecord",
  "interface.models.json_encoders",
  "interface.models.prepare_basis",
  "interface.models.rest_models.CollectionGETBody.parse_raw",
  "interface.models.rest_models.CollectionGETResponse",
  "interface.models.rest_models.CollectionPOSTBody.parse_raw",
  "interface.models.rest_models.CollectionPOSTResponse",
  "interface.models.rest_models.KVStoreGETBody.parse_raw",
  "interface.models.rest_models.KVStoreGETResponse",
  "interface.models.rest_models.KeywordGETBody.parse_raw",
  "interface.models.rest_models.KeywordGETResponse",
  "interface.models.rest_models.KeywordPOSTBody.parse_raw",
  "interface.models.rest_models.KeywordPOSTResponse",
  "interface.models.rest_models.MoleculeGETBody.parse_raw",
  "interface.models.rest_models.MoleculeGETResponse",
  "interface.models.rest_models.MoleculePOSTBody.parse_raw",
  "interface.models.rest_models.MoleculePOSTResponse",
  "interface.models.rest_models.ProcedureGETBody.parse_raw",
  "interface.models.rest_models.ProcedureGETReponse",
  "interface.models.rest_models.QueueManagerGETBody",
  "interface.models.rest_models.QueueManagerGETBody.parse_raw",
  "interface.models.rest_models.QueueManagerGETResponse",
  "interface.models.rest_models.QueueManagerGETResponse.parse_raw",
  "interface.models.rest_models.QueueManagerPOSTBody",
  "interface.models.rest_models.QueueManagerPOSTBody.parse_raw",
  "interface.models.rest_models.QueueManagerPOSTResponse",
  "interface.models.rest_models.QueueManagerPOSTResponse.parse_raw",
  "interface.models.rest_models.QueueManagerPUTBody",
  "interface.models.rest_models.QueueManagerPUTBody.parse_raw",
  "interface.models.rest_models.QueueManagerPUTResponse",
  "interface.models.rest_models.QueueManagerPUTResponse.parse_raw",
  "interface.models.rest_models.ResultGETBody.parse_raw",
  "interface.models.rest_models.ResultGETResponse",
  "interface.models.rest_models.ServiceQueueGETBody.parse_raw",
  "interface.models.rest_models.ServiceQueueGETResponse",
  "interface.models.rest_models.ServiceQueuePOSTBody.parse_raw",
  "interface.models.rest_models.ServiceQueuePOSTResponse",
  "interface.models.rest_models.TaskQueueGETBody.parse_raw",
  "interface.models.rest_models.TaskQueueGETResponse",
  "interface.models.rest_models.TaskQueuePOSTBody",
  "interface.models.rest_models.TaskQueuePOSTBody.parse_raw",
  "interface.models.rest_models.TaskQueuePOSTResponse",
  "itertools.combinations",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "logging.Formatter",
  "logging.Logger",
  "logging.getLogger",
  "math.factorial",
  "me_models.CollectionORM",
  "me_models.CollectionORM.drop_collection",
  "me_models.CollectionORM.objects",
  "me_models.KVStoreORM",
  "me_models.KVStoreORM.drop_collection",
  "me_models.KVStoreORM.objects",
  "me_models.KeywordsORM",
  "me_models.KeywordsORM.drop_collection",
  "me_models.KeywordsORM.objects",
  "me_models.MoleculeORM",
  "me_models.MoleculeORM.drop_collection",
  "me_models.MoleculeORM.objects",
  "me_models.ProcedureORM",
  "me_models.ProcedureORM._get_collection",
  "me_models.ProcedureORM.drop_collection",
  "me_models.ProcedureORM.objects",
  "me_models.QueueManagerORM",
  "me_models.QueueManagerORM._fields_ordered",
  "me_models.QueueManagerORM.drop_collection",
  "me_models.QueueManagerORM.objects",
  "me_models.ResultORM",
  "me_models.ResultORM._get_collection",
  "me_models.ResultORM.drop_collection",
  "me_models.ResultORM.objects",
  "me_models.ServiceQueueORM",
  "me_models.ServiceQueueORM.objects",
  "me_models.TaskQueueORM",
  "me_models.TaskQueueORM._get_collection",
  "me_models.TaskQueueORM.drop_collection",
  "me_models.TaskQueueORM.objects",
  "me_models.UserORM",
  "me_models.UserORM.drop_collection",
  "me_models.UserORM.objects",
  "method",
  "model_utils.hash_dictionary",
  "model_utils.json_encoders",
  "model_utils.prepare_basis",
  "model_utils.recursive_normalizer",
  "models.GridOptimizationInput",
  "models.Molecule",
  "models.Molecule.from_data",
  "models.Molecule.from_file",
  "models.OptimizationRecord",
  "models.OptimizationSpecification",
  "models.QCSpecification",
  "models.TorsionDriveInput",
  "models.TorsionDriveRecord",
  "models.build_procedure",
  "models.rest_models.CollectionGETBody",
  "models.rest_models.CollectionGETResponse.parse_raw",
  "models.rest_models.CollectionPOSTBody",
  "models.rest_models.CollectionPOSTResponse.parse_raw",
  "models.rest_models.KVStoreGETBody",
  "models.rest_models.KVStoreGETResponse.parse_raw",
  "models.rest_models.KeywordGETBody",
  "models.rest_models.KeywordGETResponse.parse_raw",
  "models.rest_models.KeywordPOSTBody",
  "models.rest_models.KeywordPOSTResponse.parse_raw",
  "models.rest_models.MoleculeGETBody",
  "models.rest_models.MoleculeGETResponse.parse_raw",
  "models.rest_models.MoleculePOSTBody",
  "models.rest_models.MoleculePOSTResponse.parse_raw",
  "models.rest_models.ProcedureGETBody",
  "models.rest_models.ProcedureGETReponse.parse_raw",
  "models.rest_models.ResultGETBody",
  "models.rest_models.ResultGETResponse.parse_raw",
  "models.rest_models.ServiceQueueGETBody",
  "models.rest_models.ServiceQueueGETResponse.parse_raw",
  "models.rest_models.ServiceQueuePOSTBody",
  "models.rest_models.ServiceQueuePOSTResponse.parse_raw",
  "models.rest_models.TaskQueueGETBody",
  "models.rest_models.TaskQueueGETResponse.parse_raw",
  "models.rest_models.TaskQueuePOSTBody",
  "models.rest_models.TaskQueuePOSTResponse",
  "models.rest_models.TaskQueuePOSTResponse.Data",
  "models.rest_models.TaskQueuePOSTResponse.parse_raw",
  "molecule.Molecule",
  "mongoengine.BinaryField",
  "mongoengine.DateTimeField",
  "mongoengine.DynamicDocument",
  "mongoengine.DynamicEmbeddedDocument",
  "mongoengine.DynamicField",
  "mongoengine.GenericLazyReferenceField",
  "mongoengine.IntField",
  "mongoengine.LazyReferenceField",
  "mongoengine.ListField",
  "mongoengine.StringField",
  "mongoengine.connect",
  "mongoengine_socket.MongoengineSocket",
  "numpy.abs",
  "numpy.allclose",
  "numpy.argmin",
  "numpy.around",
  "numpy.array",
  "numpy.hstack",
  "numpy.mean",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.setdiff1d",
  "numpy.sum",
  "numpy.unique",
  "operator.attrgetter",
  "os.chdir",
  "os.getcwd",
  "os.name.lower",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.remove",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Series",
  "pandas.concat",
  "pandas.to_numeric",
  "parsl_adapter.ParslAdapter",
  "pkgutil.find_loader",
  "portal.Molecule",
  "portal.Molecule.from_data",
  "portal.collections.Dataset",
  "portal.collections.ReactionDataset",
  "portal.data.get_molecule",
  "portal.dict_utils.replace_dict_keys",
  "procedures.get_procedure_parser",
  "procedures_util.parse_single_tasks",
  "pydantic.BaseModel.__init__",
  "pydantic.BaseModel.dict",
  "pydantic.confloat",
  "pydantic.conint",
  "pydantic.constr",
  "pymongo.MongoClient",
  "pymongo.UpdateOne",
  "pymongo.uri_parser.parse_uri",
  "pytest.approx",
  "pytest.config.getoption",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.xfail",
  "qcelemental.constants.conversion_factor",
  "qcfractal.interface.FractalClient.from_file",
  "qcfractal.interface.Molecule.from_data",
  "qcfractal.interface.collections.Generic.from_server",
  "qcfractal.interface.collections.ReactionDataset.from_server",
  "qcfractal.interface.data.get_molecule",
  "qcfractal.storage_sockets.me_models.MoleculeORM.objects",
  "qcfractal.storage_sockets.me_models.OptimizationProcedureORM.objects",
  "qcfractal.storage_sockets.me_models.ProcedureORM.objects",
  "qcfractal.storage_sockets.me_models.ResultORM.objects",
  "qcfractal.storage_sockets.me_models.ResultORM.objects.delete",
  "qcfractal.storage_sockets.me_models.TaskQueueORM.objects",
  "qcfractal.storage_sockets.me_models.TaskQueueORM.objects.count",
  "qcfractal.storage_sockets.me_models.TaskQueueORM.objects.delete",
  "qcfractal.storage_sockets.me_models.TorsiondriveProcedureORM.objects",
  "qcfractal.testing.fractal_compute_server.await_results",
  "qcfractal.testing.fractal_compute_server.await_services",
  "qcfractal.testing.fractal_compute_server.get_address",
  "qcfractal.testing.fractal_compute_server.list_current_tasks",
  "qcfractal.testing.fractal_compute_server.objects",
  "qcfractal.testing.fractal_compute_server.objects.queue_mark_complete",
  "qcfractal.testing.fractal_compute_server.update_tasks",
  "qcfractal.testing.mongoengine_socket_fixture._max_limit",
  "qcfractal.testing.mongoengine_socket_fixture.add_collection",
  "qcfractal.testing.mongoengine_socket_fixture.add_keywords",
  "qcfractal.testing.mongoengine_socket_fixture.add_molecules",
  "qcfractal.testing.mongoengine_socket_fixture.add_procedures",
  "qcfractal.testing.mongoengine_socket_fixture.add_results",
  "qcfractal.testing.mongoengine_socket_fixture.add_user",
  "qcfractal.testing.mongoengine_socket_fixture.del_collection",
  "qcfractal.testing.mongoengine_socket_fixture.del_keywords",
  "qcfractal.testing.mongoengine_socket_fixture.del_molecules",
  "qcfractal.testing.mongoengine_socket_fixture.del_results",
  "qcfractal.testing.mongoengine_socket_fixture.del_tasks",
  "qcfractal.testing.mongoengine_socket_fixture.get_add_keywords_mixed",
  "qcfractal.testing.mongoengine_socket_fixture.get_add_molecules_mixed",
  "qcfractal.testing.mongoengine_socket_fixture.get_collections",
  "qcfractal.testing.mongoengine_socket_fixture.get_keywords",
  "qcfractal.testing.mongoengine_socket_fixture.get_molecules",
  "qcfractal.testing.mongoengine_socket_fixture.get_procedures",
  "qcfractal.testing.mongoengine_socket_fixture.get_project_name",
  "qcfractal.testing.mongoengine_socket_fixture.get_queue",
  "qcfractal.testing.mongoengine_socket_fixture.get_results",
  "qcfractal.testing.mongoengine_socket_fixture.remove_user",
  "qcfractal.testing.mongoengine_socket_fixture.verify_user",
  "qcfractal.testing.test_server.get_address",
  "queue.QueueManager",
  "queue.QueueManagerHandler",
  "queue.ServiceQueueHandler",
  "queue.TaskQueueHandler",
  "queue.build_queue_adapter",
  "random.random",
  "records.OptimizationRecord",
  "records.RecordBase",
  "records.RecordBase.Config",
  "records.ResultRecord",
  "requests.packages.urllib3.disable_warnings",
  "rfunc",
  "server.FractalServer",
  "service_util.BaseService",
  "service_util.TaskManager",
  "service_util.expand_ndimensional_grid",
  "services.construct_service",
  "services.initialize_service",
  "signal.CTRL_BREAK_EVENT",
  "signal.SIGINT",
  "signal.SIGTERM",
  "signal.signal",
  "socket.gethostbyname",
  "socket.gethostname",
  "socket.socket",
  "spin_up_test",
  "ssl.Purpose.CLIENT_AUTH",
  "ssl.create_default_context",
  "statistics.wrap_statistics",
  "storage_sockets.storage_socket_factory",
  "storage_utils.add_metadata_template",
  "storage_utils.get_metadata_template",
  "subprocess.CREATE_NEW_PROCESS_GROUP",
  "subprocess.PIPE",
  "subprocess.Popen",
  "sys.maxsize",
  "sys.platform.startswith",
  "sys.prefix",
  "test_helper.compare_lists",
  "textwrap.dedent",
  "textwrap.indent",
  "threading.Event",
  "threading.Thread",
  "time.sleep",
  "time.time",
  "tornado.ioloop.IOLoop",
  "tornado.ioloop.IOLoop.clear_current",
  "tornado.ioloop.IOLoop.clear_instance",
  "tornado.ioloop.IOLoop.current",
  "tornado.web.HTTPError",
  "torsiondrive.TorsionDriveInput",
  "torsiondrive.TorsionDriveRecord",
  "torsiondrive_service.TorsionDriveService",
  "traceback.format_exc",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Hashable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "uuid.uuid4",
  "web_handlers.APIHandler",
  "web_handlers.CollectionHandler",
  "web_handlers.InformationHandler",
  "web_handlers.KVStoreHandler",
  "web_handlers.MoleculeHandler",
  "web_handlers.OptionHandler",
  "web_handlers.ProcedureHandler",
  "web_handlers.ResultHandler",
  "yaml.load"
 ],
 "deps": {
  "Data": [],
  "Meta": [],
  "_build_subset": [],
  "_version": [],
  "abc": [],
  "adapters": [],
  "argparse": [],
  "ast": [],
  "asyncio": [],
  "atexit": [],
  "base_adapter": [],
  "bcrypt": [],
  "bson": [
   "bson/conda-forge/noarch/bson-0.5.7-py_0"
  ],
  "cleanup": [],
  "cli_utils": [],
  "cluster_class": [],
  "collection": [],
  "collection_utils": [],
  "collections": [],
  "common_models": [],
  "concurrent": [],
  "constants": [],
  "contextlib": [],
  "copy": [],
  "cryptography": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "dask": [],
  "dataset": [],
  "datetime": [],
  "dict_utils": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "executor_adapter": [],
  "extras": [],
  "f": [],
  "fireworks": [
   "fireworks/conda-forge/noarch/fireworks-1.9.7-pyhd8ed1ab_0"
  ],
  "fireworks_adapter": [],
  "func": [],
  "glob": [],
  "gridoptimization": [],
  "gridoptimization_service": [],
  "hashlib": [],
  "importlib": [],
  "interface": [],
  "ipaddress": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "itertools": [],
  "json": [],
  "logging": [],
  "math": [],
  "me_models": [],
  "method": [],
  "model_utils": [],
  "models": [],
  "molecule": [],
  "mongoengine": [
   "mongoengine/conda-forge/noarch/mongoengine-0.16.1-py_0"
  ],
  "mongoengine_socket": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "parsl": [
   "parsl/conda-forge/noarch/parsl-1.0.0-py_0",
   "parsl/conda-forge/noarch/parsl-1.0.0-pyhd8ed1ab_1"
  ],
  "parsl_adapter": [],
  "pkgutil": [],
  "portal": [],
  "procedures": [],
  "procedures_util": [],
  "pydantic": [
   "pydantic/conda-forge/noarch/pydantic-0.18.1-py_1"
  ],
  "pymongo": [],
  "pytest": [],
  "qcelemental": [
   "qcelemental/conda-forge/noarch/qcelemental-0.13.0-py_0",
   "qcelemental/conda-forge/noarch/qcelemental-0.2.3-py_0"
  ],
  "qcengine": [
   "qcengine/conda-forge/noarch/qcengine-0.8.1-py_0"
  ],
  "qcfractal": [
   "qcfractal/conda-forge/noarch/qcfractal-0.5.3-py_0"
  ],
  "queue": [],
  "random": [],
  "records": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "rfunc": [],
  "secrets": [
   "python2-secrets/conda-forge/noarch/python2-secrets-1.0.5-py_0"
  ],
  "server": [],
  "service_util": [],
  "services": [],
  "signal": [],
  "socket": [],
  "spin_up_test": [],
  "ssl": [],
  "statistics": [],
  "storage_sockets": [],
  "storage_utils": [],
  "subprocess": [],
  "sys": [],
  "test_helper": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "tornado": [],
  "torsiondrive": [
   "torsiondrive/conda-forge/noarch/torsiondrive-0.9.6-py_0"
  ],
  "torsiondrive_service": [],
  "traceback": [],
  "typing": [],
  "urllib3": [
   "urllib3/conda-forge/noarch/urllib3-1.25.9-py_0"
  ],
  "uuid": [],
  "web_handlers": [],
  "yaml": []
 }
}