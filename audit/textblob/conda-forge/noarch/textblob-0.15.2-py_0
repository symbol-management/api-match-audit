{
 "bad": [
  "RL",
  "Sentiment",
  "Text",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "codecs.BOM_UTF8",
  "codecs.getdecoder",
  "codecs.open",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "compat.PY2",
  "compat.basestring",
  "compat.binary_type",
  "compat.imap",
  "compat.text_type",
  "compat.unicode",
  "compat.unicode.__new__",
  "compat.unicode.split",
  "conjugate",
  "csv.DictReader",
  "csv.DictReader.__init__",
  "csv.DictReader.next",
  "csv.DictWriter",
  "csv.DictWriter.__init__",
  "csv.Error",
  "csv.excel",
  "csv.reader",
  "csv.writer",
  "ctypes.c_int32",
  "ctypes.c_uint32",
  "dict.__len__",
  "dict.__setitem__",
  "dict.fromkeys",
  "dict.items",
  "dict.setdefault",
  "dict.update",
  "find_relations",
  "format.append",
  "format.extend",
  "format_class",
  "func",
  "functools.wraps",
  "id.startswith",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.imap",
  "itertools.izip",
  "json.dumps",
  "json.load",
  "json.loads",
  "list.__len__",
  "list.extend",
  "meta",
  "nltk.BigramTagger",
  "nltk.ChunkParserI",
  "nltk.RegexpTagger",
  "nltk.UnigramTagger",
  "nltk.chunk.tree2conlltags",
  "nltk.chunk.util.conlltags2tree",
  "nltk.classify.NaiveBayesClassifier",
  "nltk.classify.NaiveBayesClassifier.train",
  "nltk.classify.PositiveNaiveBayesClassifier",
  "nltk.classify.accuracy",
  "nltk.classify.decisiontree.DecisionTreeClassifier",
  "nltk.classify.maxent.MaxentClassifier",
  "nltk.classify.maxent.MaxentClassifier.__doc__",
  "nltk.corpus.brown.tagged_sents",
  "nltk.corpus.conll2000.chunked_sents",
  "nltk.corpus.movie_reviews.fileids",
  "nltk.corpus.movie_reviews.words",
  "nltk.corpus.wordnet",
  "nltk.corpus.wordnet.lemma",
  "nltk.corpus.wordnet.synset",
  "nltk.download",
  "nltk.stem.WordNetLemmatizer",
  "nltk.stem.lancaster.LancasterStemmer",
  "nltk.stem.porter.PorterStemmer",
  "nltk.stem.snowball.SnowballStemmer",
  "nltk.tag.pos_tag",
  "nltk.tokenize.api.TokenizerI",
  "nltk.tokenize.regexp_tokenize",
  "nltk.tokenize.sent_tokenize",
  "nltk.tokenize.word_tokenize",
  "nltk.tree.Tree",
  "nltk.word_tokenize",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "penntreebank2universal",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.sub",
  "singularize",
  "string.language",
  "string.punctuation",
  "string.tags",
  "string.whitespace",
  "sys.argv",
  "sys.maxsize",
  "sys.version",
  "textblob.TextBlob",
  "textblob._text.CD",
  "textblob._text.CHUNK",
  "textblob._text.CHUNKS",
  "textblob._text.Context",
  "textblob._text.EMOTICONS",
  "textblob._text.EOS",
  "textblob._text.Entities",
  "textblob._text.IRONY",
  "textblob._text.JJ",
  "textblob._text.Lexicon",
  "textblob._text.MOOD",
  "textblob._text.Morphology",
  "textblob._text.NN",
  "textblob._text.PENN",
  "textblob._text.PNP",
  "textblob._text.POS",
  "textblob._text.Parser",
  "textblob._text.Parser.find_tags",
  "textblob._text.RB",
  "textblob._text.RE_ABBR1",
  "textblob._text.RE_ABBR2",
  "textblob._text.RE_ABBR3",
  "textblob._text.RE_EMOTICONS",
  "textblob._text.RE_ENTITY1",
  "textblob._text.RE_ENTITY2",
  "textblob._text.RE_ENTITY3",
  "textblob._text.RE_SARCASM",
  "textblob._text.RE_SYNSET",
  "textblob._text.Rules",
  "textblob._text.SEPARATOR",
  "textblob._text.Score",
  "textblob._text.Sentiment",
  "textblob._text.Sentiment.load",
  "textblob._text.Spelling",
  "textblob._text.TOKEN",
  "textblob._text.TOKENS",
  "textblob._text.TaggedString",
  "textblob._text.UNIVERSAL",
  "textblob._text.VB",
  "textblob._text.WORD",
  "textblob._text._read",
  "textblob._text._suffix_rules",
  "textblob._text.avg",
  "textblob._text.decode_string",
  "textblob._text.decode_utf8",
  "textblob._text.encode_string",
  "textblob._text.find_chunks",
  "textblob._text.find_prepositions",
  "textblob._text.find_tags",
  "textblob._text.find_tokens",
  "textblob._text.lazydict",
  "textblob._text.lazylist",
  "textblob._text.replacements",
  "textblob._text.string",
  "textblob.base.BaseNPExtractor",
  "textblob.base.BaseParser",
  "textblob.base.BaseSentimentAnalyzer",
  "textblob.base.BaseTagger",
  "textblob.base.BaseTokenizer",
  "textblob.base.CONTINUOUS",
  "textblob.base.DISCRETE",
  "textblob.blob.BaseBlob",
  "textblob.blob.Sentence",
  "textblob.blob.TextBlob",
  "textblob.blob.Word",
  "textblob.blob.WordList",
  "textblob.blob._initialize_models",
  "textblob.blob._penn_to_wordnet",
  "textblob.blob._validated_param",
  "textblob.blob._wordnet",
  "textblob.classifiers.BaseClassifier",
  "textblob.classifiers.NLTKClassifier",
  "textblob.classifiers._get_document_tokens",
  "textblob.classifiers._get_words_from_dataset",
  "textblob.classifiers.basic_extractor",
  "textblob.classifiers.contains_extractor",
  "textblob.compat.PY2",
  "textblob.compat.basestring",
  "textblob.compat.binary_type",
  "textblob.compat.csv.Error",
  "textblob.compat.csv.Sniffer",
  "textblob.compat.csv.reader",
  "textblob.compat.implements_to_string",
  "textblob.compat.izip",
  "textblob.compat.request.Request",
  "textblob.compat.request.urlopen",
  "textblob.compat.text_type",
  "textblob.compat.unicode",
  "textblob.compat.urlencode",
  "textblob.compat.with_metaclass",
  "textblob.decorators.cached_property",
  "textblob.decorators.requires_nltk_corpus",
  "textblob.download_corpora.ADDITIONAL_CORPORA",
  "textblob.download_corpora.ALL_CORPORA",
  "textblob.download_corpora.MIN_CORPORA",
  "textblob.download_corpora.download_all",
  "textblob.download_corpora.download_lite",
  "textblob.download_corpora.main",
  "textblob.en.MODULE",
  "textblob.en.find_lemmata",
  "textblob.en.inflect.plural_categories",
  "textblob.en.inflect.plural_prepositions",
  "textblob.en.inflect.plural_rules",
  "textblob.en.inflect.singular_ie",
  "textblob.en.inflect.singular_irregular",
  "textblob.en.inflect.singular_rules",
  "textblob.en.inflect.singular_s",
  "textblob.en.inflect.singular_uncountable",
  "textblob.en.inflect.singular_uninflected",
  "textblob.en.lexicon",
  "textblob.en.np_extractors.ChunkParser",
  "textblob.en.np_extractors._is_match",
  "textblob.en.np_extractors._normalize_tags",
  "textblob.en.parse",
  "textblob.en.parser",
  "textblob.en.polarity",
  "textblob.en.sentiment",
  "textblob.en.sentiments.NaiveBayesAnalyzer",
  "textblob.en.sentiments._default_feature_extractor",
  "textblob.en.spelling",
  "textblob.en.suggest",
  "textblob.en.tag",
  "textblob.en.tokenize",
  "textblob.exceptions.FormatError",
  "textblob.exceptions.MISSING_CORPUS_MESSAGE",
  "textblob.exceptions.MissingCorpusError",
  "textblob.exceptions.NotTranslated",
  "textblob.exceptions.TextBlobError",
  "textblob.exceptions.TranslatorError",
  "textblob.formats.BaseFormat",
  "textblob.formats.CSV",
  "textblob.formats.DEFAULT_ENCODING",
  "textblob.formats.DelimitedFormat",
  "textblob.formats.JSON",
  "textblob.formats.TSV",
  "textblob.formats._registry",
  "textblob.formats.detect",
  "textblob.formats.get_registry",
  "textblob.inflect.pluralize",
  "textblob.inflect.singularize",
  "textblob.mixins.BlobComparableMixin",
  "textblob.mixins.ComparableMixin",
  "textblob.mixins.StringlikeMixin",
  "textblob.np_extractors.FastNPExtractor",
  "textblob.parsers.PatternParser",
  "textblob.sentiments.PatternAnalyzer",
  "textblob.taggers.NLTKTagger",
  "textblob.taggers.PatternTagger",
  "textblob.tokenizers.SentenceTokenizer",
  "textblob.tokenizers.WordTokenizer",
  "textblob.tokenizers._word_tokenizer",
  "textblob.tokenizers.sent_tokenize",
  "textblob.tokenizers.word_tokenize",
  "textblob.translate.Translator",
  "textblob.translate._calculate_tk",
  "textblob.unicodecsv.UnicodeReader",
  "textblob.unicodecsv.UnicodeWriter",
  "textblob.unicodecsv.VERSION",
  "textblob.unicodecsv._stringify",
  "textblob.unicodecsv._stringify_list",
  "textblob.unicodecsv._unicodify",
  "textblob.unicodecsv.csv",
  "textblob.unicodecsv.pass_throughs",
  "textblob.unicodecsv.reader",
  "textblob.utils.PUNCTUATION_REGEX",
  "textblob.utils.PUNCTUATION_REGEX.match",
  "textblob.utils.filter_insignificant",
  "textblob.utils.is_filelike",
  "textblob.utils.lowerstrip",
  "textblob.utils.strip_punc",
  "textblob.utils.tree2str",
  "textblob.wordnet.wordnet",
  "tokenize",
  "tuple.__new__",
  "type.__new__",
  "types.MethodType",
  "unicode_",
  "xml.etree.cElementTree.parse"
 ],
 "deps": {
  "RL": [],
  "Sentiment": [],
  "Text": [],
  "abc": [],
  "codecs": [],
  "collections": [],
  "compat": [],
  "conjugate": [],
  "csv": [],
  "ctypes": [],
  "dict": [],
  "find_relations": [],
  "format": [],
  "format_class": [],
  "func": [],
  "functools": [],
  "id": [],
  "itertools": [],
  "json": [],
  "list": [],
  "meta": [],
  "nltk": [],
  "os": [],
  "penntreebank2universal": [],
  "re": [],
  "singularize": [],
  "string": [],
  "sys": [],
  "textblob": [],
  "tokenize": [],
  "tuple": [],
  "type": [],
  "types": [],
  "unicode_": [],
  "xml": []
 }
}