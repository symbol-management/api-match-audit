{
 "bad": [
  "Crypto.Cipher._AES",
  "Crypto.Cipher._ARC2",
  "Crypto.Cipher._ARC4",
  "Crypto.Cipher._Blowfish",
  "Crypto.Cipher._CAST",
  "Crypto.Cipher._DES",
  "Crypto.Cipher._DES3",
  "Crypto.Cipher._XOR",
  "Crypto.Hash._MD2",
  "Crypto.Hash._MD4",
  "Crypto.Hash._RIPEMD160",
  "Crypto.Hash._SHA224",
  "Crypto.Hash._SHA256",
  "Crypto.Hash._SHA384",
  "Crypto.Hash._SHA512",
  "Crypto.Protocol.AllOrNothing",
  "Crypto.Protocol.AllOrNothing.AllOrNothing",
  "Crypto.Protocol.Chaffing",
  "Crypto.Protocol.Chaffing.Chaff",
  "Crypto.PublicKey._DSA",
  "Crypto.PublicKey._DSA.generate_py",
  "Crypto.PublicKey._RSA",
  "Crypto.PublicKey._RSA.generate_py",
  "Crypto.PublicKey._fastmath",
  "Crypto.PublicKey._slowmath",
  "Crypto.Random.Fortuna.FortunaAccumulator",
  "Crypto.Random.OSRNG.posix",
  "Crypto.Random.OSRNG.posix.new",
  "Crypto.Random.OSRNG.winrandom",
  "Crypto.Random.OSRNG.winrandom.new",
  "Crypto.Random.random",
  "Crypto.Random.random.choice",
  "Crypto.Random.random.getrandbits",
  "Crypto.Random.random.randint",
  "Crypto.Random.random.randrange",
  "Crypto.Random.random.sample",
  "Crypto.Random.random.shuffle",
  "Crypto.SelfTest.Cipher.__init__.get_tests",
  "Crypto.SelfTest.Cipher.test_pkcs1_15",
  "Crypto.SelfTest.Cipher.test_pkcs1_15.get_tests",
  "Crypto.SelfTest.Hash.__init__.get_tests",
  "Crypto.SelfTest.Protocol.__init__.get_tests",
  "Crypto.SelfTest.PublicKey.__init__.get_tests",
  "Crypto.SelfTest.PublicKey.test_ElGamal",
  "Crypto.SelfTest.PublicKey.test_ElGamal.get_tests",
  "Crypto.SelfTest.PublicKey.test_RSA",
  "Crypto.SelfTest.PublicKey.test_RSA.get_tests",
  "Crypto.SelfTest.PublicKey.test_importKey",
  "Crypto.SelfTest.PublicKey.test_importKey.get_tests",
  "Crypto.SelfTest.Random.Fortuna.__init__.get_tests",
  "Crypto.SelfTest.Random.Fortuna.test_FortunaAccumulator",
  "Crypto.SelfTest.Random.Fortuna.test_FortunaAccumulator.get_tests",
  "Crypto.SelfTest.Random.OSRNG.__init__.get_tests",
  "Crypto.SelfTest.Random.__init__.get_tests",
  "Crypto.SelfTest.Signature.__init__.get_tests",
  "Crypto.SelfTest.Util.__init__.get_tests",
  "Crypto.SelfTest.Util.test_number",
  "Crypto.SelfTest.Util.test_number.get_tests",
  "Crypto.SelfTest.__init__.SelfTestError",
  "Crypto.SelfTest.__init__.get_tests",
  "Crypto.Util.RFC1751",
  "Crypto.Util.RFC1751.english_to_key",
  "Crypto.Util.RFC1751.key_to_english",
  "Crypto.Util._counter",
  "Crypto.Util._counter._newBE",
  "Crypto.Util._counter._newLE",
  "Crypto.Util.number",
  "Crypto.Util.number.bytes_to_long",
  "Crypto.Util.number.ceil_div",
  "Crypto.Util.number.ceil_shift",
  "Crypto.Util.number.exact_div",
  "Crypto.Util.number.exact_log2",
  "Crypto.Util.number.getRandomRange",
  "Crypto.Util.number.inverse",
  "Crypto.Util.number.isPrime",
  "Crypto.Util.number.long_to_bytes",
  "Crypto.Util.number.size",
  "Crypto.Util.py21compat",
  "Crypto.Util.strxor.strxor",
  "Crypto.Util.strxor.strxor_c",
  "Crypto.Util.winrandom.new",
  "EMSA_PKCS1_V1_5_ENCODE",
  "ElGamalobj",
  "GCD",
  "MGF1",
  "PBKDF1",
  "PBKDF2",
  "SHAd256",
  "SHAd256.new",
  "StringIO.StringIO",
  "__future__.nested_scopes",
  "b",
  "base64",
  "bchr",
  "bignum",
  "binascii",
  "binascii.a2b_base64",
  "binascii.a2b_hex",
  "binascii.b2a_base64",
  "binascii.b2a_hex",
  "binascii.hexlify",
  "binascii.unhexlify",
  "bord",
  "bstr",
  "bytes_to_long",
  "c",
  "c.carry",
  "c.next_value",
  "common.dict",
  "common.make_block_tests",
  "common.make_hash_tests",
  "common.make_mac_tests",
  "common.make_stream_tests",
  "getPrime",
  "hash.digest",
  "hash.digest_size",
  "hash.new",
  "hash.oid",
  "hashlib",
  "hashlib.md5",
  "hashlib.sha1",
  "hashlib.sha224",
  "hashlib.sha256",
  "hashlib.sha384",
  "hashlib.sha512",
  "inspect",
  "inspect.currentframe",
  "inspect.getfile",
  "inverse",
  "isInt",
  "long",
  "long_to_bytes",
  "math",
  "math.floor",
  "md5",
  "multiprocessing",
  "multiprocessing.synchronize",
  "nonZeroRandByte",
  "os",
  "os._exit",
  "os.close",
  "os.fdopen",
  "os.fork",
  "os.getpid",
  "os.name",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.normpath",
  "os.pipe",
  "randFunc",
  "randGen",
  "rng_base.BaseRNG",
  "rng_base.BaseRNG.flush",
  "sha",
  "struct.pack",
  "struct.unpack",
  "sys",
  "sys.platform.startswith",
  "sys.stderr.write",
  "test_pkcs1_15",
  "test_pkcs1_15.get_tests",
  "test_pkcs1_pss",
  "test_pkcs1_pss.get_tests",
  "threading",
  "threading.Lock",
  "time",
  "time.clock",
  "tobytes",
  "types.StringType",
  "types.TupleType",
  "unittest",
  "unittest.TestCase",
  "unittest.TestLoader",
  "unittest.TestSuite",
  "unittest.TextTestRunner",
  "unittest.main",
  "warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "xrange"
 ],
 "deps": {
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pprint": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}