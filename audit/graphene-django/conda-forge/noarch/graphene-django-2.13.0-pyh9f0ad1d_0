{
 "bad": [
  "ArticleTypeOptions",
  "ChildSerializer",
  "Event",
  "MockDjangoModelMeta",
  "ParentSerializer",
  "TestClass",
  "base64.b64encode",
  "binascii.Error",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "compat.ArrayField",
  "compat.HStoreField",
  "compat.JSONField",
  "compat.MissingType",
  "compat.PGJSONField",
  "compat.RangeField",
  "context",
  "converter.convert_choices_to_named_enum_with_descriptions",
  "converter.convert_django_field",
  "converter.convert_django_field_with_choices",
  "converter.convert_form_field",
  "converter.generate_enum_name",
  "copy.deepcopy",
  "custom_func",
  "datetime.date",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.now",
  "django.conf.settings",
  "django.conf.settings.DEBUG",
  "django.conf.urls.url",
  "django.contrib.postgres.fields.ArrayField",
  "django.contrib.postgres.fields.HStoreField",
  "django.contrib.postgres.fields.IntegerRangeField",
  "django.contrib.postgres.fields.JSONField",
  "django.contrib.postgres.fields.RangeField",
  "django.core.exceptions.ImproperlyConfigured",
  "django.core.exceptions.ValidationError",
  "django.core.management.base.BaseCommand",
  "django.core.management.base.CommandError",
  "django.core.management.call_command",
  "django.db.connections.all",
  "django.db.models.AutoField",
  "django.db.models.Avg",
  "django.db.models.BigIntegerField",
  "django.db.models.BooleanField",
  "django.db.models.CASCADE",
  "django.db.models.CharField",
  "django.db.models.Count",
  "django.db.models.DateField",
  "django.db.models.DateTimeField",
  "django.db.models.DecimalField",
  "django.db.models.DurationField",
  "django.db.models.EmailField",
  "django.db.models.FileField",
  "django.db.models.FilePathField",
  "django.db.models.FloatField",
  "django.db.models.ForeignKey",
  "django.db.models.GenericIPAddressField",
  "django.db.models.ImageField",
  "django.db.models.IntegerField",
  "django.db.models.JSONField",
  "django.db.models.Manager",
  "django.db.models.ManyToManyField",
  "django.db.models.ManyToManyRel",
  "django.db.models.ManyToOneRel",
  "django.db.models.Model",
  "django.db.models.NullBooleanField",
  "django.db.models.OneToOneField",
  "django.db.models.OneToOneRel",
  "django.db.models.PositiveIntegerField",
  "django.db.models.PositiveSmallIntegerField",
  "django.db.models.Q",
  "django.db.models.SlugField",
  "django.db.models.SmallIntegerField",
  "django.db.models.TextField",
  "django.db.models.TimeField",
  "django.db.models.URLField",
  "django.db.models.UUIDField",
  "django.db.models.Value",
  "django.db.models.functions.Concat",
  "django.db.models.manager.Manager",
  "django.db.models.query.QuerySet",
  "django.forms",
  "django.forms.BooleanField",
  "django.forms.CharField",
  "django.forms.ChoiceField",
  "django.forms.DateField",
  "django.forms.DateTimeField",
  "django.forms.DecimalField",
  "django.forms.EmailField",
  "django.forms.Field",
  "django.forms.FloatField",
  "django.forms.Form",
  "django.forms.IntegerField",
  "django.forms.ModelChoiceField",
  "django.forms.ModelForm",
  "django.forms.ModelMultipleChoiceField",
  "django.forms.MultipleChoiceField",
  "django.forms.NullBooleanField",
  "django.forms.NumberInput",
  "django.forms.RegexField",
  "django.forms.SlugField",
  "django.forms.TimeField",
  "django.forms.URLField",
  "django.forms.UUIDField",
  "django.forms.fields.BaseTemporalField",
  "django.http.HttpResponse",
  "django.http.HttpResponseNotAllowed",
  "django.http.response.HttpResponseBadRequest",
  "django.shortcuts.get_object_or_404",
  "django.shortcuts.render",
  "django.test.Client",
  "django.test.TestCase",
  "django.test.signals.setting_changed.connect",
  "django.utils.autoreload.run_with_reloader",
  "django.utils.decorators.method_decorator",
  "django.utils.encoding.force_str",
  "django.utils.encoding.force_text",
  "django.utils.functional.Promise",
  "django.utils.functional.SimpleLazyObject",
  "django.utils.importlib.import_module",
  "django.utils.module_loading.import_string",
  "django.utils.text.capfirst",
  "django.utils.translation.gettext_lazy",
  "django.utils.translation.ugettext_lazy",
  "django.views.decorators.csrf.ensure_csrf_cookie",
  "django.views.generic.View",
  "django_filters.CharFilter",
  "django_filters.Filter",
  "django_filters.FilterSet",
  "django_filters.MultipleChoiceFilter",
  "django_filters.NumberFilter",
  "django_filters.OrderingFilter",
  "django_filters.VERSION",
  "django_filters.filterset.FilterSet",
  "django_filters.utils.get_model_field",
  "enum",
  "fields.DjangoConnectionField",
  "fields.DjangoListField",
  "filter.DjangoFilterConnectionField",
  "filter.fields.DjangoFilterConnectionField",
  "filterset.custom_filterset_factory",
  "filterset.setup_filterset",
  "forms.GlobalIDFormField",
  "forms.GlobalIDMultipleChoiceField",
  "forms.converter.convert_form_field",
  "forms.mutation.DjangoFormMutation",
  "func",
  "functools.partial",
  "functools.singledispatch",
  "graphene.Argument",
  "graphene.Boolean",
  "graphene.Connection",
  "graphene.Date",
  "graphene.DateTime",
  "graphene.Dynamic",
  "graphene.Enum",
  "graphene.Field",
  "graphene.Float",
  "graphene.ID",
  "graphene.InputField",
  "graphene.InputObjectType",
  "graphene.Int",
  "graphene.Interface",
  "graphene.List",
  "graphene.NonNull",
  "graphene.ObjectType",
  "graphene.ResolveInfo",
  "graphene.Schema",
  "graphene.String",
  "graphene.Time",
  "graphene.UUID",
  "graphene.relay.Connection",
  "graphene.relay.ConnectionField",
  "graphene.relay.Node",
  "graphene.relay.Node.Field",
  "graphene.relay.PageInfo",
  "graphene.relay.mutation.ClientIDMutation",
  "graphene.types.Field",
  "graphene.types.InputField",
  "graphene.types.List",
  "graphene.types.datetime.Date",
  "graphene.types.datetime.DateTime",
  "graphene.types.datetime.Time",
  "graphene.types.inputobjecttype.InputObjectType",
  "graphene.types.json.JSONString",
  "graphene.types.mutation.MutationOptions",
  "graphene.types.objecttype.ObjectType",
  "graphene.types.objecttype.ObjectTypeOptions",
  "graphene.types.objecttype.yank_fields_from_attrs",
  "graphene.types.unmountedtype.UnmountedType",
  "graphene.types.utils.yank_fields_from_attrs",
  "graphene.utils.str_converters.to_camel_case",
  "graphene_django.DjangoConnectionField",
  "graphene_django.DjangoObjectType",
  "graphene_django.compat.MissingType",
  "graphene_django.converter.convert_choice_field_to_enum",
  "graphene_django.converter.convert_choice_name",
  "graphene_django.converter.convert_choices_to_named_enum_with_descriptions",
  "graphene_django.converter.convert_django_field",
  "graphene_django.converter.generate_enum_name",
  "graphene_django.converter.get_choices",
  "graphene_django.converter.singledispatch",
  "graphene_django.debug.middleware.DjangoDebugContext",
  "graphene_django.debug.sql.tracking.SQLQueryTriggered",
  "graphene_django.debug.sql.tracking.ThreadLocalState",
  "graphene_django.debug.sql.tracking.state",
  "graphene_django.debug.tests.test_query.context",
  "graphene_django.fields.DjangoConnectionField",
  "graphene_django.fields.DjangoListField",
  "graphene_django.filter.DjangoFilterConnectionField",
  "graphene_django.filter.GlobalIDFilter",
  "graphene_django.filter.GlobalIDMultipleChoiceFilter",
  "graphene_django.filter.fields.DjangoFilterConnectionField",
  "graphene_django.filter.filterset.GlobalIDFilter",
  "graphene_django.filter.filterset.GlobalIDMultipleChoiceFilter",
  "graphene_django.filter.filterset.GrapheneFilterSetMixin",
  "graphene_django.filter.filterset.GrapheneFilterSetMixinPython2",
  "graphene_django.filter.tests.filters.ArticleFilter",
  "graphene_django.filter.tests.filters.PetFilter",
  "graphene_django.filter.tests.filters.ReporterFilter",
  "graphene_django.filter.tests.test_fields.ArticleNode",
  "graphene_django.filter.tests.test_fields.PetNode",
  "graphene_django.filter.tests.test_fields.ReporterNode",
  "graphene_django.filter.tests.test_fields.assert_arguments",
  "graphene_django.filter.tests.test_fields.assert_not_orderable",
  "graphene_django.filter.tests.test_fields.assert_orderable",
  "graphene_django.filter.tests.test_fields.get_args",
  "graphene_django.filter.tests.test_fields.pytestmark",
  "graphene_django.forms.GlobalIDFormField",
  "graphene_django.forms.GlobalIDMultipleChoiceField",
  "graphene_django.forms.converter.convert_form_field",
  "graphene_django.forms.converter.singledispatch",
  "graphene_django.forms.forms.GlobalIDFormField",
  "graphene_django.forms.mutation.BaseDjangoFormMutation",
  "graphene_django.forms.mutation.DjangoFormMutation",
  "graphene_django.forms.mutation.DjangoFormMutationOptions",
  "graphene_django.forms.mutation.DjangoModelDjangoFormMutationOptions",
  "graphene_django.forms.mutation.DjangoModelFormMutation",
  "graphene_django.forms.mutation.fields_for_form",
  "graphene_django.forms.tests.test_converter.assert_conversion",
  "graphene_django.forms.tests.test_mutation.MockQuery",
  "graphene_django.forms.tests.test_mutation.MyForm",
  "graphene_django.forms.tests.test_mutation.PetForm",
  "graphene_django.forms.tests.test_mutation.pet_type",
  "graphene_django.management.commands.graphql_schema.CommandArguments",
  "graphene_django.registry.Registry",
  "graphene_django.registry.get_global_registry",
  "graphene_django.registry.registry",
  "graphene_django.rest_framework.mutation.SerializerMutation",
  "graphene_django.rest_framework.mutation.SerializerMutationOptions",
  "graphene_django.rest_framework.mutation.fields_for_serializer",
  "graphene_django.rest_framework.serializer_converter.convert_serializer_field",
  "graphene_django.rest_framework.serializer_converter.convert_serializer_field_to_enum",
  "graphene_django.rest_framework.serializer_converter.convert_serializer_to_input_type",
  "graphene_django.rest_framework.serializer_converter.get_graphene_type_from_serializer_field",
  "graphene_django.rest_framework.serializer_converter.singledispatch",
  "graphene_django.rest_framework.tests.test_field_converter._get_type",
  "graphene_django.rest_framework.tests.test_field_converter.assert_conversion",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.ChildType",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.Mutation",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.MyFakeChildModel",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.MyFakeParentModel",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.MyModelChildSerializer",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.MyModelParentSerializer",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.MyParentModelMutation",
  "graphene_django.rest_framework.tests.test_multiple_model_serializers.ParentType",
  "graphene_django.rest_framework.tests.test_mutation.MyModelMutation",
  "graphene_django.rest_framework.tests.test_mutation.MyModelSerializer",
  "graphene_django.rest_framework.tests.test_mutation.MyModelSerializerWithMethod",
  "graphene_django.rest_framework.tests.test_mutation.MySerializer",
  "graphene_django.rest_framework.tests.test_mutation.mock_info",
  "graphene_django.settings.DEFAULTS",
  "graphene_django.settings.GrapheneSettings",
  "graphene_django.settings.IMPORT_STRINGS",
  "graphene_django.settings.graphene_settings",
  "graphene_django.settings.graphene_settings.SCHEMA",
  "graphene_django.settings.graphene_settings.SCHEMA_INDENT",
  "graphene_django.settings.graphene_settings.SCHEMA_OUTPUT",
  "graphene_django.settings.graphene_settings.__dict__",
  "graphene_django.settings.import_from_string",
  "graphene_django.settings.perform_import",
  "graphene_django.settings.reload_graphene_settings",
  "graphene_django.tests.issues.test_520.MyForm",
  "graphene_django.tests.issues.test_520.MyModelSerializer",
  "graphene_django.tests.models.Article",
  "graphene_django.tests.models.Article.objects.create",
  "graphene_django.tests.models.CHOICES",
  "graphene_django.tests.models.CNNReporterManager",
  "graphene_django.tests.models.DoeReporterManager",
  "graphene_django.tests.models.Pet",
  "graphene_django.tests.models.Pet.objects.count",
  "graphene_django.tests.models.Pet.objects.create",
  "graphene_django.tests.models.Pet.objects.get",
  "graphene_django.tests.models.Reporter",
  "graphene_django.tests.models.Reporter.objects.annotate",
  "graphene_django.tests.models.Reporter.objects.create",
  "graphene_django.tests.models.Reporter.objects.only",
  "graphene_django.tests.models.Reporter.objects.order_by",
  "graphene_django.tests.schema.Human",
  "graphene_django.tests.schema.Query",
  "graphene_django.tests.schema_view.MutationRoot",
  "graphene_django.tests.schema_view.QueryRoot",
  "graphene_django.tests.test_converter.assert_conversion",
  "graphene_django.tests.test_query.REPORTERS",
  "graphene_django.tests.test_types.ArticleConnection",
  "graphene_django.tests.test_types.RootQuery",
  "graphene_django.tests.test_types.schema",
  "graphene_django.tests.test_types.with_local_registry",
  "graphene_django.tests.test_views.batch_url_string",
  "graphene_django.tests.test_views.j",
  "graphene_django.tests.test_views.jl",
  "graphene_django.tests.test_views.response_json",
  "graphene_django.tests.test_views.url_string",
  "graphene_django.tests.urls_inherited.CustomGraphQLView",
  "graphene_django.types.ALL_FIELDS",
  "graphene_django.types.DjangoObjectType",
  "graphene_django.types.DjangoObjectTypeOptions",
  "graphene_django.types.construct_fields",
  "graphene_django.types.validate_fields",
  "graphene_django.utils.DJANGO_FILTER_INSTALLED",
  "graphene_django.utils.testing.DEFAULT_GRAPHQL_URL",
  "graphene_django.utils.testing.GraphQLTestCase",
  "graphene_django.utils.testing.graphql_query",
  "graphene_django.utils.utils._camelize_django_str",
  "graphene_django.utils.utils.get_reverse_fields",
  "graphene_django.utils.utils.isiterable",
  "graphene_django.views.HttpError",
  "graphene_django.views.get_accepted_content_types",
  "graphene_django.views.instantiate_middleware",
  "graphql.assert_valid_name",
  "graphql.error.GraphQLError",
  "graphql.error.format_error",
  "graphql.execution.ExecutionResult",
  "graphql.execution.middleware.MiddlewareManager",
  "graphql.get_default_backend",
  "graphql.print_schema",
  "graphql.type.schema.GraphQLSchema",
  "graphql_relay.connection.arrayconnection.connection_from_list_slice",
  "graphql_relay.connection.arrayconnection.get_offset_with_default",
  "graphql_relay.from_global_id",
  "graphql_relay.node.node.from_global_id",
  "graphql_relay.to_global_id",
  "graphql_type",
  "importlib.import_module",
  "input.pop",
  "inspect.isclass",
  "json.dump",
  "json.dumps",
  "json.loads",
  "middleware",
  "middleware.DjangoDebugMiddleware",
  "mock.mock_open",
  "mock.patch",
  "models.Article",
  "models.Article._meta",
  "models.Article._meta.fields",
  "models.Article.get_node",
  "models.Article.objects.annotate",
  "models.Article.objects.create",
  "models.Article.objects.filter",
  "models.CNNReporter",
  "models.CNNReporter.objects.create",
  "models.Film",
  "models.Film.details.related",
  "models.Film.objects.create",
  "models.Film.objects.filter",
  "models.Film.objects.prefetch_related",
  "models.FilmDetails",
  "models.FilmDetails.objects.create",
  "models.MyFakeModel",
  "models.MyFakeModel.objects.create",
  "models.MyFakeModelWithDate",
  "models.MyFakeModelWithPassword",
  "models.Reporter",
  "models.Reporter._meta.fields",
  "models.Reporter._meta.fields.keys",
  "models.Reporter._meta.get_fields",
  "models.Reporter._meta.local_many_to_many",
  "models.Reporter._meta.name",
  "models.Reporter.articles.rel",
  "models.Reporter.objects.all",
  "models.Reporter.objects.annotate",
  "models.Reporter.objects.bulk_create",
  "models.Reporter.objects.create",
  "models.Reporter.objects.filter",
  "models.Reporter.objects.get",
  "mutation.DjangoFormMutation",
  "mutation.DjangoModelFormMutation",
  "mutation.SerializerMutation",
  "on_resolve",
  "open_mock",
  "os.path.splitext",
  "promise.Promise.all",
  "promise.Promise.is_thenable",
  "promise.Promise.resolve",
  "promise.dataloader.DataLoader",
  "py.test.raises",
  "pytest.fixture",
  "pytest.mark.django_db",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.urls",
  "pytest.raises",
  "pytest.warns",
  "re.match",
  "re.sub",
  "registry.Registry",
  "registry.get_global_registry",
  "registry.registry",
  "registry.reset_global_registry",
  "rest_framework.models.MyFakeModel",
  "rest_framework.mutation.SerializerMutation",
  "rest_framework.serializers",
  "rest_framework.serializers.BooleanField",
  "rest_framework.serializers.CharField",
  "rest_framework.serializers.ChoiceField",
  "rest_framework.serializers.DateField",
  "rest_framework.serializers.DateTimeField",
  "rest_framework.serializers.DecimalField",
  "rest_framework.serializers.DictField",
  "rest_framework.serializers.DurationField",
  "rest_framework.serializers.EmailField",
  "rest_framework.serializers.Field",
  "rest_framework.serializers.FileField",
  "rest_framework.serializers.FilePathField",
  "rest_framework.serializers.FloatField",
  "rest_framework.serializers.IPAddressField",
  "rest_framework.serializers.ImageField",
  "rest_framework.serializers.IntegerField",
  "rest_framework.serializers.JSONField",
  "rest_framework.serializers.ListField",
  "rest_framework.serializers.ListSerializer",
  "rest_framework.serializers.ModelSerializer",
  "rest_framework.serializers.MultipleChoiceField",
  "rest_framework.serializers.RegexField",
  "rest_framework.serializers.Serializer",
  "rest_framework.serializers.SerializerMethodField",
  "rest_framework.serializers.SlugField",
  "rest_framework.serializers.TimeField",
  "rest_framework.serializers.URLField",
  "rest_framework.serializers.UUIDField",
  "schema.Human",
  "schema_view.schema",
  "serializer_converter.convert_serializer_field",
  "settings.graphene_settings.CAMELCASE_ERRORS",
  "settings.graphene_settings.DJANGO_CHOICE_FIELD_ENUM_CUSTOM_NAME",
  "settings.graphene_settings.DJANGO_CHOICE_FIELD_ENUM_V3_NAMING",
  "settings.graphene_settings.GRAPHIQL_HEADER_EDITOR_ENABLED",
  "settings.graphene_settings.MIDDLEWARE",
  "settings.graphene_settings.RELAY_CONNECTION_ENFORCE_FIRST_OR_LAST",
  "settings.graphene_settings.RELAY_CONNECTION_MAX_LIMIT",
  "settings.graphene_settings.SCHEMA",
  "settings.graphene_settings.SUBSCRIPTION_PATH",
  "singledispatch.singledispatch",
  "six.PY3",
  "six.StringIO",
  "six.iteritems",
  "six.string_types",
  "six.text_type",
  "sql.tracking.unwrap_cursor",
  "sql.tracking.wrap_cursor",
  "sql.types.DjangoDebugSQL",
  "str_converters.to_const",
  "success",
  "tests.models.Reporter",
  "tests.models.Reporter.objects.all",
  "tests.models.Reporter.objects.first",
  "tests.models.Reporter.objects.order_by",
  "textwrap.dedent",
  "threading.local",
  "time.time",
  "type.of_type",
  "types.DictType",
  "types.DjangoDebug",
  "types.DjangoDebugSQL",
  "types.DjangoObjectType",
  "types.DjangoObjectTypeOptions",
  "types.ErrorType",
  "types.ErrorType.from_errors",
  "unidecode.unidecode",
  "urllib.parse.urlencode",
  "utils.DJANGO_FILTER_INSTALLED",
  "utils.GraphQLTestCase",
  "utils.camelize",
  "utils.get_filtering_args_from_filterset",
  "utils.get_filterset_class",
  "utils.get_model_fields",
  "utils.import_single_dispatch",
  "utils.is_valid_django_model",
  "utils.maybe_queryset",
  "utils.str_converters.to_const",
  "utils.testing.graphql_query",
  "views.GraphQLView",
  "views.GraphQLView.as_view",
  "warnings.warn"
 ],
 "deps": {
  "ArticleTypeOptions": [],
  "ChildSerializer": [],
  "Event": [],
  "MockDjangoModelMeta": [],
  "ParentSerializer": [],
  "TestClass": [],
  "base64": [],
  "binascii": [],
  "collections": [],
  "compat": [],
  "context": [],
  "converter": [],
  "copy": [],
  "custom_func": [],
  "datetime": [],
  "django": [],
  "django_filters": [],
  "enum": [],
  "fields": [],
  "filter": [],
  "filterset": [],
  "forms": [],
  "func": [],
  "functools": [],
  "graphene": [],
  "graphene_django": [],
  "graphql": [],
  "graphql_relay": [],
  "graphql_type": [],
  "importlib": [],
  "input": [],
  "inspect": [],
  "json": [],
  "middleware": [],
  "mock": [],
  "models": [],
  "mutation": [],
  "on_resolve": [],
  "open_mock": [],
  "os": [],
  "promise": [],
  "py": [],
  "pytest": [],
  "re": [],
  "registry": [],
  "rest_framework": [],
  "schema": [],
  "schema_view": [],
  "serializer_converter": [],
  "settings": [],
  "singledispatch": [],
  "six": [],
  "sql": [],
  "str_converters": [],
  "success": [],
  "tests": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "type": [],
  "types": [],
  "unidecode": [],
  "urllib": [],
  "utils": [],
  "views": [],
  "warnings": []
 }
}