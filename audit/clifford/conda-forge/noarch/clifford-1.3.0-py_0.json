{
 "bad": [
  "A",
  "A.inv",
  "A.is_innermorphic_to",
  "A.value",
  "BasisVectorIds",
  "BladeMap",
  "CIRCLE",
  "Cl",
  "ConformalMVArray",
  "ConformalMVArray.from_value_array",
  "F2",
  "Frame",
  "GAScene",
  "GradedThing",
  "GradedThingNotOverride",
  "H2",
  "IPython.lib.pretty.pretty",
  "Layout",
  "MVArray",
  "MultiVector",
  "PLANE",
  "POINT",
  "POINT_ON_TORUS",
  "R",
  "R.value",
  "REFORM",
  "REFORM_sequential",
  "TORUS",
  "V",
  "_numba_val_get_left_gmt_matrix",
  "a",
  "a.grades",
  "a.join",
  "a.meet",
  "a.value",
  "abc.abstractmethod",
  "apply_rotor",
  "assign_measurements_to_objects_matrix",
  "associate_points_with_objects",
  "average_estimator",
  "average_objects",
  "b",
  "calculate_S_over_mu",
  "canonical_reordering_sign_euclidean",
  "check_func",
  "clifford.BasisBladeOrder",
  "clifford.BasisVectorIds",
  "clifford.ConformalLayout",
  "clifford.Frame",
  "clifford.Layout",
  "clifford.MVArray",
  "clifford.MVArray.from_value_array",
  "clifford.MultiVector",
  "clifford.MultiVector.gradeInvol",
  "clifford.dg3c.cyclide_ops.items",
  "clifford.dg3c.cyclide_ops_reciprocal.items",
  "clifford.dg3c.e1",
  "clifford.dg3c.e12",
  "clifford.dg3c.e2",
  "clifford.dg3c.e23",
  "clifford.dg3c.e3",
  "clifford.dg3c.e6",
  "clifford.dg3c.e67",
  "clifford.dg3c.e7",
  "clifford.dg3c.e78",
  "clifford.dg3c.e8",
  "clifford.dg3c.layout.metric",
  "clifford.dpga.e12",
  "clifford.dpga.e13",
  "clifford.dpga.e1b2b",
  "clifford.dpga.e1b3b",
  "clifford.dpga.e23",
  "clifford.dpga.e2b3b",
  "clifford.dpga.w0.value",
  "clifford.dpga.w1.value",
  "clifford.g2.layout",
  "clifford.g2.layout.MultiVector",
  "clifford.g2.layout.randomRotor",
  "clifford.g2.layout.randomV",
  "clifford.g3.layout.firstIdx",
  "clifford.g3c.blades",
  "clifford.g3c.down",
  "clifford.g3c.layout",
  "clifford.g3c.layout.basis_names",
  "clifford.g3c.layout.blades",
  "clifford.g3c.layout.einf",
  "clifford.g3c.layout.load_ga_file",
  "clifford.g3c.layout.metric",
  "clifford.g3c.layout.parse_multivector",
  "clifford.g3c.layout.randomMV",
  "clifford.g3c.stuff",
  "clifford.g3c.up",
  "clifford.gp",
  "clifford.tools.g3c.ConformalMVArray",
  "clifford.tools.g3c.apply_rotor",
  "clifford.tools.g3c.cost_functions.object_set_cost_matrix",
  "clifford.tools.g3c.cost_functions.val_object_cost_function",
  "clifford.tools.g3c.cuda.sequential_rotor_estimation_cuda_mvs",
  "clifford.tools.g3c.interpret_multivector_as_object",
  "clifford.tools.g3c.model_matching.assign_measurements_to_objects_matrix",
  "clifford.tools.g3c.project_points_to_plane",
  "clifford.tools.g3c.random_conformal_point",
  "clifford.tools.g3c.random_point_pair",
  "clifford.tools.g3c.random_rotation_rotor",
  "clifford.tools.g3c.rotor_estimation.sequential_object_rotor_estimation",
  "closest_point_on_circle_from_line",
  "closest_point_on_line_from_circle",
  "cls",
  "cls._from_sig",
  "cls.from_function",
  "compare_labels",
  "conformalize",
  "cost_func",
  "count_set_bits",
  "de_keninck_twist",
  "direct_TRS_extraction",
  "dorst_cosh",
  "dorst_motor_estimate",
  "dorst_norm_val",
  "doubledp",
  "down",
  "dst_omt_func",
  "dual_func",
  "enclosing_sphere",
  "estimate_rotor_objects",
  "estimate_rotor_objects_subsample",
  "estimate_rotor_objects_subsample_sequential",
  "estimation_function",
  "euc_dist",
  "f",
  "f.adjoint",
  "f_dual",
  "f_swap",
  "fit_circle",
  "fit_line",
  "fit_plane",
  "fit_sphere",
  "func",
  "functools.reduce",
  "general_exp",
  "general_object_interpolation",
  "generate_dilation_rotor",
  "generate_n_clusters",
  "generate_random_object_cluster",
  "generate_rotation_rotor",
  "generate_translation_rotor",
  "generator",
  "generator.__name__",
  "get_center_from_sphere",
  "get_left_gmt_matrix",
  "get_line_reflection_matrix",
  "get_mult_function",
  "get_nearest_plane_point",
  "get_output_func_f_string",
  "get_radius_from_sphere",
  "get_right_gmt_matrix",
  "gmt_func",
  "gp",
  "intersect_line_and_plane_to_point",
  "iterative_closest_points_circle_line",
  "iterative_closest_points_on_circles",
  "iterative_furthest_points_on_circles",
  "iterative_model_match",
  "iterative_model_match_sequential",
  "join_spheres",
  "klass",
  "lc_func",
  "line_set_cost_cuda_mvs",
  "log",
  "match_by_fingerprint",
  "math.sqrt",
  "method",
  "midpoint_between_lines",
  "motor_between_rounds",
  "mult_with_ninf",
  "mvClass",
  "n_clusters_objects",
  "n_th_rotor_root",
  "normalise_n_minus_1",
  "normalised",
  "numba.cuda.jit",
  "numpy.abs",
  "numpy.absolute",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsinh",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argpartition",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.bitwise_or.reduce",
  "numpy.bool_",
  "numpy.column_stack",
  "numpy.cos",
  "numpy.cross",
  "numpy.diag",
  "numpy.diagonal",
  "numpy.double",
  "numpy.dtype",
  "numpy.e",
  "numpy.empty",
  "numpy.equal",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.float32",
  "numpy.float64",
  "numpy.full",
  "numpy.histogram",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.issubdtype",
  "numpy.linalg.det",
  "numpy.linalg.matrix_rank",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.linspace",
  "numpy.log",
  "numpy.matmul",
  "numpy.max",
  "numpy.multiply",
  "numpy.nanargmin",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.pi",
  "numpy.power",
  "numpy.random.RandomState",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.uniform",
  "numpy.result_type",
  "numpy.roots",
  "numpy.sign",
  "numpy.sin",
  "numpy.sinc",
  "numpy.sinh",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_equal",
  "numpy.uint64",
  "numpy.unravel_index",
  "numpy.vectorize",
  "numpy.zeros",
  "o",
  "obj_gen",
  "obj_gen.__name__",
  "object_cost_function",
  "object_generator",
  "object_set_cost_cuda_mvs",
  "object_set_cost_matrix",
  "object_set_cost_matrix_sum",
  "omt_func",
  "os.path.join",
  "parse_multivector",
  "point_beyond_plane",
  "point_pair_to_end_points",
  "project_points_to_circle",
  "project_points_to_line",
  "project_points_to_plane",
  "project_points_to_sphere",
  "random_bivector",
  "random_circle",
  "random_circle_at_origin",
  "random_conformal_point",
  "random_line",
  "random_line_at_origin",
  "random_plane",
  "random_plane_at_origin",
  "random_point_pair",
  "random_point_pair_at_origin",
  "random_rotation_rotor",
  "random_rotation_translation_rotor",
  "random_sphere",
  "random_sphere_at_origin",
  "random_translation_rotor",
  "rc_func",
  "read_ga_file",
  "rotor",
  "rotor_between_objects",
  "sample_objects",
  "scipy.optimize.minimize",
  "sequential_object_rotor_estimation",
  "sequential_rotor_estimation_cuda",
  "set_bit_indices",
  "simplify_scene",
  "simplify_scene_recursive",
  "sphere_behind_plane",
  "sphere_beyond_plane",
  "sphere_in_sphere",
  "sphere_line_intersect",
  "square_roots_of_rotor",
  "t",
  "translator",
  "type.__new__",
  "types.ModuleType",
  "uniform",
  "unsign_sphere",
  "up",
  "v_new_mv",
  "val_get_left_gmt_matrix",
  "val_get_right_gmt_matrix",
  "val_normalised",
  "val_rotor_between_lines",
  "val_truncated_get_line_reflection_matrix",
  "visualise_n_clusters",
  "warnings.warn",
  "x"
 ],
 "deps": [
  [
   "lime-0.1.1.30-py_1",
   "lime-0.1.1.31-py_1",
   "lime-0.1.1.31-py_2",
   "lime-0.1.1.32-py_0",
   "lime-0.1.1.32-py_1",
   "lime-0.1.1.33-py_0",
   "lime-0.1.1.34-py_0",
   "lime-0.1.1.35-py_0",
   "lime-0.1.1.36-py_0",
   "lime-0.1.1.37-py_0",
   "lime-0.2.0.0-pyh9f0ad1d_0",
   "lime-0.2.0.1-pyh9f0ad1d_0",
   "orange3-3.25.0-py37h3340039_1",
   "orange3-3.25.1-py36h831f99a_0",
   "orange3-3.25.1-py38h950e882_0",
   "orange3-3.26.0-py37h3340039_0",
   "orange3-3.26.0-py38h950e882_0",
   "orange3-3.27.0-py36h831f99a_0"
  ],
  [],
  [
   "typing-3.5.0.1-py34_0",
   "typing-3.6.1-py35_0",
   "typing-3.6.2-py36_0",
   "typing-3.6.4-py27_0",
   "typing-3.6.6-py27_0",
   "typing-3.6.6-py35_0"
  ]
 ]
}