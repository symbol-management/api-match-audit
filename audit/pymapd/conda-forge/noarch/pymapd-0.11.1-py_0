{
 "bad": [
  "TClusterHardwareInfo",
  "TColumn",
  "TColumnType",
  "TCopyParams",
  "TCreateParams",
  "TDBInfo",
  "TDBObject",
  "TDBObjectPermissions",
  "TDashboard",
  "TDashboardGrantees",
  "TDashboardPermissions",
  "TDataFrame",
  "TDetectResult",
  "TFrontendView",
  "TImportStatus",
  "TInsertData",
  "TLicenseInfo",
  "TMapDException",
  "TNodeMemoryInfo",
  "TPendingQuery",
  "TPendingRenderQuery",
  "TPixel",
  "TPixelTableRowResult",
  "TQueryResult",
  "TRenderDatum",
  "TRenderResult",
  "TRenderStepResult",
  "TRow",
  "TServerStatus",
  "TSessionInfo",
  "TStepResult",
  "TStringRow",
  "TTableDetails",
  "TTableMeta",
  "_loaders._build_input_rows",
  "_mutators.get_tdf",
  "_mutators.set_tdf",
  "_pandas_loaders._serialize_arrow_payload",
  "_pandas_loaders.build_input_columnar",
  "_pandas_loaders.build_row_desc",
  "_parsers._bind_parameters",
  "_parsers._extract_col_vals",
  "_parsers._extract_column_details",
  "_parsers._extract_description",
  "_parsers._load_data",
  "_parsers._load_schema",
  "_parsers._parse_tdf_gpu",
  "_utils.date_to_seconds",
  "_utils.datetime_in_precisions",
  "_utils.datetime_to_seconds",
  "_utils.mapd_to_na",
  "_utils.mapd_to_slot",
  "_utils.seconds_to_time",
  "_utils.time_to_seconds",
  "base64.b64encode",
  "collections.abc.Sequence",
  "collections.namedtuple",
  "ctypes.CDLL",
  "ctypes.c_int",
  "ctypes.c_size_t",
  "ctypes.c_void_p",
  "ctypes.cast",
  "ctypes.util.find_library",
  "cudf.comm.gpuarrow.GpuArrowReader",
  "cudf.dataframe.DataFrame",
  "cursor.Cursor",
  "datetime.date",
  "datetime.datetime",
  "datetime.time",
  "datetime.timedelta",
  "err",
  "exceptions.OperationalError",
  "exceptions._translate_exception",
  "ipc.load_buffer",
  "ipc.shmdt",
  "logging.exception",
  "mapd.MapD.Client",
  "mapd.MapD.Iface",
  "mapd.MapD.Processor",
  "mapd.MapD.TCreateParams",
  "mapd.MapD.TDatumType",
  "mapd.MapD.TDeviceType.CPU",
  "mapd.MapD.TDeviceType.GPU",
  "mapd.MapD.all_structs",
  "mapd.MapD.broadcast_serialized_rows_args",
  "mapd.MapD.broadcast_serialized_rows_result",
  "mapd.MapD.check_table_consistency_args",
  "mapd.MapD.check_table_consistency_result",
  "mapd.MapD.checkpoint_args",
  "mapd.MapD.checkpoint_result",
  "mapd.MapD.clear_cpu_memory_args",
  "mapd.MapD.clear_cpu_memory_result",
  "mapd.MapD.clear_gpu_memory_args",
  "mapd.MapD.clear_gpu_memory_result",
  "mapd.MapD.connect_args",
  "mapd.MapD.connect_result",
  "mapd.MapD.create_dashboard_args",
  "mapd.MapD.create_dashboard_result",
  "mapd.MapD.create_frontend_view_args",
  "mapd.MapD.create_frontend_view_result",
  "mapd.MapD.create_link_args",
  "mapd.MapD.create_link_result",
  "mapd.MapD.create_table_args",
  "mapd.MapD.create_table_result",
  "mapd.MapD.deallocate_df_args",
  "mapd.MapD.deallocate_df_result",
  "mapd.MapD.delete_dashboard_args",
  "mapd.MapD.delete_dashboard_result",
  "mapd.MapD.delete_frontend_view_args",
  "mapd.MapD.delete_frontend_view_result",
  "mapd.MapD.detect_column_types_args",
  "mapd.MapD.detect_column_types_result",
  "mapd.MapD.disconnect_args",
  "mapd.MapD.disconnect_result",
  "mapd.MapD.execute_first_step_args",
  "mapd.MapD.execute_first_step_result",
  "mapd.MapD.execute_next_render_step_args",
  "mapd.MapD.execute_next_render_step_result",
  "mapd.MapD.get_all_files_in_archive_args",
  "mapd.MapD.get_all_files_in_archive_result",
  "mapd.MapD.get_all_roles_for_user_args",
  "mapd.MapD.get_all_roles_for_user_result",
  "mapd.MapD.get_dashboard_args",
  "mapd.MapD.get_dashboard_grantees_args",
  "mapd.MapD.get_dashboard_grantees_result",
  "mapd.MapD.get_dashboard_result",
  "mapd.MapD.get_dashboards_args",
  "mapd.MapD.get_dashboards_result",
  "mapd.MapD.get_databases_args",
  "mapd.MapD.get_databases_result",
  "mapd.MapD.get_db_object_privs_args",
  "mapd.MapD.get_db_object_privs_result",
  "mapd.MapD.get_db_objects_for_grantee_args",
  "mapd.MapD.get_db_objects_for_grantee_result",
  "mapd.MapD.get_first_geo_file_in_archive_args",
  "mapd.MapD.get_first_geo_file_in_archive_result",
  "mapd.MapD.get_frontend_view_args",
  "mapd.MapD.get_frontend_view_result",
  "mapd.MapD.get_frontend_views_args",
  "mapd.MapD.get_frontend_views_result",
  "mapd.MapD.get_hardware_info_args",
  "mapd.MapD.get_hardware_info_result",
  "mapd.MapD.get_heap_profile_args",
  "mapd.MapD.get_heap_profile_result",
  "mapd.MapD.get_internal_table_details_args",
  "mapd.MapD.get_internal_table_details_result",
  "mapd.MapD.get_license_claims_args",
  "mapd.MapD.get_license_claims_result",
  "mapd.MapD.get_link_view_args",
  "mapd.MapD.get_link_view_result",
  "mapd.MapD.get_memory_args",
  "mapd.MapD.get_memory_result",
  "mapd.MapD.get_physical_tables_args",
  "mapd.MapD.get_physical_tables_result",
  "mapd.MapD.get_result_row_for_pixel_args",
  "mapd.MapD.get_result_row_for_pixel_result",
  "mapd.MapD.get_roles_args",
  "mapd.MapD.get_roles_result",
  "mapd.MapD.get_row_descriptor_args",
  "mapd.MapD.get_row_descriptor_result",
  "mapd.MapD.get_server_status_args",
  "mapd.MapD.get_server_status_result",
  "mapd.MapD.get_session_info_args",
  "mapd.MapD.get_session_info_result",
  "mapd.MapD.get_status_args",
  "mapd.MapD.get_status_result",
  "mapd.MapD.get_table_descriptor_args",
  "mapd.MapD.get_table_descriptor_result",
  "mapd.MapD.get_table_details_args",
  "mapd.MapD.get_table_details_result",
  "mapd.MapD.get_table_epoch_args",
  "mapd.MapD.get_table_epoch_by_name_args",
  "mapd.MapD.get_table_epoch_by_name_result",
  "mapd.MapD.get_table_epoch_result",
  "mapd.MapD.get_tables_args",
  "mapd.MapD.get_tables_meta_args",
  "mapd.MapD.get_tables_meta_result",
  "mapd.MapD.get_tables_result",
  "mapd.MapD.get_users_args",
  "mapd.MapD.get_users_result",
  "mapd.MapD.get_version_args",
  "mapd.MapD.get_version_result",
  "mapd.MapD.get_views_args",
  "mapd.MapD.get_views_result",
  "mapd.MapD.has_object_privilege_args",
  "mapd.MapD.has_object_privilege_result",
  "mapd.MapD.import_geo_table_args",
  "mapd.MapD.import_geo_table_result",
  "mapd.MapD.import_table_args",
  "mapd.MapD.import_table_result",
  "mapd.MapD.import_table_status_args",
  "mapd.MapD.import_table_status_result",
  "mapd.MapD.insert_data_args",
  "mapd.MapD.insert_data_result",
  "mapd.MapD.interrupt_args",
  "mapd.MapD.interrupt_result",
  "mapd.MapD.load_table_args",
  "mapd.MapD.load_table_binary_args",
  "mapd.MapD.load_table_binary_arrow_args",
  "mapd.MapD.load_table_binary_arrow_result",
  "mapd.MapD.load_table_binary_columnar_args",
  "mapd.MapD.load_table_binary_columnar_result",
  "mapd.MapD.load_table_binary_result",
  "mapd.MapD.load_table_result",
  "mapd.MapD.render_vega_args",
  "mapd.MapD.render_vega_result",
  "mapd.MapD.replace_dashboard_args",
  "mapd.MapD.replace_dashboard_result",
  "mapd.MapD.set_execution_mode_args",
  "mapd.MapD.set_execution_mode_result",
  "mapd.MapD.set_license_key_args",
  "mapd.MapD.set_license_key_result",
  "mapd.MapD.set_table_epoch_args",
  "mapd.MapD.set_table_epoch_by_name_args",
  "mapd.MapD.set_table_epoch_by_name_result",
  "mapd.MapD.set_table_epoch_result",
  "mapd.MapD.share_dashboard_args",
  "mapd.MapD.share_dashboard_result",
  "mapd.MapD.sql_execute_args",
  "mapd.MapD.sql_execute_df_args",
  "mapd.MapD.sql_execute_df_result",
  "mapd.MapD.sql_execute_gdf_args",
  "mapd.MapD.sql_execute_gdf_result",
  "mapd.MapD.sql_execute_result",
  "mapd.MapD.sql_validate_args",
  "mapd.MapD.sql_validate_result",
  "mapd.MapD.start_heap_profile_args",
  "mapd.MapD.start_heap_profile_result",
  "mapd.MapD.start_query_args",
  "mapd.MapD.start_query_result",
  "mapd.MapD.start_render_query_args",
  "mapd.MapD.start_render_query_result",
  "mapd.MapD.stop_heap_profile_args",
  "mapd.MapD.stop_heap_profile_result",
  "mapd.MapD.unshare_dashboard_args",
  "mapd.MapD.unshare_dashboard_result",
  "mapd.ttypes.TClusterHardwareInfo",
  "mapd.ttypes.TColumn",
  "mapd.ttypes.TColumnData",
  "mapd.ttypes.TColumnRange",
  "mapd.ttypes.TColumnType",
  "mapd.ttypes.TCopyParams",
  "mapd.ttypes.TCreateParams",
  "mapd.ttypes.TDBInfo",
  "mapd.ttypes.TDBObject",
  "mapd.ttypes.TDBObjectPermissions",
  "mapd.ttypes.TDashboard",
  "mapd.ttypes.TDashboardGrantees",
  "mapd.ttypes.TDashboardPermissions",
  "mapd.ttypes.TDataBlockPtr",
  "mapd.ttypes.TDataFrame",
  "mapd.ttypes.TDatabasePermissions",
  "mapd.ttypes.TDatum",
  "mapd.ttypes.TDatumType",
  "mapd.ttypes.TDatumType._NAMES_TO_VALUES",
  "mapd.ttypes.TDatumType._VALUES_TO_NAMES",
  "mapd.ttypes.TDatumVal",
  "mapd.ttypes.TDetectResult",
  "mapd.ttypes.TDictionaryGeneration",
  "mapd.ttypes.TEncodingType._NAMES_TO_VALUES",
  "mapd.ttypes.TEncodingType._VALUES_TO_NAMES",
  "mapd.ttypes.TFrontendView",
  "mapd.ttypes.TGpuSpecification",
  "mapd.ttypes.THardwareInfo",
  "mapd.ttypes.TImportStatus",
  "mapd.ttypes.TInsertData",
  "mapd.ttypes.TLicenseInfo",
  "mapd.ttypes.TMapDException",
  "mapd.ttypes.TMemoryData",
  "mapd.ttypes.TNodeMemoryInfo",
  "mapd.ttypes.TPendingQuery",
  "mapd.ttypes.TPendingRenderQuery",
  "mapd.ttypes.TPixel",
  "mapd.ttypes.TPixelTableRowResult",
  "mapd.ttypes.TQueryResult",
  "mapd.ttypes.TRawPixelData",
  "mapd.ttypes.TRawRenderPassDataResult",
  "mapd.ttypes.TRenderDatum",
  "mapd.ttypes.TRenderParseResult",
  "mapd.ttypes.TRenderResult",
  "mapd.ttypes.TRenderStepResult",
  "mapd.ttypes.TRow",
  "mapd.ttypes.TRowSet",
  "mapd.ttypes.TServerStatus",
  "mapd.ttypes.TSessionInfo",
  "mapd.ttypes.TStepResult",
  "mapd.ttypes.TStringRow",
  "mapd.ttypes.TStringValue",
  "mapd.ttypes.TTableDetails",
  "mapd.ttypes.TTableGeneration",
  "mapd.ttypes.TTableMeta",
  "mapd.ttypes.TTablePermissions",
  "mapd.ttypes.TTableType.DELIMITED",
  "mapd.ttypes.TTypeInfo",
  "mapd.ttypes.TVarLen",
  "mapd.ttypes.TViewPermissions",
  "mapd.ttypes.all_structs",
  "math.ceil",
  "numba.cuda.cudadrv.drvapi.cu_ipc_mem_handle",
  "numba.cuda.current_context",
  "numba.cuda.devicearray.DeviceNDArray",
  "numba.cuda.driver.IpcHandle",
  "numpy.array_split",
  "numpy.byte",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.frombuffer",
  "numpy.uint8",
  "packaging.version.Version",
  "pandas.CategoricalDtype",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.api.types.is_bool_dtype",
  "pandas.api.types.is_datetime64_any_dtype",
  "pandas.api.types.is_float_dtype",
  "pandas.api.types.is_integer_dtype",
  "pandas.api.types.is_object_dtype",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "platform.system",
  "pyarrow.BufferOutputStream",
  "pyarrow.RecordBatch",
  "pyarrow.RecordBatch.from_pandas",
  "pyarrow.RecordBatchStreamReader",
  "pyarrow.RecordBatchStreamWriter",
  "pyarrow.Table",
  "pyarrow.foreign_buffer",
  "pyarrow.read_message",
  "pyarrow.read_record_batch",
  "pymapd._pandas_loaders.get_mapd_dtype",
  "pymapd._pandas_loaders.get_mapd_type_from_known",
  "pymapd._pandas_loaders.get_mapd_type_from_object",
  "pymapd._pandas_loaders.thrift_cast",
  "pymapd._parsers.ColumnDetails",
  "pymapd._parsers.Description",
  "pymapd._parsers._format_result_date",
  "pymapd._parsers._format_result_time",
  "pymapd._parsers._format_result_timestamp",
  "pymapd._parsers._thrift_values_to_encodings",
  "pymapd._parsers._thrift_values_to_types",
  "pymapd._parsers._typeattr",
  "pymapd.connection.Connection",
  "pymapd.connection.ConnectionInfo",
  "pymapd.connection.RenderedVega",
  "pymapd.connection._parse_uri",
  "pymapd.cursor.make_row_results_set",
  "pymapd.dtypes.DataType",
  "pymapd.dtypes.Date",
  "pymapd.dtypes.T",
  "pymapd.dtypes.Time",
  "pymapd.dtypes.Timestamp",
  "pymapd.exceptions.DatabaseError",
  "pymapd.exceptions.Error",
  "pymapd.exceptions.ProgrammingError",
  "pymapd.ipc.libc",
  "pymapd.ipc.libc_so",
  "pymapd.ipc.shmat",
  "pymapd.ipc.shmdt",
  "pymapd.ipc.shmget",
  "sqlalchemy.engine.url.make_url",
  "sqlalchemy.text",
  "struct.unpack",
  "sys.version_info",
  "thrift.TRecursive.fix_spec",
  "thrift.Thrift.TApplicationException",
  "thrift.Thrift.TApplicationException.INTERNAL_ERROR",
  "thrift.Thrift.TApplicationException.MISSING_RESULT",
  "thrift.Thrift.TApplicationException.UNKNOWN_METHOD",
  "thrift.Thrift.TException",
  "thrift.Thrift.TMessageType.CALL",
  "thrift.Thrift.TMessageType.EXCEPTION",
  "thrift.Thrift.TMessageType.REPLY",
  "thrift.Thrift.TProcessor",
  "thrift.Thrift.TType.BOOL",
  "thrift.Thrift.TType.DOUBLE",
  "thrift.Thrift.TType.I16",
  "thrift.Thrift.TType.I32",
  "thrift.Thrift.TType.I64",
  "thrift.Thrift.TType.LIST",
  "thrift.Thrift.TType.MAP",
  "thrift.Thrift.TType.STOP",
  "thrift.Thrift.TType.STRING",
  "thrift.Thrift.TType.STRUCT",
  "thrift.protocol.TBinaryProtocol.TBinaryProtocolAccelerated",
  "thrift.protocol.TJSONProtocol.TJSONProtocol",
  "thrift.transport.THttpClient.THttpClient",
  "thrift.transport.TSocket.TSocket",
  "thrift.transport.TSocket.TTransportException",
  "thrift.transport.TTransport.CReadableTransport",
  "thrift.transport.TTransport.TBufferedTransport",
  "thrift.transport.TTransport.TTransportException",
  "time.localtime",
  "types.MethodType"
 ],
 "deps": {
  "TClusterHardwareInfo": [],
  "TColumn": [],
  "TColumnType": [],
  "TCopyParams": [],
  "TCreateParams": [],
  "TDBInfo": [],
  "TDBObject": [],
  "TDBObjectPermissions": [],
  "TDashboard": [],
  "TDashboardGrantees": [],
  "TDashboardPermissions": [],
  "TDataFrame": [],
  "TDetectResult": [],
  "TFrontendView": [],
  "TImportStatus": [],
  "TInsertData": [],
  "TLicenseInfo": [],
  "TMapDException": [],
  "TNodeMemoryInfo": [],
  "TPendingQuery": [],
  "TPendingRenderQuery": [],
  "TPixel": [],
  "TPixelTableRowResult": [],
  "TQueryResult": [],
  "TRenderDatum": [],
  "TRenderResult": [],
  "TRenderStepResult": [],
  "TRow": [],
  "TServerStatus": [],
  "TSessionInfo": [],
  "TStepResult": [],
  "TStringRow": [],
  "TTableDetails": [],
  "TTableMeta": [],
  "_loaders": [],
  "_mutators": [],
  "_pandas_loaders": [],
  "_parsers": [],
  "_utils": [],
  "base64": [],
  "collections": [],
  "ctypes": [],
  "cudf": [],
  "cursor": [],
  "datetime": [],
  "err": [],
  "exceptions": [],
  "ipc": [],
  "logging": [],
  "mapd": [],
  "math": [],
  "numba": [],
  "numpy": [],
  "packaging": [],
  "pandas": [],
  "pkg_resources": [],
  "platform": [],
  "pyarrow": [],
  "pymapd": [],
  "sqlalchemy": [],
  "struct": [],
  "sys": [],
  "thrift": [],
  "time": [],
  "types": []
 }
}