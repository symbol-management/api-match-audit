{
 "bad": [
  "AsyncContextManager",
  "GSSError",
  "OpenSSL.crypto",
  "OpenSSL.crypto.X509Store",
  "OpenSSL.crypto.X509StoreContext",
  "OpenSSL.crypto.X509StoreContextError",
  "SCPError",
  "SFTPError",
  "_bytes",
  "_connect",
  "_digest",
  "_encode_host",
  "_glob",
  "_listen",
  "_lookup_host",
  "_make_block",
  "_parse_path",
  "_read_bytes",
  "_read_string",
  "_read_uint16",
  "_set_key",
  "_set_nonce",
  "_start_remote",
  "_string",
  "_text",
  "_uint16",
  "_update",
  "argparse",
  "argparse.ArgumentParser",
  "asyncio",
  "asyncio.BaseProtocol",
  "asyncio.CancelledError",
  "asyncio.FIRST_COMPLETED",
  "asyncio.IncompleteReadError",
  "asyncio.Lock",
  "asyncio.Protocol",
  "asyncio.Task",
  "asyncio.create_subprocess_exec",
  "asyncio.ensure_future",
  "asyncio.get_event_loop",
  "asyncio.iscoroutine",
  "asyncio.iscoroutinefunction",
  "asyncio.open_unix_connection",
  "asyncio.sleep",
  "asyncio.subprocess.DEVNULL",
  "asyncio.subprocess.PIPE",
  "asyncio.subprocess.STDOUT",
  "asyncio.wait",
  "asyncssh.agent_unix.open_agent",
  "asyncssh.constants.__dict__",
  "asyncssh.listener.create_socks_listener",
  "asyncssh.listener.create_tcp_forward_listener",
  "asyncssh.listener.create_unix_forward_listener",
  "asyncssh.misc.maybe_wait_closed",
  "asyncssh.sftp.match_glob",
  "asyncssh.sftp.start_sftp_client",
  "asyncssh.x11.create_x11_client_listener",
  "asyncssh.x11.create_x11_server_listener",
  "bcrypt",
  "bcrypt.kdf",
  "binascii",
  "binascii.Error",
  "binascii.a2b_base64",
  "binascii.a2b_hex",
  "binascii.b2a_base64",
  "binascii.b2a_hex",
  "cls",
  "codecs",
  "codecs.encode",
  "codecs.getincrementaldecoder",
  "codecs.getincrementalencoder",
  "collections.OrderedDict",
  "collections.namedtuple",
  "conn_factory",
  "connect",
  "connect_reverse",
  "coro",
  "create_connection",
  "create_tcp_local_listener",
  "crypto.DSAPrivateKey.construct",
  "crypto.DSAPrivateKey.generate",
  "crypto.DSAPublicKey.construct",
  "crypto.ECDSAPrivateKey.construct",
  "crypto.ECDSAPrivateKey.generate",
  "crypto.ECDSAPublicKey.construct",
  "crypto.EdDSAPrivateKey.construct",
  "crypto.EdDSAPrivateKey.generate",
  "crypto.EdDSAPublicKey.construct",
  "crypto.RSAPrivateKey.construct",
  "crypto.RSAPrivateKey.generate",
  "crypto.RSAPublicKey.construct",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.exceptions.InvalidTag",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.backends.openssl.backend",
  "cryptography.hazmat.backends.openssl.backend.ed25519_supported",
  "cryptography.hazmat.backends.openssl.backend.ed448_supported",
  "cryptography.hazmat.backends.openssl.backend.poly1305_supported",
  "cryptography.hazmat.backends.openssl.backend.x25519_supported",
  "cryptography.hazmat.backends.openssl.backend.x448_supported",
  "cryptography.hazmat.primitives.asymmetric.dsa",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDH",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.from_encoded_point",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256K1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP384R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP521R1",
  "cryptography.hazmat.primitives.asymmetric.ec.derive_private_key",
  "cryptography.hazmat.primitives.asymmetric.ec.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.ed25519",
  "cryptography.hazmat.primitives.asymmetric.ed448",
  "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
  "cryptography.hazmat.primitives.asymmetric.padding.OAEP",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.x25519",
  "cryptography.hazmat.primitives.asymmetric.x448",
  "cryptography.hazmat.primitives.asymmetric.x448.X448PublicKey.from_public_bytes",
  "cryptography.hazmat.primitives.ciphers.Cipher",
  "cryptography.hazmat.primitives.ciphers.algorithms.AES",
  "cryptography.hazmat.primitives.ciphers.algorithms.ARC4",
  "cryptography.hazmat.primitives.ciphers.algorithms.Blowfish",
  "cryptography.hazmat.primitives.ciphers.algorithms.CAST5",
  "cryptography.hazmat.primitives.ciphers.algorithms.ChaCha20",
  "cryptography.hazmat.primitives.ciphers.algorithms.TripleDES",
  "cryptography.hazmat.primitives.ciphers.modes.CBC",
  "cryptography.hazmat.primitives.ciphers.modes.CTR",
  "cryptography.hazmat.primitives.ciphers.modes.GCM",
  "cryptography.hazmat.primitives.hashes.MD5",
  "cryptography.hazmat.primitives.hashes.SHA1",
  "cryptography.hazmat.primitives.hashes.SHA224",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hashes.SHA384",
  "cryptography.hazmat.primitives.hashes.SHA512",
  "cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC",
  "cryptography.hazmat.primitives.poly1305.Poly1305",
  "cryptography.hazmat.primitives.serialization.Encoding",
  "cryptography.hazmat.primitives.serialization.Encoding.DER",
  "cryptography.hazmat.primitives.serialization.Encoding.Raw",
  "cryptography.hazmat.primitives.serialization.Encoding.X962",
  "cryptography.hazmat.primitives.serialization.NoEncryption",
  "cryptography.hazmat.primitives.serialization.PrivateFormat",
  "cryptography.hazmat.primitives.serialization.PublicFormat",
  "cryptography.hazmat.primitives.serialization.PublicFormat.Raw",
  "cryptography.hazmat.primitives.serialization.PublicFormat.UncompressedPoint",
  "cryptography.x509",
  "cryptography.x509.BasicConstraints",
  "cryptography.x509.CertificateBuilder",
  "cryptography.x509.DNSName",
  "cryptography.x509.ExtendedKeyUsage",
  "cryptography.x509.ExtendedKeyUsageOID.CLIENT_AUTH",
  "cryptography.x509.ExtendedKeyUsageOID.SERVER_AUTH",
  "cryptography.x509.GeneralName",
  "cryptography.x509.IPAddress",
  "cryptography.x509.KeyUsage",
  "cryptography.x509.Name",
  "cryptography.x509.NameAttribute",
  "cryptography.x509.NameOID.COMMON_NAME",
  "cryptography.x509.NameOID.COUNTRY_NAME",
  "cryptography.x509.NameOID.DOMAIN_COMPONENT",
  "cryptography.x509.NameOID.LOCALITY_NAME",
  "cryptography.x509.NameOID.ORGANIZATIONAL_UNIT_NAME",
  "cryptography.x509.NameOID.ORGANIZATION_NAME",
  "cryptography.x509.NameOID.STATE_OR_PROVINCE_NAME",
  "cryptography.x509.ObjectIdentifier",
  "cryptography.x509.RFC822Name",
  "cryptography.x509.RelativeDistinguishedName",
  "cryptography.x509.SubjectAlternativeName",
  "cryptography.x509.UnrecognizedExtension",
  "cryptography.x509.load_der_x509_certificate",
  "cryptography.x509.random_serial_number",
  "ctypes",
  "ctypes.Structure",
  "ctypes.c_char_p",
  "ctypes.c_size_t",
  "ctypes.c_ulonglong",
  "ctypes.cdll.LoadLibrary",
  "ctypes.create_string_buffer",
  "ctypes.util",
  "ctypes.util.find_library",
  "ctypes.wintypes",
  "ctypes.wintypes.DWORD",
  "ctypes.wintypes.LPARAM",
  "curve",
  "datetime.datetime",
  "datetime.datetime.max.replace",
  "datetime.datetime.strptime",
  "datetime.datetime.utcfromtimestamp",
  "datetime.timedelta",
  "datetime.timezone",
  "datetime.timezone.utc",
  "decode_ssh_public_key",
  "decoder",
  "der_decode",
  "der_encode",
  "enc_handler",
  "encoder",
  "errno",
  "errno.EACCES",
  "errno.EIO",
  "errno.ENOENT",
  "errno.ENOTDIR",
  "errno.EOVERFLOW",
  "error_handler",
  "fnmatch.fnmatch",
  "functools",
  "functools.partial",
  "functools.wraps",
  "getpass",
  "getpass.getuser",
  "grp",
  "grp.getgrgid",
  "gssapi.Credentials",
  "gssapi.Name",
  "gssapi.NameType",
  "gssapi.RequirementFlag",
  "gssapi.RequirementFlag.integrity",
  "gssapi.RequirementFlag.mutual_authentication",
  "gssapi.SecurityContext",
  "gssapi.exceptions.GSSError",
  "handler",
  "handler.__name__",
  "hash_alg",
  "hashlib.md5",
  "hashlib.sha1",
  "hashlib.sha256",
  "hashlib.sha384",
  "hashlib.sha512",
  "hmac",
  "hmac.new",
  "int.from_bytes",
  "io",
  "io.DEFAULT_BUFFER_SIZE",
  "ipaddress",
  "ipaddress.ip_address",
  "ipaddress.ip_network",
  "kdf_handler",
  "libnacl",
  "libnacl.crypto_sign",
  "libnacl.crypto_sign_ed25519_PUBLICKEYBYTES",
  "libnacl.crypto_sign_keypair",
  "libnacl.crypto_sign_open",
  "libnacl.crypto_sign_seed_keypair",
  "libnacl.nacl",
  "libnacl.nacl.crypto_onetimeauth_poly1305",
  "libnacl.nacl.crypto_onetimeauth_poly1305_bytes",
  "libnacl.nacl.crypto_onetimeauth_poly1305_keybytes",
  "libnacl.nacl.crypto_onetimeauth_poly1305_verify",
  "libnacl.nacl.crypto_scalarmult_curve25519",
  "libnacl.nacl.crypto_scalarmult_curve25519_base",
  "libnacl.nacl.crypto_scalarmult_curve25519_bytes",
  "libnacl.nacl.crypto_scalarmult_curve25519_scalarbytes",
  "libnacl.nacl.crypto_stream_chacha20",
  "libnacl.nacl.crypto_stream_chacha20_xor_ic",
  "listen",
  "listen_reverse",
  "logging",
  "logging.LoggerAdapter",
  "logging.getLogger",
  "logging.logger.debug1",
  "logging.logger.info",
  "lookup",
  "lookup_xauth",
  "match_glob",
  "mmapfile",
  "os",
  "os.O_APPEND",
  "os.O_CREAT",
  "os.O_EXCL",
  "os.O_RDONLY",
  "os.O_RDWR",
  "os.O_TRUNC",
  "os.O_WRONLY",
  "os.R_OK",
  "os.SEEK_CUR",
  "os.SEEK_END",
  "os.SEEK_SET",
  "os.access",
  "os.chmod",
  "os.chown",
  "os.environ.get",
  "os.fdopen",
  "os.fsdecode",
  "os.fsencode",
  "os.fstat",
  "os.fsync",
  "os.link",
  "os.listdir",
  "os.lstat",
  "os.mkdir",
  "os.open",
  "os.path.basename",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.relpath",
  "os.readlink",
  "os.remove",
  "os.rename",
  "os.replace",
  "os.rmdir",
  "os.stat",
  "os.stat_result",
  "os.statvfs",
  "os.statvfs_result",
  "os.symlink",
  "os.truncate",
  "os.unlink",
  "os.urandom",
  "os.utime",
  "pathlib.Path",
  "pathlib.PurePath",
  "posixpath",
  "posixpath.basename",
  "posixpath.dirname",
  "posixpath.isabs",
  "posixpath.join",
  "posixpath.normpath",
  "pwd",
  "pwd.getpwuid",
  "random.SystemRandom",
  "re",
  "re.IGNORECASE",
  "re.M",
  "re.compile",
  "re.escape",
  "run_handler",
  "session_factory",
  "shlex",
  "shlex.split",
  "signal",
  "signal.decode",
  "socket",
  "socket.AF_INET",
  "socket.AF_INET6",
  "socket.AF_UNSPEC",
  "socket.AI_NUMERICHOST",
  "socket.AI_PASSIVE",
  "socket.IPPROTO_IPV6",
  "socket.IPPROTO_TCP",
  "socket.IPV6_V6ONLY",
  "socket.NI_NUMERICSERV",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_KEEPALIVE",
  "socket.SO_REUSEADDR",
  "socket.TCP_NODELAY",
  "socket.gaierror",
  "socket.getaddrinfo",
  "socket.getfqdn",
  "socket.gethostname",
  "socket.getnameinfo",
  "socket.inet_ntop",
  "socket.socket",
  "sspi.ClientAuth",
  "sspi.ServerAuth",
  "sspi.error",
  "sspicon.ASC_REQ_INTEGRITY",
  "sspicon.ASC_REQ_MUTUAL_AUTH",
  "sspicon.ASC_RET_INTEGRITY",
  "sspicon.ASC_RET_MUTUAL_AUTH",
  "sspicon.ISC_REQ_DELEGATE",
  "sspicon.ISC_REQ_INTEGRITY",
  "sspicon.ISC_REQ_MUTUAL_AUTH",
  "sspicon.ISC_RET_INTEGRITY",
  "sspicon.ISC_RET_MUTUAL_AUTH",
  "sspicon.SECPKG_ATTR_NATIVE_NAMES",
  "stat",
  "stat.S_IMODE",
  "stat.S_ISDIR",
  "stat.S_ISLNK",
  "stat.S_ISREG",
  "stat.filemode",
  "statfunc",
  "string",
  "string.ascii_letters",
  "stringprep",
  "stringprep.in_table_a1",
  "stringprep.in_table_b1",
  "stringprep.in_table_c12",
  "stringprep.in_table_c21_c22",
  "stringprep.in_table_c3",
  "stringprep.in_table_c4",
  "stringprep.in_table_c5",
  "stringprep.in_table_c6",
  "stringprep.in_table_c7",
  "stringprep.in_table_c8",
  "stringprep.in_table_c9",
  "stringprep.in_table_d1",
  "stringprep.in_table_d2",
  "subprocess",
  "subprocess.PIPE",
  "sys",
  "sys.exc_info",
  "sys.platform",
  "tempfile",
  "tempfile.TemporaryDirectory",
  "time",
  "time.ctime",
  "time.localtime",
  "time.monotonic",
  "time.strftime",
  "time.time",
  "unicodedata",
  "unicodedata.east_asian_width",
  "unicodedata.normalize",
  "update_xauth",
  "version.__version__.encode",
  "win32api",
  "win32con",
  "win32con.WM_COPYDATA",
  "win32ui",
  "win32ui.FindWindow",
  "win32ui.error",
  "zlib",
  "zlib.Z_SYNC_FLUSH",
  "zlib.error"
 ],
 "deps": {
  "AsyncContextManager": [],
  "GSSError": [],
  "OpenSSL": [],
  "SCPError": [],
  "SFTPError": [],
  "_bytes": [],
  "_connect": [],
  "_digest": [],
  "_encode_host": [],
  "_glob": [],
  "_listen": [],
  "_lookup_host": [],
  "_make_block": [],
  "_parse_path": [],
  "_read_bytes": [],
  "_read_string": [],
  "_read_uint16": [],
  "_set_key": [],
  "_set_nonce": [],
  "_start_remote": [],
  "_string": [],
  "_text": [],
  "_uint16": [],
  "_update": [],
  "argparse": [],
  "asyncio": [],
  "asyncssh": [],
  "bcrypt": [],
  "binascii": [],
  "cls": [],
  "codecs": [],
  "collections": [],
  "conn_factory": [],
  "connect": [],
  "connect_reverse": [],
  "coro": [],
  "create_connection": [],
  "create_tcp_local_listener": [],
  "crypto": [],
  "cryptography": [],
  "ctypes": [],
  "curve": [],
  "datetime": [],
  "decode_ssh_public_key": [],
  "decoder": [],
  "der_decode": [],
  "der_encode": [],
  "enc_handler": [],
  "encoder": [],
  "errno": [],
  "error_handler": [],
  "fnmatch": [],
  "functools": [],
  "getpass": [],
  "grp": [],
  "gssapi": [],
  "handler": [],
  "hash_alg": [],
  "hashlib": [],
  "hmac": [],
  "int": [],
  "io": [],
  "ipaddress": [],
  "kdf_handler": [],
  "libnacl": [],
  "listen": [],
  "listen_reverse": [],
  "logging": [],
  "lookup": [],
  "lookup_xauth": [],
  "match_glob": [],
  "mmapfile": [],
  "os": [],
  "pathlib": [],
  "posixpath": [],
  "pwd": [],
  "random": [],
  "re": [],
  "run_handler": [],
  "session_factory": [],
  "shlex": [],
  "signal": [],
  "socket": [],
  "sspi": [],
  "sspicon": [],
  "stat": [],
  "statfunc": [],
  "string": [],
  "stringprep": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "time": [],
  "unicodedata": [],
  "update_xauth": [],
  "version": [],
  "win32api": [],
  "win32con": [],
  "win32ui": [],
  "zlib": []
 }
}