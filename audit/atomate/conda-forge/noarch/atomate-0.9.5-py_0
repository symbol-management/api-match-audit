{
 "bad": [
  "ElementComparator",
  "LammpsLog",
  "LammpsRun",
  "LammpsRunner",
  "PackmolRunner",
  "StructureMatcher",
  "_add_metadata",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "atomate.__version__",
  "atomate.common.firetasks.glue_tasks.CopyFiles",
  "atomate.common.firetasks.glue_tasks.CopyFilesFromCalcLoc",
  "atomate.common.firetasks.glue_tasks.CreateFolder",
  "atomate.common.firetasks.glue_tasks.DeleteFiles",
  "atomate.common.firetasks.glue_tasks.GzipDir",
  "atomate.common.firetasks.glue_tasks.PassCalcLocs",
  "atomate.common.firetasks.glue_tasks.PassResult",
  "atomate.common.firetasks.glue_tasks.get_calc_loc",
  "atomate.common.firetasks.parse_outputs.logger",
  "atomate.common.firetasks.run_calc.logger",
  "atomate.feff.database.FeffCalcDb",
  "atomate.feff.database.FeffCalcDb.from_db_file",
  "atomate.feff.firetasks.glue_tasks.CopyFeffOutputs",
  "atomate.feff.firetasks.parse_outputs.AddPathsToFilepadTask",
  "atomate.feff.firetasks.parse_outputs.SpectrumToDbTask",
  "atomate.feff.firetasks.parse_outputs.logger",
  "atomate.feff.firetasks.run_calc.RunFeffDirect",
  "atomate.feff.firetasks.run_calc.logger",
  "atomate.feff.firetasks.write_inputs.WriteEXAFSPaths",
  "atomate.feff.firetasks.write_inputs.WriteFeffFromIOSet",
  "atomate.feff.firetasks.write_inputs.get_feff_input_set_obj",
  "atomate.feff.fireworks.core.EELSFW",
  "atomate.feff.fireworks.core.EXAFSPathsFW",
  "atomate.feff.fireworks.core.XASFW",
  "atomate.feff.workflows.core.get_absorbing_atom_indices",
  "atomate.feff.workflows.core.get_unique_site_indices",
  "atomate.feff.workflows.core.get_wf_xas",
  "atomate.lammps.database.LammpsCalcDb",
  "atomate.lammps.database.LammpsCalcDb.from_db_file",
  "atomate.lammps.drones.LammpsDrone",
  "atomate.lammps.drones.logger",
  "atomate.lammps.firetasks.parse_outputs.LammpsToDB",
  "atomate.lammps.firetasks.parse_outputs.logger",
  "atomate.lammps.firetasks.run_calc.RunLammpsDirect",
  "atomate.lammps.firetasks.run_calc.RunLammpsFake",
  "atomate.lammps.firetasks.run_calc.RunPackmol",
  "atomate.lammps.firetasks.run_calc.logger",
  "atomate.lammps.firetasks.write_inputs.WriteInputFromForceFieldAndTopology",
  "atomate.lammps.firetasks.write_inputs.WriteInputFromIOSet",
  "atomate.lammps.fireworks.core.LammpsFW",
  "atomate.lammps.fireworks.core.LammpsForceFieldFW",
  "atomate.lammps.fireworks.core.PackmolFW",
  "atomate.qchem.database.QChemCalcDb",
  "atomate.qchem.database.QChemCalcDb.from_db_file",
  "atomate.qchem.drones.QChemDrone",
  "atomate.qchem.drones.logger",
  "atomate.qchem.firetasks.fragmenter.FragmentMolecule",
  "atomate.qchem.firetasks.geo_transformations.RotateTorsion",
  "atomate.qchem.firetasks.parse_outputs.QChemToDb",
  "atomate.qchem.firetasks.parse_outputs.logger",
  "atomate.qchem.firetasks.run_calc.RunQChemCustodian",
  "atomate.qchem.firetasks.run_calc.RunQChemFake",
  "atomate.qchem.firetasks.run_calc.logger",
  "atomate.qchem.firetasks.write_inputs.WriteCustomInput",
  "atomate.qchem.firetasks.write_inputs.WriteInputFromIOSet",
  "atomate.qchem.fireworks.core.FragmentFW",
  "atomate.qchem.fireworks.core.FrequencyFW",
  "atomate.qchem.fireworks.core.FrequencyFlatteningOptimizeFW",
  "atomate.qchem.fireworks.core.OptimizeFW",
  "atomate.qchem.fireworks.core.SinglePointFW",
  "atomate.utils.database.CalcDb",
  "atomate.utils.database.logger",
  "atomate.utils.fileio.FileClient",
  "atomate.utils.testing.DB_DIR",
  "atomate.utils.testing.DEBUG_MODE",
  "atomate.utils.testing.MODULE_DIR",
  "atomate.utils.utils.env_chk",
  "atomate.utils.utils.get_a_unique_id",
  "atomate.utils.utils.get_database",
  "atomate.utils.utils.get_fws_and_tasks",
  "atomate.utils.utils.get_logger",
  "atomate.utils.utils.get_meta_from_structure",
  "atomate.utils.utils.get_mongolike",
  "atomate.utils.utils.get_uri",
  "atomate.utils.utils.get_wf_from_spec_dict",
  "atomate.utils.utils.load_class",
  "atomate.utils.utils.recursive_get_result",
  "atomate.vasp.analysis.phonopy.get_phonopy_gibbs",
  "atomate.vasp.analysis.phonopy.get_phonopy_qha",
  "atomate.vasp.analysis.phonopy.get_phonopy_thermal_expansion",
  "atomate.vasp.builders.bandgap_estimation.BandgapEstimationBuilder",
  "atomate.vasp.builders.bandgap_estimation.logger",
  "atomate.vasp.builders.base.AbstractBuilder",
  "atomate.vasp.builders.boltztrap_materials.BoltztrapMaterialsBuilder",
  "atomate.vasp.builders.boltztrap_materials.logger",
  "atomate.vasp.builders.dielectric.DielectricBuilder",
  "atomate.vasp.builders.dielectric.logger",
  "atomate.vasp.builders.examples.run_builders.b",
  "atomate.vasp.builders.examples.run_builders.build_sequence",
  "atomate.vasp.builders.examples.run_builders.dbfile",
  "atomate.vasp.builders.examples.run_builders.module_dir",
  "atomate.vasp.builders.file_materials.logger",
  "atomate.vasp.builders.fix_tasks.FixTasksBuilder",
  "atomate.vasp.builders.fix_tasks.logger",
  "atomate.vasp.builders.materials_descriptor.MaterialsDescriptorBuilder",
  "atomate.vasp.builders.materials_descriptor.logger",
  "atomate.vasp.builders.materials_ehull.logger",
  "atomate.vasp.builders.tags.TagsBuilder",
  "atomate.vasp.builders.tags.logger",
  "atomate.vasp.builders.tasks_materials.TasksMaterialsBuilder",
  "atomate.vasp.builders.tasks_materials.logger",
  "atomate.vasp.builders.tasks_materials.module_dir",
  "atomate.vasp.builders.utils.dbid_to_int",
  "atomate.vasp.builders.utils.dbid_to_str",
  "atomate.vasp.config.ADD_MODIFY_INCAR",
  "atomate.vasp.config.ADD_NAMEFILE",
  "atomate.vasp.config.ADD_WF_METADATA",
  "atomate.vasp.config.CUSTODIAN_MAX_ERRORS",
  "atomate.vasp.config.DB_FILE",
  "atomate.vasp.config.DEFUSE_UNSUCCESSFUL",
  "atomate.vasp.config.GAMMA_VASP_CMD",
  "atomate.vasp.config.HALF_KPOINTS_FIRST_RELAX",
  "atomate.vasp.config.RELAX_MAX_FORCE",
  "atomate.vasp.config.SCRATCH_DIR",
  "atomate.vasp.config.SMALLGAP_KPOINT_MULTIPLY",
  "atomate.vasp.config.STABILITY_CHECK",
  "atomate.vasp.config.STORE_ADDITIONAL_JSON",
  "atomate.vasp.config.STORE_VOLUMETRIC_DATA",
  "atomate.vasp.config.VASP_CMD",
  "atomate.vasp.config.VDW_KERNEL_DIR",
  "atomate.vasp.database.VaspCalcDb",
  "atomate.vasp.database.VaspCalcDb.from_db_file",
  "atomate.vasp.drones.VaspDrone",
  "atomate.vasp.drones.bader_exe_exists",
  "atomate.vasp.drones.logger",
  "atomate.vasp.firetasks.CheckBandgap",
  "atomate.vasp.firetasks.CopyVaspOutputs",
  "atomate.vasp.firetasks.ModifyIncar",
  "atomate.vasp.firetasks.RunVaspCustodian",
  "atomate.vasp.firetasks.VaspToDb",
  "atomate.vasp.firetasks.exchange.HeisenbergModelMapping",
  "atomate.vasp.firetasks.exchange.HeisenbergModelToDb",
  "atomate.vasp.firetasks.exchange.VampireMC",
  "atomate.vasp.firetasks.exchange.VampireToDb",
  "atomate.vasp.firetasks.glue_tasks.CheckBandgap",
  "atomate.vasp.firetasks.glue_tasks.CheckStability",
  "atomate.vasp.firetasks.glue_tasks.CopyVaspOutputs",
  "atomate.vasp.firetasks.glue_tasks.GetInterpolatedPOSCAR",
  "atomate.vasp.firetasks.glue_tasks.GetInterpolatedPOSCAR.interpolate_poscar",
  "atomate.vasp.firetasks.glue_tasks.logger",
  "atomate.vasp.firetasks.glue_tasks.pass_vasp_result",
  "atomate.vasp.firetasks.neb_tasks.RunNEBVaspFake",
  "atomate.vasp.firetasks.neb_tasks.TransferNEBTask",
  "atomate.vasp.firetasks.neb_tasks.VASP_NEB_OUTPUT_FILES",
  "atomate.vasp.firetasks.neb_tasks.VASP_NEB_OUTPUT_SUB_FILES",
  "atomate.vasp.firetasks.neb_tasks.WriteNEBFromEndpoints",
  "atomate.vasp.firetasks.neb_tasks.WriteNEBFromImages",
  "atomate.vasp.firetasks.parse_outputs.BoltztrapToDb",
  "atomate.vasp.firetasks.parse_outputs.ElasticTensorToDb",
  "atomate.vasp.firetasks.parse_outputs.FitEOSToDb",
  "atomate.vasp.firetasks.parse_outputs.GibbsAnalysisToDb",
  "atomate.vasp.firetasks.parse_outputs.JsonToDb",
  "atomate.vasp.firetasks.parse_outputs.MagneticDeformationToDb",
  "atomate.vasp.firetasks.parse_outputs.MagneticOrderingsToDb",
  "atomate.vasp.firetasks.parse_outputs.PolarizationToDb",
  "atomate.vasp.firetasks.parse_outputs.RamanTensorToDb",
  "atomate.vasp.firetasks.parse_outputs.ThermalExpansionCoeffToDb",
  "atomate.vasp.firetasks.parse_outputs.VaspToDb",
  "atomate.vasp.firetasks.parse_outputs.logger",
  "atomate.vasp.firetasks.run_calc.RunBoltztrap",
  "atomate.vasp.firetasks.run_calc.RunNoVasp",
  "atomate.vasp.firetasks.run_calc.RunVaspCustodian",
  "atomate.vasp.firetasks.run_calc.RunVaspDirect",
  "atomate.vasp.firetasks.run_calc.RunVaspFake",
  "atomate.vasp.firetasks.run_calc.logger",
  "atomate.vasp.firetasks.write_inputs.ModifyIncar",
  "atomate.vasp.firetasks.write_inputs.ModifyKpoints",
  "atomate.vasp.firetasks.write_inputs.ModifyPotcar",
  "atomate.vasp.firetasks.write_inputs.UpdateScanRelaxBandgap",
  "atomate.vasp.firetasks.write_inputs.WriteNormalmodeDisplacedPoscar",
  "atomate.vasp.firetasks.write_inputs.WriteTransmutedStructureIOSet",
  "atomate.vasp.firetasks.write_inputs.WriteVaspFromIOSet",
  "atomate.vasp.firetasks.write_inputs.WriteVaspFromIOSetFromInterpolatedPOSCAR",
  "atomate.vasp.firetasks.write_inputs.WriteVaspHSEBSFromPrev",
  "atomate.vasp.firetasks.write_inputs.WriteVaspNMRFromPrev",
  "atomate.vasp.firetasks.write_inputs.WriteVaspNSCFFromPrev",
  "atomate.vasp.firetasks.write_inputs.WriteVaspSOCFromPrev",
  "atomate.vasp.firetasks.write_inputs.WriteVaspStaticFromPrev",
  "atomate.vasp.fireworks.StaticFW",
  "atomate.vasp.fireworks.StaticInterpolateFW",
  "atomate.vasp.fireworks.core.BoltztrapFW",
  "atomate.vasp.fireworks.core.DFPTFW",
  "atomate.vasp.fireworks.core.HSEBSFW",
  "atomate.vasp.fireworks.core.LepsFW",
  "atomate.vasp.fireworks.core.MDFW",
  "atomate.vasp.fireworks.core.NEBFW",
  "atomate.vasp.fireworks.core.NEBRelaxationFW",
  "atomate.vasp.fireworks.core.NonSCFFW",
  "atomate.vasp.fireworks.core.OptimizeFW",
  "atomate.vasp.fireworks.core.RamanFW",
  "atomate.vasp.fireworks.core.SOCFW",
  "atomate.vasp.fireworks.core.ScanOptimizeFW",
  "atomate.vasp.fireworks.core.StaticFW",
  "atomate.vasp.fireworks.core.StaticInterpolateFW",
  "atomate.vasp.fireworks.core.TransmuterFW",
  "atomate.vasp.fireworks.exchange.HeisenbergModelFW",
  "atomate.vasp.fireworks.exchange.VampireCallerFW",
  "atomate.vasp.fireworks.nmr.NMRFW",
  "atomate.vasp.fireworks.polarization.LcalcpolFW",
  "atomate.vasp.powerups.add_additional_fields_to_taskdocs",
  "atomate.vasp.powerups.add_common_powerups",
  "atomate.vasp.powerups.add_modify_incar",
  "atomate.vasp.powerups.add_namefile",
  "atomate.vasp.powerups.add_small_gap_multiply",
  "atomate.vasp.powerups.add_stability_check",
  "atomate.vasp.powerups.add_tags",
  "atomate.vasp.powerups.add_wf_metadata",
  "atomate.vasp.powerups.use_gamma_vasp",
  "atomate.vasp.powerups.use_scratch_dir",
  "atomate.vasp.workflows.base.adsorption.MPSurfaceSet",
  "atomate.vasp.workflows.base.adsorption.get_slab_fw",
  "atomate.vasp.workflows.base.adsorption.get_slab_trans_params",
  "atomate.vasp.workflows.base.adsorption.get_wf_molecules",
  "atomate.vasp.workflows.base.adsorption.get_wf_slab",
  "atomate.vasp.workflows.base.bulk_modulus.get_wf_bulk_modulus",
  "atomate.vasp.workflows.base.core.get_wf",
  "atomate.vasp.workflows.base.core.module_dir",
  "atomate.vasp.workflows.base.deformations.get_wf_deformations",
  "atomate.vasp.workflows.base.elastic.get_default_strain_states",
  "atomate.vasp.workflows.base.elastic.get_wf_elastic_constant",
  "atomate.vasp.workflows.base.exchange.__version__",
  "atomate.vasp.workflows.base.gibbs.get_wf_gibbs_free_energy",
  "atomate.vasp.workflows.base.magnetism.MagneticOrderingsWF",
  "atomate.vasp.workflows.base.magnetism.NiO",
  "atomate.vasp.workflows.base.magnetism.__magnetic_deformation_wf_version__",
  "atomate.vasp.workflows.base.magnetism.__magnetic_ordering_wf_version__",
  "atomate.vasp.workflows.base.magnetism.coords",
  "atomate.vasp.workflows.base.magnetism.get_wf_magnetic_deformation",
  "atomate.vasp.workflows.base.magnetism.latt",
  "atomate.vasp.workflows.base.magnetism.logger",
  "atomate.vasp.workflows.base.magnetism.lpad",
  "atomate.vasp.workflows.base.magnetism.species",
  "atomate.vasp.workflows.base.magnetism.wf_deformation",
  "atomate.vasp.workflows.base.magnetism.wf_orderings",
  "atomate.vasp.workflows.base.neb._update_spec",
  "atomate.vasp.workflows.base.neb.get_wf_neb_from_endpoints",
  "atomate.vasp.workflows.base.neb.get_wf_neb_from_images",
  "atomate.vasp.workflows.base.neb.get_wf_neb_from_structure",
  "atomate.vasp.workflows.base.raman.get_wf_raman_spectra",
  "atomate.vasp.workflows.base.thermal_expansion.get_wf_thermal_expansion",
  "atomate.vasp.workflows.base.thermal_expansion.logger",
  "atomate.vasp.workflows.presets.scan.wf_scan_opt",
  "attribute",
  "bson.ObjectId",
  "cls_",
  "collections.OrderedDict",
  "collections.defaultdict",
  "copy.deepcopy",
  "custodian.Custodian",
  "custodian.qchem.handlers.QChemErrorHandler",
  "custodian.qchem.jobs.QCJob",
  "custodian.qchem.jobs.QCJob.opt_with_frequency_flattener",
  "custodian.vasp.handlers.AliasingErrorHandler",
  "custodian.vasp.handlers.DriftErrorHandler",
  "custodian.vasp.handlers.FrozenJobErrorHandler",
  "custodian.vasp.handlers.MaxForceErrorHandler",
  "custodian.vasp.handlers.MeshSymmetryErrorHandler",
  "custodian.vasp.handlers.NonConvergingErrorHandler",
  "custodian.vasp.handlers.PositiveEnergyErrorHandler",
  "custodian.vasp.handlers.PotimErrorHandler",
  "custodian.vasp.handlers.StdErrHandler",
  "custodian.vasp.handlers.UnconvergedErrorHandler",
  "custodian.vasp.handlers.VaspErrorHandler",
  "custodian.vasp.handlers.WalltimeHandler",
  "custodian.vasp.jobs.VaspJob",
  "custodian.vasp.jobs.VaspJob.double_relaxation_run",
  "custodian.vasp.jobs.VaspJob.full_opt_run",
  "custodian.vasp.jobs.VaspJob.metagga_opt_run",
  "custodian.vasp.jobs.VaspNEBJob",
  "custodian.vasp.validators.VaspFilesValidator",
  "custodian.vasp.validators.VasprunXMLValidator",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.utcnow",
  "fireworks.FWAction",
  "fireworks.FileWriteTask",
  "fireworks.FiretaskBase",
  "fireworks.Firework",
  "fireworks.LaunchPad.auto_load",
  "fireworks.LaunchPad.from_file",
  "fireworks.Workflow",
  "fireworks.Workflow.from_Firework",
  "fireworks.core.firework.FWAction",
  "fireworks.core.firework.FiretaskBase",
  "fireworks.core.firework.Tracker",
  "fireworks.core.firework.Workflow",
  "fireworks.explicit_serialize",
  "fireworks.user_objects.firetasks.filepad_tasks.get_fpad",
  "fireworks.utilities.dict_mods.apply_mod",
  "fireworks.utilities.fw_serializers.DATETIME_HANDLER",
  "fireworks.utilities.fw_utilities.explicit_serialize",
  "fireworks.utilities.fw_utilities.get_slug",
  "fis_cls",
  "fnmatch.fnmatch",
  "glob.glob",
  "gridfs.GridFS",
  "gzip.open",
  "importlib.import_module",
  "io.open",
  "itertools.chain.from_iterable",
  "json.dumps",
  "json.load",
  "json.loads",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.getLogger",
  "math.exp",
  "math.sqrt",
  "monty.io.zopen",
  "monty.json.MSONable.as_dict",
  "monty.json.MontyDecoder",
  "monty.json.MontyEncoder",
  "monty.json.jsanitize",
  "monty.os.cd",
  "monty.os.path.which",
  "monty.os.path.zpath",
  "monty.serialization.dumpfn",
  "monty.serialization.loadfn",
  "monty.shutil.copy_r",
  "monty.shutil.gzip_dir",
  "numpy.abs",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.average",
  "numpy.ceil",
  "numpy.cross",
  "numpy.dot",
  "numpy.identity",
  "numpy.inf",
  "numpy.linalg.eig",
  "numpy.linalg.matrix_rank",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.logical_not",
  "numpy.max",
  "numpy.multiply",
  "numpy.newaxis",
  "numpy.pi",
  "numpy.put",
  "numpy.ravel",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.zeros",
  "os.chdir",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.expandvars",
  "os.path.getmtime",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.putenv",
  "os.remove",
  "os.sep",
  "paramiko.AutoAddPolicy",
  "paramiko.SSHClient",
  "parse_class",
  "phonopy.Phonopy",
  "phonopy.PhonopyQHA",
  "phonopy.structure.atoms.Atoms",
  "phonopy.units.EVAngstromToGPa",
  "process_params",
  "pydash.objects.get",
  "pydash.objects.has",
  "pymatgen.Composition",
  "pymatgen.MPRester",
  "pymatgen.Molecule.from_file",
  "pymatgen.SETTINGS",
  "pymatgen.SETTINGS.get",
  "pymatgen.Structure.from_dict",
  "pymatgen.alchemy.filters.AbstractStructureFilter",
  "pymatgen.alchemy.materials.TransformedStructure",
  "pymatgen.alchemy.transmuters.StandardTransmuter",
  "pymatgen.analysis.adsorption.AdsorbateSiteFinder",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_independent_strains",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_pseudoinverse",
  "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.from_diff_fit",
  "pymatgen.analysis.elasticity.strain.Deformation",
  "pymatgen.analysis.elasticity.strain.Strain",
  "pymatgen.analysis.elasticity.strain.Strain.from_voigt",
  "pymatgen.analysis.elasticity.stress.Stress",
  "pymatgen.analysis.eos.EOS",
  "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend",
  "pymatgen.analysis.ferroelectricity.polarization.Polarization",
  "pymatgen.analysis.ferroelectricity.polarization.get_total_ionic_dipole",
  "pymatgen.analysis.fragmenter.Fragmenter",
  "pymatgen.analysis.graphs.MoleculeGraph.with_local_env_strategy",
  "pymatgen.analysis.local_env.OpenBabelNN",
  "pymatgen.analysis.magnetism.CollinearMagneticStructureAnalyzer",
  "pymatgen.analysis.magnetism.Ordering.NM",
  "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer",
  "pymatgen.analysis.magnetism.analyzer.MagneticStructureEnumerator",
  "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper",
  "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel.from_dict",
  "pymatgen.analysis.magnetism.magnetic_deformation",
  "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox",
  "pymatgen.analysis.structure_analyzer.get_dimensionality",
  "pymatgen.analysis.structure_matcher.ElementComparator",
  "pymatgen.analysis.structure_matcher.StructureMatcher",
  "pymatgen.apps.borg.hive.AbstractDrone",
  "pymatgen.command_line.bader_caller.bader_analysis_from_path",
  "pymatgen.command_line.vampire_caller.VampireCaller",
  "pymatgen.core.Lattice.cubic",
  "pymatgen.core.Structure.from_dict",
  "pymatgen.core.Structure.from_file",
  "pymatgen.core.Structure.from_spacegroup",
  "pymatgen.core.composition.Composition",
  "pymatgen.core.operations.SymmOp.inversion",
  "pymatgen.core.structure.Molecule.from_dict",
  "pymatgen.core.structure.Structure.from_dict",
  "pymatgen.core.structure.Structure.from_file",
  "pymatgen.core.surface.Slab",
  "pymatgen.core.surface.generate_all_slabs",
  "pymatgen.core.tensors.symmetry_reduce",
  "pymatgen.electronic_structure.bandstructure.BandStructure.from_dict",
  "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine",
  "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.from_dict",
  "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_dict",
  "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_files",
  "pymatgen.electronic_structure.boltztrap.BoltztrapRunner",
  "pymatgen.electronic_structure.dos.CompleteDos.from_dict",
  "pymatgen.entries.computed_entries.ComputedEntry",
  "pymatgen.io.babel.BabelMolAdaptor",
  "pymatgen.io.feff.inputs.Atoms.cluster_from_file",
  "pymatgen.io.feff.inputs.Paths",
  "pymatgen.io.feff.inputs.Tags.from_file",
  "pymatgen.io.qchem.inputs.QCInput",
  "pymatgen.io.qchem.inputs.QCInput.from_file",
  "pymatgen.io.qchem.inputs.QCInput.from_multi_jobs_file",
  "pymatgen.io.qchem.outputs.QCOutput",
  "pymatgen.io.qchem.outputs.QCOutput.multiple_outputs_from_file",
  "pymatgen.io.qchem.outputs.check_for_structure_changes",
  "pymatgen.io.vasp.BSVasprun",
  "pymatgen.io.vasp.Incar.from_file",
  "pymatgen.io.vasp.Kpoints.from_file",
  "pymatgen.io.vasp.Locpot.from_file",
  "pymatgen.io.vasp.Outcar",
  "pymatgen.io.vasp.Poscar.from_file",
  "pymatgen.io.vasp.Potcar.from_file",
  "pymatgen.io.vasp.PotcarSingle.from_symbol_and_functional",
  "pymatgen.io.vasp.Vasprun",
  "pymatgen.io.vasp.inputs.Incar.from_file",
  "pymatgen.io.vasp.inputs.Kpoints.automatic_density",
  "pymatgen.io.vasp.inputs.Kpoints.from_file",
  "pymatgen.io.vasp.inputs.Poscar.from_file",
  "pymatgen.io.vasp.inputs.Potcar.from_file",
  "pymatgen.io.vasp.outputs.Chgcar.from_file",
  "pymatgen.io.vasp.sets.MITMDSet",
  "pymatgen.io.vasp.sets.MITRelaxSet",
  "pymatgen.io.vasp.sets.MPHSEBSSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPHSERelaxSet",
  "pymatgen.io.vasp.sets.MPNMRSet",
  "pymatgen.io.vasp.sets.MPNMRSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPNonSCFSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPRelaxSet",
  "pymatgen.io.vasp.sets.MPSOCSet",
  "pymatgen.io.vasp.sets.MPSOCSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPScanRelaxSet",
  "pymatgen.io.vasp.sets.MPStaticSet",
  "pymatgen.io.vasp.sets.MPStaticSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MVLSlabSet",
  "pymatgen.io.vasp.sets.get_vasprun_outcar",
  "pymatgen.symmetry.analyzer.PointGroupAnalyzer",
  "pymatgen.symmetry.analyzer.SpacegroupAnalyzer",
  "pymatgen.transformations.advanced_transformations.SlabTransformation",
  "pymatgen.transformations.standard_transformations.SupercellTransformation.from_scaling_factors",
  "pymatgen_diffusion.neb.io.MVLCINEBEndPointSet",
  "pymatgen_diffusion.neb.io.MVLCINEBSet",
  "pymatgen_diffusion.neb.io.get_endpoint_dist",
  "pymatgen_diffusion.neb.io.get_endpoints_from_index",
  "pymatgen_diffusion.neb.pathfinder.IDPPSolver.from_endpoints",
  "pymongo.ASCENDING",
  "pymongo.DESCENDING",
  "pymongo.MongoClient",
  "pymongo.ReturnDocument.AFTER",
  "qcin_cls",
  "random.randint",
  "re.findall",
  "re.match",
  "re.search",
  "shlex.split",
  "shutil.copy",
  "shutil.copy2",
  "shutil.copyfileobj",
  "shutil.copytree",
  "shutil.rmtree",
  "socket.gethostbyaddr",
  "socket.gethostname",
  "split_abc",
  "subprocess.call",
  "sys.stdout",
  "t_cls",
  "time.time",
  "tqdm.tqdm",
  "traceback.format_exc",
  "unittest.SkipTest",
  "unittest.TestCase",
  "uuid.uuid4",
  "vis_cls",
  "warnings.warn",
  "zlib.compress",
  "zlib.decompress"
 ],
 "deps": {
  "ElementComparator": [],
  "LammpsLog": [],
  "LammpsRun": [],
  "LammpsRunner": [],
  "PackmolRunner": [],
  "StructureMatcher": [],
  "_add_metadata": [],
  "abc": [],
  "atomate": [],
  "attribute": [],
  "bson": [],
  "cls_": [],
  "collections": [],
  "copy": [],
  "custodian": [],
  "datetime": [],
  "fireworks": [],
  "fis_cls": [],
  "fnmatch": [],
  "glob": [],
  "gridfs": [],
  "gzip": [],
  "importlib": [],
  "io": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "math": [],
  "monty": [],
  "numpy": [],
  "os": [],
  "paramiko": [],
  "parse_class": [],
  "phonopy": [],
  "process_params": [],
  "pydash": [],
  "pymatgen": [],
  "pymatgen_diffusion": [],
  "pymongo": [],
  "qcin_cls": [],
  "random": [],
  "re": [],
  "shlex": [],
  "shutil": [],
  "socket": [],
  "split_abc": [],
  "subprocess": [],
  "sys": [],
  "t_cls": [],
  "time": [],
  "tqdm": [],
  "traceback": [],
  "unittest": [],
  "uuid": [],
  "vis_cls": [],
  "warnings": [],
  "zlib": []
 }
}