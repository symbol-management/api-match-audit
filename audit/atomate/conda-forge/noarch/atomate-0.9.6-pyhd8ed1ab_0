{
 "bad": [
  "ElementComparator",
  "LammpsLog",
  "LammpsRun",
  "LammpsRunner",
  "MPSurfaceSet",
  "PackmolRunner",
  "StructureMatcher",
  "_add_metadata",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "atomate.feff.database.FeffCalcDb.from_db_file",
  "atomate.lammps.database.LammpsCalcDb.from_db_file",
  "atomate.qchem.database.QChemCalcDb.from_db_file",
  "atomate.vasp.database.VaspCalcDb.from_db_file",
  "attribute",
  "cls_",
  "collections.OrderedDict",
  "collections.defaultdict",
  "copy",
  "copy.deepcopy",
  "custodian.lobster.handlers.ChargeSpillingValidator",
  "custodian.lobster.handlers.EnoughBandsValidator",
  "custodian.lobster.handlers.LobsterFilesValidator",
  "custodian.lobster.jobs.LobsterJob",
  "custodian.vasp.handlers.IncorrectSmearingHandler",
  "custodian.vasp.handlers.LargeSigmaHandler",
  "custodian.vasp.handlers.ScanMetalHandler",
  "datetime",
  "datetime.datetime",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.utcnow",
  "extract_from_calcs_reversed",
  "fireworks.LaunchPad.auto_load",
  "fireworks.LaunchPad.from_file",
  "fireworks.Workflow.from_Firework",
  "fis_cls",
  "fnmatch.fnmatch",
  "get_absorbing_atom_indices",
  "glob",
  "glob.glob",
  "gridfs",
  "gridfs.GridFS",
  "gzip",
  "gzip.open",
  "importlib.import_module",
  "io.open",
  "itertools.chain",
  "json",
  "json.dumps",
  "json.load",
  "json.loads",
  "logging",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.getLogger",
  "math",
  "math.exp",
  "math.sqrt",
  "numpy",
  "numpy.abs",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.average",
  "numpy.ceil",
  "numpy.cross",
  "numpy.dot",
  "numpy.identity",
  "numpy.inf",
  "numpy.linalg.eig",
  "numpy.linalg.matrix_rank",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.logical_not",
  "numpy.max",
  "numpy.multiply",
  "numpy.newaxis",
  "numpy.pi",
  "numpy.put",
  "numpy.ravel",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_equal",
  "numpy.unique",
  "numpy.zeros",
  "os",
  "os.chdir",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.expandvars",
  "os.path.getmtime",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.putenv",
  "os.remove",
  "os.sep",
  "parse_class",
  "phonopy.Phonopy",
  "phonopy.PhonopyQHA",
  "phonopy.structure.atoms.Atoms",
  "phonopy.units.EVAngstromToGPa",
  "process_params",
  "pymatgen.Composition",
  "pymatgen.MPRester",
  "pymatgen.Molecule",
  "pymatgen.Molecule.from_file",
  "pymatgen.Structure",
  "pymatgen.Structure.from_dict",
  "pymatgen.alchemy.filters.AbstractStructureFilter",
  "pymatgen.alchemy.materials.TransformedStructure",
  "pymatgen.alchemy.transmuters.StandardTransmuter",
  "pymatgen.analysis.adsorption.AdsorbateSiteFinder",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_independent_strains",
  "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_pseudoinverse",
  "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion",
  "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.from_diff_fit",
  "pymatgen.analysis.elasticity.strain.Deformation",
  "pymatgen.analysis.elasticity.strain.Strain",
  "pymatgen.analysis.elasticity.strain.Strain.from_voigt",
  "pymatgen.analysis.elasticity.stress.Stress",
  "pymatgen.analysis.eos.EOS",
  "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend",
  "pymatgen.analysis.ferroelectricity.polarization.Polarization",
  "pymatgen.analysis.ferroelectricity.polarization.get_total_ionic_dipole",
  "pymatgen.analysis.fragmenter.Fragmenter",
  "pymatgen.analysis.graphs.MoleculeGraph",
  "pymatgen.analysis.graphs.MoleculeGraph.with_local_env_strategy",
  "pymatgen.analysis.local_env.OpenBabelNN",
  "pymatgen.analysis.magnetism.CollinearMagneticStructureAnalyzer",
  "pymatgen.analysis.magnetism.Ordering",
  "pymatgen.analysis.magnetism.Ordering.NM",
  "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer",
  "pymatgen.analysis.magnetism.analyzer.MagneticStructureEnumerator",
  "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper",
  "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel",
  "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel.from_dict",
  "pymatgen.analysis.magnetism.magnetic_deformation",
  "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox",
  "pymatgen.analysis.structure_analyzer.get_dimensionality",
  "pymatgen.analysis.structure_matcher.ElementComparator",
  "pymatgen.analysis.structure_matcher.StructureMatcher",
  "pymatgen.apps.borg.hive.AbstractDrone",
  "pymatgen.command_line.bader_caller.bader_analysis_from_path",
  "pymatgen.command_line.critic2_caller.Critic2Caller",
  "pymatgen.command_line.vampire_caller.VampireCaller",
  "pymatgen.core.Lattice",
  "pymatgen.core.Lattice.cubic",
  "pymatgen.core.Molecule",
  "pymatgen.core.Structure",
  "pymatgen.core.Structure.from_dict",
  "pymatgen.core.Structure.from_file",
  "pymatgen.core.Structure.from_spacegroup",
  "pymatgen.core.composition.Composition",
  "pymatgen.core.operations.SymmOp",
  "pymatgen.core.operations.SymmOp.inversion",
  "pymatgen.core.structure.Molecule",
  "pymatgen.core.structure.Molecule.from_dict",
  "pymatgen.core.structure.Structure",
  "pymatgen.core.structure.Structure.from_dict",
  "pymatgen.core.structure.Structure.from_file",
  "pymatgen.core.surface.Slab",
  "pymatgen.core.surface.generate_all_slabs",
  "pymatgen.core.tensors.symmetry_reduce",
  "pymatgen.electronic_structure.bandstructure.BandStructure",
  "pymatgen.electronic_structure.bandstructure.BandStructure.from_dict",
  "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine",
  "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.from_dict",
  "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer",
  "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_dict",
  "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_files",
  "pymatgen.electronic_structure.boltztrap.BoltztrapRunner",
  "pymatgen.electronic_structure.dos.CompleteDos",
  "pymatgen.electronic_structure.dos.CompleteDos.from_dict",
  "pymatgen.entries.computed_entries.ComputedEntry",
  "pymatgen.io.babel.BabelMolAdaptor",
  "pymatgen.io.feff.inputs.Atoms",
  "pymatgen.io.feff.inputs.Atoms.cluster_from_file",
  "pymatgen.io.feff.inputs.Paths",
  "pymatgen.io.feff.inputs.Tags",
  "pymatgen.io.feff.inputs.Tags.from_file",
  "pymatgen.io.lobster.Lobsterin",
  "pymatgen.io.lobster.Lobsterin.from_file",
  "pymatgen.io.lobster.Lobsterin.get_all_possible_basis_functions",
  "pymatgen.io.lobster.Lobsterin.standard_calculations_from_vasp_files",
  "pymatgen.io.lobster.Lobsterout",
  "pymatgen.io.qchem.inputs.QCInput",
  "pymatgen.io.qchem.inputs.QCInput.from_file",
  "pymatgen.io.qchem.inputs.QCInput.from_multi_jobs_file",
  "pymatgen.io.qchem.outputs.QCOutput",
  "pymatgen.io.qchem.outputs.QCOutput.multiple_outputs_from_file",
  "pymatgen.io.qchem.outputs.check_for_structure_changes",
  "pymatgen.io.vasp.BSVasprun",
  "pymatgen.io.vasp.Chgcar",
  "pymatgen.io.vasp.Chgcar.from_dict",
  "pymatgen.io.vasp.Incar",
  "pymatgen.io.vasp.Incar.from_file",
  "pymatgen.io.vasp.Kpoints",
  "pymatgen.io.vasp.Kpoints.from_file",
  "pymatgen.io.vasp.Locpot",
  "pymatgen.io.vasp.Locpot.from_file",
  "pymatgen.io.vasp.Outcar",
  "pymatgen.io.vasp.Poscar",
  "pymatgen.io.vasp.Poscar.from_file",
  "pymatgen.io.vasp.Potcar",
  "pymatgen.io.vasp.Potcar.from_file",
  "pymatgen.io.vasp.PotcarSingle",
  "pymatgen.io.vasp.PotcarSingle.from_symbol_and_functional",
  "pymatgen.io.vasp.Vasprun",
  "pymatgen.io.vasp.inputs.Incar",
  "pymatgen.io.vasp.inputs.Incar.from_file",
  "pymatgen.io.vasp.inputs.Kpoints",
  "pymatgen.io.vasp.inputs.Kpoints.automatic_density",
  "pymatgen.io.vasp.inputs.Kpoints.from_file",
  "pymatgen.io.vasp.inputs.Poscar",
  "pymatgen.io.vasp.inputs.Poscar.from_file",
  "pymatgen.io.vasp.inputs.Potcar",
  "pymatgen.io.vasp.inputs.Potcar.from_file",
  "pymatgen.io.vasp.outputs.Chgcar",
  "pymatgen.io.vasp.outputs.Chgcar.from_file",
  "pymatgen.io.vasp.outputs.Vasprun",
  "pymatgen.io.vasp.sets.LobsterSet",
  "pymatgen.io.vasp.sets.MITMDSet",
  "pymatgen.io.vasp.sets.MITRelaxSet",
  "pymatgen.io.vasp.sets.MPHSEBSSet",
  "pymatgen.io.vasp.sets.MPHSEBSSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPHSERelaxSet",
  "pymatgen.io.vasp.sets.MPNMRSet",
  "pymatgen.io.vasp.sets.MPNMRSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPNonSCFSet",
  "pymatgen.io.vasp.sets.MPNonSCFSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPRelaxSet",
  "pymatgen.io.vasp.sets.MPSOCSet",
  "pymatgen.io.vasp.sets.MPSOCSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MPScanRelaxSet",
  "pymatgen.io.vasp.sets.MPStaticSet",
  "pymatgen.io.vasp.sets.MPStaticSet.from_prev_calc",
  "pymatgen.io.vasp.sets.MVLSlabSet",
  "pymatgen.io.vasp.sets.get_vasprun_outcar",
  "pymatgen.settings.SETTINGS",
  "pymatgen.settings.SETTINGS.get",
  "pymatgen.symmetry.analyzer.PointGroupAnalyzer",
  "pymatgen.symmetry.analyzer.SpacegroupAnalyzer",
  "pymatgen.transformations.advanced_transformations.SlabTransformation",
  "pymatgen.transformations.standard_transformations.SupercellTransformation",
  "pymatgen.transformations.standard_transformations.SupercellTransformation.from_scaling_factors",
  "pymongo",
  "pymongo.ASCENDING",
  "pymongo.DESCENDING",
  "pymongo.MongoClient",
  "pymongo.ReturnDocument",
  "pymongo.ReturnDocument.AFTER",
  "pymongo.uri_parser.parse_uri",
  "qcin_cls",
  "random.randint",
  "re",
  "re.findall",
  "re.match",
  "re.search",
  "shlex",
  "shlex.split",
  "shutil",
  "shutil.copy",
  "shutil.copy2",
  "shutil.copyfileobj",
  "shutil.copytree",
  "shutil.rmtree",
  "socket",
  "socket.gethostbyaddr",
  "socket.gethostname",
  "split_abc",
  "subprocess",
  "subprocess.call",
  "sys",
  "sys.stdout",
  "t_cls",
  "time.time",
  "traceback",
  "traceback.format_exc",
  "typing.Any",
  "typing.List",
  "typing.Optional",
  "typing.Union",
  "unittest",
  "unittest.SkipTest",
  "unittest.TestCase",
  "uuid.uuid4",
  "vis_cls",
  "warnings",
  "warnings.warn",
  "zlib",
  "zlib.compress",
  "zlib.decompress"
 ],
 "deps": {
  "ElementComparator": [],
  "LammpsLog": [],
  "LammpsRun": [],
  "LammpsRunner": [],
  "MPSurfaceSet": [],
  "PackmolRunner": [],
  "StructureMatcher": [],
  "_add_metadata": [],
  "abc": [],
  "atomate": [],
  "attribute": [],
  "bson": [
   "bson/conda-forge/noarch/bson-0.5.7-py_0"
  ],
  "cls_": [],
  "collections": [],
  "copy": [],
  "custodian": [
   "custodian/conda-forge/noarch/custodian-2019.9.23-py_1"
  ],
  "datetime": [],
  "extract_from_calcs_reversed": [],
  "fireworks": [
   "fireworks/conda-forge/noarch/fireworks-1.9.6-py_0"
  ],
  "fis_cls": [],
  "fnmatch": [],
  "get_absorbing_atom_indices": [],
  "glob": [],
  "gridfs": [],
  "gzip": [],
  "importlib": [],
  "io": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "maggma": [
   "maggma/conda-forge/noarch/maggma-0.28.1-pyhd8ed1ab_0"
  ],
  "math": [],
  "monty": [
   "monty/conda-forge/noarch/monty-3.0.4-pyh9f0ad1d_0"
  ],
  "numpy": [],
  "os": [],
  "paramiko": [
   "paramiko/conda-forge/noarch/paramiko-2.7.1-pyh9f0ad1d_1"
  ],
  "parse_class": [],
  "phonopy": [],
  "process_params": [],
  "pydash": [
   "pydash/conda-forge/noarch/pydash-4.9.3-pyh44b312d_0"
  ],
  "pymatgen": [],
  "pymatgen_diffusion": [
   "pymatgen-diffusion/conda-forge/noarch/pymatgen-diffusion-2019.2.28-py_1"
  ],
  "pymongo": [],
  "qcin_cls": [],
  "random": [],
  "re": [],
  "shlex": [],
  "shutil": [],
  "socket": [],
  "split_abc": [],
  "subprocess": [],
  "sys": [],
  "t_cls": [],
  "time": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "traceback": [],
  "typing": [],
  "unittest": [],
  "uuid": [],
  "vis_cls": [],
  "warnings": [],
  "zlib": []
 }
}