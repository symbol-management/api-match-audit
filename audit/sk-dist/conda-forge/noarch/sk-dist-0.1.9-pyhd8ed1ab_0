{
 "bad": [
  "NotFittedError",
  "_defaults._default_encoders",
  "_sample_generator",
  "_store",
  "abc.ABCMeta",
  "analyzer",
  "ast.literal_eval",
  "base._clone",
  "base._get_value",
  "base._parse_partitions",
  "check_is_fitted",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "compute_sample_weight",
  "copy.copy",
  "copy.deepcopy",
  "distribute.validation._check_is_fitted",
  "estimator_type",
  "fot",
  "functools.partial",
  "itertools.compress",
  "itertools.product",
  "klass",
  "numbers.Integral",
  "numbers.Number",
  "numpy.all",
  "numpy.allclose",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.atleast_1d",
  "numpy.average",
  "numpy.bincount",
  "numpy.bool_",
  "numpy.concatenate",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.empty",
  "numpy.float32",
  "numpy.float64",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.in1d",
  "numpy.int",
  "numpy.int32",
  "numpy.isscalar",
  "numpy.ix_",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.ma.MaskedArray",
  "numpy.mean",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.sqrt",
  "numpy.transpose",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Series",
  "pandas.isnull",
  "parallel",
  "predict",
  "predict_proba",
  "preprocessing.FeatureCast",
  "preprocessing.HashingVectorizerChunked",
  "preprocessing.ImputeNull",
  "preprocessing.MultihotEncoder",
  "preprocessing.SelectField",
  "pyspark.sql.functions.col",
  "pytest.mark.skipif",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.hstack",
  "scipy.sparse.issparse",
  "scipy.sparse.vstack",
  "scipy.stats.distributions.expon",
  "scipy.stats.rankdata",
  "scorer",
  "skdist.distribute._defaults._default_encoders.items",
  "sklearn.__version__",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.base.is_classifier",
  "sklearn.datasets.load_breast_cancer",
  "sklearn.datasets.load_digits",
  "sklearn.datasets.load_iris",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.forest.BaseForest",
  "sklearn.ensemble.forest.BaseForest.__init__",
  "sklearn.ensemble.forest.ExtraTreesClassifier",
  "sklearn.ensemble.forest.ExtraTreesClassifier.__init__",
  "sklearn.ensemble.forest.ExtraTreesRegressor",
  "sklearn.ensemble.forest.ExtraTreesRegressor.__init__",
  "sklearn.ensemble.forest.ForestClassifier",
  "sklearn.ensemble.forest.ForestClassifier.__init__",
  "sklearn.ensemble.forest.ForestRegressor",
  "sklearn.ensemble.forest.ForestRegressor.__init__",
  "sklearn.ensemble.forest.RandomForestClassifier",
  "sklearn.ensemble.forest.RandomForestClassifier.__init__",
  "sklearn.ensemble.forest.RandomForestRegressor",
  "sklearn.ensemble.forest.RandomForestRegressor.__init__",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.HashingVectorizer",
  "sklearn.feature_extraction.text.HashingVectorizer.__init__",
  "sklearn.feature_selection.SelectFdr",
  "sklearn.feature_selection.SelectFpr",
  "sklearn.feature_selection.SelectFwe",
  "sklearn.feature_selection.SelectKBest",
  "sklearn.feature_selection.SelectPercentile",
  "sklearn.feature_selection.VarianceThreshold",
  "sklearn.feature_selection.f_classif",
  "sklearn.gaussian_process.kernels.Kernel",
  "sklearn.impute.SimpleImputer",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.metrics.check_scoring",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.GridSearchCV.__init__",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.ParameterGrid",
  "sklearn.model_selection.ParameterSampler",
  "sklearn.model_selection.RandomizedSearchCV",
  "sklearn.model_selection.RandomizedSearchCV.__init__",
  "sklearn.model_selection.check_cv",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass.OneVsOneClassifier",
  "sklearn.multiclass.OneVsOneClassifier.__init__",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.multiclass.OneVsRestClassifier.__init__",
  "sklearn.naive_bayes.GaussianNB",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.FunctionTransformer",
  "sklearn.preprocessing.LabelBinarizer",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.MultiLabelBinarizer",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.normalize",
  "sklearn.tree.ExtraTreeRegressor",
  "sklearn.utils.Bunch",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.metaestimators.if_delegate_has_method",
  "sklearn.utils.multiclass.check_classification_targets",
  "sklearn.utils.safe_sqr",
  "sklearn.utils.shuffle",
  "sklearn.utils.validation.check_X_y",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.indexable",
  "stack_func",
  "sys.modules",
  "time.time",
  "tokenizer",
  "utils._aggregate_score_dicts",
  "utils._check_multimetric_scoring",
  "utils._num_samples",
  "utils._safe_split",
  "utils._score",
  "val",
  "validation._check_estimator",
  "validation._check_is_fitted",
  "validation._check_n_iter",
  "validation._is_arraylike",
  "validation._safe_indexing",
  "validation._validate_models",
  "warn",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xgboost.XGBClassifier"
 ],
 "deps": {
  "NotFittedError": [],
  "_defaults": [],
  "_sample_generator": [],
  "_store": [],
  "abc": [],
  "analyzer": [],
  "ast": [],
  "base": [],
  "check_is_fitted": [],
  "collections": [],
  "compute_sample_weight": [],
  "copy": [],
  "distribute": [],
  "estimator_type": [],
  "fot": [],
  "functools": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-1.0.1-pyhd8ed1ab_0"
  ],
  "klass": [],
  "numbers": [],
  "numpy": [],
  "pandas": [],
  "parallel": [],
  "predict": [],
  "predict_proba": [],
  "preprocessing": [],
  "pyspark": [
   "pyspark/conda-forge/noarch/pyspark-2.4.5-py_0"
  ],
  "pytest": [],
  "scipy": [],
  "scorer": [],
  "skdist": [
   "sk-dist/conda-forge/noarch/sk-dist-0.1.9-pyhd8ed1ab_0"
  ],
  "sklearn": [],
  "stack_func": [],
  "sys": [],
  "time": [],
  "tokenizer": [],
  "utils": [],
  "val": [],
  "validation": [],
  "warn": [],
  "warnings": [],
  "xgboost": []
 }
}