{
 "bad": [
  "CondConvResidual",
  "ConvBnAct",
  "DepthwiseSeparableConv",
  "EdgeResidual",
  "InvertedResidual",
  "PIL",
  "PIL.Image",
  "PIL.Image.AFFINE",
  "PIL.Image.BICUBIC",
  "PIL.Image.BILINEAR",
  "PIL.Image.BOX",
  "PIL.Image.HAMMING",
  "PIL.Image.LANCZOS",
  "PIL.Image.NEAREST",
  "PIL.Image.blend",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "PIL.ImageChops",
  "PIL.ImageEnhance",
  "PIL.ImageEnhance.Brightness",
  "PIL.ImageEnhance.Color",
  "PIL.ImageEnhance.Contrast",
  "PIL.ImageEnhance.Sharpness",
  "PIL.ImageOps",
  "PIL.ImageOps.autocontrast",
  "PIL.ImageOps.equalize",
  "PIL.ImageOps.invert",
  "PIL.ImageOps.posterize",
  "PIL.ImageOps.solarize",
  "PIL.__version__.split",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "a",
  "act_layer",
  "apex.amp",
  "apex.amp.__dict__",
  "apex.amp.state_dict",
  "apex.optimizers.FusedAdam",
  "apex.optimizers.FusedLAMB",
  "apex.optimizers.FusedNovoGrad",
  "apex.optimizers.FusedSGD",
  "avg_pool_fn",
  "b",
  "block",
  "bn",
  "c",
  "collections.OrderedDict",
  "collections.defaultdict",
  "conv",
  "copy.deepcopy",
  "create_fn",
  "csv",
  "csv.DictWriter",
  "fnmatch",
  "fnmatch.filter",
  "functools",
  "functools.partial",
  "get_act_layer",
  "glob",
  "glob.glob",
  "init_bias",
  "init_weight",
  "init_weight_fn",
  "initializer",
  "inplace_abn.functions.inplace_abn",
  "inplace_abn.functions.inplace_abn_sync",
  "input.device",
  "input.dtype",
  "input.flip",
  "input.mul",
  "input.shape",
  "input.size",
  "input.split",
  "itertools.repeat",
  "layer",
  "loader_class",
  "logging",
  "logging.Formatter",
  "logging.Formatter.format",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.debug",
  "logging.error",
  "logging.getLogger",
  "logging.info",
  "logging.root.addHandler",
  "logging.root.setLevel",
  "logging.warning",
  "math",
  "math.ceil",
  "math.cos",
  "math.erf",
  "math.exp",
  "math.floor",
  "math.log",
  "math.pi",
  "math.radians",
  "math.sin",
  "math.sqrt",
  "math.tanh",
  "model_class",
  "module",
  "module_cls",
  "norm_cdf",
  "numpy",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.clip",
  "numpy.divide",
  "numpy.expand_dims",
  "numpy.float32",
  "numpy.log",
  "numpy.ndarray",
  "numpy.power",
  "numpy.prod",
  "numpy.random.beta",
  "numpy.random.choice",
  "numpy.random.dirichlet",
  "numpy.random.randint",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.sum",
  "numpy.uint8",
  "numpy.unique",
  "numpy.zeros",
  "op",
  "operator",
  "os",
  "os.link",
  "os.makedirs",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.unlink",
  "os.walk",
  "random",
  "random.choice",
  "random.gauss",
  "random.randint",
  "random.random",
  "random.uniform",
  "re",
  "re.compile",
  "re.split",
  "round_channels",
  "shutil",
  "sys",
  "sys.modules",
  "tarfile",
  "tarfile.getmembers",
  "tarfile.open",
  "tensorflow",
  "tensorflow.Session",
  "tensorflow.bfloat16",
  "tensorflow.cast",
  "tensorflow.cond",
  "tensorflow.constant",
  "tensorflow.device",
  "tensorflow.equal",
  "tensorflow.float32",
  "tensorflow.greater_equal",
  "tensorflow.image.ResizeMethod.BICUBIC",
  "tensorflow.image.ResizeMethod.BILINEAR",
  "tensorflow.image.convert_image_dtype",
  "tensorflow.image.decode_and_crop_jpeg",
  "tensorflow.image.extract_jpeg_shape",
  "tensorflow.image.random_flip_left_right",
  "tensorflow.image.resize",
  "tensorflow.image.sample_distorted_bounding_box",
  "tensorflow.int32",
  "tensorflow.minimum",
  "tensorflow.name_scope",
  "tensorflow.placeholder",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.shape",
  "tensorflow.stack",
  "tensorflow.string",
  "tensorflow.unstack",
  "torch",
  "torch.Generator",
  "torch.Tensor",
  "torch._six.container_abcs",
  "torch._six.container_abcs.Iterable",
  "torch.arange",
  "torch.autograd.Function",
  "torch.cat",
  "torch.clamp",
  "torch.cuda.is_available",
  "torch.distributed",
  "torch.distributed.ReduceOp.SUM",
  "torch.distributed.all_reduce",
  "torch.distributed.broadcast",
  "torch.empty",
  "torch.empty_like",
  "torch.flatten",
  "torch.float32",
  "torch.from_numpy",
  "torch.full",
  "torch.int64",
  "torch.jit.annotations.List",
  "torch.jit.ignore",
  "torch.jit.is_scripting",
  "torch.jit.script",
  "torch.jit.unused",
  "torch.load",
  "torch.matmul",
  "torch.max",
  "torch.mean",
  "torch.meshgrid",
  "torch.nn",
  "torch.nn.AvgPool2d",
  "torch.nn.BatchNorm2d",
  "torch.nn.Conv2d",
  "torch.nn.Dropout",
  "torch.nn.Flatten",
  "torch.nn.GroupNorm",
  "torch.nn.Identity",
  "torch.nn.Linear",
  "torch.nn.MaxPool2d",
  "torch.nn.Module",
  "torch.nn.ModuleDict",
  "torch.nn.ModuleList",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.nn.Upsample",
  "torch.nn.functional",
  "torch.nn.functional.adaptive_avg_pool2d",
  "torch.nn.functional.adaptive_max_pool2d",
  "torch.nn.functional.avg_pool2d",
  "torch.nn.functional.batch_norm",
  "torch.nn.functional.conv2d",
  "torch.nn.functional.dropout",
  "torch.nn.functional.group_norm",
  "torch.nn.functional.kl_div",
  "torch.nn.functional.log_softmax",
  "torch.nn.functional.max_pool2d",
  "torch.nn.functional.pad",
  "torch.nn.functional.relu",
  "torch.nn.functional.relu6",
  "torch.nn.functional.softmax",
  "torch.nn.functional.softplus",
  "torch.nn.init.constant_",
  "torch.nn.init.kaiming_normal_",
  "torch.nn.init.kaiming_uniform_",
  "torch.nn.init.ones_",
  "torch.nn.init.uniform_",
  "torch.nn.init.zeros_",
  "torch.nn.modules.batchnorm._BatchNorm",
  "torch.nn.modules.instancenorm._InstanceNorm",
  "torch.nn.modules.utils._pair",
  "torch.nn.modules.utils._quadruple",
  "torch.nn.parallel",
  "torch.no_grad",
  "torch.norm",
  "torch.ones_like",
  "torch.optim",
  "torch.optim.Adadelta",
  "torch.optim.Adam",
  "torch.optim.Optimizer",
  "torch.optim.RMSprop",
  "torch.optim.SGD",
  "torch.optim.optimizer.Optimizer",
  "torch.optim.optimizer.required",
  "torch.pow",
  "torch.rand",
  "torch.rand_like",
  "torch.randn",
  "torch.randn_like",
  "torch.reshape",
  "torch.save",
  "torch.sigmoid",
  "torch.softmax",
  "torch.split",
  "torch.sqrt",
  "torch.stack",
  "torch.sum",
  "torch.tanh",
  "torch.tensor",
  "torch.uint8",
  "torch.utils.checkpoint",
  "torch.utils.checkpoint.checkpoint",
  "torch.utils.data",
  "torch.utils.data.Dataset",
  "torch.utils.data.Sampler",
  "torch.utils.model_zoo",
  "torch.utils.model_zoo.load_url",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "torchvision.transforms",
  "torchvision.transforms.CenterCrop",
  "torchvision.transforms.ColorJitter",
  "torchvision.transforms.Compose",
  "torchvision.transforms.Normalize",
  "torchvision.transforms.RandomHorizontalFlip",
  "torchvision.transforms.Resize",
  "torchvision.transforms.ToTensor",
  "torchvision.transforms.functional",
  "torchvision.transforms.functional.resized_crop",
  "transform",
  "types",
  "types.FunctionType",
  "typing.Any",
  "typing.Dict",
  "typing.List",
  "typing.Optional",
  "typing.Tuple",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "CondConvResidual": [],
  "ConvBnAct": [],
  "DepthwiseSeparableConv": [],
  "EdgeResidual": [],
  "InvertedResidual": [],
  "PIL": [],
  "__future__": [],
  "a": [],
  "act_layer": [],
  "apex": [],
  "avg_pool_fn": [],
  "b": [],
  "block": [],
  "bn": [],
  "c": [],
  "collections": [],
  "conv": [],
  "copy": [],
  "create_fn": [],
  "csv": [],
  "fnmatch": [],
  "functools": [],
  "get_act_layer": [],
  "glob": [],
  "init_bias": [],
  "init_weight": [],
  "init_weight_fn": [],
  "initializer": [],
  "inplace_abn": [],
  "input": [],
  "itertools": [],
  "layer": [],
  "loader_class": [],
  "logging": [],
  "math": [],
  "model_class": [],
  "module": [],
  "module_cls": [],
  "norm_cdf": [],
  "numpy": [],
  "op": [],
  "operator": [],
  "os": [],
  "random": [],
  "re": [],
  "round_channels": [],
  "shutil": [],
  "sys": [],
  "tarfile": [],
  "tensorflow": [],
  "torch": [],
  "torchvision": [],
  "transform": [],
  "types": [],
  "typing": [],
  "warnings": []
 }
}