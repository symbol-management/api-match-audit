{
 "bad": [
  "_reassign",
  "analysis.GlobalAutoK",
  "collections.OrderedDict",
  "collections.defaultdict",
  "copy.deepcopy",
  "geopandas.GeoDataFrame",
  "int_coord",
  "itertools.islice",
  "itertools.repeat",
  "libpysal.cg.Chain",
  "libpysal.cg.KDTree",
  "libpysal.cg.Point",
  "libpysal.cg.shapes.Point",
  "libpysal.cg.standalone.get_points_dist",
  "libpysal.common.requires",
  "libpysal.io.open",
  "libpysal.open",
  "libpysal.weights.W",
  "libpysal.weights._contW_lists._get_verts",
  "libpysal.weights.util.get_ids",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "numpy.array",
  "numpy.cumsum",
  "numpy.dot",
  "numpy.empty",
  "numpy.fabs",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.floor",
  "numpy.inf",
  "numpy.int",
  "numpy.linspace",
  "numpy.log10",
  "numpy.min",
  "numpy.nan",
  "numpy.nanmax",
  "numpy.nanmin",
  "numpy.nonzero",
  "numpy.random.uniform",
  "numpy.sqrt",
  "numpy.triu_indices_from",
  "numpy.where",
  "numpy.zeros",
  "os.path.splitext",
  "pickle.dump",
  "pickle.load",
  "rtree.Rtree",
  "shapely.geometry.LineString",
  "shapely.geometry.Point",
  "spaghetti.analysis.FuncBase",
  "spaghetti.analysis.global_auto_k",
  "spaghetti.analysis.upper_triangle_as_vector",
  "spaghetti.network.Network",
  "spaghetti.network.PointPattern",
  "spaghetti.network.SAME_SEGMENT",
  "spaghetti.network.SimulatedPointPattern",
  "spaghetti.network.mst_weighted_sort",
  "spaghetti.network.spanning_tree",
  "spaghetti.util._chain_constr",
  "spaghetti.util.dijkstra",
  "spaghetti.util.get_neighbor_distances",
  "spaghetti.util.msg",
  "spaghetti.util.squared_distance_point_link",
  "tree_has_cycle",
  "util._arcs_as_gdf",
  "util._chain_constr",
  "util._points_as_gdf",
  "util._routes_as_gdf",
  "util.build_chains",
  "util.chain_constr",
  "util.compute_length",
  "util.dijkstra",
  "util.dijkstra_mp",
  "util.generatetree",
  "util.network_has_cycle",
  "util.snap_points_to_links",
  "warnings.warn"
 ],
 "deps": {
  "_reassign": [],
  "analysis": [],
  "collections": [],
  "copy": [],
  "geopandas": [],
  "int_coord": [],
  "itertools": [],
  "libpysal": [],
  "multiprocessing": [],
  "numpy": [],
  "os": [],
  "pickle": [],
  "rtree": [],
  "shapely": [],
  "spaghetti": [],
  "tree_has_cycle": [],
  "util": [],
  "warnings": []
 }
}