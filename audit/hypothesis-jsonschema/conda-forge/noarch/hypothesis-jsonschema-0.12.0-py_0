{
 "bad": [
  "_canonicalise.FALSEY",
  "_canonicalise.HypothesisRefResolutionError",
  "_canonicalise.JSONType",
  "_canonicalise.Schema",
  "_canonicalise.TRUTHY",
  "_canonicalise.TYPE_STRINGS",
  "_canonicalise.canonicalish",
  "_canonicalise.encode_canonical_json",
  "_canonicalise.get_integer_bounds",
  "_canonicalise.get_number_bounds",
  "_canonicalise.get_type",
  "_canonicalise.is_valid",
  "_canonicalise.merged",
  "_canonicalise.resolve_all_refs",
  "compose_lists_with_filter",
  "copy.deepcopy",
  "diff_in_out",
  "diff_keys",
  "fractions.Fraction",
  "from_object_schema",
  "functools.partial",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "json.JSONEncoder",
  "json.dumps",
  "json.encoder._make_iterencode",
  "json.encoder.encode_basestring_ascii",
  "math.ceil",
  "math.copysign",
  "math.floor",
  "math.inf",
  "math.isfinite",
  "operator.add",
  "re.compile",
  "re.error",
  "re.search",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.NoReturn",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "zfill"
 ],
 "deps": {
  "_canonicalise": [],
  "compose_lists_with_filter": [],
  "copy": [],
  "diff_in_out": [],
  "diff_keys": [],
  "fractions": [],
  "from_object_schema": [],
  "functools": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.23.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.23.6-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.27.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.28.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.2-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-6.0.0-pyhd8ed1ab_0"
  ],
  "hypothesis_jsonschema": [
   "hypothesis-jsonschema/conda-forge/noarch/hypothesis-jsonschema-0.12.0-py_0"
  ],
  "itertools": [],
  "json": [],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-py_2"
  ],
  "math": [],
  "operator": [],
  "re": [],
  "typing": [],
  "zfill": []
 }
}