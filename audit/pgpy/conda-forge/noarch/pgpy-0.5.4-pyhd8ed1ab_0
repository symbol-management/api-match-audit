{
 "bad": [
  "ClassProperty",
  "PktGrouper",
  "SDProperty",
  "__builtin__",
  "__builtin__.memoryview",
  "_der_intf",
  "_filter_sigs",
  "_makeobj",
  "_new_len",
  "_new_length",
  "_old_len",
  "_old_length",
  "_parse_len",
  "_preiter",
  "action",
  "binascii",
  "binascii.Error",
  "binascii.hexlify",
  "binascii.unhexlify",
  "bz2",
  "bz2.compress",
  "bz2.decompress",
  "calendar",
  "calendar.timegm",
  "codecs.lookup",
  "collections.abc.Container",
  "collections.abc.Iterable",
  "collections.abc.MutableMapping",
  "collections.abc.Sized",
  "collections.deque",
  "constants.CompressionAlgorithm.Uncompressed",
  "constants.CompressionAlgorithm.ZIP",
  "constants.ECPointFormat.Native",
  "constants.ECPointFormat.Standard",
  "constants.EllipticCurveOID.Curve25519",
  "constants.EllipticCurveOID.Ed25519",
  "constants.EllipticCurveOID.Ed25519.key_size",
  "constants.Features.pgpy_features",
  "constants.HashAlgorithm.SHA256",
  "constants.ImageEncoding.encodingof",
  "constants.KeyFlags.Certify",
  "constants.KeyFlags.EncryptCommunications",
  "constants.KeyFlags.EncryptStorage",
  "constants.KeyFlags.Sign",
  "constants.NotationDataFlags.HumanReadable",
  "constants.PacketTag.Signature",
  "constants.PacketTag.Trust",
  "constants.PubKeyAlgorithm.DSA",
  "constants.PubKeyAlgorithm.ECDH",
  "constants.PubKeyAlgorithm.ECDSA",
  "constants.PubKeyAlgorithm.EdDSA",
  "constants.PubKeyAlgorithm.ElGamal",
  "constants.PubKeyAlgorithm.FormerlyElGamalEncryptOrSign",
  "constants.PubKeyAlgorithm.RSAEncrypt",
  "constants.PubKeyAlgorithm.RSAEncryptOrSign",
  "constants.PubKeyAlgorithm.RSASign",
  "constants.RevocationKeyClass.Normal",
  "constants.RevocationKeyClass.Sensitive",
  "constants.RevocationReason.NotSpecified",
  "constants.S2KGNUExtension.Smartcard",
  "constants.SignatureType.Attestation",
  "constants.SignatureType.BinaryDocument",
  "constants.SignatureType.CanonicalDocument",
  "constants.SignatureType.Casual_Cert",
  "constants.SignatureType.CertRevocation",
  "constants.SignatureType.DirectlyOnKey",
  "constants.SignatureType.Generic_Cert",
  "constants.SignatureType.KeyRevocation",
  "constants.SignatureType.Persona_Cert",
  "constants.SignatureType.Positive_Cert",
  "constants.SignatureType.PrimaryKey_Binding",
  "constants.SignatureType.Standalone",
  "constants.SignatureType.SubkeyRevocation",
  "constants.SignatureType.Subkey_Binding",
  "constants.SignatureType.Timestamp",
  "constants.String2KeyType.GNUExtension",
  "constants.String2KeyType.Iterated",
  "constants.String2KeyType.Salted",
  "constants.String2KeyType.Simple",
  "constants.SymmetricKeyAlgorithm.AES256",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.exceptions.UnsupportedAlgorithm",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.backends.openssl",
  "cryptography.hazmat.backends.openssl.backend",
  "cryptography.hazmat.bindings.openssl.binding.Binding",
  "cryptography.hazmat.primitives.asymmetric.dsa",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDH",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256K1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP384R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP521R1",
  "cryptography.hazmat.primitives.asymmetric.ec._CURVE_TYPES",
  "cryptography.hazmat.primitives.asymmetric.ec.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.ed25519",
  "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.from_private_bytes",
  "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.generate",
  "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.from_public_bytes",
  "cryptography.hazmat.primitives.asymmetric.padding",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmp1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmq1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_iqmp",
  "cryptography.hazmat.primitives.asymmetric.x25519",
  "cryptography.hazmat.primitives.asymmetric.x25519.X25519PrivateKey.from_private_bytes",
  "cryptography.hazmat.primitives.asymmetric.x25519.X25519PrivateKey.generate",
  "cryptography.hazmat.primitives.asymmetric.x25519.X25519PublicKey.from_public_bytes",
  "cryptography.hazmat.primitives.ciphers.Cipher",
  "cryptography.hazmat.primitives.ciphers.algorithms",
  "cryptography.hazmat.primitives.ciphers.algorithms.AES",
  "cryptography.hazmat.primitives.ciphers.algorithms.Blowfish",
  "cryptography.hazmat.primitives.ciphers.algorithms.CAST5",
  "cryptography.hazmat.primitives.ciphers.algorithms.Camellia",
  "cryptography.hazmat.primitives.ciphers.algorithms.IDEA",
  "cryptography.hazmat.primitives.ciphers.algorithms.TripleDES",
  "cryptography.hazmat.primitives.ciphers.modes",
  "cryptography.hazmat.primitives.ciphers.modes.CFB",
  "cryptography.hazmat.primitives.constant_time",
  "cryptography.hazmat.primitives.constant_time.bytes_eq",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.Hash",
  "cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHash",
  "cryptography.hazmat.primitives.keywrap.aes_key_unwrap",
  "cryptography.hazmat.primitives.keywrap.aes_key_wrap",
  "cryptography.hazmat.primitives.padding.PKCS7",
  "cryptography.hazmat.primitives.serialization",
  "cryptography.hazmat.primitives.serialization.Encoding.Raw",
  "cryptography.hazmat.primitives.serialization.NoEncryption",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.Raw",
  "cryptography.hazmat.primitives.serialization.PublicFormat.Raw",
  "cryptography.utils",
  "cryptography.utils.register_interface",
  "ct",
  "enum.Enum",
  "enum.EnumMeta",
  "enum.IntEnum",
  "functools.partial",
  "imghdr",
  "imghdr.what",
  "int.from_bytes",
  "itertools",
  "meth",
  "object.__getattribute__",
  "object.__new__",
  "object.__setattr__",
  "operator",
  "operator.ior",
  "operator.le",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isfile",
  "os.urandom",
  "packet.PrivKeyV4.new",
  "pktgrouper",
  "pyasn1.codec.der.decoder",
  "pyasn1.codec.der.decoder.decode",
  "pyasn1.codec.der.encoder",
  "pyasn1.codec.der.encoder.encode",
  "pyasn1.type.namedtype.NamedType",
  "pyasn1.type.namedtype.NamedTypes",
  "pyasn1.type.univ.Integer",
  "pyasn1.type.univ.ObjectIdentifier",
  "pyasn1.type.univ.Sequence",
  "re.ASCII",
  "re.MULTILINE",
  "re.VERBOSE",
  "singledispatch.singledispatch",
  "six",
  "six.PY2",
  "six.b",
  "six.binary_type",
  "six.iterbytes",
  "six.moves.zip_longest",
  "six.raise_from",
  "six.string_types",
  "six.text_type",
  "six.u",
  "six.with_metaclass",
  "six.wraps",
  "str.__new__",
  "struct.pack",
  "struct.unpack_from",
  "time",
  "types.MPIs.bytes_to_int",
  "types.MPIs.int_to_bytes",
  "warnings.warn",
  "weakref",
  "weakref.ref"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "zlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}