{
 "bad": [
  "_get_col",
  "_return_and_set_cache",
  "_version.get_versions",
  "abc.ABC",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "after_branch_time_mean.AfterBranchTimeMean",
  "base.Normaliser",
  "broadcaster",
  "bs4.BeautifulSoup",
  "cf_units.Unit",
  "cf_units.date2num",
  "cf_units.num2date",
  "cftime.datetime",
  "cftime.num2date",
  "cli_parallel._apply_func",
  "cli_utils.DEFAULT_LOG_FORMAT",
  "cli_utils._check_timesteps_are_monthly",
  "cli_utils._convert_units",
  "cli_utils._find_dirs_meeting_func",
  "cli_utils._get_openscmdf_header",
  "cli_utils._get_openscmdf_metadata_header",
  "cli_utils._get_outfile_dir",
  "cli_utils._get_path_bits",
  "cli_utils._get_timestamp",
  "cli_utils._load_scm_cube",
  "cli_utils._log_options",
  "cli_utils._make_path_if_not_exists",
  "cli_utils._set_crunch_contact_in_results",
  "cli_utils._setup_log_file",
  "cli_utils._write_ascii_file",
  "click.Choice",
  "click.ClickException",
  "click.Path",
  "click.argument",
  "click.echo",
  "click.group",
  "click.option",
  "click.style",
  "cmd.main",
  "cmip5._determine_cmip5_modelling_group",
  "cmip5._get_cmip5_citation_key",
  "cmip5.check_license_cmip5",
  "cmip5.get_cmip5_bibtex_citation",
  "cmip6._get_cmip6_citation_key",
  "cmip6.check_license_cmip6",
  "cmip6.get_cmip6_bibtex_citation",
  "collections.OrderedDict",
  "collections.abc.Mapping",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "concurrent.futures.ProcessPoolExecutor",
  "concurrent.futures.ThreadPoolExecutor",
  "concurrent.futures.as_completed",
  "copy.copy",
  "copy.deepcopy",
  "crunch_from_list",
  "crunching._crunch_data",
  "dask.array.Array",
  "dask.array.broadcast_to",
  "dask.array.ma.average",
  "dask.array.ma.masked_array",
  "dask.config.set",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "dateutil.relativedelta.relativedelta",
  "definitions.NAME_COMPONENTS_SEPARATOR",
  "definitions.OUTPUT_PREFIX",
  "definitions._LAND_FRACTION_REGIONS",
  "definitions._SCM_TIMESERIES_META_COLUMNS",
  "empty",
  "errors.NoLicenseInformationError",
  "errors.NonStandardLicenseError",
  "errors.raise_no_iris_warning",
  "executor_cls",
  "functools.lru_cache",
  "glob.glob",
  "io.BytesIO",
  "io.get_scmcube_helper",
  "io.load_scmrun",
  "io.save_netcdf_scm_nc",
  "iris.Constraint",
  "iris.analysis.Linear",
  "iris.analysis.MEAN",
  "iris.analysis.WeightedAggregator",
  "iris.analysis._build_dask_mdtol_function",
  "iris.analysis.cartography.area_weights",
  "iris.analysis.cartography.wrap_lons",
  "iris.coords.AuxCoord",
  "iris.coords.CellMeasure",
  "iris.coords.DimCoord",
  "iris.cube.Cube",
  "iris.cube.CubeList",
  "iris.exceptions.ConcatenateError",
  "iris.exceptions.ConstraintMismatchError",
  "iris.exceptions.CoordinateMultiDimError",
  "iris.exceptions.CoordinateNotFoundError",
  "iris.experimental.equalise_cubes.equalise_attributes",
  "iris.fileformats.netcdf.NetCDFDataProxy",
  "iris.fileformats.netcdf._get_actual_dtype",
  "iris.fileformats.netcdf._get_cf_var_data",
  "iris.fileformats.netcdf.as_lazy_data",
  "iris.load_cube",
  "iris.save",
  "iris.util.unify_time_units",
  "iris_cube_wrappers.CMIP6Input4MIPsCube",
  "iris_cube_wrappers.CMIP6OutputCube",
  "iris_cube_wrappers.CMIP6OutputCube.get_instance_id",
  "iris_cube_wrappers.MarbleCMIP5Cube",
  "iris_cube_wrappers.ScmCube",
  "iris_cube_wrappers.ScmCube._convert_region_to_area_key",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.izip",
  "itertools.tee",
  "json.dumps",
  "json.loads",
  "logging.DEBUG",
  "logging.FileHandler",
  "logging.Formatter",
  "logging.Handler",
  "logging.NullHandler",
  "logging.captureWarnings",
  "logging.getLogger",
  "mat4py.loadmat",
  "mat4py.savemat",
  "netCDF4.Dataset",
  "netCDF4.default_fillvals",
  "netCDF4.num2date",
  "netcdf_scm._version.version_json",
  "netcdf_scm.citing._process_cmip5_dependency",
  "netcdf_scm.citing._process_cmip6_dependency",
  "netcdf_scm.citing.cmip5._clean_ar5_html",
  "netcdf_scm.citing.cmip5._get_cmip5_citation_key",
  "netcdf_scm.citing.cmip5._load_cmip5_dois",
  "netcdf_scm.citing.cmip5._query_cmip5_doi",
  "netcdf_scm.citing.cmip6._get_cmip6_citation_key",
  "netcdf_scm.citing.cmip6._get_cmip6_doi",
  "netcdf_scm.citing.cmip6._get_title",
  "netcdf_scm.citing.cmip6._query_cmip6",
  "netcdf_scm.citing.cmip6.get_license_info",
  "netcdf_scm.cli.ClickHandler",
  "netcdf_scm.cli.ColorFormatter",
  "netcdf_scm.cli._default_handler",
  "netcdf_scm.cli.cli",
  "netcdf_scm.cli_parallel._apply_func_parallel",
  "netcdf_scm.cli_parallel._apply_func_serially",
  "netcdf_scm.cli_parallel.logger",
  "netcdf_scm.cli_utils.DEFAULT_LOG_FORMAT",
  "netcdf_scm.cli_utils.LOGGER",
  "netcdf_scm.cli_utils._MAGICC_VARIABLE_MAP",
  "netcdf_scm.cli_utils.__version__",
  "netcdf_scm.cli_utils._check_timesteps_are_monthly",
  "netcdf_scm.cli_utils._convert_units",
  "netcdf_scm.cli_utils._do_timeseriestype_operation",
  "netcdf_scm.cli_utils._get_openscmdf_header",
  "netcdf_scm.cli_utils._get_path_bits",
  "netcdf_scm.cli_utils._make_path_if_not_exists",
  "netcdf_scm.cli_utils._skip_file",
  "netcdf_scm.cli_utils._take_area_sum",
  "netcdf_scm.cli_utils._ureg",
  "netcdf_scm.cli_utils._write_mag_file",
  "netcdf_scm.cli_utils._write_mag_file_with_operation",
  "netcdf_scm.cli_utils._write_magicc_input_file",
  "netcdf_scm.cli_utils._write_magicc_input_file_with_operation",
  "netcdf_scm.cli_utils._write_magicc_input_files",
  "netcdf_scm.crunching.logger",
  "netcdf_scm.io._ALL_AVAILABLE_CUBES",
  "netcdf_scm.io._load_helper_and_scm_cubes",
  "netcdf_scm.io.get_scmcube_helper",
  "netcdf_scm.iris_cube_wrappers.ScmCube",
  "netcdf_scm.iris_cube_wrappers._CMIPCube",
  "netcdf_scm.iris_cube_wrappers.__version__",
  "netcdf_scm.iris_cube_wrappers._get_cf_var_data",
  "netcdf_scm.iris_cube_wrappers.logger",
  "netcdf_scm.mat4py.loadmat.ParseError",
  "netcdf_scm.mat4py.loadmat.asstr",
  "netcdf_scm.mat4py.loadmat.basestring",
  "netcdf_scm.mat4py.loadmat.compressed_numeric",
  "netcdf_scm.mat4py.loadmat.eof",
  "netcdf_scm.mat4py.loadmat.etypes",
  "netcdf_scm.mat4py.loadmat.inv_etypes",
  "netcdf_scm.mat4py.loadmat.inv_mclasses",
  "netcdf_scm.mat4py.loadmat.ispy2",
  "netcdf_scm.mat4py.loadmat.numeric_class_etypes",
  "netcdf_scm.mat4py.loadmat.read_cell_array",
  "netcdf_scm.mat4py.loadmat.read_char_array",
  "netcdf_scm.mat4py.loadmat.read_element_tag",
  "netcdf_scm.mat4py.loadmat.read_elements",
  "netcdf_scm.mat4py.loadmat.read_file_header",
  "netcdf_scm.mat4py.loadmat.read_header",
  "netcdf_scm.mat4py.loadmat.read_numeric_array",
  "netcdf_scm.mat4py.loadmat.read_struct_array",
  "netcdf_scm.mat4py.loadmat.read_var_array",
  "netcdf_scm.mat4py.loadmat.read_var_header",
  "netcdf_scm.mat4py.loadmat.squeeze",
  "netcdf_scm.mat4py.loadmat.unpack",
  "netcdf_scm.mat4py.savemat.asbytes",
  "netcdf_scm.mat4py.savemat.basestring",
  "netcdf_scm.mat4py.savemat.diff",
  "netcdf_scm.mat4py.savemat.etypes",
  "netcdf_scm.mat4py.savemat.guess_header",
  "netcdf_scm.mat4py.savemat.isarray",
  "netcdf_scm.mat4py.savemat.mclasses",
  "netcdf_scm.mat4py.savemat.numeric_class_etypes",
  "netcdf_scm.mat4py.savemat.write_cell_array",
  "netcdf_scm.mat4py.savemat.write_char_array",
  "netcdf_scm.mat4py.savemat.write_compressed_var_array",
  "netcdf_scm.mat4py.savemat.write_elements",
  "netcdf_scm.mat4py.savemat.write_file_header",
  "netcdf_scm.mat4py.savemat.write_numeric_array",
  "netcdf_scm.mat4py.savemat.write_struct_array",
  "netcdf_scm.mat4py.savemat.write_var_array",
  "netcdf_scm.mat4py.savemat.write_var_data",
  "netcdf_scm.mat4py.savemat.write_var_header",
  "netcdf_scm.normalisation.running_mean.LOGGER",
  "netcdf_scm.output.logger",
  "netcdf_scm.retractions.ESGF_NODE",
  "netcdf_scm.retractions.LOGGER",
  "netcdf_scm.retractions._create_search_url",
  "netcdf_scm.retractions._get_dependencies",
  "netcdf_scm.retractions._perform_esgf_queries",
  "netcdf_scm.retractions._query_esgf",
  "netcdf_scm.retractions.check_retractions",
  "netcdf_scm.stitching._do_stitching",
  "netcdf_scm.stitching._get_parent_path_base",
  "netcdf_scm.stitching._get_stitched_openscmdf_metadata_header",
  "netcdf_scm.stitching._load_scmrun_and_add_source_file",
  "netcdf_scm.stitching._make_metadata_uniform",
  "netcdf_scm.stitching._normalise_timeseries_against_picontrol",
  "netcdf_scm.stitching.get_branch_time",
  "netcdf_scm.stitching.get_continuous_timeseries_with_meta",
  "netcdf_scm.stitching.get_parent_file_path",
  "netcdf_scm.stitching.get_parent_replacements",
  "netcdf_scm.stitching.logger_stitching",
  "netcdf_scm.stitching.step_up_family_tree",
  "netcdf_scm.utils._adjust_gregorian_year_zero_units",
  "netcdf_scm.utils._assert_only_cube_dim_coord_is_time",
  "netcdf_scm.utils._cftime_conversion",
  "netcdf_scm.utils._get_normalising_factor",
  "netcdf_scm.utils.broadcast_onto_lat_lon_grid",
  "netcdf_scm.utils.cube_lat_lon_grid_compatible_with_array",
  "netcdf_scm.utils.logger",
  "netcdf_scm.weights.CubeWeightCalculator",
  "netcdf_scm.weights.InvalidWeightsError",
  "netcdf_scm.weights.WEIGHTS_FUNCTIONS_WITHOUT_AREA_WEIGHTING",
  "netcdf_scm.weights._DEFAULT_SFTLF_FILE",
  "netcdf_scm.weights._check_surface_fraction_bounds_and_shape",
  "netcdf_scm.weights.get_ar6_region_weights",
  "netcdf_scm.weights.get_binary_nh_weights",
  "netcdf_scm.weights.get_default_sftlf_cube",
  "netcdf_scm.weights.get_land_weights",
  "netcdf_scm.weights.get_nh_weights",
  "netcdf_scm.weights.get_ocean_weights",
  "netcdf_scm.weights.get_sh_weights",
  "netcdf_scm.weights.get_weights_for_area",
  "netcdf_scm.weights.get_world_weights",
  "netcdf_scm.weights.has_regionmask",
  "netcdf_scm.weights.logger",
  "netcdf_scm.weights.multiply_weights",
  "netcdf_scm.weights.region_name",
  "netcdf_scm.weights.subtract_weights",
  "netcdf_scm.wranglers.get_tuningstruc_name_from_df",
  "netcdf_scm.wranglers.logger",
  "netcdf_scm.wrangling._do_magicc_wrangling",
  "netcdf_scm.wrangling._get_blended_model_regexp",
  "netcdf_scm.wrangling._tuningstrucs_blended_model_wrangling_inner_loop",
  "netcdf_scm.wrangling.logger",
  "normalisation.get_normaliser",
  "numpy.array",
  "numpy.asarray",
  "numpy.broadcast_to",
  "numpy.equal",
  "numpy.floor",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.logical_or",
  "numpy.ma.average",
  "numpy.ma.masked_array",
  "numpy.ones",
  "numpy.outer",
  "numpy.prod",
  "numpy.str",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.timedelta64",
  "numpy.transpose",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.zeros",
  "openscm_units.unit_registry",
  "os.listdir",
  "os.makedirs",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "os.remove",
  "os.sep",
  "os.sep.join",
  "os.walk",
  "output.OutputFileDatabase",
  "packaging.version.parse",
  "pandas.DataFrame",
  "pandas.Index",
  "pandas.concat",
  "pandas.read_csv",
  "pymagicc.__version__",
  "pymagicc.io.MAGICCData",
  "re.compile",
  "re.escape",
  "re.match",
  "regionmask.__version__",
  "regionmask.defined_regions.ar6.all",
  "regionmask.defined_regions.ar6.all.abbrevs",
  "requests.exceptions.HTTPError",
  "requests.get",
  "retractions._get_dependencies",
  "running_mean.NormaliserRunningMean",
  "running_mean_dedrift.NormaliserRunningMeanDedrift",
  "scmdata.ScmRun",
  "scmdata.run_append",
  "stitching._stitch_netcdf_scm_ncs",
  "struct.calcsize",
  "struct.pack",
  "struct.unpack",
  "sys.byteorder",
  "time.gmtime",
  "time.localtime",
  "time.strftime",
  "tqdm.autonotebook.tqdm",
  "tqdm.tqdm",
  "urllib.parse.urlencode",
  "utils._check_cube_and_adjust_if_needed",
  "utils._vector_cftime_conversion",
  "utils.assert_all_time_axes_same",
  "utils.cube_lat_lon_grid_compatible_with_array",
  "utils.get_cube_timeseries_data",
  "utils.get_scm_cube_time_axis_in_calendar",
  "utils.take_lat_lon_mean",
  "utils.unify_lat_lon",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "weight_a",
  "weight_b",
  "weights.AreaSurfaceFractionWeightCalculator",
  "weights.AreaWeightCalculator",
  "weights.DEFAULT_REGIONS",
  "weights.InvalidWeightsError",
  "weights_func",
  "weights_to_subtract",
  "wranglers.convert_scmdf_to_tuningstruc",
  "wrangling._do_wrangling",
  "wrangling._tuningstrucs_blended_model_wrangling",
  "xarray.DataArray",
  "xarray.DataArray.from_iris",
  "xarray.open_dataset",
  "zlib.compress",
  "zlib.decompressobj"
 ],
 "deps": {
  "_get_col": [],
  "_return_and_set_cache": [],
  "_version": [],
  "abc": [],
  "after_branch_time_mean": [],
  "base": [],
  "broadcaster": [],
  "bs4": [],
  "cf_units": [],
  "cftime": [],
  "cli_parallel": [],
  "cli_utils": [],
  "click": [],
  "cmd": [],
  "cmip5": [],
  "cmip6": [],
  "collections": [],
  "concurrent": [],
  "copy": [],
  "crunch_from_list": [],
  "crunching": [],
  "dask": [],
  "datetime": [],
  "dateutil": [],
  "definitions": [],
  "empty": [],
  "errors": [],
  "executor_cls": [],
  "functools": [],
  "glob": [],
  "io": [],
  "iris": [],
  "iris_cube_wrappers": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "mat4py": [],
  "netCDF4": [],
  "netcdf_scm": [],
  "normalisation": [],
  "numpy": [],
  "openscm_units": [],
  "os": [],
  "output": [],
  "packaging": [],
  "pandas": [],
  "pymagicc": [],
  "re": [],
  "regionmask": [],
  "requests": [],
  "retractions": [],
  "running_mean": [],
  "running_mean_dedrift": [],
  "scmdata": [],
  "stitching": [],
  "struct": [],
  "sys": [],
  "time": [],
  "tqdm": [],
  "urllib": [],
  "utils": [],
  "warnings": [],
  "weight_a": [],
  "weight_b": [],
  "weights": [],
  "weights_func": [],
  "weights_to_subtract": [],
  "wranglers": [],
  "wrangling": [],
  "xarray": [],
  "zlib": []
 }
}