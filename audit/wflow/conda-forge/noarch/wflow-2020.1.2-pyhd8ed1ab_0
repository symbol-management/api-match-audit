{
 "bad": [
  "Gzip",
  "JC_soilMoisture",
  "JC_solarRadiation",
  "JC_temperature",
  "JC_vapourDeficit",
  "JarvisCoefficients.calcEp",
  "JarvisCoefficients.calcEpSnow",
  "JarvisCoefficients.calcEpSnowHour",
  "JarvisCoefficients.calcEu",
  "PCR2netCDF",
  "SnowPackHBV",
  "WflowModel",
  "accucapacityflux",
  "accucapacitystate",
  "add_all_nodes",
  "add_node",
  "append",
  "builtins",
  "builtins.abs",
  "cftime",
  "cftime.date2index",
  "cftime.date2num",
  "cftime.num2date",
  "configget",
  "configsection",
  "configset",
  "cos",
  "datetime2str",
  "delete",
  "detdrainlength",
  "detdrainwidth",
  "downscale_evaporation",
  "dynamicwaveh",
  "dynamicwaveq",
  "estimate_iterations_kin_wave",
  "findFirstYearInNCTime",
  "findLastYearInNCTime",
  "find_outlet",
  "gc",
  "gc.collect",
  "gc.garbage",
  "getFullPath",
  "getMapAttributesALL",
  "getRowColPoint",
  "getValAtPoint",
  "getcols",
  "getgridparams",
  "getrows",
  "glacierHBV",
  "idtoid",
  "kin_wave",
  "kinematic_wave",
  "kinematic_wave_ssf",
  "lddcreate_save",
  "ldddist",
  "legend",
  "ln",
  "log",
  "math.max",
  "naturalLake",
  "netCDF4.Dataset",
  "netcdfinput",
  "netcdfinputstates",
  "netcdfinputstatic",
  "netcdfoutput",
  "netcdfoutputstatic",
  "numba.core.errors.NumbaPendingDeprecationWarning",
  "numpy.NaN",
  "numpy.absolute",
  "numpy.char.array",
  "numpy.char.count",
  "numpy.char.find",
  "numpy.emimap.astype",
  "numpy.float32",
  "numpy.float64",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.logical_not",
  "numpy.maximum",
  "numpy.minimum",
  "numpy.nan",
  "numpy.power",
  "os.chdir",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.sep.join",
  "os.stat",
  "os.system",
  "osgeo.gdal.GDT_Float32",
  "osgeo.gdal.GDT_Int32",
  "pcraster",
  "pcraster.Nominal",
  "pcraster.Scalar",
  "pcraster._pcraster.Field",
  "pcraster.abs",
  "pcraster.accucapacityflux",
  "pcraster.accucapacitystate",
  "pcraster.accuflux",
  "pcraster.accutraveltimeflux",
  "pcraster.accutraveltimestate",
  "pcraster.acos",
  "pcraster.areaaverage",
  "pcraster.areamajority",
  "pcraster.areamaximum",
  "pcraster.areaminimum",
  "pcraster.areatotal",
  "pcraster.aspect",
  "pcraster.atan",
  "pcraster.boolean",
  "pcraster.catchmenttotal",
  "pcraster.cellarea",
  "pcraster.celllength",
  "pcraster.cellvalue",
  "pcraster.clump",
  "pcraster.cos",
  "pcraster.cover",
  "pcraster.defined",
  "pcraster.downstream",
  "pcraster.downstreamdist",
  "pcraster.exp",
  "pcraster.framework",
  "pcraster.framework.DynamicModel",
  "pcraster.framework.frameworkBase.FrameworkBase",
  "pcraster.framework.generateNameT",
  "pcraster.framework.getCellValue",
  "pcraster.ifthen",
  "pcraster.ifthenelse",
  "pcraster.inversedistance",
  "pcraster.kinematic",
  "pcraster.ldd",
  "pcraster.lddcreate",
  "pcraster.ldddist",
  "pcraster.lddmask",
  "pcraster.lddrepair",
  "pcraster.ln",
  "pcraster.log10",
  "pcraster.lookuplinear",
  "pcraster.lookupnominal",
  "pcraster.lookupscalar",
  "pcraster.mapmaximum",
  "pcraster.mapminimum",
  "pcraster.mapnormal",
  "pcraster.maptotal",
  "pcraster.max",
  "pcraster.min",
  "pcraster.nominal",
  "pcraster.numpy2pcr",
  "pcraster.ordinal",
  "pcraster.pcr2numpy",
  "pcraster.pcr_as_numpy",
  "pcraster.pcrand",
  "pcraster.pcror",
  "pcraster.readmap",
  "pcraster.report",
  "pcraster.rounddown",
  "pcraster.roundup",
  "pcraster.scalar",
  "pcraster.setclone",
  "pcraster.setglobaloption",
  "pcraster.sin",
  "pcraster.slope",
  "pcraster.spatial",
  "pcraster.spreadzone",
  "pcraster.sqrt",
  "pcraster.streamorder",
  "pcraster.subcatchment",
  "pcraster.tan",
  "pcraster.timeinputscalar",
  "pcraster.uniqueid",
  "pcraster.upstream",
  "pcraster.windowaverage",
  "pcraster.windowtotal",
  "pcraster.xcoordinate",
  "pcraster.ycoordinate",
  "pit",
  "pylab.clf",
  "pylab.plot",
  "pylab.savefig",
  "pylab.title",
  "rainfall_interception_gash",
  "rainfall_interception_modrut",
  "readtss",
  "removeFinishedProcesses",
  "resistenceAeroD",
  "sCurve",
  "save",
  "savetxt",
  "set_dd",
  "show",
  "simplereservoir",
  "spreadzone",
  "sqr",
  "struct.pack",
  "subcatch",
  "sum_list_cover",
  "sys",
  "sys.argv",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.stdout.write",
  "time",
  "time.altzone",
  "time.gmtime",
  "time.strftime",
  "timedelta",
  "timedelta2str",
  "title",
  "unique",
  "virtualOS.MV",
  "virtualOS.getFullPath",
  "virtualOS.getMinMaxMean",
  "virtualOS.getValDivZero",
  "virtualOS.netcdf2PCRobjClone",
  "virtualOS.netcdf2PCRobjCloneWithoutTime",
  "virtualOS.readPCRmapClone",
  "virtualOS.secondsPerDay",
  "virtualOS.smallNumber",
  "virtualOS.waterBalanceCheck",
  "wf_DynamicFramework",
  "wflow.__init__.basedir",
  "wflow.__init__.gdal_data_path",
  "wflow.__init__.proj_data_dir",
  "wflow.pcrglobwb.landSurface.coverTypes",
  "wflow.pcrglobwb.landSurface.interceptStor",
  "wflow.pcrglobwb.landSurface.interflow",
  "wflow.pcrglobwb.landSurface.landCoverObj.interceptStor",
  "wflow.pcrglobwb.landSurface.landCoverObj.interflow",
  "wflow.pcrglobwb.landSurface.landCoverObj.snowCoverSWE",
  "wflow.pcrglobwb.landSurface.landCoverObj.snowFreeWater",
  "wflow.pcrglobwb.landSurface.landCoverObj.storLow",
  "wflow.pcrglobwb.landSurface.landCoverObj.storLow030150",
  "wflow.pcrglobwb.landSurface.landCoverObj.storUpp",
  "wflow.pcrglobwb.landSurface.landCoverObj.storUpp000005",
  "wflow.pcrglobwb.landSurface.landCoverObj.storUpp005030",
  "wflow.pcrglobwb.landSurface.landCoverObj.topWaterLayer",
  "wflow.pcrglobwb.landSurface.numberOfSoilLayers",
  "wflow.pcrglobwb.landSurface.snowCoverSWE",
  "wflow.pcrglobwb.landSurface.snowFreeWater",
  "wflow.pcrglobwb.landSurface.storLow",
  "wflow.pcrglobwb.landSurface.storUpp",
  "wflow.pcrglobwb.landSurface.topWaterLayer",
  "wflow.pcrut.logging.DEBUG",
  "wflow.pcrut.logging.INFO",
  "wflow.wf_DynamicFramework.configget",
  "wflow.wf_DynamicFramework.configsection",
  "wflow.wf_DynamicFramework.configset",
  "wflow.wrappers.rtc.wrapperExtended.BMIWrapperExtended",
  "xarray.ufuncs.fmax",
  "xarray.ufuncs.fmin",
  "xarray.ufuncs.maximum",
  "xarray.ufuncs.minimum",
  "xlabel",
  "ylabel"
 ],
 "deps": {
  "Gzip": [],
  "JC_soilMoisture": [],
  "JC_solarRadiation": [],
  "JC_temperature": [],
  "JC_vapourDeficit": [],
  "JarvisCoefficients": [],
  "PCR2netCDF": [],
  "SnowPackHBV": [],
  "WflowModel": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "accucapacityflux": [],
  "accucapacitystate": [],
  "add_all_nodes": [],
  "add_node": [],
  "append": [],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "builtins": [],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cftime": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "configget": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "configsection": [],
  "configset": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cos": [],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "datetime2str": [],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "delete": [],
  "detdrainlength": [],
  "detdrainwidth": [],
  "downscale_evaporation": [],
  "dynamicwaveh": [],
  "dynamicwaveq": [],
  "estimate_iterations_kin_wave": [],
  "findFirstYearInNCTime": [],
  "findLastYearInNCTime": [],
  "find_outlet": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gc": [],
  "getFullPath": [],
  "getMapAttributesALL": [],
  "getRowColPoint": [],
  "getValAtPoint": [],
  "getcols": [],
  "getgridparams": [],
  "getopt": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "getrows": [],
  "glacierHBV": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "idtoid": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "kin_wave": [],
  "kinematic_wave": [],
  "kinematic_wave_ssf": [],
  "lddcreate_save": [],
  "ldddist": [],
  "legend": [],
  "ln": [],
  "log": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "naturalLake": [],
  "netCDF4": [
   "netcdf4/conda-forge/linux-64/netcdf4-1.4.3.2-py27h597e859_0",
   "netcdf4/conda-forge/linux-64/netcdf4-1.5.4-mpi_mpich_py38hf106642_1"
  ],
  "netcdfinput": [],
  "netcdfinputstates": [],
  "netcdfinputstatic": [],
  "netcdfoutput": [],
  "netcdfoutputstatic": [],
  "numba": [
   "numba/conda-forge/linux-64/numba-0.45.0-py37hb3f55d8_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "osgeo": [
   "gdal/conda-forge/linux-64/gdal-3.2.2-py37hb0e9ad2_3",
   "gdal/conda-forge/linux-64/gdal-3.2.2-py39h409cc32_4"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "parse": [
   "parse/conda-forge/noarch/parse-1.8.4-py_1"
  ],
  "pcraster": [],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.5-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pit": [],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pylab": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "pyproj": [
   "pyproj/conda-forge/linux-64/pyproj-2.6.1.post1-py36he34cbb8_0"
  ],
  "rainfall_interception_gash": [],
  "rainfall_interception_modrut": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "readtss": [],
  "removeFinishedProcesses": [],
  "resistenceAeroD": [],
  "sCurve": [],
  "save": [],
  "savetxt": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "set_dd": [],
  "shlex": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "show": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "simplereservoir": [],
  "spreadzone": [],
  "sqr": [],
  "stat": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subcatch": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sum_list_cover": [],
  "sys": [],
  "time": [],
  "timedelta": [],
  "timedelta2str": [],
  "title": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unique": [],
  "virtualOS": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wf_DynamicFramework": [],
  "wflow": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.15.0-py_0"
  ],
  "xlabel": [],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ylabel": [],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}