{
 "bad": [
  "Afrho",
  "Afrho.from_fluxd",
  "AnnularAperture",
  "BB",
  "CircularAperture",
  "Conf.fieldnames",
  "Conf.fieldnames_info",
  "Efrho",
  "Efrho.from_fluxd",
  "Ephem.from_horizons",
  "Ephem.from_miriade",
  "Ephem.from_mpc",
  "Ephem.from_oo",
  "ExpPhase",
  "Force",
  "GaussianAperture",
  "HG",
  "HG._hgphi",
  "HG.evaluate",
  "HG.fit_deriv",
  "HG.from_obs",
  "HG.from_phys",
  "HG12",
  "HG12.evaluate",
  "HG12.fit_deriv",
  "HG12.from_obs",
  "HG12_Pen16",
  "HG12_Pen16.evaluate",
  "HG12_Pen16.fit_deriv",
  "HG12_Pen16.from_obs",
  "HG1G2",
  "HG1G2.evaluate",
  "HG1G2.fit_deriv",
  "HG1G2.from_obs",
  "HG1G2.from_phys",
  "Haser",
  "LN",
  "LinearPhaseFunc",
  "LinearPhaseFunc.fit_deriv",
  "Obs.from_dict",
  "Obs.from_mpc",
  "Orbit.from_dict",
  "Orbit.from_horizons",
  "Physics",
  "R",
  "RectangularAperture",
  "Sun",
  "Sun._sources",
  "Sun.from_builtin",
  "Sun.show_builtin",
  "TestClass",
  "Tracking",
  "Vega",
  "Vega.from_default",
  "__builtin__",
  "__builtin__._ASTROPY_SETUP_",
  "_spline_positive",
  "alog10",
  "aper",
  "astropy.constants.au.to",
  "astropy.constants.c.decompose",
  "astropy.constants.c.to",
  "astropy.constants.c.value",
  "astropy.constants.h.decompose",
  "astropy.constants.h.to",
  "astropy.constants.k_B.decompose",
  "astropy.constants.k_B.to",
  "astropy.coordinates.EarthLocation.of_site",
  "astropy.log.info",
  "astropy.table.QTable.read",
  "astropy.table.Table.read",
  "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
  "astropy.tests.plugins.display.TESTED_VERSIONS",
  "astropy.time.Time.now",
  "astropy.units.AA",
  "astropy.units.AU",
  "astropy.units.GHz",
  "astropy.units.GHz.to",
  "astropy.units.Hz",
  "astropy.units.J",
  "astropy.units.Jy",
  "astropy.units.K.decompose",
  "astropy.units.MHz",
  "astropy.units.THz",
  "astropy.units.W",
  "astropy.units.allclose",
  "astropy.units.arcsec",
  "astropy.units.arcsec.to",
  "astropy.units.au",
  "astropy.units.au.to",
  "astropy.units.cm",
  "astropy.units.d",
  "astropy.units.day",
  "astropy.units.deg",
  "astropy.units.eV",
  "astropy.units.erg",
  "astropy.units.h",
  "astropy.units.hour",
  "astropy.units.isclose",
  "astropy.units.kg",
  "astropy.units.km",
  "astropy.units.km.decompose",
  "astropy.units.km.to",
  "astropy.units.m",
  "astropy.units.mJy",
  "astropy.units.meter",
  "astropy.units.min",
  "astropy.units.minute",
  "astropy.units.mm",
  "astropy.units.nm",
  "astropy.units.percent",
  "astropy.units.um",
  "astropy.units.year",
  "astroquery.jplhorizons.conf.horizons_server",
  "astroquery.jplsbdb.SBDB.query",
  "astroquery.jplspec.JPLSpec.get_species_table",
  "astroquery.jplspec.JPLSpec.query_lines",
  "astroquery.jplspec.JPLSpec.query_lines_async",
  "astroquery.lamda.Lamda.molecule_dict",
  "astroquery.lamda.Lamda.query",
  "astroquery.mpc.MPC.get_ephemeris",
  "astroquery.mpc.MPC.get_observations",
  "astroquery.mpc.MPC.query_object",
  "atexit",
  "atexit.register",
  "bandpass",
  "bib.Tracking",
  "bib.cite",
  "bib.register",
  "bib.reset",
  "bib.show",
  "bib.to_text",
  "bib.track",
  "builtins",
  "builtins.print",
  "calib.Sun.from_array",
  "calib.Sun.from_default",
  "calib.Vega.from_default",
  "calib.core",
  "calib.solar_fluxd.get",
  "calib.solar_fluxd.set",
  "calib.solar_spectrum.set",
  "calib.vega_fluxd.set",
  "calib.vega_spectrum.set",
  "conf.field_eq.keys",
  "conf.field_eq.values",
  "conf.fieldname_idx",
  "conf.fieldnames",
  "conf.mpc_orbit_fields",
  "conf.oorb_elemType",
  "conf.oorb_orbit_fields",
  "conf.oorb_orbit_units",
  "conf.oorb_timeScales",
  "contrived",
  "convfunc",
  "core.AnnularAperture",
  "core.CircularAperture",
  "core.DataClass._unit_apply",
  "core.DataClass.from_columns",
  "core.DataClass.from_dict",
  "core.DataClass.from_file",
  "core.DataClass.from_rows",
  "core.GasComa",
  "core.GaussianAperture",
  "core.RectangularAperture",
  "core.SpectralGradient.from_color",
  "core.SpectralStandard",
  "core.conf.fieldname_idx",
  "core.conf.fieldnames",
  "core.conf.fieldnames.append",
  "core.conf.oorb_ephem_basic_fields",
  "core.conf.oorb_ephem_basic_units",
  "core.conf.oorb_ephem_full_fields",
  "core.conf.oorb_ephem_full_units",
  "core.conf.oorb_orbit_fields",
  "core.conf.oorb_orbit_units",
  "core.conf.oorb_timeScales",
  "core.enable",
  "core.photo_timescale",
  "data.DataClass",
  "data.DataClassError",
  "data.Ephem",
  "data.Ephem.from_dict",
  "data.Ephem.from_horizons",
  "data.Names.asteroid_or_comet",
  "data.Names.parse_asteroid",
  "data.Names.parse_comet",
  "data.OHFluorescenceSA88",
  "data.Obs",
  "data.Obs.from_dict",
  "data.Orbit",
  "data.Phys",
  "data.Phys.from_dict",
  "data.Phys.from_jplspec",
  "data.Phys.from_sbdb",
  "data.dataclass_input",
  "data.fluorescence_band_strength",
  "data.fluorescence_band_strength.keys",
  "data.photo_lengthscale",
  "data.photo_lengthscale.items",
  "data.photo_timescale",
  "data.photo_timescale.items",
  "data.quantity_to_dataclass",
  "dataclass_input",
  "ephem.Ephem.from_horizons",
  "ephem.Ephem.from_miriade",
  "ephem.Ephem.from_mpc",
  "exceptions.OptionalPackageUnavailable",
  "exceptions.RequiredPackageUnavailable",
  "exp_phase",
  "exp_phase.radius",
  "exp_phase.to_mag",
  "exp_phase.to_ref",
  "exp_phase.wfb",
  "f",
  "f.mean",
  "fitter",
  "fluorescence_band_strength",
  "force",
  "func",
  "ginga.gw.Widgets.Button",
  "ginga.gw.Widgets.Expander",
  "ginga.gw.Widgets.Frame",
  "ginga.gw.Widgets.HBox",
  "ginga.gw.Widgets.Label",
  "ginga.gw.Widgets.TabWidget",
  "ginga.gw.Widgets.TextArea",
  "ginga.gw.Widgets.VBox",
  "ginga.gw.Widgets.build_info",
  "inspect.Parameter.empty",
  "mock",
  "mock.patch.dict",
  "model",
  "model.inversion",
  "model.tau.value",
  "names.Names.asteroid_or_comet",
  "names.Names.from_packed",
  "names.Names.parse_asteroid",
  "names.Names.parse_comet",
  "names.Names.to_packed",
  "numpy.arctan",
  "numpy.deg2rad",
  "numpy.double",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.log",
  "numpy.nan",
  "numpy.pi.decompose",
  "numpy.rad2deg",
  "numpy.random.rand",
  "numpy.tan",
  "orbit.Orbit.from_horizons",
  "orbit.Orbit.from_mpc",
  "orbit.Orbit.from_table",
  "os.environ.get",
  "os.path.basename",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "phase_HalleyMarcus",
  "photo_lengthscale",
  "photo_timescale",
  "photometry.bandpass",
  "photutils",
  "projected_size",
  "pyoorb",
  "pyoorb.pyoorb.oorb_element_transformation",
  "pyoorb.pyoorb.oorb_init",
  "pyoorb.pyoorb.oorb_propagation",
  "pyradex",
  "pyradex.Radex",
  "pytest.mark.parametrize",
  "pytest.mark.remote_data",
  "pytest.mark.skipif",
  "quantity_to_dataclass",
  "read_spec",
  "reflectance",
  "register",
  "reset",
  "s",
  "s._fluxd_state",
  "s.color_index",
  "s.description",
  "s.fluxd.to",
  "s.observe",
  "s.observe_bandpass",
  "s.observe_filter_name",
  "s.observe_spectrum",
  "s.source",
  "s.wave.to",
  "sbpy.activity.gas.data.__init__.OHFluorescenceSA88",
  "sbpy.data.Phys.from_sbdb",
  "sbpy.data.__init__.Conf",
  "sbpy.ginga_plugins.__init__.p_path",
  "sbpy.photometry.core.ResolvedPhotometricModelClass",
  "scipy.special.iti0k0",
  "scipy.special.k1",
  "self",
  "self.decorator_kwargs",
  "show",
  "solar_sources.SolarPhotometry",
  "solar_sources.SolarSpectra",
  "spectral_density_vega",
  "spectroscopy.sources.SinglePointSpectrumError",
  "spectroscopy.sources.SpectralSource.observe_bandpass",
  "spectroscopy.sources.SpectralSource.observe_spectrum",
  "spectroscopy.sources.SynphotRequired",
  "status",
  "stop",
  "str.maketrans",
  "sun",
  "sun.fluxd.to",
  "sun.meta",
  "sun.observe",
  "sun.observe_bandpass",
  "sun.wave.to",
  "synphot.SpectralElement.from_file",
  "sys",
  "sys.modules",
  "sys.version_info",
  "temperature",
  "track",
  "units.VEGA",
  "units.VEGA.is_equivalent",
  "units.VEGAmag",
  "units.hundred_nm",
  "units.projected_size",
  "units.spectral_density_vega",
  "utils.rarray",
  "utils.rebin",
  "utils.refine_pixel",
  "utils.xarray",
  "utils.yarray",
  "vega",
  "vega.color_index",
  "vega.description",
  "vega.observe",
  "vega.source",
  "vega_sources.VegaPhotometry",
  "vega_sources.VegaSpectra",
  "version.githash",
  "version.version",
  "wrapped_function"
 ],
 "deps": {
  "Afrho": [],
  "AnnularAperture": [],
  "BB": [],
  "CircularAperture": [],
  "Conf": [],
  "Efrho": [],
  "Ephem": [],
  "ExpPhase": [],
  "Force": [],
  "GaussianAperture": [],
  "HG": [],
  "HG12": [],
  "HG12_Pen16": [],
  "HG1G2": [],
  "Haser": [],
  "LN": [],
  "LinearPhaseFunc": [],
  "Obs": [],
  "Orbit": [],
  "Physics": [],
  "R": [],
  "RectangularAperture": [],
  "Sun": [],
  "TestClass": [],
  "Tracking": [],
  "Vega": [],
  "__builtin__": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_spline_positive": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ads": [
   "ads/conda-forge/noarch/ads-0.12.3-py_2"
  ],
  "alog10": [],
  "aper": [],
  "astropy": [
   "astropy/conda-forge/linux-64/astropy-2.0.4-py27_0"
  ],
  "astroquery": [
   "astroquery/conda-forge/noarch/astroquery-0.4.2-pyhd8ed1ab_0"
  ],
  "atexit": [],
  "bandpass": [],
  "bib": [],
  "builtins": [],
  "calib": [],
  "cite": [
   "cite/conda-forge/noarch/cite-0.6.0-pyhd8ed1ab_0"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "conf": [],
  "contrived": [],
  "convfunc": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "core": [],
  "data": [],
  "dataclass_input": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ephem": [],
  "exceptions": [],
  "exp_phase": [],
  "f": [],
  "fitter": [],
  "fluorescence_band_strength": [],
  "force": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ginga": [
   "ginga/conda-forge/noarch/ginga-3.0.0-py_0"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mock": [],
  "model": [],
  "names": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "orbit": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "phase_HalleyMarcus": [],
  "photo_lengthscale": [],
  "photo_timescale": [],
  "photometry": [],
  "photutils": [],
  "projected_size": [],
  "pyoorb": [],
  "pyradex": [],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "quantity_to_dataclass": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "read_spec": [],
  "reflectance": [],
  "register": [],
  "reset": [],
  "s": [],
  "sbpy": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "self": [],
  "show": [],
  "solar_sources": [],
  "spectral_density_vega": [],
  "spectroscopy": [],
  "status": [],
  "stop": [],
  "str": [],
  "sun": [],
  "synphot": [
   "synphot/conda-forge/linux-64/synphot-0.2.0-py37hc1659b7_0"
  ],
  "sys": [],
  "temperature": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test": [
   "abtem/conda-forge/noarch/abtem-1.0.0b11-pyhd8ed1ab_0",
   "aiohttp-client-cache/conda-forge/noarch/aiohttp-client-cache-0.3.0-pyhd8ed1ab_0",
   "ansible-runner/conda-forge/noarch/ansible-runner-1.4.6-pyh9f0ad1d_0",
   "awssert/conda-forge/noarch/awssert-1.0.0-pyhd8ed1ab_0",
   "bletchley/conda-forge/noarch/bletchley-0.2.0-py_0",
   "botorch/conda-forge/noarch/botorch-0.2.2-py_0",
   "dbt/conda-forge/noarch/dbt-0.14.4-py_0",
   "dolfyn/conda-forge/noarch/dolfyn-0.8.1-py_1",
   "easybuild-framework/conda-forge/noarch/easybuild-framework-4.3.4-pyhd8ed1ab_0",
   "ensureconda/conda-forge/noarch/ensureconda-1.2.1-py_0",
   "fairlearn/conda-forge/noarch/fairlearn-0.4.6-py_0",
   "findiff/conda-forge/noarch/findiff-0.8.9-pyhd8ed1ab_0",
   "flask-redis/conda-forge/noarch/flask-redis-0.4.0-py_0",
   "forest/conda-forge/noarch/forest-0.3.1-py_0",
   "gpytorch/conda-forge/noarch/gpytorch-1.4.0-pyhd8ed1ab_0",
   "hopcroftkarp/conda-forge/noarch/hopcroftkarp-1.2.4-py_0",
   "ibm-cloud-sdk-core/conda-forge/noarch/ibm-cloud-sdk-core-3.1.0-pyh9f0ad1d_0",
   "ioos_qartod/conda-forge/noarch/ioos_qartod-0.0.3-py_1",
   "label-maker/conda-forge/noarch/label-maker-0.8.0-pyh9f0ad1d_0",
   "meshplex/conda-forge/noarch/meshplex-0.15.14-pyhd8ed1ab_0",
   "museotoolbox/conda-forge/noarch/museotoolbox-0.13.0-pyh9f0ad1d_0",
   "otfmi/conda-forge/noarch/otfmi-0.10-pyh44b312d_0",
   "px4tools/conda-forge/noarch/px4tools-0.9.6-py_1000",
   "py-readability-metrics/conda-forge/noarch/py-readability-metrics-1.4.5-pyhd8ed1ab_0",
   "pyinstrument/conda-forge/noarch/pyinstrument-3.1.0-py_0",
   "pypd/conda-forge/noarch/pypd-1.1.0-py_0",
   "pyreportjasper/conda-forge/noarch/pyreportjasper-2.1.0-pyhd3deb0d_0",
   "python-awips/conda-forge/noarch/python-awips-18.1.2-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython",
   "pyulog/conda-forge/noarch/pyulog-0.6.0-py_0",
   "pyzotero/conda-forge/noarch/pyzotero-1.3.16-py_0",
   "radiant-mlhub/conda-forge/noarch/radiant-mlhub-0.1.3-pyhd8ed1ab_0",
   "sat-search/conda-forge/noarch/sat-search-0.3.0-py_0",
   "signalrcore/conda-forge/noarch/signalrcore-0.9.2-pyhd8ed1ab_0",
   "sklearn-json/conda-forge/noarch/sklearn-json-0.1.0-pyhd8ed1ab_0",
   "snorkel/conda-forge/noarch/snorkel-0.9.4-py_0",
   "tatsu/conda-forge/noarch/tatsu-5.6.1-pyhd8ed1ab_0"
  ],
  "track": [],
  "units": [],
  "utils": [],
  "vega": [],
  "vega_sources": [],
  "version": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wrapped_function": []
 }
}