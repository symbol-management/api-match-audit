{
 "bad": [
  "Cohorts",
  "DeepExplainer",
  "DenseData",
  "Explanation",
  "Explanation.abs",
  "Explanation.abs.mean",
  "Explanation.hclust",
  "GradientExplainer",
  "IPython.core.display.HTML",
  "IPython.core.display.display",
  "IPython.get_ipython",
  "KernelExplainer",
  "LinearExplainer",
  "Queue.Queue",
  "SamplingExplainer",
  "TreeEnsemble",
  "TreeExplainer",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "__gen_cache_id",
  "__intlogspace",
  "__run_batch_abs_metric",
  "__run_measure",
  "__score_method",
  "__strip_list",
  "__toarray",
  "__version__",
  "_assert_output_input_match",
  "_build_fixed_output",
  "_cext.dense_tree_predict",
  "_cext.dense_tree_saabas",
  "_cext.dense_tree_shap",
  "_cext_gpu.dense_tree_shap",
  "_colorconv.lab2rgb",
  "_colorconv.lch2lab",
  "_compute_shape",
  "_explainer.Explainer",
  "_explanation.Explanation",
  "_general.safe_isinstance",
  "_kernel.Kernel",
  "_labels.labels",
  "_masker.Masker",
  "_model.Model",
  "_prepare_colorarray",
  "_recalculate_value",
  "_serializable.Deserializer",
  "_serializable.Serializable",
  "_serializable.Serializer",
  "_show_progress.show_progress",
  "_tree.Tree",
  "_tree.feature_perturbation_codes",
  "_tree.output_transform_codes",
  "_utils.convert_color",
  "_utils.convert_ordering",
  "_utils.dendrogram_coords",
  "_utils.get_sort_order",
  "_utils.merge_nodes",
  "_utils.sort_inds",
  "a",
  "a._group_index",
  "a._grouped_index",
  "a.cost",
  "attr_function",
  "base64",
  "base64.b64encode",
  "buildTree",
  "cache",
  "catboost",
  "catboost.Pool",
  "check_sum",
  "cloudpickle",
  "cloudpickle.dump",
  "cloudpickle.load",
  "collections.Sequence",
  "collections.abc.Sequence",
  "colors.blue_rgb",
  "colors.light_blue_rgb",
  "colors.light_red_rgb",
  "colors.red_blue",
  "colors.red_blue_circle",
  "colors.red_blue_no_bounds",
  "colors.red_rgb",
  "colors.red_transparent_blue",
  "colors.red_white_blue",
  "compress_shap_matrix",
  "const_rand",
  "convert_func",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "cv2",
  "cv2.COLOR_BGR2RGB",
  "cv2.blur",
  "cv2.cvtColor",
  "cv2.imread",
  "cv2.inpaint",
  "cv2.resize",
  "datasets",
  "dill",
  "dill.dump",
  "dill.load",
  "distutils.version.LooseVersion",
  "draw_tick_mark",
  "dtype_in",
  "dtype_out",
  "encode_array_if_needed",
  "experiments.run_experiments",
  "explainer",
  "explainer.Explainer",
  "explainers._explainer.Explainer",
  "explainers.other.CoefficentExplainer",
  "explainers.other.LimeTabularExplainer",
  "explainers.other.MapleExplainer",
  "explainers.other.RandomExplainer",
  "explainers.other.TreeGainExplainer",
  "explainers.other.TreeMapleExplainer",
  "extract_data",
  "f",
  "fm",
  "fm.main_effects",
  "fm.mask_shapes",
  "functools",
  "gc",
  "generate_tree",
  "getNumNodes",
  "get_color",
  "get_colors",
  "get_xyz_coords",
  "hashlib",
  "hashlib.sha256",
  "img_as_float",
  "importlib",
  "input.detach",
  "input.op",
  "input.register_hook",
  "inspect",
  "inspect.getfullargspec",
  "inspect.isclass",
  "io",
  "io.BytesIO",
  "io.open",
  "is_1d",
  "itertools",
  "itertools.combinations",
  "itertools.product",
  "itertools.repeat",
  "json",
  "json.dumps",
  "keras.layers.Dense",
  "keras.layers.Dropout",
  "keras.models.Sequential",
  "kmeans",
  "layer",
  "layer.get_input_at",
  "layer.output.name",
  "lime",
  "lime.lime_tabular",
  "linearity_1d_handler",
  "logging",
  "logging.getLogger",
  "lower_credit",
  "maskers.Impute",
  "maskers.Independent",
  "maskers.Masker.load",
  "maskers.OutputComposite",
  "maskers.Partition",
  "math",
  "math.inf",
  "matplotlib",
  "matplotlib.cm",
  "matplotlib.cm.ScalarMappable",
  "matplotlib.colors.BoundaryNorm",
  "matplotlib.colors.LinearSegmentedColormap",
  "matplotlib.colors.LinearSegmentedColormap.from_list",
  "matplotlib.font_manager.FontProperties",
  "matplotlib.lines",
  "matplotlib.lines.Line2D",
  "matplotlib.patches.PathPatch",
  "matplotlib.path.Path",
  "matplotlib.pyplot",
  "matplotlib.pyplot.Polygon",
  "matplotlib.pyplot.arrow",
  "matplotlib.pyplot.axhline",
  "matplotlib.pyplot.axis",
  "matplotlib.pyplot.axvline",
  "matplotlib.pyplot.bar",
  "matplotlib.pyplot.barh",
  "matplotlib.pyplot.clf",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.cm.datad",
  "matplotlib.pyplot.colorbar",
  "matplotlib.pyplot.errorbar",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.fill_between",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.get_cmap",
  "matplotlib.pyplot.grid",
  "matplotlib.pyplot.imsave",
  "matplotlib.pyplot.imshow",
  "matplotlib.pyplot.ioff",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.locator_params",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.sca",
  "matplotlib.pyplot.scatter",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.subplots_adjust",
  "matplotlib.pyplot.text",
  "matplotlib.pyplot.tick_params",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.violinplot",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.xlim",
  "matplotlib.pyplot.xscale",
  "matplotlib.pyplot.xticks",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "matplotlib.pyplot.yticks",
  "matplotlib.ticker.FixedFormatter",
  "matplotlib.ticker.FixedLocator",
  "matplotlib.ticker.ScalarFormatter",
  "matplotlib.transforms.ScaledTranslation",
  "max_id",
  "measure",
  "measures.batch_keep_retrain",
  "measures.batch_remove_retrain",
  "measures.keep_impute",
  "measures.keep_mask",
  "measures.keep_resample",
  "measures.keep_retrain",
  "measures.local_accuracy",
  "measures.remove_impute",
  "measures.remove_mask",
  "measures.remove_resample",
  "measures.remove_retrain",
  "merge_tokens",
  "methods",
  "metric",
  "metrics",
  "models",
  "models.KerasWrap",
  "models.Model.load",
  "models.TextGeneration",
  "mpl_toolkits.mplot3d.Axes3D",
  "multiprocessing",
  "multiprocessing.Pool",
  "nonlinearity_1d_handler",
  "nonlinearity_2d_handler",
  "numba",
  "numba.jit",
  "numpy",
  "numpy.abs",
  "numpy.add",
  "numpy.all",
  "numpy.any",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.bincount",
  "numpy.bitwise_and",
  "numpy.bool",
  "numpy.bool8",
  "numpy.bool_",
  "numpy.byte",
  "numpy.cbrt",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.corrcoef",
  "numpy.cos",
  "numpy.cov",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.diag",
  "numpy.diag_indices_from",
  "numpy.diff",
  "numpy.dot",
  "numpy.dstack",
  "numpy.dtype",
  "numpy.empty",
  "numpy.exp",
  "numpy.eye",
  "numpy.flip",
  "numpy.float",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.floor_divide",
  "numpy.frompyfunc",
  "numpy.generic",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.inf",
  "numpy.insert",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.int_",
  "numpy.intc",
  "numpy.integer",
  "numpy.interp",
  "numpy.invert",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.cholesky",
  "numpy.linalg.inv",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linspace",
  "numpy.load",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.log10",
  "numpy.logspace",
  "numpy.longlong",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.minimum",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.nancumsum",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmin",
  "numpy.nanpercentile",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.nextafter",
  "numpy.nonzero",
  "numpy.number",
  "numpy.obj2sctype",
  "numpy.object",
  "numpy.ones",
  "numpy.outer",
  "numpy.percentile",
  "numpy.pi",
  "numpy.power",
  "numpy.prod",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.right_shift",
  "numpy.rint",
  "numpy.round",
  "numpy.short",
  "numpy.sin",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.str",
  "numpy.str_",
  "numpy.sum",
  "numpy.take",
  "numpy.tile",
  "numpy.transpose",
  "numpy.triu_indices_from",
  "numpy.ubyte",
  "numpy.uint",
  "numpy.uint32",
  "numpy.uint8",
  "numpy.uintc",
  "numpy.ulonglong",
  "numpy.union1d",
  "numpy.unique",
  "numpy.ushort",
  "numpy.var",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "obj_type",
  "operator",
  "operator.add",
  "operator.mul",
  "operator.sub",
  "operator.truediv",
  "os",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.remove",
  "out",
  "out.consumers",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.concat",
  "pandas.read_csv",
  "perturbation.SequentialPerturbation",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "plots._bar.bar_legacy",
  "plots._beeswarm.summary_legacy",
  "plots._decision.decision",
  "plots._decision.multioutput_decision",
  "plots._embedding.embedding",
  "plots._force.force",
  "plots._force.initjs",
  "plots._force.save_html",
  "plots._force_matplotlib.draw_additive_plot",
  "plots._image.image",
  "plots._monitoring.monitoring",
  "plots._partial_dependence.partial_dependence",
  "plots._scatter.dependence_legacy",
  "plots._text.text",
  "plots._waterfall.waterfall",
  "plots.colors.blue_rgb",
  "plots.colors.light_blue_rgb",
  "plots.colors.red_blue_circle",
  "plots.colors.red_blue_no_bounds",
  "plots.colors.red_blue_transparent",
  "plots.colors.red_rgb",
  "populate_input_tree",
  "process_text_to_text_shap_values",
  "pyspark",
  "queue",
  "queue.PriorityQueue",
  "queue.Queue",
  "random",
  "random.choice",
  "random.choices",
  "random.shuffle",
  "random.uniform",
  "re",
  "re.compile",
  "re.sub",
  "recurse",
  "recursive_mark",
  "requests",
  "scipy",
  "scipy.cluster",
  "scipy.cluster.hierarchy.complete",
  "scipy.cluster.hierarchy.cophenet",
  "scipy.cluster.hierarchy.leaves_list",
  "scipy.cluster.hierarchy.optimal_leaf_ordering",
  "scipy.linalg",
  "scipy.linalg.inv",
  "scipy.sparse",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.issparse",
  "scipy.sparse.isspmatrix_csr",
  "scipy.sparse.isspmatrix_lil",
  "scipy.spatial.distance.pdist",
  "scipy.spatial.distance.squareform",
  "scipy.special",
  "scipy.special.binom",
  "scipy.special.comb",
  "scipy.special.logit",
  "scipy.stats.gaussian_kde",
  "scipy.stats.ttest_ind",
  "score",
  "score_function",
  "shap.__init__.have_matplotlib",
  "shap.__init__.unsupported",
  "sklearn",
  "sklearn.cluster.KMeans",
  "sklearn.cross_validation.train_test_split",
  "sklearn.datasets",
  "sklearn.decomposition.PCA",
  "sklearn.ensemble",
  "sklearn.ensemble.GradientBoostingRegressor",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.ensemble._iforest._average_path_length",
  "sklearn.impute.SimpleImputer",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LassoLarsIC",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.lars_path",
  "sklearn.metrics.auc",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.r2_score",
  "sklearn.metrics.roc_auc_score",
  "sklearn.model_selection.train_test_split",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils",
  "sklearn.utils.resample",
  "slicer.Alias",
  "slicer.Obj",
  "slicer.Slicer",
  "string",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "string.digits",
  "struct",
  "struct.calcsize",
  "struct.unpack",
  "subprocess",
  "subprocess.CalledProcessError",
  "subprocess.TimeoutExpired",
  "subprocess.check_output",
  "subprocess.run",
  "summary",
  "sys",
  "sys.modules",
  "sys.stderr",
  "sys.stdout.flush",
  "sys.version_info",
  "tensorflow",
  "tensorflow.GradientTape",
  "tensorflow.abs",
  "tensorflow.cast",
  "tensorflow.compat.v1.keras.backend.get_session",
  "tensorflow.concat",
  "tensorflow.constant",
  "tensorflow.convert_to_tensor",
  "tensorflow.device",
  "tensorflow.executing_eagerly",
  "tensorflow.exp",
  "tensorflow.float32",
  "tensorflow.function",
  "tensorflow.get_default_session",
  "tensorflow.gradients",
  "tensorflow.int32",
  "tensorflow.keras.Input",
  "tensorflow.keras.Model",
  "tensorflow.keras.backend.get_session",
  "tensorflow.keras.backend.learning_phase",
  "tensorflow.keras.backend.set_learning_phase",
  "tensorflow.math.cumsum",
  "tensorflow.matmul",
  "tensorflow.maximum",
  "tensorflow.minimum",
  "tensorflow.ones",
  "tensorflow.python.eager.backprop._record_gradient",
  "tensorflow.python.eager.execute.record_gradient",
  "tensorflow.python.framework.ops",
  "tensorflow.python.framework.ops._gradient_registry._registry",
  "tensorflow.python.keras.backend",
  "tensorflow.python.keras.backend.get_graph",
  "tensorflow.python.ops.gradients_util",
  "tensorflow.python.ops.gradients_util._IsBackpropagatable",
  "tensorflow.reduce_max",
  "tensorflow.reduce_sum",
  "tensorflow.split",
  "tensorflow.tile",
  "tensorflow.where",
  "tensorflow.zeros_like",
  "textwrap.wrap",
  "threading.Lock",
  "threading.Thread",
  "time",
  "time.sleep",
  "time.time",
  "to_array",
  "torch",
  "torch.cat",
  "torch.cuda.is_available",
  "torch.device",
  "torch.int64",
  "torch.no_grad",
  "torch.ones",
  "torch.tensor",
  "tqdm",
  "tqdm.auto.tqdm",
  "tqdm.autonotebook.tqdm",
  "tqdm.tqdm",
  "typing.Union",
  "unpack_shap_explanation_contents",
  "urllib.request.urlretrieve",
  "urllib.urlretrieve",
  "utils.MaskedModel",
  "utils.MaskedModel.delta_mask_noop_value",
  "utils.OpChain",
  "utils._general.OpChain",
  "utils._general.encode_array_if_needed",
  "utils._legacy.DenseData",
  "utils._legacy.Instance",
  "utils._legacy.LogitLink",
  "utils._legacy.Model",
  "utils._legacy.convert_to_instance",
  "utils._legacy.convert_to_instance_with_index",
  "utils._legacy.convert_to_link",
  "utils._legacy.kmeans",
  "utils._legacy.match_instance_to_data",
  "utils.approximate_interactions",
  "utils.assert_import",
  "utils.convert_name",
  "utils.delta_minimization_order",
  "utils.format_value",
  "utils.hclust_ordering",
  "utils.make_masks",
  "utils.ordinal_str",
  "utils.partition_tree_shuffle",
  "utils.record_import_error",
  "utils.safe_isinstance",
  "utils.shapley_coefficients",
  "utils.show_progress",
  "utils.transformers.MODELS_FOR_CAUSAL_LM",
  "utils.transformers.SENTENCEPIECE_TOKENIZERS",
  "utils.transformers.parse_prefix_suffix_for_tokenizer",
  "values_min_max",
  "warnings",
  "warnings.catch_warnings",
  "warnings.formatwarning",
  "warnings.simplefilter",
  "warnings.warn",
  "xgboost",
  "xgboost.DMatrix",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor",
  "xgboost.core.DMatrix",
  "xgboost.train",
  "xpos"
 ],
 "deps": {
  "Cohorts": [],
  "DeepExplainer": [],
  "DenseData": [],
  "Explanation": [],
  "GradientExplainer": [],
  "IPython": [],
  "KernelExplainer": [],
  "LinearExplainer": [],
  "Queue": [],
  "SamplingExplainer": [],
  "TreeEnsemble": [],
  "TreeExplainer": [],
  "__future__": [],
  "__gen_cache_id": [],
  "__intlogspace": [],
  "__run_batch_abs_metric": [],
  "__run_measure": [],
  "__score_method": [],
  "__strip_list": [],
  "__toarray": [],
  "__version__": [],
  "_assert_output_input_match": [],
  "_build_fixed_output": [],
  "_cext": [],
  "_cext_gpu": [],
  "_colorconv": [],
  "_compute_shape": [],
  "_explainer": [],
  "_explanation": [],
  "_general": [],
  "_kernel": [],
  "_labels": [],
  "_masker": [],
  "_model": [],
  "_prepare_colorarray": [],
  "_recalculate_value": [],
  "_serializable": [],
  "_show_progress": [],
  "_tree": [],
  "_utils": [],
  "a": [],
  "attr_function": [],
  "base64": [],
  "buildTree": [],
  "cache": [],
  "catboost": [],
  "check_sum": [],
  "cloudpickle": [],
  "collections": [],
  "colors": [],
  "compress_shap_matrix": [],
  "const_rand": [],
  "convert_func": [],
  "copy": [],
  "cv2": [],
  "datasets": [],
  "dill": [],
  "distutils": [],
  "draw_tick_mark": [],
  "dtype_in": [],
  "dtype_out": [],
  "encode_array_if_needed": [],
  "experiments": [],
  "explainer": [],
  "explainers": [],
  "extract_data": [],
  "f": [],
  "fm": [],
  "functools": [],
  "gc": [],
  "generate_tree": [],
  "getNumNodes": [],
  "get_color": [],
  "get_colors": [],
  "get_xyz_coords": [],
  "hashlib": [],
  "img_as_float": [],
  "importlib": [],
  "input": [],
  "inspect": [],
  "io": [],
  "is_1d": [],
  "itertools": [],
  "json": [],
  "keras": [],
  "kmeans": [],
  "layer": [],
  "lime": [],
  "linearity_1d_handler": [],
  "logging": [],
  "lower_credit": [],
  "maskers": [],
  "math": [],
  "matplotlib": [],
  "max_id": [],
  "measure": [],
  "measures": [],
  "merge_tokens": [],
  "methods": [],
  "metric": [],
  "metrics": [],
  "models": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "nonlinearity_1d_handler": [],
  "nonlinearity_2d_handler": [],
  "numba": [],
  "numpy": [],
  "obj_type": [],
  "operator": [],
  "os": [],
  "out": [],
  "pandas": [],
  "perturbation": [],
  "pickle": [],
  "plots": [],
  "populate_input_tree": [],
  "process_text_to_text_shap_values": [],
  "pyspark": [],
  "queue": [],
  "random": [],
  "re": [],
  "recurse": [],
  "recursive_mark": [],
  "requests": [],
  "scipy": [],
  "score": [],
  "score_function": [],
  "shap": [],
  "sklearn": [],
  "slicer": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "summary": [],
  "sys": [],
  "tensorflow": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "to_array": [],
  "torch": [],
  "tqdm": [],
  "typing": [],
  "unpack_shap_explanation_contents": [],
  "urllib": [],
  "utils": [],
  "values_min_max": [],
  "warnings": [],
  "xgboost": [],
  "xpos": []
 }
}