{
 "bad": [
  "Session",
  "StringIO.StringIO",
  "_version.get_versions",
  "dateutil.tz.tzutc",
  "docopt.docopt",
  "generatedssuper.GeneratedsSuper",
  "generatedssuper.GeneratedsSuper.Tag_strip_pattern_.sub",
  "generatedssuper.GeneratedsSuper._FixedOffsetTZ",
  "generatedssuper.GeneratedsSuper.tzoff_pattern.search",
  "lxml.etree.ETCompatXMLParser",
  "lxml.etree.Element",
  "lxml.etree.SubElement",
  "lxml.etree.XMLID",
  "lxml.etree.XMLParser",
  "lxml.etree.XMLSyntaxError",
  "lxml.etree.parse",
  "lxml.etree.tostring",
  "lxml.objectify.XML",
  "modify_method_getValueObject",
  "modify_method_getVariableInfoObject",
  "modify_return_xml_object",
  "odm2api.ODM2.models.ActionBy",
  "odm2api.ODM2.models.ActionBy.ActionID",
  "odm2api.ODM2.models.Actions",
  "odm2api.ODM2.models.Actions.BeginDateTime",
  "odm2api.ODM2.models.Actions.EndDateTime",
  "odm2api.ODM2.models.Affiliations",
  "odm2api.ODM2.models.Affiliations.AffiliationID",
  "odm2api.ODM2.models.Affiliations.AffiliationID.in_",
  "odm2api.ODM2.models.Affiliations.OrganizationID",
  "odm2api.ODM2.models.FeatureActions",
  "odm2api.ODM2.models.FeatureActions.FeatureActionID",
  "odm2api.ODM2.models.FeatureActions.SamplingFeatureID",
  "odm2api.ODM2.models.MeasurementResultValues",
  "odm2api.ODM2.models.MeasurementResultValues.ValueDateTime",
  "odm2api.ODM2.models.MeasurementResults",
  "odm2api.ODM2.models.MeasurementResults.FeatureActionID",
  "odm2api.ODM2.models.MeasurementResults.SampledMediumCV",
  "odm2api.ODM2.models.MeasurementResults.SampledMediumCV.label",
  "odm2api.ODM2.models.MeasurementResults.UnitsID",
  "odm2api.ODM2.models.MeasurementResults.UnitsID.label",
  "odm2api.ODM2.models.MeasurementResults.VariableID",
  "odm2api.ODM2.models.MeasurementResults.VariableID.label",
  "odm2api.ODM2.models.Methods",
  "odm2api.ODM2.models.Methods.MethodID",
  "odm2api.ODM2.models.Methods.MethodID.in_",
  "odm2api.ODM2.models.ProcessingLevels",
  "odm2api.ODM2.models.ProcessingLevels.ProcessingLevelID",
  "odm2api.ODM2.models.ProcessingLevels.ProcessingLevelID.in_",
  "odm2api.ODM2.models.RelatedFeatures.RelatedFeatureID",
  "odm2api.ODM2.models.RelatedFeatures.SamplingFeatureID",
  "odm2api.ODM2.models.Results.ResultID",
  "odm2api.ODM2.models.SamplingFeatures",
  "odm2api.ODM2.models.SamplingFeatures.SamplingFeatureCode",
  "odm2api.ODM2.models.Sites",
  "odm2api.ODM2.models.Sites.Latitude",
  "odm2api.ODM2.models.Sites.Longitude",
  "odm2api.ODM2.models.Sites.SamplingFeatureCode",
  "odm2api.ODM2.models.Sites.SamplingFeatureID",
  "odm2api.ODM2.models.Specimens",
  "odm2api.ODM2.models.Specimens.SamplingFeatureID",
  "odm2api.ODM2.models.TimeSeriesResultValues",
  "odm2api.ODM2.models.TimeSeriesResultValues.ResultID",
  "odm2api.ODM2.models.TimeSeriesResultValues.ResultID.in_",
  "odm2api.ODM2.models.TimeSeriesResultValues.ValueDateTime",
  "odm2api.ODM2.models.TimeSeriesResults",
  "odm2api.ODM2.models.TimeSeriesResults.FeatureActionID",
  "odm2api.ODM2.models.TimeSeriesResults.ResultID",
  "odm2api.ODM2.models.TimeSeriesResults.VariableID",
  "odm2api.ODM2.models.Variables",
  "odm2api.ODM2.models.Variables.VariableCode",
  "odm2api.ODM2.models.Variables.VariableID",
  "odm2api.ODM2.models.setSchema",
  "os.listdir",
  "os.path.abspath",
  "os.path.curdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "pytz.utc",
  "re.DOTALL",
  "runserver.app.secret_key",
  "shutil.copy2",
  "shutil.copytree",
  "shutil.rmtree",
  "sqlalchemy.Boolean",
  "sqlalchemy.Column",
  "sqlalchemy.DateTime",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.String",
  "sqlalchemy.Table",
  "sqlalchemy.create_engine",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.func.count",
  "sqlalchemy.func.max",
  "sqlalchemy.func.min",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.scoped_session",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.sql.and_",
  "sqlalchemy.sql.func.max",
  "sqlalchemy.sql.func.min",
  "sys.argv",
  "sys.exit",
  "sys.stdout",
  "sys.stdout.write",
  "tempfile.gettempdir",
  "time.gmtime",
  "time.strftime",
  "time.strptime",
  "time.time",
  "urllib.parse.urlencode",
  "urllib.request.urlopen",
  "urllib.unquote",
  "urllib.urlopen",
  "warnings.warn",
  "wof.__file__",
  "wof.examples.flask.barebones.LCM_dao.LCMDao",
  "wof.examples.flask.cbi.cbi_cache_models.Series.SiteCode",
  "wof.examples.flask.cbi.cbi_cache_models.Series.VariableCode",
  "wof.examples.flask.cbi.cbi_cache_models.Series.query.filter",
  "wof.examples.flask.cbi.cbi_cache_models.Site.SiteCode",
  "wof.examples.flask.cbi.cbi_cache_models.Site.SiteCode.in_",
  "wof.examples.flask.cbi.cbi_cache_models.Site.query.all",
  "wof.examples.flask.cbi.cbi_cache_models.Site.query.filter",
  "wof.examples.flask.cbi.cbi_cache_models.Units.UnitsName",
  "wof.examples.flask.cbi.cbi_cache_models.Units.query.filter",
  "wof.examples.flask.cbi.cbi_cache_models.Variable.VariableCode",
  "wof.examples.flask.cbi.cbi_cache_models.Variable.VariableCode.in_",
  "wof.examples.flask.cbi.cbi_cache_models.Variable.query.all",
  "wof.examples.flask.cbi.cbi_cache_models.Variable.query.filter",
  "wof.examples.flask.csv_server.csv_dao.CsvDao",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.DataValue",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.DateTimeUTC",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.SiteID",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.VariableID",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.VariableID.label",
  "wof.examples.flask.swis.sqlalch_swis_models.DataValue.query.filter",
  "wof.examples.flask.swis.sqlalch_swis_models.Method.MethodID",
  "wof.examples.flask.swis.sqlalch_swis_models.Method.MethodID.in_",
  "wof.examples.flask.swis.sqlalch_swis_models.Method.query.filter",
  "wof.examples.flask.swis.sqlalch_swis_models.Site.SiteCode",
  "wof.examples.flask.swis.sqlalch_swis_models.Site.SiteCode.in_",
  "wof.examples.flask.swis.sqlalch_swis_models.Site.query.all",
  "wof.examples.flask.swis.sqlalch_swis_models.Site.query.filter",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.VariableCode",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.VariableCode.in_",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.VariableID",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.VariableID.in_",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.query.all",
  "wof.examples.flask.swis.sqlalch_swis_models.Variable.query.filter",
  "wof.models.GeneralCategoryTypes.CLIMATE",
  "wof.models.GeneralCategoryTypes.HYDROLOGY",
  "wof.models.GeneralCategoryTypes.INSTRUMENTATION",
  "wof.models.GeneralCategoryTypes.UNKNOWN",
  "wof.models.GeneralCategoryTypes.WATER_QUALITY",
  "wof.models.SampleMediumTypes.AIR",
  "wof.models.SampleMediumTypes.NOT_RELEVANT",
  "wof.models.SampleMediumTypes.SURFACE_WATER",
  "wof.models.SampleMediumTypes.UNKNOWN",
  "yaml.load"
 ],
 "deps": {
  "Session": [],
  "StringIO": [],
  "_version": [],
  "argparse": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "cgi": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.1-py_0",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "docopt": [],
  "flask": [
   "flask/conda-forge/noarch/flask-1.0.3-py_0"
  ],
  "generatedssuper": [],
  "io": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.11.3-pyh44b312d_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "lxml": [],
  "modify_method_getValueObject": [],
  "modify_method_getVariableInfoObject": [],
  "modify_return_xml_object": [],
  "odm2api": [],
  "optparse": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pytz": [],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "runserver": [],
  "shutil": [],
  "spyne": [
   "spyne/conda-forge/noarch/spyne-2.12.16-py_1"
  ],
  "sqlalchemy": [],
  "suds": [
   "suds-community/conda-forge/noarch/suds-community-0.8.4-pyh9f0ad1d_0",
   "suds-py3/conda-forge/noarch/suds-py3-1.3.3.0-pyh9f0ad1d_0"
  ],
  "sys": [],
  "tempfile": [],
  "time": [],
  "urllib": [],
  "warnings": [],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-0.15.0-py_0"
  ],
  "wof": [],
  "xml": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "yaml": []
 }
}