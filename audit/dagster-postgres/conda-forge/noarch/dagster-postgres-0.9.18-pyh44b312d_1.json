{
 "bad": [
  "_get_migration_files",
  "_get_versions_path",
  "alembic.context.begin_transaction",
  "alembic.context.config",
  "alembic.context.configure",
  "alembic.context.is_offline_mode",
  "alembic.context.run_migrations",
  "alembic.op.add_column",
  "alembic.op.alter_column",
  "alembic.op.create_foreign_key",
  "alembic.op.create_index",
  "alembic.op.create_table",
  "alembic.op.drop_column",
  "alembic.op.drop_constraint",
  "alembic.op.drop_index",
  "alembic.op.drop_table",
  "alembic.op.execute",
  "alembic.op.get_context",
  "await_pg_notifications",
  "callback",
  "collections.Counter",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "create_pg_connection",
  "dagster.EventMetadataEntry.float",
  "dagster.EventMetadataEntry.int",
  "dagster.EventMetadataEntry.json",
  "dagster.EventMetadataEntry.text",
  "dagster.check.bool_param",
  "dagster.check.callable_param",
  "dagster.check.float_param",
  "dagster.check.inst_param",
  "dagster.check.int_param",
  "dagster.check.list_param",
  "dagster.check.numeric_param",
  "dagster.check.opt_inst_param",
  "dagster.check.opt_str_param",
  "dagster.check.str_param",
  "dagster.core.events.DagsterEventType.ENGINE_EVENT",
  "dagster.core.events.DagsterEventType.OBJECT_STORE_OPERATION",
  "dagster.core.events.DagsterEventType.PIPELINE_START",
  "dagster.core.events.DagsterEventType.PIPELINE_START.value",
  "dagster.core.events.DagsterEventType.PIPELINE_SUCCESS",
  "dagster.core.events.DagsterEventType.PIPELINE_SUCCESS.value",
  "dagster.core.events.DagsterEventType.STEP_MATERIALIZATION.value",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.events.DagsterEventType.STEP_START",
  "dagster.core.events.DagsterEventType.STEP_SUCCESS",
  "dagster.core.execution.api.execute_run",
  "dagster.core.execution.stats.StepEventStatus.FAILURE",
  "dagster.core.execution.stats.StepEventStatus.SUCCESS",
  "dagster.core.instance.InstanceRef.from_dir",
  "dagster.core.storage.event_log.AssetAwareSqlEventLogStorage",
  "dagster.core.storage.event_log.AssetKeyTable",
  "dagster.core.storage.event_log.AssetKeyTable.c.asset_key",
  "dagster.core.storage.event_log.SqlEventLogStorageMetadata",
  "dagster.core.storage.event_log.SqlEventLogStorageMetadata.create_all",
  "dagster.core.storage.event_log.SqlEventLogStorageTable.c.event",
  "dagster.core.storage.event_log.SqlEventLogStorageTable.c.id",
  "dagster.core.storage.event_log.SqlEventLogStorageTable.c.run_id",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.NOT_STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.STARTED",
  "dagster.core.storage.pipeline_run.PipelineRunStatus.SUCCESS",
  "dagster.core.storage.runs.RunStorageSqlMetadata",
  "dagster.core.storage.runs.RunStorageSqlMetadata.create_all",
  "dagster.core.storage.runs.RunStorageSqlMetadata.drop_all",
  "dagster.core.storage.runs.SqlRunStorage",
  "dagster.core.storage.schedules.ScheduleStorageSqlMetadata.create_all",
  "dagster.core.storage.schedules.ScheduleStorageSqlMetadata.drop_all",
  "dagster.core.storage.schedules.SqlScheduleStorage",
  "dagster.serdes.ConfigurableClass",
  "dagster.serdes.ConfigurableClassData",
  "dagster.serdes.deserialize_json_to_dagster_namedtuple",
  "dagster.seven.JSONDecodeError",
  "dagster.utils.test.postgres_instance.TestPostgresInstance.docker_service_up_or_skip",
  "dagster.utils.test.postgres_instance.TestPostgresInstance.get_hostname",
  "dagster.utils.test.run_storage.TestRunStorage.__test__",
  "dagster.utils.test.schedule_storage.TestScheduleStorage.__test__",
  "events.append",
  "filecmp.cmpfiles",
  "fn",
  "get_conn",
  "int.from_bytes",
  "logging.config.fileConfig",
  "materialize_one",
  "materialize_two",
  "noop_solid",
  "pg_config",
  "pg_statement_timeout",
  "pg_url_from_config",
  "return_one",
  "should_fail",
  "should_retry",
  "solids_fn",
  "sqlalchemy.Column",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.LargeBinary",
  "sqlalchemy.String",
  "sqlalchemy.create_engine",
  "sqlalchemy.dialects.postgresql.insert",
  "sqlalchemy.pool.NullPool",
  "sqlalchemy.select",
  "sqlalchemy.types.String",
  "sqlalchemy.types.TIMESTAMP",
  "sqlalchemy.types.Text",
  "sqlalchemy.types.VARCHAR"
 ],
 "deps": [
  [],
  [],
  [
   "dagster-postgres-0.9.18-pyh44b312d_0",
   "dagster-postgres-0.9.18-pyh44b312d_1",
   "dagster-postgres-0.9.19-pyh44b312d_0",
   "dagster-postgres-0.9.19-pyh44b312d_1",
   "dagster-postgres-0.9.20-pyh44b312d_0",
   "dagster-postgres-0.9.20-pyh44b312d_1",
   "dagster-postgres-0.9.21-pyh44b312d_0",
   "dagster-postgres-0.9.21-pyh44b312d_1"
  ],
  [
   "pymapd-0.5.1-py37hf484d3e_1000",
   "sqlalchemy-1.1.11-py36_0",
   "sqlalchemy-1.1.13-py36_0",
   "sqlalchemy-1.2.10-py27h470a237_1",
   "sqlalchemy-1.2.13-py36h470a237_0",
   "sqlalchemy-1.2.14-py37h470a237_0",
   "sqlalchemy-1.2.15-py27h14c3975_1000",
   "sqlalchemy-1.2.15-py36h14c3975_1000",
   "sqlalchemy-1.2.2-py37_0",
   "sqlalchemy-1.2.7-py35h65ede16_0",
   "sqlalchemy-1.2.9-py27_0",
   "sqlalchemy-1.3.1-py37h14c3975_0",
   "sqlalchemy-1.3.10-py36h516909a_0",
   "sqlalchemy-1.3.11-py36h516909a_0",
   "sqlalchemy-1.3.11-py38h516909a_0",
   "sqlalchemy-1.3.13-py27h516909a_0",
   "sqlalchemy-1.3.15-py36h8c4c3a4_0",
   "sqlalchemy-1.3.15-py36h8c4c3a4_1",
   "sqlalchemy-1.3.18-py38h1e0a361_0",
   "sqlalchemy-1.3.19-py36h97a6639_0",
   "sqlalchemy-1.3.19-py37h8f50634_0",
   "sqlalchemy-1.3.19-py38h1e0a361_1",
   "sqlalchemy-1.3.2-py36h516909a_0",
   "sqlalchemy-1.3.20-py36h8c4c3a4_0",
   "sqlalchemy-1.3.20-py39h3811e60_0",
   "sqlalchemy-1.3.22-py36h70b1f00_1",
   "sqlalchemy-1.3.22-py37h6b43d8f_1",
   "sqlalchemy-1.3.22-py38h497a2fe_0",
   "sqlalchemy-1.3.22-py39h3811e60_0",
   "sqlalchemy-1.3.23-py37h6b43d8f_0",
   "sqlalchemy-1.3.3-py37h516909a_0",
   "sqlalchemy-1.3.4-py27h516909a_0",
   "sqlalchemy-1.3.4-py36h516909a_0",
   "sqlalchemy-1.3.8-py36h516909a_0",
   "sqlalchemy-1.3.8-py37h516909a_0",
   "sqlalchemy-1.3.9-py37h516909a_0"
  ]
 ]
}