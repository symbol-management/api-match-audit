{
 "bad": [
  "BaseHTTPServer",
  "BaseNode",
  "ChannelAvailability",
  "ConfigParser",
  "Crypto.Cipher.DES",
  "Crypto.Cipher.DES.MODE_CBC",
  "Crypto.Cipher.DES.new",
  "DEFAULT_XSEED_VERSION",
  "InternalMSEEDError",
  "InternalMSEEDWarning",
  "InvalidResponseError",
  "M2Crypto.EVP",
  "M2Crypto.EVP.Cipher",
  "ManilaTime",
  "MyAttribDict",
  "NED2NWU",
  "NED2USE",
  "NED2XYZ",
  "NRLPath",
  "NestedDict",
  "NodalPlane",
  "ObsPyMSEEDFilesizeTooLargeError",
  "ObsPyMSEEDFilesizeTooSmallError",
  "Output",
  "Profile",
  "Queue",
  "Queue.Queue",
  "ResourceIdentifier",
  "SEGYTraceHeader",
  "Stream",
  "ThreadURL",
  "_D",
  "_DEFAULT_VALUES",
  "__builtin__",
  "__builtin__.list",
  "__doc__.split",
  "__doc__.strip",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "_add_record",
  "_assert_credentials",
  "_assert_eida_user_and_password",
  "_assert_float_equal",
  "_assert_similarity",
  "_attr2obj",
  "_build_parsers",
  "_create_layer",
  "_create_station",
  "_data_sanity_checks",
  "_determine_dtype",
  "_dict2xml",
  "_epoch_warn_msg",
  "_equalarea_spherical_grid",
  "_finalize_blkt60",
  "_float_to_str",
  "_format_time",
  "_get_ah_version",
  "_get_http_digest_auth_handler",
  "_get_indices_to_merge",
  "_gets_merged",
  "_good_factorization",
  "_handle_input",
  "_internal_read_single_cmtsolution",
  "_internal_read_single_scardec",
  "_interpolate",
  "_list",
  "_m_to_deg",
  "_n",
  "_ns",
  "_obj2tag",
  "_param_info_string",
  "_parse_data",
  "_parse_path_to_dict",
  "_parse_time",
  "_parse_to_inventory_object",
  "_patch_header",
  "_polezero2tag",
  "_rapid_gap_testing",
  "_rapid_overlap_testing",
  "_read",
  "_read_equipment",
  "_read_external_reference",
  "_read_extra",
  "_read_float_var",
  "_read_person",
  "_readline",
  "_readwavename",
  "_reopen_stdio",
  "_repr_list_of_keys",
  "_sosfilt._sosfilt",
  "_sosfilt._zpk2sos",
  "_tag2obj",
  "_tag2pole_or_zero",
  "_test_offset_from_realtime",
  "_test_plot_all",
  "_to_str",
  "_tostr",
  "_unpack_trace",
  "_wildcarded_except",
  "_write_equipment",
  "_write_external_reference",
  "_write_extra",
  "_write_person",
  "_xcorr",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "argparse.Action",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "argparse.RawTextHelpFormatter",
  "argparse.SUPPRESS",
  "arrayio.dict_to_header_arrays",
  "arrayio.header_arrays_to_dict",
  "arrayio.init_header_arrays",
  "arrayio.read_sac",
  "arrayio.read_sac_ascii",
  "arrayio.validate_sac_content",
  "arrayio.write_sac",
  "arrayio.write_sac_ascii",
  "assert_loc",
  "assert_loc_np",
  "assert_valid",
  "attrib_type",
  "base.ClientHTTPException",
  "base.CreationInfo",
  "base.HTTPClient",
  "base.ResourceIdentifier",
  "base.ResourceIdentifier.bind_resource_ids",
  "base.WaveformClient",
  "base._event_type_class_factory",
  "base64.b64encode",
  "binascii.a2b_hex",
  "binascii.b2a_hex",
  "bisect",
  "bisect.bisect",
  "bisect.bisect_left",
  "bisect.bisect_right",
  "blkt",
  "blkt.blockette_id",
  "blkt.id",
  "blockette",
  "blockette.Blockette",
  "blockette.Blockette.get_xml",
  "blockette.Blockette.parse_seed",
  "blockette.Blockette.parse_xml",
  "blockette.Blockette010",
  "blockette.Blockette011",
  "blockette.Blockette012",
  "blockette.Blockette034",
  "blockette.Blockette053",
  "blockette.Blockette054",
  "blockette.Blockette057",
  "blockette.Blockette058",
  "blockette.Blockette060",
  "blockette.Blockette061",
  "blockette_class",
  "bytes.maketrans",
  "bz2",
  "bz2.decompress",
  "cProfile",
  "cProfile.run",
  "cStringIO.StringIO",
  "c_wrappers.clibtau.bullen_radial_slowness_inner_loop",
  "c_wrappers.clibtau.seismic_phase_calc_time_inner_loop",
  "c_wrappers.clibtau.tau_branch_calc_time_dist_inner_loop",
  "calendar",
  "calendar.timegm",
  "cartopy.crs",
  "cartopy.crs.AlbersEqualArea",
  "cartopy.crs.Geodetic",
  "cartopy.crs.Mollweide",
  "cartopy.crs.Orthographic",
  "cartopy.feature",
  "cartopy.feature.BORDERS",
  "cartopy.feature.BORDERS.category",
  "cartopy.feature.BORDERS.name",
  "cartopy.feature.LAND",
  "cartopy.feature.LAND.category",
  "cartopy.feature.LAND.name",
  "cartopy.feature.NaturalEarthFeature",
  "cartopy.feature.OCEAN",
  "cartopy.feature.OCEAN.category",
  "cartopy.feature.OCEAN.name",
  "catalog.Catalog",
  "changed1",
  "changed2",
  "changed3",
  "client.Client",
  "client.Client.__init__.__doc__",
  "client.Client.__init__.__func__.__doc__",
  "client.get_bulk_string",
  "client.raise_on_error",
  "client.seedlinkconnection.SeedLinkConnection",
  "client.seedlinkconnection.SeedLinkConnection.DFT_READBUF_SIZE",
  "client.slstate.SLState.SL_UP",
  "closest_branch_to_depth",
  "cls",
  "cmap",
  "codecs",
  "codecs.encode",
  "codecs.open",
  "collections",
  "collections.Container",
  "collections.Counter",
  "collections.Iterable",
  "collections.Mapping",
  "collections.MutableMapping",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "configparser",
  "contextlib",
  "contextlib.closing",
  "contextlib.contextmanager",
  "converter",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "core.LazyTraceHeaderAttribDict",
  "core._is_mseed",
  "core._is_resp",
  "cos",
  "count_filesize",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.ciphers.Cipher",
  "cryptography.hazmat.primitives.ciphers.algorithms",
  "cryptography.hazmat.primitives.ciphers.algorithms.TripleDES",
  "cryptography.hazmat.primitives.ciphers.modes",
  "cryptography.hazmat.primitives.ciphers.modes.CBC",
  "csv",
  "csv.reader",
  "ctypes",
  "ctypes.ArgumentError",
  "ctypes.CDLL",
  "ctypes.CFUNCTYPE",
  "ctypes.POINTER",
  "ctypes.Structure",
  "ctypes.Union",
  "ctypes.addressof",
  "ctypes.byref",
  "ctypes.c_byte",
  "ctypes.c_char",
  "ctypes.c_char_p",
  "ctypes.c_char_p.in_dll",
  "ctypes.c_double",
  "ctypes.c_float",
  "ctypes.c_int",
  "ctypes.c_int.in_dll",
  "ctypes.c_int16",
  "ctypes.c_int32",
  "ctypes.c_int64",
  "ctypes.c_int8",
  "ctypes.c_long",
  "ctypes.c_longlong",
  "ctypes.c_short",
  "ctypes.c_ubyte",
  "ctypes.c_uint",
  "ctypes.c_uint8",
  "ctypes.c_ushort",
  "ctypes.c_void_p",
  "ctypes.cast",
  "ctypes.create_string_buffer",
  "ctypes.memmove",
  "ctypes.memset",
  "ctypes.pointer",
  "ctypes.pythonapi",
  "ctypes.sizeof",
  "ctypes.string_at",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcfromtimestamp",
  "datetime.datetime.utcnow",
  "datetime.time",
  "datetime.timedelta",
  "datetime.tzinfo",
  "dateutil.rrule.MINUTELY",
  "dateutil.rrule.SECONDLY",
  "decode_steim",
  "decorator",
  "decorator.FunctionMaker",
  "decorator.FunctionMaker.create",
  "decorator.decorate",
  "decorator.decorator",
  "default.Default",
  "dict.__setattr__",
  "dict.fromkeys",
  "difflib",
  "difflib.Differ",
  "difflib.unified_diff",
  "dir.startswith",
  "distutils.sysconfig",
  "distutils.sysconfig.get_config_var",
  "distutils.version.LooseVersion",
  "doctest",
  "doctest.DocFileSuite",
  "doctest.DocTestSuite",
  "doctest.testmod",
  "download_helpers.ClientDownloadHelper",
  "download_helpers.STATUS.DOWNLOADED",
  "download_helpers.STATUS.EXISTS",
  "download_url",
  "e",
  "eidaws_routing_client.EIDAWSRoutingClient",
  "event.Event",
  "evt.Evt",
  "evt.EvtTag",
  "evt_base.EvtBadDataError",
  "evt_base.EvtBadHeaderError",
  "evt_base.EvtBaseError",
  "evt_base.EvtEOFError",
  "evt_base.EvtVirtual",
  "fct",
  "federator_routing_client.FederatorRoutingClient",
  "fields.FixedString",
  "fields.Float",
  "fields.Integer",
  "fields.Loop",
  "fields.VariableString",
  "filecmp",
  "filecmp.cmp",
  "filter.add_argument",
  "flake8",
  "flake8.__version__.split",
  "flake8.api.legacy",
  "flake8.api.legacy.get_style_guide",
  "fmt",
  "fmt_seed",
  "fnmatch",
  "fnmatch.fnmatch",
  "format.dist.key",
  "format.name",
  "format.upper",
  "from_utcdatetime",
  "full_test_event",
  "func",
  "func.__module__.startswith",
  "func.__qualname__",
  "functools",
  "functools.partial",
  "functools.wraps",
  "future.builtins",
  "future.standard_library",
  "future.standard_library.hooks",
  "future.standard_library.install_aliases",
  "future.utils.PY2",
  "future.utils.PY3",
  "future.utils.native",
  "future.utils.native_bytes",
  "future.utils.native_str",
  "future.utils.python_2_unicode_compatible",
  "future.utils.raise_from",
  "future.utils.with_metaclass",
  "geodetics.gps2dist_azimuth",
  "geodetics.kilometer2degrees",
  "geographiclib",
  "geographiclib.__version__.split",
  "geographiclib.geodesic.Geodesic",
  "get_bulk_string",
  "get_filename",
  "get_sac_reftime",
  "get_unit_mapping",
  "get_value_repr",
  "getattrs",
  "getter",
  "glob",
  "glob.glob",
  "glob.has_magic",
  "glob.iglob",
  "gzip",
  "gzip.GzipFile",
  "gzip.open",
  "h",
  "has_blkt_100",
  "hash.digest",
  "hash.update",
  "hashlib",
  "hashlib.md5",
  "header",
  "header.ACCEPTED_INT",
  "header.ACCEPTED_VALS",
  "header.ACCEPTED_VALS.items",
  "header.BINARY_FILE_HEADER_FORMAT",
  "header.DATA_SAMPLE_FORMAT_CODE_DTYPE",
  "header.DATA_SAMPLE_FORMAT_PACK_FUNCTIONS",
  "header.DATA_SAMPLE_FORMAT_SAMPLE_SIZE",
  "header.DATA_SAMPLE_FORMAT_UNPACK_FUNCTIONS",
  "header.DATA_SAMPLE_FORMAT_UNPACK_FUNCTIONS.keys",
  "header.DEFAULT_PARAMETERS",
  "header.DEFAULT_TYPES",
  "header.DOC",
  "header.DOC.get",
  "header.ENDIAN",
  "header.ENUM_NAMES",
  "header.ENUM_VALS",
  "header.FDSNException",
  "header.FDSNNoDataException",
  "header.FDSNRedirectException",
  "header.FDSNWS",
  "header.FLOATHDRS",
  "header.FLOATHDRS.index",
  "header.FNULL",
  "header.HEADER_DOCSTRING",
  "header.INTHDRS",
  "header.INTHDRS.index",
  "header.INULL",
  "header.MONTHS",
  "header.OPTIONAL_PARAMETERS",
  "header.PARAMETER_ALIASES",
  "header.PARAMETER_ALIASES.get",
  "header.RELHDRS",
  "header.SNULL",
  "header.STRHDRS",
  "header.STRHDRS.index",
  "header.TRACE_HEADER_FORMAT",
  "header.TRACE_HEADER_KEYS.index",
  "header.URL_MAPPINGS",
  "header.URL_MAPPINGS.keys",
  "header.WADL_PARAMETERS_NOT_TO_BE_PARSED",
  "header.get",
  "header.items",
  "header.pop",
  "header.update",
  "headers.Blkt1001S",
  "headers.Blkt100S",
  "headers.DATATYPES",
  "headers.ENCODINGS",
  "headers.ENCODINGS.items",
  "headers.ENDIAN",
  "headers.FIXED_HEADER_ACTIVITY_FLAGS",
  "headers.FIXED_HEADER_DATA_QUAL_FLAGS",
  "headers.FIXED_HEADER_IO_CLOCK_FLAGS",
  "headers.HPTERROR",
  "headers.HPTMODULUS",
  "headers.MSRecord",
  "headers.MS_NOERROR",
  "headers.SAMPLESIZES",
  "headers.SEED_CONTROL_HEADERS",
  "headers.SelectTime",
  "headers.Selections",
  "headers.UNSUPPORTED_ENCODINGS",
  "headers.VALID_CONTROL_HEADERS",
  "headers.VALID_RECORD_LENGTHS",
  "headers.clibmseed.lil_free",
  "headers.clibmseed.ms_detect",
  "headers.clibmseed.ms_genfactmult",
  "headers.clibmseed.ms_nomsamprate",
  "headers.clibmseed.ms_readmsr_r",
  "headers.clibmseed.msr_addblockette",
  "headers.clibmseed.msr_decode_steim1",
  "headers.clibmseed.msr_decode_steim2",
  "headers.clibmseed.msr_endtime",
  "headers.clibmseed.msr_free",
  "headers.clibmseed.msr_init",
  "headers.clibmseed.msr_parse",
  "headers.clibmseed.msr_starttime",
  "headers.clibmseed.mst_free",
  "headers.clibmseed.mst_pack",
  "headers.clibmseed.readMSEEDBuffer",
  "headers.clibmseed.verbose",
  "helper_classes.Arrival",
  "helper_classes.CriticalDepth",
  "helper_classes.DepthRange",
  "helper_classes.DepthRange._from_array",
  "helper_classes.SlownessLayer",
  "helper_classes.SlownessModelError",
  "helper_classes.SplitLayerInfo",
  "helper_classes.TauModelError",
  "helper_classes.TimeDist",
  "helper_classes.TimeDistGeo",
  "http.client",
  "http.server",
  "http.server.BaseHTTPRequestHandler",
  "http.server.HTTPServer",
  "httpproxy.http_proxy_connect",
  "id.append",
  "id.paz",
  "id.rsplit",
  "id.setter",
  "id.split",
  "id.upper",
  "imghdr",
  "imghdr.what",
  "importlib",
  "importlib.import_module",
  "inspect",
  "inspect.currentframe",
  "inspect.getargspec",
  "inspect.getcallargs",
  "inspect.getfile",
  "inspect.ismethod",
  "inspect.signature",
  "intp",
  "io",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.StringIO",
  "io.TextIOBase",
  "io.TextIOWrapper",
  "io._WindowsConsoleIO",
  "io.open",
  "is_format",
  "isdigit",
  "it",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.count",
  "itertools.filterfalse",
  "itertools.groupby",
  "itertools.ifilterfalse",
  "itertools.izip_longest",
  "itertools.permutations",
  "itertools.product",
  "itertools.zip_longest",
  "json",
  "json.JSONEncoder",
  "json.dumps",
  "json.load",
  "json.loads",
  "jsonschema",
  "jsonschema.validate",
  "last_or_none",
  "libgcf.is_gcf",
  "libgcf.read",
  "libgcf.read_header",
  "libgse1.read",
  "libgse1.read_header",
  "libgse2.is_gse2",
  "libgse2.read",
  "libgse2.read_header",
  "libgse2.read_integer_data",
  "libgse2.uncompress_cm6",
  "libgse2.verify_checksum",
  "libgse2.write",
  "lines_iter",
  "linspace2",
  "listsort",
  "locale",
  "locale.LC_ALL",
  "locale.getpreferredencoding",
  "locale.setlocale",
  "logging",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.basicConfig",
  "logging.getLogger",
  "logging.info",
  "lxml",
  "lxml.etree",
  "lxml.etree.Element",
  "lxml.etree.QName",
  "lxml.etree.RelaxNG",
  "lxml.etree.SubElement",
  "lxml.etree.XMLSchema",
  "lxml.etree.XMLSyntaxError",
  "lxml.etree.XSLT",
  "lxml.etree.XSLT.strparam",
  "lxml.etree._Element",
  "lxml.etree.__version__",
  "lxml.etree.__version__.rsplit",
  "lxml.etree.fromstring",
  "lxml.etree.iterparse",
  "lxml.etree.parse",
  "lxml.etree.register_namespace",
  "lxml.etree.tostring",
  "lxml.objectify",
  "lxml.objectify.fromstring",
  "math",
  "math.asin",
  "math.atan",
  "math.atan2",
  "math.ceil",
  "math.cos",
  "math.degrees",
  "math.fabs",
  "math.floor",
  "math.hypot",
  "math.isinf",
  "math.isnan",
  "math.log",
  "math.log10",
  "math.modf",
  "math.pi",
  "math.pow",
  "math.radians",
  "math.sin",
  "math.sqrt",
  "math.tan",
  "matplotlib",
  "matplotlib.axes.Axes",
  "matplotlib.cbook",
  "matplotlib.cbook.simple_linear_interpolation",
  "matplotlib.cm.ScalarMappable",
  "matplotlib.cm.get_cmap",
  "matplotlib.collections",
  "matplotlib.collections.PatchCollection",
  "matplotlib.colorbar.Colorbar",
  "matplotlib.colorbar.ColorbarBase",
  "matplotlib.colors.LinearSegmentedColormap",
  "matplotlib.colors.ListedColormap",
  "matplotlib.colors.Normalize",
  "matplotlib.dates",
  "matplotlib.dates.AutoDateFormatter",
  "matplotlib.dates.AutoDateLocator",
  "matplotlib.dates.DateFormatter",
  "matplotlib.dates.date2num",
  "matplotlib.dates.num2date",
  "matplotlib.font_manager",
  "matplotlib.font_manager.findfont",
  "matplotlib.get_backend",
  "matplotlib.image",
  "matplotlib.image._png.read_png",
  "matplotlib.lines",
  "matplotlib.lines.Line2D",
  "matplotlib.mlab",
  "matplotlib.mlab.detrend_linear",
  "matplotlib.mlab.psd",
  "matplotlib.mlab.specgram",
  "matplotlib.patches",
  "matplotlib.patches.Circle",
  "matplotlib.patches.Ellipse",
  "matplotlib.patches.PathPatch",
  "matplotlib.patches.Rectangle",
  "matplotlib.path",
  "matplotlib.path.Path",
  "matplotlib.path.Path.CLOSEPOLY",
  "matplotlib.path.Path.LINETO",
  "matplotlib.path.Path.MOVETO",
  "matplotlib.patheffects",
  "matplotlib.patheffects.withStroke",
  "matplotlib.projections.polar.PolarAxes",
  "matplotlib.pyplot",
  "matplotlib.pyplot.Normalize",
  "matplotlib.pyplot.NullFormatter",
  "matplotlib.pyplot.clim",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.colorbar",
  "matplotlib.pyplot.draw",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.grid",
  "matplotlib.pyplot.hlines",
  "matplotlib.pyplot.imshow",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.pcolor",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.rc",
  "matplotlib.pyplot.rcParams",
  "matplotlib.pyplot.rgrids",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.sca",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.subplots_adjust",
  "matplotlib.pyplot.suptitle",
  "matplotlib.pyplot.switch_backend",
  "matplotlib.pyplot.thetagrids",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.vlines",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.xlim",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "matplotlib.rcParams",
  "matplotlib.rcdefaults",
  "matplotlib.text",
  "matplotlib.text.Text",
  "matplotlib.text.Text.draw",
  "matplotlib.ticker.FormatStrFormatter",
  "matplotlib.ticker.Formatter",
  "matplotlib.ticker.FuncFormatter",
  "matplotlib.ticker.MaxNLocator",
  "matplotlib.ticker.NullFormatter",
  "matplotlib.ticker.ScalarFormatter",
  "matplotlib.transforms",
  "matplotlib.transforms.IdentityTransform",
  "matplotlib.transforms.blended_transform_factory",
  "matplotlib.transforms.offset_copy",
  "matplotlib.use",
  "mayavi.mlab",
  "mayavi.mlab.figure",
  "mayavi.mlab.mesh",
  "mayavi.mlab.plot3d",
  "mayavi.mlab.quiver3d",
  "mayavi.mlab.show",
  "median_amplitude_plateau",
  "metadata_getter",
  "mmap",
  "mmap.ACCESS_READ",
  "mmap.mmap",
  "mock",
  "mopad_wrapper.beach",
  "mpl_toolkits.basemap.Basemap",
  "mpl_toolkits.mplot3d.Axes3D",
  "multiprocessing",
  "multiprocessing.Manager",
  "multiprocessing.Process",
  "multiprocessing.cpu_count",
  "multiprocessing.dummy.Pool",
  "multiprocessing.pool.ThreadPool",
  "network.Network",
  "norm",
  "numpy",
  "numpy.NaN",
  "numpy.abs",
  "numpy.absolute",
  "numpy.all",
  "numpy.allclose",
  "numpy.alltrue",
  "numpy.amax",
  "numpy.angle",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.argwhere",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.asmatrix",
  "numpy.atleast_1d",
  "numpy.atleast_2d",
  "numpy.bincount",
  "numpy.bitwise_and",
  "numpy.blackman",
  "numpy.bool",
  "numpy.bool_",
  "numpy.broadcast_arrays",
  "numpy.c_",
  "numpy.c_.T",
  "numpy.c_.transpose",
  "numpy.ceil",
  "numpy.choose",
  "numpy.clip",
  "numpy.complex",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.complex_",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.conjugate",
  "numpy.copy",
  "numpy.copysign",
  "numpy.corrcoef",
  "numpy.correlate",
  "numpy.cos",
  "numpy.cov",
  "numpy.cross",
  "numpy.ctypeslib.ndpointer",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.deg2rad",
  "numpy.degrees",
  "numpy.delete",
  "numpy.diag",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.dtype",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.equal",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.fabs",
  "numpy.fft.fft",
  "numpy.fft.fftfreq",
  "numpy.fft.fftpack",
  "numpy.fft.fftshift",
  "numpy.fft.ifft",
  "numpy.fft.ifftshift",
  "numpy.fft.irfft",
  "numpy.fft.rfft",
  "numpy.finfo",
  "numpy.fix",
  "numpy.flipud",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.float_",
  "numpy.floating",
  "numpy.floor",
  "numpy.frombuffer",
  "numpy.fromfile",
  "numpy.fromstring",
  "numpy.genfromtxt",
  "numpy.geterr",
  "numpy.gradient",
  "numpy.hamming",
  "numpy.hanning",
  "numpy.histogram2d",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.imag",
  "numpy.in1d",
  "numpy.inf",
  "numpy.insert",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.int_",
  "numpy.integer",
  "numpy.interp",
  "numpy.invert",
  "numpy.iscomplexobj",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isreal",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.lexsort",
  "numpy.linalg.cond",
  "numpy.linalg.det",
  "numpy.linalg.eig",
  "numpy.linalg.eigh",
  "numpy.linalg.inv",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.load",
  "numpy.loads",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.log10",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.logspace",
  "numpy.ma",
  "numpy.ma.arange",
  "numpy.ma.array",
  "numpy.ma.concatenate",
  "numpy.ma.count_masked",
  "numpy.ma.empty",
  "numpy.ma.extras.flatnotmasked_contiguous",
  "numpy.ma.filled",
  "numpy.ma.getdata",
  "numpy.ma.getmask",
  "numpy.ma.is_masked",
  "numpy.ma.masked",
  "numpy.ma.masked_all",
  "numpy.ma.masked_array",
  "numpy.ma.masked_equal",
  "numpy.ma.masked_inside",
  "numpy.ma.masked_invalid",
  "numpy.ma.masked_where",
  "numpy.ma.nomask",
  "numpy.ma.ones",
  "numpy.matrix",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.mgrid",
  "numpy.min",
  "numpy.minimum",
  "numpy.mod",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.newaxis.repeat",
  "numpy.nonzero",
  "numpy.object_",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.percentile",
  "numpy.pi",
  "numpy.poly",
  "numpy.poly1d",
  "numpy.polyfit",
  "numpy.polyval",
  "numpy.power",
  "numpy.prod",
  "numpy.ptp",
  "numpy.r_",
  "numpy.r_.T",
  "numpy.r_.transpose",
  "numpy.rad2deg",
  "numpy.radians",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.ranf",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.real",
  "numpy.repeat",
  "numpy.require",
  "numpy.reshape",
  "numpy.resize",
  "numpy.right_shift",
  "numpy.roll",
  "numpy.round",
  "numpy.safe_eval",
  "numpy.savetxt",
  "numpy.savez",
  "numpy.savez_compressed",
  "numpy.searchsorted",
  "numpy.seterr",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sinc",
  "numpy.size",
  "numpy.sort",
  "numpy.spacing",
  "numpy.sqrt",
  "numpy.square",
  "numpy.std",
  "numpy.str_",
  "numpy.string_",
  "numpy.sum",
  "numpy.take",
  "numpy.tan",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.trace",
  "numpy.transpose",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.unwrap",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "object.traces",
  "obspy.Trace.__add__",
  "obspy.Trace.__str__",
  "obspy.UTCDateTime.DEFAULT_PRECISION",
  "obspy.UTCDateTime.now",
  "obspy.UTCDateTime.strptime",
  "obspy.UTCDateTime.utcnow",
  "obspy.__init__.msg",
  "obspy.clients.arclink.tests.__init__.MODULE_NAME",
  "obspy.clients.earthworm.tests.__init__.MODULE_NAME",
  "obspy.clients.fdsn.Client._Client__service_discovery_cache.clear",
  "obspy.clients.fdsn.header.DEFAULT_USER_AGENT.split",
  "obspy.clients.fdsn.header.URL_MAPPINGS.values",
  "obspy.clients.fdsn.mass_downloader.__init__.msg",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.DOWNLOADED",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.DOWNLOAD_REJECTED",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.EXISTS",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.IGNORE",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.NEEDS_DOWNLOADING",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.NONE",
  "obspy.clients.fdsn.mass_downloader.download_helpers.STATUS.ignore",
  "obspy.clients.fdsn.tests.__init__.MODULE_NAME",
  "obspy.clients.filesystem.sds.SDS_FMTSTR.format",
  "obspy.clients.filesystem.tests.__init__.MODULE_NAME",
  "obspy.clients.iris.tests.__init__.MODULE_NAME",
  "obspy.clients.neic.tests.__init__.MODULE_NAME",
  "obspy.clients.nrl.tests.__init__.MODULE_NAME",
  "obspy.clients.seedlink.slpacket.SLPacket.SLERROR",
  "obspy.clients.seedlink.slpacket.SLPacket.SLNOPACKET",
  "obspy.clients.seedlink.slpacket.SLPacket.TYPE_SLINF",
  "obspy.clients.seedlink.slpacket.SLPacket.TYPE_SLINFT",
  "obspy.clients.seedlink.tests.__init__.MODULE_NAME",
  "obspy.clients.seishub.tests.__init__.MODULE_NAME",
  "obspy.clients.syngine.tests.__init__.MODULE_NAME",
  "obspy.core.compatibility.configparser.ConfigParser",
  "obspy.core.compatibility.configparser.SafeConfigParser",
  "obspy.core.compatibility.mock.MagicMock",
  "obspy.core.compatibility.mock.patch",
  "obspy.core.compatibility.mock.patch.dict",
  "obspy.core.compatibility.mock.patch.object",
  "obspy.core.event.Catalog.write.__doc__",
  "obspy.core.event.Catalog.write.im_func.func_doc",
  "obspy.core.event.ResourceIdentifier._ResourceIdentifier__resource_id_tracker",
  "obspy.core.event.ResourceIdentifier._ResourceIdentifier__resource_id_tracker.clear",
  "obspy.core.event.ResourceIdentifier._ResourceIdentifier__resource_id_weak_dict",
  "obspy.core.event.ResourceIdentifier._ResourceIdentifier__resource_id_weak_dict.clear",
  "obspy.core.event.header.EvaluationMode.AUTOMATIC",
  "obspy.core.event.header.EvaluationMode.MANUAL",
  "obspy.core.event.header.EventTypeCertainty.KNOWN",
  "obspy.core.event.header.EventTypeCertainty.SUSPECTED",
  "obspy.core.event.header.PickOnset.EMERGENT",
  "obspy.core.event.header.PickOnset.IMPULSIVE",
  "obspy.core.event.header.PickOnset.QUESTIONABLE",
  "obspy.core.event.header.PickPolarity.NEGATIVE",
  "obspy.core.event.header.PickPolarity.POSITIVE",
  "obspy.core.event.read_events.__doc__",
  "obspy.core.inventory.Inventory.write.__doc__",
  "obspy.core.inventory.Inventory.write.im_func.func_doc",
  "obspy.core.inventory.read_inventory.__doc__",
  "obspy.core.stream.Stream.write.__doc__",
  "obspy.core.stream.Stream.write.im_func.func_doc",
  "obspy.core.stream.__warningregistry__",
  "obspy.core.stream.__warningregistry__.keys",
  "obspy.core.stream.__warningregistry__.pop",
  "obspy.core.stream.read.__doc__",
  "obspy.core.tests.__init__.MODULE_NAME",
  "obspy.core.utcdatetime.UTCDateTime.DEFAULT_PRECISION",
  "obspy.core.util.AttribDict.__setattr__",
  "obspy.core.util.__file__",
  "obspy.core.util.misc.BAND_CODE.get",
  "obspy.core.util.misc._ENTRY_POINT_CACHE.get",
  "obspy.core.util.testing.MODULE_TEST_SKIP_CHECKS.rsplit",
  "obspy.db.db.Base.metadata",
  "obspy.db.db.WaveformChannel.channel",
  "obspy.db.db.WaveformChannel.endtime",
  "obspy.db.db.WaveformChannel.file_id",
  "obspy.db.db.WaveformChannel.location",
  "obspy.db.db.WaveformChannel.network",
  "obspy.db.db.WaveformChannel.starttime",
  "obspy.db.db.WaveformChannel.station",
  "obspy.db.db.WaveformFile.file",
  "obspy.db.db.WaveformFile.id",
  "obspy.db.db.WaveformFile.path_id",
  "obspy.db.db.WaveformPath.archived",
  "obspy.db.db.WaveformPath.id",
  "obspy.db.db.WaveformPath.path",
  "obspy.db.tests.__init__.MODULE_NAME",
  "obspy.geodetics.tests.__init__.MODULE_NAME",
  "obspy.imaging.tests.__init__.MODULE_NAME",
  "obspy.io.ah.tests.__init__.MODULE_NAME",
  "obspy.io.arclink.tests.__init__.MODULE_NAME",
  "obspy.io.ascii.tests.__init__.MODULE_NAME",
  "obspy.io.cmtsolution.tests.__init__.MODULE_NAME",
  "obspy.io.cnv.tests.__init__.MODULE_NAME",
  "obspy.io.css.tests.__init__.MODULE_NAME",
  "obspy.io.gcf.tests.__init__.MODULE_NAME",
  "obspy.io.gse2.tests.__init__.MODULE_NAME",
  "obspy.io.iaspei.tests.__init__.MODULE_NAME",
  "obspy.io.json.tests.__init__.MODULE_NAME",
  "obspy.io.kinemetrics.tests.__init__.MODULE_NAME",
  "obspy.io.kml.tests.__init__.MODULE_NAME",
  "obspy.io.mseed.__init__.ObsPyMSEEDError",
  "obspy.io.mseed.__init__.ObsPyMSEEDReadingError",
  "obspy.io.mseed.headers.ENCODINGS.items",
  "obspy.io.mseed.headers.ENCODINGS.values",
  "obspy.io.mseed.headers.clibmseed.msr_decode_steim1",
  "obspy.io.mseed.headers.clibmseed.msr_decode_steim2",
  "obspy.io.mseed.headers.clibmseed.msr_endtime",
  "obspy.io.mseed.headers.clibmseed.msr_free",
  "obspy.io.mseed.headers.clibmseed.msr_init",
  "obspy.io.mseed.headers.clibmseed.msr_parse",
  "obspy.io.mseed.headers.clibmseed.msr_starttime",
  "obspy.io.mseed.tests.__init__.MODULE_NAME",
  "obspy.io.ndk.tests.__init__.MODULE_NAME",
  "obspy.io.nied.tests.__init__.MODULE_NAME",
  "obspy.io.nlloc.tests.__init__.MODULE_NAME",
  "obspy.io.nordic.tests.__init__.MODULE_NAME",
  "obspy.io.pdas.tests.__init__.MODULE_NAME",
  "obspy.io.pde.tests.__init__.MODULE_NAME",
  "obspy.io.quakeml.tests.__init__.MODULE_NAME",
  "obspy.io.reftek.core.__warningregistry__",
  "obspy.io.reftek.core.__warningregistry__.clear",
  "obspy.io.reftek.tests.__init__.MODULE_NAME",
  "obspy.io.sac.SACTrace.from_obspy_trace",
  "obspy.io.sac.SACTrace.read",
  "obspy.io.sac.tests.__init__.MODULE_NAME",
  "obspy.io.scardec.tests.__init__.MODULE_NAME",
  "obspy.io.seg2.tests.__init__.MODULE_NAME",
  "obspy.io.segy.tests.__init__.MODULE_NAME",
  "obspy.io.seisan.tests.__init__.MODULE_NAME",
  "obspy.io.seiscomp.tests.__init__.MODULE_NAME",
  "obspy.io.sh.tests.__init__.MODULE_NAME",
  "obspy.io.shapefile.tests.__init__.MODULE_NAME",
  "obspy.io.stationtxt.tests.__init__.MODULE_NAME",
  "obspy.io.stationxml.tests.__init__.MODULE_NAME",
  "obspy.io.wav.tests.__init__.MODULE_NAME",
  "obspy.io.win.tests.__init__.MODULE_NAME",
  "obspy.io.xseed.tests.__init__.MODULE_NAME",
  "obspy.io.y.tests.__init__.MODULE_NAME",
  "obspy.io.zmap.tests.__init__.MODULE_NAME",
  "obspy.realtime.tests.__init__.MODULE_NAME",
  "obspy.scripts.tests.__init__.MODULE_NAME",
  "obspy.signal.headers.clibevresp._obspy_calc_resp",
  "obspy.signal.headers.clibevresp._obspy_calc_resp.argtypes",
  "obspy.signal.headers.clibevresp._obspy_calc_resp.restype",
  "obspy.signal.headers.clibevresp._obspy_check_channel",
  "obspy.signal.headers.clibevresp._obspy_check_channel.argtypes",
  "obspy.signal.headers.clibevresp._obspy_check_channel.restype",
  "obspy.signal.headers.clibevresp._obspy_norm_resp",
  "obspy.signal.headers.clibevresp._obspy_norm_resp.argtypes",
  "obspy.signal.headers.clibevresp._obspy_norm_resp.restype",
  "obspy.signal.headers.clibevresp.curr_file",
  "obspy.signal.headers.clibevresp.curr_file.value",
  "obspy.signal.headers.clibevresp.evr_spline",
  "obspy.signal.headers.clibevresp.evr_spline.argtypes",
  "obspy.signal.headers.clibevresp.evr_spline.restype",
  "obspy.signal.headers.clibevresp.evresp",
  "obspy.signal.headers.clibevresp.free_response",
  "obspy.signal.headers.clibevresp.twoPi",
  "obspy.signal.headers.clibsignal.X_corr",
  "obspy.signal.headers.clibsignal.ar_picker",
  "obspy.signal.headers.clibsignal.calcSteer",
  "obspy.signal.headers.clibsignal.calculate_kernel",
  "obspy.signal.headers.clibsignal.generalizedBeamformer",
  "obspy.signal.headers.clibsignal.hermite_interpolation",
  "obspy.signal.headers.clibsignal.lanczos_resample",
  "obspy.signal.headers.clibsignal.ppick",
  "obspy.signal.headers.clibsignal.recstalta",
  "obspy.signal.headers.clibsignal.stalta",
  "obspy.signal.headers.clibsignal.utl_geo_km",
  "obspy.signal.headers.clibsignal.utl_lonlat",
  "obspy.signal.headers.clibsignal.utl_lonlat.argtypes",
  "obspy.signal.headers.clibsignal.utl_lonlat.restype",
  "obspy.signal.spectral_estimation.PPSD.NPZ_STORE_KEYS",
  "obspy.signal.spectral_estimation.PPSD.NPZ_STORE_KEYS_ARRAY_TYPES",
  "obspy.signal.spectral_estimation.PPSD.NPZ_STORE_KEYS_LIST_TYPES",
  "obspy.signal.spectral_estimation.PPSD.NPZ_STORE_KEYS_SIMPLE_TYPES",
  "obspy.signal.tests.__init__.MODULE_NAME",
  "obspy.signal.util.clibsignal.recstalta",
  "obspy.taup.slowness_model.SlownessModel.debug",
  "obspy.taup.tau_model.TauModel.debug",
  "obspy.taup.tests.__init__.MODULE_NAME",
  "operator",
  "operator.attrgetter",
  "operator.itemgetter",
  "os",
  "os.SEEK_CUR",
  "os.SEEK_END",
  "os.SEEK_SET",
  "os.chdir",
  "os.curdir",
  "os.devnull",
  "os.dup",
  "os.dup2",
  "os.environ",
  "os.environ.get",
  "os.environ.keys",
  "os.extsep",
  "os.fdopen",
  "os.fstat",
  "os.getcwd",
  "os.getenv",
  "os.kill",
  "os.linesep",
  "os.linesep.encode",
  "os.linesep.join",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.pardir",
  "os.path",
  "os.path.abspath",
  "os.path.basename",
  "os.path.curdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.extsep",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.lexists",
  "os.path.normpath",
  "os.path.pardir",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.sep",
  "os.stat",
  "os.unlink",
  "os.walk",
  "pack.pack_1byte_integer",
  "pack.pack_2byte_integer",
  "pack.pack_4byte_fixed_point",
  "pack.pack_4byte_ibm",
  "pack.pack_4byte_ieee",
  "pack.pack_4byte_integer",
  "packet.EHPacket",
  "packet.PACKET_TYPES",
  "packet.PACKET_TYPES_IMPLEMENTED",
  "packet.Packet.from_data",
  "packet.Reftek130UnpackPacketError",
  "packet._initial_unpack_packets",
  "packet._unpack_C0_C2_data",
  "param_type",
  "parse_func",
  "parser.Parser",
  "parser.is_xseed",
  "pickle",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "pkg_resources",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkg_resources.iter_entry_points",
  "pkg_resources.load_entry_point",
  "platform",
  "platform.architecture",
  "platform.node",
  "platform.platform",
  "platform.python_version",
  "platform.python_version_tuple",
  "platform.system",
  "png_pack",
  "process_name",
  "process_name.lower",
  "psi",
  "pstats",
  "pstats.Stats",
  "pyimgur",
  "pyimgur.Imgur",
  "pyproj",
  "pyproj.Proj",
  "pyproj.transform",
  "queue",
  "random",
  "random.randint",
  "random.random",
  "random.randrange",
  "random.seed",
  "random.uniform",
  "re",
  "re.IGNORECASE",
  "re.MULTILINE",
  "re.Scanner",
  "re.compile",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.sub",
  "re.subn",
  "read_format",
  "record_type_from_blocketteid",
  "requests",
  "requests.HTTPError",
  "requests.PreparedRequest",
  "requests.__version__",
  "requests.compat.urljoin",
  "requests.exceptions.RequestException",
  "requests.get",
  "requests.post",
  "rms",
  "routing_client.BaseRoutingClient",
  "routing_client._assert_attach_response_not_in_kwargs",
  "routing_client._assert_filename_not_in_kwargs",
  "s1",
  "s1a",
  "sactrace.SACTrace",
  "sactrace.SACTrace._from_arrays",
  "sactrace.SACTrace.from_obspy_trace",
  "sactrace.SACTrace.kevnm.__doc__",
  "sactrace.SACTrace.read",
  "scale",
  "scipy",
  "scipy.fftpack",
  "scipy.fftpack.fft",
  "scipy.fftpack.hilbert",
  "scipy.fftpack.irfft",
  "scipy.fftpack.rfft",
  "scipy.fix",
  "scipy.integrate",
  "scipy.integrate.cumtrapz",
  "scipy.interpolate",
  "scipy.interpolate.LSQUnivariateSpline",
  "scipy.odr",
  "scipy.optimize",
  "scipy.optimize.fminbound",
  "scipy.polyfit",
  "scipy.polyval",
  "scipy.signal",
  "scipy.signal.cheb2ord",
  "scipy.signal.cheby2",
  "scipy.signal.convolve",
  "scipy.signal.correlate",
  "scipy.signal.detrend",
  "scipy.signal.fftconvolve",
  "scipy.signal.freqz",
  "scipy.signal.get_window",
  "scipy.signal.hamming",
  "scipy.signal.hilbert",
  "scipy.signal.iirfilter",
  "scipy.signal.lfilter",
  "scipy.signal.remez",
  "scipy.signal.resample",
  "scipy.signal.sosfilt",
  "scipy.signal.zpk2sos",
  "scipy.signal.zpk2tf",
  "scipy.sparse",
  "scipy.sparse.coo_matrix",
  "scipy.spatial.cKDTree",
  "scipy.stats.circmean",
  "seedlinkexception.SeedLinkException",
  "segy.SEGYBinaryFileHeader",
  "segy.SEGYError",
  "segy.SEGYFile",
  "segy.SEGYTrace",
  "segy.SEGYTraceHeader",
  "segy.SUFile",
  "segy._read_segy",
  "segy._read_su",
  "segy.autodetect_endian_and_sanity_check_su",
  "seismic_phase.SeismicPhase",
  "select",
  "select.select",
  "set.intersection",
  "setter",
  "setup_query_dict",
  "shapefile",
  "shapefile.POINT",
  "shapefile.Reader",
  "shapefile.Writer",
  "shapefile.__version__.split",
  "short",
  "shutil",
  "shutil.copy",
  "shutil.rmtree",
  "signal",
  "signal.CTRL_BREAK_EVENT",
  "signal.SIGKILL",
  "sin",
  "slclient.SLPacket.SLERROR",
  "slclient.SLPacket.SLNOPACKET",
  "slclient.SLPacket.TYPE_SLINF",
  "slclient.SLPacket.TYPE_SLINFT",
  "slice.start",
  "slice.step",
  "slice.stop",
  "slnetstation.SLNetStation",
  "slnetstation.SLNetStation.MAX_SELECTOR_SIZE",
  "slowness_layer.bullen_depth_for",
  "slowness_layer.bullen_radial_slowness",
  "slowness_layer.create_from_vlayer",
  "slowness_layer.evaluate_at_bullen",
  "slowness_model.SlownessModel",
  "slpacket.SLPacket",
  "slpacket.SLPacket.ENDSIGNATURE",
  "slpacket.SLPacket.ENDSIGNATURE.lower",
  "slpacket.SLPacket.ERRORSIGNATURE",
  "slpacket.SLPacket.ERRORSIGNATURE.lower",
  "slpacket.SLPacket.INFOSIGNATURE",
  "slpacket.SLPacket.INFOSIGNATURE.lower",
  "slpacket.SLPacket.SLERROR",
  "slpacket.SLPacket.SLHEADSIZE",
  "slpacket.SLPacket.SLNOPACKET",
  "slpacket.SLPacket.SLRECSIZE",
  "slpacket.SLPacket.SLTERMINATE",
  "slpacket.SLPacket.TYPE_SLINF",
  "slpacket.SLPacket.TYPE_SLINFT",
  "slstate.SLState",
  "slstate.SLState.INFO_QUERY",
  "slstate.SLState.KEEP_ALIVE_QUERY",
  "slstate.SLState.NO_QUERY",
  "slstate.SLState.SL_DATA",
  "slstate.SLState.SL_DOWN",
  "slstate.SLState.SL_UP",
  "socket",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_KEEPALIVE",
  "socket.SO_RCVBUF",
  "socket.SO_REUSEADDR",
  "socket.error",
  "socket.socket",
  "socket.timeout",
  "spl",
  "sqlalchemy.Boolean",
  "sqlalchemy.Column",
  "sqlalchemy.DateTime",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.PickleType",
  "sqlalchemy.String",
  "sqlalchemy.and_",
  "sqlalchemy.create_engine",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.func",
  "sqlalchemy.func.max",
  "sqlalchemy.or_",
  "sqlalchemy.orm.relation",
  "sqlalchemy.orm.session.sessionmaker",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.schema.UniqueConstraint",
  "sqlite3",
  "station.Station",
  "str.__new__",
  "string",
  "string.maketrans",
  "string.printable",
  "string.punctuation",
  "struct",
  "struct.pack",
  "struct.unpack",
  "subprocess.CalledProcessError",
  "subprocess.STDOUT",
  "subprocess.check_output",
  "sys",
  "sys.__stderr__",
  "sys.__stdin__",
  "sys.__stdout__",
  "sys.argv",
  "sys.byteorder",
  "sys.exc_info",
  "sys.exit",
  "sys.float_info.min",
  "sys.getdefaultencoding",
  "sys.getrefcount",
  "sys.maxsize",
  "sys.modules.__dict__",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stderr.buffer.write",
  "sys.stderr.encoding",
  "sys.stderr.flush",
  "sys.stderr.isatty",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdout",
  "sys.stdout.buffer",
  "sys.stdout.buffer.raw",
  "sys.stdout.buffer.write",
  "sys.stdout.encoding",
  "sys.stdout.flush",
  "sys.stdout.getvalue",
  "sys.stdout.isatty",
  "sys.stdout.write",
  "sys.version_info",
  "sys.version_info.major",
  "t",
  "tarfile",
  "tarfile.is_tarfile",
  "tarfile.open",
  "tau_branch.TauBranch",
  "tau_branch.TauBranch._from_array",
  "taup_create.TauPCreate.main",
  "taup_geo.add_geo_to_arrivals",
  "taup_geo.calc_dist",
  "taup_path.TauPPath",
  "taup_pierce.TauPPierce",
  "taup_time.TauPTime",
  "taup_time.TauPTime.depth_correct",
  "telnetlib.Telnet",
  "tempfile",
  "tempfile.TemporaryFile",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "test",
  "test.countTestCases",
  "testmethod",
  "textwrap",
  "textwrap.TextWrapper",
  "textwrap.TextWrapper._wrap_chunks",
  "textwrap.fill",
  "textwrap.wrap",
  "this_type",
  "this_type.__name__",
  "threading",
  "threading.Condition",
  "threading.RLock",
  "threading.Thread",
  "threading.enumerate",
  "time",
  "time.count",
  "time.isdigit",
  "time.replace",
  "time.rsplit",
  "time.sleep",
  "time.split",
  "time.strptime",
  "time.time",
  "time2xy",
  "timeit",
  "timeit.default_timer",
  "tmp",
  "to_utcdatetime",
  "traceback",
  "traceback.extract_stack",
  "traceback.extract_tb",
  "traceback.format_exc",
  "traceback.format_exception",
  "traceback.format_exception_only",
  "traceback.format_list",
  "traceback.print_exc",
  "transform",
  "type.lower",
  "type.upper",
  "types",
  "types.MethodType",
  "unchanged",
  "unicodedata",
  "unicodedata.normalize",
  "units",
  "unittest",
  "unittest.SkipTest",
  "unittest.TestCase",
  "unittest.TestCase.failureException",
  "unittest.TestLoader",
  "unittest.TestSuite",
  "unittest.TextTestResult",
  "unittest.TextTestResult.separator2",
  "unittest.TextTestRunner",
  "unittest.expectedFailure",
  "unittest.main",
  "unittest.makeSuite",
  "unittest.mock",
  "unittest.skip",
  "unittest.skipIf",
  "unpack.OnTheFlyDataUnpacker",
  "unpack.unpack_1byte_integer",
  "unpack.unpack_2byte_integer",
  "unpack.unpack_4byte_fixed_point",
  "unpack.unpack_4byte_ibm",
  "unpack.unpack_4byte_ieee",
  "unpack.unpack_4byte_integer",
  "urllib.error.HTTPError",
  "urllib.error.URLError",
  "urllib.parse",
  "urllib.parse.urlencode",
  "urllib.parse.urlparse",
  "urllib.request",
  "urllib.request.HTTPDigestAuthHandler",
  "urllib.request.HTTPError",
  "urllib.request.HTTPPasswordMgrWithDefaultRealm",
  "urllib.request.HTTPRedirectHandler",
  "urllib.request.Request",
  "urllib.request.URLError",
  "urllib.request.build_opener",
  "urllib.request.getproxies",
  "urllib.request.urlopen",
  "urllib.urlencode",
  "urllib2",
  "urllib2.HTTPError",
  "urllib2.URLError",
  "urllib2.urlopen",
  "urlparse.urlparse",
  "util.Angle",
  "util.Azimuth",
  "util.BaseNode",
  "util.ClockDrift",
  "util.Dip",
  "util.Distance",
  "util.Equipment",
  "util.Frequency",
  "util.Latitude",
  "util.Longitude",
  "util.Operator",
  "util.SacError",
  "util.SacHeaderError",
  "util.SacHeaderTimeError",
  "util.SacIOError",
  "util.SacInvalidContentError",
  "util._16_tuple_ascii",
  "util._16_tuple_float",
  "util._16_tuple_int",
  "util._block_header",
  "util._clean_str",
  "util._convert_and_check_encoding_for_writing",
  "util._convert_datetime_to_mstime",
  "util._convert_mstime_to_datetime",
  "util._decode_ascii",
  "util._get_timestamp_for_start_of_year",
  "util._parse_long_time",
  "util._textwrap",
  "util._unified_content_strings",
  "util.ascdate",
  "util.asctime",
  "util.bcd",
  "util.bcd_16bit_int",
  "util.bcd_8bit_hex",
  "util.bcd_hex",
  "util.bcd_julian_day_string_to_seconds_of_year",
  "util.clibsegy.ibm2ieee",
  "util.clibsegy.ibm2ieee.argtypes",
  "util.clibsegy.ibm2ieee.restype",
  "util.evaluation_mode_and_status",
  "util.fixed_flag",
  "util.float_or_none",
  "util.gen_sc3_id",
  "util.get_record_information",
  "util.int_or_none",
  "util.is_valid_enum_int",
  "util.is_valid_enum_str",
  "util.next_pow_2",
  "util.obspy_to_sac_header",
  "util.sac_to_obspy_header",
  "util.smooth",
  "util.split_microseconds",
  "util.unpack_header_value",
  "utils.ChannelAvailability",
  "utils.ERRORS",
  "utils.IGNORE_ATTR",
  "utils.SEEDParserException",
  "utils.SphericalNearestNeighbour",
  "utils.blockette_34_lookup",
  "utils.datetime_2_string",
  "utils.download_and_split_mseed_bulk",
  "utils.download_stationxml",
  "utils.filter_channel_priority",
  "utils.format_resp",
  "utils.get_mseed_filename",
  "utils.get_stationxml_contents",
  "utils.get_stationxml_filename",
  "utils.get_xpath",
  "utils.lookup_code",
  "utils.parse_phase_list",
  "utils.safe_delete",
  "utils.set_xpath",
  "utils.to_string",
  "utils.to_tag",
  "uuid",
  "uuid.uuid4",
  "v_type",
  "velocity_layer.VelocityLayer",
  "velocity_layer.evaluate_velocity_at",
  "velocity_layer.evaluate_velocity_at_bottom",
  "velocity_layer.evaluate_velocity_at_top",
  "velocity_model.VelocityModel",
  "wadl_parser.WADLParser",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filters.pop",
  "warnings.filterwarnings",
  "warnings.resetwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "warnings.warn_explicit",
  "wave",
  "wave.open",
  "waveserver.get_menu",
  "waveserver.read_wave_server_v",
  "weakref",
  "weakref.WeakValueDictionary",
  "weakref.ref",
  "write_format",
  "xcorr_func",
  "xdrlib",
  "xdrlib.Packer",
  "xdrlib.Unpacker",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.SubElement",
  "xml.etree.ElementTree.tostring",
  "xml.sax.saxutils.escape",
  "xy2patch",
  "zip.namelist",
  "zip.read",
  "zipfile",
  "zipfile.ZipFile",
  "zipfile.is_zipfile",
  "zlib",
  "zlib.compress",
  "zlib.crc32"
 ],
 "deps": {
  "BaseHTTPServer": [],
  "BaseNode": [],
  "ChannelAvailability": [],
  "ConfigParser": [],
  "Crypto": [],
  "DEFAULT_XSEED_VERSION": [],
  "InternalMSEEDError": [],
  "InternalMSEEDWarning": [],
  "InvalidResponseError": [],
  "M2Crypto": [],
  "ManilaTime": [],
  "MyAttribDict": [],
  "NED2NWU": [],
  "NED2USE": [],
  "NED2XYZ": [],
  "NRLPath": [],
  "NestedDict": [],
  "NodalPlane": [],
  "ObsPyMSEEDFilesizeTooLargeError": [],
  "ObsPyMSEEDFilesizeTooSmallError": [],
  "Output": [],
  "Profile": [],
  "Queue": [],
  "ResourceIdentifier": [],
  "SEGYTraceHeader": [],
  "Stream": [],
  "ThreadURL": [],
  "_D": [],
  "_DEFAULT_VALUES": [],
  "__builtin__": [],
  "__doc__": [],
  "__future__": [],
  "_add_record": [],
  "_assert_credentials": [],
  "_assert_eida_user_and_password": [],
  "_assert_float_equal": [],
  "_assert_similarity": [],
  "_attr2obj": [],
  "_build_parsers": [],
  "_create_layer": [],
  "_create_station": [],
  "_data_sanity_checks": [],
  "_determine_dtype": [],
  "_dict2xml": [],
  "_epoch_warn_msg": [],
  "_equalarea_spherical_grid": [],
  "_finalize_blkt60": [],
  "_float_to_str": [],
  "_format_time": [],
  "_get_ah_version": [],
  "_get_http_digest_auth_handler": [],
  "_get_indices_to_merge": [],
  "_gets_merged": [],
  "_good_factorization": [],
  "_handle_input": [],
  "_internal_read_single_cmtsolution": [],
  "_internal_read_single_scardec": [],
  "_interpolate": [],
  "_list": [],
  "_m_to_deg": [],
  "_n": [],
  "_ns": [],
  "_obj2tag": [],
  "_param_info_string": [],
  "_parse_data": [],
  "_parse_path_to_dict": [],
  "_parse_time": [],
  "_parse_to_inventory_object": [],
  "_patch_header": [],
  "_polezero2tag": [],
  "_rapid_gap_testing": [],
  "_rapid_overlap_testing": [],
  "_read": [],
  "_read_equipment": [],
  "_read_external_reference": [],
  "_read_extra": [],
  "_read_float_var": [],
  "_read_person": [],
  "_readline": [],
  "_readwavename": [],
  "_reopen_stdio": [],
  "_repr_list_of_keys": [],
  "_sosfilt": [],
  "_tag2obj": [],
  "_tag2pole_or_zero": [],
  "_test_offset_from_realtime": [],
  "_test_plot_all": [],
  "_to_str": [],
  "_tostr": [],
  "_unpack_trace": [],
  "_wildcarded_except": [],
  "_write_equipment": [],
  "_write_external_reference": [],
  "_write_extra": [],
  "_write_person": [],
  "_xcorr": [],
  "abc": [],
  "argparse": [],
  "arrayio": [],
  "assert_loc": [],
  "assert_loc_np": [],
  "assert_valid": [],
  "attrib_type": [],
  "base": [],
  "base64": [],
  "binascii": [],
  "bisect": [],
  "blkt": [],
  "blockette": [],
  "blockette_class": [],
  "bytes": [],
  "bz2": [],
  "cProfile": [],
  "cStringIO": [],
  "c_wrappers": [],
  "calendar": [],
  "cartopy": [],
  "catalog": [],
  "changed1": [],
  "changed2": [],
  "changed3": [],
  "client": [],
  "closest_branch_to_depth": [],
  "cls": [],
  "cmap": [],
  "codecs": [],
  "collections": [],
  "configparser": [],
  "contextlib": [],
  "converter": [],
  "copy": [],
  "core": [],
  "cos": [],
  "count_filesize": [],
  "cryptography": [],
  "csv": [],
  "ctypes": [],
  "datetime": [],
  "dateutil": [],
  "decode_steim": [],
  "decorator": [],
  "default": [],
  "dict": [],
  "difflib": [],
  "dir": [],
  "distutils": [],
  "doctest": [],
  "download_helpers": [],
  "download_url": [],
  "e": [],
  "eidaws_routing_client": [],
  "event": [],
  "evt": [],
  "evt_base": [],
  "fct": [],
  "federator_routing_client": [],
  "fields": [],
  "filecmp": [],
  "filter": [],
  "flake8": [],
  "fmt": [],
  "fmt_seed": [],
  "fnmatch": [],
  "format": [],
  "from_utcdatetime": [],
  "full_test_event": [],
  "func": [],
  "functools": [],
  "future": [],
  "geodetics": [],
  "geographiclib": [],
  "get_bulk_string": [],
  "get_filename": [],
  "get_sac_reftime": [],
  "get_unit_mapping": [],
  "get_value_repr": [],
  "getattrs": [],
  "getter": [],
  "glob": [],
  "gzip": [],
  "h": [],
  "has_blkt_100": [],
  "hash": [],
  "hashlib": [],
  "header": [],
  "headers": [],
  "helper_classes": [],
  "http": [],
  "httpproxy": [],
  "id": [],
  "imghdr": [],
  "importlib": [],
  "inspect": [],
  "intp": [],
  "io": [],
  "is_format": [],
  "isdigit": [],
  "it": [],
  "itertools": [],
  "json": [],
  "jsonschema": [],
  "last_or_none": [],
  "libgcf": [],
  "libgse1": [],
  "libgse2": [],
  "lines_iter": [],
  "linspace2": [],
  "listsort": [],
  "locale": [],
  "logging": [],
  "lxml": [],
  "math": [],
  "matplotlib": [],
  "mayavi": [],
  "median_amplitude_plateau": [],
  "metadata_getter": [],
  "mmap": [],
  "mock": [],
  "mopad_wrapper": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "network": [],
  "norm": [],
  "numpy": [],
  "object": [],
  "obspy": [],
  "operator": [],
  "os": [],
  "pack": [],
  "packet": [],
  "param_type": [],
  "parse_func": [],
  "parser": [],
  "pickle": [],
  "pkg_resources": [],
  "platform": [],
  "png_pack": [],
  "process_name": [],
  "psi": [],
  "pstats": [],
  "pyimgur": [],
  "pyproj": [],
  "queue": [],
  "random": [],
  "re": [],
  "read_format": [],
  "record_type_from_blocketteid": [],
  "requests": [],
  "rms": [],
  "routing_client": [],
  "s1": [],
  "s1a": [],
  "sactrace": [],
  "scale": [],
  "scipy": [],
  "seedlinkexception": [],
  "segy": [],
  "seismic_phase": [],
  "select": [],
  "set": [],
  "setter": [],
  "setup_query_dict": [],
  "shapefile": [],
  "short": [],
  "shutil": [],
  "signal": [],
  "sin": [],
  "slclient": [],
  "slice": [],
  "slnetstation": [],
  "slowness_layer": [],
  "slowness_model": [],
  "slpacket": [],
  "slstate": [],
  "socket": [],
  "spl": [],
  "sqlalchemy": [],
  "sqlite3": [],
  "station": [],
  "str": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "t": [],
  "tarfile": [],
  "tau_branch": [],
  "taup_create": [],
  "taup_geo": [],
  "taup_path": [],
  "taup_pierce": [],
  "taup_time": [],
  "telnetlib": [],
  "tempfile": [],
  "test": [],
  "testmethod": [],
  "textwrap": [],
  "this_type": [],
  "threading": [],
  "time": [],
  "time2xy": [],
  "timeit": [],
  "tmp": [],
  "to_utcdatetime": [],
  "traceback": [],
  "transform": [],
  "type": [],
  "types": [],
  "unchanged": [],
  "unicodedata": [],
  "units": [],
  "unittest": [],
  "unpack": [],
  "urllib": [],
  "urllib2": [],
  "urlparse": [],
  "util": [],
  "utils": [],
  "uuid": [],
  "v_type": [],
  "velocity_layer": [],
  "velocity_model": [],
  "wadl_parser": [],
  "warnings": [],
  "wave": [],
  "waveserver": [],
  "weakref": [],
  "write_format": [],
  "xcorr_func": [],
  "xdrlib": [],
  "xml": [],
  "xy2patch": [],
  "zip": [],
  "zipfile": [],
  "zlib": []
 }
}