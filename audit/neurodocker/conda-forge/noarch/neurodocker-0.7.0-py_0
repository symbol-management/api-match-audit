{
 "bad": [
  "_version.get_versions",
  "argparse.Action",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "collections.OrderedDict",
  "copy.deepcopy",
  "datetime.datetime.utcnow",
  "docker.errors.NotFound",
  "docker.from_env",
  "etelemetry.check_available_version",
  "glob.glob",
  "impl",
  "inspect.getmembers",
  "inspect.isfunction",
  "inspect.ismethod",
  "inspect.signature",
  "io.BytesIO",
  "jinja2.Template",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "load_global_specs",
  "load_interface_spec",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "neurodocker.__version__",
  "neurodocker._version.version_json",
  "neurodocker.generators.Dockerfile",
  "neurodocker.generators.SingularityRecipe",
  "neurodocker.generators.common.ContainerSpecGenerator",
  "neurodocker.generators.common.ND_DIRECTORY",
  "neurodocker.generators.common.NEURODOCKER_ENTRYPOINT",
  "neurodocker.generators.common.SPEC_FILE",
  "neurodocker.generators.common._Users.add",
  "neurodocker.generators.common._Users.clear_memory",
  "neurodocker.generators.common._add_to_entrypoint",
  "neurodocker.generators.common._apt_install",
  "neurodocker.generators.common._get_json_spec_str",
  "neurodocker.generators.common._install",
  "neurodocker.generators.common._installation_implementations",
  "neurodocker.generators.common._installation_implementations._servers.keys",
  "neurodocker.generators.common._installation_implementations.keys",
  "neurodocker.generators.common._installation_implementations.values",
  "neurodocker.generators.common._yum_install",
  "neurodocker.generators.docker.Dockerfile._implementations.keys",
  "neurodocker.generators.docker._DockerfileImplementations",
  "neurodocker.generators.docker._DockerfileInterfaceFormatter",
  "neurodocker.generators.docker._dockerfile_base_add_copy",
  "neurodocker.generators.docker._indent",
  "neurodocker.generators.docker.logger",
  "neurodocker.generators.singularity._SingularityRecipeImplementations",
  "neurodocker.generators.singularity.logger",
  "neurodocker.interfaces.AFNI",
  "neurodocker.interfaces.ANTs",
  "neurodocker.interfaces._base.GENERIC_VERSION",
  "neurodocker.interfaces._base._BaseInterface",
  "neurodocker.interfaces._base._BaseInterface.__subclasses__",
  "neurodocker.interfaces._base._Resolver",
  "neurodocker.interfaces._base._global_specs",
  "neurodocker.interfaces._base._interface_exists_in_yaml",
  "neurodocker.interfaces._base._load_global_specs",
  "neurodocker.interfaces._base.apt_install",
  "neurodocker.interfaces._base.apt_install.render",
  "neurodocker.interfaces._base.deb_install",
  "neurodocker.interfaces._base.yum_install",
  "neurodocker.interfaces._base.yum_install.render",
  "neurodocker.interfaces.interfaces.FreeSurfer",
  "neurodocker.interfaces.interfaces.MatlabMCR",
  "neurodocker.interfaces.interfaces.Miniconda",
  "neurodocker.interfaces.interfaces.NeuroDebian",
  "neurodocker.interfaces.tests.utils.DOCKER_CACHEDIR",
  "neurodocker.interfaces.tests.utils.SINGULARITY_CACHEDIR",
  "neurodocker.interfaces.tests.utils._container_run_kwds",
  "neurodocker.interfaces.tests.utils._dockerfiles_equivalent",
  "neurodocker.interfaces.tests.utils._prune_dockerfile",
  "neurodocker.interfaces.tests.utils._volumes",
  "neurodocker.interfaces.tests.utils.docker_is_running",
  "neurodocker.interfaces.tests.utils.here",
  "neurodocker.interfaces.tests.utils.logger",
  "neurodocker.interfaces.tests.utils.test_docker_container_from_specs",
  "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs",
  "neurodocker.neurodocker.OrderedArgs",
  "neurodocker.neurodocker._add_generate_common_arguments",
  "neurodocker.neurodocker._add_generate_docker_arguments",
  "neurodocker.neurodocker._add_generate_singularity_arguments",
  "neurodocker.neurodocker._add_reprozip_merge_arguments",
  "neurodocker.neurodocker._add_reprozip_trace_arguments",
  "neurodocker.neurodocker._list_of_kv",
  "neurodocker.neurodocker._validate_generate_args",
  "neurodocker.neurodocker.create_parser",
  "neurodocker.neurodocker.generate",
  "neurodocker.neurodocker.logger",
  "neurodocker.neurodocker.main",
  "neurodocker.neurodocker.parse_args",
  "neurodocker.neurodocker.reprozip_merge",
  "neurodocker.neurodocker.reprozip_trace",
  "neurodocker.parser._check_for_invalid_keys",
  "neurodocker.reprozip.ReproZipMinimizer",
  "neurodocker.reprozip.gentle._prune._in_docker",
  "neurodocker.reprozip.gentle._prune.args",
  "neurodocker.reprozip.gentle._prune.main",
  "neurodocker.reprozip.gentle._prune.p",
  "neurodocker.reprozip.gentle.trace.BASE_PATH",
  "neurodocker.reprozip.gentle.trace.PRUNE_SCRIPT",
  "neurodocker.reprozip.gentle.trace.TRACE_SCRIPT",
  "neurodocker.reprozip.gentle.trace._get_mounts",
  "neurodocker.reprozip.gentle.trace.copy_file_to_container",
  "neurodocker.reprozip.gentle.trace.logger",
  "neurodocker.reprozip.gentle.trace.trace_and_prune",
  "neurodocker.reprozip.merge._Namespace",
  "neurodocker.reprozip.merge._check_deps",
  "neurodocker.reprozip.merge._combine_traces",
  "neurodocker.reprozip.merge._create_rpz",
  "neurodocker.reprozip.merge._extract_rpz",
  "neurodocker.reprozip.merge._fix_config_yml",
  "neurodocker.reprozip.merge._get_distribution",
  "neurodocker.reprozip.merge._merge_data_dirs",
  "neurodocker.reprozip.merge._write_version2_file",
  "neurodocker.reprozip.merge.logger",
  "neurodocker.reprozip.merge_pack_files",
  "neurodocker.reprozip.trace.BASE_PATH",
  "neurodocker.reprozip.trace.copy_file_from_container",
  "neurodocker.reprozip.trace.copy_file_to_container",
  "neurodocker.reprozip.trace.logger",
  "neurodocker.utils._count_key_occurence_list_of_tuples",
  "neurodocker.utils._get_index_of_tuple_in_instructions",
  "neurodocker.utils._namespace_to_specs",
  "neurodocker.utils._string_vals_to_bool",
  "neurodocker.utils._string_vals_to_list",
  "neurodocker.utils.create_logger",
  "neurodocker.utils.get_docker_client",
  "neurodocker.utils.get_singularity_client",
  "neurodocker.utils.load_json",
  "neurodocker.utils.load_yaml",
  "neurodocker.utils.logger",
  "neurodocker.utils.set_log_level",
  "os.environ.get",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isabs",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "pathlib.Path",
  "pathlib.Path.home",
  "posixpath.join",
  "posixpath.sep",
  "pytest.raises",
  "re.IGNORECASE",
  "re.search",
  "renderer",
  "reprozip.main.combine",
  "shutil.which",
  "subprocess.check_output",
  "subprocess.run",
  "sys.argv",
  "sys.stdin",
  "sys.version_info",
  "tarfile.TarFile",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "urllib.parse.urlparse",
  "yaml.Loader",
  "yaml.load"
 ],
 "deps": {
  "_version": [],
  "argparse": [],
  "collections": [],
  "copy": [],
  "datetime": [],
  "docker": [],
  "etelemetry": [],
  "glob": [],
  "impl": [],
  "inspect": [],
  "io": [],
  "jinja2": [],
  "json": [],
  "load_global_specs": [],
  "load_interface_spec": [],
  "logging": [],
  "neurodocker": [],
  "os": [],
  "pathlib": [],
  "posixpath": [],
  "pytest": [],
  "re": [],
  "renderer": [],
  "reprozip": [],
  "shutil": [],
  "subprocess": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "urllib": [],
  "yaml": []
 }
}