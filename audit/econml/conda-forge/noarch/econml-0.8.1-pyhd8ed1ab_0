{
 "bad": [
  "NormalInferenceResults",
  "_ortho_learner._OrthoLearner",
  "_rlearner._RLearner",
  "_tree_exporter._CateTreeDOTExporter",
  "_tree_exporter._CateTreeMPLExporter",
  "_tree_exporter._PolicyTreeDOTExporter",
  "_tree_exporter._PolicyTreeMPLExporter",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "azureml._base_sdk_common.common.ProjectSystemException",
  "azureml.core.Workspace",
  "azureml.core.Workspace.create",
  "azureml.core.Workspace.from_config",
  "azureml.core.experiment.Experiment",
  "azureml.train.automl.automlconfig.AutoMLConfig",
  "bootstrap.BootstrapEstimator",
  "calc_grad",
  "call_with_bounds",
  "cate_estimator.BaseCateEstimator",
  "cate_estimator.BaseCateEstimator._wrap_fit",
  "cate_estimator.DebiasedLassoCateEstimatorDiscreteMixin",
  "cate_estimator.DebiasedLassoCateEstimatorMixin",
  "cate_estimator.ForestModelFinalCateEstimatorDiscreteMixin",
  "cate_estimator.ForestModelFinalCateEstimatorMixin",
  "cate_estimator.LinearCateEstimator",
  "cate_estimator.LinearCateEstimator.const_marginal_effect.__doc__",
  "cate_estimator.LinearCateEstimator.const_marginal_effect_inference.__doc__",
  "cate_estimator.LinearCateEstimator.const_marginal_effect_interval.__doc__",
  "cate_estimator.LinearCateEstimator.effect_inference.__doc__",
  "cate_estimator.LinearCateEstimator.effect_interval.__doc__",
  "cate_estimator.LinearModelFinalCateEstimatorDiscreteMixin",
  "cate_estimator.LinearModelFinalCateEstimatorMixin",
  "cate_estimator.StatsModelsCateEstimatorDiscreteMixin",
  "cate_estimator.StatsModelsCateEstimatorMixin",
  "cate_estimator.TreatmentExpansionMixin",
  "causal_tree.CausalTree",
  "cntk",
  "cntk.random.normal_like",
  "cntk.random.uniform_like",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.abc.Iterable",
  "collections.defaultdict",
  "convertArg",
  "copy",
  "copy.deepcopy",
  "filter_inds",
  "functools.reduce",
  "functools.wraps",
  "get_dist",
  "get_mean",
  "get_result",
  "graphviz",
  "graphviz.Source",
  "inference.BootstrapInference",
  "inference.EmpiricalInferenceResults",
  "inference.GenericModelFinalInferenceDiscrete",
  "inference.GenericSingleTreatmentModelFinalInference",
  "inference.Inference",
  "inference.LinearModelFinalInference",
  "inference.LinearModelFinalInferenceDiscrete",
  "inference.NormalInferenceResults",
  "inference.StatsModelsInference",
  "inference.StatsModelsInferenceDiscrete",
  "inspect",
  "inspect.signature",
  "io.StringIO",
  "itertools",
  "itertools.product",
  "joblib.Parallel",
  "joblib.delayed",
  "keras",
  "keras.backend",
  "keras.backend.backend",
  "keras.backend.batch_flatten",
  "keras.backend.cast",
  "keras.backend.concatenate",
  "keras.backend.constant",
  "keras.backend.cumsum",
  "keras.backend.dot",
  "keras.backend.exp",
  "keras.backend.expand_dims",
  "keras.backend.floatx",
  "keras.backend.gradients",
  "keras.backend.int_shape",
  "keras.backend.less",
  "keras.backend.less_equal",
  "keras.backend.log",
  "keras.backend.logsumexp",
  "keras.backend.mean",
  "keras.backend.pow",
  "keras.backend.random_normal",
  "keras.backend.random_uniform",
  "keras.backend.reshape",
  "keras.backend.shape",
  "keras.backend.square",
  "keras.backend.stop_gradient",
  "keras.backend.sum",
  "keras.backend.zeros_like",
  "keras.layers",
  "keras.layers.Dense",
  "keras.layers.Input",
  "keras.layers.Lambda",
  "keras.layers.RepeatVector",
  "keras.layers.Reshape",
  "keras.layers.Subtract",
  "keras.layers.average",
  "keras.layers.subtract",
  "keras.models.Model",
  "keyGetter",
  "kg1",
  "kg2",
  "lm",
  "m",
  "m.__name__",
  "make_expr",
  "make_logloss",
  "matplotlib",
  "matplotlib.pyplot",
  "matplotlib.pyplot.gca",
  "matplotlib.use",
  "merge",
  "normal_inference",
  "numbers",
  "numbers.Integral",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.any",
  "numpy.append",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array2string",
  "numpy.asarray",
  "numpy.average",
  "numpy.clip",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.diag",
  "numpy.diagonal",
  "numpy.dot",
  "numpy.einsum",
  "numpy.empty",
  "numpy.exp",
  "numpy.eye",
  "numpy.float64",
  "numpy.float_power",
  "numpy.full",
  "numpy.hstack",
  "numpy.identity",
  "numpy.iinfo",
  "numpy.inf",
  "numpy.int",
  "numpy.int32",
  "numpy.intersect1d",
  "numpy.isscalar",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.inv",
  "numpy.linalg.lstsq",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.minimum",
  "numpy.moveaxis",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.percentile",
  "numpy.pi",
  "numpy.polynomial.hermite_e.hermeval",
  "numpy.prod",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.round",
  "numpy.shape",
  "numpy.sign",
  "numpy.size",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.std",
  "numpy.sum",
  "numpy.tensordot",
  "numpy.tile",
  "numpy.transpose",
  "numpy.triu",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "old_init",
  "operator.getitem",
  "ortho_forest.DMLOrthoForest",
  "pandas",
  "pandas.DataFrame",
  "pandas.concat",
  "pred",
  "predict_func1",
  "predict_func2",
  "proxy",
  "re",
  "re.S",
  "re.escape",
  "re.sub",
  "samp",
  "sample",
  "scipy",
  "scipy.sparse",
  "scipy.special",
  "scipy.stats.norm",
  "scipy.stats.norm.cdf",
  "scipy.stats.norm.ppf",
  "scipy.stats.norm.sf",
  "set.union",
  "sklearn.base.BaseEstimator",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.clone",
  "sklearn.exceptions.NotFittedError",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.LogisticRegressionCV",
  "sklearn.linear_model.MultiTaskLasso",
  "sklearn.linear_model.MultiTaskLassoCV",
  "sklearn.model_selection.GroupKFold",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.check_cv",
  "sklearn.model_selection.train_test_split",
  "sklearn.multioutput.MultiOutputRegressor",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.FunctionTransformer",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.PolynomialFeatures",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree._export._BaseTreeExporter",
  "sklearn.tree._export._DOTTreeExporter",
  "sklearn.tree._export._MPLTreeExporter",
  "sklearn.tree._tree",
  "sklearn.tree._tree.TREE_LEAF",
  "sklearn.tree.export._BaseTreeExporter",
  "sklearn.tree.export._DOTTreeExporter",
  "sklearn.tree.export._MPLTreeExporter",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.column_or_1d",
  "sklearn.utils.multiclass.type_of_target",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn_extensions.model_selection._cross_val_predict",
  "sparse",
  "sparse.COO",
  "sparse.COO.from_numpy",
  "sparse.COO.from_scipy_sparse",
  "sparse.DOK",
  "sparse.SparseArray",
  "sparse.concatenate",
  "sparse.stack",
  "sparse.tensordot",
  "statsmodels.compat.python.lmap",
  "statsmodels.iolib.summary.summary_return",
  "statsmodels.iolib.table.SimpleTable",
  "stderr",
  "summarize_with",
  "summary",
  "time",
  "time.localtime",
  "time.strftime",
  "to_wrap",
  "unittest",
  "unittest.TestCase",
  "unittest.main",
  "utilities.MAX_RAND_SEED",
  "utilities.Summary",
  "utilities._EncoderWrapper",
  "utilities._deprecate_positional",
  "utilities._safe_norm_ppf",
  "utilities.broadcast_unit_treatments",
  "utilities.check_high_dimensional",
  "utilities.check_input_arrays",
  "utilities.check_inputs",
  "utilities.check_models",
  "utilities.cross_product",
  "utilities.deprecated",
  "utilities.filter_none_kwargs",
  "utilities.fit_with_groups",
  "utilities.hstack",
  "utilities.inverse_onehot",
  "utilities.ndim",
  "utilities.parse_final_model_params",
  "utilities.reshape",
  "utilities.reshape_Y_T",
  "utilities.reshape_treatmentwise_effects",
  "utilities.shape",
  "utilities.size",
  "utilities.transpose",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn"
 ],
 "deps": {
  "NormalInferenceResults": [],
  "_ortho_learner": [],
  "_rlearner": [],
  "_tree_exporter": [],
  "abc": [],
  "azureml": [],
  "bootstrap": [],
  "calc_grad": [],
  "call_with_bounds": [],
  "cate_estimator": [],
  "causal_tree": [],
  "cntk": [],
  "collections": [],
  "convertArg": [],
  "copy": [],
  "filter_inds": [],
  "functools": [],
  "get_dist": [],
  "get_mean": [],
  "get_result": [],
  "graphviz": [],
  "inference": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "joblib": [],
  "keras": [],
  "keyGetter": [],
  "kg1": [],
  "kg2": [],
  "lm": [],
  "m": [],
  "make_expr": [],
  "make_logloss": [],
  "matplotlib": [],
  "merge": [],
  "normal_inference": [],
  "numbers": [],
  "numpy": [],
  "old_init": [],
  "operator": [],
  "ortho_forest": [],
  "pandas": [],
  "pred": [],
  "predict_func1": [],
  "predict_func2": [],
  "proxy": [],
  "re": [],
  "samp": [],
  "sample": [],
  "scipy": [],
  "set": [],
  "sklearn": [],
  "sklearn_extensions": [],
  "sparse": [],
  "statsmodels": [],
  "stderr": [],
  "summarize_with": [],
  "summary": [],
  "time": [],
  "to_wrap": [],
  "unittest": [],
  "utilities": [],
  "warnings": []
 }
}