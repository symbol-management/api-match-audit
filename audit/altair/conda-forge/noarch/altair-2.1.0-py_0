{
 "bad": [
  "BadSchema",
  "Chart",
  "IPython.InteractiveShell.instance",
  "IPython.core.getipython.get_ipython",
  "IPython.core.magic_arguments.argument",
  "IPython.core.magic_arguments.magic_arguments",
  "IPython.core.magic_arguments.parse_argstring",
  "IPython.display.display",
  "IPython.get_ipython",
  "PIL.Image.ANTIALIAS",
  "PIL.Image.open",
  "Vega",
  "VegaLite",
  "_check",
  "_check_encodings",
  "_deep_copy",
  "_freeze",
  "_get_constructor",
  "_getattr",
  "_magics.vega",
  "_magics.vegalite",
  "_py3k_compat.IO",
  "_py3k_compat.server.BaseHTTPRequestHandler",
  "_py3k_compat.server.HTTPServer",
  "_todict",
  "_wrap_in_channel_class",
  "altair.Axis",
  "altair.Bin",
  "altair.Chart",
  "altair.Color",
  "altair.ColorValue",
  "altair.Legend",
  "altair.LookupData",
  "altair.OpacityValue",
  "altair.Order",
  "altair.Root._schema",
  "altair.Scale",
  "altair.Size",
  "altair.SizeValue",
  "altair.SortField",
  "altair.Text",
  "altair.TopLevelMixin",
  "altair.UrlData",
  "altair.WindowFieldDef",
  "altair.X",
  "altair.Y",
  "altair.Y2",
  "altair.binding_range",
  "altair.condition",
  "altair.datum.year",
  "altair.display.VEGALITE_MIME_TYPE",
  "altair.expr.datum.Entity",
  "altair.expr.datum.job",
  "altair.expr.datum.sex",
  "altair.expr.datum.symbol",
  "altair.expr.datum.y",
  "altair.expr.datum.year",
  "altair.expr.datum.zip_code",
  "altair.expr.if_",
  "altair.expr.substring",
  "altair.hconcat",
  "altair.layer",
  "altair.pd.DataFrame",
  "altair.renderers.enable",
  "altair.repeat",
  "altair.selection",
  "altair.selection_interval",
  "altair.selection_multi",
  "altair.selection_single",
  "altair.topo_feature",
  "altair.value",
  "altair.vconcat",
  "altair.vegalite.v2.AggregateTransform",
  "altair.vegalite.v2.AggregatedFieldDef",
  "altair.vegalite.v2.AxisResolveMap",
  "altair.vegalite.v2.BinTransform",
  "altair.vegalite.v2.CalculateTransform",
  "altair.vegalite.v2.Chart",
  "altair.vegalite.v2.Chart.from_dict",
  "altair.vegalite.v2.Color",
  "altair.vegalite.v2.ColorValue",
  "altair.vegalite.v2.Detail",
  "altair.vegalite.v2.FilterTransform",
  "altair.vegalite.v2.HConcatChart",
  "altair.vegalite.v2.LayerChart",
  "altair.vegalite.v2.LegendResolveMap",
  "altair.vegalite.v2.LookupData",
  "altair.vegalite.v2.LookupTransform",
  "altair.vegalite.v2.NamedData",
  "altair.vegalite.v2.Resolve",
  "altair.vegalite.v2.ScaleResolveMap",
  "altair.vegalite.v2.SelectionAnd",
  "altair.vegalite.v2.SelectionOr",
  "altair.vegalite.v2.Text",
  "altair.vegalite.v2.TextValue",
  "altair.vegalite.v2.TimeUnitTransform",
  "altair.vegalite.v2.Tooltip",
  "altair.vegalite.v2.UrlData",
  "altair.vegalite.v2.VConcatChart",
  "altair.vegalite.v2.X",
  "altair.vegalite.v2.Y",
  "altair.vegalite.v2.condition",
  "altair.vegalite.v2.examples.__name__",
  "altair.vegalite.v2.examples.__path__",
  "altair.vegalite.v2.selection",
  "altair.vegalite.v2.selection_interval",
  "altair.vegalite.v2.selection_multi",
  "altair.vegalite.v2.selection_single",
  "altair.vegalite.v2.themes.active",
  "altair.vegalite.v2.themes.enable",
  "altair.vegalite.v2.value",
  "ast.Expr",
  "ast.Interactive",
  "ast.Module",
  "ast.Str",
  "ast.parse",
  "base64.decodebytes",
  "check",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.defaultdict",
  "contextlib.contextmanager",
  "contextlib.redirect_stdout",
  "copy.deepcopy",
  "core.AreaConfig",
  "core.AxisConfig",
  "core.BarConfig",
  "core.ChannelDefWithLegend",
  "core.Config",
  "core.ConstExpression",
  "core.FacetFieldDef",
  "core.FieldDef",
  "core.FieldDefWithCondition",
  "core.FunctionExpression",
  "core.LegendConfig",
  "core.LineConfig",
  "core.MarkConfig",
  "core.MarkDef",
  "core.MarkPropFieldDefWithCondition",
  "core.MarkPropValueDefWithCondition",
  "core.OrderChannelDef",
  "core.OrderFieldDef",
  "core.PositionChannelDef",
  "core.PositionFieldDef",
  "core.ProjectionConfig",
  "core.RangeConfig",
  "core.ScaleConfig",
  "core.SchemaBase",
  "core.SelectionConfig",
  "core.TextConfig",
  "core.TextFieldDefWithCondition",
  "core.TextValueDefWithCondition",
  "core.TickConfig",
  "core.ValueDef",
  "core.ValueDefWithCondition",
  "core.VgAxisConfig",
  "core.VgTitleConfig",
  "core.ViewConfig",
  "core.sanitize_dataframe",
  "core.write_file_or_filename",
  "data.DataTransformerRegistry",
  "data.MaxRowsError",
  "data.data_transformers.enable",
  "data.data_transformers.get",
  "data.default_data_transformer",
  "data.limit_rows",
  "data.pipe",
  "data.sample",
  "data.to_csv",
  "data.to_json",
  "data.to_values",
  "datum.xxx",
  "datum.yyy",
  "display.Displayable",
  "display.RendererRegistry",
  "display.RendererType",
  "display.VEGAEMBED_VERSION",
  "display.VEGALITE_VERSION",
  "display.VEGA_VERSION",
  "display.default_renderer_base",
  "display.json_renderer_base",
  "display.renderers.get",
  "docutils.nodes.Element",
  "docutils.nodes.General",
  "docutils.nodes.SkipNode",
  "docutils.nodes.literal_block",
  "docutils.nodes.paragraph",
  "docutils.nodes.target",
  "docutils.parsers.rst.Directive",
  "docutils.parsers.rst.directives.flag",
  "docutils.parsers.rst.directives.unchanged",
  "docutils.statemachine.ViewList",
  "entrypoints.NoSuchEntryPoint",
  "entrypoints.get_group_all",
  "entrypoints.get_single",
  "execeval.eval_block",
  "expr.Expression",
  "expr.consts.NAME_MAP.items",
  "expr.consts.__all__",
  "expr.funcs.NAME_MAP.items",
  "expr.funcs.__all__",
  "filter.ref",
  "func",
  "hashlib.md5",
  "headless.compile_spec",
  "html.spec_to_html",
  "importing.attempt_import",
  "importlib.import_module",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "io.BytesIO",
  "io.StringIO",
  "itertools.chain",
  "itertools.tee",
  "json.JSONDecodeError",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "jsonschema.RefResolver.from_schema",
  "make_line",
  "mimebundle.spec_to_mimebundle",
  "numpy.arange",
  "numpy.array",
  "numpy.cumsum",
  "numpy.floating",
  "numpy.inf",
  "numpy.int",
  "numpy.integer",
  "numpy.isinf",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.meshgrid",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.poly1d",
  "numpy.polyfit",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.sin",
  "numpy.zeros",
  "object.__new__",
  "object.__setattr__",
  "operator.add",
  "operator.and_",
  "operator.eq",
  "operator.ge",
  "operator.gt",
  "operator.itemgetter",
  "operator.le",
  "operator.lt",
  "operator.mod",
  "operator.mul",
  "operator.ne",
  "operator.neg",
  "operator.or_",
  "operator.pos",
  "operator.sub",
  "operator.truediv",
  "os.close",
  "os.geteuid",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.splitext",
  "os.remove",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.NaT",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.core.index.MultiIndex",
  "pandas.date_range",
  "pandas.lib.infer_dtype",
  "pandas.melt",
  "pandas.merge",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.timedelta_range",
  "pandas.to_datetime",
  "pkgutil.get_data",
  "pkgutil.iter_modules",
  "plugin_registry.PluginRegistry",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "random.randint",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "re.DOTALL",
  "re.MULTILINE",
  "re.compile",
  "schema.SCHEMA_URL",
  "schema.SCHEMA_VERSION.lstrip",
  "schema.Undefined",
  "schema.channels",
  "schema.core.AggregateTransform",
  "schema.core.AggregatedFieldDef",
  "schema.core.AxisConfig",
  "schema.core.AxisResolveMap",
  "schema.core.BinParams",
  "schema.core.BinTransform",
  "schema.core.CalculateTransform",
  "schema.core.CellConfig",
  "schema.core.Config",
  "schema.core.Data",
  "schema.core.Encoding",
  "schema.core.EncodingWithFacet",
  "schema.core.EncodingWithFacet._class_is_valid_at_instantiation",
  "schema.core.ExtendedUnitSpec",
  "schema.core.FacetConfig",
  "schema.core.FacetFieldDef",
  "schema.core.FacetGridConfig",
  "schema.core.FacetMapping",
  "schema.core.FacetScaleConfig",
  "schema.core.FilterTransform",
  "schema.core.Formula",
  "schema.core.InlineData",
  "schema.core.IntervalSelection",
  "schema.core.LegendConfig",
  "schema.core.LegendResolveMap",
  "schema.core.LogicalAndPredicate",
  "schema.core.LogicalNotPredicate",
  "schema.core.LogicalOperandPredicate",
  "schema.core.LogicalOrPredicate",
  "schema.core.LookupData",
  "schema.core.LookupTransform",
  "schema.core.MarkConfig",
  "schema.core.MultiSelection",
  "schema.core.NamedData",
  "schema.core.OverlayConfig",
  "schema.core.Predicate",
  "schema.core.Projection",
  "schema.core.Repeat",
  "schema.core.RepeatRef",
  "schema.core.Resolve",
  "schema.core.Root._schema",
  "schema.core.Root.from_dict",
  "schema.core.ScaleConfig",
  "schema.core.ScaleResolveMap",
  "schema.core.SchemaBase",
  "schema.core.SelectionAnd",
  "schema.core.SelectionDef",
  "schema.core.SelectionNot",
  "schema.core.SelectionOperand",
  "schema.core.SelectionOr",
  "schema.core.SingleSelection",
  "schema.core.TimeUnitTransform",
  "schema.core.TopLevelFacetSpec",
  "schema.core.TopLevelFacetedUnitSpec",
  "schema.core.TopLevelHConcatSpec",
  "schema.core.TopLevelLayerSpec",
  "schema.core.TopLevelRepeatSpec",
  "schema.core.TopLevelVConcatSpec",
  "schema.core.TopoDataFormat",
  "schema.core.Transform",
  "schema.core.UrlData",
  "schema.core.VegaLiteSchema",
  "schema.core.VgBinding",
  "schema.core.VgCheckboxBinding",
  "schema.core.VgRadioBinding",
  "schema.core.VgRangeBinding",
  "schema.core.VgSelectBinding",
  "schema.core.WindowTransform",
  "schema.mixins.ConfigMethodMixin",
  "schema.mixins.MarkMethodMixin",
  "schemapi.SchemaBase",
  "schemapi.SchemaValidationError",
  "schemapi.Undefined",
  "schemapi.UndefinedType",
  "schemapi._FromDict.hash_schema",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.socket",
  "sys.displayhook",
  "sys.exc_info",
  "sys.stdout.flush",
  "tempfile.mkstemp",
  "textwrap.dedent",
  "the_theme",
  "theme.themes.get",
  "threading.Thread",
  "tokenize.tokenize",
  "toolz.curried.curry",
  "toolz.curried.pipe",
  "toolz.curry",
  "toolz.pipe",
  "traceback.print_exception",
  "typing.Callable",
  "typing.Dict",
  "typing.Generic",
  "typing.TypeVar",
  "typing.cast",
  "utils.PluginRegistry",
  "utils.SchemaBase",
  "utils.create_thumbnail",
  "utils.data.MaxRowsError",
  "utils.data.limit_rows",
  "utils.data.to_values",
  "utils.display_traceback",
  "utils.get_docstring_and_rest",
  "utils.mimebundle.spec_to_mimebundle",
  "utils.parse_shorthand",
  "utils.prev_this_next",
  "utils.save.save",
  "utils.server.serve",
  "utils.theme.ThemeRegistry",
  "utils.update_nested",
  "utils.update_subtraits",
  "utils.use_signature",
  "vega_datasets.data.airports.url",
  "vega_datasets.data.anscombe",
  "vega_datasets.data.barley",
  "vega_datasets.data.cars",
  "vega_datasets.data.cars.url",
  "vega_datasets.data.countries.url",
  "vega_datasets.data.disasters.url",
  "vega_datasets.data.driving",
  "vega_datasets.data.flights_2k.url",
  "vega_datasets.data.gapminder_health_income.url",
  "vega_datasets.data.github.url",
  "vega_datasets.data.iowa_electricity",
  "vega_datasets.data.iris",
  "vega_datasets.data.jobs.url",
  "vega_datasets.data.list_datasets",
  "vega_datasets.data.londonBoroughs.url",
  "vega_datasets.data.londonCentroids.url",
  "vega_datasets.data.londonTubeLines.url",
  "vega_datasets.data.movies.url",
  "vega_datasets.data.population",
  "vega_datasets.data.population.url",
  "vega_datasets.data.population_engineers_hurricanes.url",
  "vega_datasets.data.seattle_weather",
  "vega_datasets.data.seattle_weather.url",
  "vega_datasets.data.sp500.url",
  "vega_datasets.data.stocks",
  "vega_datasets.data.stocks.url",
  "vega_datasets.data.unemployment.url",
  "vega_datasets.data.unemployment_across_industries.url",
  "vega_datasets.data.us_10m.url",
  "vega_datasets.data.us_state_capitals.url",
  "vega_datasets.data.world_110m.url",
  "vega_datasets.data.zipcodes.url",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "webbrowser.open",
  "webdriver_class",
  "webdriver_options_class",
  "yaml.load"
 ],
 "deps": {
  "BadSchema": [],
  "Chart": [],
  "IPython": [],
  "PIL": [],
  "Vega": [],
  "VegaLite": [],
  "_check": [],
  "_check_encodings": [],
  "_deep_copy": [],
  "_freeze": [],
  "_get_constructor": [],
  "_getattr": [],
  "_magics": [],
  "_py3k_compat": [],
  "_todict": [],
  "_wrap_in_channel_class": [],
  "altair": [
   "altair/conda-forge/noarch/altair-2.1.0-py_0"
  ],
  "ast": [],
  "base64": [],
  "check": [],
  "collections": [],
  "contextlib": [],
  "copy": [],
  "core": [],
  "data": [],
  "datum": [],
  "display": [],
  "docutils": [],
  "entrypoints": [],
  "execeval": [],
  "expr": [],
  "filter": [],
  "func": [],
  "hashlib": [],
  "headless": [],
  "html": [],
  "importing": [],
  "importlib": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.11.3-pyh44b312d_0"
  ],
  "json": [],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-py_2"
  ],
  "m2r": [
   "m2r/conda-forge/noarch/m2r-0.2.0-py_0",
   "m2r/conda-forge/noarch/m2r-0.2.1-py_0"
  ],
  "make_line": [],
  "mimebundle": [],
  "numpy": [],
  "object": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "pkgutil": [],
  "plugin_registry": [],
  "pytest": [],
  "random": [],
  "re": [],
  "schema": [],
  "schemapi": [],
  "six": [
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "socket": [],
  "sphinx": [
   "sphinx/conda-forge/noarch/sphinx-3.5.1-pyhd8ed1ab_0"
  ],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "the_theme": [],
  "theme": [],
  "threading": [],
  "tokenize": [],
  "toolz": [],
  "traceback": [],
  "typing": [],
  "utils": [],
  "vega_datasets": [
   "vega_datasets/conda-forge/noarch/vega_datasets-0.7.0-py_0"
  ],
  "warnings": [],
  "webbrowser": [],
  "webdriver_class": [],
  "webdriver_options_class": [],
  "yaml": []
 }
}