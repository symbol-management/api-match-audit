{
 "bad": [
  "ErrorStreamHandler",
  "LogStreamHandler",
  "ResultsStreamHandler",
  "WarningStreamHandler",
  "collections.Iterable",
  "collections.abc.Iterable",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "cplex",
  "cplex.Cplex",
  "cplex.Cplex.problem_type.LP",
  "cplex.Cplex.problem_type.MILP",
  "cplex.Cplex.problem_type.MIQCP",
  "cplex.Cplex.problem_type.MIQP",
  "cplex.Cplex.problem_type.QCP",
  "cplex.Cplex.problem_type.QP",
  "cplex.SparsePair",
  "cplex.__file__",
  "cplex.exceptions.CplexSolverError",
  "cplex.infinity",
  "dict.fromkeys",
  "evaluator",
  "frozenset.union",
  "glob.fnmatch.filter",
  "gurobipy",
  "gurobipy.GRB.BINARY",
  "gurobipy.GRB.CONTINUOUS",
  "gurobipy.GRB.CUTOFF",
  "gurobipy.GRB.INFEASIBLE",
  "gurobipy.GRB.INFINITY",
  "gurobipy.GRB.INF_OR_UNBD",
  "gurobipy.GRB.INPROGRESS",
  "gurobipy.GRB.INTEGER",
  "gurobipy.GRB.INTERRUPTED",
  "gurobipy.GRB.ITERATION_LIMIT",
  "gurobipy.GRB.LOADED",
  "gurobipy.GRB.MAXIMIZE",
  "gurobipy.GRB.MINIMIZE",
  "gurobipy.GRB.NODE_LIMIT",
  "gurobipy.GRB.NUMERIC",
  "gurobipy.GRB.OPTIMAL",
  "gurobipy.GRB.SOLUTION_LIMIT",
  "gurobipy.GRB.SUBOPTIMAL",
  "gurobipy.GRB.TIME_LIMIT",
  "gurobipy.GRB.UNBOUNDED",
  "gurobipy.GurobiError",
  "gurobipy.Model",
  "gurobipy.__file__",
  "gurobipy.quicksum",
  "gurobipy.read",
  "interface.EvolutionaryOptimizationConfiguration",
  "interface.Model",
  "interface.Objective",
  "interface.Variable",
  "itertools.islice",
  "mosek",
  "mosek.__file__",
  "nose",
  "nose.SkipTest",
  "nose.runmodule",
  "nose.tools.assert_almost_equal",
  "nose.tools.assert_equal",
  "nose.tools.assert_true",
  "nose.tools.nottest",
  "optlang._USING_SYMENGINE",
  "optlang.__init__.available_solvers",
  "optlang.__init__.engine",
  "optlang.__init__.log",
  "optlang.cplex_interface.Constraint.clone",
  "optlang.cplex_interface.Model.clone",
  "optlang.cplex_interface.Objective.clone",
  "optlang.cplex_interface._SOLUTION_TARGETS.index",
  "optlang.glpk_exact_interface.Model.clone",
  "optlang.glpk_interface.Constraint.clone",
  "optlang.glpk_interface.Model.clone",
  "optlang.glpk_interface.Model.from_json",
  "optlang.glpk_interface.Variable.type.setter",
  "optlang.gurobi_interface.Model.clone",
  "optlang.interface.Constraint.lb.setter",
  "optlang.interface.Constraint.name.setter",
  "optlang.interface.Constraint.ub.setter",
  "optlang.interface.Model.is_integer.fget",
  "optlang.interface.Model.objective.setter",
  "optlang.interface.Objective.direction.setter",
  "optlang.interface.OptimizationExpression.name.setter",
  "optlang.interface.Variable.lb.fset",
  "optlang.interface.Variable.lb.setter",
  "optlang.interface.Variable.name.setter",
  "optlang.interface.Variable.type.fset",
  "optlang.interface.Variable.type.setter",
  "optlang.interface.Variable.ub.fset",
  "optlang.interface.Variable.ub.setter",
  "os.environ.get",
  "os.path.basename",
  "os.path.dirname",
  "os.path.join",
  "os.remove",
  "read_netlib_sif_glpk",
  "scipy.optimize.__file__",
  "six.moves.StringIO",
  "six.moves.reduce",
  "swiglpk",
  "swiglpk.GLP_BV",
  "swiglpk.GLP_CV",
  "swiglpk.GLP_DB",
  "swiglpk.GLP_ETMLIM",
  "swiglpk.GLP_FEAS",
  "swiglpk.GLP_FR",
  "swiglpk.GLP_FX",
  "swiglpk.GLP_INFEAS",
  "swiglpk.GLP_IV",
  "swiglpk.GLP_LO",
  "swiglpk.GLP_MAX",
  "swiglpk.GLP_MIN",
  "swiglpk.GLP_MPS_DECK",
  "swiglpk.GLP_MSG_ALL",
  "swiglpk.GLP_MSG_ERR",
  "swiglpk.GLP_MSG_OFF",
  "swiglpk.GLP_MSG_ON",
  "swiglpk.GLP_NOFEAS",
  "swiglpk.GLP_OFF",
  "swiglpk.GLP_ON",
  "swiglpk.GLP_OPT",
  "swiglpk.GLP_SF_AUTO",
  "swiglpk.GLP_UNBND",
  "swiglpk.GLP_UNDEF",
  "swiglpk.GLP_UP",
  "swiglpk.__file__",
  "swiglpk.doubleArray",
  "swiglpk.get_col_duals",
  "swiglpk.get_col_primals",
  "swiglpk.get_row_duals",
  "swiglpk.get_row_primals",
  "swiglpk.glp_add_cols",
  "swiglpk.glp_add_rows",
  "swiglpk.glp_adv_basis",
  "swiglpk.glp_create_index",
  "swiglpk.glp_create_prob",
  "swiglpk.glp_del_cols",
  "swiglpk.glp_del_rows",
  "swiglpk.glp_delete_prob",
  "swiglpk.glp_exact",
  "swiglpk.glp_find_col",
  "swiglpk.glp_find_row",
  "swiglpk.glp_get_col_dual",
  "swiglpk.glp_get_col_kind",
  "swiglpk.glp_get_col_lb",
  "swiglpk.glp_get_col_name",
  "swiglpk.glp_get_col_prim",
  "swiglpk.glp_get_col_ub",
  "swiglpk.glp_get_mat_row",
  "swiglpk.glp_get_num_bin",
  "swiglpk.glp_get_num_cols",
  "swiglpk.glp_get_num_int",
  "swiglpk.glp_get_num_rows",
  "swiglpk.glp_get_obj_coef",
  "swiglpk.glp_get_obj_dir",
  "swiglpk.glp_get_obj_val",
  "swiglpk.glp_get_prob_name",
  "swiglpk.glp_get_row_dual",
  "swiglpk.glp_get_row_lb",
  "swiglpk.glp_get_row_name",
  "swiglpk.glp_get_row_prim",
  "swiglpk.glp_get_row_type",
  "swiglpk.glp_get_row_ub",
  "swiglpk.glp_get_status",
  "swiglpk.glp_init_iocp",
  "swiglpk.glp_init_smcp",
  "swiglpk.glp_intopt",
  "swiglpk.glp_iocp",
  "swiglpk.glp_mip_col_val",
  "swiglpk.glp_mip_obj_val",
  "swiglpk.glp_mip_row_val",
  "swiglpk.glp_mip_status",
  "swiglpk.glp_read_lp",
  "swiglpk.glp_read_mps",
  "swiglpk.glp_read_prob",
  "swiglpk.glp_scale_prob",
  "swiglpk.glp_set_col_bnds",
  "swiglpk.glp_set_col_kind",
  "swiglpk.glp_set_col_name",
  "swiglpk.glp_set_mat_row",
  "swiglpk.glp_set_obj_coef",
  "swiglpk.glp_set_obj_dir",
  "swiglpk.glp_set_prob_name",
  "swiglpk.glp_set_row_bnds",
  "swiglpk.glp_set_row_name",
  "swiglpk.glp_simplex",
  "swiglpk.glp_smcp",
  "swiglpk.glp_term_out",
  "swiglpk.glp_write_lp",
  "swiglpk.glp_write_prob",
  "swiglpk.intArray",
  "symengine",
  "symengine.Add",
  "symengine.Basic",
  "symengine.Integer",
  "symengine.Mul",
  "symengine.Number",
  "symengine.RealDouble",
  "symengine.sympy_compat",
  "symengine.sympy_compat.Pow",
  "symengine.sympy_compat.Symbol",
  "symengine.sympy_compat.sympify",
  "sympy",
  "sympy.Add",
  "sympy.Add._from_args",
  "sympy.Basic",
  "sympy.Integer",
  "sympy.Mul",
  "sympy.Mul._from_args",
  "sympy.Number",
  "sympy.Pow",
  "sympy.RealNumber",
  "sympy.Symbol",
  "sympy.Symbol.__new__",
  "sympy.core.assumptions._assume_rules",
  "sympy.core.expr.Expr",
  "sympy.core.facts.FactKB",
  "sympy.sympify",
  "sys",
  "sys.exit",
  "sys.modules",
  "sys.stderr",
  "sys.stdout",
  "term_generator",
  "time",
  "time.time",
  "type.setter"
 ],
 "deps": {
  "ErrorStreamHandler": [],
  "LogStreamHandler": [],
  "ResultsStreamHandler": [],
  "WarningStreamHandler": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [],
  "cplex": [],
  "dict": [],
  "evaluator": [],
  "fractions": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "frozenset": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gurobipy": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspyred": [
   "inspyred/conda-forge/noarch/inspyred-1.0.1-py_1"
  ],
  "interface": [
   "python-interface/conda-forge/noarch/python-interface-1.6.0-py_0"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-py_2"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mosek": [],
  "nose": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "optlang": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "read_netlib_sif_glpk": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "swiglpk": [],
  "symengine": [],
  "sympy": [],
  "sys": [],
  "tarfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "term_generator": [],
  "time": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}