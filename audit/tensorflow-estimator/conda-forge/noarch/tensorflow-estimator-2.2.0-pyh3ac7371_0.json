{
 "bad": [
  "AttributeError",
  "Exception",
  "FakeRunConfig",
  "IOError",
  "ImportError",
  "KeyError",
  "NameError",
  "NotImplementedError",
  "RuntimeError",
  "StopIteration",
  "TypeError",
  "ValueError",
  "_Optimizer",
  "__doc__",
  "__future__.print_function",
  "__name__",
  "_create_tpu_estimator_spec",
  "_parse_ta",
  "_to_ordered_tensor_list",
  "_validate",
  "abs",
  "activation",
  "all",
  "any",
  "bool",
  "bytes",
  "callable",
  "cell_type",
  "classmethod",
  "cls",
  "cond",
  "contextlib.contextmanager",
  "data.dtypes",
  "data.index.dtype",
  "delete_filter",
  "dict",
  "dir",
  "dnn_logit_fn",
  "dnn_model",
  "dnn_model.trainable_variables",
  "dnn_model.updates",
  "enumerate",
  "estimator_cls",
  "estimator_spec_fn",
  "f",
  "feed_fn",
  "float",
  "fn",
  "generator",
  "get_feed_fn",
  "getattr",
  "google.protobuf.text_format.Parse",
  "hasattr",
  "head_type",
  "input_fn",
  "input_receiver_fn",
  "int",
  "isinstance",
  "iter",
  "label_output_fn",
  "len",
  "lf",
  "linear_model",
  "linear_model.bias",
  "linear_model.cols_to_vars",
  "linear_model.layer._state_manager",
  "linear_model.variables",
  "list",
  "logit_fn",
  "loss_fn",
  "map",
  "max",
  "metric_fn",
  "min",
  "model",
  "model.bias",
  "model.variables",
  "next",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.average",
  "numpy.bincount",
  "numpy.exp",
  "numpy.float32",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.linspace",
  "numpy.mean",
  "numpy.ndarray",
  "numpy.reshape",
  "numpy.sqrt",
  "numpy.std",
  "numpy.sum",
  "numpy.zeros",
  "numpy.zeros_like",
  "object",
  "open",
  "opt",
  "opt.__init__",
  "parser",
  "property",
  "range",
  "rf",
  "rnn_cell_fn",
  "rnn_model",
  "rnn_model.trainable_variables",
  "rnn_model.updates",
  "set",
  "setattr",
  "six.moves.range",
  "six.string_types",
  "sorted",
  "staticmethod",
  "str",
  "sum",
  "summary_key_fn",
  "super",
  "sys.modules",
  "tensorflow.compat.dimension_value",
  "tensorflow.compat.forward_compatible",
  "tensorflow.compat.v1.GraphKeys.GLOBAL_STEP",
  "tensorflow.compat.v1.GraphKeys.GLOBAL_VARIABLES",
  "tensorflow.compat.v1.GraphKeys.SAVEABLE_OBJECTS",
  "tensorflow.compat.v1.GraphKeys.TRAINABLE_VARIABLES",
  "tensorflow.compat.v1.Session",
  "tensorflow.compat.v1.add_to_collection",
  "tensorflow.compat.v1.app.run",
  "tensorflow.compat.v1.assign",
  "tensorflow.compat.v1.assign_add",
  "tensorflow.compat.v1.boolean_mask",
  "tensorflow.compat.v1.cond",
  "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor",
  "tensorflow.compat.v1.data.Dataset.from_tensor_slices",
  "tensorflow.compat.v1.data.Dataset.from_tensors",
  "tensorflow.compat.v1.data.Dataset.zip",
  "tensorflow.compat.v1.debugging.assert_equal",
  "tensorflow.compat.v1.debugging.assert_greater",
  "tensorflow.compat.v1.debugging.assert_greater_equal",
  "tensorflow.compat.v1.debugging.assert_less",
  "tensorflow.compat.v1.debugging.assert_less_equal",
  "tensorflow.compat.v1.debugging.assert_non_negative",
  "tensorflow.compat.v1.debugging.assert_rank_at_least",
  "tensorflow.compat.v1.device",
  "tensorflow.compat.v1.expand_dims",
  "tensorflow.compat.v1.feature_column.input_layer",
  "tensorflow.compat.v1.feature_column.linear_model",
  "tensorflow.compat.v1.feature_column.make_parse_example_spec",
  "tensorflow.compat.v1.fixed_size_partitioner",
  "tensorflow.compat.v1.gather",
  "tensorflow.compat.v1.gather_nd",
  "tensorflow.compat.v1.get_collection",
  "tensorflow.compat.v1.get_default_graph",
  "tensorflow.compat.v1.get_variable",
  "tensorflow.compat.v1.get_variable_scope",
  "tensorflow.compat.v1.gfile.DeleteRecursively",
  "tensorflow.compat.v1.gfile.Exists",
  "tensorflow.compat.v1.gfile.Glob",
  "tensorflow.compat.v1.gfile.IsDirectory",
  "tensorflow.compat.v1.gfile.MakeDirs",
  "tensorflow.compat.v1.glorot_uniform_initializer",
  "tensorflow.compat.v1.initializers.global_variables",
  "tensorflow.compat.v1.initializers.ones",
  "tensorflow.compat.v1.initializers.random_uniform",
  "tensorflow.compat.v1.initializers.zeros",
  "tensorflow.compat.v1.io.parse_example",
  "tensorflow.compat.v1.layers.BatchNormalization",
  "tensorflow.compat.v1.layers.Dense",
  "tensorflow.compat.v1.layers.Dropout",
  "tensorflow.compat.v1.logging.debug",
  "tensorflow.compat.v1.logging.error",
  "tensorflow.compat.v1.logging.info",
  "tensorflow.compat.v1.logging.vlog",
  "tensorflow.compat.v1.logging.warn",
  "tensorflow.compat.v1.losses.Reduction.NONE",
  "tensorflow.compat.v1.losses.Reduction.SUM",
  "tensorflow.compat.v1.losses.mean_squared_error",
  "tensorflow.compat.v1.losses.sigmoid_cross_entropy",
  "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy",
  "tensorflow.compat.v1.math.argmax",
  "tensorflow.compat.v1.math.argmin",
  "tensorflow.compat.v1.metrics.mean",
  "tensorflow.compat.v1.min_max_variable_partitioner",
  "tensorflow.compat.v1.nn.moments",
  "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.compat.v1.nn.softmax",
  "tensorflow.compat.v1.nn.xw_plus_b",
  "tensorflow.compat.v1.ones_like",
  "tensorflow.compat.v1.pad",
  "tensorflow.compat.v1.placeholder",
  "tensorflow.compat.v1.placeholder_with_default",
  "tensorflow.compat.v1.random.set_random_seed",
  "tensorflow.compat.v1.reset_default_graph",
  "tensorflow.compat.v1.scatter_add",
  "tensorflow.compat.v1.shape",
  "tensorflow.compat.v1.size",
  "tensorflow.compat.v1.squeeze",
  "tensorflow.compat.v1.summary.FileWriterCache.clear",
  "tensorflow.compat.v1.summary.histogram",
  "tensorflow.compat.v1.summary.merge_all",
  "tensorflow.compat.v1.summary.scalar",
  "tensorflow.compat.v1.test.mock.MagicMock",
  "tensorflow.compat.v1.test.mock.NonCallableMagicMock",
  "tensorflow.compat.v1.test.mock.NonCallableMock",
  "tensorflow.compat.v1.test.mock.patch.object",
  "tensorflow.compat.v1.to_float",
  "tensorflow.compat.v1.tpu.experimental.AdagradParameters",
  "tensorflow.compat.v1.tpu.experimental.AdamParameters",
  "tensorflow.compat.v1.tpu.experimental.FtrlParameters",
  "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters",
  "tensorflow.compat.v1.train.AdagradOptimizer",
  "tensorflow.compat.v1.train.AdamOptimizer",
  "tensorflow.compat.v1.train.FtrlOptimizer",
  "tensorflow.compat.v1.train.GradientDescentOptimizer",
  "tensorflow.compat.v1.train.MonitoredTrainingSession",
  "tensorflow.compat.v1.train.NewCheckpointReader",
  "tensorflow.compat.v1.train.Optimizer",
  "tensorflow.compat.v1.train.RMSPropOptimizer",
  "tensorflow.compat.v1.train.Saver",
  "tensorflow.compat.v1.train.Scaffold",
  "tensorflow.compat.v1.train.SecondOrStepTimer",
  "tensorflow.compat.v1.train.SessionRunArgs",
  "tensorflow.compat.v1.train.SessionRunHook",
  "tensorflow.compat.v1.train.StopAtStepHook",
  "tensorflow.compat.v1.train.SyncReplicasOptimizer",
  "tensorflow.compat.v1.train.create_global_step",
  "tensorflow.compat.v1.train.get_global_step",
  "tensorflow.compat.v1.train.get_or_create_global_step",
  "tensorflow.compat.v1.train.limit_epochs",
  "tensorflow.compat.v1.train.queue_runner.QueueRunner",
  "tensorflow.compat.v1.train.queue_runner.add_queue_runner",
  "tensorflow.compat.v1.train.sdca_fprint",
  "tensorflow.compat.v1.train.sdca_optimizer",
  "tensorflow.compat.v1.train.summary_iterator",
  "tensorflow.compat.v1.transpose",
  "tensorflow.compat.v1.variable_scope",
  "tensorflow.compat.v1.where",
  "tensorflow.compat.v1.while_loop",
  "tensorflow.compat.v1.zeros_like",
  "tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.ONE",
  "tensorflow.debugging.Assert",
  "tensorflow.distribute.ReplicaContext",
  "tensorflow.distribute.has_strategy",
  "tensorflow.dtypes.as_dtype",
  "tensorflow.dtypes.float32",
  "tensorflow.dtypes.float64",
  "tensorflow.dtypes.int32",
  "tensorflow.dtypes.int64",
  "tensorflow.dtypes.int64.max",
  "tensorflow.dtypes.int64.min",
  "tensorflow.dtypes.string",
  "tensorflow.get_static_value",
  "tensorflow.io.FixedLenFeature",
  "tensorflow.io.gfile.GFile",
  "tensorflow.is_tensor",
  "tensorflow.linalg.matmul",
  "tensorflow.math.abs",
  "tensorflow.math.add_n",
  "tensorflow.math.floormod",
  "tensorflow.math.multiply",
  "tensorflow.math.pow",
  "tensorflow.math.reduce_any",
  "tensorflow.math.reduce_max",
  "tensorflow.math.reduce_mean",
  "tensorflow.math.reduce_min",
  "tensorflow.math.reduce_prod",
  "tensorflow.math.reduce_sum",
  "tensorflow.math.sigmoid",
  "tensorflow.math.sign",
  "tensorflow.math.sqrt",
  "tensorflow.math.square",
  "tensorflow.math.subtract",
  "tensorflow.math.zero_fraction",
  "tensorflow.nest.flatten",
  "tensorflow.nest.map_structure",
  "tensorflow.nest.pack_sequence_as",
  "tensorflow.python.data.ops.dataset_ops.DatasetV2",
  "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator",
  "tensorflow.python.distribute.distribution_strategy_context._DefaultReplicaThreadMode",
  "tensorflow.python.eager.def_function.Function",
  "tensorflow.python.eager.wrap_function.WrappedGraph",
  "tensorflow.python.feature_column.dense_features.DenseFeatures",
  "tensorflow.python.feature_column.dense_features_v2.DenseFeatures",
  "tensorflow.python.feature_column.feature_column",
  "tensorflow.python.feature_column.feature_column.InputLayer",
  "tensorflow.python.feature_column.feature_column._EmbeddingColumn",
  "tensorflow.python.feature_column.feature_column._LazyBuilder",
  "tensorflow.python.feature_column.feature_column._LinearModel",
  "tensorflow.python.feature_column.feature_column._NumericColumn",
  "tensorflow.python.feature_column.feature_column._SharedEmbeddingColumn",
  "tensorflow.python.feature_column.feature_column._categorical_column_with_hash_bucket",
  "tensorflow.python.feature_column.feature_column._categorical_column_with_vocabulary_file",
  "tensorflow.python.feature_column.feature_column._categorical_column_with_vocabulary_list",
  "tensorflow.python.feature_column.feature_column._embedding_column",
  "tensorflow.python.feature_column.feature_column._numeric_column",
  "tensorflow.python.feature_column.feature_column.categorical_column_with_hash_bucket",
  "tensorflow.python.feature_column.feature_column.categorical_column_with_vocabulary_file",
  "tensorflow.python.feature_column.feature_column.categorical_column_with_vocabulary_list",
  "tensorflow.python.feature_column.feature_column.embedding_column",
  "tensorflow.python.feature_column.feature_column.numeric_column",
  "tensorflow.python.feature_column.feature_column_lib.CategoricalColumn",
  "tensorflow.python.feature_column.feature_column_lib.DenseColumn",
  "tensorflow.python.feature_column.feature_column_lib.EmbeddingColumn",
  "tensorflow.python.feature_column.feature_column_lib.FeatureTransformationCache",
  "tensorflow.python.feature_column.feature_column_lib.LinearModel",
  "tensorflow.python.feature_column.feature_column_lib.NumericColumn",
  "tensorflow.python.feature_column.feature_column_lib.SequenceFeatures",
  "tensorflow.python.feature_column.feature_column_lib.concatenate_context_input",
  "tensorflow.python.feature_column.feature_column_lib.deserialize_feature_columns",
  "tensorflow.python.feature_column.feature_column_lib.is_feature_column_v2",
  "tensorflow.python.feature_column.feature_column_lib.serialize_feature_columns",
  "tensorflow.python.feature_column.feature_column_v2",
  "tensorflow.python.feature_column.feature_column_v2.LinearModel",
  "tensorflow.python.feature_column.feature_column_v2.NumericColumn",
  "tensorflow.python.feature_column.utils.sequence_length_from_sparse_tensor",
  "tensorflow.python.framework.func_graph.convert_structure_to_signature",
  "tensorflow.python.framework.ops.colocate_with",
  "tensorflow.python.framework.ops.convert_to_tensor",
  "tensorflow.python.framework.ops.executing_eagerly_outside_functions",
  "tensorflow.python.framework.ops.get_name_scope",
  "tensorflow.python.framework.ops.internal_convert_to_tensor",
  "tensorflow.python.framework.ops.name_scope",
  "tensorflow.python.framework.ops.uid",
  "tensorflow.python.keras.backend._initialize_variables",
  "tensorflow.python.keras.backend.track_variable",
  "tensorflow.python.keras.layers.normalization.BatchNormalizationBase",
  "tensorflow.python.keras.layers.recurrent_v2.GRU",
  "tensorflow.python.keras.layers.recurrent_v2.GRUCell",
  "tensorflow.python.keras.layers.recurrent_v2.LSTM",
  "tensorflow.python.keras.layers.recurrent_v2.LSTMCell",
  "tensorflow.python.keras.metrics.AUC",
  "tensorflow.python.keras.optimizer_v2.optimizer_v2.OptimizerV2",
  "tensorflow.python.keras.utils.losses_utils.ReductionV2.NONE",
  "tensorflow.python.keras.utils.losses_utils.ReductionV2.SUM_OVER_BATCH_SIZE",
  "tensorflow.python.keras.utils.losses_utils.ReductionV2.all",
  "tensorflow.python.keras.utils.losses_utils.scale_loss_for_distribution",
  "tensorflow.python.ops.clustering_ops.CLUSTERS_VAR_NAME",
  "tensorflow.python.ops.clustering_ops.COSINE_DISTANCE",
  "tensorflow.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT",
  "tensorflow.python.ops.clustering_ops.KMeans",
  "tensorflow.python.ops.clustering_ops.RANDOM_INIT",
  "tensorflow.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE",
  "tensorflow.python.ops.control_flow_ops.with_dependencies",
  "tensorflow.python.ops.sparse_ops.sparse_split_v2",
  "tensorflow.python.ops.summary_ops_v2",
  "tensorflow.python.ops.summary_ops_v2._summary_state",
  "tensorflow.python.ops.variables.remove",
  "tensorflow.python.saved_model.model_utils.export_output.ClassificationOutput",
  "tensorflow.python.saved_model.model_utils.export_output.ExportOutput",
  "tensorflow.python.saved_model.model_utils.export_output.PredictOutput",
  "tensorflow.python.saved_model.model_utils.export_output.RegressionOutput",
  "tensorflow.python.saved_model.model_utils.export_utils.SINGLE_FEATURE_DEFAULT_NAME",
  "tensorflow.python.saved_model.model_utils.export_utils.SINGLE_LABEL_DEFAULT_NAME",
  "tensorflow.python.saved_model.model_utils.export_utils.SINGLE_RECEIVER_DEFAULT_NAME",
  "tensorflow.python.saved_model.model_utils.export_utils.build_all_signature_defs",
  "tensorflow.python.saved_model.model_utils.export_utils.get_temp_export_dir",
  "tensorflow.python.saved_model.model_utils.export_utils.get_timestamped_export_dir",
  "tensorflow.python.saved_model.model_utils.mode_keys.EstimatorModeKeys",
  "tensorflow.python.tpu.device_assignment",
  "tensorflow.python.tpu.device_assignment.core_assignment",
  "tensorflow.python.tpu.device_assignment.device_assignment",
  "tensorflow.python.tpu.device_assignment.topology.device_coordinates",
  "tensorflow.python.tpu.feature_column._TPUEmbeddingColumn",
  "tensorflow.python.tpu.feature_column._TPUSharedEmbeddingColumn",
  "tensorflow.python.tpu.feature_column._TPU_FC_TO_SCOPE",
  "tensorflow.python.tpu.feature_column.get_sequence_length_feature_key_name_from_feature_key_name",
  "tensorflow.python.tpu.feature_column_v2._TPUEmbeddingColumnV2",
  "tensorflow.python.tpu.feature_column_v2._TPUSharedEmbeddingColumnV2",
  "tensorflow.python.tpu.tpu_embedding.AdagradParameters",
  "tensorflow.python.tpu.tpu_embedding.AdagradSlotVariableName",
  "tensorflow.python.tpu.tpu_embedding.AdamParameters",
  "tensorflow.python.tpu.tpu_embedding.AdamSlotVariableNames",
  "tensorflow.python.tpu.tpu_embedding.EnqueueData",
  "tensorflow.python.tpu.tpu_embedding.EnqueueData.from_sparse_tensor",
  "tensorflow.python.tpu.tpu_embedding.FeatureConfig",
  "tensorflow.python.tpu.tpu_embedding.FtrlParameters",
  "tensorflow.python.tpu.tpu_embedding.FtrlSlotVariableName",
  "tensorflow.python.tpu.tpu_embedding.INFERENCE",
  "tensorflow.python.tpu.tpu_embedding.StochasticGradientDescentParameters",
  "tensorflow.python.tpu.tpu_embedding.TPUEmbedding",
  "tensorflow.python.tpu.tpu_embedding.TRAINING",
  "tensorflow.python.tpu.tpu_embedding.TableConfig",
  "tensorflow.python.tpu.tpu_system_metadata",
  "tensorflow.python.tpu.tpu_system_metadata._TPUSystemMetadata",
  "tensorflow.python.tpu.tpu_system_metadata._query_tpu_system_metadata",
  "tensorflow.python.tpu.tpu_system_metadata.devices",
  "tensorflow.python.tpu.tpu_system_metadata.master_job",
  "tensorflow.python.tpu.tpu_system_metadata.topology",
  "tensorflow.python.training.tracking.graph_view.ObjectGraphView",
  "tensorflow.python.training.tracking.tracking.AutoTrackable",
  "tensorflow.python.training.tracking.util.frozen_saver",
  "tensorflow.python.util.module_wrapper.TFModuleWrapper",
  "tensorflow.queue.FIFOQueue",
  "tensorflow.queue.PaddingFIFOQueue",
  "tensorflow.queue.RandomShuffleQueue",
  "tensorflow.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY",
  "tensorflow.sparse.SparseTensor",
  "tensorflow.sparse.reorder",
  "tensorflow.sparse.to_indicator",
  "tensorflow.strings.as_string",
  "tensorflow_estimator.python.estimator.canned.head",
  "tensorflow_estimator.python.estimator.canned.head._BinaryLogisticHeadWithSigmoidCrossEntropyLoss",
  "tensorflow_estimator.python.estimator.canned.head._Head",
  "tensorflow_estimator.python.estimator.canned.head._RegressionHeadWithMeanSquaredErrorLoss",
  "tensorflow_estimator.python.estimator.canned.head._binary_logistic_or_multi_class_head",
  "tensorflow_estimator.python.estimator.canned.head._create_tpu_estimator_spec",
  "tensorflow_estimator.python.estimator.canned.head._regression_head",
  "tensorflow_estimator.python.estimator.canned.head._weight_column",
  "tensorflow_estimator.python.estimator.canned.head.create_estimator_spec",
  "tensorflow_estimator.python.estimator.canned.head.logits_dimension",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.ACCURACY",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.ACCURACY_BASELINE",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.AUC",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.AUC_PR",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.LABEL_MEAN",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.LOSS",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.LOSS_MEAN",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.PRECISION",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.PREDICTION_MEAN",
  "tensorflow_estimator.python.estimator.canned.metric_keys.MetricKeys.RECALL",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.ALL_CLASSES",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.ALL_CLASS_IDS",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.CLASSES",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.CLASS_IDS",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.LOGISTIC",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.LOGITS",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.PREDICTIONS",
  "tensorflow_estimator.python.estimator.canned.prediction_keys.PredictionKeys.PROBABILITIES",
  "tensorflow_estimator.python.estimator.canned.timeseries.ar_model.ARModel.NORMAL_LIKELIHOOD_LOSS",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringFeatures.STATE_TUPLE",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringFeatures.TIMES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringResults.STATE_TUPLE",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringResults.TIMES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringResults.TIMES.all",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.FilteringResults.TIMES.shape",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.PredictionFeatures.STATE_TUPLE",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.PredictionFeatures.TIMES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.PredictionResults.TIMES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.SavedModelLabels.COLD_START_FILTER",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.SavedModelLabels.FILTER",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.SavedModelLabels.PREDICT",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.State.STATE_TUPLE",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.TrainEvalFeatures.TIMES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.TrainEvalFeatures.TIMES.shape",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.TrainEvalFeatures.VALUES",
  "tensorflow_estimator.python.estimator.canned.timeseries.feature_keys.TrainEvalFeatures.VALUES.shape",
  "tensorflow_estimator.python.estimator.canned.timeseries.head.OneShotPredictionHead",
  "tensorflow_estimator.python.estimator.canned.timeseries.head.TimeSeriesRegressionHead",
  "tensorflow_estimator.python.estimator.canned.timeseries.head.state_to_dictionary",
  "tensorflow_estimator.python.estimator.estimator",
  "tensorflow_estimator.python.estimator.estimator.Estimator",
  "tensorflow_estimator.python.estimator.estimator.EstimatorV2",
  "tensorflow_estimator.python.estimator.estimator.VocabInfo",
  "tensorflow_estimator.python.estimator.estimator.WarmStartSettings",
  "tensorflow_estimator.python.estimator.estimator._canned_estimator_api_gauge.get_cell",
  "tensorflow_estimator.python.estimator.estimator._check_hooks_type",
  "tensorflow_estimator.python.estimator.estimator._load_global_step_from_checkpoint_dir",
  "tensorflow_estimator.python.estimator.estimator._warm_start_settings",
  "tensorflow_estimator.python.estimator.estimator.config",
  "tensorflow_estimator.python.estimator.estimator.config.is_chief",
  "tensorflow_estimator.python.estimator.estimator.config.num_ps_replicas",
  "tensorflow_estimator.python.estimator.estimator.config.num_worker_replicas",
  "tensorflow_estimator.python.estimator.estimator.maybe_overwrite_model_dir_and_session_config",
  "tensorflow_estimator.python.estimator.estimator.model_dir",
  "tensorflow_estimator.python.estimator.estimator.model_fn",
  "tensorflow_estimator.python.estimator.estimator_lib.ModeKeys.EVAL",
  "tensorflow_estimator.python.estimator.estimator_lib.ModeKeys.TRAIN",
  "tensorflow_estimator.python.estimator.mode_keys.ModeKeys.EVAL",
  "tensorflow_estimator.python.estimator.mode_keys.ModeKeys.PREDICT",
  "tensorflow_estimator.python.estimator.mode_keys.ModeKeys.TRAIN",
  "tensorflow_estimator.python.estimator.model_fn",
  "tensorflow_estimator.python.estimator.model_fn.AVERAGE_LOSS_METRIC_KEY",
  "tensorflow_estimator.python.estimator.model_fn.EstimatorSpec",
  "tensorflow_estimator.python.estimator.model_fn.LOSS_METRIC_KEY",
  "tensorflow_estimator.python.estimator.model_fn.ModeKeys.EVAL",
  "tensorflow_estimator.python.estimator.model_fn.ModeKeys.PREDICT",
  "tensorflow_estimator.python.estimator.model_fn.ModeKeys.TRAIN",
  "tensorflow_estimator.python.estimator.model_fn._TPUEstimatorSpec",
  "tensorflow_estimator.python.estimator.model_fn.verify_model_fn_args",
  "tensorflow_estimator.python.estimator.run_config.TaskType.EVALUATOR",
  "tensorflow_estimator.python.estimator.tpu.tpu_config.InputPipelineConfig.BROADCAST",
  "tensorflow_estimator.python.estimator.tpu.tpu_config.InputPipelineConfig.PER_HOST_V2",
  "tensorflow_estimator.python.estimator.tpu.tpu_config.InputPipelineConfig.PER_SHARD_V1",
  "tensorflow_estimator.python.estimator.tpu.tpu_config.InputPipelineConfig.SLICED",
  "train_op_fn",
  "tuple",
  "type",
  "types",
  "types.FunctionType",
  "zip"
 ],
 "deps": [
  [
   "dateparser-0.5.1-py35_0",
   "dateparser-0.6.0-py_0"
  ],
  [
   "google-cloud-storage-1.10.0-py_0",
   "google-cloud-storage-1.11.0-py_0",
   "google-cloud-storage-1.12.0-py_0",
   "google-cloud-storage-1.13.0-py_0",
   "google-cloud-storage-1.14.0-py_0",
   "google-cloud-storage-1.15.0-py_0",
   "google-cloud-storage-1.15.1-py_0",
   "google-cloud-storage-1.16.0-py_0",
   "google-cloud-storage-1.16.1-py_0",
   "google-cloud-storage-1.17.0-py_0",
   "google-cloud-storage-1.18.0-py_0",
   "google-cloud-storage-1.19.0-py_0",
   "google-cloud-storage-1.19.1-py_0",
   "google-cloud-storage-1.19.1-py_1",
   "google-cloud-storage-1.20.0-py_0",
   "google-cloud-storage-1.24.1-py37_0",
   "google-cloud-storage-1.25.0-py_0",
   "google-cloud-storage-1.26.0-py_0",
   "google-cloud-storage-1.27.0-pyh9f0ad1d_0",
   "google-cloud-storage-1.28.0-pyh9f0ad1d_0",
   "google-cloud-storage-1.28.1-pyh9f0ad1d_0",
   "google-cloud-storage-1.30.0-pyh9f0ad1d_0",
   "google-cloud-storage-1.31.0-pyh9f0ad1d_0",
   "google-cloud-storage-1.31.2-pyh9f0ad1d_0",
   "google-cloud-storage-1.32.0-pyh9f0ad1d_0",
   "google-cloud-storage-1.33.0-pyhd3deb0d_0",
   "google-cloud-storage-1.34.0-pyhd3deb0d_0",
   "google-cloud-storage-1.35.0-pyhd3deb0d_0",
   "google-cloud-storage-1.6.0-py_0",
   "google-cloud-storage-1.6.0-py_1",
   "google-cloud-storage-1.7.0-py_1",
   "google-cloud-storage-1.8.0-py_0",
   "google-cloud-storage-1.9.0-py_0"
  ],
  [
   "pandas-0.25.2-py37hb3f55d8_0",
   "pandas-1.0.0-py37hb3f55d8_0",
   "pandas-1.0.1-py38hb3f55d8_0",
   "pandas-1.0.2-py36h830a2c2_0",
   "pandas-1.0.4-py36h01e7d0c_0",
   "pandas-1.0.5-py37h0da4684_0",
   "pandas-1.0.5-py38hcb8c335_0",
   "pandas-1.1.0-py37h3340039_0",
   "pandas-1.1.1-py38h950e882_0",
   "pandas-1.1.2-py38h950e882_0",
   "pandas-1.1.3-py36h01e7d0c_1",
   "pandas-1.1.3-py36h01e7d0c_2",
   "pandas-1.1.3-py36h7c3b610_2",
   "pandas-1.1.3-py36h831f99a_0",
   "pandas-1.1.3-py39h1670d02_2",
   "pandas-1.1.3-py39hd56b5f2_2",
   "pandas-1.1.5-py36hcf32051_0",
   "pandas-1.1.5-py37hdc94413_0",
   "pandas-1.1.5-py38h51da96c_0",
   "pandas-1.2.0-py37hdc94413_0",
   "pandas-1.2.0-py37hdc94413_1",
   "pandas-1.2.0-py39hde0f152_1",
   "pandas-1.2.1-py38h51da96c_0",
   "pandas-1.2.2-py37h40f5888_0",
   "pandas-1.2.2-py37hdc94413_0"
  ],
  [],
  [
   "tensorflow-estimator-2.2.0-pyh3ac7371_0",
   "tensorflow-estimator-2.2.0-pyh95af2a2_0"
  ]
 ]
}