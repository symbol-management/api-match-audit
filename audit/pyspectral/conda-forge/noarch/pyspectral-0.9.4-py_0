{
 "bad": [
  "appdirs.AppDirs",
  "collections.Mapping",
  "dask.array",
  "dask.array.Array",
  "dask.array.compute",
  "dask.array.from_array",
  "dask.array.map_blocks",
  "dask.config.set",
  "dask.get",
  "delta",
  "doctest.DocFileSuite",
  "doctest.DocTestSuite",
  "geotiepoints.multilinear.MultilinearInterpolator",
  "glob.glob",
  "h5py.File",
  "ius",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.Handler",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.rcParams",
  "numbers.Number",
  "numpy",
  "numpy.abs",
  "numpy.allclose",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argsort",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.atleast_2d",
  "numpy.clip",
  "numpy.cos",
  "numpy.deg2rad",
  "numpy.diff",
  "numpy.divide",
  "numpy.equal",
  "numpy.errstate",
  "numpy.exp",
  "numpy.float32",
  "numpy.genfromtxt",
  "numpy.greater_equal",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.less_equal",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.ma.arange",
  "numpy.ma.array",
  "numpy.ma.is_masked",
  "numpy.ma.masked_array",
  "numpy.ma.masked_invalid",
  "numpy.ma.masked_less_equal",
  "numpy.ma.where",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nanmax",
  "numpy.nanmin",
  "numpy.ndarray",
  "numpy.pi",
  "numpy.r_",
  "numpy.rad2deg",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.savez",
  "numpy.searchsorted",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.trapz",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os.environ.get",
  "os.makedirs",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.remove",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkg_resources.resource_filename",
  "pyspectral.atm_correction_ir.AtmosphericalCorrection",
  "pyspectral.atm_correction_ir.LOG",
  "pyspectral.atm_correction_ir.NDIM",
  "pyspectral.atm_correction_ir.SATZ",
  "pyspectral.atm_correction_ir.SHAPE",
  "pyspectral.atm_correction_ir.TBS",
  "pyspectral.atm_correction_ir.this",
  "pyspectral.atm_correction_ir.viewzen_corr",
  "pyspectral.blackbody",
  "pyspectral.blackbody.C_SPEED",
  "pyspectral.blackbody.EPSILON",
  "pyspectral.blackbody.H_PLANCK",
  "pyspectral.blackbody.K_BOLTZMANN",
  "pyspectral.blackbody.LOG",
  "pyspectral.blackbody.blackbody",
  "pyspectral.blackbody.blackbody_rad2temp",
  "pyspectral.blackbody.blackbody_wn",
  "pyspectral.blackbody.blackbody_wn_rad2temp",
  "pyspectral.blackbody.planck",
  "pyspectral.config.BUILTIN_CONFIG_FILE",
  "pyspectral.config.CONFIG_FILE",
  "pyspectral.config.get_config",
  "pyspectral.config.recursive_dict_update",
  "pyspectral.near_infrared_reflectance",
  "pyspectral.near_infrared_reflectance.Calculator",
  "pyspectral.near_infrared_reflectance.EPSILON",
  "pyspectral.near_infrared_reflectance.LOG",
  "pyspectral.radiance_tb_conversion.BLACKBODY_FUNC",
  "pyspectral.radiance_tb_conversion.LOG",
  "pyspectral.radiance_tb_conversion.RadTbConverter",
  "pyspectral.radiance_tb_conversion.SEVIRI",
  "pyspectral.radiance_tb_conversion.SeviriRadTbConverter",
  "pyspectral.radiance_tb_conversion.TB_MAX",
  "pyspectral.radiance_tb_conversion.TB_MIN",
  "pyspectral.radiance_tb_conversion.radiance2tb",
  "pyspectral.raw_reader.LOG",
  "pyspectral.rayleigh.BandFrequencyOutOfRange",
  "pyspectral.rayleigh.HAVE_DASK",
  "pyspectral.rayleigh.LOG",
  "pyspectral.rayleigh.Rayleigh",
  "pyspectral.rayleigh.RayleighConfigBaseClass",
  "pyspectral.rayleigh.get_reflectance_lut",
  "pyspectral.rsr_reader.LOG",
  "pyspectral.rsr_reader.RSRDataBaseClass",
  "pyspectral.rsr_reader.RelativeSpectralResponse",
  "pyspectral.rsr_reader.main",
  "pyspectral.solar",
  "pyspectral.solar.LOG",
  "pyspectral.solar.SolarIrradianceSpectrum",
  "pyspectral.solar.TOTAL_IRRADIANCE_SPECTRUM_2000ASTM",
  "pyspectral.tests.APPVEYOR",
  "pyspectral.tests.TRAVIS",
  "pyspectral.tests.data.TEST_RAYLEIGH_AZID_COORD",
  "pyspectral.tests.data.TEST_RAYLEIGH_LUT",
  "pyspectral.tests.data.TEST_RAYLEIGH_SATZ_COORD",
  "pyspectral.tests.data.TEST_RAYLEIGH_SUNZ_COORD",
  "pyspectral.tests.data.TEST_RAYLEIGH_WVL_COORD",
  "pyspectral.tests.suite",
  "pyspectral.tests.test_atm_correction_ir.RES",
  "pyspectral.tests.test_atm_correction_ir.SATZ",
  "pyspectral.tests.test_atm_correction_ir.TBS",
  "pyspectral.tests.test_blackbody.CustomScheduler",
  "pyspectral.tests.test_blackbody.RAD_11MICRON_300KELVIN",
  "pyspectral.tests.test_blackbody.RAD_11MICRON_301KELVIN",
  "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_300KELVIN",
  "pyspectral.tests.test_blackbody.WN_RAD_11MICRON_301KELVIN",
  "pyspectral.tests.test_rad_tb_conversions.I4_RESPONSE",
  "pyspectral.tests.test_rad_tb_conversions.I4_WAVELENGTH",
  "pyspectral.tests.test_rad_tb_conversions.M12_RESPONSE",
  "pyspectral.tests.test_rad_tb_conversions.M12_WAVELENGTH",
  "pyspectral.tests.test_rad_tb_conversions.RESP",
  "pyspectral.tests.test_rad_tb_conversions.SEV_RSR",
  "pyspectral.tests.test_rad_tb_conversions.TEST_RSR",
  "pyspectral.tests.test_rad_tb_conversions.TEST_TBS",
  "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS",
  "pyspectral.tests.test_rad_tb_conversions.TRUE_RADS_SEVIRI",
  "pyspectral.tests.test_rad_tb_conversions.VIIRS_RSR",
  "pyspectral.tests.test_rad_tb_conversions.WAVN",
  "pyspectral.tests.test_rayleigh.RelativeSpectralResponseTestData",
  "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT1",
  "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT2",
  "pyspectral.tests.test_rayleigh.TEST_RAYLEIGH_RESULT3",
  "pyspectral.tests.test_reflectance.RESP",
  "pyspectral.tests.test_reflectance.TEST_RSR",
  "pyspectral.tests.test_reflectance.TEST_RSR_WN",
  "pyspectral.tests.test_reflectance.WVN",
  "pyspectral.tests.test_rsr_reader.DIR_PATH_ITEMS",
  "pyspectral.tests.test_rsr_reader.RESULT_WVN_RSR",
  "pyspectral.tests.test_rsr_reader.TEST_CONFIG",
  "pyspectral.tests.test_rsr_reader.TEST_RSR",
  "pyspectral.tests.test_rsr_reader.TEST_RSR2",
  "pyspectral.tests.test_rsr_reader.TEST_RSR_DIR",
  "pyspectral.tests.test_solarflux.RESULT_IPOL_WVLS",
  "pyspectral.tests.test_solarflux.TEST_RSR",
  "pyspectral.tests.test_utils.RESULT_RSR",
  "pyspectral.tests.test_utils.RsrTestData",
  "pyspectral.tests.test_utils.TEST_RSR",
  "pyspectral.tests.unittest_helpers.assertNumpyArraysEqual",
  "pyspectral.utils.AEROSOL_TYPES",
  "pyspectral.utils.ATMOSPHERES",
  "pyspectral.utils.ATMOSPHERES.keys",
  "pyspectral.utils.ATM_CORRECTION_LUT_VERSION",
  "pyspectral.utils.BANDNAMES",
  "pyspectral.utils.BANDNAMES.get",
  "pyspectral.utils.CONF",
  "pyspectral.utils.HTTPS_RAYLEIGH_LUTS",
  "pyspectral.utils.HTTP_PYSPECTRAL_RSR",
  "pyspectral.utils.INSTRUMENTS.get",
  "pyspectral.utils.LOCAL_RAYLEIGH_DIR",
  "pyspectral.utils.LOCAL_RSR_DIR",
  "pyspectral.utils.LOG",
  "pyspectral.utils.NullHandler",
  "pyspectral.utils.RAYLEIGH_LUT_DIRS",
  "pyspectral.utils.RSR_DATA_VERSION",
  "pyspectral.utils.RSR_DATA_VERSION_FILENAME",
  "pyspectral.utils.TB2RAD_DIR",
  "pyspectral.utils.URL_PREFIX",
  "pyspectral.utils.WAVE_LENGTH",
  "pyspectral.utils.WAVE_NUMBER",
  "pyspectral.utils._is_logging_on",
  "pyspectral.utils.convert2wavenumber",
  "pyspectral.utils.dirname",
  "pyspectral.utils.download_luts",
  "pyspectral.utils.download_rsr",
  "pyspectral.utils.get_bandname_from_wavelength",
  "pyspectral.utils.get_central_wave",
  "pyspectral.utils.logging_on",
  "pyspectral.utils.name",
  "pyspectral.utils.url",
  "ratio",
  "requests.get",
  "scipy.integrate.trapz",
  "scipy.interpolate.InterpolatedUnivariateSpline",
  "six.integer_types",
  "sys.version_info",
  "tarfile.open",
  "tau",
  "tau0",
  "tempfile.gettempdir",
  "time.time",
  "tqdm.tqdm",
  "unittest.TestCase",
  "unittest.mock.patch",
  "unittest2.TestCase",
  "unittest2.TestSuite",
  "unittest2.TextTestRunner",
  "yaml.Loader",
  "yaml.load"
 ],
 "deps": {
  "appdirs": [],
  "collections": [],
  "dask": [],
  "delta": [],
  "doctest": [],
  "geotiepoints": [],
  "glob": [],
  "h5py": [],
  "ius": [],
  "logging": [],
  "matplotlib": [],
  "numbers": [],
  "numpy": [],
  "os": [],
  "pkg_resources": [],
  "pyspectral": [],
  "ratio": [],
  "requests": [],
  "scipy": [],
  "six": [],
  "sys": [],
  "tarfile": [],
  "tau": [],
  "tau0": [],
  "tempfile": [],
  "time": [],
  "tqdm": [],
  "unittest": [],
  "unittest2": [],
  "yaml": []
 }
}