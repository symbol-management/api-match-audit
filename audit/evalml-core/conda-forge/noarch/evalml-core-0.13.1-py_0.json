{
 "bad": [
  "AutoMLAlgorithmException",
  "BaselineTestPipeline",
  "CatBoostTestPipeline",
  "CoolBinaryClassificationPipeline",
  "DataCheckError",
  "DataCheckWarning",
  "FakePipeline",
  "Funky_Name1DataCheck",
  "Funky_Name1DataCheck.name",
  "HighlyNullDataCheck",
  "IDColumnsDataCheck",
  "InvalidTargetDataCheck",
  "LabelLeakageDataCheck",
  "MockBinaryClassificationPipeline",
  "MockBinaryClassificationPipelineWithoutEstimator",
  "MockComponent",
  "MockComponent.model_family",
  "MockComponentModelFamily",
  "MockComponentName",
  "MockDataCheck",
  "MockDataCheckError",
  "MockDataCheckErrorAndWarning",
  "MockDataCheckWarning",
  "MockDataCheckWithParam",
  "MockEmptyObjective",
  "MockEstimator",
  "MockEstimator.model_family",
  "MockEstimatorObj",
  "MockEstimatorWithOverrides",
  "MockEstimatorWithOverridesSubclass",
  "MockEstimatorWithoutAttribute",
  "MockFeatureSelector",
  "MockMulticlassClassificationPipeline",
  "MockNoObjectiveFunctionObjective",
  "MockObjective",
  "MockPipeline",
  "MockPipeline.summary",
  "MockPipelineNone",
  "MockPipelineOverRide",
  "MockPrecision",
  "MockRandomState",
  "MockRegressionPipeline",
  "MockResults",
  "MockTransformer",
  "MockTransformer.model_family",
  "MockTransformerObj",
  "MockTransformerWithFit",
  "MockTransformerWithFitAndTransform",
  "MockTransformerWithFitTransform",
  "MockTransformerWithFitTransformButError",
  "MockTransformerWithOnlyFit",
  "MockTransformerWithOverride",
  "MockTransformerWithOverrideSubclass",
  "NoParamsException",
  "NoVarianceDataCheck",
  "NonComponent",
  "ParameterError",
  "PipelineSearchPlots",
  "PipelineWithDropCol",
  "TestDefinedNamePipeline",
  "TestPipeline",
  "TestPipelineWithoutComponentGraph",
  "_get_funct_name",
  "_print_list",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "assert_allowed_pipelines_equal_helper",
  "check1",
  "check2",
  "check3",
  "check4",
  "check_equal_dicts",
  "class_to_test",
  "cls",
  "cls.__name__",
  "cls._default_parameters",
  "collections.OrderedDict",
  "collections.namedtuple",
  "component_class",
  "component_class.__init__",
  "component_class.__name__",
  "component_class.hyperparameter_ranges",
  "component_class.name",
  "component_class.needs_fitting",
  "component_class.supported_problem_types",
  "dummy_binary_pipeline_class",
  "dummy_regression_pipeline_class",
  "enum.Enum",
  "estimator_class",
  "estimator_class.supported_problem_types",
  "evalml.automl.TrainingValidationSplit",
  "evalml.automl.automl_algorithm.AutoMLAlgorithm",
  "evalml.automl.automl_algorithm.AutoMLAlgorithmException",
  "evalml.automl.automl_algorithm.IterativeAlgorithm",
  "evalml.automl.data_splitters.TrainingValidationSplit",
  "evalml.data_checks.DataCheck",
  "evalml.data_checks.DataCheckError",
  "evalml.data_checks.DataCheckWarning",
  "evalml.data_checks.DataChecks",
  "evalml.data_checks.DefaultDataChecks",
  "evalml.data_checks.EmptyDataChecks",
  "evalml.data_checks.data_check_message_type.DataCheckMessageType.ERROR",
  "evalml.data_checks.data_check_message_type.DataCheckMessageType.WARNING",
  "evalml.data_checks.no_variance_data_check.NoVarianceDataCheck.name",
  "evalml.demos.load_breast_cancer",
  "evalml.demos.load_churn",
  "evalml.demos.load_diabetes",
  "evalml.demos.load_fraud",
  "evalml.demos.load_wine",
  "evalml.exceptions.AutoMLSearchException",
  "evalml.exceptions.ComponentNotYetFittedError",
  "evalml.exceptions.IllFormattedClassNameError",
  "evalml.exceptions.MethodPropertyNotFoundError",
  "evalml.exceptions.MissingComponentError",
  "evalml.exceptions.ObjectiveNotFoundError",
  "evalml.exceptions.PipelineNotFoundError",
  "evalml.exceptions.PipelineNotYetFittedError",
  "evalml.exceptions.PipelineScoreError",
  "evalml.model_family.ModelFamily.BASELINE",
  "evalml.model_family.ModelFamily.CATBOOST",
  "evalml.model_family.ModelFamily.EXTRA_TREES",
  "evalml.model_family.ModelFamily.LINEAR_MODEL",
  "evalml.model_family.ModelFamily.NONE",
  "evalml.model_family.ModelFamily.RANDOM_FOREST",
  "evalml.model_family.ModelFamily.XGBOOST",
  "evalml.model_family.handle_model_family",
  "evalml.model_family.model_family.ModelFamily.BASELINE",
  "evalml.model_family.model_family.ModelFamily.CATBOOST",
  "evalml.model_family.model_family.ModelFamily.XGBOOST",
  "evalml.model_understanding.graphs.binary_objective_vs_threshold",
  "evalml.model_understanding.graphs.calculate_permutation_importance",
  "evalml.model_understanding.graphs.confusion_matrix",
  "evalml.model_understanding.graphs.graph_binary_objective_vs_threshold",
  "evalml.model_understanding.graphs.graph_confusion_matrix",
  "evalml.model_understanding.graphs.graph_partial_dependence",
  "evalml.model_understanding.graphs.graph_permutation_importance",
  "evalml.model_understanding.graphs.graph_precision_recall_curve",
  "evalml.model_understanding.graphs.graph_roc_curve",
  "evalml.model_understanding.graphs.normalize_confusion_matrix",
  "evalml.model_understanding.graphs.partial_dependence",
  "evalml.model_understanding.graphs.precision_recall_curve",
  "evalml.model_understanding.graphs.roc_curve",
  "evalml.objectives.AccuracyBinary",
  "evalml.objectives.AccuracyMulticlass",
  "evalml.objectives.BalancedAccuracyBinary",
  "evalml.objectives.BalancedAccuracyMulticlass",
  "evalml.objectives.BinaryClassificationObjective",
  "evalml.objectives.CostBenefitMatrix",
  "evalml.objectives.CostBenefitMatrix.calculate_percent_difference",
  "evalml.objectives.F1",
  "evalml.objectives.F1Macro",
  "evalml.objectives.F1Micro",
  "evalml.objectives.F1Weighted",
  "evalml.objectives.FraudCost",
  "evalml.objectives.LeadScoring",
  "evalml.objectives.LogLossBinary.calculate_percent_difference",
  "evalml.objectives.MCCBinary",
  "evalml.objectives.MCCMulticlass",
  "evalml.objectives.MSE",
  "evalml.objectives.MeanSquaredLogError",
  "evalml.objectives.MulticlassClassificationObjective",
  "evalml.objectives.ObjectiveBase",
  "evalml.objectives.Precision",
  "evalml.objectives.PrecisionMacro",
  "evalml.objectives.PrecisionMicro",
  "evalml.objectives.PrecisionWeighted",
  "evalml.objectives.Recall",
  "evalml.objectives.RecallMacro",
  "evalml.objectives.RecallMicro",
  "evalml.objectives.RecallWeighted",
  "evalml.objectives.RegressionObjective",
  "evalml.objectives.RootMeanSquaredError",
  "evalml.objectives.RootMeanSquaredLogError",
  "evalml.objectives.get_objective",
  "evalml.objectives.get_objectives",
  "evalml.objectives.standard_metrics.AUC",
  "evalml.objectives.standard_metrics.F1",
  "evalml.objectives.utils.OPTIONS.items",
  "evalml.objectives.utils.OPTIONS.values",
  "evalml.pipelines.BaselineBinaryPipeline",
  "evalml.pipelines.BaselineMulticlassPipeline",
  "evalml.pipelines.BaselineRegressionPipeline",
  "evalml.pipelines.BinaryClassificationPipeline",
  "evalml.pipelines.ExtraTreesClassifier",
  "evalml.pipelines.ExtraTreesClassifier.model_family",
  "evalml.pipelines.ExtraTreesClassifier.supported_problem_types",
  "evalml.pipelines.ExtraTreesRegressor",
  "evalml.pipelines.ExtraTreesRegressor.model_family",
  "evalml.pipelines.ExtraTreesRegressor.supported_problem_types",
  "evalml.pipelines.MeanBaselineRegressionPipeline",
  "evalml.pipelines.ModeBaselineBinaryPipeline",
  "evalml.pipelines.ModeBaselineMulticlassPipeline",
  "evalml.pipelines.MulticlassClassificationPipeline",
  "evalml.pipelines.PipelineBase",
  "evalml.pipelines.PipelineBase.load",
  "evalml.pipelines.RegressionPipeline",
  "evalml.pipelines.classification_pipeline.ClassificationPipeline._score",
  "evalml.pipelines.components.BaselineClassifier",
  "evalml.pipelines.components.BaselineRegressor",
  "evalml.pipelines.components.CatBoostClassifier",
  "evalml.pipelines.components.CatBoostClassifier.SEED_MAX",
  "evalml.pipelines.components.CatBoostClassifier.SEED_MIN",
  "evalml.pipelines.components.CatBoostRegressor",
  "evalml.pipelines.components.CatBoostRegressor.SEED_MAX",
  "evalml.pipelines.components.CatBoostRegressor.SEED_MIN",
  "evalml.pipelines.components.ComponentBase",
  "evalml.pipelines.components.ComponentBase.load",
  "evalml.pipelines.components.DateTimeFeaturizer",
  "evalml.pipelines.components.DropColumns",
  "evalml.pipelines.components.DropNullColumns",
  "evalml.pipelines.components.ElasticNetClassifier",
  "evalml.pipelines.components.ElasticNetRegressor",
  "evalml.pipelines.components.Estimator",
  "evalml.pipelines.components.ExtraTreesClassifier",
  "evalml.pipelines.components.ExtraTreesRegressor",
  "evalml.pipelines.components.FeatureSelector",
  "evalml.pipelines.components.Imputer",
  "evalml.pipelines.components.LSA",
  "evalml.pipelines.components.LinearRegressor",
  "evalml.pipelines.components.LinearRegressor.name",
  "evalml.pipelines.components.LogisticRegressionClassifier",
  "evalml.pipelines.components.LogisticRegressionClassifier.name",
  "evalml.pipelines.components.OneHotEncoder",
  "evalml.pipelines.components.PerColumnImputer",
  "evalml.pipelines.components.RFClassifierSelectFromModel",
  "evalml.pipelines.components.RFRegressorSelectFromModel",
  "evalml.pipelines.components.RandomForestClassifier",
  "evalml.pipelines.components.RandomForestRegressor",
  "evalml.pipelines.components.SelectColumns",
  "evalml.pipelines.components.SimpleImputer",
  "evalml.pipelines.components.StandardScaler",
  "evalml.pipelines.components.TextFeaturizer",
  "evalml.pipelines.components.Transformer",
  "evalml.pipelines.components.Transformer.name",
  "evalml.pipelines.components.XGBoostClassifier",
  "evalml.pipelines.components.XGBoostClassifier.SEED_MAX",
  "evalml.pipelines.components.XGBoostClassifier.SEED_MIN",
  "evalml.pipelines.components.XGBoostRegressor",
  "evalml.pipelines.components.XGBoostRegressor.SEED_MAX",
  "evalml.pipelines.components.XGBoostRegressor.SEED_MIN",
  "evalml.pipelines.components.estimators.Estimator",
  "evalml.pipelines.components.estimators.classifiers.ElasticNetClassifier",
  "evalml.pipelines.components.estimators.classifiers.ElasticNetClassifier.model_family",
  "evalml.pipelines.components.estimators.classifiers.ElasticNetClassifier.supported_problem_types",
  "evalml.pipelines.components.estimators.regressors.ElasticNetRegressor",
  "evalml.pipelines.components.estimators.regressors.ElasticNetRegressor.model_family",
  "evalml.pipelines.components.estimators.regressors.ElasticNetRegressor.supported_problem_types",
  "evalml.pipelines.components.transformers.Transformer",
  "evalml.pipelines.components.transformers.imputers.SimpleImputer",
  "evalml.pipelines.components.transformers.preprocessing.LSA",
  "evalml.pipelines.components.transformers.preprocessing.TextTransformer",
  "evalml.preprocessing.load_data",
  "evalml.preprocessing.split_data",
  "evalml.problem_types.ProblemTypes.BINARY",
  "evalml.problem_types.ProblemTypes.MULTICLASS",
  "evalml.problem_types.ProblemTypes.REGRESSION",
  "evalml.problem_types.handle_problem_types",
  "evalml.problem_types.problem_types.ProblemTypes.BINARY",
  "evalml.problem_types.problem_types.ProblemTypes.MULTICLASS",
  "evalml.problem_types.problem_types.ProblemTypes.REGRESSION",
  "evalml.tuners.GridSearchTuner",
  "evalml.tuners.NoParamsException",
  "evalml.tuners.ParameterError",
  "evalml.tuners.RandomSearchTuner",
  "evalml.tuners.SKOptTuner",
  "evalml.tuners.Tuner",
  "evalml.utils.SEED_BOUNDS.max_bound",
  "evalml.utils.SEED_BOUNDS.min_bound",
  "evalml.utils.classproperty",
  "evalml.utils.convert_to_seconds",
  "evalml.utils.gen_utils.SEED_BOUNDS.max_bound",
  "evalml.utils.gen_utils.SEED_BOUNDS.min_bound",
  "evalml.utils.get_logger",
  "evalml.utils.get_random_seed",
  "evalml.utils.get_random_state",
  "evalml.utils.import_or_raise",
  "evalml.utils.log_subtitle",
  "evalml.utils.log_title",
  "functools.wraps",
  "get_IQR",
  "get_pipeline_base_class",
  "get_random_seed_vec",
  "handle_component_class",
  "itertools.product",
  "linear_regression_pipeline_class",
  "logging.handlers.RotatingFileHandler",
  "logistic_regression_binary_pipeline_class",
  "logistic_regression_binary_pipeline_class.default_parameters",
  "logistic_regression_multiclass_pipeline_class",
  "make_expected_values",
  "make_mock_random_state",
  "method",
  "metric",
  "metric.__name__",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.atleast_2d",
  "numpy.bool_",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.delete",
  "numpy.dtype",
  "numpy.float64",
  "numpy.identity",
  "numpy.inf",
  "numpy.int64",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.linalg.norm",
  "numpy.log",
  "numpy.median",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.random.RandomState",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.repeat",
  "numpy.round",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.zeros",
  "operator.itemgetter",
  "pandas.DataFrame.from_dict",
  "pandas.api.types.is_bool",
  "pandas.api.types.is_categorical_dtype",
  "pandas.api.types.is_number",
  "pipeline",
  "pipeline.fit",
  "pipeline_class",
  "pipeline_class.component_graph",
  "pipeline_class.name.propose",
  "scipy.optimize.minimize_scalar",
  "sklearn.datasets.load_breast_cancer",
  "sklearn.datasets.load_diabetes",
  "sklearn.datasets.load_wine",
  "sklearn.datasets.make_classification",
  "sklearn.datasets.make_regression",
  "sklearn.decomposition.TruncatedSVD",
  "sklearn.ensemble.ExtraTreesClassifier",
  "sklearn.ensemble.ExtraTreesRegressor",
  "sklearn.ensemble.IsolationForest",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.feature_selection.SelectFromModel",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.SGDClassifier",
  "sklearn.metrics.matthews_corrcoef",
  "sklearn.model_selection.BaseCrossValidator",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.StratifiedShuffleSplit",
  "sklearn.model_selection.TimeSeriesSplit",
  "sklearn.model_selection._split.BaseCrossValidator",
  "sklearn.model_selection.train_test_split",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.label_binarize",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "skopt.Optimizer",
  "skopt.Space",
  "skopt.space.Integer",
  "skopt.space.Real",
  "str.maketrans",
  "table_maker",
  "texttable.Texttable.HEADER",
  "unittest.mock.MagicMock",
  "unittest.mock.call",
  "unittest.mock.patch"
 ],
 "deps": [
  [
   "click-5.1-py_0",
   "click-6.6-py35_1",
   "click-6.6-py36_1",
   "click-6.7-py35_0",
   "click-6.7-py_1",
   "click-7.0-py_0",
   "click-7.1-pyh8c360ce_0",
   "click-7.1.1-pyh8c360ce_0",
   "click-7.1.2-pyh9f0ad1d_0"
  ],
  [
   "evalml-core-0.13.1-py_0"
  ],
  [
   "importlib-1.0.3-py26_0"
  ],
  [
   "numpy-1.10.4-py27_blas_openblas_200",
   "numpy-1.10.4-py27_blas_openblas_204",
   "numpy-1.10.4-py35_blas_openblas_203",
   "numpy-1.11.1-py27_blas_openblas_201",
   "numpy-1.11.2-py27_blas_openblas_201",
   "numpy-1.11.2-py35_blas_openblas_202",
   "numpy-1.11.3-py27_blas_openblas_201",
   "numpy-1.11.3-py27_blas_openblashd3ea46f_205",
   "numpy-1.11.3-py34_blas_openblas_200",
   "numpy-1.11.3-py35_blas_openblas_202",
   "numpy-1.11.3-py36h8b7e671_1206",
   "numpy-1.11.3-py36he5ce36f_1207",
   "numpy-1.12.1-py35_blas_openblas_201",
   "numpy-1.13.0-py34_blas_openblas_200",
   "numpy-1.13.2-py36_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblash1522bff_1201",
   "numpy-1.13.3-py35_blas_openblas_200",
   "numpy-1.13.3-py35_blas_openblas_201",
   "numpy-1.13.3-py36_blas_openblash1522bff_1201",
   "numpy-1.13.3-py36_blas_openblashb06ca3d_201",
   "numpy-1.14.2-py27_blas_openblas_200",
   "numpy-1.14.5-py27_blas_openblashd3ea46f_200",
   "numpy-1.14.5-py35_blas_openblashd3ea46f_202",
   "numpy-1.14.5-py36_blas_openblashd3ea46f_202",
   "numpy-1.14.6-py27_blas_openblashb06ca3d_200",
   "numpy-1.14.6-py27he5ce36f_1201",
   "numpy-1.14.6-py37h95a1406_1201",
   "numpy-1.15.2-py27_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py27_blas_openblashd3ea46f_1",
   "numpy-1.15.2-py35_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_1",
   "numpy-1.15.4-py27_blas_openblash1522bff_1000",
   "numpy-1.15.4-py27_blas_openblashb06ca3d_0",
   "numpy-1.15.4-py27h8b7e671_1001",
   "numpy-1.15.4-py27h8b7e671_1002",
   "numpy-1.15.4-py37_blas_openblashb06ca3d_0",
   "numpy-1.16.1-py37_blas_openblash1522bff_0",
   "numpy-1.16.2-py36h8b7e671_1",
   "numpy-1.16.2-py37_blas_openblash1522bff_0",
   "numpy-1.16.4-py27h95a1406_0",
   "numpy-1.16.5-py27h95a1406_0",
   "numpy-1.16.6-py38h18fd61f_0",
   "numpy-1.17.1-py36h95a1406_0",
   "numpy-1.17.3-py37h95a1406_0",
   "numpy-1.17.5-py37h95a1406_0",
   "numpy-1.17.5-py37haa41c4c_1",
   "numpy-1.17.5-py38h18fd61f_1",
   "numpy-1.18.1-py37h8960a57_1",
   "numpy-1.18.4-py36h7314795_0",
   "numpy-1.18.4-py36he0f5f23_0",
   "numpy-1.19.0-py36he0f5f23_0",
   "numpy-1.19.1-py36h3849536_2",
   "numpy-1.19.1-py37h7ea13bd_2",
   "numpy-1.19.1-py37h8960a57_0",
   "numpy-1.19.2-py36h68c22af_1",
   "numpy-1.19.2-py37h7008fea_1",
   "numpy-1.19.2-py38hf89b668_1",
   "numpy-1.19.4-py37haa41c4c_2",
   "numpy-1.19.4-py38h18fd61f_2",
   "numpy-1.19.5-py36h2aa4a07_1",
   "numpy-1.19.5-py39hdbf815f_1",
   "numpy-1.8.2-py34_blas_openblas_200",
   "numpy-1.8.2-py34_blas_openblas_201",
   "numpy-1.8.2-py35_blas_openblas_200",
   "numpy-1.8.2-py36_blas_openblas_201",
   "numpy-1.9.3-py27_blas_openblas_203",
   "numpy-1.9.3-py27_blas_openblash1522bff_1207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py27_blas_openblashd3ea46f_205",
   "numpy-1.9.3-py27_blas_openblashd3ea46f_206",
   "numpy-1.9.3-py34_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblash1522bff_1007",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py37_blas_openblash1522bff_1007",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_7"
  ],
  [
   "pandas-0.25.2-py37hb3f55d8_0",
   "pandas-0.25.3-py38hb3f55d8_0",
   "pandas-1.0.0-py37hb3f55d8_0",
   "pandas-1.0.1-py38hb3f55d8_0",
   "pandas-1.0.2-py36h830a2c2_0",
   "pandas-1.0.4-py36h01e7d0c_0",
   "pandas-1.0.5-py37h0da4684_0",
   "pandas-1.0.5-py38hcb8c335_0",
   "pandas-1.1.0-py37h3340039_0",
   "pandas-1.1.1-py38h950e882_0",
   "pandas-1.1.2-py38h950e882_0",
   "pandas-1.1.3-py36h01e7d0c_1",
   "pandas-1.1.3-py36h01e7d0c_2",
   "pandas-1.1.3-py36h7c3b610_2",
   "pandas-1.1.3-py36h831f99a_0",
   "pandas-1.1.3-py39h1670d02_2",
   "pandas-1.1.3-py39hd56b5f2_2",
   "pandas-1.1.5-py36hcf32051_0",
   "pandas-1.1.5-py37hdc94413_0",
   "pandas-1.1.5-py38h51da96c_0",
   "pandas-1.2.0-py37hdc94413_0",
   "pandas-1.2.0-py37hdc94413_1",
   "pandas-1.2.0-py39hde0f152_1",
   "pandas-1.2.1-py38h51da96c_0",
   "pandas-1.2.2-py37h40f5888_0",
   "pandas-1.2.2-py37hdc94413_0"
  ],
  [
   "pathlib-1.0.1-py27_0",
   "pathlib-1.0.1-py27_1",
   "pathlib-1.0.1-py_1"
  ],
  [
   "psutil-5.6.2-py27h516909a_0",
   "psutil-5.6.4-py38h516909a_0",
   "psutil-5.6.5-py36h516909a_0",
   "psutil-5.6.5-py38h516909a_0",
   "psutil-5.7.0-py27h516909a_0",
   "psutil-5.7.0-py27hdf8410d_1",
   "psutil-5.7.0-py36h516909a_0",
   "psutil-5.7.0-py36h8c4c3a4_1",
   "psutil-5.7.0-py36h97a6639_1",
   "psutil-5.7.0-py38h516909a_0",
   "psutil-5.7.3-py36he6145b8_0",
   "psutil-5.8.0-py36h8f6f2f9_1",
   "psutil-5.8.0-py37h5e8e339_1",
   "psutil-5.8.0-py39h3811e60_1"
  ],
  [
   "pytest-3.1.0-py35_0",
   "pytest-3.1.1-py35_0",
   "pytest-3.1.1-py36_0",
   "pytest-3.1.2-py35_0",
   "pytest-3.1.3-py35_0",
   "pytest-3.10.1-py37_1000",
   "pytest-3.2.0-py27_0",
   "pytest-3.2.0-py36_0",
   "pytest-3.2.2-py35_1",
   "pytest-3.2.4-py27_0",
   "pytest-3.2.4-py35_0",
   "pytest-3.3.1-py36_0",
   "pytest-3.3.2-py35_0",
   "pytest-3.3.2-py36_0",
   "pytest-3.4.0-py27_0",
   "pytest-3.4.0-py35_0",
   "pytest-3.5.1-py35_0",
   "pytest-3.6.0-py35_1",
   "pytest-3.6.1-py27_0",
   "pytest-3.6.2-py27_0",
   "pytest-3.6.2-py35_0",
   "pytest-3.7.1-py35_0",
   "pytest-3.7.1-py37_0",
   "pytest-3.7.3-py27_0",
   "pytest-3.8.0-py27_0",
   "pytest-3.8.0-py36_0",
   "pytest-3.8.2-py27_0",
   "pytest-3.8.2-py27_1000",
   "pytest-3.8.2-py37_1000",
   "pytest-3.9.3-py27_1000",
   "pytest-3.9.3-py37_1000",
   "pytest-4.1.0-py37_1000",
   "pytest-4.3.0-py36_0",
   "pytest-4.3.0-py37_0",
   "pytest-4.3.1-py37_0",
   "pytest-4.4.0-py37_0",
   "pytest-4.4.1-py37_0",
   "pytest-4.5.0-py36_0",
   "pytest-4.6.0-py27_0",
   "pytest-4.6.0-py37_0",
   "pytest-4.6.1-py27_0",
   "pytest-4.6.1-py36_0",
   "pytest-4.6.2-py36_0",
   "pytest-4.6.4-py37_0",
   "pytest-4.6.4-py38_0",
   "pytest-5.0.1-py36_1",
   "pytest-5.0.1-py37_1",
   "pytest-5.1.0-py36_0",
   "pytest-5.1.0-py37_0",
   "pytest-5.2.4-py37_0",
   "pytest-5.2.4-py38_0",
   "pytest-5.3.2-py37_0",
   "pytest-5.3.3-py37_0",
   "pytest-5.3.5-py36_0",
   "pytest-5.3.5-py37_0",
   "pytest-5.4.0-py36h9f0ad1d_0",
   "pytest-5.4.1-py37hc8dfbb8_0",
   "pytest-5.4.3-py36h9f0ad1d_0",
   "pytest-5.4.3-py36hc560c46_0",
   "pytest-6.0.0-py37hc8dfbb8_0",
   "pytest-6.0.1-py37hc8dfbb8_0",
   "pytest-6.1.0-py36h9f0ad1d_0",
   "pytest-6.1.0-py38h32f6830_0",
   "pytest-6.1.1-py36h9f0ad1d_1",
   "pytest-6.1.1-py37he5f6b98_1",
   "pytest-6.1.1-py38h32f6830_1",
   "pytest-6.1.1-py39hde42818_1",
   "pytest-6.2.0-py36h5fab9bb_0",
   "pytest-6.2.0-py38h578d9bd_0",
   "pytest-6.2.0-py39hf3d152e_0",
   "pytest-6.2.1-py36h5fab9bb_1",
   "pytest-6.2.1-py36hd000896_1",
   "pytest-6.2.2-py39hf3d152e_0"
  ],
  [
   "setuptools-25.1.4-py34_1",
   "setuptools-25.1.6-py34_0",
   "setuptools-25.2.0-py35_0",
   "setuptools-25.3.0-py35_0",
   "setuptools-25.4.0-py35_0",
   "setuptools-26.0.0-py34_0",
   "setuptools-26.1.1-py34_0",
   "setuptools-26.1.1-py35_0",
   "setuptools-27.0.0-py35_0",
   "setuptools-27.1.0-py34_0",
   "setuptools-27.2.0-py34_0",
   "setuptools-28.4.0-py27_0",
   "setuptools-28.4.0-py35_0",
   "setuptools-28.5.0-py27_0",
   "setuptools-28.5.0-py34_0",
   "setuptools-28.5.0-py35_0",
   "setuptools-28.6.1-py27_0",
   "setuptools-28.7.0-py34_0",
   "setuptools-28.7.1-py34_0",
   "setuptools-28.8.0-py35_0",
   "setuptools-29.0.0-py27_0",
   "setuptools-29.0.1-py27_0",
   "setuptools-31.0.1-py27_0",
   "setuptools-31.0.1-py35_0",
   "setuptools-32.3.0-py35_0",
   "setuptools-32.3.1-py34_0",
   "setuptools-36.2.0-py35_0",
   "setuptools-36.3.0-py35_0",
   "setuptools-36.6.0-py27_0",
   "setuptools-36.7.2-py36_0",
   "setuptools-37.0.0-py35_0",
   "setuptools-38.2.3-py27_0",
   "setuptools-38.2.3-py35_0",
   "setuptools-38.2.4-py35_0",
   "setuptools-38.2.4-py36_0",
   "setuptools-38.4.0-py27_0",
   "setuptools-38.4.0-py36_0",
   "setuptools-38.5.1-py35_0",
   "setuptools-38.5.2-py27_0",
   "setuptools-38.5.2-py35_0",
   "setuptools-38.6.0-py36_0",
   "setuptools-39.0.0-py36_0",
   "setuptools-39.0.1-py27_0",
   "setuptools-40.0.0-py27_1",
   "setuptools-40.0.0-py35_0",
   "setuptools-40.0.0-py36_0",
   "setuptools-40.2.0-py35_0",
   "setuptools-40.2.0-py36_0",
   "setuptools-40.4.0-py27_1000",
   "setuptools-40.4.0-py35_1000",
   "setuptools-40.4.0-py36_1000",
   "setuptools-40.4.0-py37_1000",
   "setuptools-40.5.0-py37_0",
   "setuptools-40.6.0-py37_0",
   "setuptools-40.6.3-py36_0",
   "setuptools-40.7.0-py36_0",
   "setuptools-40.8.0-py37_0",
   "setuptools-40.9.0-py27_0",
   "setuptools-41.0.0-py27_0",
   "setuptools-41.0.1-py36_0",
   "setuptools-41.2.0-py37_0",
   "setuptools-41.5.1-py27_0",
   "setuptools-42.0.1-py37_0",
   "setuptools-44.0.0-py38_0",
   "setuptools-45.0.0-py36_0",
   "setuptools-45.0.0-py36_1",
   "setuptools-45.0.0-py37_0",
   "setuptools-45.2.0-py38_0",
   "setuptools-45.3.0-py36_0",
   "setuptools-45.3.0-py38_0",
   "setuptools-46.0.0-py36hc560c46_2",
   "setuptools-46.0.0-py38h32f6830_2",
   "setuptools-46.1.1-py36h9f0ad1d_0",
   "setuptools-46.1.1-py37hc8dfbb8_0",
   "setuptools-46.1.3-py36h9f0ad1d_0",
   "setuptools-46.2.0-py36hc560c46_0",
   "setuptools-46.2.0-py37hc8dfbb8_0",
   "setuptools-46.3.1-py37hc8dfbb8_0",
   "setuptools-46.3.1-py38h32f6830_0",
   "setuptools-46.4.0-py36h9f0ad1d_0",
   "setuptools-47.0.0-py38h32f6830_0",
   "setuptools-47.1.0-py37hc8dfbb8_0",
   "setuptools-47.1.1-py36hc560c46_0",
   "setuptools-47.2.0-py36h9f0ad1d_0",
   "setuptools-47.3.0-py37hc8dfbb8_0",
   "setuptools-48.0.0-py38h32f6830_0",
   "setuptools-49.1.3-py38h32f6830_0",
   "setuptools-49.2.1-py36h9f0ad1d_0",
   "setuptools-49.3.0-py36h9f0ad1d_0",
   "setuptools-49.3.0-py38h32f6830_0",
   "setuptools-49.3.2-py38h32f6830_0",
   "setuptools-49.4.0-py36h9f0ad1d_0",
   "setuptools-49.4.0-py36hc560c46_0",
   "setuptools-49.4.0-py38h32f6830_0",
   "setuptools-49.6.0-py36h9f0ad1d_0",
   "setuptools-49.6.0-py36h9f0ad1d_1",
   "setuptools-49.6.0-py36ha6c21b1_2",
   "setuptools-49.6.0-py37hc8dfbb8_1",
   "setuptools-49.6.0-py38h32f6830_1"
  ],
  [
   "scikit-learn-0.20.0-py36_blas_openblasha84fab4_201",
   "scikit-learn-0.20.2-py27_blas_openblashebff5e3_1400",
   "scikit-learn-0.20.3-py27_blas_openblashebff5e3_0"
  ],
  [
   "texttable-0.9.1-py_0",
   "texttable-1.1.0-py_0",
   "texttable-1.2.1-py_0",
   "texttable-1.3.0-py_0",
   "texttable-1.3.1-py_0",
   "texttable-1.4.0-py_0",
   "texttable-1.5.0-py_0",
   "texttable-1.6.0-py_0",
   "texttable-1.6.1-py_0",
   "texttable-1.6.2-py_0",
   "texttable-1.6.3-pyh9f0ad1d_0"
  ]
 ]
}