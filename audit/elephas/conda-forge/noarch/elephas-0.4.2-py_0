{
 "bad": [
  "abc.ABCMeta",
  "abc.abstractmethod",
  "copy.deepcopy",
  "ctypes.POINTER",
  "ctypes.c_double",
  "ctypes.c_float",
  "ctypes.cast",
  "docs.autogen.EXCLUDE",
  "docs.autogen.PAGES",
  "docs.autogen.ROOT",
  "docs.autogen.blocks",
  "docs.autogen.class_to_source_link",
  "docs.autogen.classes",
  "docs.autogen.clean_module_name",
  "docs.autogen.cls",
  "docs.autogen.code_snippet",
  "docs.autogen.collect_class_methods",
  "docs.autogen.count_leading_spaces",
  "docs.autogen.docstring",
  "docs.autogen.element",
  "docs.autogen.fpath",
  "docs.autogen.functions",
  "docs.autogen.get_class_signature",
  "docs.autogen.get_function_signature",
  "docs.autogen.index",
  "docs.autogen.methods",
  "docs.autogen.mkdown",
  "docs.autogen.new_fpath",
  "docs.autogen.new_subdir",
  "docs.autogen.page_name",
  "docs.autogen.path",
  "docs.autogen.process_docstring",
  "docs.autogen.process_list_block",
  "docs.autogen.read_file",
  "docs.autogen.read_page_data",
  "docs.autogen.readme",
  "docs.autogen.render_function",
  "docs.autogen.signature",
  "docs.autogen.subblocks",
  "docs.autogen.subdir",
  "docs.autogen.sys",
  "docs.autogen.template",
  "elephas.dl4j.dl4j_import",
  "elephas.hyperparam.HyperParamModel",
  "elephas.hyperparam.HyperasWorker",
  "elephas.java.adapter.retrieve_keras_weights",
  "elephas.java.adapter.to_numpy",
  "elephas.java.java_classes.ArrayList",
  "elephas.java.java_classes.DataSet",
  "elephas.java.java_classes.DataTypeUtil.getDTypeForName",
  "elephas.java.java_classes.DataTypeUtil.getDtypeFromContext",
  "elephas.java.java_classes.ElephasModelImport",
  "elephas.java.java_classes.File",
  "elephas.java.ndarray._from_numpy",
  "elephas.java.ndarray._indarray",
  "elephas.java.ndarray._refs",
  "elephas.java.ndarray._to_numpy",
  "elephas.java.ndarray.broadcast",
  "elephas.java.ndarray.broadcast_like",
  "elephas.java.ndarray.get_context_dtype",
  "elephas.java.ndarray.get_np_dtype",
  "elephas.java.ndarray.native_ops",
  "elephas.java.ndarray.ndarray",
  "elephas.java.ndarray.set_context_dtype",
  "elephas.ml.adapter",
  "elephas.ml.params.HasBatchSize",
  "elephas.ml.params.HasCategoricalLabels",
  "elephas.ml.params.HasEpochs",
  "elephas.ml.params.HasFrequency",
  "elephas.ml.params.HasKerasModelConfig",
  "elephas.ml.params.HasKerasOptimizerConfig",
  "elephas.ml.params.HasLoss",
  "elephas.ml.params.HasMetrics",
  "elephas.ml.params.HasMode",
  "elephas.ml.params.HasNumberOfClasses",
  "elephas.ml.params.HasNumberOfWorkers",
  "elephas.ml.params.HasValidationSplit",
  "elephas.ml.params.HasVerbosity",
  "elephas.ml_model.ElephasEstimator",
  "elephas.ml_model.ElephasTransformer",
  "elephas.ml_model.load_ml_estimator",
  "elephas.ml_model.load_ml_transformer",
  "elephas.mllib.adapter",
  "elephas.parameter.client.BaseParameterClient",
  "elephas.parameter.client.HttpClient",
  "elephas.parameter.server.BaseParameterServer",
  "elephas.parameter.server.HttpServer",
  "elephas.spark_model.SparkMLlibModel",
  "elephas.spark_model.SparkModel",
  "elephas.spark_model.load_spark_model",
  "elephas.utils.functional_utils",
  "elephas.utils.notebook_utils.is_running_in_notebook",
  "elephas.utils.rdd_utils",
  "elephas.utils.rdd_utils.encode_label",
  "elephas.utils.rwlock.RWLock",
  "elephas.utils.serialization",
  "elephas.utils.serialization.dict_to_model",
  "elephas.utils.sockets._receive_all",
  "elephas.utils.sockets.determine_master",
  "elephas.utils.sockets.receive",
  "elephas.utils.sockets.send",
  "elephas.utils.subtract_params",
  "flask.Flask",
  "flask.request.data",
  "get_ipython",
  "h5py.File",
  "hyperas.ensemble.VotingModel",
  "hyperas.optim.base_minimizer",
  "hyperas.optim.get_hyperopt_model_string",
  "hyperopt.Trials",
  "hyperopt.rand.suggest",
  "inspect.getargspec",
  "inspect.getmembers",
  "inspect.getsourcelines",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.isroutine",
  "itertools.tee",
  "jnius.autoclass",
  "json.dumps",
  "json.loads",
  "keras.models.load_model",
  "keras.models.model_from_json",
  "keras.models.model_from_yaml",
  "keras.optimizers.get",
  "keras.optimizers.serialize",
  "keras.utils.generic_utils.slice_arrays",
  "ml.adapter.df_to_simple_rdd",
  "mllib.adapter.from_vector",
  "mllib.adapter.to_vector",
  "mllib.from_matrix",
  "mllib.from_vector",
  "mllib.to_matrix",
  "mllib.to_vector",
  "multiprocessing.Process",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.ceil",
  "numpy.ctypeslib.as_array",
  "numpy.dtype",
  "numpy.expand_dims",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.max",
  "numpy.ndarray",
  "numpy.random.randint",
  "numpy.squeeze",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.makedirs",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.walk",
  "parameter.HttpClient",
  "parameter.HttpServer",
  "parameter.SocketClient",
  "parameter.SocketServer",
  "pydl4j.add_classpath",
  "pydl4j.validate_jars",
  "pyspark.keyword_only",
  "pyspark.ml.Estimator",
  "pyspark.ml.Model",
  "pyspark.ml.param.shared.HasFeaturesCol",
  "pyspark.ml.param.shared.HasLabelCol",
  "pyspark.ml.param.shared.HasOutputCol",
  "pyspark.ml.param.shared.Param",
  "pyspark.ml.param.shared.Params",
  "pyspark.mllib.linalg.Matrices.dense",
  "pyspark.mllib.linalg.Matrix",
  "pyspark.mllib.linalg.Vector",
  "pyspark.mllib.linalg.Vectors.dense",
  "pyspark.mllib.linalg.Vectors.fromML",
  "pyspark.mllib.regression.LabeledPoint",
  "pyspark.sql.SQLContext",
  "pyspark.sql.types.DoubleType",
  "pyspark.sql.types.StringType",
  "pyspark.sql.types.StructField",
  "random.seed",
  "re.search",
  "re.sub",
  "reload",
  "shutil.copy",
  "shutil.rmtree",
  "six.moves.cPickle.dumps",
  "six.moves.cPickle.loads",
  "six.moves.range",
  "six.moves.zip",
  "socket.AF_INET",
  "socket.IPPROTO_TCP",
  "socket.SOCK_STREAM",
  "socket.TCP_NODELAY",
  "socket.gethostbyname",
  "socket.gethostname",
  "socket.socket",
  "spark_model.SparkModel",
  "spark_model.SparkModel.__init__",
  "sys.setdefaultencoding",
  "sys.version",
  "threading.Condition",
  "threading.Lock",
  "threading.Thread",
  "urllib.request.Request",
  "urllib.request.urlopen",
  "utils.lp_to_simple_rdd",
  "utils.model_to_dict",
  "utils.rdd_utils.from_labeled_point",
  "utils.rdd_utils.from_vector",
  "utils.rdd_utils.lp_to_simple_rdd",
  "utils.rdd_utils.to_labeled_point",
  "utils.sockets.determine_master",
  "utils.sockets.receive",
  "utils.sockets.send",
  "utils.subtract_params",
  "worker.AsynchronousSparkWorker",
  "worker.SparkWorker"
 ],
 "deps": {
  "abc": [],
  "copy": [],
  "ctypes": [],
  "docs": [],
  "elephas": [],
  "flask": [],
  "get_ipython": [],
  "h5py": [],
  "hyperas": [],
  "hyperopt": [],
  "inspect": [],
  "itertools": [],
  "jnius": [],
  "json": [],
  "keras": [],
  "ml": [],
  "mllib": [],
  "multiprocessing": [],
  "numpy": [],
  "os": [],
  "parameter": [],
  "pydl4j": [],
  "pyspark": [],
  "random": [],
  "re": [],
  "reload": [],
  "shutil": [],
  "six": [],
  "socket": [],
  "spark_model": [],
  "sys": [],
  "threading": [],
  "urllib": [],
  "utils": [],
  "worker": []
 }
}