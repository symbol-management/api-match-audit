{
 "bad": [
  "ConfigParser.RawConfigParser",
  "_add_check",
  "bisect.bisect_left",
  "cls",
  "dict.fromkeys",
  "fnmatch.fnmatch",
  "functools.lru_cache",
  "inspect.getargspec",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.signature",
  "io.TextIOWrapper",
  "is_string_literal",
  "keyword.iskeyword",
  "keyword.kwlist",
  "optparse.OptionParser",
  "os.curdir",
  "os.getenv",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.walk",
  "pycodestyle.ARITHMETIC_OP",
  "pycodestyle.ASSIGNMENT_EXPRESSION_OP",
  "pycodestyle.BENCHMARK_KEYS",
  "pycodestyle.BLANK_LINES_CONFIG",
  "pycodestyle.BaseReport",
  "pycodestyle.COMPARE_NEGATIVE_REGEX",
  "pycodestyle.COMPARE_SINGLETON_REGEX",
  "pycodestyle.COMPARE_TYPE_REGEX",
  "pycodestyle.Checker",
  "pycodestyle.DEFAULT_EXCLUDE",
  "pycodestyle.DEFAULT_IGNORE",
  "pycodestyle.DOCSTRING_REGEX",
  "pycodestyle.DUNDER_REGEX",
  "pycodestyle.DiffReport",
  "pycodestyle.ERRORCODE_REGEX",
  "pycodestyle.EXTRANEOUS_WHITESPACE_REGEX",
  "pycodestyle.FUNCTION_RETURN_ANNOTATION_OP",
  "pycodestyle.FileReport",
  "pycodestyle.HUNK_REGEX",
  "pycodestyle.INDENT_REGEX",
  "pycodestyle.KEYWORDS",
  "pycodestyle.KEYWORD_REGEX",
  "pycodestyle.LAMBDA_REGEX",
  "pycodestyle.MAX_DOC_LENGTH",
  "pycodestyle.MAX_LINE_LENGTH",
  "pycodestyle.NEWLINE",
  "pycodestyle.OPERATOR_REGEX",
  "pycodestyle.PROJECT_CONFIG",
  "pycodestyle.PyCF_ONLY_AST",
  "pycodestyle.RAISE_COMMA_REGEX",
  "pycodestyle.REPORT_FORMAT",
  "pycodestyle.RERAISE_COMMA_REGEX",
  "pycodestyle.SINGLETONS",
  "pycodestyle.SKIP_COMMENTS",
  "pycodestyle.SKIP_TOKENS",
  "pycodestyle.STARTSWITH_DEF_REGEX",
  "pycodestyle.STARTSWITH_INDENT_STATEMENT_REGEX",
  "pycodestyle.STARTSWITH_TOP_LEVEL_REGEX",
  "pycodestyle.StandardReport",
  "pycodestyle.StyleGuide",
  "pycodestyle.TESTSUITE_PATH",
  "pycodestyle.UNARY_OPERATORS",
  "pycodestyle.USER_CONFIG",
  "pycodestyle.WHITESPACE",
  "pycodestyle.WHITESPACE_AFTER_COMMA_REGEX",
  "pycodestyle.WS_NEEDED_OPERATORS",
  "pycodestyle.WS_OPTIONAL_OPERATORS",
  "pycodestyle._SYMBOLIC_OPS",
  "pycodestyle.__version__",
  "pycodestyle._break_around_binary_operators",
  "pycodestyle._checks",
  "pycodestyle._get_parameters",
  "pycodestyle._is_binary_operator",
  "pycodestyle._is_eol_token",
  "pycodestyle._is_one_liner",
  "pycodestyle._main",
  "pycodestyle._parse_multi_options",
  "pycodestyle.expand_indent",
  "pycodestyle.filename_match",
  "pycodestyle.get_parser",
  "pycodestyle.isidentifier",
  "pycodestyle.mute_string",
  "pycodestyle.noqa",
  "pycodestyle.normalize_paths",
  "pycodestyle.parse_udiff",
  "pycodestyle.process_options",
  "pycodestyle.read_config",
  "pycodestyle.readlines",
  "pycodestyle.register_check",
  "pycodestyle.stdin_get_value",
  "pycodestyle.update_counts",
  "re.I",
  "re.compile",
  "re.match",
  "re.sub",
  "runner",
  "signal.SIGPIPE",
  "signal.signal",
  "str.isidentifier",
  "sys.exc_info",
  "sys.exit",
  "sys.platform",
  "sys.stderr.write",
  "sys.stdin.buffer",
  "sys.stdin.read",
  "sys.stdout.flush",
  "sys.version_info",
  "testsuite.support.run_tests",
  "time.time",
  "tokenize.COMMENT",
  "tokenize.DEDENT",
  "tokenize.ERRORTOKEN",
  "tokenize.INDENT",
  "tokenize.NAME",
  "tokenize.NEWLINE",
  "tokenize.NL",
  "tokenize.OP",
  "tokenize.STRING",
  "tokenize.TokenError",
  "tokenize.detect_encoding",
  "tokenize.generate_tokens",
  "tokenize.tok_name",
  "warnings.warn"
 ],
 "deps": {
  "ConfigParser": [],
  "_add_check": [],
  "bisect": [],
  "cls": [],
  "dict": [],
  "fnmatch": [],
  "functools": [],
  "inspect": [],
  "io": [],
  "is_string_literal": [],
  "keyword": [],
  "optparse": [],
  "os": [],
  "pycodestyle": [],
  "re": [],
  "runner": [],
  "signal": [],
  "str": [],
  "sys": [],
  "testsuite": [],
  "time": [],
  "tokenize": [],
  "warnings": []
 }
}