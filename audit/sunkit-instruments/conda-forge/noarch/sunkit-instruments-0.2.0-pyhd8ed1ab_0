{
 "bad": [
  "__name__.split",
  "_version.version",
  "astropy.coordinates.Latitude",
  "astropy.coordinates.Longitude",
  "astropy.tests.helper.assert_quantity_allclose",
  "astropy.time.Time",
  "astropy.time.Time.strptime",
  "astropy.time.TimeDelta",
  "astropy.units.J",
  "astropy.units.K",
  "astropy.units.MK",
  "astropy.units.Quantity",
  "astropy.units.W",
  "astropy.units.arcsec",
  "astropy.units.cm",
  "astropy.units.day",
  "astropy.units.deg",
  "astropy.units.deg.to",
  "astropy.units.m",
  "astropy.units.one",
  "astropy.units.pix",
  "astropy.units.quantity.Quantity",
  "astropy.units.quantity_input",
  "astropy.units.s",
  "astropy.units.second",
  "astropy.units.watt",
  "astropy.utils.data.get_pkg_data_filename",
  "collections.OrderedDict",
  "copy.deepcopy",
  "csv.DictReader",
  "csv.reader",
  "csv.writer",
  "datetime.datetime",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.today",
  "datetime.datetime.utcfromtimestamp",
  "datetime.timedelta",
  "distutils.version.LooseVersion",
  "fnmatch.translate",
  "glob.glob",
  "itertools.dropwhile",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.ylabel",
  "matplotlib.pyplot.ylim",
  "numpy.all",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.arctan2",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.cross",
  "numpy.deg2rad",
  "numpy.degrees",
  "numpy.delete",
  "numpy.diff",
  "numpy.dot",
  "numpy.empty",
  "numpy.errstate",
  "numpy.float64",
  "numpy.floor",
  "numpy.inner",
  "numpy.insert",
  "numpy.int64",
  "numpy.isnan",
  "numpy.log10",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.max",
  "numpy.mean",
  "numpy.min",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.random.random",
  "numpy.recarray.sort",
  "numpy.searchsorted",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.where",
  "numpy.zeros",
  "os.path.dirname",
  "os.path.join",
  "os.path.sep",
  "os.walk",
  "pandas.DataFrame",
  "pandas.testing.assert_frame_equal",
  "platform.python_version",
  "pytest.approx",
  "pytest.fixture",
  "pytest.mark.array_compare",
  "pytest.mark.remote_data",
  "pytest.raises",
  "pytest.warns",
  "re.compile",
  "re.match",
  "scipy.integrate.cumtrapz",
  "scipy.integrate.trapz",
  "scipy.interpolate.splev",
  "scipy.interpolate.splrep",
  "socket.gaierror",
  "socket.gethostbyname_ex",
  "sqlite3.Row",
  "sqlite3.connect",
  "sunkit_instruments.UnsupportedPythonError",
  "sunkit_instruments.__file__",
  "sunkit_instruments.__minimum_python_version__",
  "sunkit_instruments.data.test.get_test_filepath",
  "sunkit_instruments.data.test.rootdir",
  "sunkit_instruments.fermi.download_weekly_pointing_file",
  "sunkit_instruments.fermi.fermi.get_detector_separation_angles",
  "sunkit_instruments.fermi.fermi.get_scx_scz_at_time",
  "sunkit_instruments.fermi.fermi.get_scx_scz_in_timerange",
  "sunkit_instruments.fermi.fermi.met_to_utc",
  "sunkit_instruments.fermi.fermi.nai_detector_angles",
  "sunkit_instruments.fermi.fermi.nai_detector_radecs",
  "sunkit_instruments.fermi.fermi.rotate_vector",
  "sunkit_instruments.fermi.fermi.separation_angle",
  "sunkit_instruments.fermi.get_detector_sun_angles_for_date",
  "sunkit_instruments.fermi.get_detector_sun_angles_for_time",
  "sunkit_instruments.fermi.met_to_utc",
  "sunkit_instruments.fermi.tests.test_fermi.pointing_file",
  "sunkit_instruments.goes_xrs._calc_rad_loss",
  "sunkit_instruments.goes_xrs._goes_chianti_tem",
  "sunkit_instruments.goes_xrs._goes_get_chianti_em",
  "sunkit_instruments.goes_xrs._goes_get_chianti_temp",
  "sunkit_instruments.goes_xrs._goes_lx",
  "sunkit_instruments.goes_xrs.calculate_radiative_loss_rate",
  "sunkit_instruments.goes_xrs.calculate_temperature_em",
  "sunkit_instruments.goes_xrs.calculate_xray_luminosity",
  "sunkit_instruments.goes_xrs.flareclass_to_flux",
  "sunkit_instruments.goes_xrs.flux_to_flareclass",
  "sunkit_instruments.goes_xrs.get_goes_event_list",
  "sunkit_instruments.goes_xrs.goes_xrs.FILE_EM_COR",
  "sunkit_instruments.goes_xrs.goes_xrs.FILE_EM_PHO",
  "sunkit_instruments.goes_xrs.goes_xrs.FILE_RAD_COR",
  "sunkit_instruments.goes_xrs.goes_xrs.FILE_TEMP_COR",
  "sunkit_instruments.goes_xrs.goes_xrs.FILE_TEMP_PHO",
  "sunkit_instruments.goes_xrs.goes_xrs.GOES_CONVERSION_DICT",
  "sunkit_instruments.goes_xrs.goes_xrs.GOES_REMOTE_PATH",
  "sunkit_instruments.goes_xrs.goes_xrs.HOST",
  "sunkit_instruments.goes_xrs.goes_xrs._assert_chrono_order",
  "sunkit_instruments.goes_xrs.goes_xrs._calc_rad_loss",
  "sunkit_instruments.goes_xrs.goes_xrs._calc_xraylum",
  "sunkit_instruments.goes_xrs.goes_xrs._goes_chianti_tem",
  "sunkit_instruments.goes_xrs.goes_xrs._goes_get_chianti_em",
  "sunkit_instruments.goes_xrs.goes_xrs._goes_get_chianti_temp",
  "sunkit_instruments.goes_xrs.goes_xrs._goes_lx",
  "sunkit_instruments.goes_xrs.goes_xrs.calculate_temperature_em",
  "sunkit_instruments.goes_xrs.tests.test_goes_xrs.DATE",
  "sunkit_instruments.goes_xrs.tests.test_goes_xrs.LONGFLUX",
  "sunkit_instruments.goes_xrs.tests.test_goes_xrs.SHORTFLUX",
  "sunkit_instruments.goes_xrs.tests.test_goes_xrs.goeslc",
  "sunkit_instruments.iris.SJI_to_sequence",
  "sunkit_instruments.lyra._lytaf_event2string",
  "sunkit_instruments.lyra._prep_columns",
  "sunkit_instruments.lyra._remove_lytaf_events",
  "sunkit_instruments.lyra.get_lytaf_event_types",
  "sunkit_instruments.lyra.get_lytaf_events",
  "sunkit_instruments.lyra.lyra.LYTAF_REMOTE_PATH",
  "sunkit_instruments.lyra.lyra._remove_lytaf_events",
  "sunkit_instruments.lyra.lyra.get_lytaf_event_types",
  "sunkit_instruments.lyra.lyra.get_lytaf_events",
  "sunkit_instruments.lyra.remove_lytaf_events_from_timeseries",
  "sunkit_instruments.lyra.split_series_using_lytaf",
  "sunkit_instruments.lyra.tests.test_lyra.CHANNELS",
  "sunkit_instruments.lyra.tests.test_lyra.EMPTY_LYTAF",
  "sunkit_instruments.lyra.tests.test_lyra.LYTAF_TEST",
  "sunkit_instruments.lyra.tests.test_lyra.TEST_DATA_PATH",
  "sunkit_instruments.lyra.tests.test_lyra.TIME",
  "sunkit_instruments.lyra.tests.test_lyra.lyra_ts",
  "sunkit_instruments.rhessi._build_energy_bands",
  "sunkit_instruments.rhessi.backprojection",
  "sunkit_instruments.rhessi.imagecube2map",
  "sunkit_instruments.rhessi.parse_observing_summary_dbase_file",
  "sunkit_instruments.rhessi.parse_observing_summary_hdulist",
  "sunkit_instruments.rhessi.rhessi._backproject",
  "sunkit_instruments.rhessi.rhessi.grid_orientation",
  "sunkit_instruments.rhessi.rhessi.grid_pitch",
  "sunkit_instruments.rhessi.rhessi.uncompress_countrate",
  "sunkit_instruments.rhessi.tests.test_rhessi.hessi_data",
  "sunkit_instruments.rhessi.tests.test_rhessi.raw_bands",
  "sunkit_instruments.rhessi.uncompress_countrate",
  "sunkit_instruments.version.split_version",
  "sunkit_instruments.version.warnings",
  "sunpy.coordinates.sun.angular_radius",
  "sunpy.coordinates.sun.apparent_declination",
  "sunpy.coordinates.sun.apparent_rightascension",
  "sunpy.coordinates.sun.earth_distance",
  "sunpy.data.cache.download",
  "sunpy.data.data_manager.cache.Cache",
  "sunpy.data.data_manager.downloader.ParfiveDownloader",
  "sunpy.data.data_manager.storage.InMemStorage",
  "sunpy.data.manager.get",
  "sunpy.data.manager.require",
  "sunpy.io.fits.fits.open",
  "sunpy.map.Map",
  "sunpy.net.attrs.Time",
  "sunpy.net.attrs.hek.EventType",
  "sunpy.net.attrs.hek.FL.GOESCls",
  "sunpy.net.attrs.hek.OBS.Observatory",
  "sunpy.net.hek.HEKClient",
  "sunpy.sun.constants.au.to",
  "sunpy.time.TimeRange",
  "sunpy.time.is_time_equal",
  "sunpy.time.parse_time",
  "sunpy.time.time._variables_for_parse_time_docstring",
  "sunpy.timeseries.TimeSeries",
  "sunpy.timeseries.XRSTimeSeries",
  "sunpy.util.config.get_and_create_download_dir",
  "sunpy.util.decorators.add_common_docstring",
  "sunpy.util.exceptions.SunpyUserWarning",
  "sys.version_info",
  "tempfile.mkdtemp",
  "textwrap.dedent",
  "types.MethodType",
  "unittest.mock.mock_open",
  "unittest.mock.patch",
  "urllib.error.HTTPError",
  "urllib.parse.urljoin",
  "urllib.request.urlopen",
  "urllib.request.urlretrieve",
  "warnings.warn"
 ],
 "deps": {
  "__name__": [],
  "_version": [],
  "astropy": [],
  "collections": [],
  "copy": [],
  "csv": [],
  "datetime": [],
  "distutils": [],
  "fnmatch": [],
  "glob": [],
  "itertools": [],
  "matplotlib": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "platform": [],
  "pytest": [],
  "re": [],
  "scipy": [],
  "socket": [],
  "sqlite3": [],
  "sunkit_instruments": [],
  "sunpy": [],
  "sys": [],
  "tempfile": [],
  "textwrap": [],
  "types": [],
  "unittest": [],
  "urllib": [],
  "warnings": []
 }
}