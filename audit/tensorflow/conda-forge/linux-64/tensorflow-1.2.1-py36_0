{
 "bad": [
  "AddDecoder",
  "AsInt32",
  "AttrList",
  "Attributes",
  "BaseHTTPServer.BaseHTTPRequestHandler",
  "BaseHTTPServer.HTTPServer",
  "Composition",
  "EncodeNonFiniteOrRaise",
  "Extension",
  "FakeSocket",
  "Format",
  "HTMLParser",
  "HasField",
  "IPython.Shell.IPShellEmbed",
  "IPython.frontend.terminal.embed.InteractiveShellEmbed",
  "IsLoopExit",
  "IsZero",
  "LimitedStream",
  "LocalProxy",
  "MakeBoundParamTest",
  "NodeBuilder",
  "OpenSSL.SSL.Error",
  "OpenSSL.crypto",
  "OpenSSL.crypto.FILETYPE_PEM",
  "OpenSSL.crypto.PKey",
  "OpenSSL.crypto.TYPE_RSA",
  "OpenSSL.crypto.X509",
  "OpenSSL.crypto.dump_certificate",
  "OpenSSL.crypto.dump_privatekey",
  "Operator",
  "Ord",
  "PIL.Image",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "ParseInteger",
  "Queue",
  "Queue.Queue",
  "SKCompat",
  "SkipField",
  "SocketServer.ForkingMixIn",
  "SocketServer.ThreadingMixIn",
  "StringIO",
  "StringIO.StringIO",
  "TFDecorator",
  "TFShouldUseWarningWrapper",
  "TagByteSize",
  "TestLoader",
  "UInt64ByteSize",
  "WhileContext",
  "_CheckDurationValid",
  "_CheckFieldMaskMessage",
  "_ConsumeInt64",
  "_ConsumeInteger",
  "_ConsumeUint64",
  "_ConvertScalarFieldValue",
  "_ConvertToUnicode",
  "_CreateDenseMaskAndBegin",
  "_EventLoggerThread",
  "_ExpiredPerTag",
  "_ExtractInputShapes",
  "_FieldMaskTree",
  "_FilterGrad",
  "_GetAllMessageNames",
  "_GetFileAndLine",
  "_GetIntegerEnumValue",
  "_HashedCategoricalColumn",
  "_IsOpFree",
  "_IsWrapperMessage",
  "_LazyBuilder",
  "_LazyBuilderByColumnsToTensor",
  "_MaskMatrix",
  "_NumericColumn",
  "_ParseAbstractInteger",
  "_Parser",
  "_PrefixWithDot",
  "_Printer",
  "_RegressionHead",
  "_RoundTowardZero",
  "_SetGrad",
  "_SparseIdLookupConfig",
  "_SparseMatMul",
  "_TileForBroadcasting",
  "_Transformer",
  "_UpdateClassDictForParamTestCase",
  "_VarUInt64ByteSizeNoTag",
  "_YMMask",
  "__builtin__",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "__future__.with_statement",
  "__spec__.submodule_search_locations",
  "_add_elements_to_collection",
  "_add_variable_collection",
  "_add_variable_to_collections",
  "_apply_all_reduce",
  "_apply_mask_1d",
  "_assert_fully_defined",
  "_assert_has_shape",
  "_assert_same_graph",
  "_base.COMMENT",
  "_base.DOCTYPE",
  "_base.DOCUMENT",
  "_base.ELEMENT",
  "_base.ENTITY",
  "_base.Filter",
  "_base.Filter.__iter__",
  "_base.Node",
  "_base.Node.reparentChildren",
  "_base.NonRecursiveTreeWalker",
  "_base.TEXT",
  "_base.TreeBuilder",
  "_base.TreeBuilder.getFragment",
  "_base.TreeBuilder.insertText",
  "_base.TreeBuilder.reset",
  "_base.TreeWalker",
  "_base.Trie",
  "_base.UNKNOWN",
  "_broadcast",
  "_build_case",
  "_build_regex",
  "_build_variable_getter",
  "_callback_property",
  "_check_feature_columns",
  "_check_hooks_type",
  "_check_mode_valid",
  "_check_modification",
  "_check_no_sparse_tensor",
  "_classes",
  "_classification_output_alternatives",
  "_collect_leaf_level_columns",
  "_collect_leaf_level_keys",
  "_compat.to_unicode",
  "_compute_weighted_loss",
  "_convert",
  "_convert_to_tensor",
  "_copy_one_through",
  "_copy_some_through",
  "_copy_sparse_tensor",
  "_create_empty_constant",
  "_create_polynomial",
  "_create_ta",
  "_create_zero_arrays",
  "_create_zero_output",
  "_dense_tensor_to_sparse_feature_column",
  "_elbo",
  "_export_output",
  "_feed_fn",
  "_find_latest_checkpoint",
  "_find_variational_and_priors",
  "_flatten_tensor",
  "_flip_front_dims_to_back",
  "_get_arg_names_to_ok_vals",
  "_get_checkpoint_filename",
  "_get_deprecated_positional_arguments",
  "_get_dict",
  "_get_eval_metric_ops",
  "_get_feature_config",
  "_get_file_names",
  "_get_samples",
  "_get_shape_tuple",
  "_get_shared_name",
  "_get_wsgi_string",
  "_gru_block_cell",
  "_has_static_ndims",
  "_importance_sampler_positive_f",
  "_in_alternate_universe",
  "_indicator_labels_streaming_mean",
  "_iter_basic_lines",
  "_join",
  "_linear",
  "_log_variable",
  "_logspace_mean",
  "_lookup",
  "_maybe_attach_assertion",
  "_maybe_mask",
  "_maybe_store",
  "_median",
  "_move_dim_to_end",
  "_new_attr_context",
  "_normalize",
  "_normalize_netloc",
  "_object_list_uid",
  "_overdetermined",
  "_parse_example",
  "_parse_interval",
  "_parse_pairs",
  "_path_encode",
  "_predictions_streaming_mean",
  "_pseudorandom",
  "_push",
  "_pywrap_tensorflow_internal",
  "_pywrap_tensorflow_internal.AppendToFile",
  "_pywrap_tensorflow_internal.Basename",
  "_pywrap_tensorflow_internal.BufferedInputStream_ReadLineAsString",
  "_pywrap_tensorflow_internal.BufferedInputStream_Seek",
  "_pywrap_tensorflow_internal.BufferedInputStream_Tell",
  "_pywrap_tensorflow_internal.BufferedInputStream_swigregister",
  "_pywrap_tensorflow_internal.CheckpointReader_GetTensor",
  "_pywrap_tensorflow_internal.CheckpointReader__HasTensor",
  "_pywrap_tensorflow_internal.CheckpointReader_debug_string",
  "_pywrap_tensorflow_internal.CheckpointReader_get_variable_to_shape_map",
  "_pywrap_tensorflow_internal.CheckpointReader_swigregister",
  "_pywrap_tensorflow_internal.CleanPath",
  "_pywrap_tensorflow_internal.CopyFile",
  "_pywrap_tensorflow_internal.CreateBufferedInputStream",
  "_pywrap_tensorflow_internal.CreateDir",
  "_pywrap_tensorflow_internal.CreateURI",
  "_pywrap_tensorflow_internal.CreateWritableFile",
  "_pywrap_tensorflow_internal.CudaSupportsHalfMatMulAndConv",
  "_pywrap_tensorflow_internal.DeleteFile",
  "_pywrap_tensorflow_internal.DeleteRecursively",
  "_pywrap_tensorflow_internal.DeleteStatSummarizer",
  "_pywrap_tensorflow_internal.Dirname",
  "_pywrap_tensorflow_internal.DoQuantizeTrainingOnGraphDefHelper",
  "_pywrap_tensorflow_internal.EqualGraphDefWrapper",
  "_pywrap_tensorflow_internal.EventsWriter_Close",
  "_pywrap_tensorflow_internal.EventsWriter_FileName",
  "_pywrap_tensorflow_internal.EventsWriter_Flush",
  "_pywrap_tensorflow_internal.EventsWriter_InitWithSuffix",
  "_pywrap_tensorflow_internal.EventsWriter__WriteSerializedEvent",
  "_pywrap_tensorflow_internal.EventsWriter_swigregister",
  "_pywrap_tensorflow_internal.Extension",
  "_pywrap_tensorflow_internal.FileExists",
  "_pywrap_tensorflow_internal.FileStatistics_is_directory_get",
  "_pywrap_tensorflow_internal.FileStatistics_is_directory_set",
  "_pywrap_tensorflow_internal.FileStatistics_length_get",
  "_pywrap_tensorflow_internal.FileStatistics_length_set",
  "_pywrap_tensorflow_internal.FileStatistics_mtime_nsec_get",
  "_pywrap_tensorflow_internal.FileStatistics_mtime_nsec_set",
  "_pywrap_tensorflow_internal.FileStatistics_swigregister",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_CONSUMER",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_CONSUMER_swigconstant",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_PRODUCER",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_PRODUCER_swigconstant",
  "_pywrap_tensorflow_internal.GRAPH_DEF_VERSION_swigconstant",
  "_pywrap_tensorflow_internal.GetChildren",
  "_pywrap_tensorflow_internal.GetMatchingFiles",
  "_pywrap_tensorflow_internal.GetPythonWrappers",
  "_pywrap_tensorflow_internal.InitializePyTrampoline",
  "_pywrap_tensorflow_internal.IsAbsolutePath",
  "_pywrap_tensorflow_internal.IsDirectory",
  "_pywrap_tensorflow_internal.IsGoogleCudaEnabled",
  "_pywrap_tensorflow_internal.ListDevices",
  "_pywrap_tensorflow_internal.NewStatSummarizer",
  "_pywrap_tensorflow_internal.ParseURI",
  "_pywrap_tensorflow_internal.PyRecordReader_Close",
  "_pywrap_tensorflow_internal.PyRecordReader_GetNext",
  "_pywrap_tensorflow_internal.PyRecordReader_New",
  "_pywrap_tensorflow_internal.PyRecordReader_offset",
  "_pywrap_tensorflow_internal.PyRecordReader_record",
  "_pywrap_tensorflow_internal.PyRecordReader_swigregister",
  "_pywrap_tensorflow_internal.PyRecordWriter_Close",
  "_pywrap_tensorflow_internal.PyRecordWriter_New",
  "_pywrap_tensorflow_internal.PyRecordWriter_WriteRecord",
  "_pywrap_tensorflow_internal.PyRecordWriter_swigregister",
  "_pywrap_tensorflow_internal.PyServer_Join",
  "_pywrap_tensorflow_internal.PyServer_New",
  "_pywrap_tensorflow_internal.PyServer_Start",
  "_pywrap_tensorflow_internal.PyServer_Stop",
  "_pywrap_tensorflow_internal.PyTensorListToVector",
  "_pywrap_tensorflow_internal.ReadFileToString",
  "_pywrap_tensorflow_internal.ReadFromStream",
  "_pywrap_tensorflow_internal.RecursivelyCreateDir",
  "_pywrap_tensorflow_internal.RenameFile",
  "_pywrap_tensorflow_internal.RunCppShapeInference",
  "_pywrap_tensorflow_internal.ServerInterface_swigregister",
  "_pywrap_tensorflow_internal.ServerInterface_target",
  "_pywrap_tensorflow_internal.Set_TF_Status_from_Status",
  "_pywrap_tensorflow_internal.Stat",
  "_pywrap_tensorflow_internal.StatSummarizer_GetOutputString",
  "_pywrap_tensorflow_internal.StatSummarizer_PrintStepStats",
  "_pywrap_tensorflow_internal.StatSummarizer_ProcessStepStats",
  "_pywrap_tensorflow_internal.StatSummarizer_ProcessStepStatsStr",
  "_pywrap_tensorflow_internal.StatSummarizer_swigregister",
  "_pywrap_tensorflow_internal.Status_IgnoreError",
  "_pywrap_tensorflow_internal.Status_OK",
  "_pywrap_tensorflow_internal.Status_ToString",
  "_pywrap_tensorflow_internal.Status_Update",
  "_pywrap_tensorflow_internal.Status___eq__",
  "_pywrap_tensorflow_internal.Status___ne__",
  "_pywrap_tensorflow_internal.Status_code",
  "_pywrap_tensorflow_internal.Status_error_message",
  "_pywrap_tensorflow_internal.Status_ok",
  "_pywrap_tensorflow_internal.Status_swigregister",
  "_pywrap_tensorflow_internal.TENSOR_HANDLE_KEY",
  "_pywrap_tensorflow_internal.TENSOR_HANDLE_KEY_swigconstant",
  "_pywrap_tensorflow_internal.TF_ABORTED",
  "_pywrap_tensorflow_internal.TF_ABORTED_swigconstant",
  "_pywrap_tensorflow_internal.TF_ALREADY_EXISTS",
  "_pywrap_tensorflow_internal.TF_ALREADY_EXISTS_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_BOOL",
  "_pywrap_tensorflow_internal.TF_ATTR_BOOL_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_FLOAT",
  "_pywrap_tensorflow_internal.TF_ATTR_FLOAT_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_FUNC",
  "_pywrap_tensorflow_internal.TF_ATTR_FUNC_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_INT",
  "_pywrap_tensorflow_internal.TF_ATTR_INT_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_PLACEHOLDER",
  "_pywrap_tensorflow_internal.TF_ATTR_PLACEHOLDER_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_SHAPE",
  "_pywrap_tensorflow_internal.TF_ATTR_SHAPE_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_STRING",
  "_pywrap_tensorflow_internal.TF_ATTR_STRING_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_TENSOR",
  "_pywrap_tensorflow_internal.TF_ATTR_TENSOR_swigconstant",
  "_pywrap_tensorflow_internal.TF_ATTR_TYPE",
  "_pywrap_tensorflow_internal.TF_ATTR_TYPE_swigconstant",
  "_pywrap_tensorflow_internal.TF_AddControlInput",
  "_pywrap_tensorflow_internal.TF_AddGradients",
  "_pywrap_tensorflow_internal.TF_AddInput",
  "_pywrap_tensorflow_internal.TF_AddInputList",
  "_pywrap_tensorflow_internal.TF_AllocateTensor",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_is_list_get",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_is_list_set",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_list_size_get",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_list_size_set",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_swigregister",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_total_size_get",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_total_size_set",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_type_get",
  "_pywrap_tensorflow_internal.TF_AttrMetadata_type_set",
  "_pywrap_tensorflow_internal.TF_BFLOAT16",
  "_pywrap_tensorflow_internal.TF_BFLOAT16_swigconstant",
  "_pywrap_tensorflow_internal.TF_BOOL",
  "_pywrap_tensorflow_internal.TF_BOOL_swigconstant",
  "_pywrap_tensorflow_internal.TF_Buffer_data_deallocator_get",
  "_pywrap_tensorflow_internal.TF_Buffer_data_deallocator_set",
  "_pywrap_tensorflow_internal.TF_Buffer_data_get",
  "_pywrap_tensorflow_internal.TF_Buffer_data_set",
  "_pywrap_tensorflow_internal.TF_Buffer_length_get",
  "_pywrap_tensorflow_internal.TF_Buffer_length_set",
  "_pywrap_tensorflow_internal.TF_Buffer_swigregister",
  "_pywrap_tensorflow_internal.TF_CANCELLED",
  "_pywrap_tensorflow_internal.TF_CANCELLED_swigconstant",
  "_pywrap_tensorflow_internal.TF_COMPLEX",
  "_pywrap_tensorflow_internal.TF_COMPLEX128",
  "_pywrap_tensorflow_internal.TF_COMPLEX128_swigconstant",
  "_pywrap_tensorflow_internal.TF_COMPLEX64",
  "_pywrap_tensorflow_internal.TF_COMPLEX64_swigconstant",
  "_pywrap_tensorflow_internal.TF_COMPLEX_swigconstant",
  "_pywrap_tensorflow_internal.TF_CloseDeprecatedSession",
  "_pywrap_tensorflow_internal.TF_CloseSession",
  "_pywrap_tensorflow_internal.TF_ColocateWith",
  "_pywrap_tensorflow_internal.TF_DATA_LOSS",
  "_pywrap_tensorflow_internal.TF_DATA_LOSS_swigconstant",
  "_pywrap_tensorflow_internal.TF_DEADLINE_EXCEEDED",
  "_pywrap_tensorflow_internal.TF_DEADLINE_EXCEEDED_swigconstant",
  "_pywrap_tensorflow_internal.TF_DOUBLE",
  "_pywrap_tensorflow_internal.TF_DOUBLE_swigconstant",
  "_pywrap_tensorflow_internal.TF_DataTypeSize",
  "_pywrap_tensorflow_internal.TF_DeleteBuffer",
  "_pywrap_tensorflow_internal.TF_DeleteDeprecatedSession",
  "_pywrap_tensorflow_internal.TF_DeleteGraph",
  "_pywrap_tensorflow_internal.TF_DeleteImportGraphDefOptions",
  "_pywrap_tensorflow_internal.TF_DeleteLibraryHandle",
  "_pywrap_tensorflow_internal.TF_DeletePRunHandle",
  "_pywrap_tensorflow_internal.TF_DeleteSession",
  "_pywrap_tensorflow_internal.TF_DeleteSessionOptions",
  "_pywrap_tensorflow_internal.TF_DeleteStatus",
  "_pywrap_tensorflow_internal.TF_DeleteTensor",
  "_pywrap_tensorflow_internal.TF_Dim",
  "_pywrap_tensorflow_internal.TF_ExtendGraph",
  "_pywrap_tensorflow_internal.TF_FAILED_PRECONDITION",
  "_pywrap_tensorflow_internal.TF_FAILED_PRECONDITION_swigconstant",
  "_pywrap_tensorflow_internal.TF_FLOAT",
  "_pywrap_tensorflow_internal.TF_FLOAT_swigconstant",
  "_pywrap_tensorflow_internal.TF_FinishOperation",
  "_pywrap_tensorflow_internal.TF_GetAllOpList",
  "_pywrap_tensorflow_internal.TF_GetBuffer",
  "_pywrap_tensorflow_internal.TF_GetCode",
  "_pywrap_tensorflow_internal.TF_GetOpList",
  "_pywrap_tensorflow_internal.TF_GraphGetTensorNumDims",
  "_pywrap_tensorflow_internal.TF_GraphGetTensorShape",
  "_pywrap_tensorflow_internal.TF_GraphImportGraphDef",
  "_pywrap_tensorflow_internal.TF_GraphImportGraphDefWithReturnOutputs",
  "_pywrap_tensorflow_internal.TF_GraphNextOperation",
  "_pywrap_tensorflow_internal.TF_GraphOperationByName",
  "_pywrap_tensorflow_internal.TF_GraphSetTensorShape",
  "_pywrap_tensorflow_internal.TF_GraphToGraphDef",
  "_pywrap_tensorflow_internal.TF_HALF",
  "_pywrap_tensorflow_internal.TF_HALF_swigconstant",
  "_pywrap_tensorflow_internal.TF_INT16",
  "_pywrap_tensorflow_internal.TF_INT16_swigconstant",
  "_pywrap_tensorflow_internal.TF_INT32",
  "_pywrap_tensorflow_internal.TF_INT32_swigconstant",
  "_pywrap_tensorflow_internal.TF_INT64",
  "_pywrap_tensorflow_internal.TF_INT64_swigconstant",
  "_pywrap_tensorflow_internal.TF_INT8",
  "_pywrap_tensorflow_internal.TF_INT8_swigconstant",
  "_pywrap_tensorflow_internal.TF_INTERNAL",
  "_pywrap_tensorflow_internal.TF_INTERNAL_swigconstant",
  "_pywrap_tensorflow_internal.TF_INVALID_ARGUMENT",
  "_pywrap_tensorflow_internal.TF_INVALID_ARGUMENT_swigconstant",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddControlDependency",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddInputMapping",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddReturnOutput",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsNumReturnOutputs",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsRemapControlDependency",
  "_pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetPrefix",
  "_pywrap_tensorflow_internal.TF_Input_index_get",
  "_pywrap_tensorflow_internal.TF_Input_index_set",
  "_pywrap_tensorflow_internal.TF_Input_oper_get",
  "_pywrap_tensorflow_internal.TF_Input_oper_set",
  "_pywrap_tensorflow_internal.TF_Input_swigregister",
  "_pywrap_tensorflow_internal.TF_LoadLibrary",
  "_pywrap_tensorflow_internal.TF_LoadSessionFromSavedModel",
  "_pywrap_tensorflow_internal.TF_Message",
  "_pywrap_tensorflow_internal.TF_NOT_FOUND",
  "_pywrap_tensorflow_internal.TF_NOT_FOUND_swigconstant",
  "_pywrap_tensorflow_internal.TF_NewBuffer",
  "_pywrap_tensorflow_internal.TF_NewBufferFromString",
  "_pywrap_tensorflow_internal.TF_NewDeprecatedSession",
  "_pywrap_tensorflow_internal.TF_NewGraph",
  "_pywrap_tensorflow_internal.TF_NewImportGraphDefOptions",
  "_pywrap_tensorflow_internal.TF_NewOperation",
  "_pywrap_tensorflow_internal.TF_NewSession",
  "_pywrap_tensorflow_internal.TF_NewStatus",
  "_pywrap_tensorflow_internal.TF_NewTensor",
  "_pywrap_tensorflow_internal.TF_NumDims",
  "_pywrap_tensorflow_internal.TF_OK",
  "_pywrap_tensorflow_internal.TF_OK_swigconstant",
  "_pywrap_tensorflow_internal.TF_OUT_OF_RANGE",
  "_pywrap_tensorflow_internal.TF_OUT_OF_RANGE_swigconstant",
  "_pywrap_tensorflow_internal.TF_OperationDevice",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrBool",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrBoolList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrFloat",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrFloatList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrInt",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrIntList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrMetadata",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrShape",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrShapeList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrString",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrStringList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrTensor",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrTensorList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrTensorShapeProto",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrTensorShapeProtoList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrType",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrTypeList",
  "_pywrap_tensorflow_internal.TF_OperationGetAttrValueProto",
  "_pywrap_tensorflow_internal.TF_OperationGetControlInputs",
  "_pywrap_tensorflow_internal.TF_OperationGetControlOutputs",
  "_pywrap_tensorflow_internal.TF_OperationInput",
  "_pywrap_tensorflow_internal.TF_OperationInputListLength",
  "_pywrap_tensorflow_internal.TF_OperationInputType",
  "_pywrap_tensorflow_internal.TF_OperationName",
  "_pywrap_tensorflow_internal.TF_OperationNumControlInputs",
  "_pywrap_tensorflow_internal.TF_OperationNumControlOutputs",
  "_pywrap_tensorflow_internal.TF_OperationNumInputs",
  "_pywrap_tensorflow_internal.TF_OperationNumOutputs",
  "_pywrap_tensorflow_internal.TF_OperationOpType",
  "_pywrap_tensorflow_internal.TF_OperationOutputConsumers",
  "_pywrap_tensorflow_internal.TF_OperationOutputListLength",
  "_pywrap_tensorflow_internal.TF_OperationOutputNumConsumers",
  "_pywrap_tensorflow_internal.TF_OperationOutputType",
  "_pywrap_tensorflow_internal.TF_OperationToNodeDef",
  "_pywrap_tensorflow_internal.TF_OptimizeGraph",
  "_pywrap_tensorflow_internal.TF_Output_index_get",
  "_pywrap_tensorflow_internal.TF_Output_index_set",
  "_pywrap_tensorflow_internal.TF_Output_oper_get",
  "_pywrap_tensorflow_internal.TF_Output_oper_set",
  "_pywrap_tensorflow_internal.TF_Output_swigregister",
  "_pywrap_tensorflow_internal.TF_PERMISSION_DENIED",
  "_pywrap_tensorflow_internal.TF_PERMISSION_DENIED_swigconstant",
  "_pywrap_tensorflow_internal.TF_PRun",
  "_pywrap_tensorflow_internal.TF_PRunSetup",
  "_pywrap_tensorflow_internal.TF_QINT16",
  "_pywrap_tensorflow_internal.TF_QINT16_swigconstant",
  "_pywrap_tensorflow_internal.TF_QINT32",
  "_pywrap_tensorflow_internal.TF_QINT32_swigconstant",
  "_pywrap_tensorflow_internal.TF_QINT8",
  "_pywrap_tensorflow_internal.TF_QINT8_swigconstant",
  "_pywrap_tensorflow_internal.TF_QUINT16",
  "_pywrap_tensorflow_internal.TF_QUINT16_swigconstant",
  "_pywrap_tensorflow_internal.TF_QUINT8",
  "_pywrap_tensorflow_internal.TF_QUINT8_swigconstant",
  "_pywrap_tensorflow_internal.TF_RESOURCE",
  "_pywrap_tensorflow_internal.TF_RESOURCE_EXHAUSTED",
  "_pywrap_tensorflow_internal.TF_RESOURCE_EXHAUSTED_swigconstant",
  "_pywrap_tensorflow_internal.TF_RESOURCE_swigconstant",
  "_pywrap_tensorflow_internal.TF_Reset",
  "_pywrap_tensorflow_internal.TF_Reset_wrapper",
  "_pywrap_tensorflow_internal.TF_Run",
  "_pywrap_tensorflow_internal.TF_STRING",
  "_pywrap_tensorflow_internal.TF_STRING_swigconstant",
  "_pywrap_tensorflow_internal.TF_SessionPRun",
  "_pywrap_tensorflow_internal.TF_SessionPRunSetup",
  "_pywrap_tensorflow_internal.TF_SessionRun",
  "_pywrap_tensorflow_internal.TF_SetAttrBool",
  "_pywrap_tensorflow_internal.TF_SetAttrBoolList",
  "_pywrap_tensorflow_internal.TF_SetAttrFloat",
  "_pywrap_tensorflow_internal.TF_SetAttrFloatList",
  "_pywrap_tensorflow_internal.TF_SetAttrInt",
  "_pywrap_tensorflow_internal.TF_SetAttrIntList",
  "_pywrap_tensorflow_internal.TF_SetAttrShape",
  "_pywrap_tensorflow_internal.TF_SetAttrShapeList",
  "_pywrap_tensorflow_internal.TF_SetAttrString",
  "_pywrap_tensorflow_internal.TF_SetAttrStringList",
  "_pywrap_tensorflow_internal.TF_SetAttrTensor",
  "_pywrap_tensorflow_internal.TF_SetAttrTensorList",
  "_pywrap_tensorflow_internal.TF_SetAttrTensorShapeProto",
  "_pywrap_tensorflow_internal.TF_SetAttrTensorShapeProtoList",
  "_pywrap_tensorflow_internal.TF_SetAttrType",
  "_pywrap_tensorflow_internal.TF_SetAttrTypeList",
  "_pywrap_tensorflow_internal.TF_SetAttrValueProto",
  "_pywrap_tensorflow_internal.TF_SetDevice",
  "_pywrap_tensorflow_internal.TF_SetStatus",
  "_pywrap_tensorflow_internal.TF_StringDecode",
  "_pywrap_tensorflow_internal.TF_StringEncode",
  "_pywrap_tensorflow_internal.TF_StringEncodedSize",
  "_pywrap_tensorflow_internal.TF_TensorByteSize",
  "_pywrap_tensorflow_internal.TF_TensorData",
  "_pywrap_tensorflow_internal.TF_TensorMaybeMove",
  "_pywrap_tensorflow_internal.TF_TensorType",
  "_pywrap_tensorflow_internal.TF_UINT16",
  "_pywrap_tensorflow_internal.TF_UINT16_swigconstant",
  "_pywrap_tensorflow_internal.TF_UINT8",
  "_pywrap_tensorflow_internal.TF_UINT8_swigconstant",
  "_pywrap_tensorflow_internal.TF_UNAUTHENTICATED",
  "_pywrap_tensorflow_internal.TF_UNAUTHENTICATED_swigconstant",
  "_pywrap_tensorflow_internal.TF_UNAVAILABLE",
  "_pywrap_tensorflow_internal.TF_UNAVAILABLE_swigconstant",
  "_pywrap_tensorflow_internal.TF_UNIMPLEMENTED",
  "_pywrap_tensorflow_internal.TF_UNIMPLEMENTED_swigconstant",
  "_pywrap_tensorflow_internal.TF_UNKNOWN",
  "_pywrap_tensorflow_internal.TF_UNKNOWN_swigconstant",
  "_pywrap_tensorflow_internal.TF_Version",
  "_pywrap_tensorflow_internal.TfCheckOpHelper",
  "_pywrap_tensorflow_internal.TfCheckOpHelperOutOfLine",
  "_pywrap_tensorflow_internal.TransformGraphWithStringInputs",
  "_pywrap_tensorflow_internal.TryFindKernelClass",
  "_pywrap_tensorflow_internal.WritableFile_Close",
  "_pywrap_tensorflow_internal.WritableFile_Flush",
  "_pywrap_tensorflow_internal.WritableFile_swigregister",
  "_pywrap_tensorflow_internal.WriteStringToFile",
  "_pywrap_tensorflow_internal._TF_NewSessionOptions",
  "_pywrap_tensorflow_internal._TF_SetConfig",
  "_pywrap_tensorflow_internal._TF_SetTarget",
  "_pywrap_tensorflow_internal.__compiler_version__",
  "_pywrap_tensorflow_internal.__compiler_version___swigconstant",
  "_pywrap_tensorflow_internal.__git_version__",
  "_pywrap_tensorflow_internal.__git_version___swigconstant",
  "_pywrap_tensorflow_internal.__lshift__",
  "_pywrap_tensorflow_internal.__version__",
  "_pywrap_tensorflow_internal.__version___swigconstant",
  "_pywrap_tensorflow_internal.delete_BufferedInputStream",
  "_pywrap_tensorflow_internal.delete_CheckpointReader",
  "_pywrap_tensorflow_internal.delete_EventsWriter",
  "_pywrap_tensorflow_internal.delete_FileStatistics",
  "_pywrap_tensorflow_internal.delete_PyRecordReader",
  "_pywrap_tensorflow_internal.delete_PyRecordWriter",
  "_pywrap_tensorflow_internal.delete_ServerInterface",
  "_pywrap_tensorflow_internal.delete_StatSummarizer",
  "_pywrap_tensorflow_internal.delete_Status",
  "_pywrap_tensorflow_internal.delete_TF_AttrMetadata",
  "_pywrap_tensorflow_internal.delete_TF_Buffer",
  "_pywrap_tensorflow_internal.delete_TF_Input",
  "_pywrap_tensorflow_internal.delete_TF_Output",
  "_pywrap_tensorflow_internal.delete_WritableFile",
  "_pywrap_tensorflow_print_model_analysis_lib",
  "_pywrap_tensorflow_print_model_analysis_lib.PrintModelAnalysis",
  "_read",
  "_read_keyed_batch_examples_helper",
  "_ready",
  "_reduce",
  "_reloader.run_with_reloader",
  "_remove_squeezable_dimensions",
  "_render",
  "_render_inner",
  "_renorm_variable",
  "_reverse",
  "_run_metrics",
  "_safe_embedding_lookup_sparse",
  "_same",
  "_same_value",
  "_sample_mean",
  "_scores",
  "_set_property",
  "_shape",
  "_shape_is_compatible_0dim",
  "_should_dropout",
  "_smart_select",
  "_sort_by_name",
  "_sparse_cross_internal",
  "_sparse_meta_data",
  "_sparse_op",
  "_split",
  "_streaming_auc",
  "_summary_key",
  "_swap_axis",
  "_t",
  "_tensor_gather_helper",
  "_tensordot_axes",
  "_tensordot_reshape",
  "_thread.get_ident",
  "_tile",
  "_to_labels_tensor",
  "_to_list",
  "_training_examples_and_variables",
  "_transpose_if_necessary",
  "_true_getter",
  "_type",
  "_underdetermined",
  "_unflatten_sparse_tensor",
  "_update_renorm_variable",
  "_url_decode_impl",
  "_url_unquote_legacy",
  "_valid",
  "_validate",
  "_verify_loss_fn_args",
  "_verify_static_batch_size_equality",
  "_walk",
  "_wrap_custom_loss_fn",
  "_write",
  "abc",
  "abc.ABCMeta",
  "abc.ABCMeta.__new__",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "add",
  "add_qname",
  "adjust",
  "advantage_fn",
  "allowed_attributes",
  "app",
  "app_factory",
  "append",
  "append_fn",
  "append_metric",
  "apply_callbacks",
  "apply_transform",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.ArgumentTypeError",
  "argparse.RawTextHelpFormatter",
  "argparse.SUPPRESS",
  "as_dimension",
  "as_dtype",
  "as_shape",
  "assert_less",
  "assert_less_equal",
  "assert_type",
  "assign_label",
  "ast",
  "ast.literal_eval",
  "atexit",
  "atexit.register",
  "attention",
  "attn_bw_cell",
  "attn_fw_cell",
  "attn_rnn_cell",
  "auth_property",
  "axis_size",
  "backports.weakref",
  "base64",
  "base64.b64decode",
  "base64.b64encode",
  "baseline_fn",
  "batch_to_space_nd",
  "batcher",
  "benchmark",
  "bias_variable",
  "bisect",
  "bisect.bisect_left",
  "bleach",
  "bleach.clean",
  "blockparser.BlockParser",
  "blockprocessors.BlockProcessor",
  "blockprocessors.ListIndentProcessor",
  "blockprocessors.OListProcessor",
  "blockprocessors.UListProcessor",
  "blockprocessors.build_block_parser",
  "buffer_or_memoryview",
  "build_etree_ul",
  "build_map_of_graph",
  "builtins",
  "bw_cell",
  "bytes.__new__",
  "bzzzzzzz",
  "c",
  "cElementTree",
  "cPickle",
  "cPickle.dumps",
  "cPickle.loads",
  "cStringIO.StringIO",
  "call_cell",
  "call_cpp_shape_fn",
  "callback",
  "callbacks",
  "callbacks.nofollow",
  "calls_update",
  "canonical",
  "cat",
  "categorical_vocabulary.CategoricalVocabulary",
  "cb",
  "cell",
  "cell.output_size",
  "cell.state_size",
  "cell.zero_state",
  "cell_fn",
  "cg_state",
  "cgls_state",
  "charade",
  "charade.universaldetector.UniversalDetector",
  "chardet",
  "chardet.universaldetector.UniversalDetector",
  "check_dim_list",
  "check_feature_columns",
  "check_y_dtype",
  "cinput_op_match",
  "close_func",
  "cls",
  "cls.ByteSize",
  "cls.Clear",
  "cls.ClearExtension",
  "cls.ClearField",
  "cls.DiscardUnknownFields",
  "cls.FindInitializationErrors",
  "cls.FromString",
  "cls.HasExtension",
  "cls.HasField",
  "cls.IsInitialized",
  "cls.ListFields",
  "cls.MergeFrom",
  "cls.MergeFromString",
  "cls.SerializePartialToString",
  "cls.SerializeToString",
  "cls.SetInParent",
  "cls.WhichOneof",
  "cls._InternalParse",
  "cls._InternalSerialize",
  "cls._Modified",
  "cls._SetListener",
  "cls._UpdateOneofState",
  "cls.__eq__",
  "cls.__name__",
  "cls.__reduce__",
  "cls.__repr__",
  "cls.__str__",
  "cls.__unicode__",
  "cls._decoders_by_tag",
  "cmp",
  "code",
  "code.interact",
  "codecName",
  "codecs",
  "codecs.BOM_UTF16_BE",
  "codecs.BOM_UTF16_LE",
  "codecs.BOM_UTF32_BE",
  "codecs.BOM_UTF32_LE",
  "codecs.BOM_UTF8",
  "codecs.decode",
  "codecs.encode",
  "codecs.getreader",
  "codecs.getwriter",
  "codecs.lookup",
  "codecs.open",
  "codecs.register_error",
  "codecs.xmlcharrefreplace_errors",
  "codehilite.CodeHilite",
  "codehilite.CodeHiliteExtension",
  "codehilite.parse_hl_lines",
  "codepoint2name",
  "collections",
  "collections.Callable",
  "collections.Container",
  "collections.Hashable",
  "collections.Iterable",
  "collections.Mapping",
  "collections.Mapping.register",
  "collections.MutableMapping",
  "collections.MutableMapping.register",
  "collections.MutableSequence.register",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.Sized",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "compile_ops",
  "compressed_steps",
  "computation",
  "compute_auc",
  "compute_mean",
  "compute_mean_accuracy",
  "compute_mean_iou",
  "compute_precision",
  "compute_recall",
  "compute_sensitivity_at_specificity",
  "compute_specificity_at_sensitivity",
  "compute_value_size",
  "constants.DataLossWarning",
  "constants.E",
  "constants.EOF",
  "constants.ReparseException",
  "constants.adjustForeignAttributes",
  "constants.adjustForeignAttributes.values",
  "constants.asciiLetters",
  "constants.asciiUpper2Lower",
  "constants.asciiUppercase",
  "constants.booleanAttributes.get",
  "constants.cdataElements",
  "constants.digits",
  "constants.encodings.get",
  "constants.entities",
  "constants.entities.items",
  "constants.headingElements",
  "constants.hexDigits",
  "constants.htmlIntegrationPointElements",
  "constants.mathmlTextIntegrationPointElements",
  "constants.namespaces",
  "constants.prefixes",
  "constants.rcdataElements",
  "constants.replacementCharacters",
  "constants.scopingElements",
  "constants.spaceCharacters",
  "constants.specialElements",
  "constants.tableInsertModeElements",
  "constants.tagTokenTypes",
  "constants.tokenTypes",
  "constants.tokenTypes.items",
  "constants.tokenTypes.keys",
  "constants.unadjustForeignAttributes",
  "constants.voidElements",
  "constants.xmlEntities",
  "consumer_op_match",
  "contextlib",
  "contextlib.contextmanager",
  "control_trigger",
  "conv2d",
  "conv_fn",
  "conversion_func",
  "convert",
  "convert_custom_objects",
  "convert_image_dtype",
  "convert_to_batch_shape",
  "cookielib.CookieJar",
  "copier",
  "copier.transform_external_input_handler",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "copy_reg",
  "copy_reg.dispatch_table.clear",
  "copy_reg.dispatch_table.copy",
  "copy_reg.dispatch_table.update",
  "copyreg",
  "core_metadata",
  "csv",
  "csv.DictReader",
  "csv.DictWriter",
  "csv.excel",
  "csv.reader",
  "csv.writer",
  "ctypes",
  "ctypes.RTLD_GLOBAL",
  "ctypes.windll.kernel32.CloseHandle",
  "ctypes.windll.kernel32.MoveFileExW",
  "ctypes.windll.kernel32.MoveFileTransactedW",
  "ctypes.windll.ktmw32.CommitTransaction",
  "ctypes.windll.ktmw32.CreateTransaction",
  "curses",
  "curses.A_BLINK",
  "curses.A_BOLD",
  "curses.A_NORMAL",
  "curses.A_UNDERLINE",
  "curses.BUTTON1_RELEASED",
  "curses.COLOR_BLACK",
  "curses.COLOR_BLUE",
  "curses.COLOR_CYAN",
  "curses.COLOR_GREEN",
  "curses.COLOR_MAGENTA",
  "curses.COLOR_RED",
  "curses.COLOR_WHITE",
  "curses.COLOR_YELLOW",
  "curses.KEY_BACKSPACE",
  "curses.KEY_DC",
  "curses.KEY_DOWN",
  "curses.KEY_END",
  "curses.KEY_HOME",
  "curses.KEY_MOUSE",
  "curses.KEY_NPAGE",
  "curses.KEY_PPAGE",
  "curses.KEY_RESIZE",
  "curses.KEY_UP",
  "curses.cbreak",
  "curses.color_pair",
  "curses.echo",
  "curses.endwin",
  "curses.error",
  "curses.getmouse",
  "curses.init_pair",
  "curses.initscr",
  "curses.mousemask",
  "curses.newpad",
  "curses.newwin",
  "curses.nocbreak",
  "curses.noecho",
  "curses.start_color",
  "curses.textpad",
  "curses.textpad.Textbox",
  "curses.use_default_colors",
  "custom_getter",
  "dask.dataframe",
  "dask.dataframe.DataFrame",
  "dask.dataframe.Series",
  "dask_io.HAS_DASK",
  "dask_io.extract_dask_data",
  "dask_io.extract_dask_labels",
  "data_feeder_cls",
  "data_generator",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.datetime.utcfromtimestamp",
  "datetime.datetime.utcnow",
  "datetime.time",
  "datetime.timedelta",
  "datrie.Trie",
  "decimal.Decimal",
  "decode",
  "decode_value",
  "decoder",
  "delays",
  "delegate_get_names",
  "delete_filter",
  "delta",
  "depth",
  "detab",
  "device_function",
  "dict.__getitem__",
  "dict.__repr__",
  "dict.__setitem__",
  "dict.clear",
  "dict.get",
  "dict.pop",
  "dict.popitem",
  "dict.setdefault",
  "dict.update",
  "difflib",
  "difflib.SequenceMatcher",
  "difflib.unified_diff",
  "div",
  "do_match",
  "dom.getDomModule",
  "dump_header",
  "elementtree.ElementTree",
  "elementwise_function",
  "email.Utils.parsedate_tz",
  "email.utils.parsedate_tz",
  "encode_message",
  "encode_value",
  "encoding.force_unicode",
  "enqueue_callable",
  "enqueue_fn",
  "enter",
  "enter.graph.prevent_feeding",
  "enter.name",
  "enter.op",
  "equal_",
  "errno",
  "escape",
  "etree.getETreeModule",
  "etree.tag_regexp.match",
  "etree_lxml.TreeBuilder",
  "exc_type",
  "execute",
  "exhaust",
  "expand",
  "expand_dims",
  "experiment_fn",
  "extensions.Extension",
  "external.org_html5lib.html5lib.treebuilders.__init__.treeBuilderCache",
  "external.org_html5lib.html5lib.treewalkers.__init__.concatenateCharacterTokens",
  "external.org_html5lib.html5lib.treewalkers.__init__.treeWalkerCache",
  "external.org_mozilla_bleach.bleach.__init__.ALLOWED_ATTRIBUTES",
  "external.org_mozilla_bleach.bleach.__init__.ALLOWED_PROTOCOLS",
  "external.org_mozilla_bleach.bleach.__init__.ALLOWED_STYLES",
  "external.org_mozilla_bleach.bleach.__init__.ALLOWED_TAGS",
  "external.org_mozilla_bleach.bleach.__init__.DEFAULT_CALLBACKS",
  "external.org_mozilla_bleach.bleach.__init__.ETREE_TAG",
  "external.org_mozilla_bleach.bleach.__init__.PROTOCOLS",
  "external.org_mozilla_bleach.bleach.__init__.TLDS",
  "external.org_mozilla_bleach.bleach.__init__._render",
  "external.org_mozilla_bleach.bleach.__init__._serialize",
  "external.org_mozilla_bleach.bleach.__init__.email_re",
  "external.org_mozilla_bleach.bleach.__init__.log",
  "external.org_mozilla_bleach.bleach.__init__.proto_re",
  "external.org_mozilla_bleach.bleach.__init__.punct_re",
  "external.org_mozilla_bleach.bleach.__init__.url_re",
  "external.org_pocoo_werkzeug.werkzeug.__init__.__version__",
  "external.org_pocoo_werkzeug.werkzeug.__init__.all_by_module",
  "external.org_pocoo_werkzeug.werkzeug.__init__.attribute_modules",
  "external.org_pocoo_werkzeug.werkzeug.__init__.module",
  "external.org_pocoo_werkzeug.werkzeug.__init__.object_origins",
  "external.org_pythonhosted_markdown.markdown.__init__.Markdown",
  "external.org_pythonhosted_markdown.markdown.__init__.logger",
  "extract",
  "extract_batch_shape",
  "f",
  "f.__globals__",
  "factory",
  "fake",
  "fake_quant_with_min_max_args_gradient",
  "fake_quant_with_min_max_vars_gradient",
  "fake_quant_with_min_max_vars_per_channel_gradient",
  "feed_dict",
  "feed_fn",
  "fetch_fn",
  "fft_fn",
  "fft_fn.__doc__",
  "field_decoder",
  "field_setter",
  "file_loader",
  "filesystem.get_filesystem_encoding",
  "fill",
  "filled_embedding_rnn_decoder",
  "filter.fromXmlName",
  "filter.get_shape",
  "filters.alphabeticalattributes.Filter",
  "filters.inject_meta_charset.Filter",
  "filters.optionaltags.Filter",
  "filters.sanitizer.Filter",
  "filters.whitespace.Filter",
  "finder",
  "flip_matrix_to_vector",
  "flip_vector_to_matrix",
  "fn",
  "fn.__doc__",
  "fn1",
  "fn2",
  "fnmatch",
  "fnmatch.filter",
  "form_property",
  "format.lower",
  "from_proto",
  "full_steps",
  "func",
  "func.__doc__",
  "func.__module__",
  "function",
  "function.__name__",
  "function.__name__.startswith",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.update_wrapper",
  "functools.wraps",
  "fw_cell",
  "gather",
  "gc",
  "gc.collect",
  "genshi.core.Attrs",
  "genshi.core.COMMENT",
  "genshi.core.DOCTYPE",
  "genshi.core.END",
  "genshi.core.END_CDATA",
  "genshi.core.END_NS",
  "genshi.core.PI",
  "genshi.core.QName",
  "genshi.core.START",
  "genshi.core.START_CDATA",
  "genshi.core.START_NS",
  "genshi.core.TEXT",
  "genshi.core.XML_NAMESPACE",
  "genshistream.TreeWalker",
  "getMetaclass",
  "get_current_step",
  "get_data_files",
  "get_default_graph",
  "get_feed_fn",
  "get_input",
  "get_out_of_order",
  "get_placeholder",
  "get_signature_def_map",
  "getopt",
  "getopt.GetoptError",
  "getopt.gnu_getopt",
  "getter",
  "glob",
  "glob.glob",
  "google.protobuf._use_fast_cpp_protos",
  "google.protobuf.any_pb2",
  "google.protobuf.any_pb2.Any",
  "google.protobuf.any_pb2.DESCRIPTOR",
  "google.protobuf.any_pb2._ANY",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_BOOL",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_DOUBLE",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_ENUM",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_FLOAT",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT32",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT64",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_STRING",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT32",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT64",
  "google.protobuf.descriptor.FieldDescriptor.LABEL_OPTIONAL",
  "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
  "google.protobuf.descriptor.FieldDescriptor.ProtoTypeToCppProtoType",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_BOOL",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_DOUBLE",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_ENUM",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FLOAT",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_INT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_INT64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_STRING",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT64",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor.MethodDescriptor",
  "google.protobuf.descriptor.OneofDescriptor",
  "google.protobuf.descriptor.ServiceDescriptor",
  "google.protobuf.descriptor._ParseOptions",
  "google.protobuf.descriptor._USE_C_DESCRIPTORS",
  "google.protobuf.descriptor._message.DescriptorPool",
  "google.protobuf.descriptor._message.default_pool",
  "google.protobuf.descriptor.enum_types",
  "google.protobuf.descriptor.extensions_by_name",
  "google.protobuf.descriptor.fields",
  "google.protobuf.descriptor.file",
  "google.protobuf.descriptor.file.pool",
  "google.protobuf.descriptor.full_name",
  "google.protobuf.descriptor.is_extendable",
  "google.protobuf.descriptor_database",
  "google.protobuf.descriptor_pb2",
  "google.protobuf.descriptor_pb2.DESCRIPTOR",
  "google.protobuf.descriptor_pb2.FieldDescriptorProto.LABEL_OPTIONAL",
  "google.protobuf.descriptor_pb2.FieldOptions",
  "google.protobuf.descriptor_pb2.FileDescriptorProto",
  "google.protobuf.descriptor_pb2.FileDescriptorProto.FromString",
  "google.protobuf.descriptor_pb2.FileOptions",
  "google.protobuf.descriptor_pb2.MessageOptions",
  "google.protobuf.descriptor_pb2._FILEDESCRIPTORPROTO",
  "google.protobuf.descriptor_pool",
  "google.protobuf.descriptor_pool.Default",
  "google.protobuf.internal._api_implementation",
  "google.protobuf.internal._api_implementation.api_version",
  "google.protobuf.internal.api_implementation",
  "google.protobuf.internal.api_implementation.Type",
  "google.protobuf.internal.containers",
  "google.protobuf.internal.containers.MessageMap",
  "google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
  "google.protobuf.internal.containers.RepeatedScalarFieldContainer",
  "google.protobuf.internal.containers.ScalarMap",
  "google.protobuf.internal.decoder",
  "google.protobuf.internal.decoder.BoolDecoder",
  "google.protobuf.internal.decoder.BytesDecoder",
  "google.protobuf.internal.decoder.DoubleDecoder",
  "google.protobuf.internal.decoder.EnumDecoder",
  "google.protobuf.internal.decoder.Fixed32Decoder",
  "google.protobuf.internal.decoder.Fixed64Decoder",
  "google.protobuf.internal.decoder.FloatDecoder",
  "google.protobuf.internal.decoder.GroupDecoder",
  "google.protobuf.internal.decoder.Int32Decoder",
  "google.protobuf.internal.decoder.Int64Decoder",
  "google.protobuf.internal.decoder.MapDecoder",
  "google.protobuf.internal.decoder.MessageDecoder",
  "google.protobuf.internal.decoder.ReadTag",
  "google.protobuf.internal.decoder.SFixed32Decoder",
  "google.protobuf.internal.decoder.SFixed64Decoder",
  "google.protobuf.internal.decoder.SInt32Decoder",
  "google.protobuf.internal.decoder.SInt64Decoder",
  "google.protobuf.internal.decoder.SkipField",
  "google.protobuf.internal.decoder.StringDecoder",
  "google.protobuf.internal.decoder.UInt32Decoder",
  "google.protobuf.internal.decoder.UInt64Decoder",
  "google.protobuf.internal.encoder",
  "google.protobuf.internal.encoder.BoolEncoder",
  "google.protobuf.internal.encoder.BoolSizer",
  "google.protobuf.internal.encoder.BytesEncoder",
  "google.protobuf.internal.encoder.BytesSizer",
  "google.protobuf.internal.encoder.DoubleEncoder",
  "google.protobuf.internal.encoder.DoubleSizer",
  "google.protobuf.internal.encoder.EnumEncoder",
  "google.protobuf.internal.encoder.EnumSizer",
  "google.protobuf.internal.encoder.Fixed32Encoder",
  "google.protobuf.internal.encoder.Fixed32Sizer",
  "google.protobuf.internal.encoder.Fixed64Encoder",
  "google.protobuf.internal.encoder.Fixed64Sizer",
  "google.protobuf.internal.encoder.FloatEncoder",
  "google.protobuf.internal.encoder.FloatSizer",
  "google.protobuf.internal.encoder.GroupEncoder",
  "google.protobuf.internal.encoder.GroupSizer",
  "google.protobuf.internal.encoder.Int32Encoder",
  "google.protobuf.internal.encoder.Int32Sizer",
  "google.protobuf.internal.encoder.Int64Encoder",
  "google.protobuf.internal.encoder.Int64Sizer",
  "google.protobuf.internal.encoder.MapEncoder",
  "google.protobuf.internal.encoder.MapSizer",
  "google.protobuf.internal.encoder.MessageEncoder",
  "google.protobuf.internal.encoder.MessageSetItemEncoder",
  "google.protobuf.internal.encoder.MessageSetItemSizer",
  "google.protobuf.internal.encoder.MessageSizer",
  "google.protobuf.internal.encoder.SFixed32Encoder",
  "google.protobuf.internal.encoder.SFixed32Sizer",
  "google.protobuf.internal.encoder.SFixed64Encoder",
  "google.protobuf.internal.encoder.SFixed64Sizer",
  "google.protobuf.internal.encoder.SInt32Encoder",
  "google.protobuf.internal.encoder.SInt32Sizer",
  "google.protobuf.internal.encoder.SInt64Encoder",
  "google.protobuf.internal.encoder.SInt64Sizer",
  "google.protobuf.internal.encoder.StringEncoder",
  "google.protobuf.internal.encoder.StringSizer",
  "google.protobuf.internal.encoder.TagBytes",
  "google.protobuf.internal.encoder.UInt32Encoder",
  "google.protobuf.internal.encoder.UInt32Sizer",
  "google.protobuf.internal.encoder.UInt64Encoder",
  "google.protobuf.internal.encoder.UInt64Sizer",
  "google.protobuf.internal.enum_type_wrapper",
  "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
  "google.protobuf.internal.message_listener",
  "google.protobuf.internal.message_listener.NullMessageListener",
  "google.protobuf.internal.python_message",
  "google.protobuf.internal.python_message.GeneratedProtocolMessageType",
  "google.protobuf.internal.type_checkers",
  "google.protobuf.internal.type_checkers.FIELD_TYPE_TO_WIRE_TYPE",
  "google.protobuf.internal.type_checkers.GetTypeChecker",
  "google.protobuf.internal.type_checkers.Int32ValueChecker",
  "google.protobuf.internal.type_checkers.Int64ValueChecker",
  "google.protobuf.internal.type_checkers.SupportsOpenEnums",
  "google.protobuf.internal.type_checkers.TYPE_TO_BYTE_SIZE_FN",
  "google.protobuf.internal.type_checkers.TYPE_TO_DECODER",
  "google.protobuf.internal.type_checkers.TYPE_TO_ENCODER",
  "google.protobuf.internal.type_checkers.TYPE_TO_SIZER",
  "google.protobuf.internal.type_checkers.Uint32ValueChecker",
  "google.protobuf.internal.type_checkers.Uint64ValueChecker",
  "google.protobuf.internal.well_known_types",
  "google.protobuf.internal.well_known_types.WKTBASES",
  "google.protobuf.internal.wire_format",
  "google.protobuf.internal.wire_format.BoolByteSize",
  "google.protobuf.internal.wire_format.BytesByteSize",
  "google.protobuf.internal.wire_format.DoubleByteSize",
  "google.protobuf.internal.wire_format.EnumByteSize",
  "google.protobuf.internal.wire_format.Fixed32ByteSize",
  "google.protobuf.internal.wire_format.Fixed64ByteSize",
  "google.protobuf.internal.wire_format.FloatByteSize",
  "google.protobuf.internal.wire_format.GroupByteSize",
  "google.protobuf.internal.wire_format.Int32ByteSize",
  "google.protobuf.internal.wire_format.Int64ByteSize",
  "google.protobuf.internal.wire_format.IsTypePackable",
  "google.protobuf.internal.wire_format.MessageByteSize",
  "google.protobuf.internal.wire_format.PackTag",
  "google.protobuf.internal.wire_format.SFixed32ByteSize",
  "google.protobuf.internal.wire_format.SFixed64ByteSize",
  "google.protobuf.internal.wire_format.SInt32ByteSize",
  "google.protobuf.internal.wire_format.SInt64ByteSize",
  "google.protobuf.internal.wire_format.StringByteSize",
  "google.protobuf.internal.wire_format.TAG_TYPE_MASK",
  "google.protobuf.internal.wire_format.UInt32ByteSize",
  "google.protobuf.internal.wire_format.UInt64ByteSize",
  "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
  "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
  "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
  "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
  "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
  "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
  "google.protobuf.internal.wire_format.ZigZagDecode",
  "google.protobuf.internal.wire_format.ZigZagEncode",
  "google.protobuf.json_format",
  "google.protobuf.json_format.MessageToJson",
  "google.protobuf.json_format.Parse",
  "google.protobuf.message",
  "google.protobuf.message.ByteSize",
  "google.protobuf.message.DESCRIPTOR",
  "google.protobuf.message.DESCRIPTOR.full_name",
  "google.protobuf.message.DecodeError",
  "google.protobuf.message.EncodeError",
  "google.protobuf.message.Extensions._FindExtensionByNumber",
  "google.protobuf.message.MergeFromString",
  "google.protobuf.message.Message",
  "google.protobuf.message.ParseFromString",
  "google.protobuf.message._listener_for_children",
  "google.protobuf.message._unknown_fields",
  "google.protobuf.message._unknown_fields.append",
  "google.protobuf.message_factory",
  "google.protobuf.message_factory.MessageFactory",
  "google.protobuf.pyext._message",
  "google.protobuf.pyext._message.Descriptor",
  "google.protobuf.pyext._message.EnumDescriptor",
  "google.protobuf.pyext._message.EnumValueDescriptor",
  "google.protobuf.pyext._message.FieldDescriptor",
  "google.protobuf.pyext._message.FileDescriptor",
  "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
  "google.protobuf.pyext._message.MessageMeta",
  "google.protobuf.pyext._message.MethodDescriptor",
  "google.protobuf.pyext._message.OneofDescriptor",
  "google.protobuf.pyext._message.ServiceDescriptor",
  "google.protobuf.pyext._message.default_pool.Add",
  "google.protobuf.pyext._message.default_pool.AddSerializedFile",
  "google.protobuf.pyext._message.default_pool.FindEnumTypeByName",
  "google.protobuf.pyext._message.default_pool.FindExtensionByName",
  "google.protobuf.pyext._message.default_pool.FindFieldByName",
  "google.protobuf.pyext._message.default_pool.FindFileByName",
  "google.protobuf.pyext._message.default_pool.FindMessageTypeByName",
  "google.protobuf.pyext._message.default_pool.FindMethodByName",
  "google.protobuf.pyext._message.default_pool.FindOneofByName",
  "google.protobuf.pyext._message.default_pool.FindServiceByName",
  "google.protobuf.pyext.cpp_message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.source_context_pb2",
  "google.protobuf.source_context_pb2.DESCRIPTOR",
  "google.protobuf.source_context_pb2._SOURCECONTEXT",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "google.protobuf.text_encoding",
  "google.protobuf.text_encoding.CEscape",
  "google.protobuf.text_encoding.CUnescape",
  "google.protobuf.text_format",
  "google.protobuf.text_format.Merge",
  "google.protobuf.text_format.MessageToString",
  "google.protobuf.text_format.Parse",
  "google.protobuf.text_format.ParseError",
  "google.protobuf.type_pb2",
  "google.protobuf.type_pb2.DESCRIPTOR",
  "google.protobuf.type_pb2._OPTION",
  "google.protobuf.type_pb2._SYNTAX",
  "grad_fn",
  "gradient_op",
  "graph_builder_class",
  "greenlet.getcurrent",
  "gzip",
  "gzip.GzipFile",
  "h5py",
  "handle_value",
  "handler",
  "hash_func",
  "hashlib",
  "hashlib.md5",
  "hashlib.pbkdf2_hmac",
  "hashlib.sha1",
  "hashlib.sha256",
  "heapq",
  "heapq.heappush",
  "heapq.nlargest",
  "hmac",
  "hmac.HMAC",
  "hotshot",
  "hotshot.Profile",
  "hotshot.stats",
  "hotshot.stats.load",
  "html.entities",
  "html.entities.name2codepoint",
  "html5lib",
  "html5lib.HTMLParser",
  "html5lib.constants",
  "html5lib.constants.DataLossWarning",
  "html5lib.constants.E",
  "html5lib.constants.namespaces",
  "html5lib.constants.spaceCharacters",
  "html5lib.constants.tokenTypes",
  "html5lib.constants.tokenTypes.items",
  "html5lib.constants.voidElements",
  "html5lib.filters.whitespace.Filter",
  "html5lib.getTreeWalker",
  "html5lib.html5parser",
  "html5lib.html5parser.HTMLParser",
  "html5lib.inputstream",
  "html5lib.inputstream.BufferedStream",
  "html5lib.inputstream.HTMLBinaryInputStream",
  "html5lib.inputstream.HTMLInputStream",
  "html5lib.inputstream.HTMLUnicodeInputStream",
  "html5lib.inputstream.HTMLUnicodeInputStream._defaultChunkSize",
  "html5lib.inputstream.codecName",
  "html5lib.parse",
  "html5lib.sanitizer",
  "html5lib.sanitizer.HTMLSanitizer",
  "html5lib.sanitizer.HTMLSanitizer.acceptable_protocols",
  "html5lib.sanitizer.HTMLSanitizer.allowed_attributes",
  "html5lib.sanitizer.HTMLSanitizer.allowed_elements",
  "html5lib.sanitizer.HTMLSanitizer.allowed_protocols",
  "html5lib.sanitizer.HTMLSanitizer.attr_val_is_uri",
  "html5lib.sanitizer.HTMLSanitizerMixin",
  "html5lib.sanitizer.HTMLSanitizerMixin.acceptable_protocols",
  "html5lib.serializer.HTMLSerializer",
  "html5lib.serializer.htmlserializer.HTMLSerializer",
  "html5lib.serializer.serialize",
  "html5lib.tokenizer.HTMLTokenizer",
  "html5lib.tokenizer.HTMLTokenizer.__iter__",
  "html5lib.treeadapters.sax",
  "html5lib.treeadapters.sax.to_sax",
  "html5lib.treebuilders",
  "html5lib.treebuilders.getTreeBuilder",
  "html5lib.treewalkers",
  "html5lib.treewalkers._base.TreeWalker",
  "html5lib.treewalkers.getTreeWalker",
  "html5lib.treewalkers.pprint",
  "html5lib.utils",
  "html5lib.utils.supports_lone_surrogates",
  "htmlentitydefs",
  "htmlentitydefs.codepoint2name.get",
  "htmlentitydefs.name2codepoint",
  "htmlentitydefs.name2codepoint.copy",
  "htmlserializer.HTMLSerializer",
  "http.cookiejar.CookieJar",
  "http.server.BaseHTTPRequestHandler",
  "http.server.BaseHTTPRequestHandler.handle",
  "http.server.BaseHTTPRequestHandler.version_string",
  "http.server.HTTPServer",
  "http.server.HTTPServer.handle_error",
  "http.server.HTTPServer.serve_forever",
  "identity",
  "ifft_fn",
  "ifft_fn.__doc__",
  "ihatexml.InfosetFilter",
  "imghdr",
  "imghdr.what",
  "imp",
  "imp.find_module",
  "imp.load_module",
  "imp.new_module",
  "impliedTagToken",
  "importlib",
  "importlib.import_module",
  "increment",
  "init",
  "init_array",
  "init_func",
  "injecting_start_response",
  "inlinepatterns.HTML_RE",
  "inlinepatterns.HtmlPattern",
  "inlinepatterns.Pattern",
  "inlinepatterns.SimpleTagPattern",
  "inlinepatterns.SubstituteTagPattern",
  "inlinepatterns.build_inlinepatterns",
  "inlinepatterns.handleAttributes",
  "inner",
  "input.dense_shape",
  "input.dtype.base_dtype",
  "input.dtype.real_dtype",
  "input.get_shape",
  "input_flatten",
  "input_op_fn",
  "input_op_match",
  "input_pack",
  "inputstream.ContentAttrParser",
  "inputstream.EncodingBytes",
  "inspect",
  "inspect.ArgSpec",
  "inspect.getargspec",
  "inspect.getdoc",
  "inspect.getfile",
  "inspect.getmembers",
  "inspect.getmro",
  "inspect.getsource",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.ismethod",
  "inspect.ismodule",
  "inspect.isroutine",
  "inspect.stack",
  "instance_benchmark_fn",
  "io",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.StringIO",
  "io.TextIOWrapper",
  "irfft_fn",
  "is_byte_range_valid",
  "is_diagonal",
  "is_match_fn",
  "is_retriable",
  "is_var",
  "is_within",
  "iterate",
  "itermethod",
  "itertext",
  "itertools",
  "itertools.chain",
  "itertools.count",
  "itertools.cycle",
  "itertools.ifilter",
  "itertools.imap",
  "itertools.izip",
  "itertools.repeat",
  "itertools.starmap",
  "itertools.tee",
  "json",
  "json.dumps",
  "json.load",
  "json.loads",
  "key_func",
  "kl_fn",
  "lanzcos_bidiag_state",
  "layer",
  "layer.__class__.__name__",
  "layer.__class__.from_config",
  "layer._compute_output_shape",
  "layer.data_format",
  "layer.filters",
  "layer.get_config",
  "layer.inbound_nodes",
  "layer.inbound_nodes.output_tensors",
  "layer.kernel_size",
  "layer.name",
  "layer.name.encode",
  "layer.weights",
  "layer_class",
  "layer_fn",
  "learn_io.data_feeder.setup_processor_data_feeder",
  "lf",
  "linear_operator",
  "linecache",
  "linecache.checkcache",
  "linecache.getline",
  "linkText",
  "linkify_nodes",
  "list.__getitem__",
  "list.__repr__",
  "list.append",
  "list.index",
  "loader",
  "local_DecodeVarint",
  "local_EncodeVarint",
  "local_ReadTag",
  "local_SkipField",
  "local_VarintSize",
  "local_len",
  "local_struct_pack",
  "local_unicode",
  "local_unpack",
  "log_if",
  "log_startup",
  "logger",
  "logging",
  "logging.BASIC_FORMAT",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.FATAL",
  "logging.Formatter",
  "logging.Handler",
  "logging.INFO",
  "logging.NOTSET",
  "logging.NullHandler",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.WARNING",
  "logging.captureWarnings",
  "logging.getLogger",
  "logging.root.handlers",
  "long",
  "loop_cond",
  "loop_fn",
  "loss_fn",
  "loss_grad_func",
  "lstm",
  "lstm_cell",
  "lstm_cell.state_size",
  "lxml.etree",
  "lxml.etree.Comment",
  "lxml.etree.Entity",
  "lxml.etree.XMLParser",
  "lxml.etree._Element",
  "lxml.etree.fromstring",
  "lxmletree.TreeWalker",
  "make_dims",
  "make_initializer",
  "make_list",
  "make_node_marker",
  "make_wt_initializer",
  "map.default_subdomain",
  "map.strict_slashes",
  "map_fn",
  "map_func",
  "mark_op_as_used",
  "markdown",
  "markdown.markdown",
  "markdown.markdownFromFile",
  "markdown.version",
  "marshal",
  "marshal.dumps",
  "marshal.loads",
  "mask_fn",
  "masked_fn",
  "masked_metric_fn",
  "match_maybe_append",
  "math",
  "math.ceil",
  "math.e",
  "math.exp",
  "math.fabs",
  "math.floor",
  "math.isinf",
  "math.isnan",
  "math.log",
  "math.pi",
  "math.pow",
  "math.sqrt",
  "max_",
  "maybe_concatenate_auxiliary_inputs",
  "maybe_normalize",
  "merge",
  "merger",
  "message_class",
  "message_sizer",
  "message_type",
  "meta",
  "metaclass",
  "method",
  "method.name",
  "metric",
  "metric_fn",
  "metric_op",
  "mimetypes",
  "mimetypes.guess_type",
  "min_",
  "mock",
  "mod",
  "modify_value",
  "moving_average",
  "msg",
  "mul",
  "multiprocessing",
  "multiprocessing.Event",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "new_default",
  "next_iteration",
  "nn_layer",
  "no_op",
  "ntpath",
  "ntpath.normpath",
  "numbers",
  "numbers.Complex",
  "numbers.Integral",
  "numbers.Number",
  "numbers.Real",
  "numpy",
  "numpy.Inf",
  "numpy.__name__",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argwhere",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.atleast_1d",
  "numpy.average",
  "numpy.bool",
  "numpy.bool8",
  "numpy.bool_",
  "numpy.broadcast_to",
  "numpy.ceil",
  "numpy.clip",
  "numpy.complex",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cos",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.dtype",
  "numpy.empty",
  "numpy.euler_gamma",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.eye",
  "numpy.fabs",
  "numpy.finfo",
  "numpy.float",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.frombuffer",
  "numpy.fromiter",
  "numpy.fromstring",
  "numpy.full",
  "numpy.generic",
  "numpy.get_printoptions",
  "numpy.greater",
  "numpy.hstack",
  "numpy.identity",
  "numpy.iinfo",
  "numpy.inf",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isreal",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.ix_",
  "numpy.less",
  "numpy.lib.npyio.NpzFile",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.log10",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.matrix",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nditer",
  "numpy.nextafter",
  "numpy.nonzero",
  "numpy.number",
  "numpy.object",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.percentile",
  "numpy.pi",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.random_integers",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.roll",
  "numpy.rollaxis",
  "numpy.save",
  "numpy.savetxt",
  "numpy.searchsorted",
  "numpy.set_printoptions",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.size",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.str",
  "numpy.string_",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.transpose",
  "numpy.trim_zeros",
  "numpy.ubyte",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode_",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "numpy_source",
  "object.__getattr__",
  "object.__getattribute__",
  "object.__lt__",
  "object.__setattr__",
  "odict.OrderedDict",
  "old_init",
  "open_fn",
  "operation",
  "operation.__doc__",
  "operation.__name__",
  "operator",
  "operator.add",
  "operator.attrgetter",
  "operator.getitem",
  "operator.itemgetter",
  "operator.methodcaller",
  "operator.mul",
  "operator.xor",
  "options_class",
  "optparse",
  "optparse.OptionParser",
  "ordereddict.OrderedDict",
  "orthogonalize_",
  "orthogonalize_once",
  "os",
  "os.W_OK",
  "os.access",
  "os.altsep",
  "os.chdir",
  "os.close",
  "os.curdir",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.getcwd",
  "os.getenv",
  "os.getpid",
  "os.kill",
  "os.makedirs",
  "os.name",
  "os.pardir",
  "os.path",
  "os.path.abspath",
  "os.path.altsep",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.curdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.pardir",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.sep",
  "os.path.split",
  "os.path.splitext",
  "os.remove",
  "os.rename",
  "os.sep",
  "os.stat",
  "os.unlink",
  "os.walk",
  "os.write",
  "out_el_shape",
  "output_axes",
  "output_flatten",
  "output_pack",
  "override_method",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas_io.HAS_PANDAS",
  "pandas_io.extract_pandas_data",
  "pandas_io.extract_pandas_labels",
  "pandas_io.extract_pandas_matrix",
  "pandas_source",
  "parse",
  "parse_fail",
  "parse_func",
  "parse_positive_float",
  "parse_set_header",
  "parser",
  "parser.suite",
  "paths_to_delete",
  "pickle",
  "pkg_resources",
  "pkg_resources.DefaultProvider",
  "pkg_resources.ResourceManager",
  "pkg_resources.get_provider",
  "pkg_resources.working_set",
  "pkgutil",
  "pkgutil.iter_modules",
  "portpicker",
  "positive_filter",
  "posixpath",
  "posixpath.basename",
  "posixpath.join",
  "posixpath.normpath",
  "postprocessors.Postprocessor",
  "postprocessors.build_postprocessors",
  "pow_function",
  "pprint.pformat",
  "predicate",
  "prepare_config",
  "preprocessors.Preprocessor",
  "preprocessors.build_preprocessors",
  "print_layer_summary",
  "print_layer_summary_with_connections",
  "print_list",
  "print_row",
  "process_layer",
  "proto_type",
  "put_data_array",
  "put_data_array_or_dict",
  "py.Trie",
  "pydot",
  "pydot_ng",
  "pydot_ng.Dot",
  "pydot_ng.Edge",
  "pydot_ng.Node",
  "pydot_ng.find_graphviz",
  "pygments.formatters.get_formatter_by_name",
  "pygments.highlight",
  "pygments.lexers.get_lexer_by_name",
  "pygments.lexers.guess_lexer",
  "queue",
  "queue_creator",
  "queue_parsed_features",
  "random",
  "random.SystemRandom",
  "random.gauss",
  "random.randint",
  "random.random",
  "random.sample",
  "random.seed",
  "random.shuffle",
  "random.uniform",
  "random_normal",
  "re",
  "re.DOTALL",
  "re.IGNORECASE",
  "re.M",
  "re.MULTILINE",
  "re.Scanner",
  "re.UNICODE",
  "re.VERBOSE",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.finditer",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "read_colvec",
  "reader",
  "readline",
  "readline.parse_and_bind",
  "readline.set_completer",
  "readline.set_completer_delims",
  "reduce_fn",
  "reduce_func",
  "reduce_sum",
  "ref_enter",
  "ref_next_iteration",
  "ref_switch",
  "reg",
  "reg_exp_func",
  "relu",
  "replace_nodes",
  "requests",
  "reshape",
  "response",
  "result_class",
  "result_type",
  "rf",
  "rfft_fn",
  "rnn_cell",
  "routing_gradient",
  "s",
  "s.isalpha",
  "s.replace",
  "s.split",
  "s.startswith",
  "safe_log",
  "sanitizer.BleachSanitizer",
  "sanitizer.HTMLSanitizerMixin",
  "scalar_transform_cls",
  "scipy.linalg",
  "scipy.linalg.svd",
  "scipy.ndimage",
  "scipy.ndimage.interpolation.affine_transform",
  "scipy.optimize",
  "select_filter",
  "serializeElement",
  "serializers.to_html_string",
  "serializers.to_xhtml_string",
  "series.Series",
  "series.TransformedSeries",
  "series.TransformedSeries.make_repr",
  "series_transform_cls",
  "setmethod",
  "setuptools.Command",
  "setuptools.command.install.install",
  "setuptools.command.install.install.finalize_options",
  "setuptools.dist.Distribution",
  "setuptools.find_packages",
  "setuptools.setup",
  "sh",
  "shape_func",
  "shape_func.__name__",
  "shutil",
  "shutil.copyfileobj",
  "shutil.rmtree",
  "sigmoid",
  "signal",
  "signal.SIGINT",
  "signal.SIGTERM",
  "signal.SIG_DFL",
  "signal.signal",
  "simple_add_results",
  "simplejson",
  "simplejson.dumps",
  "simplejson.loads",
  "six",
  "six.BytesIO",
  "six.PY2",
  "six.PY3",
  "six.StringIO",
  "six.add_metaclass",
  "six.binary_type",
  "six.callable",
  "six.exec_",
  "six.indexbytes",
  "six.int2byte",
  "six.integer_types",
  "six.iteritems",
  "six.iterkeys",
  "six.itervalues",
  "six.moves",
  "six.moves._thread.get_ident",
  "six.moves.cPickle",
  "six.moves.cPickle.load",
  "six.moves.http_client",
  "six.moves.http_client.HTTPResponse",
  "six.moves.range",
  "six.moves.reduce",
  "six.moves.urllib",
  "six.moves.urllib.error.HTTPError",
  "six.moves.urllib.error.URLError",
  "six.moves.urllib.parse",
  "six.moves.urllib.parse.urlencode",
  "six.moves.urllib.parse.urlparse",
  "six.moves.urllib.request.urlopen",
  "six.moves.urllib.request.urlretrieve",
  "six.moves.urllib_parse",
  "six.moves.urllib_parse.urlparse",
  "six.moves.xrange",
  "six.moves.zip",
  "six.next",
  "six.reraise",
  "six.string_types",
  "six.text_type",
  "six.u",
  "six.unichr",
  "six.with_metaclass",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.cross_validation.train_test_split",
  "sklearn.exceptions.NotFittedError",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.log_loss",
  "sklearn.metrics.mean_squared_error",
  "sklearn.utils.validation.NotFittedError",
  "slice_shape",
  "socket",
  "socket.AF_INET",
  "socket.AF_INET6",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_REUSEADDR",
  "socket.error",
  "socket.gethostname",
  "socket.socket",
  "socket.timeout",
  "socketserver.ForkingMixIn",
  "socketserver.ThreadingMixIn",
  "softmax",
  "sort_key",
  "space_to_batch_nd",
  "squared_frobenius_norm",
  "sre.Scanner",
  "sre_constants",
  "sre_constants.error",
  "ssl",
  "start_response",
  "stats_func",
  "step_function",
  "storage",
  "store_f",
  "str.maketrans",
  "str_to_hash_bucket",
  "streaming_metrics_fn",
  "string",
  "string.ascii_letters",
  "string.ascii_letters.encode",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "string.digits",
  "string.digits.encode",
  "string.hexdigits",
  "string.maketrans",
  "string_to_bytes",
  "strip",
  "strip_wrapping_parentheses",
  "struct",
  "struct.Struct",
  "struct.calcsize",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "sub",
  "subfeed_dtype",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "support.TestData",
  "support.TracingSaxHandler",
  "support.convert",
  "support.convertExpected",
  "support.errorMessage",
  "support.get_data_files",
  "support.test_dir",
  "support.treeTypes.items",
  "support.treeTypes.keys",
  "switch",
  "sys",
  "sys._getframe",
  "sys.api_version.encode",
  "sys.argv",
  "sys.argv.index",
  "sys.argv.pop",
  "sys.argv.remove",
  "sys.byteorder.encode",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.flags.interactive",
  "sys.float_info.max",
  "sys.getdefaultencoding",
  "sys.getdlopenflags",
  "sys.getfilesystemencoding",
  "sys.gettotalrefcount",
  "sys.maxint",
  "sys.maxsize",
  "sys.meta_path",
  "sys.meta_path.append",
  "sys.modules",
  "sys.modules.main",
  "sys.modules.values",
  "sys.path",
  "sys.path.insert",
  "sys.platform",
  "sys.platform.startswith",
  "sys.ps1",
  "sys.setdlopenflags",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdin.read",
  "sys.stdout",
  "sys.stdout.buffer.write",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version",
  "sys.version_info",
  "sys.version_info.major",
  "tanh",
  "tarfile",
  "tarfile.TarError",
  "tarfile.is_tarfile",
  "tarfile.open",
  "target_predictor_fn",
  "tarray",
  "task",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "tensor_to_inference_result",
  "tensorflow.InteractiveSession",
  "tensorflow.Session",
  "tensorflow.Variable",
  "tensorflow.__file__",
  "tensorflow.add",
  "tensorflow.app.run",
  "tensorflow.argmax",
  "tensorflow.cast",
  "tensorflow.constant",
  "tensorflow.contrib.batching.python.ops.batch_ops.batch",
  "tensorflow.contrib.batching.python.ops.batch_ops.unbatch",
  "tensorflow.contrib.bayesflow.__init__._allowed_symbols",
  "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor",
  "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms",
  "tensorflow.contrib.bayesflow.python.ops.variational_inference.register_prior",
  "tensorflow.contrib.cloud.__init__._allowed_symbols",
  "tensorflow.contrib.deprecated.__init__._allowed_symbols",
  "tensorflow.contrib.distributions.__init__._allowed_symbols",
  "tensorflow.contrib.distributions.python.ops.bijectors.power_transform.PowerTransform",
  "tensorflow.contrib.distributions.python.ops.bijectors.sigmoid.Sigmoid",
  "tensorflow.contrib.distributions.python.ops.bijectors.softmax_centered.SoftmaxCentered",
  "tensorflow.contrib.distributions.python.ops.distribution_util.AppendDocstring",
  "tensorflow.contrib.distributions.python.ops.distribution_util.matrix_diag_transform",
  "tensorflow.contrib.distributions.python.ops.distribution_util.softplus_inverse",
  "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_COVS_VARIABLE",
  "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_VARIABLE",
  "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_WEIGHT",
  "tensorflow.contrib.framework.assert_global_step",
  "tensorflow.contrib.framework.assert_scalar",
  "tensorflow.contrib.framework.convert_to_tensor_or_sparse_tensor",
  "tensorflow.contrib.framework.create_global_step",
  "tensorflow.contrib.framework.deprecated",
  "tensorflow.contrib.framework.deprecated_arg_values",
  "tensorflow.contrib.framework.deprecated_args",
  "tensorflow.contrib.framework.get_global_step",
  "tensorflow.contrib.framework.get_graph_from_inputs",
  "tensorflow.contrib.framework.is_tensor",
  "tensorflow.contrib.framework.list_variables",
  "tensorflow.contrib.framework.load_variable",
  "tensorflow.contrib.framework.local_variable",
  "tensorflow.contrib.framework.python.ops.add_arg_scope",
  "tensorflow.contrib.hooks.__init__._allowed_symbols",
  "tensorflow.contrib.imperative.__init__._InteractiveMode",
  "tensorflow.contrib.imperative.__init__._default_interactive_mode",
  "tensorflow.contrib.keras.python.keras.backend.pattern_broadcast",
  "tensorflow.contrib.keras.python.keras.callbacks.on_batch_begin",
  "tensorflow.contrib.keras.python.keras.callbacks.on_batch_end",
  "tensorflow.contrib.keras.python.keras.callbacks.on_epoch_begin",
  "tensorflow.contrib.keras.python.keras.callbacks.on_epoch_end",
  "tensorflow.contrib.keras.python.keras.callbacks.on_train_begin",
  "tensorflow.contrib.keras.python.keras.callbacks.on_train_end",
  "tensorflow.contrib.keras.python.keras.callbacks.set_model",
  "tensorflow.contrib.keras.python.keras.callbacks.set_params",
  "tensorflow.contrib.keras.python.keras.layers.Activation",
  "tensorflow.contrib.keras.python.keras.layers.AveragePooling2D",
  "tensorflow.contrib.keras.python.keras.layers.BatchNormalization",
  "tensorflow.contrib.keras.python.keras.layers.Conv2D",
  "tensorflow.contrib.keras.python.keras.layers.Dense",
  "tensorflow.contrib.keras.python.keras.layers.Flatten",
  "tensorflow.contrib.keras.python.keras.layers.GlobalAveragePooling2D",
  "tensorflow.contrib.keras.python.keras.layers.GlobalMaxPooling2D",
  "tensorflow.contrib.keras.python.keras.layers.MaxPooling2D",
  "tensorflow.contrib.keras.python.keras.layers.SeparableConv2D",
  "tensorflow.contrib.keras.python.keras.layers.ZeroPadding2D",
  "tensorflow.contrib.keras.python.keras.layers.add",
  "tensorflow.contrib.keras.python.keras.layers.concatenate",
  "tensorflow.contrib.keras.python.keras.models.Model.from_config",
  "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
  "tensorflow.contrib.layers.__init__._allowed_symbols",
  "tensorflow.contrib.layers.apply_regularization",
  "tensorflow.contrib.layers.conv2d",
  "tensorflow.contrib.layers.dropout",
  "tensorflow.contrib.layers.feature_column",
  "tensorflow.contrib.layers.feature_column.DataFrameColumn",
  "tensorflow.contrib.layers.feature_column._BucketizedColumn",
  "tensorflow.contrib.layers.feature_column._CrossedColumn",
  "tensorflow.contrib.layers.feature_column._RealValuedColumn",
  "tensorflow.contrib.layers.feature_column._SparseColumn",
  "tensorflow.contrib.layers.feature_column._WeightedSparseColumn",
  "tensorflow.contrib.layers.feature_column.real_valued_column",
  "tensorflow.contrib.layers.fully_connected",
  "tensorflow.contrib.layers.infer_real_valued_columns",
  "tensorflow.contrib.layers.initializers.xavier_initializer",
  "tensorflow.contrib.layers.input_from_feature_columns",
  "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
  "tensorflow.contrib.layers.linear",
  "tensorflow.contrib.layers.parse_feature_columns_from_examples",
  "tensorflow.contrib.layers.python.layers.feature_column.columns",
  "tensorflow.contrib.layers.python.layers.feature_column.insert_transformed_feature",
  "tensorflow.contrib.layers.python.layers.feature_column.name",
  "tensorflow.contrib.layers.python.layers.feature_column.source_column",
  "tensorflow.contrib.layers.python.layers.feature_column.sparse_id_column",
  "tensorflow.contrib.layers.real_valued_column",
  "tensorflow.contrib.layers.sequence_input_from_feature_columns",
  "tensorflow.contrib.layers.transform_features",
  "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
  "tensorflow.contrib.learn.DNNClassifier",
  "tensorflow.contrib.learn.__init__._allowed_symbols",
  "tensorflow.contrib.learn.datasets.base.Dataset",
  "tensorflow.contrib.learn.datasets.base.load_csv_with_header",
  "tensorflow.contrib.learn.python.learn.Series",
  "tensorflow.contrib.learn.python.learn.TensorFlowTransform",
  "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
  "tensorflow.contrib.learn.python.learn.dataframe.dataframe.columns",
  "tensorflow.contrib.learn.python.learn.datasets.__init__.DATASETS",
  "tensorflow.contrib.learn.python.learn.datasets.__init__.SYNTHETIC",
  "tensorflow.contrib.learn.python.learn.estimators.constants.ProblemType.CLASSIFICATION",
  "tensorflow.contrib.learn.python.learn.estimators.constants.ProblemType.LINEAR_REGRESSION",
  "tensorflow.contrib.learn.python.learn.estimators.constants.ProblemType.LOGISTIC_REGRESSION",
  "tensorflow.contrib.learn.python.learn.estimators.constants.ProblemType.UNSPECIFIED",
  "tensorflow.contrib.learn.python.learn.estimators.head.create_model_fn_ops",
  "tensorflow.contrib.learn.python.learn.estimators.head.logits_dimension",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY_BASELINE",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.AUC",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.AUC_PR",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_AUC",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_AUC_PR",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_LABEL_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_LOGITS_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_PREDICTION_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.CLASS_PROBABILITY_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.LABEL_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.LOSS",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.PRECISION_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.PREDICTION_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.RECALL_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.EVAL",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.INFER",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.TRAIN",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.CLASSES",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.GENERIC",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.LOGISTIC",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.LOGITS",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.PROBABILITIES",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.SCORES",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.PredictionType.MULTIPLE_VALUE",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.PredictionType.SINGLE_VALUE",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.RNNKeys.FINAL_STATE_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.RNNKeys.LABELS_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.RNNKeys.SEQUENCE_LENGTH_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.rnn_common.RNNKeys.STATE_PREFIX",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.Environment.GOOGLE",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.Environment.LOCAL",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.MASTER",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.PS",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.WORKER",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.model_dir",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.uid",
  "tensorflow.contrib.learn.python.learn.parameter",
  "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
  "tensorflow.contrib.legacy_seq2seq.__init__._allowed_symbols",
  "tensorflow.contrib.linalg.LinearOperator",
  "tensorflow.contrib.linalg.LinearOperatorDiag",
  "tensorflow.contrib.linalg.LinearOperatorIdentity",
  "tensorflow.contrib.linalg.LinearOperatorScaledIdentity",
  "tensorflow.contrib.linalg.LinearOperatorUDVHUpdate",
  "tensorflow.contrib.lookup.LookupInterface",
  "tensorflow.contrib.lookup.index_table_from_file",
  "tensorflow.contrib.lookup.index_table_from_tensor",
  "tensorflow.contrib.lookup.index_to_string_table_from_tensor",
  "tensorflow.contrib.lookup.string_to_index_table_from_tensor",
  "tensorflow.contrib.losses.__init__._allowed_symbols",
  "tensorflow.contrib.losses.append",
  "tensorflow.contrib.losses.hinge_loss",
  "tensorflow.contrib.losses.log_loss",
  "tensorflow.contrib.losses.sigmoid_cross_entropy",
  "tensorflow.contrib.losses.sparse_softmax_cross_entropy",
  "tensorflow.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits",
  "tensorflow.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits",
  "tensorflow.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits",
  "tensorflow.contrib.opt.__init__._allowed_symbols",
  "tensorflow.contrib.rnn.AttentionCellWrapper",
  "tensorflow.contrib.rnn.BasicLSTMCell",
  "tensorflow.contrib.rnn.BasicRNNCell",
  "tensorflow.contrib.rnn.DropoutWrapper",
  "tensorflow.contrib.rnn.GRUCell",
  "tensorflow.contrib.rnn.LSTMCell",
  "tensorflow.contrib.rnn.LSTMStateTuple",
  "tensorflow.contrib.rnn.MultiRNNCell",
  "tensorflow.contrib.rnn.RNNCell",
  "tensorflow.contrib.saved_model.__init__._allowed_symbols",
  "tensorflow.contrib.seq2seq.__init__._allowed_symbols",
  "tensorflow.contrib.session_bundle.constants.ASSETS_KEY.any_list.value",
  "tensorflow.contrib.session_bundle.constants.GRAPH_KEY.any_list.value",
  "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY.node_list.value",
  "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY.any_list.value",
  "tensorflow.contrib.sparsemax.__init__._allowed_symbols",
  "tensorflow.contrib.stat_summarizer.__init__._allowed_symbols",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.best_splits",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.count_extremely_random_stats",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.finished_nodes",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.grow_tree",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.reinterpret_string_to_float",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.sample_inputs",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.scatter_add_ndim",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.tree_predictions",
  "tensorflow.contrib.tensor_forest.python.ops.tensor_forest_ops.update_fertile_slots",
  "tensorflow.contrib.tensorboard.plugins.projector.ProjectorConfig",
  "tensorflow.contrib.training.__init__._allowed_symbols",
  "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
  "tensorflow.core.framework.graph_pb2.GraphDef.FromString",
  "tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
  "tensorflow.core.framework.summary_pb2.Summary.Value",
  "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim",
  "tensorflow.core.framework.types_pb2.DataType.keys",
  "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
  "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V2",
  "tensorflow.core.util.event_pb2.Event.FromString",
  "tensorflow.core.util.event_pb2.LogMessage.DEBUGGING",
  "tensorflow.core.util.event_pb2.LogMessage.ERROR",
  "tensorflow.core.util.event_pb2.LogMessage.FATAL",
  "tensorflow.core.util.event_pb2.LogMessage.INFO",
  "tensorflow.core.util.event_pb2.LogMessage.WARN",
  "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
  "tensorflow.core.util.event_pb2.SessionLog.START",
  "tensorflow.core.util.event_pb2.SessionLog.STOP",
  "tensorflow.equal",
  "tensorflow.float32",
  "tensorflow.global_variables_initializer",
  "tensorflow.int32",
  "tensorflow.log",
  "tensorflow.matmul",
  "tensorflow.name_scope",
  "tensorflow.nn.in_top_k",
  "tensorflow.nn.relu",
  "tensorflow.nn.softmax",
  "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.placeholder",
  "tensorflow.python.__init__._allowed_symbols",
  "tensorflow.python.__init__._exported_dunders",
  "tensorflow.python.client.session.close",
  "tensorflow.python.client.session.graph.as_default",
  "tensorflow.python.client.session.run",
  "tensorflow.python.debug.cli.debugger_cli_common.MAIN_MENU_KEY.format_as_single_line",
  "tensorflow.python.debug.lib.stepper.NodeStepper.FEED_TYPE_CLIENT",
  "tensorflow.python.debug.lib.stepper.NodeStepper.FEED_TYPE_DUMPED_INTERMEDIATE",
  "tensorflow.python.debug.lib.stepper.NodeStepper.FEED_TYPE_HANDLE",
  "tensorflow.python.debug.lib.stepper.NodeStepper.FEED_TYPE_OVERRIDE",
  "tensorflow.python.debug.wrappers.dumping_wrapper.DumpingDebugWrapperSession.__init__",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.DEBUG_RUN",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.INVOKE_STEPPER",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.NON_DEBUG_RUN",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.PROFILE_RUN",
  "tensorflow.python.debug.wrappers.framework.OnSessionInitAction.PROCEED",
  "tensorflow.python.debug.wrappers.local_cli_wrapper.LocalCLIDebugWrapperSession.__init__",
  "tensorflow.python.estimator.estimator.config.is_chief",
  "tensorflow.python.estimator.estimator.export_savedmodel",
  "tensorflow.python.estimator.estimator.model_dir",
  "tensorflow.python.estimator.model_fn.MetricKeys.LOSS",
  "tensorflow.python.estimator.model_fn.ModeKeys.EVAL",
  "tensorflow.python.estimator.model_fn.ModeKeys.PREDICT",
  "tensorflow.python.estimator.model_fn.ModeKeys.TRAIN",
  "tensorflow.python.feature_column.feature_column._CategoricalColumn.IdWeightPair",
  "tensorflow.python.feature_column.feature_column.config",
  "tensorflow.python.framework.dtypes.float32.as_datatype_enum",
  "tensorflow.python.framework.dtypes.int32.as_datatype_enum",
  "tensorflow.python.framework.dtypes.int32.base_dtype",
  "tensorflow.python.framework.dtypes.int64.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.qint16.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.qint32.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.qint8.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.quint16.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.quint8.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.sqrt",
  "tensorflow.python.framework.errors.AbortedError",
  "tensorflow.python.framework.errors.CancelledError",
  "tensorflow.python.framework.errors.DataLossError",
  "tensorflow.python.framework.errors.DeadlineExceededError",
  "tensorflow.python.framework.errors.FailedPreconditionError",
  "tensorflow.python.framework.errors.InvalidArgumentError",
  "tensorflow.python.framework.errors.NotFoundError",
  "tensorflow.python.framework.errors.OpError",
  "tensorflow.python.framework.errors.OutOfRangeError",
  "tensorflow.python.framework.errors.PermissionDeniedError",
  "tensorflow.python.framework.errors.UnavailableError",
  "tensorflow.python.framework.errors.UnimplementedError",
  "tensorflow.python.framework.errors.error_code_from_exception_type",
  "tensorflow.python.framework.errors.exception_type_from_error_code",
  "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
  "tensorflow.python.framework.fast_tensor_util",
  "tensorflow.python.framework.fast_tensor_util.AppendBoolArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendComplex128ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendComplex64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendFloat64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt16ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt8ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendObjectArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendUInt16ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendUInt8ArrayToTensorProto",
  "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS",
  "tensorflow.python.framework.ops.GraphKeys.ASSET_FILEPATHS",
  "tensorflow.python.framework.ops.GraphKeys.BIASES",
  "tensorflow.python.framework.ops.GraphKeys.CONCATENATED_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.COND_CONTEXT",
  "tensorflow.python.framework.ops.GraphKeys.EVAL_STEP",
  "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
  "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_RESOURCES",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.LOSSES",
  "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.MOVING_AVERAGE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
  "tensorflow.python.framework.ops.GraphKeys.READY_FOR_LOCAL_INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.READY_OP",
  "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
  "tensorflow.python.framework.ops.GraphKeys.RESOURCES",
  "tensorflow.python.framework.ops.GraphKeys.SAVEABLE_OBJECTS",
  "tensorflow.python.framework.ops.GraphKeys.SAVERS",
  "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
  "tensorflow.python.framework.ops.GraphKeys.SUMMARY_OP",
  "tensorflow.python.framework.ops.GraphKeys.TABLE_INITIALIZERS",
  "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_RESOURCE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
  "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
  "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
  "tensorflow.python.framework.ops.GraphKeys.WHILE_CONTEXT",
  "tensorflow.python.framework.ops.GraphKeys._STREAMING_MODEL_PORTS",
  "tensorflow.python.framework.ops.Tensor.OVERLOADABLE_OPERATORS",
  "tensorflow.python.framework.ops.append",
  "tensorflow.python.framework.ops.dtypes.complex128",
  "tensorflow.python.framework.ops.dtypes.complex64",
  "tensorflow.python.framework.ops.dtypes.float32",
  "tensorflow.python.framework.ops.dtypes.int64",
  "tensorflow.python.framework.ops.get_operations",
  "tensorflow.python.framework.ops.reshape",
  "tensorflow.python.framework.sparse_tensor.indices",
  "tensorflow.python.framework.tensor_shape.is_fully_defined",
  "tensorflow.python.layers.convolutional.Convolution2DTranspose",
  "tensorflow.python.ops.array_ops.batch_to_space_nd",
  "tensorflow.python.ops.array_ops.check_numerics",
  "tensorflow.python.ops.array_ops.depth_to_space",
  "tensorflow.python.ops.array_ops.diag",
  "tensorflow.python.ops.array_ops.diag_part",
  "tensorflow.python.ops.array_ops.fill",
  "tensorflow.python.ops.array_ops.gather",
  "tensorflow.python.ops.array_ops.gather_nd",
  "tensorflow.python.ops.array_ops.identity",
  "tensorflow.python.ops.array_ops.invert_permutation",
  "tensorflow.python.ops.array_ops.matrix_band_part",
  "tensorflow.python.ops.array_ops.matrix_diag",
  "tensorflow.python.ops.array_ops.matrix_diag_part",
  "tensorflow.python.ops.array_ops.matrix_set_diag",
  "tensorflow.python.ops.array_ops.pack",
  "tensorflow.python.ops.array_ops.prevent_gradient",
  "tensorflow.python.ops.array_ops.reduce_prod",
  "tensorflow.python.ops.array_ops.reshape",
  "tensorflow.python.ops.array_ops.reverse_v2",
  "tensorflow.python.ops.array_ops.scatter_nd",
  "tensorflow.python.ops.array_ops.shape_n",
  "tensorflow.python.ops.array_ops.space_to_batch_nd",
  "tensorflow.python.ops.array_ops.space_to_depth",
  "tensorflow.python.ops.array_ops.stop_gradient",
  "tensorflow.python.ops.array_ops.strided_slice_grad",
  "tensorflow.python.ops.array_ops.tile",
  "tensorflow.python.ops.array_ops.unique",
  "tensorflow.python.ops.array_ops.unique_with_counts",
  "tensorflow.python.ops.array_ops.unpack",
  "tensorflow.python.ops.control_flow_ops.no_op",
  "tensorflow.python.ops.control_flow_ops.ref_switch",
  "tensorflow.python.ops.data_flow_ops.dynamic_partition",
  "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
  "tensorflow.python.ops.distributions.bijector.Bijector",
  "tensorflow.python.ops.gen_array_ops._batch_to_space.__doc__",
  "tensorflow.python.ops.gen_array_ops._list_diff.__doc__",
  "tensorflow.python.ops.gen_array_ops._space_to_batch.__doc__",
  "tensorflow.python.ops.gen_array_ops.reverse_sequence.__doc__",
  "tensorflow.python.ops.gen_array_ops.reverse_v2.__doc__",
  "tensorflow.python.ops.gen_math_ops._mul.__doc__",
  "tensorflow.python.ops.gen_math_ops._mul.__doc__.replace",
  "tensorflow.python.ops.gen_math_ops._sub.__doc__",
  "tensorflow.python.ops.gen_math_ops._sub.__doc__.replace",
  "tensorflow.python.ops.gen_math_ops.arg_max.__doc__.replace",
  "tensorflow.python.ops.gen_math_ops.arg_min.__doc__.replace",
  "tensorflow.python.ops.gen_string_ops.reduce_join.__doc__",
  "tensorflow.python.ops.image_ops.decode_image",
  "tensorflow.python.ops.image_ops.encode_jpeg",
  "tensorflow.python.ops.image_ops.encode_png",
  "tensorflow.python.ops.image_ops.resize_images",
  "tensorflow.python.ops.image_ops.resize_nearest_neighbor",
  "tensorflow.python.ops.io_ops.matching_files",
  "tensorflow.python.ops.io_ops.restore_v2",
  "tensorflow.python.ops.io_ops.save_v2",
  "tensorflow.python.ops.linalg_ops.cholesky",
  "tensorflow.python.ops.linalg_ops.cholesky_grad",
  "tensorflow.python.ops.linalg_ops.matrix_determinant",
  "tensorflow.python.ops.linalg_ops.matrix_inverse",
  "tensorflow.python.ops.linalg_ops.matrix_solve",
  "tensorflow.python.ops.linalg_ops.matrix_triangular_solve",
  "tensorflow.python.ops.linalg_ops.qr",
  "tensorflow.python.ops.math_ops.acos",
  "tensorflow.python.ops.math_ops.add",
  "tensorflow.python.ops.math_ops.asin",
  "tensorflow.python.ops.math_ops.atan",
  "tensorflow.python.ops.math_ops.betainc",
  "tensorflow.python.ops.math_ops.ceil",
  "tensorflow.python.ops.math_ops.cos",
  "tensorflow.python.ops.math_ops.cross",
  "tensorflow.python.ops.math_ops.digamma",
  "tensorflow.python.ops.math_ops.equal",
  "tensorflow.python.ops.math_ops.erfc",
  "tensorflow.python.ops.math_ops.exp",
  "tensorflow.python.ops.math_ops.expm1",
  "tensorflow.python.ops.math_ops.floor",
  "tensorflow.python.ops.math_ops.greater",
  "tensorflow.python.ops.math_ops.greater_equal",
  "tensorflow.python.ops.math_ops.igamma",
  "tensorflow.python.ops.math_ops.igammac",
  "tensorflow.python.ops.math_ops.int32",
  "tensorflow.python.ops.math_ops.is_finite",
  "tensorflow.python.ops.math_ops.is_nan",
  "tensorflow.python.ops.math_ops.less",
  "tensorflow.python.ops.math_ops.less_equal",
  "tensorflow.python.ops.math_ops.lgamma",
  "tensorflow.python.ops.math_ops.log",
  "tensorflow.python.ops.math_ops.log1p",
  "tensorflow.python.ops.math_ops.logical_and",
  "tensorflow.python.ops.math_ops.logical_not",
  "tensorflow.python.ops.math_ops.logical_or",
  "tensorflow.python.ops.math_ops.maximum",
  "tensorflow.python.ops.math_ops.minimum",
  "tensorflow.python.ops.math_ops.not_equal",
  "tensorflow.python.ops.math_ops.polygamma",
  "tensorflow.python.ops.math_ops.rank",
  "tensorflow.python.ops.math_ops.reciprocal",
  "tensorflow.python.ops.math_ops.rsqrt",
  "tensorflow.python.ops.math_ops.segment_sum",
  "tensorflow.python.ops.math_ops.sin",
  "tensorflow.python.ops.math_ops.sparse_segment_mean",
  "tensorflow.python.ops.math_ops.sparse_segment_mean_grad",
  "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n",
  "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n_grad",
  "tensorflow.python.ops.math_ops.sparse_segment_sum",
  "tensorflow.python.ops.math_ops.squared_difference",
  "tensorflow.python.ops.math_ops.tan",
  "tensorflow.python.ops.math_ops.unsorted_segment_max",
  "tensorflow.python.ops.math_ops.unsorted_segment_sum",
  "tensorflow.python.ops.math_ops.zeta",
  "tensorflow.python.ops.metrics.accuracy",
  "tensorflow.python.ops.metrics.auc",
  "tensorflow.python.ops.metrics.false_negatives",
  "tensorflow.python.ops.metrics.false_positives",
  "tensorflow.python.ops.metrics.mean",
  "tensorflow.python.ops.metrics.mean_absolute_error",
  "tensorflow.python.ops.metrics.mean_iou",
  "tensorflow.python.ops.metrics.mean_relative_error",
  "tensorflow.python.ops.metrics.mean_squared_error",
  "tensorflow.python.ops.metrics.mean_tensor",
  "tensorflow.python.ops.metrics.percentage_below",
  "tensorflow.python.ops.metrics.precision",
  "tensorflow.python.ops.metrics.precision_at_thresholds",
  "tensorflow.python.ops.metrics.recall",
  "tensorflow.python.ops.metrics.recall_at_k",
  "tensorflow.python.ops.metrics.recall_at_thresholds",
  "tensorflow.python.ops.metrics.root_mean_squared_error",
  "tensorflow.python.ops.metrics.sensitivity_at_specificity",
  "tensorflow.python.ops.metrics.sparse_average_precision_at_k",
  "tensorflow.python.ops.metrics.sparse_precision_at_k",
  "tensorflow.python.ops.metrics.specificity_at_sensitivity",
  "tensorflow.python.ops.metrics.true_positives",
  "tensorflow.python.ops.nn.avg_pool",
  "tensorflow.python.ops.nn.avg_pool3d",
  "tensorflow.python.ops.nn.batch_normalization",
  "tensorflow.python.ops.nn.bias_add",
  "tensorflow.python.ops.nn.conv2d_transpose",
  "tensorflow.python.ops.nn.conv3d_transpose",
  "tensorflow.python.ops.nn.convolution",
  "tensorflow.python.ops.nn.crelu",
  "tensorflow.python.ops.nn.depthwise_conv2d",
  "tensorflow.python.ops.nn.dropout",
  "tensorflow.python.ops.nn.elu",
  "tensorflow.python.ops.nn.embedding_lookup",
  "tensorflow.python.ops.nn.fused_batch_norm",
  "tensorflow.python.ops.nn.in_top_k",
  "tensorflow.python.ops.nn.l2_loss",
  "tensorflow.python.ops.nn.l2_normalize",
  "tensorflow.python.ops.nn.local_response_normalization",
  "tensorflow.python.ops.nn.log_poisson_loss",
  "tensorflow.python.ops.nn.log_softmax",
  "tensorflow.python.ops.nn.max_pool",
  "tensorflow.python.ops.nn.max_pool3d",
  "tensorflow.python.ops.nn.moments",
  "tensorflow.python.ops.nn.pool",
  "tensorflow.python.ops.nn.relu",
  "tensorflow.python.ops.nn.relu6",
  "tensorflow.python.ops.nn.separable_conv2d",
  "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.python.ops.nn.softmax",
  "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
  "tensorflow.python.ops.nn.softplus",
  "tensorflow.python.ops.nn.softsign",
  "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.python.ops.nn.top_k",
  "tensorflow.python.ops.nn.weighted_moments",
  "tensorflow.python.ops.nn.xw_plus_b",
  "tensorflow.python.ops.nn.zero_fraction",
  "tensorflow.python.ops.nn_ops.bias_add_grad",
  "tensorflow.python.ops.nn_ops.conv2d",
  "tensorflow.python.ops.nn_ops.conv2d_backprop_filter",
  "tensorflow.python.ops.nn_ops.conv2d_backprop_input",
  "tensorflow.python.ops.nn_ops.conv3d",
  "tensorflow.python.ops.nn_ops.conv3d_backprop_filter_v2",
  "tensorflow.python.ops.nn_ops.conv3d_backprop_input_v2",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_filter",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_input",
  "tensorflow.python.ops.nn_ops.dilation2d_backprop_filter",
  "tensorflow.python.ops.nn_ops.dilation2d_backprop_input",
  "tensorflow.python.ops.nn_ops.l2_loss",
  "tensorflow.python.ops.nn_ops.relu",
  "tensorflow.python.ops.nn_ops.softplus",
  "tensorflow.python.ops.parsing_ops.decode_csv",
  "tensorflow.python.ops.parsing_ops.decode_raw",
  "tensorflow.python.ops.parsing_ops.string_to_number",
  "tensorflow.python.ops.resource_variable_ops.assign_variable_op",
  "tensorflow.python.ops.resource_variable_ops.resource_scatter_add",
  "tensorflow.python.ops.rnn_cell.BasicLSTMCell",
  "tensorflow.python.ops.rnn_cell.RNNCell",
  "tensorflow.python.ops.sdca_ops.sdca_fprint",
  "tensorflow.python.ops.sdca_ops.sdca_optimizer",
  "tensorflow.python.ops.sdca_ops.sdca_shrink_l1",
  "tensorflow.python.ops.sets.set_difference",
  "tensorflow.python.ops.sets.set_intersection",
  "tensorflow.python.ops.sets.set_size",
  "tensorflow.python.ops.sets.set_union",
  "tensorflow.python.ops.standard_ops.abs",
  "tensorflow.python.ops.standard_ops.cast",
  "tensorflow.python.ops.standard_ops.greater",
  "tensorflow.python.ops.standard_ops.less",
  "tensorflow.python.ops.standard_ops.matmul",
  "tensorflow.python.ops.standard_ops.multiply",
  "tensorflow.python.ops.standard_ops.one_hot",
  "tensorflow.python.ops.standard_ops.reduce_mean",
  "tensorflow.python.ops.standard_ops.reduce_sum",
  "tensorflow.python.ops.standard_ops.tensordot",
  "tensorflow.python.ops.standard_ops.to_float",
  "tensorflow.python.ops.standard_ops.to_int64",
  "tensorflow.python.ops.state_ops.count_up_to",
  "tensorflow.python.ops.state_ops.scatter_add",
  "tensorflow.python.ops.state_ops.scatter_div",
  "tensorflow.python.ops.state_ops.scatter_mul",
  "tensorflow.python.ops.state_ops.scatter_nd_add",
  "tensorflow.python.ops.state_ops.scatter_nd_sub",
  "tensorflow.python.ops.state_ops.scatter_nd_update",
  "tensorflow.python.ops.state_ops.scatter_sub",
  "tensorflow.python.ops.state_ops.scatter_update",
  "tensorflow.python.ops.string_ops.as_string",
  "tensorflow.python.ops.string_ops.string_join",
  "tensorflow.python.ops.string_ops.string_to_hash_bucket",
  "tensorflow.python.ops.string_ops.string_to_hash_bucket_fast",
  "tensorflow.python.ops.string_ops.string_to_hash_bucket_strong",
  "tensorflow.python.ops.string_ops.substr",
  "tensorflow.python.ops.variable_scope.truncated_normal_initializer",
  "tensorflow.python.ops.variables.get_or_create_global_step",
  "tensorflow.python.ops.variables.model_variable",
  "tensorflow.python.platform.flags.BooleanParser",
  "tensorflow.python.platform.googletest.TestCase",
  "tensorflow.python.platform.googletest.TestCase.assertCountEqual",
  "tensorflow.python.platform.googletest.TestCase.assertRaisesRegex",
  "tensorflow.python.pywrap_tensorflow.AppendToFile",
  "tensorflow.python.pywrap_tensorflow.CopyFile",
  "tensorflow.python.pywrap_tensorflow.CreateBufferedInputStream",
  "tensorflow.python.pywrap_tensorflow.CreateDir",
  "tensorflow.python.pywrap_tensorflow.CreateWritableFile",
  "tensorflow.python.pywrap_tensorflow.CudaSupportsHalfMatMulAndConv",
  "tensorflow.python.pywrap_tensorflow.DeleteFile",
  "tensorflow.python.pywrap_tensorflow.DeleteRecursively",
  "tensorflow.python.pywrap_tensorflow.DeleteStatSummarizer",
  "tensorflow.python.pywrap_tensorflow.EqualGraphDefWrapper",
  "tensorflow.python.pywrap_tensorflow.FileExists",
  "tensorflow.python.pywrap_tensorflow.FileStatistics",
  "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION",
  "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_CONSUMER",
  "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_PRODUCER",
  "tensorflow.python.pywrap_tensorflow.GetChildren",
  "tensorflow.python.pywrap_tensorflow.GetMatchingFiles",
  "tensorflow.python.pywrap_tensorflow.GetPythonWrappers",
  "tensorflow.python.pywrap_tensorflow.InitializePyTrampoline",
  "tensorflow.python.pywrap_tensorflow.IsDirectory",
  "tensorflow.python.pywrap_tensorflow.IsGoogleCudaEnabled",
  "tensorflow.python.pywrap_tensorflow.NewCheckpointReader",
  "tensorflow.python.pywrap_tensorflow.NewStatSummarizer",
  "tensorflow.python.pywrap_tensorflow.PyRecordReader_New",
  "tensorflow.python.pywrap_tensorflow.PyServer_Join",
  "tensorflow.python.pywrap_tensorflow.PyServer_Start",
  "tensorflow.python.pywrap_tensorflow.ReadFromStream",
  "tensorflow.python.pywrap_tensorflow.RecursivelyCreateDir",
  "tensorflow.python.pywrap_tensorflow.RenameFile",
  "tensorflow.python.pywrap_tensorflow.RunCppShapeInference",
  "tensorflow.python.pywrap_tensorflow.Set_TF_Status_from_Status",
  "tensorflow.python.pywrap_tensorflow.Stat",
  "tensorflow.python.pywrap_tensorflow.StatSummarizer",
  "tensorflow.python.pywrap_tensorflow.TF_AddControlInput",
  "tensorflow.python.pywrap_tensorflow.TF_AddInput",
  "tensorflow.python.pywrap_tensorflow.TF_AddInputList",
  "tensorflow.python.pywrap_tensorflow.TF_CloseDeprecatedSession",
  "tensorflow.python.pywrap_tensorflow.TF_DeleteBuffer",
  "tensorflow.python.pywrap_tensorflow.TF_DeleteDeprecatedSession",
  "tensorflow.python.pywrap_tensorflow.TF_DeleteGraph",
  "tensorflow.python.pywrap_tensorflow.TF_DeleteLibraryHandle",
  "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus",
  "tensorflow.python.pywrap_tensorflow.TF_ExtendGraph",
  "tensorflow.python.pywrap_tensorflow.TF_FinishOperation",
  "tensorflow.python.pywrap_tensorflow.TF_GetBuffer",
  "tensorflow.python.pywrap_tensorflow.TF_GetCode",
  "tensorflow.python.pywrap_tensorflow.TF_GetOpList",
  "tensorflow.python.pywrap_tensorflow.TF_LoadLibrary",
  "tensorflow.python.pywrap_tensorflow.TF_Message",
  "tensorflow.python.pywrap_tensorflow.TF_NewBuffer",
  "tensorflow.python.pywrap_tensorflow.TF_NewBufferFromString",
  "tensorflow.python.pywrap_tensorflow.TF_NewOperation",
  "tensorflow.python.pywrap_tensorflow.TF_NewStatus",
  "tensorflow.python.pywrap_tensorflow.TF_OptimizeGraph",
  "tensorflow.python.pywrap_tensorflow.TF_Output",
  "tensorflow.python.pywrap_tensorflow.TF_PRun",
  "tensorflow.python.pywrap_tensorflow.TF_PRunSetup",
  "tensorflow.python.pywrap_tensorflow.TF_Reset",
  "tensorflow.python.pywrap_tensorflow.TF_Run",
  "tensorflow.python.pywrap_tensorflow.TF_SetAttrValueProto",
  "tensorflow.python.pywrap_tensorflow.TryFindKernelClass",
  "tensorflow.python.pywrap_tensorflow.do_quantize_training_on_graphdef",
  "tensorflow.python.pywrap_tensorflow.list_devices",
  "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
  "tensorflow.python.saved_model.builder.save",
  "tensorflow.python.saved_model.constants.ASSETS_KEY.any_list.value",
  "tensorflow.python.saved_model.constants.LEGACY_INIT_OP_KEY.node_list.value",
  "tensorflow.python.saved_model.constants.MAIN_OP_KEY.node_list.value",
  "tensorflow.python.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY.CopyFrom",
  "tensorflow.python.summary.summary.FileWriterCache.get",
  "tensorflow.python.summary.summary.value.add",
  "tensorflow.python.summary.text_summary.TextSummaryPluginAsset.plugin_name",
  "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
  "tensorflow.python.training.optimizer.apply_gradients",
  "tensorflow.python.training.optimizer.compute_gradients",
  "tensorflow.python.training.queue_runner.QueueRunner",
  "tensorflow.python.training.queue_runner.add_queue_runner",
  "tensorflow.python.training.queue_runner.start_queue_runners",
  "tensorflow.python.training.saver.recover_last_checkpoints",
  "tensorflow.python.training.saver.restore",
  "tensorflow.python.training.saver.save",
  "tensorflow.python.training.session_manager.recover_session",
  "tensorflow.python.training.summary_io.SummaryWriterCache.clear",
  "tensorflow.python.training.summary_io.SummaryWriterCache.get",
  "tensorflow.python.training.supervisor.PrepareSession",
  "tensorflow.python.training.supervisor.ShouldStop",
  "tensorflow.python.training.supervisor.StartQueueRunners",
  "tensorflow.python.training.supervisor.Stop",
  "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
  "tensorflow.python.training.supervisor.save_path",
  "tensorflow.python.training.supervisor.saver.save",
  "tensorflow.python.training.training_ops.apply_adadelta",
  "tensorflow.python.training.training_ops.apply_adagrad",
  "tensorflow.python.training.training_ops.apply_adagrad_da",
  "tensorflow.python.training.training_ops.apply_adam",
  "tensorflow.python.training.training_ops.apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.apply_ftrl",
  "tensorflow.python.training.training_ops.apply_gradient_descent",
  "tensorflow.python.training.training_ops.apply_momentum",
  "tensorflow.python.training.training_ops.apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.apply_rms_prop",
  "tensorflow.python.training.training_ops.resource_apply_adadelta",
  "tensorflow.python.training.training_ops.resource_apply_adagrad",
  "tensorflow.python.training.training_ops.resource_apply_adagrad_da",
  "tensorflow.python.training.training_ops.resource_apply_adam",
  "tensorflow.python.training.training_ops.resource_apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.resource_apply_ftrl",
  "tensorflow.python.training.training_ops.resource_apply_gradient_descent",
  "tensorflow.python.training.training_ops.resource_apply_momentum",
  "tensorflow.python.training.training_ops.resource_apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.resource_apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.resource_apply_rms_prop",
  "tensorflow.python.training.training_ops.resource_sparse_apply_adadelta",
  "tensorflow.python.training.training_ops.resource_sparse_apply_adagrad",
  "tensorflow.python.training.training_ops.resource_sparse_apply_adagrad_da",
  "tensorflow.python.training.training_ops.resource_sparse_apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.resource_sparse_apply_ftrl",
  "tensorflow.python.training.training_ops.resource_sparse_apply_momentum",
  "tensorflow.python.training.training_ops.resource_sparse_apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.resource_sparse_apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.resource_sparse_apply_rms_prop",
  "tensorflow.python.training.training_ops.sparse_apply_adadelta",
  "tensorflow.python.training.training_ops.sparse_apply_adagrad",
  "tensorflow.python.training.training_ops.sparse_apply_adagrad_da",
  "tensorflow.python.training.training_ops.sparse_apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.sparse_apply_ftrl",
  "tensorflow.python.training.training_ops.sparse_apply_momentum",
  "tensorflow.python.training.training_ops.sparse_apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.sparse_apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.sparse_apply_rms_prop",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.summary.scalar",
  "tensorflow.to_int64",
  "tensorflow.train.AdamOptimizer",
  "tensorflow.train.GradientDescentOptimizer",
  "tensorflow.transpose",
  "tensorflow.truncated_normal",
  "tensorflow.zeros",
  "tensors_type",
  "testSerializer",
  "test_method",
  "test_method.__doc__",
  "test_tokenizer.unescape_test",
  "textwrap",
  "textwrap.dedent",
  "textwrap.wrap",
  "thread.get_ident",
  "threading",
  "threading.Event",
  "threading.Lock",
  "threading.RLock",
  "threading.Thread",
  "threading.current_thread",
  "threading.local",
  "time",
  "time.gmtime",
  "time.localtime",
  "time.mktime",
  "time.sleep",
  "time.strftime",
  "time.time",
  "timeit",
  "timeit.Timer",
  "to_proto",
  "toc.slugify",
  "toc.stashedHTML2text",
  "toc.unique",
  "token",
  "token.LBRACE",
  "token.LPAR",
  "token.LSQB",
  "token.RBRACE",
  "token.RPAR",
  "token.RSQB",
  "tokenizer.HTMLTokenizer",
  "tokenizer.HTMLTokenizer.__iter__",
  "toolz.merge",
  "trace_inputs",
  "traceback",
  "traceback.extract_stack",
  "traceback.format_exc",
  "traceback.format_list",
  "traceback.format_stack",
  "transform.Transform",
  "transform_cls",
  "transform_matrix_offset_center",
  "treebuilders._base.Marker",
  "treebuilders.etree.tag_regexp.match",
  "treebuilders.getTreeBuilder",
  "treeprocessors.InlineProcessor",
  "treeprocessors.Treeprocessor",
  "treeprocessors.build_treeprocessors",
  "treewalkers.getTreeWalker",
  "trie.Trie",
  "tril_ids",
  "type.__name__",
  "type.__new__",
  "types",
  "types.ClassType",
  "types.FunctionType",
  "types.GeneratorType",
  "types.LambdaType",
  "types.MethodType",
  "types.ModuleType",
  "types.ModuleType.__getattribute__",
  "types.ModuleType.__name__",
  "types.NoneType",
  "unicode",
  "unicodedata",
  "unicodedata.normalize",
  "unittest",
  "unittest.TestCase",
  "unittest.TestCase.assertEqual",
  "unittest.TestCase.assertEquals",
  "unittest.defaultTestLoader.loadTestsFromName",
  "unittest.main",
  "unittest.mock",
  "unittest2",
  "unittest2.TestCase",
  "unittest2.TestLoader.testMethodPrefix",
  "unittest2.TestResult",
  "unittest2.skip",
  "unknown_shape",
  "unpack_path_op",
  "update_num",
  "update_passthrough_outputs",
  "update_state",
  "update_str",
  "update_strs",
  "url_parse",
  "url_unquote",
  "urllib.parse.urlparse",
  "urllib.parse.urlunparse",
  "urllib.request.Request",
  "urllib.request.parse_http_list",
  "urllib2.Request",
  "urllib2.parse_http_list",
  "urlparse.urlparse",
  "urlparse.urlunparse",
  "util.AMP_SUBSTITUTE",
  "util.AtomicString",
  "util.ETX",
  "util.HTML_PLACEHOLDER_RE.sub",
  "util.INLINE_PLACEHOLDER",
  "util.INLINE_PLACEHOLDER_RE.sub",
  "util.PY3",
  "util.Processor",
  "util.STX",
  "util.TAG_PLACEHOLDER",
  "util.etree",
  "util.etree.Comment",
  "util.etree.Element",
  "util.etree.ElementTree",
  "util.etree.PI",
  "util.etree.ProcessingInstruction",
  "util.etree.QName",
  "util.etree.SubElement",
  "util.etree.test_comment",
  "util.int2str",
  "util.isBlockLevel",
  "util.parseBoolValue",
  "util.string_type",
  "util.text_type",
  "utils.default_etree",
  "utils.isSurrogatePair",
  "utils.moduleFactoryFactory",
  "utils.supports_lone_surrogates",
  "utils.surrogatePairToCodepoint",
  "uuid",
  "uuid.UUID",
  "uuid.uuid1",
  "uuid.uuid4",
  "v",
  "v_type",
  "value",
  "walker",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.resetwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "watchdog.events.FileSystemEventHandler",
  "weakref",
  "weakref.WeakKeyDictionary",
  "weakref.proxy",
  "weight_variable",
  "weighted_loss",
  "werkzeug",
  "werkzeug.__version__",
  "werkzeug.__version__.encode",
  "werkzeug._compat.BytesIO",
  "werkzeug._compat.PY2",
  "werkzeug._compat.fix_tuple_repr",
  "werkzeug._compat.implements_bool",
  "werkzeug._compat.implements_iterator",
  "werkzeug._compat.implements_to_string",
  "werkzeug._compat.int_to_byte",
  "werkzeug._compat.integer_types",
  "werkzeug._compat.iter_bytes",
  "werkzeug._compat.iteritems",
  "werkzeug._compat.iterkeys",
  "werkzeug._compat.iterlists",
  "werkzeug._compat.itervalues",
  "werkzeug._compat.izip",
  "werkzeug._compat.make_literal_wrapper",
  "werkzeug._compat.native_string_result",
  "werkzeug._compat.normalize_string_tuple",
  "werkzeug._compat.range_type",
  "werkzeug._compat.reraise",
  "werkzeug._compat.string_types",
  "werkzeug._compat.text_type",
  "werkzeug._compat.to_bytes",
  "werkzeug._compat.to_native",
  "werkzeug._compat.to_unicode",
  "werkzeug._compat.try_coerce_native",
  "werkzeug._compat.unichr",
  "werkzeug._compat.wsgi_decoding_dance",
  "werkzeug._compat.wsgi_encoding_dance",
  "werkzeug._compat.wsgi_get_bytes",
  "werkzeug._internal._DictAccessorProperty",
  "werkzeug._internal._cookie_parse_impl",
  "werkzeug._internal._cookie_quote",
  "werkzeug._internal._decode_idna",
  "werkzeug._internal._empty_stream",
  "werkzeug._internal._encode_idna",
  "werkzeug._internal._get_environ",
  "werkzeug._internal._log",
  "werkzeug._internal._make_cookie_domain",
  "werkzeug._internal._missing",
  "werkzeug._internal._parse_signature",
  "werkzeug.datastructures.Accept",
  "werkzeug.datastructures.Authorization",
  "werkzeug.datastructures.CallbackDict",
  "werkzeug.datastructures.CharsetAccept",
  "werkzeug.datastructures.CombinedMultiDict",
  "werkzeug.datastructures.ContentRange",
  "werkzeug.datastructures.ETags",
  "werkzeug.datastructures.EnvironHeaders",
  "werkzeug.datastructures.FileMultiDict",
  "werkzeug.datastructures.FileStorage",
  "werkzeug.datastructures.HeaderSet",
  "werkzeug.datastructures.Headers",
  "werkzeug.datastructures.IfRange",
  "werkzeug.datastructures.ImmutableDict",
  "werkzeug.datastructures.ImmutableList",
  "werkzeug.datastructures.ImmutableMultiDict",
  "werkzeug.datastructures.ImmutableTypeConversionDict",
  "werkzeug.datastructures.LanguageAccept",
  "werkzeug.datastructures.MIMEAccept",
  "werkzeug.datastructures.MultiDict",
  "werkzeug.datastructures.Range",
  "werkzeug.datastructures.RequestCacheControl",
  "werkzeug.datastructures.ResponseCacheControl",
  "werkzeug.datastructures.TypeConversionDict",
  "werkzeug.datastructures.WWWAuthenticate",
  "werkzeug.datastructures.iter_multi_items",
  "werkzeug.debug.DebuggedApplication",
  "werkzeug.debug.tbtools.get_current_traceback",
  "werkzeug.exceptions",
  "werkzeug.exceptions.BadHost",
  "werkzeug.exceptions.ClientDisconnected",
  "werkzeug.exceptions.HTTPException",
  "werkzeug.exceptions.InternalServerError",
  "werkzeug.exceptions.MethodNotAllowed",
  "werkzeug.exceptions.NotFound",
  "werkzeug.exceptions.SecurityError",
  "werkzeug.filesystem.get_filesystem_encoding",
  "werkzeug.formparser.FormDataParser",
  "werkzeug.formparser.default_stream_factory",
  "werkzeug.http.HTTP_STATUS_CODES",
  "werkzeug.http.HTTP_STATUS_CODES.upper",
  "werkzeug.http.dump_cookie",
  "werkzeug.http.dump_header",
  "werkzeug.http.dump_options_header",
  "werkzeug.http.generate_etag",
  "werkzeug.http.http_date",
  "werkzeug.http.is_byte_range_valid",
  "werkzeug.http.is_resource_modified",
  "werkzeug.http.parse_accept_header",
  "werkzeug.http.parse_authorization_header",
  "werkzeug.http.parse_cache_control_header",
  "werkzeug.http.parse_content_range_header",
  "werkzeug.http.parse_cookie",
  "werkzeug.http.parse_date",
  "werkzeug.http.parse_etags",
  "werkzeug.http.parse_if_range_header",
  "werkzeug.http.parse_options_header",
  "werkzeug.http.parse_range_header",
  "werkzeug.http.parse_set_header",
  "werkzeug.http.parse_www_authenticate_header",
  "werkzeug.http.quote_etag",
  "werkzeug.http.quote_header_value",
  "werkzeug.http.remove_entity_headers",
  "werkzeug.http.unquote_etag",
  "werkzeug.serving",
  "werkzeug.serving.make_server",
  "werkzeug.serving.run_simple",
  "werkzeug.test.EnvironBuilder",
  "werkzeug.test.run_wsgi_app",
  "werkzeug.urls.iri_to_uri",
  "werkzeug.urls.uri_to_iri",
  "werkzeug.urls.url_decode",
  "werkzeug.urls.url_decode_stream",
  "werkzeug.urls.url_encode",
  "werkzeug.urls.url_fix",
  "werkzeug.urls.url_join",
  "werkzeug.urls.url_parse",
  "werkzeug.urls.url_quote",
  "werkzeug.urls.url_unparse",
  "werkzeug.urls.url_unquote",
  "werkzeug.useragents.UserAgent",
  "werkzeug.utils.cached_property",
  "werkzeug.utils.dump_cookie",
  "werkzeug.utils.environ_property",
  "werkzeug.utils.escape",
  "werkzeug.utils.format_string",
  "werkzeug.utils.get_content_type",
  "werkzeug.utils.header_property",
  "werkzeug.utils.import_string",
  "werkzeug.utils.redirect",
  "werkzeug.wrappers",
  "werkzeug.wrappers.BaseRequest",
  "werkzeug.wrappers.BaseResponse",
  "werkzeug.wrappers.Request",
  "werkzeug.wrappers.Request.application",
  "werkzeug.wrappers.Response",
  "werkzeug.wrappers.UserAgentMixin",
  "werkzeug.wsgi.ClosingIterator",
  "werkzeug.wsgi.SharedDataMiddleware",
  "werkzeug.wsgi.get_content_length",
  "werkzeug.wsgi.get_current_url",
  "werkzeug.wsgi.get_host",
  "werkzeug.wsgi.get_input_stream",
  "werkzeug.wsgi.make_chunk_iter",
  "werkzeug.wsgi.make_line_iter",
  "which_dequeue",
  "which_softmax",
  "with_dependencies",
  "wrapped_experiment_fn",
  "write",
  "write_binary",
  "write_colvec",
  "writer",
  "wsgiref.handlers",
  "xml.dom.Node",
  "xml.dom.Node.CDATA_SECTION_NODE",
  "xml.dom.Node.COMMENT_NODE",
  "xml.dom.Node.DOCUMENT_FRAGMENT_NODE",
  "xml.dom.Node.DOCUMENT_NODE",
  "xml.dom.Node.DOCUMENT_TYPE_NODE",
  "xml.dom.Node.ELEMENT_NODE",
  "xml.dom.Node.ENTITY_NODE",
  "xml.dom.Node.TEXT_NODE",
  "xml.dom.minidom",
  "xml.dom.pulldom.CHARACTERS",
  "xml.dom.pulldom.COMMENT",
  "xml.dom.pulldom.END_ELEMENT",
  "xml.dom.pulldom.IGNORABLE_WHITESPACE",
  "xml.dom.pulldom.START_ELEMENT",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.Comment",
  "xml.etree.ElementTree.VERSION",
  "xml.etree.cElementTree",
  "xml.etree.cElementTree.VERSION",
  "xml.etree.cElementTree.test_comment",
  "xml.sax.handler",
  "xml.sax.saxutils.escape",
  "xml.sax.saxutils.unescape",
  "xml.sax.xmlreader.AttributesNSImpl",
  "yaml",
  "zipfile",
  "zipfile.ZipFile",
  "zipfile.is_zipfile",
  "zlib",
  "zlib.adler32",
  "zlib.decompress"
 ],
 "deps": {
  "AddDecoder": [],
  "AsInt32": [],
  "AttrList": [],
  "Attributes": [],
  "BaseHTTPServer": [],
  "Composition": [],
  "EncodeNonFiniteOrRaise": [],
  "Extension": [],
  "FakeSocket": [],
  "Format": [],
  "HTMLParser": [],
  "HasField": [],
  "IPython": [],
  "IsLoopExit": [],
  "IsZero": [],
  "LimitedStream": [],
  "LocalProxy": [],
  "MakeBoundParamTest": [],
  "NodeBuilder": [],
  "OpenSSL": [],
  "Operator": [],
  "Ord": [],
  "PIL": [],
  "ParseInteger": [],
  "Queue": [],
  "SKCompat": [],
  "SkipField": [],
  "SocketServer": [],
  "StringIO": [],
  "TFDecorator": [],
  "TFShouldUseWarningWrapper": [],
  "TagByteSize": [],
  "TestLoader": [],
  "UInt64ByteSize": [],
  "WhileContext": [],
  "_CheckDurationValid": [],
  "_CheckFieldMaskMessage": [],
  "_ConsumeInt64": [],
  "_ConsumeInteger": [],
  "_ConsumeUint64": [],
  "_ConvertScalarFieldValue": [],
  "_ConvertToUnicode": [],
  "_CreateDenseMaskAndBegin": [],
  "_EventLoggerThread": [],
  "_ExpiredPerTag": [],
  "_ExtractInputShapes": [],
  "_FieldMaskTree": [],
  "_FilterGrad": [],
  "_GetAllMessageNames": [],
  "_GetFileAndLine": [],
  "_GetIntegerEnumValue": [],
  "_HashedCategoricalColumn": [],
  "_IsOpFree": [],
  "_IsWrapperMessage": [],
  "_LazyBuilder": [],
  "_LazyBuilderByColumnsToTensor": [],
  "_MaskMatrix": [],
  "_NumericColumn": [],
  "_ParseAbstractInteger": [],
  "_Parser": [],
  "_PrefixWithDot": [],
  "_Printer": [],
  "_RegressionHead": [],
  "_RoundTowardZero": [],
  "_SetGrad": [],
  "_SparseIdLookupConfig": [],
  "_SparseMatMul": [],
  "_TileForBroadcasting": [],
  "_Transformer": [],
  "_UpdateClassDictForParamTestCase": [],
  "_VarUInt64ByteSizeNoTag": [],
  "_YMMask": [],
  "__builtin__": [],
  "__future__": [],
  "__spec__": [],
  "_add_elements_to_collection": [],
  "_add_variable_collection": [],
  "_add_variable_to_collections": [],
  "_apply_all_reduce": [],
  "_apply_mask_1d": [],
  "_assert_fully_defined": [],
  "_assert_has_shape": [],
  "_assert_same_graph": [],
  "_base": [],
  "_broadcast": [],
  "_build_case": [],
  "_build_regex": [],
  "_build_variable_getter": [],
  "_callback_property": [],
  "_check_feature_columns": [],
  "_check_hooks_type": [],
  "_check_mode_valid": [],
  "_check_modification": [],
  "_check_no_sparse_tensor": [],
  "_classes": [],
  "_classification_output_alternatives": [],
  "_collect_leaf_level_columns": [],
  "_collect_leaf_level_keys": [],
  "_compat": [],
  "_compute_weighted_loss": [],
  "_convert": [],
  "_convert_to_tensor": [],
  "_copy_one_through": [],
  "_copy_some_through": [],
  "_copy_sparse_tensor": [],
  "_create_empty_constant": [],
  "_create_polynomial": [],
  "_create_ta": [],
  "_create_zero_arrays": [],
  "_create_zero_output": [],
  "_dense_tensor_to_sparse_feature_column": [],
  "_elbo": [],
  "_export_output": [],
  "_feed_fn": [],
  "_find_latest_checkpoint": [],
  "_find_variational_and_priors": [],
  "_flatten_tensor": [],
  "_flip_front_dims_to_back": [],
  "_get_arg_names_to_ok_vals": [],
  "_get_checkpoint_filename": [],
  "_get_deprecated_positional_arguments": [],
  "_get_dict": [],
  "_get_eval_metric_ops": [],
  "_get_feature_config": [],
  "_get_file_names": [],
  "_get_samples": [],
  "_get_shape_tuple": [],
  "_get_shared_name": [],
  "_get_wsgi_string": [],
  "_gru_block_cell": [],
  "_has_static_ndims": [],
  "_importance_sampler_positive_f": [],
  "_in_alternate_universe": [],
  "_indicator_labels_streaming_mean": [],
  "_iter_basic_lines": [],
  "_join": [],
  "_linear": [],
  "_log_variable": [],
  "_logspace_mean": [],
  "_lookup": [],
  "_maybe_attach_assertion": [],
  "_maybe_mask": [],
  "_maybe_store": [],
  "_median": [],
  "_move_dim_to_end": [],
  "_new_attr_context": [],
  "_normalize": [],
  "_normalize_netloc": [],
  "_object_list_uid": [],
  "_overdetermined": [],
  "_parse_example": [],
  "_parse_interval": [],
  "_parse_pairs": [],
  "_path_encode": [],
  "_predictions_streaming_mean": [],
  "_pseudorandom": [],
  "_push": [],
  "_pywrap_tensorflow_internal": [],
  "_pywrap_tensorflow_print_model_analysis_lib": [],
  "_read": [],
  "_read_keyed_batch_examples_helper": [],
  "_ready": [],
  "_reduce": [],
  "_reloader": [],
  "_remove_squeezable_dimensions": [],
  "_render": [],
  "_render_inner": [],
  "_renorm_variable": [],
  "_reverse": [],
  "_run_metrics": [],
  "_safe_embedding_lookup_sparse": [],
  "_same": [],
  "_same_value": [],
  "_sample_mean": [],
  "_scores": [],
  "_set_property": [],
  "_shape": [],
  "_shape_is_compatible_0dim": [],
  "_should_dropout": [],
  "_smart_select": [],
  "_sort_by_name": [],
  "_sparse_cross_internal": [],
  "_sparse_meta_data": [],
  "_sparse_op": [],
  "_split": [],
  "_streaming_auc": [],
  "_summary_key": [],
  "_swap_axis": [],
  "_t": [],
  "_tensor_gather_helper": [],
  "_tensordot_axes": [],
  "_tensordot_reshape": [],
  "_thread": [],
  "_tile": [],
  "_to_labels_tensor": [],
  "_to_list": [],
  "_training_examples_and_variables": [],
  "_transpose_if_necessary": [],
  "_true_getter": [],
  "_type": [],
  "_underdetermined": [],
  "_unflatten_sparse_tensor": [],
  "_update_renorm_variable": [],
  "_url_decode_impl": [],
  "_url_unquote_legacy": [],
  "_valid": [],
  "_validate": [],
  "_verify_loss_fn_args": [],
  "_verify_static_batch_size_equality": [],
  "_walk": [],
  "_wrap_custom_loss_fn": [],
  "_write": [],
  "abc": [],
  "add": [],
  "add_qname": [],
  "adjust": [],
  "advantage_fn": [],
  "allowed_attributes": [],
  "app": [],
  "app_factory": [],
  "append": [],
  "append_fn": [],
  "append_metric": [],
  "apply_callbacks": [],
  "apply_transform": [],
  "argparse": [],
  "as_dimension": [],
  "as_dtype": [],
  "as_shape": [],
  "assert_less": [],
  "assert_less_equal": [],
  "assert_type": [],
  "assign_label": [],
  "ast": [],
  "atexit": [],
  "attention": [],
  "attn_bw_cell": [],
  "attn_fw_cell": [],
  "attn_rnn_cell": [],
  "auth_property": [],
  "axis_size": [],
  "backports": [],
  "base64": [],
  "baseline_fn": [],
  "batch_to_space_nd": [],
  "batcher": [],
  "benchmark": [],
  "bias_variable": [],
  "bisect": [],
  "bleach": [],
  "blockparser": [],
  "blockprocessors": [],
  "buffer_or_memoryview": [],
  "build_etree_ul": [],
  "build_map_of_graph": [],
  "builtins": [],
  "bw_cell": [],
  "bytes": [],
  "bzzzzzzz": [],
  "c": [],
  "cElementTree": [],
  "cPickle": [],
  "cStringIO": [],
  "call_cell": [],
  "call_cpp_shape_fn": [],
  "callback": [],
  "callbacks": [],
  "calls_update": [],
  "canonical": [],
  "cat": [],
  "categorical_vocabulary": [],
  "cb": [],
  "cell": [],
  "cell_fn": [],
  "cg_state": [],
  "cgls_state": [],
  "charade": [],
  "chardet": [],
  "check_dim_list": [],
  "check_feature_columns": [],
  "check_y_dtype": [],
  "cinput_op_match": [],
  "close_func": [],
  "cls": [],
  "cmp": [],
  "code": [],
  "codecName": [],
  "codecs": [],
  "codehilite": [],
  "codepoint2name": [],
  "collections": [],
  "compile_ops": [],
  "compressed_steps": [],
  "computation": [],
  "compute_auc": [],
  "compute_mean": [],
  "compute_mean_accuracy": [],
  "compute_mean_iou": [],
  "compute_precision": [],
  "compute_recall": [],
  "compute_sensitivity_at_specificity": [],
  "compute_specificity_at_sensitivity": [],
  "compute_value_size": [],
  "constants": [],
  "consumer_op_match": [],
  "contextlib": [],
  "control_trigger": [],
  "conv2d": [],
  "conv_fn": [],
  "conversion_func": [],
  "convert": [],
  "convert_custom_objects": [],
  "convert_image_dtype": [],
  "convert_to_batch_shape": [],
  "cookielib": [],
  "copier": [],
  "copy": [],
  "copy_reg": [],
  "copyreg": [],
  "core_metadata": [],
  "csv": [],
  "ctypes": [],
  "curses": [],
  "custom_getter": [],
  "dask": [],
  "dask_io": [],
  "data_feeder_cls": [],
  "data_generator": [],
  "datetime": [],
  "datrie": [],
  "decimal": [],
  "decode": [],
  "decode_value": [],
  "decoder": [],
  "delays": [],
  "delegate_get_names": [],
  "delete_filter": [],
  "delta": [],
  "depth": [],
  "detab": [],
  "device_function": [],
  "dict": [],
  "difflib": [],
  "div": [],
  "do_match": [],
  "dom": [],
  "dump_header": [],
  "elementtree": [],
  "elementwise_function": [],
  "email": [],
  "encode_message": [],
  "encode_value": [],
  "encoding": [],
  "enqueue_callable": [],
  "enqueue_fn": [],
  "enter": [],
  "equal_": [],
  "errno": [],
  "escape": [],
  "etree": [],
  "etree_lxml": [],
  "exc_type": [],
  "execute": [],
  "exhaust": [],
  "expand": [],
  "expand_dims": [],
  "experiment_fn": [],
  "extensions": [],
  "external": [],
  "extract": [],
  "extract_batch_shape": [],
  "f": [],
  "factory": [],
  "fake": [],
  "fake_quant_with_min_max_args_gradient": [],
  "fake_quant_with_min_max_vars_gradient": [],
  "fake_quant_with_min_max_vars_per_channel_gradient": [],
  "feed_dict": [],
  "feed_fn": [],
  "fetch_fn": [],
  "fft_fn": [],
  "field_decoder": [],
  "field_setter": [],
  "file_loader": [],
  "filesystem": [],
  "fill": [],
  "filled_embedding_rnn_decoder": [],
  "filter": [],
  "filters": [],
  "finder": [],
  "flip_matrix_to_vector": [],
  "flip_vector_to_matrix": [],
  "fn": [],
  "fn1": [],
  "fn2": [],
  "fnmatch": [],
  "form_property": [],
  "format": [],
  "from_proto": [],
  "full_steps": [],
  "func": [],
  "function": [],
  "functools": [],
  "fw_cell": [],
  "gather": [],
  "gc": [],
  "genshi": [],
  "genshistream": [],
  "getMetaclass": [],
  "get_current_step": [],
  "get_data_files": [],
  "get_default_graph": [],
  "get_feed_fn": [],
  "get_input": [],
  "get_out_of_order": [],
  "get_placeholder": [],
  "get_signature_def_map": [],
  "getopt": [],
  "getter": [],
  "glob": [],
  "google": [],
  "grad_fn": [],
  "gradient_op": [],
  "graph_builder_class": [],
  "greenlet": [],
  "gzip": [],
  "h5py": [],
  "handle_value": [],
  "handler": [],
  "hash_func": [],
  "hashlib": [],
  "heapq": [],
  "hmac": [],
  "hotshot": [],
  "html": [],
  "html5lib": [],
  "htmlentitydefs": [],
  "htmlserializer": [],
  "http": [],
  "identity": [],
  "ifft_fn": [],
  "ihatexml": [],
  "imghdr": [],
  "imp": [],
  "impliedTagToken": [],
  "importlib": [],
  "increment": [],
  "init": [],
  "init_array": [],
  "init_func": [],
  "injecting_start_response": [],
  "inlinepatterns": [],
  "inner": [],
  "input": [],
  "input_flatten": [],
  "input_op_fn": [],
  "input_op_match": [],
  "input_pack": [],
  "inputstream": [],
  "inspect": [],
  "instance_benchmark_fn": [],
  "io": [],
  "irfft_fn": [],
  "is_byte_range_valid": [],
  "is_diagonal": [],
  "is_match_fn": [],
  "is_retriable": [],
  "is_var": [],
  "is_within": [],
  "iterate": [],
  "itermethod": [],
  "itertext": [],
  "itertools": [],
  "json": [],
  "key_func": [],
  "kl_fn": [],
  "lanzcos_bidiag_state": [],
  "layer": [],
  "layer_class": [],
  "layer_fn": [],
  "learn_io": [],
  "lf": [],
  "linear_operator": [],
  "linecache": [],
  "linkText": [],
  "linkify_nodes": [],
  "list": [],
  "loader": [],
  "local_DecodeVarint": [],
  "local_EncodeVarint": [],
  "local_ReadTag": [],
  "local_SkipField": [],
  "local_VarintSize": [],
  "local_len": [],
  "local_struct_pack": [],
  "local_unicode": [],
  "local_unpack": [],
  "log_if": [],
  "log_startup": [],
  "logger": [],
  "logging": [],
  "long": [],
  "loop_cond": [],
  "loop_fn": [],
  "loss_fn": [],
  "loss_grad_func": [],
  "lstm": [],
  "lstm_cell": [],
  "lxml": [],
  "lxmletree": [],
  "make_dims": [],
  "make_initializer": [],
  "make_list": [],
  "make_node_marker": [],
  "make_wt_initializer": [],
  "map": [],
  "map_fn": [],
  "map_func": [],
  "mark_op_as_used": [],
  "markdown": [],
  "marshal": [],
  "mask_fn": [],
  "masked_fn": [],
  "masked_metric_fn": [],
  "match_maybe_append": [],
  "math": [],
  "max_": [],
  "maybe_concatenate_auxiliary_inputs": [],
  "maybe_normalize": [],
  "merge": [],
  "merger": [],
  "message_class": [],
  "message_sizer": [],
  "message_type": [],
  "meta": [],
  "metaclass": [],
  "method": [],
  "metric": [],
  "metric_fn": [],
  "metric_op": [],
  "mimetypes": [],
  "min_": [],
  "mock": [],
  "mod": [],
  "modify_value": [],
  "moving_average": [],
  "msg": [],
  "mul": [],
  "multiprocessing": [],
  "new_default": [],
  "next_iteration": [],
  "nn_layer": [],
  "no_op": [],
  "ntpath": [],
  "numbers": [],
  "numpy": [],
  "numpy_source": [],
  "object": [],
  "odict": [],
  "old_init": [],
  "open_fn": [],
  "operation": [],
  "operator": [],
  "options_class": [],
  "optparse": [],
  "ordereddict": [],
  "orthogonalize_": [],
  "orthogonalize_once": [],
  "os": [],
  "out_el_shape": [],
  "output_axes": [],
  "output_flatten": [],
  "output_pack": [],
  "override_method": [],
  "pandas": [],
  "pandas_io": [],
  "pandas_source": [],
  "parse": [],
  "parse_fail": [],
  "parse_func": [],
  "parse_positive_float": [],
  "parse_set_header": [],
  "parser": [],
  "paths_to_delete": [],
  "pickle": [],
  "pkg_resources": [],
  "pkgutil": [],
  "portpicker": [],
  "positive_filter": [],
  "posixpath": [],
  "postprocessors": [],
  "pow_function": [],
  "pprint": [],
  "predicate": [],
  "prepare_config": [],
  "preprocessors": [],
  "print_layer_summary": [],
  "print_layer_summary_with_connections": [],
  "print_list": [],
  "print_row": [],
  "process_layer": [],
  "proto_type": [],
  "put_data_array": [],
  "put_data_array_or_dict": [],
  "py": [],
  "pydot": [],
  "pydot_ng": [],
  "pygments": [],
  "queue": [],
  "queue_creator": [],
  "queue_parsed_features": [],
  "random": [],
  "random_normal": [],
  "re": [],
  "read_colvec": [],
  "reader": [],
  "readline": [],
  "reduce_fn": [],
  "reduce_func": [],
  "reduce_sum": [],
  "ref_enter": [],
  "ref_next_iteration": [],
  "ref_switch": [],
  "reg": [],
  "reg_exp_func": [],
  "relu": [],
  "replace_nodes": [],
  "requests": [],
  "reshape": [],
  "response": [],
  "result_class": [],
  "result_type": [],
  "rf": [],
  "rfft_fn": [],
  "rnn_cell": [],
  "routing_gradient": [],
  "s": [],
  "safe_log": [],
  "sanitizer": [],
  "scalar_transform_cls": [],
  "scipy": [],
  "select_filter": [],
  "serializeElement": [],
  "serializers": [],
  "series": [],
  "series_transform_cls": [],
  "setmethod": [],
  "setuptools": [],
  "sh": [],
  "shape_func": [],
  "shutil": [],
  "sigmoid": [],
  "signal": [],
  "simple_add_results": [],
  "simplejson": [],
  "six": [],
  "sklearn": [],
  "slice_shape": [],
  "socket": [],
  "socketserver": [],
  "softmax": [],
  "sort_key": [],
  "space_to_batch_nd": [],
  "squared_frobenius_norm": [],
  "sre": [],
  "sre_constants": [],
  "ssl": [],
  "start_response": [],
  "stats_func": [],
  "step_function": [],
  "storage": [],
  "store_f": [],
  "str": [],
  "str_to_hash_bucket": [],
  "streaming_metrics_fn": [],
  "string": [],
  "string_to_bytes": [],
  "strip": [],
  "strip_wrapping_parentheses": [],
  "struct": [],
  "sub": [],
  "subfeed_dtype": [],
  "subprocess": [],
  "support": [],
  "switch": [],
  "sys": [],
  "tanh": [],
  "tarfile": [],
  "target_predictor_fn": [],
  "tarray": [],
  "task": [],
  "tempfile": [],
  "tensor_to_inference_result": [],
  "tensorflow": [],
  "tensors_type": [],
  "testSerializer": [],
  "test_method": [],
  "test_tokenizer": [],
  "textwrap": [],
  "thread": [],
  "threading": [],
  "time": [],
  "timeit": [],
  "to_proto": [],
  "toc": [],
  "token": [],
  "tokenizer": [],
  "toolz": [],
  "trace_inputs": [],
  "traceback": [],
  "transform": [],
  "transform_cls": [],
  "transform_matrix_offset_center": [],
  "treebuilders": [],
  "treeprocessors": [],
  "treewalkers": [],
  "trie": [],
  "tril_ids": [],
  "type": [],
  "types": [],
  "unicode": [],
  "unicodedata": [],
  "unittest": [],
  "unittest2": [],
  "unknown_shape": [],
  "unpack_path_op": [],
  "update_num": [],
  "update_passthrough_outputs": [],
  "update_state": [],
  "update_str": [],
  "update_strs": [],
  "url_parse": [],
  "url_unquote": [],
  "urllib": [],
  "urllib2": [],
  "urlparse": [],
  "util": [],
  "utils": [],
  "uuid": [],
  "v": [],
  "v_type": [],
  "value": [],
  "walker": [],
  "warnings": [],
  "watchdog": [],
  "weakref": [],
  "weight_variable": [],
  "weighted_loss": [],
  "werkzeug": [],
  "which_dequeue": [],
  "which_softmax": [],
  "with_dependencies": [],
  "wrapped_experiment_fn": [],
  "write": [],
  "write_binary": [],
  "write_colvec": [],
  "writer": [],
  "wsgiref": [],
  "xml": [],
  "yaml": [],
  "zipfile": [],
  "zlib": []
 }
}