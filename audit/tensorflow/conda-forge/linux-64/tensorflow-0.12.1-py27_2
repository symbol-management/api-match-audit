{
 "bad": [
  "AddDecoder",
  "AsInt32",
  "BytesList",
  "CIFAR10Record",
  "Composition",
  "Cr",
  "EncodeNonFiniteOrRaise",
  "Estimator",
  "Format",
  "HasField",
  "IPython.html.notebookapp.NotebookApp",
  "IPython.html.notebookapp.NotebookApp.instance",
  "IPython.kernel.zmq.kernelapp.IPKernelApp",
  "IPython.kernel.zmq.kernelapp.IPKernelApp.instance",
  "Identity",
  "IsLoopExit",
  "LogErrorOnce",
  "MakeBoundParamTest",
  "Operator",
  "Ord",
  "ParseInteger",
  "Shared",
  "SkipField",
  "StringIO",
  "StringIO.StringIO",
  "TagByteSize",
  "TestInput",
  "TestLoader",
  "UInt64ByteSize",
  "Var",
  "WhileContext",
  "_CheckDurationValid",
  "_CheckFieldMaskMessage",
  "_ConsumeInt64",
  "_ConsumeInteger",
  "_ConsumeUint64",
  "_ConvertScalarFieldValue",
  "_ConvertToUnicode",
  "_CreateDenseMaskAndBegin",
  "_ExpiredPerTag",
  "_ExtractInputShapes",
  "_FieldMaskTree",
  "_FilterGrad",
  "_GetAllMessageNames",
  "_GetFileAndLine",
  "_GetIntegerEnumValue",
  "_IsOpFree",
  "_IsWrapperMessage",
  "_LossCheckerHook",
  "_ParseAbstractInteger",
  "_Parser",
  "_PrefixWithDot",
  "_Printer",
  "_RoundTowardZero",
  "_SetGrad",
  "_SparseMatMul",
  "_Transformer",
  "_UpdateClassDictForParamTestCase",
  "_VarUInt64ByteSizeNoTag",
  "__spec__.submodule_search_locations",
  "_add_binary_metric",
  "_add_variable_collection",
  "_apply_mask_1d",
  "_assert_fully_defined",
  "_assert_has_shape",
  "_assert_same_graph",
  "_build_case",
  "_centered_bias",
  "_centered_bias_step",
  "_check_labels",
  "_check_logits_input_not_supported",
  "_check_mode_valid",
  "_collect_leaf_level_columns",
  "_conditional_batch",
  "_convert",
  "_copy_one_through",
  "_copy_some_through",
  "_correct_empty",
  "_create_ta",
  "_create_zero_arrays",
  "_create_zero_output",
  "_elbo",
  "_empty_tensor_like",
  "_enqueue_as_batches",
  "_expected_fixed_len_float",
  "_expected_var_len_int",
  "_feed_fn",
  "_find_variational_and_priors",
  "_flip_front_dims_to_back",
  "_get_dict",
  "_get_feature_config",
  "_get_samples",
  "_get_shape_tuple",
  "_gru_block_cell",
  "_hash_func_def",
  "_head_prefixed",
  "_importance_sampler_positive_f",
  "_in_alternate_universe",
  "_input_fn",
  "_linear",
  "_log_variable",
  "_logspace_mean",
  "_loss",
  "_maybe_store",
  "_median",
  "_move_dim_to_end",
  "_new_attr_context",
  "_overdetermined",
  "_pywrap_tensorflow",
  "_pywrap_tensorflow.AppendToFile",
  "_pywrap_tensorflow.Basename",
  "_pywrap_tensorflow.BufferedInputStream_ReadLineAsString",
  "_pywrap_tensorflow.BufferedInputStream_Seek",
  "_pywrap_tensorflow.BufferedInputStream_Tell",
  "_pywrap_tensorflow.BufferedInputStream_swigregister",
  "_pywrap_tensorflow.CheckpointReader_GetTensor",
  "_pywrap_tensorflow.CheckpointReader__HasTensor",
  "_pywrap_tensorflow.CheckpointReader_debug_string",
  "_pywrap_tensorflow.CheckpointReader_get_variable_to_shape_map",
  "_pywrap_tensorflow.CheckpointReader_swigregister",
  "_pywrap_tensorflow.CleanPath",
  "_pywrap_tensorflow.CopyFile",
  "_pywrap_tensorflow.CreateBufferedInputStream",
  "_pywrap_tensorflow.CreateDir",
  "_pywrap_tensorflow.CreateURI",
  "_pywrap_tensorflow.CreateWritableFile",
  "_pywrap_tensorflow.CudaSupportsHalfMatMulAndConv",
  "_pywrap_tensorflow.DeleteFile",
  "_pywrap_tensorflow.DeleteRecursively",
  "_pywrap_tensorflow.DeleteStatSummarizer",
  "_pywrap_tensorflow.Dirname",
  "_pywrap_tensorflow.DoQuantizeTrainingOnGraphDefHelper",
  "_pywrap_tensorflow.EqualGraphDefWrapper",
  "_pywrap_tensorflow.EventsWriter_Close",
  "_pywrap_tensorflow.EventsWriter_FileName",
  "_pywrap_tensorflow.EventsWriter_Flush",
  "_pywrap_tensorflow.EventsWriter__WriteSerializedEvent",
  "_pywrap_tensorflow.EventsWriter_swigregister",
  "_pywrap_tensorflow.Extension",
  "_pywrap_tensorflow.FileExists",
  "_pywrap_tensorflow.FileStatistics_is_directory_get",
  "_pywrap_tensorflow.FileStatistics_is_directory_set",
  "_pywrap_tensorflow.FileStatistics_length_get",
  "_pywrap_tensorflow.FileStatistics_length_set",
  "_pywrap_tensorflow.FileStatistics_mtime_nsec_get",
  "_pywrap_tensorflow.FileStatistics_mtime_nsec_set",
  "_pywrap_tensorflow.FileStatistics_swigregister",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_CONSUMER",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_CONSUMER_swigconstant",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_PRODUCER",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_PRODUCER_swigconstant",
  "_pywrap_tensorflow.GRAPH_DEF_VERSION_swigconstant",
  "_pywrap_tensorflow.GetChildren",
  "_pywrap_tensorflow.GetMatchingFiles",
  "_pywrap_tensorflow.GetPythonWrappers",
  "_pywrap_tensorflow.InitializePyTrampoline",
  "_pywrap_tensorflow.IsAbsolutePath",
  "_pywrap_tensorflow.IsDirectory",
  "_pywrap_tensorflow.IsGoogleCudaEnabled",
  "_pywrap_tensorflow.ListDevices",
  "_pywrap_tensorflow.NewStatSummarizer",
  "_pywrap_tensorflow.ParseURI",
  "_pywrap_tensorflow.PickUnusedPortOrDie",
  "_pywrap_tensorflow.PyRecordReader_Close",
  "_pywrap_tensorflow.PyRecordReader_GetNext",
  "_pywrap_tensorflow.PyRecordReader_New",
  "_pywrap_tensorflow.PyRecordReader_offset",
  "_pywrap_tensorflow.PyRecordReader_record",
  "_pywrap_tensorflow.PyRecordReader_swigregister",
  "_pywrap_tensorflow.PyRecordWriter_Close",
  "_pywrap_tensorflow.PyRecordWriter_New",
  "_pywrap_tensorflow.PyRecordWriter_WriteRecord",
  "_pywrap_tensorflow.PyRecordWriter_swigregister",
  "_pywrap_tensorflow.PyServer_Join",
  "_pywrap_tensorflow.PyServer_New",
  "_pywrap_tensorflow.PyServer_Start",
  "_pywrap_tensorflow.PyServer_Stop",
  "_pywrap_tensorflow.ReadFileToString",
  "_pywrap_tensorflow.ReadFromStream",
  "_pywrap_tensorflow.RecursivelyCreateDir",
  "_pywrap_tensorflow.RenameFile",
  "_pywrap_tensorflow.RunCppShapeInference",
  "_pywrap_tensorflow.ServerInterface_swigregister",
  "_pywrap_tensorflow.ServerInterface_target",
  "_pywrap_tensorflow.Set_TF_Status_from_Status",
  "_pywrap_tensorflow.Stat",
  "_pywrap_tensorflow.StatSummarizer_GetOutputString",
  "_pywrap_tensorflow.StatSummarizer_PrintStepStats",
  "_pywrap_tensorflow.StatSummarizer_ProcessStepStats",
  "_pywrap_tensorflow.StatSummarizer_ProcessStepStatsStr",
  "_pywrap_tensorflow.StatSummarizer_swigregister",
  "_pywrap_tensorflow.Status_OK",
  "_pywrap_tensorflow.Status_ToString",
  "_pywrap_tensorflow.Status_Update",
  "_pywrap_tensorflow.Status___eq__",
  "_pywrap_tensorflow.Status___ne__",
  "_pywrap_tensorflow.Status_code",
  "_pywrap_tensorflow.Status_error_message",
  "_pywrap_tensorflow.Status_ok",
  "_pywrap_tensorflow.Status_swigregister",
  "_pywrap_tensorflow.TF_Buffer_swigregister",
  "_pywrap_tensorflow.TF_CloseDeprecatedSession",
  "_pywrap_tensorflow.TF_DeleteBuffer",
  "_pywrap_tensorflow.TF_DeleteDeprecatedSession",
  "_pywrap_tensorflow.TF_DeleteSessionOptions",
  "_pywrap_tensorflow.TF_DeleteStatus",
  "_pywrap_tensorflow.TF_ExtendGraph",
  "_pywrap_tensorflow.TF_GetBuffer",
  "_pywrap_tensorflow.TF_GetCode",
  "_pywrap_tensorflow.TF_GetOpList",
  "_pywrap_tensorflow.TF_LoadLibrary",
  "_pywrap_tensorflow.TF_Message",
  "_pywrap_tensorflow.TF_NewBuffer",
  "_pywrap_tensorflow.TF_NewBufferFromString",
  "_pywrap_tensorflow.TF_NewDeprecatedSession",
  "_pywrap_tensorflow.TF_NewStatus",
  "_pywrap_tensorflow.TF_PRun",
  "_pywrap_tensorflow.TF_PRunSetup",
  "_pywrap_tensorflow.TF_Reset_wrapper",
  "_pywrap_tensorflow.TF_Run",
  "_pywrap_tensorflow.TryFindKernelClass",
  "_pywrap_tensorflow.WritableFile_Close",
  "_pywrap_tensorflow.WritableFile_Flush",
  "_pywrap_tensorflow.WritableFile_swigregister",
  "_pywrap_tensorflow.WriteStringToFile",
  "_pywrap_tensorflow._TF_NewSessionOptions",
  "_pywrap_tensorflow._TF_SetConfig",
  "_pywrap_tensorflow._TF_SetTarget",
  "_pywrap_tensorflow.__compiler_version__",
  "_pywrap_tensorflow.__compiler_version___swigconstant",
  "_pywrap_tensorflow.__git_version__",
  "_pywrap_tensorflow.__git_version___swigconstant",
  "_pywrap_tensorflow.__lshift__",
  "_pywrap_tensorflow.__version__",
  "_pywrap_tensorflow.__version___swigconstant",
  "_pywrap_tensorflow.delete_BufferedInputStream",
  "_pywrap_tensorflow.delete_CheckpointReader",
  "_pywrap_tensorflow.delete_EventsWriter",
  "_pywrap_tensorflow.delete_FileStatistics",
  "_pywrap_tensorflow.delete_PyRecordReader",
  "_pywrap_tensorflow.delete_PyRecordWriter",
  "_pywrap_tensorflow.delete_ServerInterface",
  "_pywrap_tensorflow.delete_StatSummarizer",
  "_pywrap_tensorflow.delete_Status",
  "_pywrap_tensorflow.delete_TF_Buffer",
  "_pywrap_tensorflow.delete_WritableFile",
  "_pywrap_tensorflow_print_model_analysis_lib",
  "_pywrap_tensorflow_print_model_analysis_lib.PrintModelAnalysis",
  "_read_keyed_batch_examples_helper",
  "_reduce",
  "_remove_squeezable_dimensions",
  "_run_metrics",
  "_same",
  "_sample_mean",
  "_shape_is_compatible_0dim",
  "_sort_by_name",
  "_sparse_meta_data",
  "_streaming_sparse_true_positive_at_k",
  "_swap_axis",
  "_tensor_to_sparse_feature_column",
  "_training_examples_and_variables",
  "_transpose_if_necessary",
  "_true_getter",
  "_underdetermined",
  "_valid",
  "_weight_tensor",
  "_weighted_average_loss_metric_spec",
  "add",
  "adjust",
  "advantage_fn",
  "aff",
  "append",
  "append_fn",
  "as_dimension",
  "as_dtype",
  "as_shape",
  "assert_expected_shape",
  "assert_less",
  "assert_less_equal",
  "assertion",
  "attention",
  "axis_size",
  "baseline_fn",
  "batch_to_space_nd",
  "batcher",
  "bias_variable",
  "buffer_or_memoryview",
  "cPickle",
  "cPickle.dumps",
  "cPickle.loads",
  "call_cell",
  "call_cpp_shape_fn",
  "callback",
  "canonical",
  "categorical_vocabulary.CategoricalVocabulary",
  "cell",
  "cell.output_size",
  "cell.state_size",
  "cell_fn",
  "cg_state",
  "cgls_state",
  "check_dim_list",
  "check_feature_columns",
  "cinput_op_match",
  "cls",
  "cls.ByteSize",
  "cls.Clear",
  "cls.ClearExtension",
  "cls.ClearField",
  "cls.DiscardUnknownFields",
  "cls.FindInitializationErrors",
  "cls.FromString",
  "cls.HasExtension",
  "cls.HasField",
  "cls.IsInitialized",
  "cls.ListFields",
  "cls.MergeFrom",
  "cls.MergeFromString",
  "cls.SerializePartialToString",
  "cls.SerializeToString",
  "cls.SetInParent",
  "cls.WhichOneof",
  "cls._InternalParse",
  "cls._InternalSerialize",
  "cls._Modified",
  "cls._SetListener",
  "cls._UpdateOneofState",
  "cls.__eq__",
  "cls.__name__",
  "cls.__repr__",
  "cls.__str__",
  "cls.__unicode__",
  "cls._decoders_by_tag",
  "collections.Callable",
  "collections.Container",
  "collections.Hashable",
  "collections.Iterable",
  "collections.Mapping",
  "collections.Mapping.register",
  "collections.MutableMapping",
  "collections.MutableMapping.register",
  "collections.MutableSequence.register",
  "collections.Sequence",
  "collections.Sized",
  "compressed_steps",
  "compute_auc",
  "compute_mean",
  "compute_mean_iou",
  "compute_precision",
  "compute_recall",
  "compute_sensitivity_at_specificity",
  "compute_specificity_at_sensitivity",
  "compute_value_size",
  "consumer_op_match",
  "control_trigger",
  "conv2d",
  "conv_fn",
  "conversion_func",
  "convert_image_dtype",
  "copier",
  "copier.transform_external_input_handler",
  "copy_reg",
  "copy_reg.dispatch_table.clear",
  "copy_reg.dispatch_table.copy",
  "copy_reg.dispatch_table.update",
  "curses.A_BOLD",
  "curses.A_NORMAL",
  "curses.COLOR_BLACK",
  "curses.COLOR_BLUE",
  "curses.COLOR_GREEN",
  "curses.COLOR_MAGENTA",
  "curses.COLOR_RED",
  "curses.COLOR_WHITE",
  "curses.COLOR_YELLOW",
  "curses.KEY_DOWN",
  "curses.KEY_END",
  "curses.KEY_HOME",
  "curses.KEY_NPAGE",
  "curses.KEY_PPAGE",
  "curses.KEY_RESIZE",
  "curses.KEY_UP",
  "curses.cbreak",
  "curses.color_pair",
  "curses.echo",
  "curses.endwin",
  "curses.init_pair",
  "curses.newpad",
  "curses.newwin",
  "curses.nocbreak",
  "curses.noecho",
  "data_feeder_cls",
  "decode_value",
  "decoder",
  "delays",
  "delegate_get_names",
  "depth",
  "device_function",
  "div",
  "dummy_type",
  "elementwise_function",
  "empty_lbeta",
  "encode_message",
  "encode_value",
  "enqueue_which",
  "enter",
  "enter.name",
  "enter_fn",
  "equal_",
  "eval_in_batches",
  "exc_type",
  "expand",
  "expected",
  "extract_batch_shape",
  "extract_dask_data",
  "extract_dask_labels",
  "f",
  "f.__globals__",
  "failing_input_fn",
  "fake",
  "fake_quant_with_min_max_args_gradient",
  "fake_quant_with_min_max_vars_gradient",
  "fake_quant_with_min_max_vars_per_channel_gradient",
  "feed_dict",
  "feed_dict_fn",
  "feed_fn",
  "fetch_fn",
  "field_decoder",
  "field_setter",
  "fill",
  "filled_embedding_rnn_decoder",
  "filter.get_shape",
  "finder",
  "flip_matrix_to_vector",
  "flip_vector_to_matrix",
  "fn",
  "from_proto",
  "full_shape_to_list",
  "full_steps",
  "func",
  "func.__doc__",
  "func.__module__",
  "gather",
  "gc",
  "gc.collect",
  "get_current_step",
  "get_data_files",
  "get_deconv_dim",
  "get_default_graph",
  "get_feed_fn",
  "get_majority_input_fn",
  "get_mean_input_fn",
  "get_out_of_order",
  "get_shift_input_fn",
  "get_sin_input_fn",
  "google.protobuf._use_fast_cpp_protos",
  "google.protobuf.any_pb2",
  "google.protobuf.any_pb2.Any",
  "google.protobuf.any_pb2.DESCRIPTOR",
  "google.protobuf.any_pb2._ANY",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_BOOL",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_DOUBLE",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_ENUM",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_FLOAT",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT32",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT64",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_STRING",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT32",
  "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT64",
  "google.protobuf.descriptor.FieldDescriptor.LABEL_OPTIONAL",
  "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
  "google.protobuf.descriptor.FieldDescriptor.ProtoTypeToCppProtoType",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_BOOL",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_DOUBLE",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_ENUM",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_FLOAT",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_INT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_INT64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT64",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_STRING",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT32",
  "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT64",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor.MethodDescriptor",
  "google.protobuf.descriptor.OneofDescriptor",
  "google.protobuf.descriptor.ServiceDescriptor",
  "google.protobuf.descriptor._ParseOptions",
  "google.protobuf.descriptor._USE_C_DESCRIPTORS",
  "google.protobuf.descriptor._message.DescriptorPool",
  "google.protobuf.descriptor._message.default_pool",
  "google.protobuf.descriptor.enum_types",
  "google.protobuf.descriptor.extensions_by_name",
  "google.protobuf.descriptor.fields",
  "google.protobuf.descriptor.full_name",
  "google.protobuf.descriptor.is_extendable",
  "google.protobuf.descriptor_database",
  "google.protobuf.descriptor_pb2",
  "google.protobuf.descriptor_pb2.DESCRIPTOR",
  "google.protobuf.descriptor_pb2.FieldDescriptorProto.LABEL_OPTIONAL",
  "google.protobuf.descriptor_pb2.FieldOptions",
  "google.protobuf.descriptor_pb2.FileDescriptorProto",
  "google.protobuf.descriptor_pb2.FileDescriptorProto.FromString",
  "google.protobuf.descriptor_pb2.FileOptions",
  "google.protobuf.descriptor_pb2.MessageOptions",
  "google.protobuf.descriptor_pb2._FILEDESCRIPTORPROTO",
  "google.protobuf.descriptor_pool",
  "google.protobuf.descriptor_pool.Default",
  "google.protobuf.internal._api_implementation",
  "google.protobuf.internal._api_implementation.api_version",
  "google.protobuf.internal.api_implementation",
  "google.protobuf.internal.api_implementation.Type",
  "google.protobuf.internal.containers",
  "google.protobuf.internal.containers.MessageMap",
  "google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
  "google.protobuf.internal.containers.RepeatedScalarFieldContainer",
  "google.protobuf.internal.containers.ScalarMap",
  "google.protobuf.internal.decoder",
  "google.protobuf.internal.decoder.BoolDecoder",
  "google.protobuf.internal.decoder.BytesDecoder",
  "google.protobuf.internal.decoder.DoubleDecoder",
  "google.protobuf.internal.decoder.EnumDecoder",
  "google.protobuf.internal.decoder.Fixed32Decoder",
  "google.protobuf.internal.decoder.Fixed64Decoder",
  "google.protobuf.internal.decoder.FloatDecoder",
  "google.protobuf.internal.decoder.GroupDecoder",
  "google.protobuf.internal.decoder.Int32Decoder",
  "google.protobuf.internal.decoder.Int64Decoder",
  "google.protobuf.internal.decoder.MapDecoder",
  "google.protobuf.internal.decoder.MessageDecoder",
  "google.protobuf.internal.decoder.ReadTag",
  "google.protobuf.internal.decoder.SFixed32Decoder",
  "google.protobuf.internal.decoder.SFixed64Decoder",
  "google.protobuf.internal.decoder.SInt32Decoder",
  "google.protobuf.internal.decoder.SInt64Decoder",
  "google.protobuf.internal.decoder.SkipField",
  "google.protobuf.internal.decoder.StringDecoder",
  "google.protobuf.internal.decoder.UInt32Decoder",
  "google.protobuf.internal.decoder.UInt64Decoder",
  "google.protobuf.internal.encoder",
  "google.protobuf.internal.encoder.BoolEncoder",
  "google.protobuf.internal.encoder.BoolSizer",
  "google.protobuf.internal.encoder.BytesEncoder",
  "google.protobuf.internal.encoder.BytesSizer",
  "google.protobuf.internal.encoder.DoubleEncoder",
  "google.protobuf.internal.encoder.DoubleSizer",
  "google.protobuf.internal.encoder.EnumEncoder",
  "google.protobuf.internal.encoder.EnumSizer",
  "google.protobuf.internal.encoder.Fixed32Encoder",
  "google.protobuf.internal.encoder.Fixed32Sizer",
  "google.protobuf.internal.encoder.Fixed64Encoder",
  "google.protobuf.internal.encoder.Fixed64Sizer",
  "google.protobuf.internal.encoder.FloatEncoder",
  "google.protobuf.internal.encoder.FloatSizer",
  "google.protobuf.internal.encoder.GroupEncoder",
  "google.protobuf.internal.encoder.GroupSizer",
  "google.protobuf.internal.encoder.Int32Encoder",
  "google.protobuf.internal.encoder.Int32Sizer",
  "google.protobuf.internal.encoder.Int64Encoder",
  "google.protobuf.internal.encoder.Int64Sizer",
  "google.protobuf.internal.encoder.MapEncoder",
  "google.protobuf.internal.encoder.MapSizer",
  "google.protobuf.internal.encoder.MessageEncoder",
  "google.protobuf.internal.encoder.MessageSetItemEncoder",
  "google.protobuf.internal.encoder.MessageSetItemSizer",
  "google.protobuf.internal.encoder.MessageSizer",
  "google.protobuf.internal.encoder.SFixed32Encoder",
  "google.protobuf.internal.encoder.SFixed32Sizer",
  "google.protobuf.internal.encoder.SFixed64Encoder",
  "google.protobuf.internal.encoder.SFixed64Sizer",
  "google.protobuf.internal.encoder.SInt32Encoder",
  "google.protobuf.internal.encoder.SInt32Sizer",
  "google.protobuf.internal.encoder.SInt64Encoder",
  "google.protobuf.internal.encoder.SInt64Sizer",
  "google.protobuf.internal.encoder.StringEncoder",
  "google.protobuf.internal.encoder.StringSizer",
  "google.protobuf.internal.encoder.TagBytes",
  "google.protobuf.internal.encoder.UInt32Encoder",
  "google.protobuf.internal.encoder.UInt32Sizer",
  "google.protobuf.internal.encoder.UInt64Encoder",
  "google.protobuf.internal.encoder.UInt64Sizer",
  "google.protobuf.internal.enum_type_wrapper",
  "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
  "google.protobuf.internal.message_listener",
  "google.protobuf.internal.message_listener.NullMessageListener",
  "google.protobuf.internal.python_message",
  "google.protobuf.internal.python_message.GeneratedProtocolMessageType",
  "google.protobuf.internal.type_checkers",
  "google.protobuf.internal.type_checkers.FIELD_TYPE_TO_WIRE_TYPE",
  "google.protobuf.internal.type_checkers.GetTypeChecker",
  "google.protobuf.internal.type_checkers.Int32ValueChecker",
  "google.protobuf.internal.type_checkers.Int64ValueChecker",
  "google.protobuf.internal.type_checkers.SupportsOpenEnums",
  "google.protobuf.internal.type_checkers.TYPE_TO_BYTE_SIZE_FN",
  "google.protobuf.internal.type_checkers.TYPE_TO_DECODER",
  "google.protobuf.internal.type_checkers.TYPE_TO_ENCODER",
  "google.protobuf.internal.type_checkers.TYPE_TO_SIZER",
  "google.protobuf.internal.type_checkers.Uint32ValueChecker",
  "google.protobuf.internal.type_checkers.Uint64ValueChecker",
  "google.protobuf.internal.well_known_types",
  "google.protobuf.internal.well_known_types.WKTBASES",
  "google.protobuf.internal.wire_format",
  "google.protobuf.internal.wire_format.BoolByteSize",
  "google.protobuf.internal.wire_format.BytesByteSize",
  "google.protobuf.internal.wire_format.DoubleByteSize",
  "google.protobuf.internal.wire_format.EnumByteSize",
  "google.protobuf.internal.wire_format.Fixed32ByteSize",
  "google.protobuf.internal.wire_format.Fixed64ByteSize",
  "google.protobuf.internal.wire_format.FloatByteSize",
  "google.protobuf.internal.wire_format.GroupByteSize",
  "google.protobuf.internal.wire_format.Int32ByteSize",
  "google.protobuf.internal.wire_format.Int64ByteSize",
  "google.protobuf.internal.wire_format.IsTypePackable",
  "google.protobuf.internal.wire_format.MessageByteSize",
  "google.protobuf.internal.wire_format.PackTag",
  "google.protobuf.internal.wire_format.SFixed32ByteSize",
  "google.protobuf.internal.wire_format.SFixed64ByteSize",
  "google.protobuf.internal.wire_format.SInt32ByteSize",
  "google.protobuf.internal.wire_format.SInt64ByteSize",
  "google.protobuf.internal.wire_format.StringByteSize",
  "google.protobuf.internal.wire_format.TAG_TYPE_MASK",
  "google.protobuf.internal.wire_format.UInt32ByteSize",
  "google.protobuf.internal.wire_format.UInt64ByteSize",
  "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
  "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
  "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
  "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
  "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
  "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
  "google.protobuf.internal.wire_format.ZigZagDecode",
  "google.protobuf.internal.wire_format.ZigZagEncode",
  "google.protobuf.json_format",
  "google.protobuf.json_format.MessageToJson",
  "google.protobuf.json_format.Parse",
  "google.protobuf.message",
  "google.protobuf.message.ByteSize",
  "google.protobuf.message.DESCRIPTOR",
  "google.protobuf.message.DESCRIPTOR.full_name",
  "google.protobuf.message.DecodeError",
  "google.protobuf.message.EncodeError",
  "google.protobuf.message.MergeFromString",
  "google.protobuf.message.Message",
  "google.protobuf.message.ParseFromString",
  "google.protobuf.message._listener_for_children",
  "google.protobuf.message._unknown_fields",
  "google.protobuf.message._unknown_fields.append",
  "google.protobuf.message_factory",
  "google.protobuf.message_factory.MessageFactory",
  "google.protobuf.pyext._message.Descriptor",
  "google.protobuf.pyext._message.EnumDescriptor",
  "google.protobuf.pyext._message.EnumValueDescriptor",
  "google.protobuf.pyext._message.FieldDescriptor",
  "google.protobuf.pyext._message.FileDescriptor",
  "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
  "google.protobuf.pyext._message.MessageMeta",
  "google.protobuf.pyext._message.MethodDescriptor",
  "google.protobuf.pyext._message.OneofDescriptor",
  "google.protobuf.pyext._message.ServiceDescriptor",
  "google.protobuf.pyext._message.default_pool.Add",
  "google.protobuf.pyext._message.default_pool.AddSerializedFile",
  "google.protobuf.pyext._message.default_pool.FindEnumTypeByName",
  "google.protobuf.pyext._message.default_pool.FindExtensionByName",
  "google.protobuf.pyext._message.default_pool.FindFieldByName",
  "google.protobuf.pyext._message.default_pool.FindFileByName",
  "google.protobuf.pyext._message.default_pool.FindMessageTypeByName",
  "google.protobuf.pyext._message.default_pool.FindMethodByName",
  "google.protobuf.pyext._message.default_pool.FindOneofByName",
  "google.protobuf.pyext._message.default_pool.FindServiceByName",
  "google.protobuf.pyext.cpp_message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.source_context_pb2",
  "google.protobuf.source_context_pb2.DESCRIPTOR",
  "google.protobuf.source_context_pb2._SOURCECONTEXT",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "google.protobuf.text_encoding",
  "google.protobuf.text_encoding.CEscape",
  "google.protobuf.text_encoding.CUnescape",
  "google.protobuf.text_format",
  "google.protobuf.text_format.Merge",
  "google.protobuf.text_format.MessageToString",
  "google.protobuf.text_format.Parse",
  "google.protobuf.text_format.ParseError",
  "google.protobuf.type_pb2",
  "google.protobuf.type_pb2.DESCRIPTOR",
  "google.protobuf.type_pb2._OPTION",
  "google.protobuf.type_pb2._SYNTAX",
  "grad_fn",
  "gradient_op",
  "graph_builder_class",
  "handler",
  "hashlib.md5",
  "hashlib.sha1",
  "id_source",
  "identity",
  "increment",
  "infix_op",
  "init",
  "initializer",
  "input.dtype.base_dtype",
  "input.dtype.real_dtype",
  "input.get_shape",
  "input.shape",
  "input_flatten",
  "input_fn",
  "input_op_fn",
  "input_op_match",
  "input_pack",
  "instance_benchmark_fn",
  "is_retriable",
  "is_var",
  "is_within",
  "itertools",
  "itertools.chain",
  "itertools.cycle",
  "itertools.imap",
  "itertools.islice",
  "itertools.product",
  "itertools.repeat",
  "keep_index",
  "kl_fn",
  "l1_l2_reg",
  "l1_reg1",
  "l1_reg2",
  "lanzcos_bidiag_state",
  "layer_fn",
  "lf",
  "linear_operator",
  "local_DecodeVarint",
  "local_EncodeVarint",
  "local_ReadTag",
  "local_SkipField",
  "local_VarintSize",
  "local_len",
  "local_struct_pack",
  "local_unicode",
  "local_unpack",
  "log_if",
  "loop_cond",
  "loop_fn",
  "loss_fn",
  "loss_grad_func",
  "lstm",
  "lstm_cell",
  "lstm_cell.state_size",
  "lt_op",
  "make_dims",
  "make_initializer",
  "make_wt_initializer",
  "mark_op_as_used",
  "mask_fn",
  "match_maybe_append",
  "max_",
  "maybe_normalize",
  "merge",
  "merger",
  "message_class",
  "message_sizer",
  "message_type",
  "meta",
  "metaclass",
  "method",
  "method.name",
  "metric",
  "metric_op",
  "min_",
  "mock",
  "mod",
  "model",
  "modify_value",
  "moving_average",
  "msg",
  "mul",
  "new_default",
  "new_estimator",
  "newest",
  "next_array_size",
  "next_iteration",
  "nn_layer",
  "no_op",
  "nonempty_lbeta",
  "normalizer",
  "numpy.absolute",
  "numpy.add.reduce",
  "numpy.bool8",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.divide",
  "numpy.fabs",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.inf",
  "numpy.isinf",
  "numpy.log",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.maximum",
  "numpy.nan",
  "numpy.nextafter",
  "numpy.power",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.exponential",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.random_integers",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.sign",
  "numpy.square",
  "numpy.string_",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.unicode_",
  "numpy_source",
  "object.__getattr__",
  "object.__lt__",
  "object.__setattr__",
  "one_of",
  "op",
  "op.__name__",
  "operation",
  "operation.__doc__",
  "operation.__name__",
  "options_class",
  "ordereddict.OrderedDict",
  "orthogonalize_",
  "orthogonalize_once",
  "os.environ.get",
  "os.environ.pop",
  "os.getcwd",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.relpath",
  "os.rename",
  "os.stat",
  "output_axes",
  "output_flatten",
  "output_pack",
  "pandas_source",
  "paths_to_delete",
  "positive_filter",
  "pow_function",
  "predicate",
  "prepare_config",
  "print_list",
  "proto_type",
  "queue_creator",
  "queue_parsed_features",
  "re.IGNORECASE",
  "re.MULTILINE",
  "re.UNICODE",
  "re.VERBOSE",
  "read_colvec",
  "reduce_fn",
  "reduce_sum",
  "ref_enter",
  "ref_next_iteration",
  "ref_switch",
  "reshape",
  "result_class",
  "result_type",
  "rf",
  "right_features",
  "right_labels",
  "routing_gradient",
  "run",
  "s",
  "scalar_transform_cls",
  "series.TransformedSeries.make_repr",
  "series_transform_cls",
  "shape_func",
  "shape_func.__name__",
  "sigmoid",
  "signal.SIGINT",
  "signal.SIG_DFL",
  "six.moves.BaseHTTPServer",
  "six.moves.BaseHTTPServer.BaseHTTPRequestHandler",
  "six.moves.BaseHTTPServer.HTTPServer",
  "six.moves._thread.get_ident",
  "six.moves.copyreg",
  "six.moves.range",
  "six.moves.range.__name__",
  "six.moves.reduce",
  "six.moves.socketserver",
  "six.moves.socketserver.ThreadingMixIn",
  "six.moves.urllib",
  "six.moves.urllib.parse",
  "six.moves.urllib.parse.parse_qs",
  "six.moves.urllib.parse.urlencode",
  "six.moves.urllib.parse.urlparse",
  "six.moves.urllib.request.urlretrieve",
  "six.moves.xrange",
  "six.moves.zip",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.cluster.KMeans",
  "sklearn.cross_validation.train_test_split",
  "sklearn.datasets",
  "sklearn.datasets.load_iris",
  "sklearn.exceptions.NotFittedError",
  "sklearn.grid_search.GridSearchCV",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.log_loss",
  "sklearn.metrics.mean_squared_error",
  "sklearn.utils.validation.NotFittedError",
  "slice_shape",
  "socket.error",
  "socket.gaierror",
  "socket.gethostbyname",
  "socket.gethostname",
  "softmax",
  "sort_key",
  "space_to_batch_nd",
  "stats_func",
  "streaming_metrics_fn",
  "string_to_bytes",
  "struct.Struct",
  "struct.calcsize",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "sub",
  "subfeed_dtype",
  "switch",
  "sys",
  "sys._getframe",
  "sys.argv",
  "sys.argv.extend",
  "sys.argv.index",
  "sys.argv.pop",
  "sys.argv.remove",
  "sys.exc_info",
  "sys.exit",
  "sys.flags.interactive",
  "sys.float_info.max",
  "sys.getdlopenflags",
  "sys.gettotalrefcount",
  "sys.maxint",
  "sys.maxsize",
  "sys.meta_path",
  "sys.meta_path.append",
  "sys.modules",
  "sys.modules.main",
  "sys.platform",
  "sys.platform.startswith",
  "sys.ps1",
  "sys.setdlopenflags",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version",
  "sys.version_info",
  "sys.version_info.major",
  "t",
  "tanh",
  "target_predictor_fn",
  "tarray",
  "task",
  "tensor_to_inference_result",
  "tensorflow.AttrValue",
  "tensorflow.ConfigProto",
  "tensorflow.Dimension",
  "tensorflow.FIFOQueue",
  "tensorflow.FixedLenFeature",
  "tensorflow.FixedLenSequenceFeature",
  "tensorflow.FixedLengthRecordReader",
  "tensorflow.Graph",
  "tensorflow.GraphDef",
  "tensorflow.GraphKeys.ASSET_FILEPATHS",
  "tensorflow.GraphKeys.GLOBAL_VARIABLES",
  "tensorflow.GraphKeys.LOCAL_VARIABLES",
  "tensorflow.GraphKeys.LOSSES",
  "tensorflow.GraphKeys.QUEUE_RUNNERS",
  "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
  "tensorflow.GraphKeys.SAVERS",
  "tensorflow.GraphKeys.SUMMARIES",
  "tensorflow.GraphKeys.TABLE_INITIALIZERS",
  "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
  "tensorflow.GraphKeys.TRAIN_OP",
  "tensorflow.GraphKeys.UPDATE_OPS",
  "tensorflow.IdentityReader",
  "tensorflow.IndexedSlices",
  "tensorflow.InteractiveSession",
  "tensorflow.NodeDef",
  "tensorflow.OpError",
  "tensorflow.Operation",
  "tensorflow.Print",
  "tensorflow.RandomShuffleQueue",
  "tensorflow.Session",
  "tensorflow.SparseTensor",
  "tensorflow.SparseTensor.from_value",
  "tensorflow.SparseTensorValue",
  "tensorflow.Summary",
  "tensorflow.TFRecordReader",
  "tensorflow.Tensor",
  "tensorflow.TensorArray",
  "tensorflow.TensorShape",
  "tensorflow.TextLineReader",
  "tensorflow.VarLenFeature",
  "tensorflow.Variable",
  "tensorflow.__file__",
  "tensorflow.__init__._LazyContribLoader",
  "tensorflow.abs",
  "tensorflow.acos",
  "tensorflow.add",
  "tensorflow.add_n",
  "tensorflow.add_to_collection",
  "tensorflow.all_variables",
  "tensorflow.app.flags",
  "tensorflow.app.flags.DEFINE_bool",
  "tensorflow.app.flags.DEFINE_boolean",
  "tensorflow.app.flags.DEFINE_integer",
  "tensorflow.app.flags.DEFINE_string",
  "tensorflow.app.flags.FLAGS",
  "tensorflow.app.run",
  "tensorflow.argmax",
  "tensorflow.asin",
  "tensorflow.assert_less_equal",
  "tensorflow.assert_positive",
  "tensorflow.assign",
  "tensorflow.assign_add",
  "tensorflow.atan",
  "tensorflow.batch_matmul",
  "tensorflow.bool",
  "tensorflow.boolean_mask",
  "tensorflow.case",
  "tensorflow.cast",
  "tensorflow.ceil",
  "tensorflow.cholesky",
  "tensorflow.compat.as_bytes",
  "tensorflow.compat.as_text",
  "tensorflow.concat",
  "tensorflow.cond",
  "tensorflow.conj",
  "tensorflow.constant",
  "tensorflow.constant_initializer",
  "tensorflow.contrib.distributions.Distribution",
  "tensorflow.contrib.distributions.kl",
  "tensorflow.contrib.factorization.COSINE_DISTANCE",
  "tensorflow.contrib.factorization.GMM",
  "tensorflow.contrib.factorization.GmmAlgorithm",
  "tensorflow.contrib.factorization.KMEANS_PLUS_PLUS_INIT",
  "tensorflow.contrib.factorization.KMeansClustering",
  "tensorflow.contrib.factorization.RANDOM_INIT",
  "tensorflow.contrib.factorization.WALSModel",
  "tensorflow.contrib.factorization.gmm",
  "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_COVS_VARIABLE",
  "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_VARIABLE",
  "tensorflow.contrib.framework.arg_scope",
  "tensorflow.contrib.framework.assert_global_step",
  "tensorflow.contrib.framework.assert_scalar",
  "tensorflow.contrib.framework.convert_to_tensor_or_sparse_tensor",
  "tensorflow.contrib.framework.create_global_step",
  "tensorflow.contrib.framework.deprecated",
  "tensorflow.contrib.framework.deprecated_arg_values",
  "tensorflow.contrib.framework.deprecated_args",
  "tensorflow.contrib.framework.get_global_step",
  "tensorflow.contrib.framework.get_graph_from_inputs",
  "tensorflow.contrib.framework.get_or_create_global_step",
  "tensorflow.contrib.framework.get_variables",
  "tensorflow.contrib.framework.get_variables_by_name",
  "tensorflow.contrib.framework.is_tensor",
  "tensorflow.contrib.framework.list_variables",
  "tensorflow.contrib.framework.load_variable",
  "tensorflow.contrib.framework.local_variable",
  "tensorflow.contrib.framework.model_variable",
  "tensorflow.contrib.framework.python.ops.add_arg_scope",
  "tensorflow.contrib.framework.tensor_util",
  "tensorflow.contrib.framework.tensor_util.remove_squeezable_dimensions",
  "tensorflow.contrib.labeled_tensor.python.ops.ops.reduce_sum.__doc__",
  "tensorflow.contrib.labeled_tensor.python.ops.ops.reduce_sum.__name__",
  "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
  "tensorflow.contrib.layers.adaptive_clipping_fn",
  "tensorflow.contrib.layers.apply_regularization",
  "tensorflow.contrib.layers.avg_pool2d",
  "tensorflow.contrib.layers.batch_norm",
  "tensorflow.contrib.layers.bias_add",
  "tensorflow.contrib.layers.binary_svm_target",
  "tensorflow.contrib.layers.bucketized_column",
  "tensorflow.contrib.layers.conv2d",
  "tensorflow.contrib.layers.conv2d_in_plane",
  "tensorflow.contrib.layers.conv2d_transpose",
  "tensorflow.contrib.layers.convolution2d",
  "tensorflow.contrib.layers.convolution2d_transpose",
  "tensorflow.contrib.layers.create_feature_spec_for_parsing",
  "tensorflow.contrib.layers.crossed_column",
  "tensorflow.contrib.layers.dropout",
  "tensorflow.contrib.layers.embedding_column",
  "tensorflow.contrib.layers.embedding_lookup_unique",
  "tensorflow.contrib.layers.feature_column",
  "tensorflow.contrib.layers.feature_column.DataFrameColumn",
  "tensorflow.contrib.layers.feature_column._BucketizedColumn",
  "tensorflow.contrib.layers.feature_column._CrossedColumn",
  "tensorflow.contrib.layers.feature_column._RealValuedColumn",
  "tensorflow.contrib.layers.feature_column._SparseColumn",
  "tensorflow.contrib.layers.feature_column._WeightedSparseColumn",
  "tensorflow.contrib.layers.flatten",
  "tensorflow.contrib.layers.fully_connected",
  "tensorflow.contrib.layers.hashed_embedding_column",
  "tensorflow.contrib.layers.hashed_embedding_lookup",
  "tensorflow.contrib.layers.hashed_embedding_lookup_sparse",
  "tensorflow.contrib.layers.infer_real_valued_columns",
  "tensorflow.contrib.layers.initializers.xavier_initializer",
  "tensorflow.contrib.layers.input_from_feature_columns",
  "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
  "tensorflow.contrib.layers.l1_l2_regularizer",
  "tensorflow.contrib.layers.l1_regularizer",
  "tensorflow.contrib.layers.l2_regularizer",
  "tensorflow.contrib.layers.layer_norm",
  "tensorflow.contrib.layers.legacy_fully_connected",
  "tensorflow.contrib.layers.legacy_relu",
  "tensorflow.contrib.layers.linear",
  "tensorflow.contrib.layers.make_place_holder_tensors_for_base_features",
  "tensorflow.contrib.layers.max_pool2d",
  "tensorflow.contrib.layers.multi_class_target",
  "tensorflow.contrib.layers.one_hot_column",
  "tensorflow.contrib.layers.one_hot_encoding",
  "tensorflow.contrib.layers.optimize_loss",
  "tensorflow.contrib.layers.parse_feature_columns_from_examples",
  "tensorflow.contrib.layers.parse_feature_columns_from_sequence_examples",
  "tensorflow.contrib.layers.pool",
  "tensorflow.contrib.layers.python.layers.feature_column.columns",
  "tensorflow.contrib.layers.python.layers.feature_column.insert_transformed_feature",
  "tensorflow.contrib.layers.python.layers.feature_column.name",
  "tensorflow.contrib.layers.python.layers.feature_column.source_column",
  "tensorflow.contrib.layers.python.layers.feature_column.sparse_id_column",
  "tensorflow.contrib.layers.real_valued_column",
  "tensorflow.contrib.layers.regression_target",
  "tensorflow.contrib.layers.relu",
  "tensorflow.contrib.layers.repeat",
  "tensorflow.contrib.layers.safe_embedding_lookup_sparse",
  "tensorflow.contrib.layers.separable_conv2d",
  "tensorflow.contrib.layers.sequence_input_from_feature_columns",
  "tensorflow.contrib.layers.shared_embedding_columns",
  "tensorflow.contrib.layers.softmax",
  "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
  "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
  "tensorflow.contrib.layers.sparse_column_with_keys",
  "tensorflow.contrib.layers.sparse_ops.dense_to_sparse_tensor",
  "tensorflow.contrib.layers.stack",
  "tensorflow.contrib.layers.sum_regularizer",
  "tensorflow.contrib.layers.summarize_activation",
  "tensorflow.contrib.layers.summarize_collection",
  "tensorflow.contrib.layers.summarize_tensor",
  "tensorflow.contrib.layers.transform_features",
  "tensorflow.contrib.layers.unit_norm",
  "tensorflow.contrib.layers.variance_scaling_initializer",
  "tensorflow.contrib.layers.weighted_sparse_column",
  "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
  "tensorflow.contrib.layers.xavier_initializer",
  "tensorflow.contrib.layers.xavier_initializer_conv2d",
  "tensorflow.contrib.learn.Classifier",
  "tensorflow.contrib.learn.DNNClassifier",
  "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
  "tensorflow.contrib.learn.DNNLinearCombinedRegressor",
  "tensorflow.contrib.learn.DNNRegressor",
  "tensorflow.contrib.learn.Environment.CLOUD",
  "tensorflow.contrib.learn.Estimator",
  "tensorflow.contrib.learn.Evaluable",
  "tensorflow.contrib.learn.Experiment",
  "tensorflow.contrib.learn.LinearClassifier",
  "tensorflow.contrib.learn.LinearRegressor",
  "tensorflow.contrib.learn.LogisticRegressor",
  "tensorflow.contrib.learn.LogisticRegressor.ACCURACY_BASELINE",
  "tensorflow.contrib.learn.LogisticRegressor.ACCURACY_MEAN",
  "tensorflow.contrib.learn.LogisticRegressor.AUC",
  "tensorflow.contrib.learn.LogisticRegressor.PRECISION_MEAN",
  "tensorflow.contrib.learn.LogisticRegressor.PREDICTION_MEAN",
  "tensorflow.contrib.learn.LogisticRegressor.RECALL_MEAN",
  "tensorflow.contrib.learn.LogisticRegressor.TARGET_MEAN",
  "tensorflow.contrib.learn.ModeKeys.EVAL",
  "tensorflow.contrib.learn.ModeKeys.INFER",
  "tensorflow.contrib.learn.ModeKeys.TRAIN",
  "tensorflow.contrib.learn.NotFittedError",
  "tensorflow.contrib.learn.RunConfig",
  "tensorflow.contrib.learn.SKCompat",
  "tensorflow.contrib.learn.SVM",
  "tensorflow.contrib.learn.TaskType.MASTER",
  "tensorflow.contrib.learn.TaskType.PS",
  "tensorflow.contrib.learn.TaskType.WORKER",
  "tensorflow.contrib.learn.TensorForestEstimator",
  "tensorflow.contrib.learn.TensorForestLossHook",
  "tensorflow.contrib.learn.Trainable",
  "tensorflow.contrib.learn.__init__.__all__",
  "tensorflow.contrib.learn.classifier.classification_signature_fn",
  "tensorflow.contrib.learn.datasets.base.Dataset",
  "tensorflow.contrib.learn.datasets.base.load_csv_with_header",
  "tensorflow.contrib.learn.datasets.load_boston",
  "tensorflow.contrib.learn.datasets.load_iris",
  "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
  "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
  "tensorflow.contrib.learn.io.read_batch_examples",
  "tensorflow.contrib.learn.io.read_batch_record_features",
  "tensorflow.contrib.learn.io.read_keyed_batch_examples",
  "tensorflow.contrib.learn.models.linear_regression_zero_init",
  "tensorflow.contrib.learn.models.logistic_regression_zero_init",
  "tensorflow.contrib.learn.monitors.BaseMonitor",
  "tensorflow.contrib.learn.monitors.ExportMonitor",
  "tensorflow.contrib.learn.monitors.ValidationMonitor",
  "tensorflow.contrib.learn.python.learn.DNNClassifier",
  "tensorflow.contrib.learn.python.learn.DataFrame",
  "tensorflow.contrib.learn.python.learn.LinearClassifier",
  "tensorflow.contrib.learn.python.learn.LinearRegressor",
  "tensorflow.contrib.learn.python.learn.PredefinedSeries",
  "tensorflow.contrib.learn.python.learn.RunConfig",
  "tensorflow.contrib.learn.python.learn.Series",
  "tensorflow.contrib.learn.python.learn.TensorFlowTransform",
  "tensorflow.contrib.learn.python.learn.TransformedSeries",
  "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
  "tensorflow.contrib.learn.python.learn.dataframe.dataframe.columns",
  "tensorflow.contrib.learn.python.learn.datasets.__init__.DATASETS",
  "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.RNNKeys.FINAL_STATE_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.RNNKeys.PREDICTIONS_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.RNNKeys.PROBABILITIES_KEY",
  "tensorflow.contrib.learn.python.learn.estimators.head.head_ops",
  "tensorflow.contrib.learn.python.learn.estimators.head.logits_dimension",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY_BASELINE",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.ACCURACY_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.AUC",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.LABEL_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.LOSS",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.PRECISION_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.PREDICTION_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.metric_key.MetricKey.RECALL_MEAN",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.EVAL",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.INFER",
  "tensorflow.contrib.learn.python.learn.estimators.model_fn.ModeKeys.TRAIN",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.CLASSES",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.LOGISTIC",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.LOGITS",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.PROBABILITIES",
  "tensorflow.contrib.learn.python.learn.estimators.prediction_key.PredictionKey.SCORES",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.Environment.GOOGLE",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.Environment.LOCAL",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.MASTER",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.PS",
  "tensorflow.contrib.learn.python.learn.estimators.run_config.TaskType.WORKER",
  "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator",
  "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator.request_stop",
  "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
  "tensorflow.contrib.learn.python.learn.io.extract_pandas_data",
  "tensorflow.contrib.learn.python.learn.io.extract_pandas_labels",
  "tensorflow.contrib.learn.python.learn.ops.categorical_variable",
  "tensorflow.contrib.learn.python.learn.ops.embedding_lookup",
  "tensorflow.contrib.learn.python.learn.ops.one_hot_matrix",
  "tensorflow.contrib.learn.python.learn.ops.rnn_decoder",
  "tensorflow.contrib.learn.python.learn.ops.seq2seq_inputs",
  "tensorflow.contrib.learn.python.learn.ops.sequence_classifier",
  "tensorflow.contrib.learn.python.learn.ops.softmax_classifier",
  "tensorflow.contrib.learn.python.learn.parameter",
  "tensorflow.contrib.learn.python.learn.preprocessing.CategoricalVocabulary",
  "tensorflow.contrib.learn.python.learn.run_config",
  "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
  "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
  "tensorflow.contrib.learn.queue_parsed_features",
  "tensorflow.contrib.learn.read_keyed_batch_features",
  "tensorflow.contrib.lookup.MutableHashTable",
  "tensorflow.contrib.losses.hinge_loss",
  "tensorflow.contrib.losses.log_loss",
  "tensorflow.contrib.losses.sigmoid_cross_entropy",
  "tensorflow.contrib.losses.sparse_softmax_cross_entropy",
  "tensorflow.contrib.ndlstm.lstm1d",
  "tensorflow.contrib.ndlstm.lstm2d",
  "tensorflow.contrib.ndlstm.misc",
  "tensorflow.contrib.rnn.AttentionCellWrapper",
  "tensorflow.contrib.session_bundle.constants.ASSETS_KEY.any_list.value",
  "tensorflow.contrib.session_bundle.constants.GRAPH_KEY.any_list.value",
  "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY.node_list.value",
  "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY.any_list.value",
  "tensorflow.contrib.slim.dataset.Dataset",
  "tensorflow.contrib.slim.dataset_data_provider.DatasetDataProvider",
  "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
  "tensorflow.contrib.slim.nets.inception.inception_v1",
  "tensorflow.contrib.slim.nets.inception.inception_v1_arg_scope",
  "tensorflow.contrib.slim.nets.inception.inception_v1_base",
  "tensorflow.contrib.slim.nets.inception.inception_v2",
  "tensorflow.contrib.slim.nets.inception.inception_v2_arg_scope",
  "tensorflow.contrib.slim.nets.inception.inception_v2_base",
  "tensorflow.contrib.slim.nets.inception.inception_v3",
  "tensorflow.contrib.slim.nets.inception.inception_v3_arg_scope",
  "tensorflow.contrib.slim.nets.inception.inception_v3_base",
  "tensorflow.contrib.slim.nets.overfeat.overfeat",
  "tensorflow.contrib.slim.nets.resnet_utils.Block",
  "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
  "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
  "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
  "tensorflow.contrib.slim.nets.resnet_utils.subsample",
  "tensorflow.contrib.slim.nets.resnet_v1.bottleneck",
  "tensorflow.contrib.slim.nets.resnet_v1.resnet_v1",
  "tensorflow.contrib.slim.nets.resnet_v2.bottleneck",
  "tensorflow.contrib.slim.nets.resnet_v2.resnet_v2",
  "tensorflow.contrib.slim.nets.vgg.vgg_16",
  "tensorflow.contrib.slim.nets.vgg.vgg_19",
  "tensorflow.contrib.slim.nets.vgg.vgg_a",
  "tensorflow.contrib.slim.parallel_reader.ParallelReader",
  "tensorflow.contrib.slim.parallel_reader.get_data_files",
  "tensorflow.contrib.slim.parallel_reader.parallel_read",
  "tensorflow.contrib.slim.parallel_reader.single_pass_read",
  "tensorflow.contrib.slim.prefetch_queue.prefetch_queue",
  "tensorflow.contrib.slim.queues.QueueRunners",
  "tensorflow.contrib.slim.tfexample_decoder.BoundingBox",
  "tensorflow.contrib.slim.tfexample_decoder.Image",
  "tensorflow.contrib.slim.tfexample_decoder.ItemHandlerCallback",
  "tensorflow.contrib.slim.tfexample_decoder.SparseTensor",
  "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
  "tensorflow.contrib.slim.tfexample_decoder.Tensor",
  "tensorflow.contrib.tensorboard.plugins.projector.__init__.PROJECTOR_FILENAME",
  "tensorflow.contrib.testing.FakeSummaryWriter",
  "tensorflow.contrib.testing.FakeSummaryWriter.install",
  "tensorflow.contrib.testing.FakeSummaryWriter.uninstall",
  "tensorflow.contrib.testing.latest_events",
  "tensorflow.contrib.testing.simple_values_from_events",
  "tensorflow.control_dependencies",
  "tensorflow.convert_to_tensor",
  "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
  "tensorflow.core.framework.function_pb2.FunctionDef.Node",
  "tensorflow.core.framework.graph_pb2.GraphDef.FromString",
  "tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
  "tensorflow.core.framework.summary_pb2.Summary.Value",
  "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim",
  "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
  "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
  "tensorflow.core.protobuf.saver_pb2.SaverDef.V2",
  "tensorflow.core.util.event_pb2.Event.FromString",
  "tensorflow.core.util.event_pb2.LogMessage.DEBUG",
  "tensorflow.core.util.event_pb2.LogMessage.ERROR",
  "tensorflow.core.util.event_pb2.LogMessage.FATAL",
  "tensorflow.core.util.event_pb2.LogMessage.INFO",
  "tensorflow.core.util.event_pb2.LogMessage.WARN",
  "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
  "tensorflow.core.util.event_pb2.SessionLog.START",
  "tensorflow.core.util.event_pb2.SessionLog.STOP",
  "tensorflow.cos",
  "tensorflow.create_partitioned_variables",
  "tensorflow.decode_json_example",
  "tensorflow.decode_raw",
  "tensorflow.device",
  "tensorflow.diag",
  "tensorflow.diag_part",
  "tensorflow.digamma",
  "tensorflow.div",
  "tensorflow.dynamic_partition",
  "tensorflow.equal",
  "tensorflow.erf",
  "tensorflow.erfc",
  "tensorflow.errors.FailedPreconditionError",
  "tensorflow.errors.InvalidArgumentError",
  "tensorflow.errors.OutOfRangeError",
  "tensorflow.exp",
  "tensorflow.expand_dims",
  "tensorflow.fill",
  "tensorflow.fixed_size_partitioner",
  "tensorflow.flags.FLAGS",
  "tensorflow.float16",
  "tensorflow.float32",
  "tensorflow.float32.as_datatype_enum",
  "tensorflow.float32.min",
  "tensorflow.float64",
  "tensorflow.floor",
  "tensorflow.gather",
  "tensorflow.gather_nd",
  "tensorflow.get_collection",
  "tensorflow.get_default_graph",
  "tensorflow.get_default_session",
  "tensorflow.get_variable",
  "tensorflow.get_variable_scope",
  "tensorflow.gfile.DeleteRecursively",
  "tensorflow.gfile.Exists",
  "tensorflow.gfile.FastGFile",
  "tensorflow.gfile.GFile",
  "tensorflow.gfile.MakeDirs",
  "tensorflow.gfile.Open",
  "tensorflow.global_variables_initializer",
  "tensorflow.gradients",
  "tensorflow.greater",
  "tensorflow.greater_equal",
  "tensorflow.group",
  "tensorflow.histogram_summary",
  "tensorflow.identity",
  "tensorflow.igamma",
  "tensorflow.igammac",
  "tensorflow.image.decode_jpeg",
  "tensorflow.image.decode_png",
  "tensorflow.image.encode_jpeg",
  "tensorflow.image.encode_png",
  "tensorflow.image.per_image_standardization",
  "tensorflow.image.random_brightness",
  "tensorflow.image.random_contrast",
  "tensorflow.image.random_flip_left_right",
  "tensorflow.image.resize_bilinear",
  "tensorflow.image.resize_image_with_crop_or_pad",
  "tensorflow.image_summary",
  "tensorflow.import_graph_def",
  "tensorflow.initialize_all_tables",
  "tensorflow.initialize_all_variables",
  "tensorflow.initialize_variables",
  "tensorflow.int16",
  "tensorflow.int32",
  "tensorflow.int32.as_datatype_enum",
  "tensorflow.int64",
  "tensorflow.int8",
  "tensorflow.less",
  "tensorflow.less_equal",
  "tensorflow.lgamma",
  "tensorflow.linspace",
  "tensorflow.load_op_library",
  "tensorflow.local_variables",
  "tensorflow.local_variables_initializer",
  "tensorflow.log",
  "tensorflow.logging.fatal",
  "tensorflow.logging.info",
  "tensorflow.logging.warning",
  "tensorflow.logical_and",
  "tensorflow.logical_not",
  "tensorflow.logical_or",
  "tensorflow.logical_xor",
  "tensorflow.make_template",
  "tensorflow.map_fn",
  "tensorflow.matmul",
  "tensorflow.matrix_determinant",
  "tensorflow.matrix_diag_part",
  "tensorflow.matrix_inverse",
  "tensorflow.matrix_solve",
  "tensorflow.matrix_transpose",
  "tensorflow.matrix_triangular_solve",
  "tensorflow.maximum",
  "tensorflow.merge_all_summaries",
  "tensorflow.merge_summary",
  "tensorflow.min_max_variable_partitioner",
  "tensorflow.minimum",
  "tensorflow.mod",
  "tensorflow.mul",
  "tensorflow.name_scope",
  "tensorflow.neg",
  "tensorflow.nn",
  "tensorflow.nn.bias_add",
  "tensorflow.nn.bidirectional_dynamic_rnn",
  "tensorflow.nn.bidirectional_rnn",
  "tensorflow.nn.conv2d",
  "tensorflow.nn.conv2d_transpose",
  "tensorflow.nn.crelu",
  "tensorflow.nn.dropout",
  "tensorflow.nn.dynamic_rnn",
  "tensorflow.nn.elu",
  "tensorflow.nn.embedding_lookup",
  "tensorflow.nn.fixed_unigram_candidate_sampler",
  "tensorflow.nn.in_top_k",
  "tensorflow.nn.l2_loss",
  "tensorflow.nn.l2_normalize",
  "tensorflow.nn.local_response_normalization",
  "tensorflow.nn.log_softmax",
  "tensorflow.nn.lrn",
  "tensorflow.nn.max_pool",
  "tensorflow.nn.relu",
  "tensorflow.nn.relu6",
  "tensorflow.nn.rnn_cell.BasicLSTMCell",
  "tensorflow.nn.rnn_cell.GRUCell",
  "tensorflow.nn.rnn_cell.RNNCell",
  "tensorflow.nn.sampled_softmax_loss",
  "tensorflow.nn.seq2seq.embedding_attention_seq2seq",
  "tensorflow.nn.sigmoid",
  "tensorflow.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.nn.softmax",
  "tensorflow.nn.softmax_cross_entropy_with_logits",
  "tensorflow.nn.softplus",
  "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.nn.tanh",
  "tensorflow.nn.top_k",
  "tensorflow.nn.xw_plus_b",
  "tensorflow.nn.zero_fraction",
  "tensorflow.no_op",
  "tensorflow.not_equal",
  "tensorflow.one_hot",
  "tensorflow.ones",
  "tensorflow.ones_like",
  "tensorflow.pad",
  "tensorflow.parse_single_example",
  "tensorflow.placeholder",
  "tensorflow.polygamma",
  "tensorflow.pow",
  "tensorflow.python.ConfigProto",
  "tensorflow.python.GPUOptions",
  "tensorflow.python.__init__._allowed_symbols",
  "tensorflow.python.__init__._default_dlopen_flags",
  "tensorflow.python.__init__._exported_dunders",
  "tensorflow.python.__init__.msg",
  "tensorflow.python.client.session.close",
  "tensorflow.python.client.session.run",
  "tensorflow.python.debug.cli.curses_ui.CursesUI.CLI_TERMINATOR_KEY",
  "tensorflow.python.debug.stepper.NodeStepper.FEED_TYPE_CLIENT",
  "tensorflow.python.debug.stepper.NodeStepper.FEED_TYPE_HANDLE",
  "tensorflow.python.debug.stepper.NodeStepper.FEED_TYPE_OVERRIDE",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.DEBUG_RUN",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.INVOKE_STEPPER",
  "tensorflow.python.debug.wrappers.framework.OnRunStartAction.NON_DEBUG_RUN",
  "tensorflow.python.debug.wrappers.framework.OnSessionInitAction.PROCEED",
  "tensorflow.python.debug.wrappers.local_cli_wrapper.LocalCLIDebugWrapperSession.__init__",
  "tensorflow.python.framework.dtypes.int32.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.int32.base_dtype",
  "tensorflow.python.framework.dtypes.qint16.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.qint32.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.qint8.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.quint16.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.quint8.as_numpy_dtype",
  "tensorflow.python.framework.dtypes.sqrt",
  "tensorflow.python.framework.errors.AbortedError",
  "tensorflow.python.framework.errors.AlreadyExistsError",
  "tensorflow.python.framework.errors.CancelledError",
  "tensorflow.python.framework.errors.DeadlineExceededError",
  "tensorflow.python.framework.errors.FailedPreconditionError",
  "tensorflow.python.framework.errors.InvalidArgumentError",
  "tensorflow.python.framework.errors.NotFoundError",
  "tensorflow.python.framework.errors.OpError",
  "tensorflow.python.framework.errors.OutOfRangeError",
  "tensorflow.python.framework.errors.PermissionDeniedError",
  "tensorflow.python.framework.errors.error_code_from_exception_type",
  "tensorflow.python.framework.errors.exception_type_from_error_code",
  "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
  "tensorflow.python.framework.fast_tensor_util",
  "tensorflow.python.framework.fast_tensor_util.AppendBoolArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendComplex128ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendComplex64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendFloat64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt16ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendInt8ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendObjectArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendUInt16ArrayToTensorProto",
  "tensorflow.python.framework.fast_tensor_util.AppendUInt8ArrayToTensorProto",
  "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS",
  "tensorflow.python.framework.ops.GraphKeys.ASSET_FILEPATHS",
  "tensorflow.python.framework.ops.GraphKeys.BIASES",
  "tensorflow.python.framework.ops.GraphKeys.CONCATENATED_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.COND_CONTEXT",
  "tensorflow.python.framework.ops.GraphKeys.EVAL_STEP",
  "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
  "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_RESOURCES",
  "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.LOSSES",
  "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.MOVING_AVERAGE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
  "tensorflow.python.framework.ops.GraphKeys.READY_FOR_LOCAL_INIT_OP",
  "tensorflow.python.framework.ops.GraphKeys.READY_OP",
  "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
  "tensorflow.python.framework.ops.GraphKeys.RESOURCES",
  "tensorflow.python.framework.ops.GraphKeys.SAVEABLE_OBJECTS",
  "tensorflow.python.framework.ops.GraphKeys.SAVERS",
  "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
  "tensorflow.python.framework.ops.GraphKeys.SUMMARY_OP",
  "tensorflow.python.framework.ops.GraphKeys.TABLE_INITIALIZERS",
  "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_RESOURCE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
  "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
  "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
  "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
  "tensorflow.python.framework.ops.GraphKeys.WHILE_CONTEXT",
  "tensorflow.python.framework.ops.Tensor.OVERLOADABLE_OPERATORS",
  "tensorflow.python.framework.ops.append",
  "tensorflow.python.framework.ops.control_dependency",
  "tensorflow.python.framework.ops.dtypes.complex128",
  "tensorflow.python.framework.ops.dtypes.complex64",
  "tensorflow.python.framework.ops.dtypes.float32",
  "tensorflow.python.framework.ops.dtypes.int64",
  "tensorflow.python.framework.ops.get_operations",
  "tensorflow.python.framework.ops.reshape",
  "tensorflow.python.framework.sparse_tensor.indices",
  "tensorflow.python.framework.tensor_shape.is_fully_defined",
  "tensorflow.python.ops.array_ops.batch_to_space_nd",
  "tensorflow.python.ops.array_ops.check_numerics",
  "tensorflow.python.ops.array_ops.depth_to_space",
  "tensorflow.python.ops.array_ops.diag",
  "tensorflow.python.ops.array_ops.diag_part",
  "tensorflow.python.ops.array_ops.fill",
  "tensorflow.python.ops.array_ops.gather",
  "tensorflow.python.ops.array_ops.gather_nd",
  "tensorflow.python.ops.array_ops.identity",
  "tensorflow.python.ops.array_ops.invert_permutation",
  "tensorflow.python.ops.array_ops.matrix_band_part",
  "tensorflow.python.ops.array_ops.matrix_diag",
  "tensorflow.python.ops.array_ops.matrix_diag_part",
  "tensorflow.python.ops.array_ops.matrix_set_diag",
  "tensorflow.python.ops.array_ops.reduce_prod",
  "tensorflow.python.ops.array_ops.reshape",
  "tensorflow.python.ops.array_ops.reverse",
  "tensorflow.python.ops.array_ops.reverse_sequence",
  "tensorflow.python.ops.array_ops.reverse_v2",
  "tensorflow.python.ops.array_ops.scatter_nd",
  "tensorflow.python.ops.array_ops.shape_n",
  "tensorflow.python.ops.array_ops.space_to_batch_nd",
  "tensorflow.python.ops.array_ops.space_to_depth",
  "tensorflow.python.ops.array_ops.stop_gradient",
  "tensorflow.python.ops.array_ops.strided_slice_grad",
  "tensorflow.python.ops.array_ops.tile",
  "tensorflow.python.ops.array_ops.unique",
  "tensorflow.python.ops.control_flow_ops.abort",
  "tensorflow.python.ops.control_flow_ops.no_op",
  "tensorflow.python.ops.control_flow_ops.ref_select",
  "tensorflow.python.ops.data_flow_ops.dynamic_partition",
  "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
  "tensorflow.python.ops.gen_array_ops._batch_to_space.__doc__",
  "tensorflow.python.ops.gen_array_ops._expand_dims.__doc__.replace",
  "tensorflow.python.ops.gen_array_ops._list_diff.__doc__",
  "tensorflow.python.ops.gen_array_ops._space_to_batch.__doc__",
  "tensorflow.python.ops.gen_math_ops.arg_max.__doc__.replace",
  "tensorflow.python.ops.gen_math_ops.arg_min.__doc__.replace",
  "tensorflow.python.ops.image_ops.decode_jpeg",
  "tensorflow.python.ops.image_ops.decode_png",
  "tensorflow.python.ops.io_ops.matching_files",
  "tensorflow.python.ops.io_ops.restore_v2",
  "tensorflow.python.ops.io_ops.save_v2",
  "tensorflow.python.ops.linalg_ops.cholesky",
  "tensorflow.python.ops.linalg_ops.cholesky_grad",
  "tensorflow.python.ops.linalg_ops.matrix_inverse",
  "tensorflow.python.ops.linalg_ops.matrix_solve",
  "tensorflow.python.ops.linalg_ops.matrix_triangular_solve",
  "tensorflow.python.ops.math_ops.acos",
  "tensorflow.python.ops.math_ops.add",
  "tensorflow.python.ops.math_ops.asin",
  "tensorflow.python.ops.math_ops.atan",
  "tensorflow.python.ops.math_ops.betainc",
  "tensorflow.python.ops.math_ops.ceil",
  "tensorflow.python.ops.math_ops.cos",
  "tensorflow.python.ops.math_ops.cross",
  "tensorflow.python.ops.math_ops.digamma",
  "tensorflow.python.ops.math_ops.div",
  "tensorflow.python.ops.math_ops.equal",
  "tensorflow.python.ops.math_ops.erfc",
  "tensorflow.python.ops.math_ops.exp",
  "tensorflow.python.ops.math_ops.fft",
  "tensorflow.python.ops.math_ops.fft2d",
  "tensorflow.python.ops.math_ops.fft3d",
  "tensorflow.python.ops.math_ops.floor",
  "tensorflow.python.ops.math_ops.greater",
  "tensorflow.python.ops.math_ops.greater_equal",
  "tensorflow.python.ops.math_ops.ifft",
  "tensorflow.python.ops.math_ops.ifft2d",
  "tensorflow.python.ops.math_ops.ifft3d",
  "tensorflow.python.ops.math_ops.igamma",
  "tensorflow.python.ops.math_ops.igammac",
  "tensorflow.python.ops.math_ops.int32",
  "tensorflow.python.ops.math_ops.is_finite",
  "tensorflow.python.ops.math_ops.is_nan",
  "tensorflow.python.ops.math_ops.less",
  "tensorflow.python.ops.math_ops.less_equal",
  "tensorflow.python.ops.math_ops.lgamma",
  "tensorflow.python.ops.math_ops.log",
  "tensorflow.python.ops.math_ops.log1p",
  "tensorflow.python.ops.math_ops.logical_and",
  "tensorflow.python.ops.math_ops.logical_not",
  "tensorflow.python.ops.math_ops.logical_or",
  "tensorflow.python.ops.math_ops.maximum",
  "tensorflow.python.ops.math_ops.minimum",
  "tensorflow.python.ops.math_ops.mod",
  "tensorflow.python.ops.math_ops.mul",
  "tensorflow.python.ops.math_ops.not_equal",
  "tensorflow.python.ops.math_ops.polygamma",
  "tensorflow.python.ops.math_ops.rank",
  "tensorflow.python.ops.math_ops.reciprocal",
  "tensorflow.python.ops.math_ops.rsqrt",
  "tensorflow.python.ops.math_ops.segment_sum",
  "tensorflow.python.ops.math_ops.select",
  "tensorflow.python.ops.math_ops.sin",
  "tensorflow.python.ops.math_ops.sparse_segment_mean",
  "tensorflow.python.ops.math_ops.sparse_segment_mean_grad",
  "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n",
  "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n_grad",
  "tensorflow.python.ops.math_ops.sparse_segment_sum",
  "tensorflow.python.ops.math_ops.squared_difference",
  "tensorflow.python.ops.math_ops.sub",
  "tensorflow.python.ops.math_ops.tan",
  "tensorflow.python.ops.math_ops.unsorted_segment_sum",
  "tensorflow.python.ops.math_ops.zeta",
  "tensorflow.python.ops.nn.avg_pool",
  "tensorflow.python.ops.nn.bias_add",
  "tensorflow.python.ops.nn.conv2d_transpose",
  "tensorflow.python.ops.nn.convolution",
  "tensorflow.python.ops.nn.crelu",
  "tensorflow.python.ops.nn.dropout",
  "tensorflow.python.ops.nn.elu",
  "tensorflow.python.ops.nn.embedding_lookup",
  "tensorflow.python.ops.nn.in_top_k",
  "tensorflow.python.ops.nn.l2_loss",
  "tensorflow.python.ops.nn.log_softmax",
  "tensorflow.python.ops.nn.max_pool",
  "tensorflow.python.ops.nn.pool",
  "tensorflow.python.ops.nn.relu",
  "tensorflow.python.ops.nn.relu6",
  "tensorflow.python.ops.nn.rnn",
  "tensorflow.python.ops.nn.rnn_cell.BasicLSTMCell",
  "tensorflow.python.ops.nn.rnn_cell.BasicRNNCell",
  "tensorflow.python.ops.nn.rnn_cell.GRUCell",
  "tensorflow.python.ops.nn.rnn_cell.MultiRNNCell",
  "tensorflow.python.ops.nn.rnn_cell.RNNCell",
  "tensorflow.python.ops.nn.softmax",
  "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
  "tensorflow.python.ops.nn.softplus",
  "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.python.ops.nn.top_k",
  "tensorflow.python.ops.nn.xw_plus_b",
  "tensorflow.python.ops.nn_ops.avg_pool3d_grad",
  "tensorflow.python.ops.nn_ops.bias_add_grad",
  "tensorflow.python.ops.nn_ops.conv2d",
  "tensorflow.python.ops.nn_ops.conv2d_backprop_filter",
  "tensorflow.python.ops.nn_ops.conv2d_backprop_input",
  "tensorflow.python.ops.nn_ops.conv3d",
  "tensorflow.python.ops.nn_ops.conv3d_backprop_filter_v2",
  "tensorflow.python.ops.nn_ops.conv3d_backprop_input_v2",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_filter",
  "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_input",
  "tensorflow.python.ops.nn_ops.dilation2d_backprop_filter",
  "tensorflow.python.ops.nn_ops.dilation2d_backprop_input",
  "tensorflow.python.ops.nn_ops.l2_loss",
  "tensorflow.python.ops.nn_ops.max_pool3d_grad",
  "tensorflow.python.ops.nn_ops.relu",
  "tensorflow.python.ops.nn_ops.softplus",
  "tensorflow.python.ops.parsing_ops.decode_csv",
  "tensorflow.python.ops.parsing_ops.decode_raw",
  "tensorflow.python.ops.random_ops._random_walk",
  "tensorflow.python.ops.resource_variable_ops.assign_add_variable_op",
  "tensorflow.python.ops.resource_variable_ops.resource_scatter_add",
  "tensorflow.python.ops.standard_ops.abs",
  "tensorflow.python.ops.standard_ops.cast",
  "tensorflow.python.ops.standard_ops.greater",
  "tensorflow.python.ops.standard_ops.less",
  "tensorflow.python.ops.standard_ops.matmul",
  "tensorflow.python.ops.standard_ops.mul",
  "tensorflow.python.ops.standard_ops.one_hot",
  "tensorflow.python.ops.standard_ops.reduce_mean",
  "tensorflow.python.ops.standard_ops.reduce_sum",
  "tensorflow.python.ops.standard_ops.to_float",
  "tensorflow.python.ops.standard_ops.to_int64",
  "tensorflow.python.ops.state_ops.assign",
  "tensorflow.python.ops.state_ops.assign_add",
  "tensorflow.python.ops.state_ops.assign_sub",
  "tensorflow.python.ops.state_ops.count_up_to",
  "tensorflow.python.ops.state_ops.is_variable_initialized",
  "tensorflow.python.ops.state_ops.scatter_add",
  "tensorflow.python.ops.state_ops.scatter_div",
  "tensorflow.python.ops.state_ops.scatter_mul",
  "tensorflow.python.ops.state_ops.scatter_nd_add",
  "tensorflow.python.ops.state_ops.scatter_nd_sub",
  "tensorflow.python.ops.state_ops.scatter_nd_update",
  "tensorflow.python.ops.state_ops.scatter_sub",
  "tensorflow.python.ops.state_ops.scatter_update",
  "tensorflow.python.ops.string_ops.as_string",
  "tensorflow.python.ops.string_ops.string_join",
  "tensorflow.python.ops.string_ops.string_to_hash_bucket_fast",
  "tensorflow.python.ops.variable_scope.truncated_normal_initializer",
  "tensorflow.python.ops.variables.get_or_create_global_step",
  "tensorflow.python.platform.googletest.TestCase",
  "tensorflow.python.platform.googletest.TestCase.assertCountEqual",
  "tensorflow.python.platform.googletest.TestCase.assertRaisesRegex",
  "tensorflow.python.saved_model.builder.add_meta_graph",
  "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
  "tensorflow.python.saved_model.builder.save",
  "tensorflow.python.saved_model.constants.ASSETS_KEY.any_list.value",
  "tensorflow.python.saved_model.constants.LEGACY_INIT_OP_KEY.node_list.value",
  "tensorflow.python.saved_model.constants.MAIN_OP_KEY.node_list.value",
  "tensorflow.python.shape",
  "tensorflow.python.summary.histogram",
  "tensorflow.python.summary.histogram_summary",
  "tensorflow.python.summary.merge_all",
  "tensorflow.python.summary.scalar",
  "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
  "tensorflow.python.training.optimizer.apply_gradients",
  "tensorflow.python.training.optimizer.compute_gradients",
  "tensorflow.python.training.queue_runner.QueueRunner",
  "tensorflow.python.training.queue_runner.add_queue_runner",
  "tensorflow.python.training.queue_runner.start_queue_runners",
  "tensorflow.python.training.saver.recover_last_checkpoints",
  "tensorflow.python.training.saver.restore",
  "tensorflow.python.training.saver.save",
  "tensorflow.python.training.session_manager.recover_session",
  "tensorflow.python.training.summary_io.SummaryWriterCache.clear",
  "tensorflow.python.training.summary_io.SummaryWriterCache.get",
  "tensorflow.python.training.supervisor.PrepareSession",
  "tensorflow.python.training.supervisor.ShouldStop",
  "tensorflow.python.training.supervisor.StartQueueRunners",
  "tensorflow.python.training.supervisor.Stop",
  "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
  "tensorflow.python.training.supervisor.save_path",
  "tensorflow.python.training.supervisor.saver.save",
  "tensorflow.python.training.training_ops.apply_adadelta",
  "tensorflow.python.training.training_ops.apply_adagrad",
  "tensorflow.python.training.training_ops.apply_adagrad_da",
  "tensorflow.python.training.training_ops.apply_adam",
  "tensorflow.python.training.training_ops.apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.apply_ftrl",
  "tensorflow.python.training.training_ops.apply_gradient_descent",
  "tensorflow.python.training.training_ops.apply_momentum",
  "tensorflow.python.training.training_ops.apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.apply_rms_prop",
  "tensorflow.python.training.training_ops.sparse_apply_adadelta",
  "tensorflow.python.training.training_ops.sparse_apply_adagrad",
  "tensorflow.python.training.training_ops.sparse_apply_adagrad_da",
  "tensorflow.python.training.training_ops.sparse_apply_centered_rms_prop",
  "tensorflow.python.training.training_ops.sparse_apply_ftrl",
  "tensorflow.python.training.training_ops.sparse_apply_momentum",
  "tensorflow.python.training.training_ops.sparse_apply_proximal_adagrad",
  "tensorflow.python.training.training_ops.sparse_apply_proximal_gradient_descent",
  "tensorflow.python.training.training_ops.sparse_apply_rms_prop",
  "tensorflow.python_io.TFRecordWriter",
  "tensorflow.random_crop",
  "tensorflow.random_normal",
  "tensorflow.random_uniform",
  "tensorflow.range",
  "tensorflow.rank",
  "tensorflow.reciprocal",
  "tensorflow.reduce_all",
  "tensorflow.reduce_any",
  "tensorflow.reduce_max",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_min",
  "tensorflow.reduce_prod",
  "tensorflow.reduce_sum",
  "tensorflow.reset_default_graph",
  "tensorflow.reshape",
  "tensorflow.resource_loader.get_path_to_datafile",
  "tensorflow.reverse_v2",
  "tensorflow.round",
  "tensorflow.rsqrt",
  "tensorflow.scalar_summary",
  "tensorflow.scatter_add",
  "tensorflow.scatter_update",
  "tensorflow.set_random_seed",
  "tensorflow.shape",
  "tensorflow.sigmoid",
  "tensorflow.sign",
  "tensorflow.sin",
  "tensorflow.size",
  "tensorflow.slice",
  "tensorflow.sparse_placeholder",
  "tensorflow.sparse_tensor_dense_matmul",
  "tensorflow.sparse_to_dense",
  "tensorflow.split",
  "tensorflow.sqrt",
  "tensorflow.square",
  "tensorflow.squared_difference",
  "tensorflow.squeeze",
  "tensorflow.stack",
  "tensorflow.string",
  "tensorflow.sub",
  "tensorflow.summary.merge_all",
  "tensorflow.summary.scalar",
  "tensorflow.tan",
  "tensorflow.test.Benchmark",
  "tensorflow.test.TestCase",
  "tensorflow.test.TestCase.setUp",
  "tensorflow.test.compute_gradient_error",
  "tensorflow.test.get_temp_dir",
  "tensorflow.test.is_gpu_available",
  "tensorflow.test.main",
  "tensorflow.test.mock",
  "tensorflow.test.mock.Mock",
  "tensorflow.test.mock.call",
  "tensorflow.test.mock.patch",
  "tensorflow.test.mock.patch.dict",
  "tensorflow.test.mock.patch.object",
  "tensorflow.test.test_src_dir_path",
  "tensorflow.tile",
  "tensorflow.to_float",
  "tensorflow.to_int32",
  "tensorflow.to_int64",
  "tensorflow.train.AdagradOptimizer",
  "tensorflow.train.AdamOptimizer",
  "tensorflow.train.BytesList",
  "tensorflow.train.ClusterSpec",
  "tensorflow.train.Coordinator",
  "tensorflow.train.Example",
  "tensorflow.train.ExponentialMovingAverage",
  "tensorflow.train.Feature",
  "tensorflow.train.FeatureList",
  "tensorflow.train.FeatureLists",
  "tensorflow.train.Features",
  "tensorflow.train.FloatList",
  "tensorflow.train.FtrlOptimizer",
  "tensorflow.train.GradientDescentOptimizer",
  "tensorflow.train.Int64List",
  "tensorflow.train.MomentumOptimizer",
  "tensorflow.train.NewCheckpointReader",
  "tensorflow.train.Optimizer",
  "tensorflow.train.Saver",
  "tensorflow.train.SaverDef",
  "tensorflow.train.SaverDef.V1",
  "tensorflow.train.SaverDef.V2",
  "tensorflow.train.SequenceExample",
  "tensorflow.train.Server.create_local_server",
  "tensorflow.train.SessionRunContext",
  "tensorflow.train.SessionRunHook",
  "tensorflow.train.SummaryWriter",
  "tensorflow.train.Supervisor",
  "tensorflow.train.batch",
  "tensorflow.train.checkpoint_exists",
  "tensorflow.train.exponential_decay",
  "tensorflow.train.export_meta_graph",
  "tensorflow.train.get_checkpoint_state",
  "tensorflow.train.import_meta_graph",
  "tensorflow.train.limit_epochs",
  "tensorflow.train.range_input_producer",
  "tensorflow.train.shuffle_batch",
  "tensorflow.train.start_queue_runners",
  "tensorflow.train.string_input_producer",
  "tensorflow.train.summary_iterator",
  "tensorflow.train.write_graph",
  "tensorflow.trainable_variables",
  "tensorflow.transpose",
  "tensorflow.truncated_normal",
  "tensorflow.truncated_normal_initializer",
  "tensorflow.uint16",
  "tensorflow.uint8",
  "tensorflow.unique",
  "tensorflow.unsorted_segment_sum",
  "tensorflow.unstack",
  "tensorflow.variable_scope",
  "tensorflow.where",
  "tensorflow.while_loop",
  "tensorflow.zeros",
  "tensorflow.zeros_initializer",
  "tensorflow.zeros_like",
  "tensorflow.zeta",
  "tensors_type",
  "test_method",
  "test_method.__doc__",
  "tf_op",
  "time",
  "time.gmtime",
  "time.localtime",
  "time.sleep",
  "time.strftime",
  "time.time",
  "tmpl1",
  "to_proto",
  "trace_inputs",
  "transform_cls",
  "transpose",
  "tril_ids",
  "type.__new__",
  "types.ClassType",
  "unicode",
  "unittest2.TestLoader.testMethodPrefix",
  "unknown_shape",
  "unpack_path_op",
  "update_num",
  "update_passthrough_outputs",
  "update_state",
  "update_str",
  "update_strs",
  "v",
  "wals_compute_partial_lhs_and_rhs",
  "weight_variable",
  "which_dequeue",
  "which_softmax",
  "with_dependencies",
  "write_colvec",
  "x_iter",
  "y_iter"
 ],
 "deps": {
  "AddDecoder": [],
  "AsInt32": [],
  "BytesList": [],
  "CIFAR10Record": [],
  "Composition": [],
  "Cr": [],
  "EncodeNonFiniteOrRaise": [],
  "Estimator": [],
  "Format": [],
  "Fr": [
   "python-framel/conda-forge/linux-64/python-framel-8.40.1-py39h1dff97c_2"
  ],
  "HasField": [],
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-7.23.0-py39hef51801_0"
  ],
  "Identity": [],
  "IsLoopExit": [],
  "LogErrorOnce": [],
  "MakeBoundParamTest": [],
  "Operator": [],
  "Ord": [],
  "ParseInteger": [],
  "Shared": [],
  "SkipField": [],
  "StringIO": [],
  "TagByteSize": [],
  "TestInput": [],
  "TestLoader": [],
  "UInt64ByteSize": [],
  "Var": [],
  "WhileContext": [],
  "_CheckDurationValid": [],
  "_CheckFieldMaskMessage": [],
  "_ConsumeInt64": [],
  "_ConsumeInteger": [],
  "_ConsumeUint64": [],
  "_ConvertScalarFieldValue": [],
  "_ConvertToUnicode": [],
  "_CreateDenseMaskAndBegin": [],
  "_ExpiredPerTag": [],
  "_ExtractInputShapes": [],
  "_FieldMaskTree": [],
  "_FilterGrad": [],
  "_GetAllMessageNames": [],
  "_GetFileAndLine": [],
  "_GetIntegerEnumValue": [],
  "_IsOpFree": [],
  "_IsWrapperMessage": [],
  "_LossCheckerHook": [],
  "_ParseAbstractInteger": [],
  "_Parser": [],
  "_PrefixWithDot": [],
  "_Printer": [],
  "_RoundTowardZero": [],
  "_SetGrad": [],
  "_SparseMatMul": [],
  "_Transformer": [],
  "_UpdateClassDictForParamTestCase": [],
  "_VarUInt64ByteSizeNoTag": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "__spec__": [],
  "_add_binary_metric": [],
  "_add_variable_collection": [],
  "_apply_mask_1d": [],
  "_assert_fully_defined": [],
  "_assert_has_shape": [],
  "_assert_same_graph": [],
  "_build_case": [],
  "_centered_bias": [],
  "_centered_bias_step": [],
  "_check_labels": [],
  "_check_logits_input_not_supported": [],
  "_check_mode_valid": [],
  "_collect_leaf_level_columns": [],
  "_conditional_batch": [],
  "_convert": [],
  "_copy_one_through": [],
  "_copy_some_through": [],
  "_correct_empty": [],
  "_create_ta": [],
  "_create_zero_arrays": [],
  "_create_zero_output": [],
  "_elbo": [],
  "_empty_tensor_like": [],
  "_enqueue_as_batches": [],
  "_expected_fixed_len_float": [],
  "_expected_var_len_int": [],
  "_feed_fn": [],
  "_find_variational_and_priors": [],
  "_flip_front_dims_to_back": [],
  "_get_dict": [],
  "_get_feature_config": [],
  "_get_samples": [],
  "_get_shape_tuple": [],
  "_gru_block_cell": [],
  "_hash_func_def": [],
  "_head_prefixed": [],
  "_importance_sampler_positive_f": [],
  "_in_alternate_universe": [],
  "_input_fn": [],
  "_linear": [],
  "_log_variable": [],
  "_logspace_mean": [],
  "_loss": [],
  "_maybe_store": [],
  "_median": [],
  "_move_dim_to_end": [],
  "_new_attr_context": [],
  "_overdetermined": [],
  "_pywrap_tensorflow": [],
  "_pywrap_tensorflow_print_model_analysis_lib": [],
  "_read_keyed_batch_examples_helper": [],
  "_reduce": [],
  "_remove_squeezable_dimensions": [],
  "_run_metrics": [],
  "_same": [],
  "_sample_mean": [],
  "_shape_is_compatible_0dim": [],
  "_sort_by_name": [],
  "_sparse_meta_data": [],
  "_streaming_sparse_true_positive_at_k": [],
  "_swap_axis": [],
  "_tensor_to_sparse_feature_column": [],
  "_training_examples_and_variables": [],
  "_transpose_if_necessary": [],
  "_true_getter": [],
  "_underdetermined": [],
  "_valid": [],
  "_weight_tensor": [],
  "_weighted_average_loss_metric_spec": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "add": [],
  "adjust": [],
  "advantage_fn": [],
  "aff": [],
  "append": [],
  "append_fn": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "as_dimension": [],
  "as_dtype": [],
  "as_shape": [],
  "assert_expected_shape": [],
  "assert_less": [],
  "assert_less_equal": [],
  "assertion": [],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "attention": [],
  "axis_size": [],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "baseline_fn": [],
  "batch_to_space_nd": [],
  "batcher": [],
  "benchmark": [
   "lime/conda-forge/noarch/lime-0.1.1.32-py_0"
  ],
  "bias_variable": [],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "buffer_or_memoryview": [],
  "cPickle": [],
  "call_cell": [],
  "call_cpp_shape_fn": [],
  "callback": [],
  "canonical": [],
  "categorical_vocabulary": [],
  "cell": [],
  "cell_fn": [],
  "cg_state": [],
  "cgls_state": [],
  "check_dim_list": [],
  "check_feature_columns": [],
  "cinput_op_match": [],
  "cls": [],
  "code": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "compressed_steps": [],
  "compute_auc": [],
  "compute_mean": [],
  "compute_mean_iou": [],
  "compute_precision": [],
  "compute_recall": [],
  "compute_sensitivity_at_specificity": [],
  "compute_specificity_at_sensitivity": [],
  "compute_value_size": [],
  "consumer_op_match": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "control_trigger": [],
  "conv2d": [],
  "conv_fn": [],
  "conversion_func": [],
  "convert_image_dtype": [],
  "copier": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy_reg": [],
  "copyreg": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ctypes": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "curses": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "data_feeder_cls": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "decode_value": [],
  "decoder": [],
  "delays": [],
  "delegate_get_names": [],
  "depth": [],
  "device_function": [],
  "div": [],
  "dummy_type": [],
  "elementwise_function": [],
  "empty_lbeta": [],
  "encode_message": [],
  "encode_value": [],
  "enqueue_which": [],
  "enter": [],
  "enter_fn": [],
  "equal_": [],
  "eval_in_batches": [],
  "exc_type": [],
  "expand": [],
  "expected": [],
  "extract_batch_shape": [],
  "extract_dask_data": [],
  "extract_dask_labels": [],
  "f": [],
  "failing_input_fn": [],
  "fake": [],
  "fake_quant_with_min_max_args_gradient": [],
  "fake_quant_with_min_max_vars_gradient": [],
  "fake_quant_with_min_max_vars_per_channel_gradient": [],
  "feed_dict": [],
  "feed_dict_fn": [],
  "feed_fn": [],
  "fetch_fn": [],
  "field_decoder": [],
  "field_setter": [],
  "fill": [],
  "filled_embedding_rnn_decoder": [],
  "filter": [],
  "finder": [],
  "flip_matrix_to_vector": [],
  "flip_vector_to_matrix": [],
  "fn": [],
  "fnmatch": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "from_proto": [],
  "full_shape_to_list": [],
  "full_steps": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gather": [],
  "gc": [],
  "get_current_step": [],
  "get_data_files": [],
  "get_deconv_dim": [],
  "get_default_graph": [],
  "get_feed_fn": [],
  "get_majority_input_fn": [],
  "get_mean_input_fn": [],
  "get_out_of_order": [],
  "get_shift_input_fn": [],
  "get_sin_input_fn": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "google": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "protobuf/conda-forge/linux-64/protobuf-3.15.3-py39he80948d_0"
  ],
  "grad_fn": [],
  "gradient_op": [],
  "graph_builder_class": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "h5py": [
   "h5py/conda-forge/linux-64/h5py-2.7.1-py36_1"
  ],
  "handler": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "heapq": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "id_source": [],
  "identity": [],
  "imghdr": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "imp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "increment": [],
  "infix_op": [],
  "init": [],
  "initializer": [],
  "input": [],
  "input_flatten": [],
  "input_fn": [],
  "input_op_fn": [],
  "input_op_match": [],
  "input_pack": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "instance_benchmark_fn": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_retriable": [],
  "is_var": [],
  "is_within": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "keep_index": [],
  "kl_fn": [],
  "l1_l2_reg": [],
  "l1_reg1": [],
  "l1_reg2": [],
  "lanzcos_bidiag_state": [],
  "layer_fn": [],
  "lf": [],
  "linear_operator": [],
  "linecache": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "local_DecodeVarint": [],
  "local_EncodeVarint": [],
  "local_ReadTag": [],
  "local_SkipField": [],
  "local_VarintSize": [],
  "local_len": [],
  "local_struct_pack": [],
  "local_unicode": [],
  "local_unpack": [],
  "log_if": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "loop_cond": [],
  "loop_fn": [],
  "loss_fn": [],
  "loss_grad_func": [],
  "lstm": [],
  "lstm_cell": [],
  "lt_op": [],
  "make_dims": [],
  "make_initializer": [],
  "make_wt_initializer": [],
  "mark_op_as_used": [],
  "mask_fn": [],
  "match_maybe_append": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "max_": [],
  "maybe_normalize": [],
  "merge": [],
  "merger": [],
  "message_class": [],
  "message_sizer": [],
  "message_type": [],
  "meta": [],
  "metaclass": [],
  "method": [],
  "metric": [],
  "metric_op": [],
  "mimetypes": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "min_": [],
  "mock": [],
  "mod": [],
  "model": [],
  "modify_value": [],
  "moving_average": [],
  "msg": [],
  "mul": [],
  "new_default": [],
  "new_estimator": [],
  "newest": [],
  "next_array_size": [],
  "next_iteration": [],
  "nn_layer": [],
  "no_op": [],
  "nonempty_lbeta": [],
  "normalizer": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "numpy_source": [],
  "object": [],
  "one_of": [],
  "op": [],
  "operation": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "options_class": [],
  "ordereddict": [],
  "orthogonalize_": [],
  "orthogonalize_once": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "output_axes": [],
  "output_flatten": [],
  "output_pack": [],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pandas_source": [],
  "parser": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "paths_to_delete": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "positive_filter": [],
  "pow_function": [],
  "predicate": [],
  "prepare_config": [],
  "print_list": [],
  "proto_type": [],
  "queue_creator": [],
  "queue_parsed_features": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "read_colvec": [],
  "reduce_fn": [],
  "reduce_sum": [],
  "ref_enter": [],
  "ref_next_iteration": [],
  "ref_switch": [],
  "reg": [
   "reg/conda-forge/noarch/reg-0.12-py_0"
  ],
  "reshape": [],
  "result_class": [],
  "result_type": [],
  "rf": [],
  "right_features": [],
  "right_labels": [],
  "routing_gradient": [],
  "run": [],
  "s": [],
  "scalar_transform_cls": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "series": [],
  "series_transform_cls": [],
  "setuptools": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "shape_func": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sigmoid": [],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "sklearn": [],
  "slice_shape": [],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "softmax": [],
  "sort_key": [],
  "space_to_batch_nd": [],
  "sre_constants": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "stats_func": [],
  "streaming_metrics_fn": [],
  "string_to_bytes": [],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sub": [],
  "subfeed_dtype": [],
  "switch": [],
  "sys": [],
  "t": [],
  "tanh": [],
  "tarfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "target_predictor_fn": [],
  "tarray": [],
  "task": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tensor_to_inference_result": [],
  "tensorflow": [],
  "tensors_type": [],
  "test_method": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tf_op": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "tmpl1": [],
  "to_proto": [],
  "toolz": [
   "toolz/conda-forge/noarch/toolz-0.8.2-py_3"
  ],
  "trace_inputs": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "transform_cls": [],
  "transpose": [],
  "tril_ids": [],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unicode": [],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest2": [
   "unittest2/conda-forge/noarch/unittest2-1.1.0-py_0"
  ],
  "unknown_shape": [],
  "unpack_path_op": [],
  "update_num": [],
  "update_passthrough_outputs": [],
  "update_state": [],
  "update_str": [],
  "update_strs": [],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "v": [],
  "wals_compute_partial_lhs_and_rhs": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weight_variable": [],
  "which_dequeue": [],
  "which_softmax": [],
  "with_dependencies": [],
  "write_colvec": [],
  "x_iter": [],
  "y_iter": []
 }
}