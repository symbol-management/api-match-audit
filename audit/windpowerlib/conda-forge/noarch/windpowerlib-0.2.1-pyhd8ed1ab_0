{
 "bad": [
  "logging.debug",
  "logging.warning",
  "numpy.arange",
  "numpy.array",
  "numpy.exp",
  "numpy.interp",
  "numpy.isnan",
  "numpy.log",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.pi",
  "numpy.power",
  "numpy.sqrt",
  "os.listdir",
  "os.path.dirname",
  "os.path.join",
  "pandas.DataFrame",
  "pandas.MultiIndex.from_arrays",
  "pandas.Series",
  "pandas.concat",
  "pandas.merge",
  "pandas.read_csv",
  "pandas.reset_option",
  "pandas.set_option",
  "pandas.to_numeric",
  "requests.get",
  "shutil.copyfile",
  "typing.NamedTuple",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "windpowerlib.WindTurbine",
  "windpowerlib.data.check_data_integrity",
  "windpowerlib.data.check_turbine_data",
  "windpowerlib.data.check_weather_data",
  "windpowerlib.data.fetch_turbine_data_from_oedb",
  "windpowerlib.data.restore_default_turbine_data",
  "windpowerlib.data.store_turbine_data_from_oedb",
  "windpowerlib.density.barometric",
  "windpowerlib.density.ideal_gas",
  "windpowerlib.modelchain.ModelChain",
  "windpowerlib.modelchain.data.check_weather_data",
  "windpowerlib.power_curves.smooth_power_curve",
  "windpowerlib.power_curves.wake_losses_to_power_curve",
  "windpowerlib.power_output._get_power_output",
  "windpowerlib.power_output.power_coefficient_curve",
  "windpowerlib.power_output.power_curve",
  "windpowerlib.power_output.power_curve_density_correction",
  "windpowerlib.temperature.linear_gradient",
  "windpowerlib.tools.WindpowerlibUserWarning",
  "windpowerlib.tools.estimate_turbulence_intensity",
  "windpowerlib.tools.gauss_distribution",
  "windpowerlib.tools.linear_interpolation_extrapolation",
  "windpowerlib.tools.logarithmic_interpolation_extrapolation",
  "windpowerlib.turbine_cluster_modelchain.TurbineClusterModelChain",
  "windpowerlib.wake_losses.get_wind_efficiency_curve",
  "windpowerlib.wake_losses.reduce_wind_speed",
  "windpowerlib.wind_speed.hellman",
  "windpowerlib.wind_speed.logarithmic_profile",
  "windpowerlib.wind_turbine.WindTurbine",
  "windpowerlib.wind_turbine.WindTurbineGroup",
  "windpowerlib.wind_turbine.get_turbine_data_from_file"
 ],
 "deps": {
  "logging": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "requests": [],
  "shutil": [],
  "typing": [],
  "warnings": [],
  "windpowerlib": []
 }
}