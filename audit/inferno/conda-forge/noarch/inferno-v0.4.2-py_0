{
 "bad": [
  "C",
  "PIL.Image.fromarray",
  "PIL.Image.open",
  "PartialCls",
  "_1Dwindow",
  "_print_image",
  "_to_list",
  "activations._all",
  "adam.Adam",
  "apex.amp",
  "apex.amp.initialize",
  "apex.amp.register_float_function",
  "apex.amp.scale_loss",
  "arand.adapted_rand",
  "base.Callback",
  "base.DTypeMapping",
  "base.Initialization",
  "base.Initializer",
  "base.Logger",
  "base.Metric",
  "base.SyncableDataset",
  "base.Transform",
  "bn_op_cls",
  "callback",
  "callbacks.CallbackEngine",
  "callbacks.Console",
  "callbacks.logging.base.Logger",
  "callbacks.logging.get_logger",
  "cast_fn",
  "check_function",
  "collections.OrderedDict",
  "concurrent.futures.ThreadPoolExecutor",
  "console.Console",
  "convolutional.BNReLUConv2D",
  "convolutional.BNReLUDeconv2D",
  "convolutional.Conv2D",
  "convolutional.Deconv2D",
  "convolutional._all",
  "convolutional_blocks._all",
  "copy.deepcopy",
  "core.Concatenate",
  "core.base.IndexSpec",
  "core.base.SyncableDataset",
  "criterion",
  "criterion_class",
  "data_utils.defines_base_sequence",
  "data_utils.implements_sync_primitives",
  "datetime.datetime.now",
  "device._all",
  "dimension_window",
  "exceptions.FrequencyTypeError",
  "exceptions.FrequencyValueError",
  "exceptions.NotTorchModuleError",
  "exceptions.NotUnwrappableError",
  "exceptions.ShapeError",
  "exceptions.assert_",
  "extensions.criteria",
  "extensions.metrics",
  "extensions.optimizers",
  "f",
  "filter_function",
  "flatten_and_preserve_channels",
  "func1",
  "func2",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "gc.collect",
  "h5py.File",
  "identity._all",
  "inferno.extensions.containers.graph.Graph",
  "inferno.extensions.containers.graph.NNGraph",
  "inferno.extensions.containers.sequential.Sequential1",
  "inferno.extensions.criteria.core.As2DCriterion",
  "inferno.extensions.criteria.core.Criteria",
  "inferno.extensions.criteria.elementwise_measures.WeightedMSELoss",
  "inferno.extensions.criteria.regularized.RegularizedBCELoss",
  "inferno.extensions.criteria.regularized.RegularizedBCEWithLogitsLoss",
  "inferno.extensions.criteria.regularized.RegularizedCrossEntropyLoss",
  "inferno.extensions.criteria.regularized.RegularizedLoss",
  "inferno.extensions.criteria.regularized.RegularizedMSELoss",
  "inferno.extensions.criteria.regularized.RegularizedNLLLoss",
  "inferno.extensions.criteria.regularized.build_criterion",
  "inferno.extensions.criteria.regularized.collect_losses",
  "inferno.extensions.criteria.regularized.core",
  "inferno.extensions.criteria.regularized.set_similarity_measures",
  "inferno.extensions.criteria.set_similarity_measures.GeneralizedDiceLoss",
  "inferno.extensions.criteria.set_similarity_measures.SorensenDiceLoss",
  "inferno.extensions.initializers.base.BiasInitFunction",
  "inferno.extensions.initializers.base.Initializer",
  "inferno.extensions.initializers.base.TensorInitFunction",
  "inferno.extensions.initializers.base.WeightInitFunction",
  "inferno.extensions.initializers.presets.Constant",
  "inferno.extensions.initializers.presets.ELUWeightsZeroBias",
  "inferno.extensions.initializers.presets.KaimingNormalWeightsZeroBias",
  "inferno.extensions.initializers.presets.NormalWeights",
  "inferno.extensions.initializers.presets.OrthogonalWeightsZeroBias",
  "inferno.extensions.initializers.presets.SELUWeightsZeroBias",
  "inferno.extensions.layers.__all__",
  "inferno.extensions.layers.activations.__all__",
  "inferno.extensions.layers.convolutional.BNReLUConvBaseND",
  "inferno.extensions.layers.convolutional.ConvActivation",
  "inferno.extensions.layers.convolutional.GlobalConv2D",
  "inferno.extensions.layers.convolutional._BNReLUSomeConv",
  "inferno.extensions.layers.convolutional.__all__",
  "inferno.extensions.layers.convolutional._register_bnr_conv_cls",
  "inferno.extensions.layers.convolutional._register_conv_cls",
  "inferno.extensions.layers.convolutional.register_partial_cls_here",
  "inferno.extensions.layers.convolutional_blocks.PreActSimpleResidualBlock",
  "inferno.extensions.layers.convolutional_blocks.ResidualBlock",
  "inferno.extensions.layers.convolutional_blocks.__all__",
  "inferno.extensions.layers.device.DeviceTransfer",
  "inferno.extensions.layers.device.OnDevice",
  "inferno.extensions.layers.device.__all__",
  "inferno.extensions.layers.identity.Identity",
  "inferno.extensions.layers.identity.__all__",
  "inferno.extensions.layers.normalization.BatchNormND",
  "inferno.extensions.layers.reshape.As2D",
  "inferno.extensions.layers.reshape.As3D",
  "inferno.extensions.layers.reshape.AsMatrix",
  "inferno.extensions.layers.reshape.Concatenate",
  "inferno.extensions.layers.reshape.Flatten",
  "inferno.extensions.layers.reshape.GlobalMaxPooling",
  "inferno.extensions.layers.reshape.GlobalMeanPooling",
  "inferno.extensions.layers.reshape.RemoveSingletonDimension",
  "inferno.extensions.layers.reshape.ResizeAndConcatenate",
  "inferno.extensions.layers.reshape.SplitChannels",
  "inferno.extensions.layers.reshape.Squeeze",
  "inferno.extensions.layers.reshape.View",
  "inferno.extensions.layers.reshape.__all__",
  "inferno.extensions.layers.sampling.AnisotropicPool",
  "inferno.extensions.layers.sampling.AnisotropicPool2D",
  "inferno.extensions.layers.sampling.AnisotropicUpsample",
  "inferno.extensions.layers.sampling.AnisotropicUpsample2D",
  "inferno.extensions.layers.sampling.Upsample",
  "inferno.extensions.metrics.arand.ArandError",
  "inferno.extensions.metrics.arand.ArandScore",
  "inferno.extensions.metrics.arand.adapted_rand",
  "inferno.extensions.metrics.categorical.IOU",
  "inferno.extensions.metrics.categorical.NegativeIOU",
  "inferno.extensions.metrics.voi.contingency_table",
  "inferno.extensions.metrics.voi.divide_columns",
  "inferno.extensions.metrics.voi.divide_rows",
  "inferno.extensions.metrics.voi.split_vi",
  "inferno.extensions.metrics.voi.vi_tables",
  "inferno.extensions.metrics.voi.voi",
  "inferno.extensions.metrics.voi.xlogx",
  "inferno.extensions.models.res_unet.ResBlockUNet",
  "inferno.extensions.models.res_unet._ResBlock",
  "inferno.extensions.models.res_unet._ResBlockBase",
  "inferno.extensions.models.res_unet.__all__",
  "inferno.extensions.models.unet.UNet",
  "inferno.extensions.models.unet.UNetBase",
  "inferno.extensions.models.unet.__all__",
  "inferno.extensions.optimizers.adam.Adam",
  "inferno.extensions.optimizers.annealed_adam.AnnealedAdam",
  "inferno.io.box.binary_blobs.BinaryBlobs",
  "inferno.io.box.binary_blobs.ds",
  "inferno.io.box.camvid.CAMVID_CLASSES",
  "inferno.io.box.camvid.CAMVID_CLASS_COLORS",
  "inferno.io.box.camvid.CAMVID_CLASS_WEIGHTS",
  "inferno.io.box.camvid.CAMVID_MEAN",
  "inferno.io.box.camvid.CAMVID_STD",
  "inferno.io.box.camvid.CamVid",
  "inferno.io.box.camvid.make_dataset",
  "inferno.io.box.cityscapes.CITYSCAPES_CLASSES",
  "inferno.io.box.cityscapes.CITYSCAPES_CLASSES_TO_LABELS",
  "inferno.io.box.cityscapes.CITYSCAPES_LABEL_WEIGHTS",
  "inferno.io.box.cityscapes.CITYSCAPES_MEAN",
  "inferno.io.box.cityscapes.CITYSCAPES_STD",
  "inferno.io.box.cityscapes.Cityscapes",
  "inferno.io.box.cityscapes.IGNORE_CLASS_LABEL",
  "inferno.io.box.cityscapes.extract_image",
  "inferno.io.box.cityscapes.get_filelist",
  "inferno.io.box.cityscapes.get_matching_labelimage_file",
  "inferno.io.box.cityscapes.make_dataset",
  "inferno.io.box.cityscapes.make_transforms",
  "inferno.io.core.zip.Zip",
  "inferno.io.core.zip.ZipReject",
  "inferno.io.transform.generic.AsTorchBatch",
  "inferno.io.transform.generic.Cast",
  "inferno.io.transform.generic.Label2OneHot",
  "inferno.io.transform.generic.Normalize",
  "inferno.io.transform.generic.NormalizeRange",
  "inferno.io.transform.generic.Project",
  "inferno.io.transform.image.AdditiveGaussianNoise",
  "inferno.io.transform.image.BinaryDilation",
  "inferno.io.transform.image.BinaryErosion",
  "inferno.io.transform.image.BinaryMorphology",
  "inferno.io.transform.image.CenterCrop",
  "inferno.io.transform.image.ElasticTransform",
  "inferno.io.transform.image.FineRandomRotations",
  "inferno.io.transform.image.RandomCrop",
  "inferno.io.transform.image.RandomFlip",
  "inferno.io.transform.image.RandomGammaCorrection",
  "inferno.io.transform.image.RandomRotate",
  "inferno.io.transform.image.RandomScaleSegmentation",
  "inferno.io.transform.image.RandomSizedCrop",
  "inferno.io.transform.image.RandomTranspose",
  "inferno.io.transform.image.Scale",
  "inferno.io.transform.volume.AdditiveRandomNoise3D",
  "inferno.io.transform.volume.RandomFlip3D",
  "inferno.io.transform.volume.RandomRot3D",
  "inferno.io.transform.volume.Slices2Channels",
  "inferno.io.transform.volume.VolumeAsymmetricCrop",
  "inferno.io.volumetric.lazy_volume_loader.LazyHDF5VolumeLoader",
  "inferno.io.volumetric.lazy_volume_loader.LazyN5VolumeLoader",
  "inferno.io.volumetric.lazy_volume_loader.LazyVolumeLoader",
  "inferno.io.volumetric.lazy_volume_loader.LazyVolumeLoaderBase",
  "inferno.io.volumetric.lazy_volume_loader.LazyZarrVolumeLoader",
  "inferno.io.volumetric.lazy_volume_loader.WITH_H5PY",
  "inferno.io.volumetric.lazy_volume_loader.WITH_Z5PY",
  "inferno.io.volumetric.volume.HDF5VolumeLoader",
  "inferno.io.volumetric.volume.TIFVolumeLoader",
  "inferno.io.volumetric.volume.VolumeLoader",
  "inferno.trainers.basic.torch",
  "inferno.trainers.callbacks.__all__",
  "inferno.trainers.callbacks.console.ShowMinimalConsoleInfo",
  "inferno.trainers.callbacks.console.StdoutPrinter",
  "inferno.trainers.callbacks.essentials.DumpHDF5Every",
  "inferno.trainers.callbacks.essentials.GradientClip",
  "inferno.trainers.callbacks.essentials.ParameterEMA",
  "inferno.trainers.callbacks.essentials.PersistentSave",
  "inferno.trainers.callbacks.essentials.SaveAtBestValidationScore",
  "inferno.trainers.callbacks.gradients.LogOutputGradients",
  "inferno.trainers.callbacks.logging.__all__",
  "inferno.trainers.callbacks.logging.base.Logger",
  "inferno.trainers.callbacks.logging.tensorboard.TaggedImage",
  "inferno.trainers.callbacks.logging.tensorboard.TensorboardLogger",
  "inferno.trainers.callbacks.scheduling.AutoLR",
  "inferno.trainers.callbacks.scheduling.DecaySpec",
  "inferno.trainers.callbacks.scheduling.ManualLR",
  "inferno.trainers.callbacks.scheduling._Scheduler",
  "inferno.trainers.callbacks.tqdm.TQDMConsole",
  "inferno.trainers.callbacks.tqdm.TQDMPrinter",
  "inferno.trainers.callbacks.tqdm.TQDMProgressBar",
  "inferno.trainers.callbacks.tqdmstub.TQDMProgressBar",
  "inferno.utils.model_utils.ModelTester",
  "inferno.utils.model_utils.is_model_cuda",
  "inferno.utils.partial_cls.Conv",
  "inferno.utils.partial_cls.Conv2D",
  "inferno.utils.partial_cls.partial_cls",
  "inferno.utils.python_utils.is_listlike",
  "inferno.utils.python_utils.string_types",
  "inferno.utils.test_utils.generate_random_data",
  "inferno.utils.test_utils.generate_random_dataset",
  "inferno.utils.torch_utils.is_image_tensor",
  "inferno.utils.torch_utils.is_label_image_tensor",
  "inferno.utils.torch_utils.is_label_tensor",
  "inferno.utils.torch_utils.is_label_volume_tensor",
  "inferno.utils.torch_utils.is_tensor",
  "inferno.utils.torch_utils.is_volume_tensor",
  "inferno.utils.train_utils.Duration",
  "inferno.utils.train_utils.Frequency",
  "initialization_cls",
  "initializers.Initializer",
  "initializers.KaimingNormalWeightsZeroBias",
  "initializers.OrthogonalWeightsZeroBias",
  "initializers.SELUWeightsZeroBias",
  "input.append",
  "input.dim",
  "input.shape",
  "input.size",
  "input.sum",
  "input.view",
  "insert_call_if_present",
  "insert_if_not_present",
  "inspect.getfullargspec",
  "inspect.isclass",
  "inspect.isfunction",
  "inspect.signature",
  "io.BytesIO",
  "itertools.product",
  "last_conv",
  "layers.convolutional.Conv2D",
  "layers.convolutional.Conv3D",
  "layers.convolutional.ConvActivation",
  "layers.convolutional.ConvELU2D",
  "layers.convolutional.ConvELU3D",
  "layers.device.OnDevice",
  "layers.identity.Identity",
  "layers.sampling.Upsample",
  "logging.getLogger",
  "math.sqrt",
  "max_allowed_ds_steps_impl",
  "module",
  "multiprocessing.current_process",
  "networkx.DiGraph",
  "networkx.is_directed_acyclic_graph",
  "networkx.topological_sort",
  "normalization.BatchNormND",
  "numpy",
  "numpy.all",
  "numpy.amax",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.asarray",
  "numpy.bool",
  "numpy.cumsum",
  "numpy.equal",
  "numpy.fliplr",
  "numpy.flipud",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.log2",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.moveaxis",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.pad",
  "numpy.power",
  "numpy.prod",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.rot90",
  "numpy.round",
  "numpy.shape",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.take",
  "numpy.transpose",
  "numpy.uint64",
  "numpy.zeros",
  "numpy.zeros_like",
  "operator.mul",
  "optimizer_class",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.path.lexists",
  "os.path.relpath",
  "os.path.splitext",
  "os.remove",
  "os.symlink",
  "os.walk",
  "pdb.set_trace",
  "pickle.load",
  "python_utils.delayed_keyboard_interrupt",
  "random.seed",
  "random.shuffle",
  "ranger.Ranger",
  "ranger.RangerQH",
  "ranger.RangerVA",
  "reshape._all",
  "resize_function",
  "scipy.ndimage.filters.gaussian_filter",
  "scipy.ndimage.interpolation.map_coordinates",
  "scipy.ndimage.interpolation.rotate",
  "scipy.ndimage.morphology.binary_dilation",
  "scipy.ndimage.morphology.binary_erosion",
  "scipy.ndimage.zoom",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "shutil.copyfile",
  "signal.SIGINT",
  "signal.getsignal",
  "signal.signal",
  "skimage.exposure.adjust_gamma",
  "skimage.io.imsave",
  "str.replace",
  "sys.exc_info",
  "sys.modules.__dict__",
  "tensorboardX.SummaryWriter",
  "threading.current_thread",
  "threading.get_ident",
  "threading.main_thread",
  "torch.ByteStorage.from_buffer",
  "torch.ByteTensor",
  "torch.HalfTensor",
  "torch.LongTensor",
  "torch.cat",
  "torch.from_numpy",
  "torch.is_tensor",
  "torch.load",
  "torch.max",
  "torch.nn",
  "torch.nn.BCELoss",
  "torch.nn.BCEWithLogitsLoss",
  "torch.nn.BatchNorm2d",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.MSELoss",
  "torch.nn.MaxPool2d",
  "torch.nn.MaxPool3d",
  "torch.nn.Module",
  "torch.nn.ModuleList",
  "torch.nn.NLLLoss",
  "torch.nn.ReLU",
  "torch.nn.SELU",
  "torch.nn.Sequential",
  "torch.nn.Upsample",
  "torch.nn.functional",
  "torch.nn.functional.elu",
  "torch.nn.functional.interpolate",
  "torch.nn.init",
  "torch.nn.init.kaiming_normal",
  "torch.nn.init.orthogonal",
  "torch.nn.parallel.data_parallel.data_parallel",
  "torch.nn.utils.clip_grad_norm_",
  "torch.nn.utils.clip_grad_value_",
  "torch.no_grad",
  "torch.optim",
  "torch.optim.Optimizer",
  "torch.rand",
  "torch.randperm",
  "torch.save",
  "torch.stack",
  "torch.torch.device",
  "torch.utils.data.DataLoader",
  "torch.utils.data.Dataset",
  "torch.utils.data.dataloader.DataLoader",
  "torch.utils.data.dataset.Dataset",
  "torch.utils.data.dataset.TensorDataset",
  "torch.utils.data.sampler.SubsetRandomSampler",
  "torch.zeros",
  "torchvision.datasets.CIFAR10",
  "torchvision.datasets.CIFAR100",
  "torchvision.datasets.folder.IMG_EXTENSIONS",
  "torchvision.datasets.folder.default_loader",
  "torchvision.datasets.folder.has_file_allowed_extension",
  "torchvision.datasets.folder.is_image_file",
  "torchvision.transforms.Compose",
  "torchvision.transforms.Normalize",
  "torchvision.transforms.RandomCrop",
  "torchvision.transforms.RandomHorizontalFlip",
  "torchvision.transforms.ToTensor",
  "tqdm.tqdm",
  "tqdm.tqdm.write",
  "transform",
  "transform.base.Compose",
  "transform.generic.AsTorchBatch",
  "transform.generic.Cast",
  "transform.generic.Label2OneHot",
  "transform.generic.Normalize",
  "transform.generic.NormalizeRange",
  "transform.generic.Project",
  "transform.image.PILImage2NumPyArray",
  "transform.image.RandomFlip",
  "transform.image.RandomGammaCorrection",
  "transform.image.RandomSizedCrop",
  "transform.image.Scale",
  "unet.UNetBase",
  "utils.exceptions.DTypeError",
  "utils.exceptions.DeviceError",
  "utils.exceptions.FrequencyValueError",
  "utils.exceptions.NotTorchModuleError",
  "utils.exceptions.NotUnwrappableError",
  "utils.exceptions.ShapeError",
  "utils.exceptions.assert_",
  "utils.io_utils.fromh5",
  "utils.io_utils.fromz5",
  "utils.math_utils.max_allowed_ds_steps",
  "utils.partial_cls.register_partial_cls",
  "utils.python_utils.as_tuple_of_len",
  "utils.python_utils.delayed_keyboard_interrupt",
  "utils.python_utils.deprecated",
  "utils.python_utils.from_iterable",
  "utils.python_utils.get_config_for_name",
  "utils.python_utils.has_callable_attr",
  "utils.python_utils.is_listlike",
  "utils.python_utils.is_maybe_list_of",
  "utils.python_utils.require_dict_kwargs",
  "utils.python_utils.to_iterable",
  "utils.torch_utils.clip_gradients_",
  "utils.torch_utils.flatten_samples",
  "utils.torch_utils.is_image_or_volume_tensor",
  "utils.torch_utils.is_image_tensor",
  "utils.torch_utils.is_label_image_or_volume_tensor",
  "utils.torch_utils.is_label_tensor",
  "utils.torch_utils.is_scalar_tensor",
  "utils.torch_utils.is_tensor",
  "utils.torch_utils.is_vector_tensor",
  "utils.torch_utils.is_volume_tensor",
  "utils.torch_utils.unwrap",
  "utils.torch_utils.where",
  "utils.train_utils.AverageMeter",
  "utils.train_utils.Duration.build_from",
  "utils.train_utils.Frequency",
  "utils.train_utils.Frequency.build_from",
  "utils.train_utils.MovingAverage",
  "voi.voi",
  "volumetric_utils.parse_data_slice",
  "volumetric_utils.slidingwindowslices",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "yaml.FullLoader",
  "yaml.load",
  "z5py.File",
  "z5py.N5File",
  "z5py.ZarrFile",
  "zipfile.ZipFile"
 ],
 "deps": {
  "C": [],
  "PIL": [],
  "PartialCls": [],
  "_1Dwindow": [],
  "_print_image": [],
  "_to_list": [],
  "activations": [],
  "adam": [],
  "apex": [],
  "arand": [],
  "base": [],
  "bn_op_cls": [],
  "callback": [],
  "callbacks": [],
  "cast_fn": [],
  "check_function": [],
  "collections": [],
  "concurrent": [],
  "console": [],
  "convolutional": [],
  "convolutional_blocks": [],
  "copy": [],
  "core": [],
  "criterion": [],
  "criterion_class": [],
  "data_utils": [],
  "datetime": [],
  "device": [],
  "dimension_window": [],
  "exceptions": [],
  "extensions": [],
  "f": [],
  "filter_function": [],
  "flatten_and_preserve_channels": [],
  "func1": [],
  "func2": [],
  "functools": [],
  "gc": [],
  "h5py": [],
  "identity": [],
  "inferno": [],
  "initialization_cls": [],
  "initializers": [],
  "input": [],
  "insert_call_if_present": [],
  "insert_if_not_present": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "last_conv": [],
  "layers": [],
  "logging": [],
  "math": [],
  "max_allowed_ds_steps_impl": [],
  "module": [],
  "multiprocessing": [],
  "networkx": [],
  "normalization": [],
  "numpy": [],
  "operator": [],
  "optimizer_class": [],
  "os": [],
  "pdb": [],
  "pickle": [],
  "python_utils": [],
  "random": [],
  "ranger": [],
  "reshape": [],
  "resize_function": [],
  "scipy": [],
  "shutil": [],
  "signal": [],
  "skimage": [],
  "str": [],
  "sys": [],
  "tensorboardX": [],
  "threading": [],
  "torch": [],
  "torchvision": [],
  "tqdm": [],
  "transform": [],
  "unet": [],
  "utils": [],
  "voi": [],
  "volumetric_utils": [],
  "warnings": [],
  "yaml": [],
  "z5py": [],
  "zipfile": []
 }
}