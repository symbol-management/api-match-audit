{
 "bad": [
  "analyze_histo",
  "boost_fn",
  "build_mass_tree",
  "get_flattened_values",
  "get_list_of_names",
  "helpers.decays.B0_MASS",
  "helpers.decays.K1_WIDTH",
  "helpers.decays.KAON_MASS",
  "helpers.decays.KSTARZ_MASS",
  "helpers.decays.KSTARZ_WIDTH",
  "helpers.decays.PION_MASS",
  "helpers.decays.b0_to_kstar_gamma",
  "helpers.decays.bp_to_k1_kstar_pi_gamma",
  "helpers.rapidsim.generate_fonll",
  "helpers.rapidsim.get_tree",
  "helpers.rapidsim.get_tree_in_b_rest_frame",
  "inspect",
  "inspect.signature",
  "kinematics.boost_components",
  "kinematics.lorentz_boost",
  "kinematics.mass",
  "kinematics.time_component",
  "kinematics.x_component",
  "kinematics.y_component",
  "kinematics.z_component",
  "lorentz_boost",
  "math.pi",
  "matplotlib",
  "matplotlib.pyplot",
  "matplotlib.pyplot.clf",
  "matplotlib.pyplot.hist",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.savefig",
  "matplotlib.use",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.alltrue",
  "numpy.array",
  "numpy.array_equal",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.expand_dims",
  "numpy.histogram",
  "numpy.linspace",
  "numpy.pi",
  "numpy.random.choice",
  "numpy.random.uniform",
  "numpy.reshape",
  "numpy.sin",
  "numpy.sinh",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "os",
  "os.environ.get",
  "os.mkdir",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "phasespace.__init__._set_eager_mode",
  "phasespace.phasespace.GenParticle._sess.close",
  "pkg_resources.get_distribution",
  "platform",
  "platform.system",
  "pytest",
  "pytest.mark.flaky",
  "pytest.mark.parametrize",
  "pytest.raises",
  "rapidsim_getter",
  "recurse_stable",
  "recurse_w_max",
  "res_mass",
  "scipy.stats.ks_2samp",
  "subprocess",
  "subprocess.call",
  "sys",
  "sys.path.append",
  "tensorflow",
  "tensorflow.Tensor",
  "tensorflow.Variable",
  "tensorflow.__version__.split",
  "tensorflow.assert_equal",
  "tensorflow.broadcast_to",
  "tensorflow.cast",
  "tensorflow.compat.v1.reset_default_graph",
  "tensorflow.config.run_functions_eagerly",
  "tensorflow.debugging.assert_greater_equal",
  "tensorflow.experimental.numpy",
  "tensorflow.experimental.numpy.all",
  "tensorflow.experimental.numpy.asarray",
  "tensorflow.experimental.numpy.broadcast_to",
  "tensorflow.experimental.numpy.concatenate",
  "tensorflow.experimental.numpy.cos",
  "tensorflow.experimental.numpy.equal",
  "tensorflow.experimental.numpy.expand_dims",
  "tensorflow.experimental.numpy.float64",
  "tensorflow.experimental.numpy.int64",
  "tensorflow.experimental.numpy.ones",
  "tensorflow.experimental.numpy.ones_like",
  "tensorflow.experimental.numpy.prod",
  "tensorflow.experimental.numpy.reshape",
  "tensorflow.experimental.numpy.sin",
  "tensorflow.experimental.numpy.sort",
  "tensorflow.experimental.numpy.sqrt",
  "tensorflow.experimental.numpy.square",
  "tensorflow.experimental.numpy.stack",
  "tensorflow.experimental.numpy.sum",
  "tensorflow.experimental.numpy.take",
  "tensorflow.experimental.numpy.transpose",
  "tensorflow.experimental.numpy.where",
  "tensorflow.experimental.numpy.zeros",
  "tensorflow.experimental.numpy.zeros_like",
  "tensorflow.float64",
  "tensorflow.function",
  "tensorflow.int64",
  "tensorflow.random.Generator",
  "tensorflow.random.Generator.from_seed",
  "tensorflow.random.get_global_generator",
  "tensorflow.shape",
  "tensorflow_probability.distributions.TruncatedNormal",
  "typing.Callable",
  "typing.Dict",
  "typing.Optional",
  "typing.Tuple",
  "typing.Union",
  "uproot4",
  "uproot4.open",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "analyze_histo": [],
  "boost_fn": [],
  "build_mass_tree": [],
  "get_flattened_values": [],
  "get_list_of_names": [],
  "helpers": [],
  "inspect": [],
  "kinematics": [],
  "lorentz_boost": [],
  "math": [],
  "matplotlib": [],
  "numpy": [],
  "os": [],
  "phasespace": [],
  "pkg_resources": [],
  "platform": [],
  "pytest": [],
  "rapidsim_getter": [],
  "recurse_stable": [],
  "recurse_w_max": [],
  "res_mass": [],
  "scipy": [],
  "subprocess": [],
  "sys": [],
  "tensorflow": [],
  "tensorflow_probability": [
   "tensorflow-probability/conda-forge/noarch/tensorflow-probability-0.8.0-py_0"
  ],
  "typing": [],
  "uproot4": [],
  "warnings": []
 }
}