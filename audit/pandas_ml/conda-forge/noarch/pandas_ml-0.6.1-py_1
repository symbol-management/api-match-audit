{
 "bad": [
  "_add_meta_columns",
  "_init",
  "_maybe_convert_target",
  "_wrap",
  "collections.Iterable",
  "constructor",
  "func",
  "g",
  "klass",
  "mapped",
  "matplotlib.pyplot.cm.gray_r",
  "method",
  "model",
  "nose",
  "nose.SkipTest",
  "numpy.float64",
  "numpy.nan",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randn",
  "numpy.random.random_integers",
  "pandas.DataFrame.transform",
  "pandas.MultiIndex.from_product",
  "pandas.MultiIndex.from_tuples",
  "pandas.Series.to_frame.__doc__",
  "pandas.Series.transform",
  "pandas.api.types.is_integer_dtype",
  "pandas.api.types.is_list_like",
  "pandas.compat.PY3",
  "pandas.compat.iteritems",
  "pandas.compat.range",
  "pandas.compat.string_types",
  "pandas.core.generic.NDFrame._internal_names",
  "pandas.core.generic.NDFrame.groupby.__doc__",
  "pandas.core.groupby.DataFrameGroupBy._internal_names",
  "pandas.core.groupby.DataFrameGroupBy.transform",
  "pandas.core.groupby.GroupBy.__doc__",
  "pandas.plotting._tools",
  "pandas.tools.plotting",
  "pandas.util.decorators.Appender",
  "pandas.util.decorators.cache_readonly",
  "pandas_ml.compat.plotting._flatten",
  "pandas_ml.core.generic.ModelPredictor.transform",
  "pandas_ml.util.testing.assertRaises",
  "patsy",
  "patsy.dmatrices",
  "patsy.dmatrix",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "scipy.stats.beta.ppf",
  "scipy.stats.binom.sf",
  "sklearn",
  "sklearn.__version__",
  "sklearn.base",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.ClusterMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.calibration",
  "sklearn.calibration.CalibratedClassifierCV",
  "sklearn.cluster",
  "sklearn.cluster.AffinityPropagation",
  "sklearn.cluster.AgglomerativeClustering",
  "sklearn.cluster.Birch",
  "sklearn.cluster.DBSCAN",
  "sklearn.cluster.FeatureAgglomeration",
  "sklearn.cluster.KMeans",
  "sklearn.cluster.MeanShift",
  "sklearn.cluster.MiniBatchKMeans",
  "sklearn.cluster.SpectralClustering",
  "sklearn.cluster.affinity_propagation",
  "sklearn.cluster.bicluster",
  "sklearn.cluster.bicluster.SpectralBiclustering",
  "sklearn.cluster.bicluster.SpectralCoclustering",
  "sklearn.cluster.dbscan",
  "sklearn.cluster.estimate_bandwidth",
  "sklearn.cluster.k_means",
  "sklearn.cluster.mean_shift",
  "sklearn.cluster.spectral_clustering",
  "sklearn.cluster.ward_tree",
  "sklearn.covariance",
  "sklearn.covariance.EllipticEnvelope",
  "sklearn.covariance.EmpiricalCovariance",
  "sklearn.covariance.GraphLasso",
  "sklearn.covariance.GraphLassoCV",
  "sklearn.covariance.LedoitWolf",
  "sklearn.covariance.MinCovDet",
  "sklearn.covariance.OAS",
  "sklearn.covariance.ShrunkCovariance",
  "sklearn.covariance.empirical_covariance",
  "sklearn.covariance.graph_lasso",
  "sklearn.covariance.ledoit_wolf",
  "sklearn.covariance.oas",
  "sklearn.covariance.shrunk_covariance",
  "sklearn.cross_decomposition",
  "sklearn.cross_decomposition.CCA",
  "sklearn.cross_decomposition.PLSCanonical",
  "sklearn.cross_decomposition.PLSRegression",
  "sklearn.cross_decomposition.PLSSVD",
  "sklearn.datasets",
  "sklearn.datasets.base.Bunch",
  "sklearn.datasets.load_boston",
  "sklearn.datasets.load_diabetes",
  "sklearn.datasets.load_digits",
  "sklearn.datasets.load_iris",
  "sklearn.datasets.make_checkerboard",
  "sklearn.datasets.samples_generator.make_blobs",
  "sklearn.decomposition",
  "sklearn.decomposition.DictionaryLearning",
  "sklearn.decomposition.FactorAnalysis",
  "sklearn.decomposition.FastICA",
  "sklearn.decomposition.IncrementalPCA",
  "sklearn.decomposition.KernelPCA",
  "sklearn.decomposition.LatentDirichletAllocation",
  "sklearn.decomposition.MiniBatchDictionaryLearning",
  "sklearn.decomposition.MiniBatchSparsePCA",
  "sklearn.decomposition.NMF",
  "sklearn.decomposition.PCA",
  "sklearn.decomposition.SparseCoder",
  "sklearn.decomposition.SparsePCA",
  "sklearn.decomposition.TruncatedSVD",
  "sklearn.decomposition.dict_learning",
  "sklearn.decomposition.dict_learning_online",
  "sklearn.decomposition.fastica",
  "sklearn.decomposition.sparse_encode",
  "sklearn.discriminant_analysis",
  "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
  "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
  "sklearn.dummy",
  "sklearn.dummy.DummyClassifier",
  "sklearn.dummy.DummyRegressor",
  "sklearn.ensemble",
  "sklearn.ensemble.AdaBoostClassifier",
  "sklearn.ensemble.AdaBoostRegressor",
  "sklearn.ensemble.BaggingClassifier",
  "sklearn.ensemble.BaggingRegressor",
  "sklearn.ensemble.ExtraTreesClassifier",
  "sklearn.ensemble.ExtraTreesRegressor",
  "sklearn.ensemble.GradientBoostingClassifier",
  "sklearn.ensemble.GradientBoostingRegressor",
  "sklearn.ensemble.IsolationForest",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.ensemble.RandomTreesEmbedding",
  "sklearn.ensemble.VotingClassifier",
  "sklearn.ensemble.partial_dependence",
  "sklearn.ensemble.partial_dependence.partial_dependence",
  "sklearn.ensemble.partial_dependence.plot_partial_dependence",
  "sklearn.feature_extraction",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.feature_extraction.FeatureHasher",
  "sklearn.feature_extraction.image.PatchExtractor",
  "sklearn.feature_extraction.image.extract_patches_2d",
  "sklearn.feature_extraction.image.grid_to_graph",
  "sklearn.feature_extraction.image.img_to_graph",
  "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
  "sklearn.feature_extraction.text.CountVectorizer",
  "sklearn.feature_extraction.text.HashingVectorizer",
  "sklearn.feature_extraction.text.TfidfTransformer",
  "sklearn.feature_extraction.text.TfidfVectorizer",
  "sklearn.feature_selection",
  "sklearn.feature_selection.GenericUnivariateSelect",
  "sklearn.feature_selection.RFE",
  "sklearn.feature_selection.RFECV",
  "sklearn.feature_selection.SelectFdr",
  "sklearn.feature_selection.SelectFpr",
  "sklearn.feature_selection.SelectFromModel",
  "sklearn.feature_selection.SelectFwe",
  "sklearn.feature_selection.SelectKBest",
  "sklearn.feature_selection.SelectPercentile",
  "sklearn.feature_selection.VarianceThreshold",
  "sklearn.feature_selection.chi2",
  "sklearn.feature_selection.f_classif",
  "sklearn.feature_selection.f_regression",
  "sklearn.gaussian_process",
  "sklearn.gaussian_process.GaussianProcessClassifier",
  "sklearn.gaussian_process.GaussianProcessRegressor",
  "sklearn.gaussian_process.correlation_models.absolute_exponential",
  "sklearn.gaussian_process.correlation_models.cubic",
  "sklearn.gaussian_process.correlation_models.generalized_exponential",
  "sklearn.gaussian_process.correlation_models.linear",
  "sklearn.gaussian_process.correlation_models.pure_nugget",
  "sklearn.gaussian_process.correlation_models.squared_exponential",
  "sklearn.gaussian_process.kernels.CompoundKernel",
  "sklearn.gaussian_process.kernels.ConstantKernel",
  "sklearn.gaussian_process.kernels.DotProduct",
  "sklearn.gaussian_process.kernels.ExpSineSquared",
  "sklearn.gaussian_process.kernels.Exponentiation",
  "sklearn.gaussian_process.kernels.Hyperparameter",
  "sklearn.gaussian_process.kernels.Kernel",
  "sklearn.gaussian_process.kernels.Matern",
  "sklearn.gaussian_process.kernels.PairwiseKernel",
  "sklearn.gaussian_process.kernels.Product",
  "sklearn.gaussian_process.kernels.RBF",
  "sklearn.gaussian_process.kernels.RationalQuadratic",
  "sklearn.gaussian_process.kernels.Sum",
  "sklearn.gaussian_process.kernels.WhiteKernel",
  "sklearn.gaussian_process.regression_models.constant",
  "sklearn.gaussian_process.regression_models.linear",
  "sklearn.gaussian_process.regression_models.quadratic",
  "sklearn.isotonic",
  "sklearn.isotonic.IsotonicRegression",
  "sklearn.isotonic.check_increasing",
  "sklearn.isotonic.isotonic_regression",
  "sklearn.kernel_approximation",
  "sklearn.kernel_approximation.AdditiveChi2Sampler",
  "sklearn.kernel_approximation.Nystroem",
  "sklearn.kernel_approximation.RBFSampler",
  "sklearn.kernel_approximation.SkewedChi2Sampler",
  "sklearn.kernel_ridge",
  "sklearn.kernel_ridge.KernelRidge",
  "sklearn.linear_model",
  "sklearn.linear_model.ARDRegression",
  "sklearn.linear_model.BayesianRidge",
  "sklearn.linear_model.ElasticNet",
  "sklearn.linear_model.ElasticNetCV",
  "sklearn.linear_model.HuberRegressor",
  "sklearn.linear_model.Lars",
  "sklearn.linear_model.LarsCV",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LassoCV",
  "sklearn.linear_model.LassoLars",
  "sklearn.linear_model.LassoLarsCV",
  "sklearn.linear_model.LassoLarsIC",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.LogisticRegressionCV",
  "sklearn.linear_model.MultiTaskElasticNet",
  "sklearn.linear_model.MultiTaskElasticNetCV",
  "sklearn.linear_model.MultiTaskLasso",
  "sklearn.linear_model.MultiTaskLassoCV",
  "sklearn.linear_model.OrthogonalMatchingPursuit",
  "sklearn.linear_model.OrthogonalMatchingPursuitCV",
  "sklearn.linear_model.PassiveAggressiveClassifier",
  "sklearn.linear_model.PassiveAggressiveRegressor",
  "sklearn.linear_model.Perceptron",
  "sklearn.linear_model.RANSACRegressor",
  "sklearn.linear_model.RandomizedLasso",
  "sklearn.linear_model.RandomizedLogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.RidgeCV",
  "sklearn.linear_model.RidgeClassifier",
  "sklearn.linear_model.RidgeClassifierCV",
  "sklearn.linear_model.SGDClassifier",
  "sklearn.linear_model.SGDRegressor",
  "sklearn.linear_model.TheilSenRegressor",
  "sklearn.linear_model.enet_path",
  "sklearn.linear_model.lars_path",
  "sklearn.linear_model.lasso_path",
  "sklearn.linear_model.lasso_stability_path",
  "sklearn.linear_model.orthogonal_mp",
  "sklearn.linear_model.orthogonal_mp_gram",
  "sklearn.manifold",
  "sklearn.manifold.Isomap",
  "sklearn.manifold.LocallyLinearEmbedding",
  "sklearn.manifold.MDS",
  "sklearn.manifold.SpectralEmbedding",
  "sklearn.manifold.TSNE",
  "sklearn.manifold.locally_linear_embedding",
  "sklearn.manifold.spectral_embedding",
  "sklearn.metrics",
  "sklearn.metrics.T",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.adjusted_mutual_info_score",
  "sklearn.metrics.adjusted_rand_score",
  "sklearn.metrics.auc",
  "sklearn.metrics.average_precision_score",
  "sklearn.metrics.classification_report",
  "sklearn.metrics.completeness_score",
  "sklearn.metrics.confusion_matrix",
  "sklearn.metrics.explained_variance_score",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.fbeta_score",
  "sklearn.metrics.hamming_loss",
  "sklearn.metrics.hinge_loss",
  "sklearn.metrics.homogeneity_completeness_v_measure",
  "sklearn.metrics.homogeneity_score",
  "sklearn.metrics.jaccard_similarity_score",
  "sklearn.metrics.log_loss",
  "sklearn.metrics.make_scorer",
  "sklearn.metrics.matthews_corrcoef",
  "sklearn.metrics.mean_absolute_error",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.mutual_info_score",
  "sklearn.metrics.normalized_mutual_info_score",
  "sklearn.metrics.precision_recall_curve",
  "sklearn.metrics.precision_recall_fscore_support",
  "sklearn.metrics.precision_score",
  "sklearn.metrics.r2_score",
  "sklearn.metrics.recall_score",
  "sklearn.metrics.roc_auc_score",
  "sklearn.metrics.roc_curve",
  "sklearn.metrics.silhouette_samples",
  "sklearn.metrics.silhouette_score",
  "sklearn.metrics.v_measure_score",
  "sklearn.metrics.zero_one_loss",
  "sklearn.mixture",
  "sklearn.mixture.BayesianGaussianMixture",
  "sklearn.mixture.GaussianMixture",
  "sklearn.model_selection",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.GroupKFold",
  "sklearn.model_selection.GroupShuffleSplit",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.LeaveOneGroupOut",
  "sklearn.model_selection.LeaveOneOut",
  "sklearn.model_selection.LeavePGroupsOut",
  "sklearn.model_selection.LeavePOut",
  "sklearn.model_selection.ParameterGrid",
  "sklearn.model_selection.ParameterSampler",
  "sklearn.model_selection.PredefinedSplit",
  "sklearn.model_selection.RandomizedSearchCV",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.StratifiedShuffleSplit",
  "sklearn.model_selection.TimeSeriesSplit",
  "sklearn.model_selection.cross_val_score",
  "sklearn.model_selection.learning_curve",
  "sklearn.model_selection.permutation_test_score",
  "sklearn.model_selection.validation_curve",
  "sklearn.multiclass",
  "sklearn.multiclass.OneVsOneClassifier",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.multiclass.OutputCodeClassifier",
  "sklearn.multioutput",
  "sklearn.multioutput.MultiOutputClassifier",
  "sklearn.multioutput.MultiOutputRegressor",
  "sklearn.naive_bayes",
  "sklearn.naive_bayes.BernoulliNB",
  "sklearn.naive_bayes.GaussianNB",
  "sklearn.naive_bayes.MultinomialNB",
  "sklearn.neighbors",
  "sklearn.neighbors.BallTree",
  "sklearn.neighbors.DistanceMetric",
  "sklearn.neighbors.KDTree",
  "sklearn.neighbors.KNeighborsClassifier",
  "sklearn.neighbors.KNeighborsRegressor",
  "sklearn.neighbors.KernelDensity",
  "sklearn.neighbors.NearestCentroid",
  "sklearn.neighbors.NearestNeighbors",
  "sklearn.neighbors.RadiusNeighborsClassifier",
  "sklearn.neighbors.RadiusNeighborsRegressor",
  "sklearn.neighbors.kneighbors_graph",
  "sklearn.neighbors.radius_neighbors_graph",
  "sklearn.neural_network",
  "sklearn.neural_network.BernoulliRBM",
  "sklearn.neural_network.MLPClassifier",
  "sklearn.neural_network.MLPRegressor",
  "sklearn.pipeline",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.pipeline.make_pipeline",
  "sklearn.pipeline.make_union",
  "sklearn.preprocessing",
  "sklearn.preprocessing.Binarizer",
  "sklearn.preprocessing.FunctionTransformer",
  "sklearn.preprocessing.Imputer",
  "sklearn.preprocessing.KernelCenterer",
  "sklearn.preprocessing.LabelBinarizer",
  "sklearn.preprocessing.LabelEncoder",
  "sklearn.preprocessing.MaxAbsScaler",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.MultiLabelBinarizer",
  "sklearn.preprocessing.Normalizer",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.PolynomialFeatures",
  "sklearn.preprocessing.RobustScaler",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing.add_dummy_feature",
  "sklearn.preprocessing.binarize",
  "sklearn.preprocessing.normalize",
  "sklearn.preprocessing.scale",
  "sklearn.random_projection",
  "sklearn.random_projection.GaussianRandomProjection",
  "sklearn.random_projection.SparseRandomProjection",
  "sklearn.random_projection.johnson_lindenstrauss_min_dim",
  "sklearn.semi_supervised",
  "sklearn.semi_supervised.LabelPropagation",
  "sklearn.semi_supervised.LabelSpreading",
  "sklearn.svm",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.NuSVC",
  "sklearn.svm.NuSVR",
  "sklearn.svm.OneClassSVM",
  "sklearn.svm.SVC",
  "sklearn.svm.SVR",
  "sklearn.svm.l1_min_c",
  "sklearn.tree",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree.ExtraTreeClassifier",
  "sklearn.tree.ExtraTreeRegressor",
  "sklearn.tree.export_graphviz",
  "statsmodels.api",
  "statsmodels.api.GLM",
  "statsmodels.api.GLS",
  "statsmodels.api.OLS",
  "statsmodels.api.datasets.anes96",
  "statsmodels.api.datasets.cancer",
  "statsmodels.api.datasets.ccard",
  "statsmodels.api.datasets.co2",
  "statsmodels.api.datasets.committee",
  "statsmodels.api.datasets.copper",
  "statsmodels.api.datasets.cpunish",
  "statsmodels.api.datasets.elnino",
  "statsmodels.api.datasets.engel",
  "statsmodels.api.datasets.fair",
  "statsmodels.api.datasets.grunfeld",
  "statsmodels.api.datasets.heart",
  "statsmodels.api.datasets.longley",
  "statsmodels.api.datasets.macrodata",
  "statsmodels.api.datasets.modechoice",
  "statsmodels.api.datasets.nile",
  "statsmodels.api.datasets.randhie",
  "statsmodels.api.datasets.scotland",
  "statsmodels.api.datasets.spector",
  "statsmodels.api.datasets.stackloss",
  "statsmodels.api.datasets.star98",
  "statsmodels.api.datasets.star98.load_pandas",
  "statsmodels.api.datasets.statecrime",
  "statsmodels.api.datasets.strikes",
  "statsmodels.api.datasets.sunspots",
  "statsmodels.datasets",
  "statsmodels.datasets.utils.Dataset",
  "statsmodels.genmod.generalized_estimating_equations",
  "statsmodels.genmod.generalized_estimating_equations.GEEResultsWrapper",
  "statsmodels.regression.linear_model",
  "statsmodels.regression.linear_model.RegressionResultsWrapper",
  "statsmodels.regression.mixed_linear_model",
  "statsmodels.regression.mixed_linear_model.MixedLMResultsWrapper"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_add_meta_columns": [],
  "_init": [],
  "_maybe_convert_target": [],
  "_wrap": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "constructor": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "func": [],
  "g": [],
  "graphviz": [
   "python-graphviz/conda-forge/noarch/python-graphviz-0.14.2-pyh9f0ad1d_0"
  ],
  "imblearn": [
   "imbalanced-learn/conda-forge/noarch/imbalanced-learn-0.4.1-py_0"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "klass": [],
  "mapped": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "method": [],
  "model": [],
  "nose": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pandas_ml": [],
  "patsy": [],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "seaborn": [
   "seaborn-base/conda-forge/noarch/seaborn-base-0.11.0-pyhd8ed1ab_1",
   "seaborn/conda-forge/noarch/seaborn-0.9.0-py_2"
  ],
  "sklearn": [],
  "statsmodels": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "xgboost": [
   "py-xgboost/conda-forge/linux-64/py-xgboost-1.1.1-py37hc8dfbb8_0",
   "xgboost/conda-forge/linux-64/xgboost-0.6a2-py27_2"
  ]
 }
}