{
 "bad": [
  "InternalPlatformSwitch",
  "_pyu2f.hidtransport.HidUsageSelector",
  "_pyu2f.hidtransport.UsbHidTransport",
  "_pyu2f.hidtransport.hid.Enumerate",
  "_pyu2f.hidtransport.hid.Open",
  "attestation.Attestation.__subclasses__",
  "attestation.FidoU2FAttestation.FORMAT",
  "attestation.FidoU2FAttestation.verify_signature",
  "base.DeviceDescriptor",
  "base.HidDevice",
  "binascii.a2b_hex",
  "binascii.b2a_hex",
  "cbor.decode",
  "cbor.decode_from",
  "cbor.encode",
  "ce",
  "client.WEBAUTHN_TYPE.GET_ASSERTION",
  "client.WEBAUTHN_TYPE.MAKE_CREDENTIAL",
  "cls",
  "clz",
  "cose.CoseKey.for_alg",
  "cose.CoseKey.for_name",
  "cose.CoseKey.parse",
  "cose.ES256.ALGORITHM",
  "cose.ES256.from_cryptography_key",
  "cose.ES256.from_ctap1",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDH",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
  "cryptography.hazmat.primitives.asymmetric.ec.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.ed25519",
  "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.from_public_bytes",
  "cryptography.hazmat.primitives.asymmetric.padding",
  "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.padding.PSS",
  "cryptography.hazmat.primitives.asymmetric.padding.PSS.MAX_LENGTH",
  "cryptography.hazmat.primitives.asymmetric.rsa",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.ciphers.Cipher",
  "cryptography.hazmat.primitives.ciphers.algorithms",
  "cryptography.hazmat.primitives.ciphers.algorithms.AES",
  "cryptography.hazmat.primitives.ciphers.modes",
  "cryptography.hazmat.primitives.ciphers.modes.CBC",
  "cryptography.hazmat.primitives.constant_time",
  "cryptography.hazmat.primitives.constant_time.bytes_eq",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.Hash",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hmac",
  "cryptography.hazmat.primitives.hmac.HMAC",
  "cryptography.hazmat.primitives.serialization",
  "cryptography.hazmat.primitives.serialization.Encoding.Raw",
  "cryptography.hazmat.primitives.serialization.PublicFormat.Raw",
  "cryptography.x509",
  "cryptography.x509.BasicConstraints",
  "cryptography.x509.ExtensionNotFound",
  "cryptography.x509.NameOID.COMMON_NAME",
  "cryptography.x509.NameOID.COUNTRY_NAME",
  "cryptography.x509.NameOID.ORGANIZATIONAL_UNIT_NAME",
  "cryptography.x509.NameOID.ORGANIZATION_NAME",
  "cryptography.x509.ObjectIdentifier",
  "cryptography.x509.Version.v3",
  "cryptography.x509.load_der_x509_certificate",
  "ctap.CtapError.ERR.ACTION_TIMEOUT",
  "ctap.CtapError.ERR.CBOR_UNEXPECTED_TYPE",
  "ctap.CtapError.ERR.CREDENTIAL_EXCLUDED",
  "ctap.CtapError.ERR.INVALID_CBOR",
  "ctap.CtapError.ERR.INVALID_COMMAND",
  "ctap.CtapError.ERR.INVALID_OPTION",
  "ctap.CtapError.ERR.KEEPALIVE_CANCEL",
  "ctap.CtapError.ERR.KEY_STORE_FULL",
  "ctap.CtapError.ERR.MISSING_PARAMETER",
  "ctap.CtapError.ERR.NO_CREDENTIALS",
  "ctap.CtapError.ERR.OPERATION_DENIED",
  "ctap.CtapError.ERR.OTHER",
  "ctap.CtapError.ERR.PIN_AUTH_BLOCKED",
  "ctap.CtapError.ERR.PIN_AUTH_INVALID",
  "ctap.CtapError.ERR.PIN_BLOCKED",
  "ctap.CtapError.ERR.PIN_INVALID",
  "ctap.CtapError.ERR.PIN_NOT_SET",
  "ctap.CtapError.ERR.PIN_POLICY_VIOLATION",
  "ctap.CtapError.ERR.PIN_REQUIRED",
  "ctap.CtapError.ERR.PIN_TOKEN_EXPIRED",
  "ctap.CtapError.ERR.REQUEST_TOO_LARGE",
  "ctap.CtapError.ERR.UNSUPPORTED_ALGORITHM",
  "ctap.CtapError.ERR.UNSUPPORTED_EXTENSION",
  "ctap.CtapError.ERR.UNSUPPORTED_OPTION",
  "ctap.CtapError.ERR.USER_ACTION_TIMEOUT",
  "ctap1.APDU.USE_NOT_SATISFIED",
  "ctap2.AssertionResponse.from_ctap1",
  "ctap2.AttestationObject.from_ctap1",
  "ctypes.POINTER",
  "ctypes.Structure",
  "ctypes.addressof",
  "ctypes.byref",
  "ctypes.cdll.LoadLibrary",
  "ctypes.sizeof",
  "ctypes.windll.Hid",
  "ctypes.windll.Kernel32",
  "ctypes.windll.SetupAPI",
  "decode_from",
  "encode",
  "enum.Enum",
  "enum.IntEnum",
  "enum.unique",
  "fido2.__init__.ABC",
  "fido2._pyu2f.__init__.InternalPlatformSwitch",
  "fido2.pcsc.PCSCDevice",
  "freebsd.FreeBSDHidDevice",
  "hid.CAPABILITY.CBOR",
  "hid.CTAPHID.CBOR",
  "hid.CTAPHID.MSG",
  "hid.Enumerate",
  "hid.Open",
  "hid.STATUS.UPNEEDED",
  "linux.LinuxHidDevice",
  "linux.ParseReportDescriptor",
  "linux.base.DeviceDescriptor",
  "logging",
  "logging.getLogger",
  "macos.MacOsHidDevice",
  "numbers.Number",
  "os.O_RDONLY",
  "os.close",
  "os.listdir",
  "os.open",
  "os.read",
  "os.urandom",
  "os.write",
  "platform",
  "platform.architecture",
  "re",
  "re.sub",
  "six",
  "six.PY2",
  "six.add_metaclass",
  "six.binary_type",
  "six.indexbytes",
  "six.integer_types",
  "six.iterbytes",
  "six.moves.queue.Empty",
  "six.moves.queue.Queue",
  "six.moves.urllib.parse.urlparse",
  "six.string_types",
  "six.text_type",
  "smartcard.Exceptions.CardConnectionException",
  "smartcard.System",
  "smartcard.System.readers",
  "smartcard.pcsc.PCSCContext.PCSCContext",
  "smartcard.pcsc.PCSCContext.PCSCContext.instance",
  "smartcard.pcsc.PCSCExceptions.ListReadersException",
  "struct",
  "struct.pack",
  "struct.pack_into",
  "struct.unpack",
  "struct.unpack_from",
  "sys",
  "sys.platform.startswith",
  "threading",
  "threading.Event",
  "threading.Thread",
  "threading.Timer",
  "time",
  "uhid_freebsd",
  "uhid_freebsd.enumerate",
  "uhid_freebsd.get_report_data",
  "v",
  "windows.WindowsHidDevice"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ctypes": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}