{
 "bad": [
  "__future__.absolute_import",
  "__future__.division",
  "__future__.unicode_literals",
  "abc",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "array.array",
  "attestation.Attestation.__subclasses__",
  "attestation.FidoU2FAttestation.FORMAT",
  "attestation.FidoU2FAttestation.verify_signature",
  "base.AttestationType.ANON_CA",
  "base.AttestationType.ATT_CA",
  "base.AttestationType.BASIC",
  "base.AttestationType.SELF",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "binascii.b2a_hex",
  "cbor.decode",
  "cbor.decode_from",
  "cbor.encode",
  "ce",
  "client.WEBAUTHN_TYPE.GET_ASSERTION",
  "client.WEBAUTHN_TYPE.MAKE_CREDENTIAL",
  "cls",
  "collections.namedtuple",
  "cose.CoseKey.for_alg",
  "cose.CoseKey.for_name",
  "cose.CoseKey.parse",
  "cose.ES256.ALGORITHM",
  "cose.ES256.from_cryptography_key",
  "cose.ES256.from_ctap1",
  "cryptography.hazmat.primitives.asymmetric.ed25519",
  "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.from_public_bytes",
  "cryptography.hazmat.primitives.asymmetric.padding.PSS.MAX_LENGTH",
  "cryptography.hazmat.primitives.serialization.Encoding.Raw",
  "cryptography.hazmat.primitives.serialization.PublicFormat.Raw",
  "cryptography.x509.NameOID.COMMON_NAME",
  "cryptography.x509.NameOID.COUNTRY_NAME",
  "cryptography.x509.NameOID.ORGANIZATIONAL_UNIT_NAME",
  "cryptography.x509.NameOID.ORGANIZATION_NAME",
  "cryptography.x509.Version.v3",
  "ctap.CtapError.ERR.ACTION_TIMEOUT",
  "ctap.CtapError.ERR.CBOR_UNEXPECTED_TYPE",
  "ctap.CtapError.ERR.CREDENTIAL_EXCLUDED",
  "ctap.CtapError.ERR.INVALID_CBOR",
  "ctap.CtapError.ERR.INVALID_COMMAND",
  "ctap.CtapError.ERR.INVALID_OPTION",
  "ctap.CtapError.ERR.KEEPALIVE_CANCEL",
  "ctap.CtapError.ERR.KEY_STORE_FULL",
  "ctap.CtapError.ERR.MISSING_PARAMETER",
  "ctap.CtapError.ERR.NO_CREDENTIALS",
  "ctap.CtapError.ERR.OPERATION_DENIED",
  "ctap.CtapError.ERR.OTHER",
  "ctap.CtapError.ERR.PIN_AUTH_BLOCKED",
  "ctap.CtapError.ERR.PIN_AUTH_INVALID",
  "ctap.CtapError.ERR.PIN_BLOCKED",
  "ctap.CtapError.ERR.PIN_INVALID",
  "ctap.CtapError.ERR.PIN_NOT_SET",
  "ctap.CtapError.ERR.PIN_POLICY_VIOLATION",
  "ctap.CtapError.ERR.PIN_REQUIRED",
  "ctap.CtapError.ERR.PIN_TOKEN_EXPIRED",
  "ctap.CtapError.ERR.REQUEST_TOO_LARGE",
  "ctap.CtapError.ERR.UNSUPPORTED_ALGORITHM",
  "ctap.CtapError.ERR.UNSUPPORTED_EXTENSION",
  "ctap.CtapError.ERR.UNSUPPORTED_OPTION",
  "ctap.CtapError.ERR.USER_ACTION_TIMEOUT",
  "ctap1.APDU.USE_NOT_SATISFIED",
  "ctap2.AssertionResponse.create",
  "ctap2.AssertionResponse.from_ctap1",
  "ctap2.AttestationObject.from_ctap1",
  "ctap2.ClientPin.PERMISSION.GET_ASSERTION",
  "ctap2.ClientPin.PERMISSION.MAKE_CREDENTIAL",
  "ctap2.Info.create",
  "ctap2.extensions.Ctap2Extension.__subclasses__",
  "ctypes",
  "ctypes.CFUNCTYPE",
  "ctypes.HRESULT",
  "ctypes.LibraryLoader",
  "ctypes.POINTER",
  "ctypes.Structure",
  "ctypes.WinDLL",
  "ctypes.WinError",
  "ctypes.byref",
  "ctypes.c_bool",
  "ctypes.c_byte",
  "ctypes.c_char",
  "ctypes.c_char_p",
  "ctypes.c_double",
  "ctypes.c_int",
  "ctypes.c_int32",
  "ctypes.c_long",
  "ctypes.c_ubyte",
  "ctypes.c_uint",
  "ctypes.c_uint16",
  "ctypes.c_uint32",
  "ctypes.c_uint64",
  "ctypes.c_uint8",
  "ctypes.c_ulong",
  "ctypes.c_ushort",
  "ctypes.c_void_p",
  "ctypes.c_wchar_p",
  "ctypes.cast",
  "ctypes.cdll.LoadLibrary",
  "ctypes.create_string_buffer",
  "ctypes.pointer",
  "ctypes.py_object",
  "ctypes.sizeof",
  "ctypes.string_at",
  "ctypes.util",
  "ctypes.util.find_library",
  "ctypes.windll.webauthn",
  "ctypes.wintypes",
  "ctypes.wintypes.BOOL",
  "ctypes.wintypes.BOOLEAN",
  "ctypes.wintypes.DWORD",
  "ctypes.wintypes.HWND",
  "ctypes.wintypes.LONG",
  "ctypes.wintypes.LPCWSTR",
  "decode_from",
  "encode",
  "enum.auto",
  "f",
  "fcntl",
  "fcntl.ioctl",
  "fido2.__init__.ABC",
  "fido2.ctap2.__init__.Ctap2",
  "fido2.hid.__init__.CTAPHID",
  "fido2.hid.__init__.CtapDevice",
  "fido2.hid.__init__.CtapError",
  "fido2.hid.__init__.CtapHidDevice",
  "fido2.hid.__init__.STATUS",
  "fido2.hid.__init__.TYPE_INIT",
  "fido2.hid.__init__.get_descriptor",
  "fido2.hid.__init__.list_descriptors",
  "fido2.hid.__init__.logger",
  "fido2.hid.__init__.open_connection",
  "fido2.pcsc.PCSCDevice",
  "functools.wraps",
  "glob",
  "glob.glob",
  "hid.CAPABILITY.CBOR",
  "hid.CTAPHID.CBOR",
  "hid.CTAPHID.MSG",
  "hid.STATUS.UPNEEDED",
  "io.BytesIO",
  "json",
  "json.dumps",
  "json.loads",
  "logging",
  "logging.getLogger",
  "openbsd.get_descriptor",
  "openbsd.list_descriptors",
  "openbsd.open_connection",
  "os",
  "os.O_RDONLY",
  "os.close",
  "os.listdir",
  "os.open",
  "os.path",
  "os.path.dirname",
  "os.path.join",
  "os.read",
  "os.urandom",
  "os.write",
  "platform",
  "platform.architecture",
  "platform.system",
  "re",
  "re.sub",
  "select",
  "select.POLLIN",
  "select.poll",
  "six.moves.queue.Empty",
  "six.moves.queue.Queue",
  "six.moves.urllib.parse.urlparse",
  "smartcard.Exceptions.CardConnectionException",
  "smartcard.System",
  "smartcard.System.readers",
  "smartcard.pcsc.PCSCContext.PCSCContext",
  "smartcard.pcsc.PCSCContext.PCSCContext.instance",
  "smartcard.pcsc.PCSCExceptions.ListReadersException",
  "struct",
  "struct.Struct",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "struct.unpack_from",
  "sys",
  "sys.platform.startswith",
  "threading",
  "threading.Event",
  "threading.Thread",
  "threading.Timer",
  "uhid_freebsd",
  "uhid_freebsd.enumerate",
  "uhid_freebsd.get_report_data",
  "v",
  "webauthn.AttestationConveyancePreference.NONE",
  "webauthn.PublicKeyCredentialCreationOptions._wrap",
  "webauthn.PublicKeyCredentialDescriptor._wrap",
  "webauthn.PublicKeyCredentialRequestOptions._wrap",
  "webauthn.PublicKeyCredentialType.PUBLIC_KEY",
  "webauthn.UserVerificationRequirement.PREFERRED",
  "webauthn.UserVerificationRequirement.REQUIRED",
  "win_api.WebAuthNAttestationConvoyancePreference.from_string",
  "win_api.WebAuthNAuthenticatorAttachment.ANY",
  "win_api.WebAuthNAuthenticatorAttachment.from_string",
  "win_api.WebAuthNUserVerificationRequirement.from_string",
  "win_api.WinAPI.version",
  "zlib",
  "zlib.compress",
  "zlib.decompress",
  "zlib.error"
 ],
 "deps": {
  "__future__": [],
  "abc": [],
  "array": [],
  "attestation": [],
  "base": [],
  "base64": [],
  "binascii": [],
  "cbor": [],
  "ce": [],
  "client": [],
  "cls": [],
  "collections": [],
  "cose": [],
  "cryptography": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "ctap": [],
  "ctap1": [],
  "ctap2": [],
  "ctypes": [],
  "decode_from": [],
  "encode": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "f": [],
  "fcntl": [],
  "fido2": [],
  "functools": [],
  "glob": [],
  "hid": [],
  "io": [],
  "json": [],
  "logging": [],
  "openbsd": [],
  "os": [],
  "platform": [],
  "re": [],
  "select": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "smartcard": [],
  "struct": [],
  "sys": [],
  "threading": [],
  "uhid_freebsd": [],
  "v": [],
  "webauthn": [],
  "win_api": [],
  "zlib": []
 }
}