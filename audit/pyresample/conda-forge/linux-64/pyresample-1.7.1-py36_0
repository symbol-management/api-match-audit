{
 "bad": [
  "_get_lats",
  "_get_lons",
  "_mask_helper",
  "_multi_proc.Scheduler",
  "_multi_proc.shmem_as_ndarray",
  "_spatial_mp.Proj",
  "_spatial_mp.Proj_MP",
  "collections.Mapping",
  "collections.OrderedDict",
  "ctypes.c_byte",
  "ctypes.c_char",
  "ctypes.c_double",
  "ctypes.c_float",
  "ctypes.c_int",
  "ctypes.c_long",
  "ctypes.c_short",
  "ctypes.c_ubyte",
  "ctypes.c_uint",
  "ctypes.c_ulong",
  "ctypes.c_ushort",
  "ctypes.c_wchar",
  "do_rotation",
  "filter.astype",
  "gauss",
  "geometry.CoordinateDefinition",
  "get_val",
  "hashlib.sha1",
  "int_and_float_to_numpy",
  "klass",
  "logging.getLogger",
  "math.acos",
  "math.asin",
  "math.atan2",
  "math.cos",
  "math.degrees",
  "math.pi",
  "math.radians",
  "math.sin",
  "math.sqrt",
  "matplotlib.pyplot",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.colorbar",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.show",
  "matplotlib.use",
  "mock.MagicMock",
  "mock.patch",
  "mpl_toolkits.basemap.Basemap",
  "multiprocessing.Array",
  "multiprocessing.Lock",
  "multiprocessing.Process",
  "multiprocessing.RawArray",
  "multiprocessing.RawValue",
  "multiprocessing.Value",
  "numpy.NaN",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argmax",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.ceil",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.diff",
  "numpy.dstack",
  "numpy.dtype",
  "numpy.einsum",
  "numpy.empty",
  "numpy.errstate",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.finfo",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.frombuffer",
  "numpy.fromfile",
  "numpy.fromfunction",
  "numpy.full",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.int8",
  "numpy.integer",
  "numpy.invert",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.linspace",
  "numpy.load",
  "numpy.log",
  "numpy.ma.MaskedArray",
  "numpy.ma.array",
  "numpy.ma.concatenate",
  "numpy.ma.core.MaskedArray",
  "numpy.ma.isMA",
  "numpy.ma.isMaskedArray",
  "numpy.ma.is_masked",
  "numpy.ma.masked_array",
  "numpy.ma.masked_equal",
  "numpy.ma.masked_invalid",
  "numpy.ma.masked_where",
  "numpy.ma.ones",
  "numpy.ma.row_stack",
  "numpy.max",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.nan",
  "numpy.nanmax",
  "numpy.nanmin",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pi",
  "numpy.prod",
  "numpy.rad2deg",
  "numpy.radians",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.rint",
  "numpy.row_stack",
  "numpy.sign",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.tile",
  "numpy.uint",
  "numpy.uint16",
  "numpy.uint8",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.remove",
  "p",
  "p__",
  "pobj",
  "proj",
  "proj4",
  "pykdtree.kdtree.KDTree",
  "pyproj.Geod",
  "pyproj.Proj",
  "pyresample._spatial_mp.Cartesian",
  "pyresample._spatial_mp.Cartesian_MP",
  "pyresample._spatial_mp.Proj",
  "pyresample._spatial_mp.Proj_MP",
  "pyresample._spatial_mp.R",
  "pyresample._spatial_mp._run_jobs",
  "pyresample._spatial_mp.cKDTree_MP",
  "pyresample.bilinear._calc_abc",
  "pyresample.bilinear._check_data_shape",
  "pyresample.bilinear._convert_masks_to_nans",
  "pyresample.bilinear._get_bounding_corners",
  "pyresample.bilinear._get_corner",
  "pyresample.bilinear._get_input_xy",
  "pyresample.bilinear._get_output_xy",
  "pyresample.bilinear._get_ts",
  "pyresample.bilinear._get_ts_irregular",
  "pyresample.bilinear._get_ts_parallellogram",
  "pyresample.bilinear._get_ts_uprights_parallel",
  "pyresample.bilinear._mask_coordinates",
  "pyresample.bilinear._solve_another_fractional_distance",
  "pyresample.bilinear._solve_quadratic",
  "pyresample.bilinear.get_bil_info",
  "pyresample.bilinear.get_sample_from_bil_info",
  "pyresample.bilinear.resample_bilinear",
  "pyresample.data_reduce.R",
  "pyresample.data_reduce._get_valid_index",
  "pyresample.data_reduce.get_valid_index_from_cartesian_grid",
  "pyresample.data_reduce.get_valid_index_from_lonlat_boundaries",
  "pyresample.data_reduce.get_valid_index_from_lonlat_grid",
  "pyresample.data_reduce.swath_from_cartesian_grid",
  "pyresample.data_reduce.swath_from_lonlat_boundaries",
  "pyresample.data_reduce.swath_from_lonlat_grid",
  "pyresample.ewa._fornav.fornav_wrapper",
  "pyresample.ewa._ll2cr.ll2cr_dynamic",
  "pyresample.ewa._ll2cr.ll2cr_static",
  "pyresample.ewa.fornav",
  "pyresample.ewa.ll2cr",
  "pyresample.geo_filter.GridFilter",
  "pyresample.geometry.AreaDefinition",
  "pyresample.geometry.BaseDefinition",
  "pyresample.geometry.Boundary",
  "pyresample.geometry.CoordinateDefinition",
  "pyresample.geometry.DimensionError",
  "pyresample.geometry.DynamicAreaDefinition",
  "pyresample.geometry.GridDefinition",
  "pyresample.geometry.IncompatibleAreas",
  "pyresample.geometry.StackedAreaDefinition",
  "pyresample.geometry.SwathDefinition",
  "pyresample.geometry._get_highest_level_class",
  "pyresample.geometry._get_slice",
  "pyresample.geometry.combine_area_extents_vertical",
  "pyresample.geometry.concatenate_area_defs",
  "pyresample.geometry.get_array_hashable",
  "pyresample.geometry.ordered_dump",
  "pyresample.grid.get_image_from_linesample",
  "pyresample.grid.get_image_from_lonlats",
  "pyresample.grid.get_linesample",
  "pyresample.grid.get_resampled_image",
  "pyresample.grid.range",
  "pyresample.image.ImageContainer",
  "pyresample.image.ImageContainerBilinear",
  "pyresample.image.ImageContainerNearest",
  "pyresample.image.ImageContainerQuick",
  "pyresample.kd_tree.EmptyResult",
  "pyresample.kd_tree._create_empty_info",
  "pyresample.kd_tree._create_resample_kdtree",
  "pyresample.kd_tree._get_fill_mask_value",
  "pyresample.kd_tree._get_valid_input_index",
  "pyresample.kd_tree._get_valid_output_index",
  "pyresample.kd_tree._query_resample_kdtree",
  "pyresample.kd_tree._remask_data",
  "pyresample.kd_tree._resample",
  "pyresample.kd_tree.get_neighbour_info",
  "pyresample.kd_tree.get_sample_from_neighbour_info",
  "pyresample.kd_tree.kd_tree_name",
  "pyresample.kd_tree.long",
  "pyresample.kd_tree.range",
  "pyresample.kd_tree.resample_custom",
  "pyresample.kd_tree.resample_gauss",
  "pyresample.kd_tree.resample_nearest",
  "pyresample.plot._get_quicklook",
  "pyresample.plot.area_def2basemap",
  "pyresample.plot.ellps2axis",
  "pyresample.spherical_geometry.Arc",
  "pyresample.spherical_geometry.Coordinate",
  "pyresample.spherical_geometry.EPSILON",
  "pyresample.spherical_geometry.get_first_intersection",
  "pyresample.spherical_geometry.get_intersections",
  "pyresample.spherical_geometry.get_next_intersection",
  "pyresample.spherical_geometry.get_polygon_area",
  "pyresample.spherical_geometry.intersection_polygon",
  "pyresample.spherical_geometry.modpi",
  "pyresample.spherical_geometry.point_inside",
  "pyresample.spherical_geometry.range",
  "pyresample.test.suite",
  "pyresample.test.test_bilinear.Test",
  "pyresample.test.test_bilinear.suite",
  "pyresample.test.test_ewa_fornav.TestFornav",
  "pyresample.test.test_ewa_fornav.TestFornavWrapper",
  "pyresample.test.test_ewa_fornav.suite",
  "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic",
  "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic",
  "pyresample.test.test_ewa_ll2cr.TestLL2CRWrapper",
  "pyresample.test.test_ewa_ll2cr.dynamic_wgs84",
  "pyresample.test.test_ewa_ll2cr.static_lcc",
  "pyresample.test.test_ewa_ll2cr.suite",
  "pyresample.test.test_geometry.Test",
  "pyresample.test.test_geometry.TestDynamicAreaDefinition",
  "pyresample.test.test_geometry.TestStackedAreaDefinition",
  "pyresample.test.test_geometry.TestSwathDefinition",
  "pyresample.test.test_geometry.assert_np_dict_allclose",
  "pyresample.test.test_geometry.suite",
  "pyresample.test.test_grid.Test",
  "pyresample.test.test_grid.mp",
  "pyresample.test.test_grid.suite",
  "pyresample.test.test_grid.tmp",
  "pyresample.test.test_image.Test",
  "pyresample.test.test_image.mask",
  "pyresample.test.test_image.suite",
  "pyresample.test.test_image.tmp",
  "pyresample.test.test_kd_tree.Test",
  "pyresample.test.test_kd_tree.suite",
  "pyresample.test.test_plot.Test",
  "pyresample.test.test_plot.suite",
  "pyresample.test.test_spherical_geometry.TestOverlap",
  "pyresample.test.test_spherical_geometry.TestSphereGeometry",
  "pyresample.test.test_spherical_geometry.suite",
  "pyresample.test.test_swath.Test",
  "pyresample.test.test_swath.suite",
  "pyresample.test.test_utils.TestLegacyAreaParser",
  "pyresample.test.test_utils.TestMisc",
  "pyresample.test.test_utils.TestPreprocessing",
  "pyresample.test.test_utils.TestYAMLAreaParser",
  "pyresample.test.test_utils.suite",
  "pyresample.test.utils.AstropyDeprecationWarning",
  "pyresample.test.utils.AstropyPendingDeprecationWarning",
  "pyresample.test.utils._deprecations_as_exceptions",
  "pyresample.test.utils._include_astropy_deprecations",
  "pyresample.test.utils.catch_warnings",
  "pyresample.test.utils.create_test_latitude",
  "pyresample.test.utils.create_test_longitude",
  "pyresample.test.utils.treat_deprecations_as_exceptions",
  "pyresample.utils.AreaNotFound",
  "pyresample.utils._create_area",
  "pyresample.utils._downcast_index_array",
  "pyresample.utils._get_proj4_args",
  "pyresample.utils._parse_legacy_area_file",
  "pyresample.utils._parse_yaml_area_file",
  "pyresample.utils._read_legacy_area_file_lines",
  "pyresample.utils._read_yaml_area_file_content",
  "pyresample.utils.fwhm2sigma",
  "pyresample.utils.generate_nearest_neighbour_linesample_arrays",
  "pyresample.utils.generate_quick_linesample_arrays",
  "pyresample.utils.get_area_def",
  "pyresample.utils.load_area",
  "pyresample.utils.parse_area_file",
  "pyresample.utils.proj4_dict_to_str",
  "pyresample.utils.proj4_radius_parameters",
  "pyresample.utils.proj4_str_to_dict",
  "pyresample.utils.recursive_dict_update",
  "pyresample.utils.wrap_longitudes",
  "random.randrange",
  "scipy.spatial.cKDTree",
  "source_proj",
  "stack",
  "sys.modules",
  "sys.platform",
  "sys.version",
  "sys.version_info",
  "target_proj",
  "types.FunctionType",
  "types.ModuleType",
  "unittest.TestCase",
  "unittest.TestLoader",
  "unittest.TestSuite",
  "unittest.main",
  "unittest2.TestCase",
  "unittest2.TestLoader",
  "unittest2.TestSuite",
  "unittest2.main",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.resetwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "yaml.Dumper",
  "yaml.dump",
  "yaml.load",
  "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
  "yaml.scanner.ScannerError"
 ],
 "deps": {
  "_get_lats": [],
  "_get_lons": [],
  "_mask_helper": [],
  "_multi_proc": [],
  "_spatial_mp": [],
  "collections": [],
  "configobj": [
   "configobj-dev/conda-forge/noarch/configobj-dev-2019.9.1-py_0",
   "configobj/conda-forge/noarch/configobj-5.0.6-py_0"
  ],
  "ctypes": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.16.0-py_0",
   "dask-core/conda-forge/noarch/dask-core-2.10.0-py_0",
   "dask-core/conda-forge/noarch/dask-core-2.8.1-py_0"
  ],
  "do_rotation": [],
  "filter": [],
  "gauss": [],
  "geometry": [],
  "get_val": [],
  "hashlib": [],
  "int_and_float_to_numpy": [],
  "klass": [],
  "logging": [],
  "math": [],
  "matplotlib": [],
  "mock": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "numexpr": [
   "numexpr/conda-forge/linux-64/numexpr-2.7.3-py36h284efc9_0"
  ],
  "numpy": [],
  "os": [],
  "p": [],
  "p__": [],
  "pobj": [],
  "proj": [],
  "proj4": [],
  "pykdtree": [],
  "pyproj": [],
  "pyresample": [],
  "random": [],
  "scipy": [],
  "six": [
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "source_proj": [],
  "stack": [],
  "sys": [],
  "target_proj": [],
  "types": [],
  "unittest": [],
  "unittest2": [],
  "warnings": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.13.0-py_0",
   "xarray/conda-forge/noarch/xarray-0.17.0-pyhd8ed1ab_0"
  ],
  "yaml": []
 }
}