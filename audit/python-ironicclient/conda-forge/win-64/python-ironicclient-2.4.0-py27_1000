{
 "bad": [
  "FakeFile",
  "FakeResponse",
  "Foo",
  "Foo.bar",
  "Opt",
  "TmpObject",
  "__doc__.strip",
  "_get_name_and_data",
  "_query_server",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "appdirs",
  "appdirs.user_cache_dir",
  "baremetal_client_class",
  "client_class",
  "cls",
  "contextlib",
  "contextlib.contextmanager",
  "create_method",
  "ddt",
  "ddt.data",
  "ddt.ddt",
  "ddt.unpack",
  "distutils.version.StrictVersion",
  "dogpile.cache",
  "fixtures",
  "fixtures.EnvironmentVariable",
  "fixtures.FakeLogger",
  "fixtures.MonkeyPatch",
  "fixtures.StringStream",
  "func",
  "getpass",
  "getpass.getpass",
  "gzip",
  "gzip.GzipFile",
  "hashlib",
  "hashlib.sha1",
  "hook_func",
  "inspect",
  "inspect.getargspec",
  "inspect.isclass",
  "io.BytesIO",
  "ironicclient.common.http.requests.exceptions.InvalidSchema",
  "ironicclient.exc.BadRequest",
  "ironicclient.exc.ClientException",
  "ironicclient.exc.CommandError",
  "ironicclient.exc.Conflict",
  "ironicclient.exc.ConnectionRefused",
  "ironicclient.exc.EndpointException",
  "ironicclient.exc.InternalServerError",
  "ironicclient.exc.NotFound",
  "ironicclient.exc.ServiceUnavailable",
  "ironicclient.exc.Unauthorized",
  "ironicclient.exc.UnsupportedVersion",
  "ironicclient.exc.ValidationError",
  "ironicclient.tests.unit.utils.args_array_to_dict",
  "ironicclient.tests.unit.utils.args_array_to_patch",
  "ironicclient.tests.unit.utils.bool_argument_value",
  "ironicclient.tests.unit.utils.check_for_invalid_fields",
  "ironicclient.tests.unit.utils.common_filters",
  "ironicclient.tests.unit.utils.common_params_for_list",
  "ironicclient.tests.unit.utils.convert_list_props_to_comma_separated",
  "ironicclient.tests.unit.utils.get_from_stdin",
  "ironicclient.tests.unit.utils.handle_json_or_file_arg",
  "ironicclient.tests.unit.utils.key_value_pairs_to_dict",
  "ironicclient.tests.unit.utils.make_configdrive",
  "ironicclient.tests.unit.utils.split_and_deserialize",
  "ironicclient.tests.unit.utils.tempdir",
  "ironicclient.v1.client._process_header",
  "ironicclient.v1.client.chassis.ChassisManager",
  "ironicclient.v1.client.current_api_version",
  "ironicclient.v1.client.driver.DriverManager",
  "ironicclient.v1.client.http_client",
  "ironicclient.v1.client.http_client.endpoint_override",
  "ironicclient.v1.client.http_client.os_ironic_api_version",
  "ironicclient.v1.client.is_api_version_negotiated",
  "ironicclient.v1.client.node.NodeManager",
  "ironicclient.v1.client.port.PortManager",
  "ironicclient.v1.node.driver",
  "ironicclient.v1.node.uuid",
  "ironicclient.v1.resource_fields.BIOS_RESOURCE.labels",
  "ironicclient.v1.resource_fields.CHASSIS_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.CHASSIS_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.CHASSIS_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.CHASSIS_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.CHASSIS_RESOURCE.fields",
  "ironicclient.v1.resource_fields.CHASSIS_RESOURCE.labels",
  "ironicclient.v1.resource_fields.DRIVER_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.DRIVER_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.DRIVER_RESOURCE.fields",
  "ironicclient.v1.resource_fields.DRIVER_RESOURCE.labels",
  "ironicclient.v1.resource_fields.NODE_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.NODE_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.NODE_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.NODE_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.NODE_RESOURCE.fields",
  "ironicclient.v1.resource_fields.NODE_RESOURCE.labels",
  "ironicclient.v1.resource_fields.PORTGROUP_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.PORTGROUP_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.PORTGROUP_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.PORTGROUP_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.PORTGROUP_RESOURCE.fields",
  "ironicclient.v1.resource_fields.PORTGROUP_RESOURCE.labels",
  "ironicclient.v1.resource_fields.PORT_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.PORT_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.PORT_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.PORT_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.PORT_RESOURCE.fields",
  "ironicclient.v1.resource_fields.PORT_RESOURCE.labels",
  "ironicclient.v1.resource_fields.Resource.FIELDS",
  "ironicclient.v1.resource_fields.TRAIT_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VENDOR_PASSTHRU_METHOD_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VENDOR_PASSTHRU_METHOD_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VIF_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VIF_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VOLUME_CONNECTOR_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_DETAILED_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_DETAILED_RESOURCE.labels",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_DETAILED_RESOURCE.sort_fields",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_DETAILED_RESOURCE.sort_labels",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_RESOURCE.fields",
  "ironicclient.v1.resource_fields.VOLUME_TARGET_RESOURCE.labels",
  "ironicclient.v1.utils.PROVISION_ACTIONS.get",
  "ironicclient.v1.utils.args_array_to_dict",
  "ironicclient.v1.utils.args_array_to_patch",
  "ironicclient.v1.utils.bool_argument_value",
  "ironicclient.v1.utils.check_empty_arg",
  "ironicclient.v1.utils.check_for_invalid_fields",
  "ironicclient.v1.utils.common_params_for_list",
  "ironicclient.v1.utils.convert_list_props_to_comma_separated",
  "ironicclient.v1.utils.get_from_stdin",
  "ironicclient.v1.utils.handle_json_or_file_arg",
  "ironicclient.v1.utils.key_value_pairs_to_dict",
  "isbound",
  "itertools",
  "itertools.chain.from_iterable",
  "jsonschema",
  "jsonschema.ValidationError",
  "jsonschema.validate",
  "keystoneauth1.adapter",
  "keystoneauth1.adapter.LegacyJsonAdapter",
  "keystoneauth1.exceptions",
  "keystoneauth1.exceptions.ConnectFailure",
  "keystoneauth1.exceptions.RetriableConnectionFailure",
  "keystoneauth1.fixture",
  "keystoneauth1.fixture.DiscoveryList",
  "keystoneauth1.fixture.V2Discovery",
  "keystoneauth1.fixture.V2Token",
  "keystoneauth1.fixture.V3Discovery",
  "keystoneauth1.fixture.V3Token",
  "keystoneauth1.identity",
  "keystoneauth1.identity.Password",
  "keystoneauth1.identity.Token",
  "keystoneauth1.loading",
  "keystoneauth1.loading.get_plugin_loader",
  "keystoneauth1.loading.session",
  "keystoneauth1.loading.session.Session",
  "keystoneauth1.loading.session.register_argparse_arguments",
  "keystoneauth1.token_endpoint",
  "keystoneauth1.token_endpoint.Token",
  "logging",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.basicConfig",
  "logging.getLogger",
  "mock",
  "mock.ANY",
  "mock.MagicMock",
  "mock.Mock",
  "mock.assert_called_once_with",
  "mock.call",
  "mock.mock_open",
  "mock.patch",
  "mock.patch.object",
  "os.R_OK",
  "os.access",
  "os.environ.get",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "osc_lib.command.command",
  "osc_lib.command.command.Command",
  "osc_lib.command.command.Lister",
  "osc_lib.command.command.ShowOne",
  "osc_lib.tests.utils",
  "osc_lib.tests.utils.ParserException",
  "osc_lib.tests.utils.TestCommand",
  "osc_lib.utils",
  "osc_lib.utils.env",
  "osc_lib.utils.format_dict",
  "osc_lib.utils.format_list",
  "osc_lib.utils.get_client_class",
  "osc_lib.utils.get_dict_properties",
  "osc_lib.utils.get_item_properties",
  "osc_lib.utils.sort_items",
  "oslo_i18n",
  "oslo_i18n.TranslatorFactory",
  "oslo_serialization.base64",
  "oslo_serialization.base64.encode_as_bytes",
  "oslo_serialization.jsonutils",
  "oslo_serialization.jsonutils.dump_as_bytes",
  "oslo_serialization.jsonutils.dumps",
  "oslo_serialization.jsonutils.loads",
  "oslo_utils.encodeutils",
  "oslo_utils.encodeutils.safe_encode",
  "oslo_utils.importutils",
  "oslo_utils.importutils.import_versioned_module",
  "oslo_utils.strutils",
  "oslo_utils.strutils.bool_from_string",
  "oslo_utils.strutils.mask_password",
  "oslo_utils.strutils.to_slug",
  "oslo_utils.uuidutils",
  "oslo_utils.uuidutils.generate_uuid",
  "oslotest.base",
  "oslotest.base.BaseTestCase",
  "pbr.version",
  "pkgutil",
  "pkgutil.iter_modules",
  "prettytable",
  "prettytable.PrettyTable",
  "re",
  "re.DOTALL",
  "re.MULTILINE",
  "re.compile",
  "requests",
  "requests.Response",
  "requests.Session",
  "requests.exceptions.RequestException",
  "requests_mock",
  "requests_mock.mock",
  "shutil",
  "shutil.copyfileobj",
  "shutil.rmtree",
  "six",
  "six.PY3",
  "six.StringIO",
  "six.add_metaclass",
  "six.assertRaisesRegex",
  "six.moves",
  "six.moves.builtins",
  "six.moves.configparser",
  "six.moves.configparser.ConfigParser",
  "six.moves.configparser.NoOptionError",
  "six.moves.configparser.SafeConfigParser",
  "six.moves.http_client",
  "six.moves.http_client.BAD_GATEWAY",
  "six.moves.http_client.BAD_REQUEST",
  "six.moves.http_client.CONFLICT",
  "six.moves.http_client.EXPECTATION_FAILED",
  "six.moves.http_client.FORBIDDEN",
  "six.moves.http_client.FOUND",
  "six.moves.http_client.GATEWAY_TIMEOUT",
  "six.moves.http_client.GONE",
  "six.moves.http_client.HTTPSConnection",
  "six.moves.http_client.HTTP_VERSION_NOT_SUPPORTED",
  "six.moves.http_client.INTERNAL_SERVER_ERROR",
  "six.moves.http_client.LENGTH_REQUIRED",
  "six.moves.http_client.METHOD_NOT_ALLOWED",
  "six.moves.http_client.MOVED_PERMANENTLY",
  "six.moves.http_client.MULTIPLE_CHOICES",
  "six.moves.http_client.NOT_ACCEPTABLE",
  "six.moves.http_client.NOT_FOUND",
  "six.moves.http_client.NOT_IMPLEMENTED",
  "six.moves.http_client.NO_CONTENT",
  "six.moves.http_client.OK",
  "six.moves.http_client.PAYMENT_REQUIRED",
  "six.moves.http_client.PRECONDITION_FAILED",
  "six.moves.http_client.PROXY_AUTHENTICATION_REQUIRED",
  "six.moves.http_client.REQUESTED_RANGE_NOT_SATISFIABLE",
  "six.moves.http_client.REQUEST_ENTITY_TOO_LARGE",
  "six.moves.http_client.REQUEST_TIMEOUT",
  "six.moves.http_client.REQUEST_URI_TOO_LONG",
  "six.moves.http_client.RESET_CONTENT",
  "six.moves.http_client.SERVICE_UNAVAILABLE",
  "six.moves.http_client.UNAUTHORIZED",
  "six.moves.http_client.UNPROCESSABLE_ENTITY",
  "six.moves.http_client.UNSUPPORTED_MEDIA_TYPE",
  "six.moves.http_client.USE_PROXY",
  "six.moves.range",
  "six.moves.urllib.parse",
  "six.moves.urllib.parse.urlencode",
  "six.moves.urllib.parse.urlparse",
  "six.moves.urllib.parse.urlunparse",
  "six.string_types",
  "six.text_type",
  "six.wraps",
  "socket",
  "socket.create_connection",
  "ssl",
  "ssl.CERT_NONE",
  "ssl.CERT_REQUIRED",
  "ssl.wrap_socket",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "sys",
  "sys.stderr.getvalue",
  "sys.stdin.isatty",
  "sys.stdin.read",
  "sys.stdout.close",
  "sys.stdout.getvalue",
  "tempest.lib.cli.base",
  "tempest.lib.cli.base.CLIClient",
  "tempest.lib.cli.base.ClientTestBase",
  "tempest.lib.cli.base.execute",
  "tempest.lib.common.utils.data_utils",
  "tempest.lib.common.utils.data_utils.rand_mac_address",
  "tempest.lib.common.utils.data_utils.rand_name",
  "tempest.lib.common.utils.data_utils.rand_uuid",
  "tempest.lib.exceptions",
  "tempest.lib.exceptions.CommandFailed",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "testtools",
  "testtools.TestCase",
  "testtools.matchers",
  "testtools.matchers.HasLength",
  "testtools.matchers.MatchesRegex",
  "textwrap",
  "textwrap.fill",
  "time",
  "yaml",
  "yaml.YAMLError",
  "yaml.safe_load"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "argparse": [
   "argparse/conda-forge/osx-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}