{
 "bad": [
  "SimpleVoter",
  "call_fn",
  "checkpointer.Checkpointer",
  "collections.Hashable",
  "combiner_module",
  "core.ApplierMetadata",
  "core.BaseLFApplier",
  "core.BasePreprocessor",
  "core.BaseTFApplier",
  "core.LabelingFunction",
  "core.Mapper",
  "core.Policy",
  "core.Preprocessor",
  "core.RowData",
  "core._FunctionCaller",
  "core.apply_lfs_to_data_point",
  "core.labeling_function",
  "dask.distributed.Client",
  "func",
  "hashlib.sha1",
  "input.new_full",
  "input.new_zeros",
  "input.shape",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.permutations",
  "itertools.product",
  "lf.LabelingFunction",
  "log_writer.LogWriter",
  "loggers.Checkpointer",
  "loggers.CheckpointerConfig",
  "loggers.LogManager",
  "loggers.LogManagerConfig",
  "loggers.LogWriter",
  "loggers.LogWriterConfig",
  "loggers.TensorBoardWriter",
  "mapper",
  "mapper_no_pre",
  "mapper_pre",
  "mapper_pre.reset_cache",
  "mapper_pre_2",
  "mapper_spark",
  "metric",
  "modules.slice_combiner.SliceCombinerModule",
  "networkx.Graph",
  "networkx.chordal_graph_cliques",
  "networkx.is_chordal",
  "networkx.minimum_spanning_tree",
  "nlp.BaseNLPLabelingFunction",
  "nlp.SpacyPreprocessorParameters",
  "nlp.base_nlp_labeling_function",
  "numpy.allclose",
  "numpy.any",
  "numpy.argmax",
  "numpy.array",
  "numpy.array_equal",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.diag",
  "numpy.diagonal",
  "numpy.dtype",
  "numpy.empty",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.int64",
  "numpy.log",
  "numpy.log10",
  "numpy.mod",
  "numpy.multiply",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.not_equal",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.random.choice",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.ravel",
  "numpy.recarray",
  "numpy.shape",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os.close",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.remove",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Index",
  "pandas.Series",
  "pandas.apply_lfs_to_data_point",
  "pandas.concat",
  "pandas.rows_to_triplets",
  "pandas.testing.assert_frame_equal",
  "preprocessor",
  "pyspark.SparkContext.getOrCreate",
  "pytest.mark.complex",
  "pytest.mark.spark",
  "scheduler.BatchIterator",
  "scheduler.Scheduler",
  "scheduler_class",
  "schedulers.batch_schedulers.get",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.diags",
  "sequential_scheduler.SequentialScheduler",
  "shuffled_scheduler.ShuffledScheduler",
  "shutil.copyfile",
  "shutil.rmtree",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.confusion_matrix",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.fbeta_score",
  "sklearn.metrics.matthews_corrcoef",
  "sklearn.metrics.precision_score",
  "sklearn.metrics.recall_score",
  "sklearn.metrics.roc_auc_score",
  "snorkel.classification.DictDataset.from_tensors",
  "split_words",
  "split_words_spark",
  "square_hit_tracker",
  "square_hit_tracker.n_hits",
  "task.Operation",
  "task.Task",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "tf",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.all",
  "torch.allclose",
  "torch.any",
  "torch.cat",
  "torch.clamp",
  "torch.device",
  "torch.diag",
  "torch.eq",
  "torch.equal",
  "torch.eye",
  "torch.float32",
  "torch.from_numpy",
  "torch.full_like",
  "torch.isclose",
  "torch.isnan",
  "torch.long",
  "torch.nn.Identity",
  "torch.nn.Linear",
  "torch.nn.Module",
  "torch.nn.ModuleDict",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.norm",
  "torch.ones",
  "torch.rand_like",
  "torch.stack",
  "torch.sum",
  "torch.zeros",
  "tqdm.tqdm.pandas",
  "types.SimpleNamespace",
  "typing.Any",
  "typing.Callable",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "utils.add_slice_labels",
  "utils.convert_to_slice_tasks",
  "utils.list_to_tensor"
 ],
 "deps": {
  "SimpleVoter": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "call_fn": [],
  "checkpointer": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "combiner_module": [],
  "core": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.16.0-py_0",
   "dask-core/conda-forge/noarch/dask-core-2.10.0-py_0",
   "dask-core/conda-forge/noarch/dask-core-2.8.1-py_0"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "hashlib": [],
  "input": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "lf": [],
  "log_writer": [],
  "loggers": [],
  "logging": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "mapper": [],
  "mapper_no_pre": [],
  "mapper_pre": [],
  "mapper_pre_2": [],
  "mapper_spark": [],
  "metric": [],
  "modules": [],
  "networkx": [],
  "nlp": [
   "nlp/conda-forge/noarch/nlp-0.4.0-pyh9f0ad1d_0"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblas_203"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pandas": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "preprocessor": [],
  "pyspark": [
   "pyspark/conda-forge/noarch/pyspark-2.4.5-py_0"
  ],
  "pytest": [],
  "random": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "scheduler": [],
  "scheduler_class": [],
  "schedulers": [],
  "scipy": [],
  "sequential_scheduler": [],
  "shuffled_scheduler": [],
  "shutil": [],
  "sklearn": [],
  "snorkel": [],
  "spacy": [
   "spacy/conda-forge/linux-64/spacy-2.1.6-py37hc9558a2_0"
  ],
  "split_words": [],
  "split_words_spark": [],
  "square_hit_tracker": [],
  "task": [],
  "tempfile": [],
  "tensorboardX": [
   "tensorboardx/conda-forge/noarch/tensorboardx-1.2-py_0",
   "tensorboardx/conda-forge/noarch/tensorboardx-1.6-py_0"
  ],
  "tf": [],
  "torch": [
   "pytorch-cpu/conda-forge/linux-64/pytorch-cpu-1.6.0-cpu_py36h3ab7d31_1"
  ],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.18.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.19.2-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.36.1-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.38.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.41.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.44.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.46.0-pyh9f0ad1d_0"
  ],
  "types": [],
  "typing": [],
  "unittest": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "utils": []
 }
}