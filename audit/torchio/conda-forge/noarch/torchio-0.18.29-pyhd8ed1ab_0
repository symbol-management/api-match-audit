{
 "bad": [
  "PIL.Image",
  "PIL.Image.fromarray",
  "SimpleITK",
  "SimpleITK.AffineTransform",
  "SimpleITK.BSplineTransformInitializer",
  "SimpleITK.BinaryContour",
  "SimpleITK.CompositeTransform",
  "SimpleITK.ConnectedComponent",
  "SimpleITK.Euler3DTransform",
  "SimpleITK.GetArrayFromImage",
  "SimpleITK.GetArrayViewFromImage",
  "SimpleITK.GetImageFromArray",
  "SimpleITK.Image",
  "SimpleITK.ImageSeriesReader",
  "SimpleITK.OtsuThresholdImageFilter",
  "SimpleITK.ReadImage",
  "SimpleITK.ReadTransform",
  "SimpleITK.RelabelComponent",
  "SimpleITK.ResampleImageFilter",
  "SimpleITK.ScaleTransform",
  "SimpleITK.Transform",
  "SimpleITK.WriteImage",
  "SimpleITK.sitkComposite",
  "SimpleITK.sitkFloat32",
  "_get_stem",
  "abc.ABC",
  "abc.abstractmethod",
  "ast.literal_eval",
  "augmentation.RandomTransform",
  "bounds_transform.BoundsTransform",
  "bounds_transform.TypeBounds",
  "click.Path",
  "click.argument",
  "click.command",
  "click.option",
  "collections.defaultdict",
  "constants.AFFINE",
  "constants.CHANNELS_DIMENSION",
  "constants.DATA",
  "constants.INTENSITY",
  "constants.LABEL",
  "constants.LOCATION",
  "constants.PATH",
  "constants.REPO_URL",
  "constants.STEM",
  "constants.TYPE",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "crop",
  "crop.Crop",
  "crop_or_pad.CropOrPad",
  "csv.DictReader",
  "data.Image",
  "data.LabelMap",
  "data.ScalarImage",
  "data.Subject",
  "data.image.Image",
  "data.image.LabelMap",
  "data.image.ScalarImage",
  "data.io.nib_to_sitk",
  "data.io.read_image",
  "data.io.read_matrix",
  "data.io.sitk_to_nib",
  "data.subject.Subject",
  "data_parser.DataParser",
  "data_parser.TypeTransformInput",
  "dataset.SubjectsDataset",
  "download.download_and_extract_archive",
  "download.download_url",
  "downsample",
  "duecredit.BibTeX",
  "duecredit.Doi",
  "duecredit.Text",
  "duecredit.Url",
  "duecredit.due",
  "function",
  "grid_sampler.GridSampler",
  "gzip.GzipFile",
  "gzip.open",
  "hashlib.md5",
  "image.Image",
  "interpolation.Interpolation",
  "interpolation.get_sitk_interpolator",
  "inverse_transform",
  "io.check_uint_to_int",
  "io.ensure_4d",
  "io.get_rotation_and_spacing_from_affine",
  "io.nib_to_sitk",
  "io.read_image",
  "io.write_image",
  "itertools.islice",
  "label_transform.LabelTransform",
  "logging.getLogger",
  "matplotlib",
  "matplotlib.colors.to_rgb",
  "matplotlib.pyplot",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.tight_layout",
  "mni.SubjectMNI",
  "normalization_transform.NormalizationTransform",
  "normalization_transform.TypeMaskingMethod",
  "numbers.Number",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.bool",
  "numpy.ceil",
  "numpy.clip",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diff",
  "numpy.digitize",
  "numpy.divide",
  "numpy.dot",
  "numpy.empty_like",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.fft.fftn",
  "numpy.fft.fftshift",
  "numpy.fft.ifftn",
  "numpy.fft.ifftshift",
  "numpy.flip",
  "numpy.fliplr",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.hstack",
  "numpy.inf",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.linalg.inv",
  "numpy.load",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.newaxis.permute",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.percentile",
  "numpy.prod",
  "numpy.radians",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.real",
  "numpy.repeat",
  "numpy.rot90",
  "numpy.round",
  "numpy.save",
  "numpy.savetxt",
  "numpy.searchsorted",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.tile",
  "numpy.transpose",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint8",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os.makedirs",
  "os.path.basename",
  "os.path.dirname",
  "os.path.expanduser",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "os.remove",
  "pad",
  "pad.Pad",
  "pprint.pformat",
  "preprocessing.Resample",
  "preprocessing.SequentialLabels",
  "random.shuffle",
  "remap_labels.RemapLabels",
  "result_type",
  "sampler.PatchSampler",
  "sampler.RandomSampler",
  "sampler.sampler.PatchSampler",
  "sampler.sampler.PatchSampler.__init__",
  "scipy.ndimage.gaussian_filter",
  "shutil.copyfileobj",
  "shutil.rmtree",
  "subject.Subject",
  "sys.exit",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.gettempdir",
  "torch.FloatTensor",
  "torch.Tensor",
  "torch.any",
  "torch.arange",
  "torch.as_tensor",
  "torch.bool",
  "torch.cat",
  "torch.hub.tqdm",
  "torch.int32",
  "torch.int64",
  "torch.isnan",
  "torch.load",
  "torch.manual_seed",
  "torch.multinomial",
  "torch.nn.functional.one_hot",
  "torch.nn.functional.pad",
  "torch.ones",
  "torch.ones_like",
  "torch.rand",
  "torch.randint",
  "torch.randn",
  "torch.random.get_rng_state",
  "torch.random.set_rng_state",
  "torch.stack",
  "torch.uint8",
  "torch.unique",
  "torch.utils.data.DataLoader",
  "torch.utils.data.Dataset",
  "torch.utils.data._utils.collate.default_collate",
  "torch.zeros",
  "torch.zeros_like",
  "torchio.ScalarImage",
  "torchio.cli.apply_transform.get_params_dict_from_kwargs",
  "torchio.cli.apply_transform.main",
  "torchio.cli.print_info.main",
  "torchio.data.image.PROTECTED_KEYS",
  "torchio.data.image.TypeBound",
  "torchio.data.image.TypeBounds",
  "torchio.data.image.deprecation_message",
  "torchio.data.io.FLIPXY",
  "torchio.data.io._from_itk_convention",
  "torchio.data.io._matrix_to_itk_transform",
  "torchio.data.io._read_dicom",
  "torchio.data.io._read_itk_matrix",
  "torchio.data.io._read_nibabel",
  "torchio.data.io._read_niftyreg_matrix",
  "torchio.data.io._read_sitk",
  "torchio.data.io._to_itk_convention",
  "torchio.data.io._write_itk_matrix",
  "torchio.data.io._write_nibabel",
  "torchio.data.io._write_niftyreg_matrix",
  "torchio.data.io._write_sitk",
  "torchio.data.io.check_uint_to_int",
  "torchio.data.io.ensure_4d",
  "torchio.data.io.get_rotation_and_spacing_from_affine",
  "torchio.data.io.nib_to_sitk",
  "torchio.data.io.sitk_to_nib",
  "torchio.data.sampler.sampler.PatchSampler",
  "torchio.data.subject.Subject",
  "torchio.datasets.bite.BITE",
  "torchio.datasets.bite.LabelMap",
  "torchio.datasets.bite.ScalarImage",
  "torchio.datasets.bite.Subject",
  "torchio.datasets.bite.SubjectsDataset",
  "torchio.datasets.episurg.LabelMap",
  "torchio.datasets.episurg.ScalarImage",
  "torchio.datasets.episurg.Subject",
  "torchio.datasets.episurg.SubjectsDataset",
  "torchio.datasets.fpg.DATA_REPO",
  "torchio.datasets.fpg.LabelMap",
  "torchio.datasets.fpg.ScalarImage",
  "torchio.datasets.fpg.Subject",
  "torchio.datasets.itk_snap.itk_snap.SubjectITKSNAP",
  "torchio.datasets.ixi.LabelMap",
  "torchio.datasets.ixi.ScalarImage",
  "torchio.datasets.ixi.Subject",
  "torchio.datasets.ixi.SubjectsDataset",
  "torchio.datasets.ixi.get_subject_id",
  "torchio.datasets.ixi.sglob",
  "torchio.datasets.mni.colin.TISSUES_2008",
  "torchio.datasets.mni.icbm.LabelMap",
  "torchio.datasets.mni.icbm.ScalarImage",
  "torchio.datasets.mni.mni.Subject",
  "torchio.datasets.mni.pediatric.LabelMap",
  "torchio.datasets.mni.pediatric.SUPPORTED_YEARS",
  "torchio.datasets.mni.pediatric.ScalarImage",
  "torchio.datasets.mni.pediatric.format_age",
  "torchio.datasets.slicer.SLICER_URL",
  "torchio.datasets.slicer.ScalarImage",
  "torchio.datasets.slicer.Subject",
  "torchio.datasets.slicer.URLS_DICT",
  "torchio.download._is_gzip",
  "torchio.download._is_tar",
  "torchio.download._is_targz",
  "torchio.download._is_tarxz",
  "torchio.download._is_tgz",
  "torchio.download._is_zip",
  "torchio.download.calculate_md5",
  "torchio.download.check_integrity",
  "torchio.download.check_md5",
  "torchio.download.download_url",
  "torchio.download.extract_archive",
  "torchio.download.gen_bar_updater",
  "torchio.external.due.InactiveDueCreditCollector",
  "torchio.external.due._donothing_func",
  "torchio.transforms",
  "torchio.transforms.augmentation.composition.Compose",
  "torchio.transforms.augmentation.composition.RandomTransform",
  "torchio.transforms.augmentation.composition.Transform",
  "torchio.transforms.augmentation.composition.TypeTransformsDict",
  "torchio.transforms.augmentation.intensity.random_bias_field.BiasField",
  "torchio.transforms.augmentation.intensity.random_bias_field.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_bias_field.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_bias_field._parse_order",
  "torchio.transforms.augmentation.intensity.random_blur.Blur",
  "torchio.transforms.augmentation.intensity.random_blur.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_blur.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_blur.blur",
  "torchio.transforms.augmentation.intensity.random_gamma.Gamma",
  "torchio.transforms.augmentation.intensity.random_gamma.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_gamma.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_gamma.power",
  "torchio.transforms.augmentation.intensity.random_ghosting.FourierTransform",
  "torchio.transforms.augmentation.intensity.random_ghosting.Ghosting",
  "torchio.transforms.augmentation.intensity.random_ghosting.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_ghosting.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_ghosting._parse_restore",
  "torchio.transforms.augmentation.intensity.random_labels_to_image.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_labels_to_image.LabelsToImage",
  "torchio.transforms.augmentation.intensity.random_labels_to_image.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_labels_to_image._check_mean_and_std_length",
  "torchio.transforms.augmentation.intensity.random_labels_to_image._parse_label_key",
  "torchio.transforms.augmentation.intensity.random_labels_to_image._parse_used_labels",
  "torchio.transforms.augmentation.intensity.random_motion.FourierTransform",
  "torchio.transforms.augmentation.intensity.random_motion.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_motion.Motion",
  "torchio.transforms.augmentation.intensity.random_motion.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_noise.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_noise.Noise",
  "torchio.transforms.augmentation.intensity.random_noise.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_noise.get_noise",
  "torchio.transforms.augmentation.intensity.random_spike.FourierTransform",
  "torchio.transforms.augmentation.intensity.random_spike.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_spike.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_spike.Spike",
  "torchio.transforms.augmentation.intensity.random_swap.IntensityTransform",
  "torchio.transforms.augmentation.intensity.random_swap.RandomTransform",
  "torchio.transforms.augmentation.intensity.random_swap.Swap",
  "torchio.transforms.augmentation.intensity.random_swap.TypeLocations",
  "torchio.transforms.augmentation.intensity.random_swap.crop",
  "torchio.transforms.augmentation.intensity.random_swap.get_random_indices_from_shape",
  "torchio.transforms.augmentation.intensity.random_swap.insert",
  "torchio.transforms.augmentation.intensity.random_swap.swap",
  "torchio.transforms.augmentation.random_transform.Transform",
  "torchio.transforms.augmentation.spatial.random_affine.Affine",
  "torchio.transforms.augmentation.spatial.random_affine.RandomTransform",
  "torchio.transforms.augmentation.spatial.random_affine.SpatialTransform",
  "torchio.transforms.augmentation.spatial.random_affine.TypeOneToSixFloat",
  "torchio.transforms.augmentation.spatial.random_affine._parse_default_value",
  "torchio.transforms.augmentation.spatial.random_affine._parse_scales_isotropic",
  "torchio.transforms.augmentation.spatial.random_affine.get_borders_mean",
  "torchio.transforms.augmentation.spatial.random_anisotropy.RandomTransform",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation.ElasticDeformation",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation.RandomTransform",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation.SPLINE_ORDER",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation.SpatialTransform",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation._parse_max_displacement",
  "torchio.transforms.augmentation.spatial.random_elastic_deformation._parse_num_control_points",
  "torchio.transforms.augmentation.spatial.random_flip.Flip",
  "torchio.transforms.augmentation.spatial.random_flip.RandomTransform",
  "torchio.transforms.augmentation.spatial.random_flip.SpatialTransform",
  "torchio.transforms.augmentation.spatial.random_flip._ensure_axes_indices",
  "torchio.transforms.augmentation.spatial.random_flip._flip_image",
  "torchio.transforms.augmentation.spatial.random_flip._parse_axes",
  "torchio.transforms.data_parser.TypeTransformInput",
  "torchio.transforms.interpolation.Interpolation",
  "torchio.transforms.preprocessing.intensity.histogram_standardization.DEFAULT_CUTOFF",
  "torchio.transforms.preprocessing.intensity.histogram_standardization.HistogramStandardization",
  "torchio.transforms.preprocessing.intensity.histogram_standardization.STANDARD_RANGE",
  "torchio.transforms.preprocessing.intensity.histogram_standardization.TypeLandmarks",
  "torchio.transforms.preprocessing.intensity.histogram_standardization._get_average_mapping",
  "torchio.transforms.preprocessing.intensity.histogram_standardization._get_percentiles",
  "torchio.transforms.preprocessing.intensity.histogram_standardization._standardize_cutoff",
  "torchio.transforms.preprocessing.intensity.histogram_standardization.normalize",
  "torchio.transforms.preprocessing.intensity.normalization_transform.IntensityTransform",
  "torchio.transforms.preprocessing.label.remap_labels.RemapLabels",
  "torchio.transforms.preprocessing.spatial.bounds_transform.SpatialTransform",
  "torchio.transforms.preprocessing.spatial.ensure_shape_multiple.SpatialTransform",
  "torchio.transforms.preprocessing.spatial.resample.SpatialTransform",
  "torchio.transforms.preprocessing.spatial.resample.TypeSpacing",
  "torchio.transforms.preprocessing.spatial.resample.TypeTarget",
  "torchio.transforms.preprocessing.spatial.to_canonical.SpatialTransform",
  "torchio.transforms.transform.Compose",
  "torchio.transforms.transform.CropOrPad",
  "torchio.transforms.transform.EnsureShapeMultiple",
  "torchio.transforms.transform.OneOf",
  "torchio.transforms.transform.TypeBounds",
  "torchio.transforms.transform.TypeMaskingMethod",
  "torchio.transforms.transform.TypeSixBounds",
  "torchio.transforms.transform.anat_axes",
  "torchio.transforms.transform.copy",
  "torchio.typing.TypeTripletInt",
  "torchio.utils.apply_transform_to_file",
  "torchio.utils.data",
  "torchio.utils.guess_type",
  "torchio.visualization.color_labels",
  "torchio.visualization.import_mpl_plt",
  "torchio.visualization.plot_volume",
  "torchio.visualization.rotate",
  "transform",
  "transform.AddTransform",
  "transform.GetCoefficientImages",
  "transform.GetInverse",
  "transform.GetMatrix",
  "transform.GetTranslation",
  "transform.SetCenter",
  "transform.SetMatrix",
  "transform.SetRotation",
  "transform.SetScale",
  "transform.SetTranslation",
  "transform.Transform",
  "transform.TypeMaskingMethod",
  "transform.TypeSixBounds",
  "transform.TypeTripletInt",
  "transform.inverse",
  "transform.is_invertible",
  "transform.name",
  "transform_class",
  "transforms.Crop",
  "transforms.Pad",
  "transforms.Transform",
  "transforms.augmentation.composition.Compose",
  "transforms.intensity_transform.IntensityTransform",
  "transforms.preprocessing.spatial.crop.Crop",
  "transforms.preprocessing.spatial.to_canonical.ToCanonical",
  "transforms.transform.Transform",
  "transforms.transform.TypeBounds",
  "transforms.transform.TypeMaskingMethod",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Generator",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.TypeCallable",
  "typing.TypeData",
  "typing.TypeKeys",
  "typing.TypeNumber",
  "typing.TypePatchSize",
  "typing.TypePath",
  "typing.TypeRangeFloat",
  "typing.TypeSextetFloat",
  "typing.TypeTripletFloat",
  "typing.TypeTripletInt",
  "typing.TypeTuple",
  "typing.Union",
  "upsample",
  "urllib.error.URLError",
  "urllib.request.urlretrieve",
  "utils.check_sequence",
  "utils.compress",
  "utils.get_major_sitk_version",
  "utils.get_stem",
  "utils.get_subclasses",
  "utils.get_torchio_cache_dir",
  "utils.to_tuple",
  "visualization.plot_subject",
  "visualization.plot_volume",
  "warnings.warn",
  "weighted.WeightedSampler",
  "zipfile.ZipFile"
 ],
 "deps": {
  "PIL": [],
  "SimpleITK": [],
  "_get_stem": [],
  "abc": [],
  "ast": [],
  "augmentation": [],
  "bounds_transform": [],
  "click": [],
  "collections": [],
  "constants": [],
  "contextlib": [],
  "copy": [],
  "crop": [],
  "crop_or_pad": [],
  "csv": [],
  "data": [],
  "data_parser": [],
  "dataset": [],
  "deprecated": [
   "deprecated/conda-forge/noarch/deprecated-1.2.0-py_0"
  ],
  "download": [],
  "downsample": [],
  "duecredit": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "function": [],
  "grid_sampler": [],
  "gzip": [],
  "hashlib": [],
  "humanize": [
   "humanize/conda-forge/noarch/humanize-2.4.1-py_0"
  ],
  "image": [],
  "interpolation": [],
  "inverse_transform": [],
  "io": [],
  "itertools": [],
  "label_transform": [],
  "logging": [],
  "matplotlib": [],
  "mni": [],
  "nibabel": [
   "nibabel/conda-forge/noarch/nibabel-2.3.2-pyh24bf2e0_0"
  ],
  "normalization_transform": [],
  "numbers": [],
  "numpy": [],
  "os": [],
  "pad": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pprint": [],
  "preprocessing": [],
  "random": [],
  "remap_labels": [],
  "result_type": [],
  "sampler": [],
  "scipy": [],
  "shutil": [],
  "subject": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "torch": [],
  "torchio": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.19.2-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.36.1-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.41.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.44.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.46.0-pyh9f0ad1d_0"
  ],
  "transform": [],
  "transform_class": [],
  "transforms": [],
  "typing": [],
  "upsample": [],
  "urllib": [],
  "utils": [],
  "visualization": [],
  "warnings": [],
  "weighted": [],
  "zipfile": []
 }
}