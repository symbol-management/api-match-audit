{
 "bad": [
  "Counter",
  "_decode",
  "_read_encoded_file",
  "append",
  "array.array",
  "build_entity",
  "cls",
  "collect_appdata",
  "collect_subclass",
  "collect_xdata",
  "const.BLK_ANONYMOUS",
  "const.BLK_XREF",
  "const.BLK_XREF_OVERLAY",
  "const.POLYLINE_3D_POLYLINE",
  "const.POLYLINE_3D_POLYMESH",
  "const.POLYLINE_MESH_CLOSED_M_DIRECTION",
  "const.POLYLINE_MESH_CLOSED_N_DIRECTION",
  "const.POLYLINE_POLYFACE",
  "const.POLYLINE_SPLINE_FIT_VERTICES_ADDED",
  "const.POLYMESH_BEZIER_SURFACE",
  "const.POLYMESH_CUBIC_BSPLINE",
  "const.POLYMESH_QUADRIC_BSPLINE",
  "const.SPLINE_CLOSED",
  "const.SPLINE_LINEAR",
  "const.SPLINE_PERIODIC",
  "const.SPLINE_PLANAR",
  "const.SPLINE_RATIONAL",
  "const.VTX_CURVE_FIT_TANGENT",
  "const.VTX_SPLINE_FRAME_CONTROL_POINT",
  "const.acadrelease.get",
  "default_width",
  "drawing.Drawing",
  "dxfgrabber.__init__.PYTHON3",
  "dxfgrabber.__init__._read_encoded_file",
  "dxfgrabber.__init__.readfile_as_asc",
  "dxfgrabber.__init__.readfile_as_utf8",
  "dxfgrabber.__init__.version",
  "get_encoding",
  "get_mode",
  "headersection.HeaderSection.from_tags",
  "io.StringIO",
  "io.open",
  "method",
  "name",
  "next_tag",
  "skiptags",
  "sys.version_info.major",
  "tags.Tags.from_text",
  "typecaster"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}