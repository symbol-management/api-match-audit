{
 "bad": [
  "_indent",
  "_merge_meta",
  "_read_var",
  "_to_lower",
  "_try_fill_value",
  "_version.get_versions",
  "apply_test",
  "calc_days",
  "calc_seconds",
  "cftime.DatetimeGregorian",
  "cftime.datetime",
  "collections.abc.Iterable",
  "collections.defaultdict",
  "conv_strs",
  "copy.copy",
  "copy.deepcopy",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "datetime.datetime.weekday",
  "dateutil.parser.parse",
  "errors.MissingRequiredColumnError",
  "errors.NonUniqueMetadataError",
  "f",
  "filters.HIERARCHY_SEPARATOR",
  "filters.datetime_match",
  "filters.day_match",
  "filters.hour_match",
  "filters.month_match",
  "filters.pattern_match",
  "filters.years_match",
  "functools.wraps",
  "glob.glob",
  "groupby.RunGroupBy",
  "json.loads",
  "logging.getLogger",
  "netCDF4",
  "netCDF4.Dataset",
  "netcdf.inject_nc_methods",
  "numbers.Number",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.atleast_1d",
  "numpy.broadcast_to",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.equal",
  "numpy.floating",
  "numpy.frompyfunc",
  "numpy.int64",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.nditer",
  "numpy.newaxis",
  "numpy.number",
  "numpy.polyfit",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.timedelta64",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "offsets.generate_range",
  "offsets.to_offset",
  "openscm_units.unit_registry",
  "openscm_units.unit_registry.ScmUnitRegistry",
  "ops.inject_ops_methods",
  "os.makedirs",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.sep",
  "pandas.DataFrame",
  "pandas.DataFrame.from_records",
  "pandas.ExcelFile",
  "pandas.Index",
  "pandas.MultiIndex.from_frame",
  "pandas.Series",
  "pandas.__version__",
  "pandas.concat",
  "pandas.isna",
  "pandas.read_csv",
  "pandas.read_excel",
  "pandas.testing.assert_frame_equal",
  "pathlib.Path",
  "pint.Quantity",
  "pint_pandas.PintType.ureg",
  "plotting.inject_plotting_methods",
  "pyam.IamDataFrame",
  "pyam_compat.IamDataFrame",
  "pyam_compat.LongDatetimeIamDataFrame",
  "re.compile",
  "re.escape",
  "res_point",
  "safe_char",
  "scipy.interpolate.interp1d",
  "scmdata.ScmRun.from_nc",
  "scmdata._version.version_json",
  "scmdata.database._check_is_subdir",
  "scmdata.database.ensure_dir_exists",
  "scmdata.filters.HIERARCHY_SEPARATOR",
  "scmdata.filters.find_depth",
  "scmdata.filters.is_in",
  "scmdata.filters.time_match",
  "scmdata.groupby.RunGroupBy",
  "scmdata.groupby._GroupBy",
  "scmdata.groupby._maybe_wrap_array",
  "scmdata.netcdf.DEFAULT_FLOAT",
  "scmdata.netcdf.__version__",
  "scmdata.netcdf._get_idx",
  "scmdata.netcdf._get_nc_type",
  "scmdata.netcdf._nc_to_var",
  "scmdata.netcdf._read_nc",
  "scmdata.netcdf._var_to_nc",
  "scmdata.netcdf._write_nc",
  "scmdata.netcdf.has_netcdf",
  "scmdata.netcdf.logger",
  "scmdata.netcdf.nc_to_run",
  "scmdata.netcdf.run_to_nc",
  "scmdata.ops._calculate_linear_regression",
  "scmdata.ops._convert_linear_regression_raw_to_pdf",
  "scmdata.ops._perform_op",
  "scmdata.ops.add",
  "scmdata.ops.delta_per_delta_time",
  "scmdata.ops.divide",
  "scmdata.ops.has_scipy",
  "scmdata.ops.integrate",
  "scmdata.ops.linear_regression",
  "scmdata.ops.linear_regression_gradient",
  "scmdata.ops.linear_regression_intercept",
  "scmdata.ops.linear_regression_scmrun",
  "scmdata.ops.multiply",
  "scmdata.ops.prep_for_op",
  "scmdata.ops.scipy",
  "scmdata.ops.set_op_values",
  "scmdata.ops.subtract",
  "scmdata.plotting._deprecated_line_plot",
  "scmdata.plotting.has_seaborn",
  "scmdata.plotting.lineplot",
  "scmdata.run.BaseScmRun",
  "scmdata.run.MetadataType",
  "scmdata.run.ScmRun.required_cols",
  "scmdata.run._format_data",
  "scmdata.run._format_long_data",
  "scmdata.run._format_wide_data",
  "scmdata.run._from_ts",
  "scmdata.run._handle_potential_duplicates_in_append",
  "scmdata.run._logger",
  "scmdata.run._merge_metadata",
  "scmdata.run._read_file",
  "scmdata.run._read_pandas",
  "scmdata.run.run_append",
  "scmdata.run_append",
  "scmdata.testing._assert_frame_equal",
  "scmdata.testing._check_pandas_less_110",
  "scmdata.time.InsufficientDataError",
  "scmdata.time._TARGET_DTYPE",
  "scmdata.time._TARGET_TYPE",
  "scmdata.time._float_year_to_datetime",
  "scmdata.time._format_datetime",
  "scmdata.time._parse_datetime",
  "scmdata.time._ufunc_float_year_to_datetime",
  "scmdata.time._ufunc_str_to_datetime",
  "scmdata.timeseries.TimeSeries",
  "scmdata.timeseries._Counter",
  "scmdata.timeseries.get_default_name",
  "scmdata.units._unit_registry",
  "seaborn",
  "seaborn.lineplot",
  "shutil.rmtree",
  "test",
  "time.TimePoints",
  "time.TimeseriesConverter",
  "time._TARGET_DTYPE",
  "time.strptime",
  "tqdm.autonotebook.tqdm",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Tuple",
  "typing.Union",
  "units.UnitConverter",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xarray.DataArray",
  "xarray.coding.cftime_offsets.BaseCFTimeOffset",
  "xarray.coding.cftime_offsets.cftime_range",
  "xarray.core.common.ImplementsArrayReduce",
  "xarray.core.ops.inject_binary_ops",
  "xarray.core.ops.inject_reduce_methods"
 ],
 "deps": {
  "_indent": [],
  "_merge_meta": [],
  "_read_var": [],
  "_to_lower": [],
  "_try_fill_value": [],
  "_version": [],
  "apply_test": [],
  "calc_days": [],
  "calc_seconds": [],
  "cftime": [],
  "collections": [],
  "conv_strs": [],
  "copy": [],
  "datetime": [],
  "dateutil": [],
  "errors": [],
  "f": [],
  "filters": [],
  "functools": [],
  "glob": [],
  "groupby": [],
  "json": [],
  "logging": [],
  "netCDF4": [],
  "netcdf": [],
  "numbers": [],
  "numpy": [],
  "offsets": [],
  "openscm_units": [],
  "ops": [],
  "os": [],
  "pandas": [],
  "pathlib": [],
  "pint": [],
  "pint_pandas": [],
  "plotting": [],
  "pyam": [],
  "pyam_compat": [],
  "re": [],
  "res_point": [],
  "safe_char": [],
  "scipy": [],
  "scmdata": [],
  "seaborn": [],
  "shutil": [],
  "test": [],
  "time": [],
  "tqdm": [],
  "typing": [],
  "units": [],
  "warnings": [],
  "xarray": []
 }
}