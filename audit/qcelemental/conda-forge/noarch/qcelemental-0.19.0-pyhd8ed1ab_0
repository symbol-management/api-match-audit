{
 "bad": [
  "Data",
  "IPython.display.display",
  "Model",
  "Model2",
  "Nest",
  "_find_nist_unit",
  "_plausible_atom_orderings_wrapper",
  "_test_angle",
  "_test_dihedral",
  "_test_distance",
  "_version.get_versions",
  "addons._data_path.rglob",
  "addons.drop_qcsk",
  "addons.serialize_extensions",
  "addons.using_msgpack",
  "addons.using_networkx",
  "addons.using_nglview",
  "addons.using_web",
  "addons.xfail_on_pubchem_busy",
  "aliases",
  "aliases.extend",
  "basemodels.ProtoModel",
  "basemodels.ProtoModel.Config",
  "basemodels.qcschema_draft",
  "basis.BasisSet",
  "basis.BasisSet.__doc__",
  "build_transformer",
  "bytes.fromhex",
  "checkup_data.cfour_primary_masses",
  "checkup_data.periodictable.el2mass",
  "checkup_data.periodictable.el2z",
  "checkup_data.periodictable.eliso2mass",
  "checkup_data.periodictable.z2el.capitalize",
  "checkup_data.physconst",
  "chgmult.validate_and_fill_chgmult",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "common_models.ComputeError",
  "common_models.ComputeError.__base_doc__",
  "common_models.ComputeError.__doc__",
  "common_models.DriverEnum",
  "common_models.DriverEnum.__doc__",
  "common_models.DriverEnum.gradient",
  "common_models.Model",
  "common_models.Model.__base_doc__",
  "common_models.Model.__doc__",
  "common_models.Provenance",
  "common_models.Provenance.__base_doc__",
  "common_models.Provenance.__doc__",
  "common_models.qcschema_input_default",
  "common_models.qcschema_molecule_default",
  "common_models.qcschema_optimization_input_default",
  "common_models.qcschema_optimization_output_default",
  "common_models.qcschema_output_default",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "covalent_radii.CovalentRadii",
  "covalent_radii.covalentradii",
  "covalent_radii.covalentradii.get",
  "data.alvarez_2008_covalent_radii",
  "data.cpu_data_blob.data_blob",
  "data.dft_data_blob.data_blob",
  "data.dft_data_blob.data_blob.items",
  "data.mantina_2009_vanderwaals_radii",
  "data.nist_2011_atomic_weights",
  "data.nist_2014_codata",
  "data.nist_2018_codata",
  "datum.Datum",
  "datum.print_variables",
  "decimal.Decimal",
  "difflib.get_close_matches",
  "enum.Enum",
  "enum.EnumMeta",
  "exceptions.ChoicesError",
  "exceptions.DataUnavailableError",
  "exceptions.MoleculeFormatError",
  "exceptions.NotAnElementError",
  "exceptions.ValidationError",
  "extras.get_information",
  "filter_fragment",
  "fn",
  "from_arrays.from_arrays",
  "from_arrays.from_input_arrays",
  "func",
  "functools.lru_cache",
  "functools.partial",
  "hashlib.sha1",
  "importing.which_import",
  "importlib.util.find_spec",
  "itertools.filterfalse",
  "itertools.permutations",
  "itertools.product",
  "itertools.starmap",
  "json.JSONEncoder",
  "json.JSONEncoder.default",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "jsonschema.validate",
  "logging.error",
  "logging.info",
  "massage_dicts",
  "math.pi",
  "math.sqrt",
  "model",
  "models.AlignmentMill",
  "models.ProtoModel",
  "molecule.Molecule",
  "molparse.from_arrays.from_arrays",
  "molparse.from_schema.from_schema",
  "molparse.from_string.from_string",
  "molparse.to_schema.to_schema",
  "molparse.to_string.to_string",
  "molutil.align.B787",
  "molutil.align.compute_scramble",
  "molutil.guess_connectivity",
  "molutil.molecular_formula_from_symbols",
  "mpmath.mp.dps",
  "mpmath.mp.pi",
  "msgpack.dumps",
  "msgpack.loads",
  "networkx.DiGraph",
  "networkx.Graph",
  "networkx.adjacency_matrix",
  "networkx.bipartite.hopcroft_karp_matching",
  "networkx.from_numpy_matrix",
  "networkx.isolates",
  "networkx.simple_cycles",
  "networkx.single_source_shortest_path",
  "nglview.NGLWidget",
  "nglview.TextStructure",
  "nucleus.reconcile_nucleus",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argwhere",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_str",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.atleast_2d",
  "numpy.average",
  "numpy.bool_",
  "numpy.complex",
  "numpy.complex_",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.core.defchararray.title",
  "numpy.cos",
  "numpy.cross",
  "numpy.cumsum",
  "numpy.degrees",
  "numpy.diag",
  "numpy.diff",
  "numpy.dot",
  "numpy.dtype",
  "numpy.einsum",
  "numpy.errstate",
  "numpy.eye",
  "numpy.floating",
  "numpy.frombuffer",
  "numpy.hstack",
  "numpy.identity",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.integer",
  "numpy.isclose",
  "numpy.iscomplexobj",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.ix_",
  "numpy.lib.stride_tricks.as_strided",
  "numpy.linalg.eigh",
  "numpy.linalg.norm",
  "numpy.load",
  "numpy.log10",
  "numpy.min",
  "numpy.mod",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndindex",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.random.rand",
  "numpy.random.random_sample",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.reciprocal",
  "numpy.reshape",
  "numpy.save",
  "numpy.set_printoptions",
  "numpy.sin",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.string_",
  "numpy.subtract",
  "numpy.sum",
  "numpy.testing.assert_array_equal",
  "numpy.uint16",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "offer_atomic_number",
  "offer_element_symbol",
  "offer_mass_number",
  "offer_mass_value",
  "offer_reality",
  "offer_user_label",
  "os.F_OK",
  "os.X_OK",
  "os.environ.get",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.sep",
  "os.pathsep",
  "os.pathsep.join",
  "os.remove",
  "parse_as_psi4_ish",
  "parse_as_xyz_ish",
  "pathlib.Path",
  "periodic_table.periodictable",
  "periodic_table.periodictable.E",
  "periodic_table.periodictable._el2a2mass",
  "periodic_table.periodictable.to_A",
  "periodic_table.periodictable.to_E",
  "periodic_table.periodictable.to_Z",
  "periodic_table.periodictable.to_mass",
  "physical_constants.PhysicalConstantsContext",
  "physical_constants.constants",
  "physical_constants.constants.bohr2angstroms",
  "physical_constants.constants.conversion_factor",
  "pint.Context",
  "pint.UnitRegistry",
  "pint.errors.DimensionalityError",
  "pint.quantity._Quantity",
  "pkg_resources.parse_version",
  "pkg_resources.safe_version",
  "plot_coord",
  "pprint.PrettyPrinter",
  "pprint.pprint",
  "pubchem.get_pubchem_results",
  "pydantic.BaseModel",
  "pydantic.BaseSettings",
  "pydantic.ConstrainedFloat",
  "pydantic.ConstrainedInt",
  "pydantic.Field",
  "pydantic.VERSION",
  "pydantic.ValidationError",
  "pydantic.constr",
  "pydantic.fields.SHAPE_DICT",
  "pydantic.fields.SHAPE_LIST",
  "pydantic.fields.SHAPE_MAPPING",
  "pydantic.fields.SHAPE_SET",
  "pydantic.fields.SHAPE_SINGLETON",
  "pydantic.fields.SHAPE_TUPLE",
  "pydantic.json.pydantic_encoder",
  "pydantic.validator",
  "pytest.approx",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "qcelemental.ChoicesError",
  "qcelemental.CovalentRadii",
  "qcelemental.DataUnavailableError",
  "qcelemental.Datum",
  "qcelemental.MoleculeFormatError",
  "qcelemental.NotAnElementError",
  "qcelemental.PhysicalConstantsContext",
  "qcelemental.ValidationError",
  "qcelemental.VanderWaalsRadii",
  "qcelemental.__version__",
  "qcelemental._version.version_json",
  "qcelemental.constants",
  "qcelemental.constants.Quantity",
  "qcelemental.constants.bohr2angstroms",
  "qcelemental.constants.conversion_factor",
  "qcelemental.constants.name",
  "qcelemental.constants.string_representation",
  "qcelemental.covalent_radii",
  "qcelemental.covalent_radii.CovalentRadii",
  "qcelemental.covalentradii",
  "qcelemental.covalentradii.get",
  "qcelemental.covalentradii.string_representation",
  "qcelemental.covalentradii.write_c_header",
  "qcelemental.datum.print_variables",
  "qcelemental.exceptions.NotAnElementError",
  "qcelemental.extras.__info",
  "qcelemental.extras.get_information",
  "qcelemental.extras.versions",
  "qcelemental.info.cpu_info.InstructionSetEnum",
  "qcelemental.info.cpu_info.ProcessorContext",
  "qcelemental.info.cpu_info.ProcessorInfo",
  "qcelemental.info.cpu_info.VendorEnum",
  "qcelemental.info.cpu_info.context",
  "qcelemental.info.cpu_info.context.index",
  "qcelemental.info.cpu_info.context.processors",
  "qcelemental.info.cpu_info.get",
  "qcelemental.info.data.cpu_data_blob.data_columns",
  "qcelemental.info.data.cpu_data_blob.data_rows",
  "qcelemental.info.dft_info.DFTFunctionalContext",
  "qcelemental.info.dft_info.DFTFunctionalInfo",
  "qcelemental.info.dft_info.dftfunctionalinfo",
  "qcelemental.info.dft_info.get",
  "qcelemental.models.AlignmentMill",
  "qcelemental.models.AtomicInput",
  "qcelemental.models.AtomicResult",
  "qcelemental.models.AtomicResultProperties",
  "qcelemental.models.ComputeError",
  "qcelemental.models.FailedOperation",
  "qcelemental.models.Molecule",
  "qcelemental.models.Molecule.from_data",
  "qcelemental.models.Molecule.from_file",
  "qcelemental.models.Molecule.parse_raw",
  "qcelemental.models.Optimization",
  "qcelemental.models.OptimizationInput",
  "qcelemental.models.OptimizationResult",
  "qcelemental.models.ProtoModel",
  "qcelemental.models.Provenance",
  "qcelemental.models.Result",
  "qcelemental.models.ResultInput",
  "qcelemental.models.ResultProperties",
  "qcelemental.models.basemodels._repr",
  "qcelemental.models.basis.BasisCenter",
  "qcelemental.models.basis.BasisSet",
  "qcelemental.models.basis.ECPPotential",
  "qcelemental.models.basis.ECPType",
  "qcelemental.models.basis.ElectronShell",
  "qcelemental.models.basis.HarmonicType",
  "qcelemental.models.basis.NonnegativeInt",
  "qcelemental.models.common_models.ComputeError",
  "qcelemental.models.molecule.BondOrderFloat",
  "qcelemental.models.molecule.CHARGE_NOISE",
  "qcelemental.models.molecule.GEOMETRY_NOISE",
  "qcelemental.models.molecule.Identifiers",
  "qcelemental.models.molecule.MASS_NOISE",
  "qcelemental.models.molecule.Molecule",
  "qcelemental.models.molecule.NonnegativeInt",
  "qcelemental.models.molecule._extension_map",
  "qcelemental.models.molecule._filter_defaults",
  "qcelemental.models.molecule.float_prep",
  "qcelemental.models.procedures.OptimizationInput",
  "qcelemental.models.procedures.OptimizationProtocols",
  "qcelemental.models.procedures.OptimizationResult",
  "qcelemental.models.procedures.QCInputSpecification",
  "qcelemental.models.procedures.TrajectoryProtocolEnum",
  "qcelemental.models.qcschema_models",
  "qcelemental.models.results.AtomicInput",
  "qcelemental.models.results.AtomicResult",
  "qcelemental.models.results.AtomicResultProperties",
  "qcelemental.models.results.AtomicResultProtocols",
  "qcelemental.models.results.ErrorCorrectionProtocol",
  "qcelemental.models.results.WavefunctionProperties",
  "qcelemental.models.results.WavefunctionProtocolEnum",
  "qcelemental.models.types.ArrayMeta",
  "qcelemental.models.types.TypedArray",
  "qcelemental.molparse.chgmult._apply_default",
  "qcelemental.molparse.chgmult._high_spin_sum",
  "qcelemental.molparse.chgmult._mult_ok",
  "qcelemental.molparse.chgmult._parity_ok",
  "qcelemental.molparse.chgmult._sufficient_electrons_for_mult",
  "qcelemental.molparse.contiguize_from_fragment_pattern",
  "qcelemental.molparse.from_arrays",
  "qcelemental.molparse.from_arrays.from_arrays",
  "qcelemental.molparse.from_arrays.validate_and_fill_efp",
  "qcelemental.molparse.from_arrays.validate_and_fill_fragments",
  "qcelemental.molparse.from_arrays.validate_and_fill_frame",
  "qcelemental.molparse.from_arrays.validate_and_fill_geometry",
  "qcelemental.molparse.from_arrays.validate_and_fill_nuclei",
  "qcelemental.molparse.from_arrays.validate_and_fill_units",
  "qcelemental.molparse.from_arrays.validate_and_fill_unsettled_geometry",
  "qcelemental.molparse.from_input_arrays",
  "qcelemental.molparse.from_schema",
  "qcelemental.molparse.from_schema.contiguize_from_fragment_pattern",
  "qcelemental.molparse.from_string",
  "qcelemental.molparse.from_string._filter_kwargs",
  "qcelemental.molparse.from_string._filter_libefp",
  "qcelemental.molparse.from_string._filter_mints",
  "qcelemental.molparse.from_string._filter_pubchem",
  "qcelemental.molparse.from_string._filter_universals",
  "qcelemental.molparse.from_string._filter_xyz",
  "qcelemental.molparse.from_string.atom_cartesian",
  "qcelemental.molparse.from_string.atom_cartesian_strict",
  "qcelemental.molparse.from_string.atom_vcart",
  "qcelemental.molparse.from_string.atom_zmat1",
  "qcelemental.molparse.from_string.atom_zmat2",
  "qcelemental.molparse.from_string.atom_zmat3",
  "qcelemental.molparse.from_string.atom_zmat4",
  "qcelemental.molparse.from_string.bohrang",
  "qcelemental.molparse.from_string.cgmp",
  "qcelemental.molparse.from_string.com",
  "qcelemental.molparse.from_string.efppoints",
  "qcelemental.molparse.from_string.efpxyzabc",
  "qcelemental.molparse.from_string.fragment_marker",
  "qcelemental.molparse.from_string.orient",
  "qcelemental.molparse.from_string.pubchemre",
  "qcelemental.molparse.from_string.symmetry",
  "qcelemental.molparse.from_string.variable",
  "qcelemental.molparse.from_string.xyz1",
  "qcelemental.molparse.from_string.xyz1strict",
  "qcelemental.molparse.from_string.xyz2",
  "qcelemental.molparse.nucleus._nucleus",
  "qcelemental.molparse.nucleus.parse_nucleus_label",
  "qcelemental.molparse.pubchem.PubChemObj",
  "qcelemental.molparse.pubchem.get_pubchem_results",
  "qcelemental.molparse.pubchem.obj",
  "qcelemental.molparse.reconcile_nucleus",
  "qcelemental.molparse.regex.NUMBER",
  "qcelemental.molparse.regex.SEP",
  "qcelemental.molparse.to_schema",
  "qcelemental.molparse.to_string",
  "qcelemental.molparse.to_string._atoms_formatter",
  "qcelemental.molparse.to_string.formula_generator",
  "qcelemental.molparse.validate_and_fill_chgmult",
  "qcelemental.molutil.B787",
  "qcelemental.molutil.align._nre",
  "qcelemental.molutil.align._plausible_atom_orderings",
  "qcelemental.molutil.align._pseudo_nre",
  "qcelemental.molutil.align.kabsch_align",
  "qcelemental.molutil.align.kabsch_quaternion",
  "qcelemental.molutil.compute_scramble",
  "qcelemental.molutil.guess_connectivity",
  "qcelemental.molutil.kabsch_align",
  "qcelemental.molutil.molecular_formula.molecular_formula_from_symbols",
  "qcelemental.molutil.order_molecular_formula",
  "qcelemental.molutil.test_molutil.chiral",
  "qcelemental.molutil.test_molutil.ref_rmsd",
  "qcelemental.molutil.test_molutil.s18ooc12",
  "qcelemental.molutil.test_molutil.soco10",
  "qcelemental.molutil.test_molutil.soco12",
  "qcelemental.molutil.test_molutil.sooc12",
  "qcelemental.molutil.test_molutil.sooco12",
  "qcelemental.molutil.test_molutil.ss22_12",
  "qcelemental.molutil.test_molutil.trop_cs",
  "qcelemental.molutil.test_molutil.trop_gs_c2v",
  "qcelemental.periodic_table",
  "qcelemental.periodic_table.PeriodicTable",
  "qcelemental.periodic_table.run_comparison",
  "qcelemental.periodic_table.write_c_header",
  "qcelemental.periodictable._resolve_atom_to_key",
  "qcelemental.periodictable.to_A",
  "qcelemental.periodictable.to_E",
  "qcelemental.periodictable.to_Z",
  "qcelemental.periodictable.to_atomic_number",
  "qcelemental.periodictable.to_element",
  "qcelemental.periodictable.to_group",
  "qcelemental.periodictable.to_mass",
  "qcelemental.periodictable.to_mass_number",
  "qcelemental.periodictable.to_name",
  "qcelemental.periodictable.to_period",
  "qcelemental.periodictable.to_symbol",
  "qcelemental.physical_constants",
  "qcelemental.physical_constants.context.PhysicalConstantsContext",
  "qcelemental.physical_constants.context._get_pi",
  "qcelemental.physical_constants.context.run_comparison",
  "qcelemental.physical_constants.context.run_internal_comparison",
  "qcelemental.physical_constants.context.write_c_header",
  "qcelemental.physical_constants.spec",
  "qcelemental.testing._compare_recursive",
  "qcelemental.testing._handle_return",
  "qcelemental.testing.compare",
  "qcelemental.testing.compare_molrecs",
  "qcelemental.testing.compare_recursive",
  "qcelemental.testing.compare_values",
  "qcelemental.testing.tnm",
  "qcelemental.tests.addons._data_path",
  "qcelemental.tests.addons.internet_connection",
  "qcelemental.tests.addons.using_msgpack",
  "qcelemental.tests.test_constants.contexts",
  "qcelemental.tests.test_covalentradii.a2b",
  "qcelemental.tests.test_datum.dataset",
  "qcelemental.tests.test_model_results.center_data",
  "qcelemental.tests.test_model_results.optimization_data_fixture",
  "qcelemental.tests.test_model_results.result_data_fixture",
  "qcelemental.tests.test_model_results.wavefunction_data_fixture",
  "qcelemental.tests.test_molecule.water_dimer_minima",
  "qcelemental.tests.test_molecule.water_molecule",
  "qcelemental.tests.test_molparse_align_chiral.chiralanem",
  "qcelemental.tests.test_molparse_align_chiral.chiralaneopt",
  "qcelemental.tests.test_molparse_align_chiral.clbrbutRR",
  "qcelemental.tests.test_molparse_align_chiral.clbrbutRS",
  "qcelemental.tests.test_molparse_align_chiral.clbrbutSR",
  "qcelemental.tests.test_molparse_align_chiral.clbrbutSS",
  "qcelemental.tests.test_molparse_align_chiral.dibromobutRR",
  "qcelemental.tests.test_molparse_align_chiral.dibromobutRS",
  "qcelemental.tests.test_molparse_align_chiral.dibromobutSR",
  "qcelemental.tests.test_molparse_align_chiral.dibromobutSS",
  "qcelemental.tests.test_molparse_align_chiral.do_plot",
  "qcelemental.tests.test_molparse_align_chiral.run_mirror",
  "qcelemental.tests.test_molparse_align_chiral.simpleR",
  "qcelemental.tests.test_molparse_align_chiral.simpleS",
  "qcelemental.tests.test_molparse_align_chiral.uno_cutoff",
  "qcelemental.tests.test_molparse_align_chiral.verbose",
  "qcelemental.tests.test_molparse_align_chiral.water16a",
  "qcelemental.tests.test_molparse_align_chiral.water16b",
  "qcelemental.tests.test_molparse_from_schema._schema_prov_stamp",
  "qcelemental.tests.test_molparse_from_schema.schema14_1",
  "qcelemental.tests.test_molparse_from_schema.schema14_psi4_np",
  "qcelemental.tests.test_molparse_from_string._arrays_prov_stamp",
  "qcelemental.tests.test_molparse_from_string._check_eq_molrec_minimal_model",
  "qcelemental.tests.test_molparse_from_string._string_prov_stamp",
  "qcelemental.tests.test_molparse_from_string._trans_molrec_to_model",
  "qcelemental.tests.test_molparse_from_string.ans1",
  "qcelemental.tests.test_molparse_from_string.ans12",
  "qcelemental.tests.test_molparse_from_string.ans2",
  "qcelemental.tests.test_molparse_from_string.ans5",
  "qcelemental.tests.test_molparse_from_string.ans6",
  "qcelemental.tests.test_molparse_from_string.ans7",
  "qcelemental.tests.test_molparse_from_string.ans8",
  "qcelemental.tests.test_molparse_from_string.blankefp",
  "qcelemental.tests.test_molparse_from_string.blankqm",
  "qcelemental.tests.test_molparse_from_string.fullans10efp",
  "qcelemental.tests.test_molparse_from_string.fullans10qm",
  "qcelemental.tests.test_molparse_from_string.fullans12",
  "qcelemental.tests.test_molparse_from_string.fullans14",
  "qcelemental.tests.test_molparse_from_string.fullans17",
  "qcelemental.tests.test_molparse_from_string.fullans1a",
  "qcelemental.tests.test_molparse_from_string.fullans1c",
  "qcelemental.tests.test_molparse_from_string.fullans2",
  "qcelemental.tests.test_molparse_from_string.fullans2_unnp",
  "qcelemental.tests.test_molparse_from_string.fullans5b",
  "qcelemental.tests.test_molparse_from_string.fullans6",
  "qcelemental.tests.test_molparse_from_string.fullans7",
  "qcelemental.tests.test_molparse_from_string.fullans8",
  "qcelemental.tests.test_molparse_from_string.subject1",
  "qcelemental.tests.test_molparse_from_string.subject12",
  "qcelemental.tests.test_molparse_from_string.subject14",
  "qcelemental.tests.test_molparse_from_string.subject2",
  "qcelemental.tests.test_molparse_from_string.subject5",
  "qcelemental.tests.test_molparse_from_string.subject6",
  "qcelemental.tests.test_molparse_from_string.subject7",
  "qcelemental.tests.test_molparse_from_string.subject8",
  "qcelemental.tests.test_molparse_pubchem._string_prov_stamp",
  "qcelemental.tests.test_molparse_pubchem.ans13",
  "qcelemental.tests.test_molparse_pubchem.ans4",
  "qcelemental.tests.test_molparse_pubchem.fullans13",
  "qcelemental.tests.test_molparse_pubchem.fullans4",
  "qcelemental.tests.test_molparse_pubchem.subject13",
  "qcelemental.tests.test_molparse_pubchem.subject4",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co60",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co60_mine",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co60ghost",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co_dominant",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co_dominant_mine",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co_dominant_shortmass",
  "qcelemental.tests.test_molparse_reconcile_nucleus.co_unspecified",
  "qcelemental.tests.test_molparse_to_schema._schema_prov_stamp",
  "qcelemental.tests.test_molparse_to_schema._string_prov_stamp",
  "qcelemental.tests.test_molparse_to_schema.schema14_1",
  "qcelemental.tests.test_molparse_to_schema.schema14_2",
  "qcelemental.tests.test_molparse_to_schema.schema14_psi4",
  "qcelemental.tests.test_molparse_to_schema.schema15_2",
  "qcelemental.tests.test_molparse_to_schema.schema15_psi4",
  "qcelemental.tests.test_molparse_to_schema.schema16_1",
  "qcelemental.tests.test_molparse_to_schema.schema16_2",
  "qcelemental.tests.test_molparse_to_schema.schema16_psi4",
  "qcelemental.tests.test_molparse_to_schema.subject14",
  "qcelemental.tests.test_molparse_to_schema.subject15",
  "qcelemental.tests.test_molparse_to_schema.twobohrinang",
  "qcelemental.tests.test_molparse_to_string._molecule_inputs",
  "qcelemental.tests.test_molparse_to_string._molecule_outputs",
  "qcelemental.tests.test_molparse_to_string._results",
  "qcelemental.tests.test_molparse_to_string.au2",
  "qcelemental.tests.test_testing._arrs",
  "qcelemental.tests.test_testing._dcts",
  "qcelemental.tests.test_testing._pass_message",
  "qcelemental.tests.test_units._assert_forward_conversion",
  "qcelemental.tests.test_units._assert_inverse_conversion",
  "qcelemental.tests.test_units.constants2014",
  "qcelemental.tests.test_units.constants2018",
  "qcelemental.tests.test_units.contexts",
  "qcelemental.tests.test_utils.doc_fixture",
  "qcelemental.tests.test_vanderwaalsradii.a2b",
  "qcelemental.tests.test_zqcschema.files",
  "qcelemental.tests.test_zqcschema.ids",
  "qcelemental.tests.test_zqcschema.qcschema_models",
  "qcelemental.util.auto_gen_docs_on_demand",
  "qcelemental.util.autodocs.AutoDocError",
  "qcelemental.util.autodocs.AutoPydanticDocGenerator",
  "qcelemental.util.autodocs.doc_formatter",
  "qcelemental.util.autodocs.is_pydantic",
  "qcelemental.util.autodocs.parse_type_str",
  "qcelemental.util.autodocs.type_to_string",
  "qcelemental.util.compute_angle",
  "qcelemental.util.compute_dihedral",
  "qcelemental.util.compute_distance",
  "qcelemental.util.deserialize",
  "qcelemental.util.gph_uno_bipartite._enumMaximumMatching",
  "qcelemental.util.gph_uno_bipartite._enumMaximumMatching2",
  "qcelemental.util.gph_uno_bipartite._enumMaximumMatchingIter",
  "qcelemental.util.gph_uno_bipartite._enumMaximumMatchingIter2",
  "qcelemental.util.gph_uno_bipartite._formDirected",
  "qcelemental.util.gph_uno_bipartite.uno",
  "qcelemental.util.misc._norm",
  "qcelemental.util.parse_version",
  "qcelemental.util.safe_version",
  "qcelemental.util.scipy_hungarian._Hungary",
  "qcelemental.util.scipy_hungarian._step3",
  "qcelemental.util.scipy_hungarian._step4",
  "qcelemental.util.scipy_hungarian.linear_sum_assignment",
  "qcelemental.util.serialization.JSONArrayEncoder",
  "qcelemental.util.serialization.JSONExtArrayEncoder",
  "qcelemental.util.serialization._msgpack_which_msg",
  "qcelemental.util.serialization.json_dumps",
  "qcelemental.util.serialization.json_loads",
  "qcelemental.util.serialization.jsonext_decode",
  "qcelemental.util.serialization.jsonext_dumps",
  "qcelemental.util.serialization.jsonext_loads",
  "qcelemental.util.serialization.msgpackext_decode",
  "qcelemental.util.serialization.msgpackext_dumps",
  "qcelemental.util.serialization.msgpackext_encode",
  "qcelemental.util.serialization.msgpackext_loads",
  "qcelemental.util.serialize",
  "qcelemental.util.standardize_efp_angles_units",
  "qcelemental.util.test_gph_uno_bipartite._check",
  "qcelemental.util.unique_everseen",
  "qcelemental.util.unnp",
  "qcelemental.util.update_with_error",
  "qcelemental.util.which",
  "qcelemental.util.which_import",
  "qcelemental.vanderwaals_radii",
  "qcelemental.vanderwaals_radii.VanderWaalsRadii",
  "qcelemental.vdwradii",
  "qcelemental.vdwradii.get",
  "qcelemental.vdwradii.string_representation",
  "qcelemental.vdwradii.write_c_header",
  "radrge",
  "re.IGNORECASE",
  "re.MULTILINE",
  "re.VERBOSE",
  "re.compile",
  "re.findall",
  "re.fullmatch",
  "re.match",
  "re.search",
  "re.split",
  "re.sub",
  "re.subn",
  "reconcile",
  "regex.DECIMAL",
  "regex.NUCLEUS",
  "regex.VERSION_PATTERN",
  "reorder",
  "resolve_eliso",
  "results.AtomicInput",
  "results.AtomicResult",
  "results.AtomicResultProperties",
  "scipy.sparse.find",
  "scipy.sparse.lil_matrix",
  "seen_add",
  "shutil.which",
  "socket.create_connection",
  "step",
  "str.lower",
  "str.maketrans",
  "stringify",
  "sys._getframe",
  "sys.executable",
  "sys.path.append",
  "sys.path.pop",
  "testing.compare",
  "testing.compare_values",
  "tests.addons.drop_qcsk",
  "tests.addons.using_networkx",
  "tests.addons.using_scipy",
  "textwrap.dedent",
  "textwrap.indent",
  "time.time",
  "to_string.formula_generator",
  "types.Array",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Union",
  "typing.cast",
  "unblockshaped",
  "ureg.build_units_registry",
  "urllib.error.URLError",
  "urllib.parse.quote",
  "urllib.request.Request",
  "urllib.request.urlopen",
  "util.blockwise_contract",
  "util.blockwise_expand",
  "util.deserialize",
  "util.distance_matrix",
  "util.filter_comments",
  "util.linear_sum_assignment",
  "util.measure_coordinates",
  "util.msgpackext_loads",
  "util.provenance_stamp",
  "util.random_rotation_matrix",
  "util.unique_everseen",
  "util.unnp",
  "util.uno",
  "util.update_with_error",
  "util.which_import",
  "validate_provenance",
  "vanderwaals_radii.VanderWaalsRadii",
  "vanderwaals_radii.vdwradii",
  "warnings.warn"
 ],
 "deps": {
  "Data": [],
  "IPython": [],
  "Model": [],
  "Model2": [],
  "Nest": [],
  "_find_nist_unit": [],
  "_plausible_atom_orderings_wrapper": [],
  "_test_angle": [],
  "_test_dihedral": [],
  "_test_distance": [],
  "_version": [],
  "addons": [],
  "aliases": [],
  "basemodels": [],
  "basis": [],
  "build_transformer": [],
  "bytes": [],
  "checkup_data": [],
  "chgmult": [],
  "collections": [],
  "common_models": [],
  "contextlib": [],
  "copy": [],
  "covalent_radii": [],
  "data": [],
  "datum": [],
  "decimal": [],
  "difflib": [],
  "enum": [],
  "exceptions": [],
  "extras": [],
  "filter_fragment": [],
  "fn": [],
  "from_arrays": [],
  "func": [],
  "functools": [],
  "hashlib": [],
  "importing": [],
  "importlib": [],
  "itertools": [],
  "json": [],
  "jsonschema": [],
  "logging": [],
  "massage_dicts": [],
  "math": [],
  "model": [],
  "models": [],
  "molecule": [],
  "molparse": [],
  "molutil": [],
  "mpmath": [],
  "msgpack": [],
  "networkx": [],
  "nglview": [],
  "nucleus": [],
  "numpy": [],
  "offer_atomic_number": [],
  "offer_element_symbol": [],
  "offer_mass_number": [],
  "offer_mass_value": [],
  "offer_reality": [],
  "offer_user_label": [],
  "os": [],
  "parse_as_psi4_ish": [],
  "parse_as_xyz_ish": [],
  "pathlib": [],
  "periodic_table": [],
  "physical_constants": [],
  "pint": [],
  "pkg_resources": [],
  "plot_coord": [],
  "pprint": [],
  "pubchem": [],
  "pydantic": [],
  "pytest": [],
  "qcelemental": [],
  "radrge": [],
  "re": [],
  "reconcile": [],
  "regex": [],
  "reorder": [],
  "resolve_eliso": [],
  "results": [],
  "scipy": [],
  "seen_add": [],
  "shutil": [],
  "socket": [],
  "step": [],
  "str": [],
  "stringify": [],
  "sys": [],
  "testing": [],
  "tests": [],
  "textwrap": [],
  "time": [],
  "to_string": [],
  "types": [],
  "typing": [],
  "unblockshaped": [],
  "ureg": [],
  "urllib": [],
  "util": [],
  "validate_provenance": [],
  "vanderwaals_radii": [],
  "warnings": []
 }
}