{
 "bad": [
  "abc.ABC",
  "abc.abstractmethod",
  "collections.Counter",
  "collections.abc.Sequence",
  "compute",
  "copy.deepcopy",
  "default",
  "distutils.version.LooseVersion",
  "elem_type",
  "fn",
  "functools.wraps",
  "inspect.Parameter.VAR_KEYWORD",
  "inspect.Parameter.VAR_POSITIONAL",
  "inspect.signature",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.getLogger",
  "m",
  "m._filter_kwargs",
  "m.compute",
  "m.persistent",
  "m.reset",
  "m.update",
  "numpy.nan",
  "os.environ.get",
  "os.path.dirname",
  "os.path.join",
  "re.DOTALL",
  "re.IGNORECASE",
  "re.sub",
  "reduction_fn",
  "sys.stdout.write",
  "torch.Tensor",
  "torch.__version__",
  "torch.abs",
  "torch.add",
  "torch.arange",
  "torch.argmax",
  "torch.argsort",
  "torch.bincount",
  "torch.bitwise_and",
  "torch.bitwise_not",
  "torch.bitwise_or",
  "torch.bitwise_xor",
  "torch.bucketize",
  "torch.cat",
  "torch.cumsum",
  "torch.device",
  "torch.diag",
  "torch.distributed.all_gather",
  "torch.distributed.barrier",
  "torch.distributed.get_world_size",
  "torch.distributed.group.WORLD",
  "torch.distributed.is_available",
  "torch.distributed.is_initialized",
  "torch.dtype",
  "torch.eq",
  "torch.exp",
  "torch.float",
  "torch.float16",
  "torch.float32",
  "torch.floor_divide",
  "torch.fmod",
  "torch.ge",
  "torch.gt",
  "torch.int",
  "torch.is_nonzero",
  "torch.is_tensor",
  "torch.isclose",
  "torch.isnan",
  "torch.jit.unused",
  "torch.le",
  "torch.lerp",
  "torch.log",
  "torch.log1p",
  "torch.long",
  "torch.lt",
  "torch.matmul",
  "torch.max",
  "torch.mean",
  "torch.min",
  "torch.mul",
  "torch.ne",
  "torch.nn.Module",
  "torch.nn.ModuleDict",
  "torch.nn.functional.conv2d",
  "torch.nn.functional.pad",
  "torch.no_grad",
  "torch.norm",
  "torch.ones",
  "torch.ones_like",
  "torch.pow",
  "torch.stack",
  "torch.sub",
  "torch.sum",
  "torch.tensor",
  "torch.transpose",
  "torch.trapz",
  "torch.true_divide",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "torchmetrics._PACKAGE_ROOT",
  "torchmetrics.__author__",
  "torchmetrics.__homepage__",
  "torchmetrics.__version__",
  "torchmetrics._logger",
  "torchmetrics._logger.debug",
  "torchmetrics._logger.info",
  "torchmetrics.classification.checks._basic_input_validation",
  "torchmetrics.classification.checks._check_classification_inputs",
  "torchmetrics.classification.checks._check_num_classes_binary",
  "torchmetrics.classification.checks._check_num_classes_mc",
  "torchmetrics.classification.checks._check_num_classes_ml",
  "torchmetrics.classification.checks._check_shape_and_type_consistency",
  "torchmetrics.classification.checks._check_top_k",
  "torchmetrics.classification.checks._input_format_classification",
  "torchmetrics.classification.confusion_matrix.ConfusionMatrix",
  "torchmetrics.classification.f_beta.FBeta",
  "torchmetrics.classification.stat_scores.StatScores",
  "torchmetrics.classification.stat_scores._reduce_stat_scores",
  "torchmetrics.functional.classification.accuracy._accuracy_compute",
  "torchmetrics.functional.classification.accuracy._accuracy_update",
  "torchmetrics.functional.classification.auc._auc_compute",
  "torchmetrics.functional.classification.auc._auc_update",
  "torchmetrics.functional.classification.auc.auc",
  "torchmetrics.functional.classification.auroc._auroc_compute",
  "torchmetrics.functional.classification.auroc._auroc_update",
  "torchmetrics.functional.classification.average_precision._average_precision_compute",
  "torchmetrics.functional.classification.average_precision._average_precision_update",
  "torchmetrics.functional.classification.confusion_matrix._confusion_matrix_compute",
  "torchmetrics.functional.classification.confusion_matrix._confusion_matrix_update",
  "torchmetrics.functional.classification.dice._stat_scores",
  "torchmetrics.functional.classification.f_beta._fbeta_compute",
  "torchmetrics.functional.classification.f_beta._fbeta_update",
  "torchmetrics.functional.classification.f_beta.fbeta",
  "torchmetrics.functional.classification.hamming_distance._hamming_distance_compute",
  "torchmetrics.functional.classification.hamming_distance._hamming_distance_update",
  "torchmetrics.functional.classification.iou._iou_from_confmat",
  "torchmetrics.functional.classification.precision_recall._precision_compute",
  "torchmetrics.functional.classification.precision_recall._recall_compute",
  "torchmetrics.functional.classification.precision_recall.precision",
  "torchmetrics.functional.classification.precision_recall.recall",
  "torchmetrics.functional.classification.precision_recall_curve._binary_clf_curve",
  "torchmetrics.functional.classification.precision_recall_curve._precision_recall_curve_compute",
  "torchmetrics.functional.classification.precision_recall_curve._precision_recall_curve_update",
  "torchmetrics.functional.classification.precision_recall_curve.precision_recall_curve",
  "torchmetrics.functional.classification.roc._roc_compute",
  "torchmetrics.functional.classification.roc._roc_update",
  "torchmetrics.functional.classification.roc.roc",
  "torchmetrics.functional.classification.stat_scores._del_column",
  "torchmetrics.functional.classification.stat_scores._stat_scores",
  "torchmetrics.functional.classification.stat_scores._stat_scores_compute",
  "torchmetrics.functional.classification.stat_scores._stat_scores_update",
  "torchmetrics.functional.image_gradients._compute_image_gradients",
  "torchmetrics.functional.image_gradients._image_gradients_validate",
  "torchmetrics.functional.nlp._count_ngram",
  "torchmetrics.functional.regression.explained_variance._explained_variance_compute",
  "torchmetrics.functional.regression.explained_variance._explained_variance_update",
  "torchmetrics.functional.regression.mean_absolute_error._mean_absolute_error_compute",
  "torchmetrics.functional.regression.mean_absolute_error._mean_absolute_error_update",
  "torchmetrics.functional.regression.mean_relative_error._mean_relative_error_compute",
  "torchmetrics.functional.regression.mean_relative_error._mean_relative_error_update",
  "torchmetrics.functional.regression.mean_squared_error._mean_squared_error_compute",
  "torchmetrics.functional.regression.mean_squared_error._mean_squared_error_update",
  "torchmetrics.functional.regression.mean_squared_log_error._mean_squared_log_error_compute",
  "torchmetrics.functional.regression.mean_squared_log_error._mean_squared_log_error_update",
  "torchmetrics.functional.regression.psnr._psnr_compute",
  "torchmetrics.functional.regression.psnr._psnr_update",
  "torchmetrics.functional.regression.r2score._r2score_compute",
  "torchmetrics.functional.regression.r2score._r2score_update",
  "torchmetrics.functional.regression.ssim._gaussian",
  "torchmetrics.functional.regression.ssim._gaussian_kernel",
  "torchmetrics.functional.regression.ssim._ssim_compute",
  "torchmetrics.functional.regression.ssim._ssim_update",
  "torchmetrics.metric.CompositionalMetric",
  "torchmetrics.metric.Metric",
  "torchmetrics.utilities.apply_to_collection",
  "torchmetrics.utilities.checks._check_same_shape",
  "torchmetrics.utilities.checks._input_format_classification_one_hot",
  "torchmetrics.utilities.data._flatten",
  "torchmetrics.utilities.data._stable_1d_sort",
  "torchmetrics.utilities.data.dim_zero_cat",
  "torchmetrics.utilities.data.dim_zero_mean",
  "torchmetrics.utilities.data.dim_zero_sum",
  "torchmetrics.utilities.data.get_num_classes",
  "torchmetrics.utilities.data.select_topk",
  "torchmetrics.utilities.data.to_categorical",
  "torchmetrics.utilities.data.to_onehot",
  "torchmetrics.utilities.data.torch",
  "torchmetrics.utilities.distributed.class_reduce",
  "torchmetrics.utilities.distributed.gather_all_tensors",
  "torchmetrics.utilities.distributed.reduce",
  "torchmetrics.utilities.enums.AverageMethod.MACRO",
  "torchmetrics.utilities.enums.AverageMethod.MACRO.value",
  "torchmetrics.utilities.enums.AverageMethod.MICRO",
  "torchmetrics.utilities.enums.AverageMethod.NONE",
  "torchmetrics.utilities.enums.AverageMethod.NONE.value",
  "torchmetrics.utilities.enums.AverageMethod.WEIGHTED",
  "torchmetrics.utilities.enums.AverageMethod.WEIGHTED.value",
  "torchmetrics.utilities.enums.DataType.BINARY",
  "torchmetrics.utilities.enums.DataType.MULTICLASS",
  "torchmetrics.utilities.enums.DataType.MULTIDIM_MULTICLASS",
  "torchmetrics.utilities.enums.DataType.MULTILABEL",
  "torchmetrics.utilities.enums.EnumStr",
  "torchmetrics.utilities.enums.MDMCAverageMethod.SAMPLEWISE",
  "torchmetrics.utilities.prints._debug",
  "torchmetrics.utilities.prints._info",
  "torchmetrics.utilities.prints._warn",
  "torchmetrics.utilities.prints.rank_zero_only",
  "torchmetrics.utilities.prints.rank_zero_warn",
  "torchmetrics.utilities.rank_zero_warn",
  "torchmetrics.utilities.reduce",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.Mapping",
  "typing.Optional",
  "typing.Sequence",
  "typing.Tuple",
  "typing.Union",
  "update",
  "warnings.warn"
 ],
 "deps": {
  "abc": [],
  "collections": [],
  "compute": [],
  "copy": [],
  "default": [],
  "distutils": [],
  "elem_type": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "fn": [],
  "functools": [],
  "inspect": [],
  "logging": [],
  "m": [],
  "numpy": [],
  "os": [],
  "re": [],
  "reduction_fn": [],
  "sys": [],
  "torch": [],
  "torchmetrics": [],
  "typing": [],
  "update": [],
  "warnings": []
 }
}