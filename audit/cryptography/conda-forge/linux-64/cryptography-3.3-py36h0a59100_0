{
 "bad": [
  "InvalidUnwrap",
  "_asn1_integer_to_int",
  "_asn1_integer_to_int_or_none",
  "_asn1_string_to_bytes",
  "_asn1_string_to_utf8",
  "_decode_distpoint",
  "_decode_reasons",
  "_encode_general_name_preallocated",
  "_encode_name_entry",
  "_parse_asn1_generalized_time",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "adapter",
  "algo",
  "base64",
  "base64.b32encode",
  "base64.encodebytes",
  "base64.encodestring",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "binascii",
  "binascii.Error",
  "binascii.a2b_base64",
  "binascii.b2a_base64",
  "binascii.hexlify",
  "binascii.unhexlify",
  "collections",
  "collections.namedtuple",
  "cryptography.exceptions._Reasons.BACKEND_MISSING_INTERFACE",
  "cryptography.exceptions._Reasons.UNSUPPORTED_ELLIPTIC_CURVE",
  "cryptography.exceptions._Reasons.UNSUPPORTED_EXCHANGE_ALGORITHM",
  "cryptography.exceptions._Reasons.UNSUPPORTED_HASH",
  "cryptography.exceptions._Reasons.UNSUPPORTED_MGF",
  "cryptography.exceptions._Reasons.UNSUPPORTED_PADDING",
  "cryptography.exceptions._Reasons.UNSUPPORTED_PUBLIC_KEY_ALGORITHM",
  "cryptography.exceptions._Reasons.UNSUPPORTED_SERIALIZATION",
  "cryptography.hazmat.backends.__init__._default_backend",
  "cryptography.hazmat.backends.__init__.default_backend",
  "cryptography.hazmat.backends.openssl.backend.backend.create_ocsp_request",
  "cryptography.hazmat.backends.openssl.backend.backend.create_ocsp_response",
  "cryptography.hazmat.backends.openssl.backend.backend.derive_elliptic_curve_private_key",
  "cryptography.hazmat.backends.openssl.backend.backend.ed25519_generate_key",
  "cryptography.hazmat.backends.openssl.backend.backend.ed25519_load_private_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.ed25519_load_public_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.ed25519_supported",
  "cryptography.hazmat.backends.openssl.backend.backend.ed448_generate_key",
  "cryptography.hazmat.backends.openssl.backend.backend.ed448_load_private_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.ed448_load_public_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.ed448_supported",
  "cryptography.hazmat.backends.openssl.backend.backend.generate_elliptic_curve_private_key",
  "cryptography.hazmat.backends.openssl.backend.backend.load_der_ocsp_request",
  "cryptography.hazmat.backends.openssl.backend.backend.load_der_ocsp_response",
  "cryptography.hazmat.backends.openssl.backend.backend.load_elliptic_curve_private_numbers",
  "cryptography.hazmat.backends.openssl.backend.backend.load_elliptic_curve_public_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.load_elliptic_curve_public_numbers",
  "cryptography.hazmat.backends.openssl.backend.backend.x25519_generate_key",
  "cryptography.hazmat.backends.openssl.backend.backend.x25519_load_private_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.x25519_load_public_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.x25519_supported",
  "cryptography.hazmat.backends.openssl.backend.backend.x448_generate_key",
  "cryptography.hazmat.backends.openssl.backend.backend.x448_load_private_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.x448_load_public_bytes",
  "cryptography.hazmat.backends.openssl.backend.backend.x448_supported",
  "cryptography.hazmat.backends.openssl.ciphers._CipherContext._DECRYPT",
  "cryptography.hazmat.backends.openssl.ciphers._CipherContext._ENCRYPT",
  "cryptography.hazmat.backends.openssl.decode_asn1._EXTENSION_HANDLERS_BASE.copy",
  "cryptography.hazmat.backends.openssl.decode_asn1._REVOKED_EXTENSION_HANDLERS.copy",
  "cryptography.hazmat.backends.openssl.encode_asn1._CRL_ENTRY_EXTENSION_ENCODE_HANDLERS.copy",
  "cryptography.hazmat.backends.openssl.encode_asn1._CRL_EXTENSION_ENCODE_HANDLERS.copy",
  "cryptography.hazmat.backends.openssl.encode_asn1._EXTENSION_ENCODE_HANDLERS.copy",
  "cryptography.hazmat.backends.openssl.encode_asn1._OCSP_BASICRESP_EXTENSION_ENCODE_HANDLERS.copy",
  "cryptography.hazmat.backends.openssl.encode_asn1._OCSP_REQUEST_EXTENSION_ENCODE_HANDLERS.copy",
  "cryptography.hazmat.bindings._openssl.ffi",
  "cryptography.hazmat.bindings._openssl.ffi.new",
  "cryptography.hazmat.bindings._openssl.ffi.string",
  "cryptography.hazmat.bindings._openssl.lib",
  "cryptography.hazmat.bindings._openssl.lib.CRYPTOGRAPHY_PACKAGE_VERSION",
  "cryptography.hazmat.bindings._openssl.lib.ERR_GET_FUNC",
  "cryptography.hazmat.bindings._openssl.lib.ERR_GET_LIB",
  "cryptography.hazmat.bindings._openssl.lib.ERR_GET_REASON",
  "cryptography.hazmat.bindings._openssl.lib.ERR_error_string_n",
  "cryptography.hazmat.bindings._openssl.lib.ERR_get_error",
  "cryptography.hazmat.bindings._padding.lib",
  "cryptography.hazmat.bindings._padding.lib.Cryptography_check_ansix923_padding",
  "cryptography.hazmat.bindings._padding.lib.Cryptography_check_pkcs7_padding",
  "cryptography.hazmat.primitives.asymmetric.padding.MGF1.MAX_LENGTH",
  "cryptography.hazmat.primitives.asymmetric.padding.PSS.MAX_LENGTH",
  "cryptography.hazmat.primitives.ciphers.algorithms.AES.block_size",
  "cryptography.hazmat.primitives.serialization.Encoding.DER",
  "cryptography.hazmat.primitives.serialization.Encoding.OpenSSH",
  "cryptography.hazmat.primitives.serialization.Encoding.PEM",
  "cryptography.hazmat.primitives.serialization.Encoding.Raw",
  "cryptography.hazmat.primitives.serialization.Encoding.SMIME",
  "cryptography.hazmat.primitives.serialization.Encoding.X962",
  "cryptography.hazmat.primitives.serialization.ParameterFormat.PKCS3",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.OpenSSH",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.PKCS8",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.Raw",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
  "cryptography.hazmat.primitives.serialization.PublicFormat.CompressedPoint",
  "cryptography.hazmat.primitives.serialization.PublicFormat.OpenSSH",
  "cryptography.hazmat.primitives.serialization.PublicFormat.PKCS1",
  "cryptography.hazmat.primitives.serialization.PublicFormat.Raw",
  "cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo",
  "cryptography.hazmat.primitives.serialization.PublicFormat.UncompressedPoint",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.Binary",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.DetachedSignature",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.NoAttributes",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.NoCapabilities",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.NoCerts",
  "cryptography.hazmat.primitives.serialization.pkcs7.PKCS7Options.Text",
  "cryptography.x509.OID_CPS_QUALIFIER.dotted_string",
  "cryptography.x509.OID_CPS_USER_NOTICE.dotted_string",
  "cryptography.x509.ReasonFlags.aa_compromise",
  "cryptography.x509.ReasonFlags.affiliation_changed",
  "cryptography.x509.ReasonFlags.ca_compromise",
  "cryptography.x509.ReasonFlags.certificate_hold",
  "cryptography.x509.ReasonFlags.cessation_of_operation",
  "cryptography.x509.ReasonFlags.key_compromise",
  "cryptography.x509.ReasonFlags.privilege_withdrawn",
  "cryptography.x509.ReasonFlags.remove_from_crl",
  "cryptography.x509.ReasonFlags.superseded",
  "cryptography.x509.ReasonFlags.unspecified",
  "cryptography.x509.Version.v1.value",
  "cryptography.x509._GENERAL_NAMES.get",
  "cryptography.x509.certificate_transparency.LogEntryType.PRE_CERTIFICATE",
  "cryptography.x509.certificate_transparency.Version.v1",
  "cryptography.x509.name._ASN1Type.BMPString",
  "cryptography.x509.name._ASN1Type.IA5String.value",
  "cryptography.x509.name._ASN1Type.PrintableString.value",
  "cryptography.x509.name._ASN1Type.UTF8String.value",
  "cryptography.x509.name._ASN1Type.UniversalString",
  "cryptography.x509.ocsp.OCSPCertStatus.REVOKED",
  "cryptography.x509.ocsp.OCSPResponderEncoding.HASH",
  "cryptography.x509.ocsp.OCSPResponseStatus.SUCCESSFUL",
  "cryptography.x509.oid.AuthorityInformationAccessOID.CA_ISSUERS",
  "cryptography.x509.oid.AuthorityInformationAccessOID.OCSP",
  "cryptography.x509.oid.CRLEntryExtensionOID.CERTIFICATE_ISSUER",
  "cryptography.x509.oid.CRLEntryExtensionOID.CRL_REASON",
  "cryptography.x509.oid.CRLEntryExtensionOID.INVALIDITY_DATE",
  "cryptography.x509.oid.CertificatePoliciesOID.ANY_POLICY",
  "cryptography.x509.oid.CertificatePoliciesOID.CPS_QUALIFIER",
  "cryptography.x509.oid.CertificatePoliciesOID.CPS_USER_NOTICE",
  "cryptography.x509.oid.ExtendedKeyUsageOID.CLIENT_AUTH",
  "cryptography.x509.oid.ExtendedKeyUsageOID.CODE_SIGNING",
  "cryptography.x509.oid.ExtendedKeyUsageOID.EMAIL_PROTECTION",
  "cryptography.x509.oid.ExtendedKeyUsageOID.OCSP_SIGNING",
  "cryptography.x509.oid.ExtendedKeyUsageOID.SERVER_AUTH",
  "cryptography.x509.oid.ExtendedKeyUsageOID.TIME_STAMPING",
  "cryptography.x509.oid.ExtensionOID.AUTHORITY_INFORMATION_ACCESS",
  "cryptography.x509.oid.ExtensionOID.AUTHORITY_KEY_IDENTIFIER",
  "cryptography.x509.oid.ExtensionOID.BASIC_CONSTRAINTS",
  "cryptography.x509.oid.ExtensionOID.CERTIFICATE_POLICIES",
  "cryptography.x509.oid.ExtensionOID.CRL_DISTRIBUTION_POINTS",
  "cryptography.x509.oid.ExtensionOID.CRL_NUMBER",
  "cryptography.x509.oid.ExtensionOID.DELTA_CRL_INDICATOR",
  "cryptography.x509.oid.ExtensionOID.EXTENDED_KEY_USAGE",
  "cryptography.x509.oid.ExtensionOID.FRESHEST_CRL",
  "cryptography.x509.oid.ExtensionOID.INHIBIT_ANY_POLICY",
  "cryptography.x509.oid.ExtensionOID.ISSUER_ALTERNATIVE_NAME",
  "cryptography.x509.oid.ExtensionOID.ISSUING_DISTRIBUTION_POINT",
  "cryptography.x509.oid.ExtensionOID.KEY_USAGE",
  "cryptography.x509.oid.ExtensionOID.NAME_CONSTRAINTS",
  "cryptography.x509.oid.ExtensionOID.OCSP_NO_CHECK",
  "cryptography.x509.oid.ExtensionOID.POLICY_CONSTRAINTS",
  "cryptography.x509.oid.ExtensionOID.POLICY_MAPPINGS",
  "cryptography.x509.oid.ExtensionOID.PRECERT_POISON",
  "cryptography.x509.oid.ExtensionOID.PRECERT_SIGNED_CERTIFICATE_TIMESTAMPS",
  "cryptography.x509.oid.ExtensionOID.SIGNED_CERTIFICATE_TIMESTAMPS",
  "cryptography.x509.oid.ExtensionOID.SUBJECT_ALTERNATIVE_NAME",
  "cryptography.x509.oid.ExtensionOID.SUBJECT_DIRECTORY_ATTRIBUTES",
  "cryptography.x509.oid.ExtensionOID.SUBJECT_INFORMATION_ACCESS",
  "cryptography.x509.oid.ExtensionOID.SUBJECT_KEY_IDENTIFIER",
  "cryptography.x509.oid.ExtensionOID.TLS_FEATURE",
  "cryptography.x509.oid.NameOID.COMMON_NAME",
  "cryptography.x509.oid.NameOID.COUNTRY_NAME",
  "cryptography.x509.oid.NameOID.DN_QUALIFIER",
  "cryptography.x509.oid.NameOID.DOMAIN_COMPONENT",
  "cryptography.x509.oid.NameOID.EMAIL_ADDRESS",
  "cryptography.x509.oid.NameOID.GENERATION_QUALIFIER",
  "cryptography.x509.oid.NameOID.GIVEN_NAME",
  "cryptography.x509.oid.NameOID.JURISDICTION_COUNTRY_NAME",
  "cryptography.x509.oid.NameOID.LOCALITY_NAME",
  "cryptography.x509.oid.NameOID.ORGANIZATIONAL_UNIT_NAME",
  "cryptography.x509.oid.NameOID.ORGANIZATION_NAME",
  "cryptography.x509.oid.NameOID.PSEUDONYM",
  "cryptography.x509.oid.NameOID.SERIAL_NUMBER",
  "cryptography.x509.oid.NameOID.STATE_OR_PROVINCE_NAME",
  "cryptography.x509.oid.NameOID.STREET_ADDRESS",
  "cryptography.x509.oid.NameOID.SURNAME",
  "cryptography.x509.oid.NameOID.TITLE",
  "cryptography.x509.oid.NameOID.USER_ID",
  "cryptography.x509.oid.OCSPExtensionOID.NONCE",
  "cryptography.x509.oid.SignatureAlgorithmOID.DSA_WITH_SHA1",
  "cryptography.x509.oid.SignatureAlgorithmOID.DSA_WITH_SHA224",
  "cryptography.x509.oid.SignatureAlgorithmOID.DSA_WITH_SHA256",
  "cryptography.x509.oid.SignatureAlgorithmOID.ECDSA_WITH_SHA1",
  "cryptography.x509.oid.SignatureAlgorithmOID.ECDSA_WITH_SHA224",
  "cryptography.x509.oid.SignatureAlgorithmOID.ECDSA_WITH_SHA256",
  "cryptography.x509.oid.SignatureAlgorithmOID.ECDSA_WITH_SHA384",
  "cryptography.x509.oid.SignatureAlgorithmOID.ECDSA_WITH_SHA512",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSASSA_PSS",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_MD5",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_SHA1",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_SHA224",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_SHA256",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_SHA384",
  "cryptography.x509.oid.SignatureAlgorithmOID.RSA_WITH_SHA512",
  "cryptography.x509.oid._OID_NAMES.get",
  "encode",
  "fips_mode",
  "func",
  "get_bit",
  "get_func",
  "handler",
  "hashlib.sha1",
  "hmac.compare_digest",
  "init",
  "int.from_bytes",
  "itertools",
  "mode",
  "names_cb",
  "os.urandom",
  "re.DOTALL",
  "set_bit",
  "six.moves.range",
  "six.moves.urllib.parse.quote",
  "six.moves.urllib.parse.urlencode",
  "struct.Struct",
  "struct.error",
  "struct.pack",
  "struct.unpack",
  "sys",
  "time",
  "verify_interface",
  "warnings.warn",
  "write_bio"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "bcrypt": [
   "bcrypt/conda-forge/linux-64/bcrypt-3.2.0-py36h97a6639_0"
  ],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "crypt": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "cryptography": [
   "cryptography/conda-forge/linux-64/cryptography-3.2.1-py37hc72a4ac_0",
   "cryptography/conda-forge/linux-64/cryptography-3.3-py36h0a59100_0",
   "cryptography/conda-forge/linux-64/cryptography-3.4.6-py38ha5dfef3_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "email": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "fractions": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "hmac": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ipaddress": [
   "ipaddress/conda-forge/noarch/ipaddress-1.0.22-py_1",
   "ipaddress/conda-forge/noarch/ipaddress-1.0.23-py_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "lldb/conda-forge/linux-64/lldb-6.0.0-py35_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.10.0-py34_0",
   "six/conda-forge/linux-64/six-1.10.0-py34_1",
   "six/conda-forge/noarch/six-1.14.0-py_1",
   "six/conda-forge/noarch/six-1.16.0-pyh6c4a22f_0"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}