{
 "bad": [
  "__builtin__",
  "_access_check",
  "_fork_pty.fork_pty",
  "errno.ECHILD",
  "errno.EINVAL",
  "errno.EIO",
  "errno.ENOTTY",
  "errno.ENXIO",
  "exctype",
  "os.EX_OSERR",
  "os.F_OK",
  "os.O_NOCTTY",
  "os.O_RDWR",
  "os.O_WRONLY",
  "os.WEXITSTATUS",
  "os.WIFEXITED",
  "os.WIFSIGNALED",
  "os.WIFSTOPPED",
  "os.WNOHANG",
  "os.WTERMSIG",
  "os.X_OK",
  "os.access",
  "os.chdir",
  "os.close",
  "os.closerange",
  "os.dup2",
  "os.environ.get",
  "os.execv",
  "os.fork",
  "os.isatty",
  "os.kill",
  "os.linesep.encode",
  "os.open",
  "os.openpty",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.path.normcase",
  "os.pipe",
  "os.read",
  "os.setsid",
  "os.ttyname",
  "os.waitpid",
  "os.write",
  "resource.RLIMIT_NOFILE",
  "resource.getrlimit",
  "signal.SIGCONT",
  "signal.SIGHUP",
  "signal.SIGINT",
  "signal.SIGKILL",
  "struct.pack",
  "struct.unpack",
  "sys.platform",
  "sys.platform.lower",
  "sys.stdout.buffer.write",
  "sys.stdout.write",
  "sys.version_info",
  "termios.CEOF",
  "termios.CINTR",
  "termios.ECHO",
  "termios.TCSANOW",
  "termios.VEOF",
  "termios.VINTR",
  "termios.error",
  "termios.tcgetattr",
  "termios.tcsetattr",
  "time.sleep",
  "time.time",
  "util.PtyProcessError",
  "util.which"
 ],
 "deps": {
  "__builtin__": [],
  "_access_check": [],
  "_fork_pty": [],
  "codecs": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "errno": [],
  "exctype": [],
  "fcntl": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pty": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "resource": [],
  "signal": [],
  "struct": [],
  "sys": [],
  "termios": [],
  "time": [],
  "util": []
 }
}