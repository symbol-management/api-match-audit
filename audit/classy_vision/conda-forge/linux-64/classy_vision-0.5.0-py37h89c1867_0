{
 "bad": [
  "LRLoggingHook",
  "MyModel",
  "PIL.Image.BICUBIC",
  "PIL.Image.BILINEAR",
  "SchedulerMock",
  "TestHook",
  "TestModel",
  "UpdateInterval.EPOCH",
  "UpdateInterval.STEP",
  "UpdateInterval.from_config",
  "_test_lr_schedule",
  "all_reduce_op",
  "block",
  "block.depth",
  "build_model",
  "cast_param_groups",
  "classy_model",
  "classy_model.ClassyModel.__jit_unused_properties__",
  "classy_model.extract_features",
  "classy_model.get_classy_state",
  "classy_model.input_shape",
  "classy_model.model.linear.weight",
  "classy_model.model.linear.weight.data",
  "classy_model.model_depth",
  "classy_model.set_classy_state",
  "classy_model.set_heads",
  "classy_vision.__file__",
  "classy_vision.dataset.__init__.DATASET_CLASS_NAMES",
  "classy_vision.dataset.__init__.DATASET_REGISTRY",
  "classy_vision.dataset.__init__.FILE_ROOT",
  "classy_vision.dataset.core.random_image_datasets.SampleType.DICT",
  "classy_vision.dataset.core.random_image_datasets.SampleType.TUPLE",
  "classy_vision.dataset.transforms.__init__.FILE_ROOT",
  "classy_vision.dataset.transforms.__init__.TRANSFORM_REGISTRY",
  "classy_vision.dataset.transforms.__init__.build_transform",
  "classy_vision.dataset.transforms.util.ImagenetConstants.MEAN",
  "classy_vision.dataset.transforms.util.ImagenetConstants.STD",
  "classy_vision.dataset.transforms.util_video.VideoConstants.CROP_SIZE",
  "classy_vision.dataset.transforms.util_video.VideoConstants.MEAN",
  "classy_vision.dataset.transforms.util_video.VideoConstants.SIZE_RANGE",
  "classy_vision.dataset.transforms.util_video.VideoConstants.STD",
  "classy_vision.heads.__init__.FILE_ROOT",
  "classy_vision.heads.__init__.HEAD_CLASS_NAMES",
  "classy_vision.heads.__init__.HEAD_REGISTRY",
  "classy_vision.hooks.ClassyHook._noop",
  "classy_vision.hooks.__init__.FILE_ROOT",
  "classy_vision.hooks.__init__.HOOK_CLASS_NAMES",
  "classy_vision.hooks.__init__.HOOK_REGISTRY",
  "classy_vision.hooks.__init__.build_hook",
  "classy_vision.hub.ClassyHubInterface.from_model",
  "classy_vision.hub.ClassyHubInterface.from_task",
  "classy_vision.losses.BarronLoss.from_config",
  "classy_vision.losses.LabelSmoothingCrossEntropyLoss.from_config",
  "classy_vision.losses.SoftTargetCrossEntropyLoss.from_config",
  "classy_vision.losses.SumArbitraryLoss.from_config",
  "classy_vision.losses.__init__.FILE_ROOT",
  "classy_vision.losses.__init__.LOSS_CLASS_NAMES",
  "classy_vision.losses.__init__.LOSS_REGISTRY",
  "classy_vision.meters.__init__.FILE_ROOT",
  "classy_vision.meters.__init__.METER_REGISTRY",
  "classy_vision.meters.__init__.build_meter",
  "classy_vision.models.ClassyModel.from_checkpoint",
  "classy_vision.models.ClassyModel.from_model",
  "classy_vision.models.ResNet.wrapper_cls",
  "classy_vision.models.__init__.FILE_ROOT",
  "classy_vision.models.__init__.MODEL_CLASS_NAMES",
  "classy_vision.models.__init__.MODEL_REGISTRY",
  "classy_vision.optim.__init__.FILE_ROOT",
  "classy_vision.optim.__init__.OPTIMIZER_CLASS_NAMES",
  "classy_vision.optim.__init__.OPTIMIZER_REGISTRY",
  "classy_vision.optim.param_scheduler.UpdateInterval.EPOCH",
  "classy_vision.optim.param_scheduler.UpdateInterval.STEP",
  "classy_vision.optim.param_scheduler.UpdateInterval.from_config",
  "classy_vision.optim.param_scheduler.__init__.FILE_ROOT",
  "classy_vision.optim.param_scheduler.__init__.PARAM_SCHEDULER_REGISTRY",
  "classy_vision.optim.param_scheduler.composite_scheduler.IntervalScaling.FIXED",
  "classy_vision.optim.param_scheduler.composite_scheduler.IntervalScaling.RESCALED",
  "classy_vision.optim.param_scheduler.composite_scheduler.UpdateInterval.EPOCH",
  "classy_vision.optim.param_scheduler.composite_scheduler.UpdateInterval.STEP",
  "classy_vision.tasks.__init__.FILE_ROOT",
  "classy_vision.tasks.__init__.TASK_CLASS_NAMES",
  "classy_vision.tasks.__init__.TASK_REGISTRY",
  "collections.MutableMapping",
  "collections.abc.Sequence",
  "crit",
  "crit1",
  "crit2",
  "datasets.my_dataset.MyDataset",
  "decay_scheduler",
  "func",
  "fvcore.common.file_io.PathManager.copy",
  "fvcore.common.file_io.PathManager.exists",
  "fvcore.common.file_io.PathManager.isdir",
  "fvcore.common.file_io.PathManager.mkdirs",
  "fvcore.common.file_io.PathManager.open",
  "fvcore.common.file_io.PathManager.register_handler",
  "get_cuda_tensor",
  "head",
  "input.cuda",
  "input.size",
  "input.squeeze",
  "itertools",
  "itertools.accumulate",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.product",
  "jitted_model",
  "linear_scheduler",
  "loss",
  "losses.my_loss.MyLoss",
  "mixup_transform",
  "model",
  "model.bn.weight",
  "model.execute_heads",
  "model.get_classy_state",
  "model.get_heads",
  "model.lin.weight",
  "model.set_heads",
  "models.my_model.MyModel",
  "multiprocessing.Lock",
  "multiprocessing.get_context",
  "numpy.divide",
  "numpy.log",
  "numpy.power",
  "numpy.random.get_state",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.set_state",
  "numpy.random.standard_normal",
  "os.environ.copy",
  "os.environ.get",
  "os.listdir",
  "os.mkdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.split",
  "os.unlink",
  "param_scheduler.UpdateInterval.EPOCH",
  "param_scheduler.UpdateInterval.STEP",
  "parameterized.parameterized.expand",
  "pathway_module",
  "reference_transform",
  "repeat_test_decorator",
  "scheduler",
  "scheduler.update_interval",
  "scheduler_0",
  "scheduler_1",
  "scripted_model",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_REUSEADDR",
  "sys",
  "sys.__excepthook__",
  "sys._getframe",
  "sys.excepthook",
  "sys.executable",
  "sys.modules",
  "sys.path.append",
  "sys.stderr.isatty",
  "sys.stdin",
  "sys.stdin.fileno",
  "test_func",
  "time",
  "time.perf_counter",
  "time.sleep",
  "time.time",
  "torch.ByteTensor",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.Size",
  "torch._C._log_api_usage_once",
  "torch._foreach_add_",
  "torch._foreach_mul_",
  "torch._six.container_abcs.Mapping",
  "torch.abs",
  "torch.add",
  "torch.all",
  "torch.allclose",
  "torch.arange",
  "torch.as_tensor",
  "torch.backends.cudnn.benchmark",
  "torch.backends.cudnn.deterministic",
  "torch.cat",
  "torch.device",
  "torch.distributed.Backend.NCCL",
  "torch.distributed.ReduceOp.MAX",
  "torch.distributed.ReduceOp.MIN",
  "torch.distributed.ReduceOp.SUM",
  "torch.empty",
  "torch.eq",
  "torch.equal",
  "torch.float",
  "torch.float16",
  "torch.float32",
  "torch.floor",
  "torch.from_numpy",
  "torch.gather",
  "torch.int32",
  "torch.long",
  "torch.max",
  "torch.mean",
  "torch.min",
  "torch.multiprocessing.Event",
  "torch.multiprocessing.Process",
  "torch.nn.SyncBatchNorm.convert_sync_batchnorm",
  "torch.ones",
  "torch.rand",
  "torch.randint",
  "torch.randn",
  "torch.randperm",
  "torch.reshape",
  "torch.sigmoid",
  "torch.stack",
  "torch.sum",
  "torch.uint8",
  "torch.unsqueeze",
  "torch.zeros",
  "torch.zeros_like",
  "torchscript",
  "train_with_clipped_gradients",
  "transform",
  "unittest.mock.patch.object",
  "unpack_tensors",
  "util.ImagenetConstants.MEAN",
  "util.ImagenetConstants.STD",
  "v",
  "visdom",
  "visdom.Visdom",
  "warmup_scheduler",
  "wrapper_cls"
 ],
 "deps": {
  "LRLoggingHook": [],
  "MyModel": [],
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "SchedulerMock": [],
  "TestHook": [],
  "TestModel": [],
  "UpdateInterval": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_test_lr_schedule": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "all_reduce_op": [],
  "apex": [
   "nvidia-apex/conda-forge/linux-64/nvidia-apex-0.1-py36h8253b2b_3"
  ],
  "argparse": [
   "argparse/conda-forge/linux-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "block": [],
  "build_model": [],
  "cast_param_groups": [],
  "classy_model": [],
  "classy_vision": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "crit": [],
  "crit1": [],
  "crit2": [],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "datasets": [],
  "decay_scheduler": [],
  "enum": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "fvcore": [
   "fvcore/conda-forge/noarch/fvcore-0.1.2.post20210127-pyhd8ed1ab_0",
   "fvcore/conda-forge/noarch/fvcore-0.1.5.post20210617-pyhd8ed1ab_0"
  ],
  "get_cuda_tensor": [],
  "head": [],
  "importlib": [
   "importlib/conda-forge/linux-64/importlib-1.0.4-py26_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "input": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "jitted_model": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "linear_scheduler": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "loss": [],
  "losses": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mixup_transform": [],
  "model": [],
  "models": [],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "param_scheduler": [],
  "parameterized": [
   "parameterized/conda-forge/noarch/parameterized-0.7.1-py_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pathway_module": [],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.5-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "progressbar": [
   "progressbar/conda-forge/noarch/progressbar-2.5-py_0",
   "progressbar2/conda-forge/noarch/progressbar2-3.51.1-pyh9f0ad1d_0",
   "progressbar33/conda-forge/noarch/progressbar33-2.4-py_0"
  ],
  "queue": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ray": [
   "ray-core/conda-forge/linux-64/ray-core-1.0.1-py38h9ba0119_2"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "reference_transform": [],
  "repeat_test_decorator": [],
  "scheduler": [],
  "scheduler_0": [],
  "scheduler_1": [],
  "scripted_model": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test_func": [],
  "time": [],
  "torch": [
   "pytorch/conda-forge/linux-64/pytorch-1.7.1-cuda92py36h7ecc001_1"
  ],
  "torchscript": [],
  "torchvision": [
   "torchvision/conda-forge/linux-64/torchvision-0.9.0-py36cuda110hb4cfe18_0_cuda"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "train_with_clipped_gradients": [],
  "transform": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unpack_tensors": [],
  "util": [],
  "v": [],
  "visdom": [],
  "warmup_scheduler": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wrapper_cls": []
 }
}