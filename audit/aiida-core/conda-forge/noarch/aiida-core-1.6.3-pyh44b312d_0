{
 "bad": [
  "BackupError",
  "BlockIterator",
  "CifFile",
  "CifFile.CifBlock",
  "CifFile.CifFile",
  "DbNode",
  "ENGINE.begin",
  "IPython.Shell.IPShell",
  "IPython.frontend.terminal.ipapp.TerminalIPythonApp",
  "IPython.frontend.terminal.ipapp.TerminalIPythonApp.instance",
  "IcsdSearchResults",
  "Iterator",
  "Kind",
  "MySQLdb",
  "NodeType",
  "NodeType.CALC",
  "NodeType.CODE",
  "NodeType.DATA",
  "NodeType.WORK",
  "NodesIterator",
  "PatternWithResult",
  "Site",
  "StartCircusNotFound",
  "_copy_tree",
  "_deserialize_attribute",
  "_is_non_db",
  "_is_path_1",
  "_is_path_2",
  "_is_path_3",
  "_is_path_4",
  "_join",
  "_migration_calc_job_option_attribute_keys",
  "_num_points_from_coordinates",
  "_validate_identifier_pattern",
  "a_are_equals",
  "aiida.__init__.__paper__",
  "aiida.__init__.__version__",
  "aiida.__init__._get_raw_file_header",
  "aiida.__init__.is_dbenv_loaded",
  "aiida.__init__.load_dbenv",
  "aiida.backends.__init__.BACKEND_DJANGO",
  "aiida.backends.__init__.BACKEND_SQLA",
  "aiida.backends.djsite.__init__.ENGINE",
  "aiida.backends.djsite.__init__.SESSION_FACTORY",
  "aiida.backends.djsite.db.migrations.__init__.DeserializationException",
  "aiida.backends.djsite.db.migrations.__init__.LATEST_MIGRATION",
  "aiida.backends.djsite.db.migrations.__init__._deserialize_attribute",
  "aiida.backends.djsite.db.migrations.__init__._deserialize_basic_type",
  "aiida.backends.djsite.db.migrations.__init__._update_schema_version",
  "aiida.backends.djsite.db.migrations.__init__.deserialize_attributes",
  "aiida.backends.djsite.db.migrations.__init__.deserialize_dict",
  "aiida.backends.djsite.db.migrations.__init__.deserialize_list",
  "aiida.backends.djsite.db.models.DbAttribute.get_query_dict",
  "aiida.backends.djsite.db.models.DbAuthInfo.objects.get",
  "aiida.backends.djsite.db.models.DbAuthInfo.sa",
  "aiida.backends.djsite.db.models.DbComment.objects.all",
  "aiida.backends.djsite.db.models.DbComment.objects.get",
  "aiida.backends.djsite.db.models.DbComment.sa",
  "aiida.backends.djsite.db.models.DbComputer.objects.all",
  "aiida.backends.djsite.db.models.DbComputer.objects.filter",
  "aiida.backends.djsite.db.models.DbComputer.objects.get",
  "aiida.backends.djsite.db.models.DbComputer.sa",
  "aiida.backends.djsite.db.models.DbGroup.objects.all",
  "aiida.backends.djsite.db.models.DbGroup.objects.filter",
  "aiida.backends.djsite.db.models.DbGroup.objects.get",
  "aiida.backends.djsite.db.models.DbGroup.sa",
  "aiida.backends.djsite.db.models.DbLink.objects.all",
  "aiida.backends.djsite.db.models.DbLink.objects.bulk_create",
  "aiida.backends.djsite.db.models.DbLink.objects.filter",
  "aiida.backends.djsite.db.models.DbLink.sa",
  "aiida.backends.djsite.db.models.DbLog.objects.all",
  "aiida.backends.djsite.db.models.DbLog.objects.get",
  "aiida.backends.djsite.db.models.DbLog.sa",
  "aiida.backends.djsite.db.models.DbNode.objects.all",
  "aiida.backends.djsite.db.models.DbNode.objects.filter",
  "aiida.backends.djsite.db.models.DbNode.objects.get",
  "aiida.backends.djsite.db.models.DbNode.sa",
  "aiida.backends.djsite.db.models.DbNode.sa.ctime",
  "aiida.backends.djsite.db.models.DbNode.sa.id",
  "aiida.backends.djsite.db.models.DbNode.sa.node_type.label",
  "aiida.backends.djsite.db.models.DbNode.sa.user_id",
  "aiida.backends.djsite.db.models.DbSetting.objects.filter",
  "aiida.backends.djsite.db.models.DbUser.objects.all",
  "aiida.backends.djsite.db.models.DbUser.objects.filter",
  "aiida.backends.djsite.db.models.DbUser.sa",
  "aiida.backends.sqlalchemy.ENGINE.raw_connection",
  "aiida.backends.sqlalchemy.__init__.ENGINE",
  "aiida.backends.sqlalchemy.__init__.SESSION_FACTORY",
  "aiida.backends.sqlalchemy.models.base.Base.metadata",
  "aiida.backends.sqlalchemy.models.base.Base.metadata.tables",
  "aiida.backends.sqlalchemy.models.computer.DbComputer.name",
  "aiida.backends.sqlalchemy.models.group.DbGroup.id",
  "aiida.backends.sqlalchemy.models.group.DbGroup.label",
  "aiida.backends.sqlalchemy.models.group.DbGroup.label.like",
  "aiida.backends.sqlalchemy.models.group.DbGroup.time",
  "aiida.backends.sqlalchemy.models.group.DbGroup.type_string",
  "aiida.backends.sqlalchemy.models.group.DbGroup.user",
  "aiida.backends.sqlalchemy.models.group.DbGroup.user.has",
  "aiida.backends.sqlalchemy.models.group.DbGroup.uuid",
  "aiida.backends.sqlalchemy.models.group.table_groups_nodes.c",
  "aiida.backends.sqlalchemy.models.group.table_groups_nodes.c.dbnode_id.in_",
  "aiida.backends.sqlalchemy.models.group.table_groups_nodes.c.in_",
  "aiida.backends.sqlalchemy.models.group.table_groups_nodes.delete",
  "aiida.backends.sqlalchemy.models.node.DbLink.input_id.in_",
  "aiida.backends.sqlalchemy.models.node.DbLink.output_id.in_",
  "aiida.backends.sqlalchemy.models.node.DbNode.ctime",
  "aiida.backends.sqlalchemy.models.node.DbNode.id",
  "aiida.backends.sqlalchemy.models.node.DbNode.id.in_",
  "aiida.backends.sqlalchemy.models.node.DbNode.node_type.label",
  "aiida.backends.sqlalchemy.models.node.DbNode.user_id",
  "aiida.backends.sqlalchemy.models.node.DbNode.uuid.in_",
  "aiida.backends.sqlalchemy.models.user.DbUser.query",
  "aiida.cmdline.commands.cmd_data.verdi_data.group",
  "aiida.cmdline.commands.cmd_verdi.verdi.command",
  "aiida.cmdline.commands.cmd_verdi.verdi.get_command",
  "aiida.cmdline.commands.cmd_verdi.verdi.group",
  "aiida.cmdline.params.arguments.__init__.OverridableArgument",
  "aiida.cmdline.params.options.COMPUTER.clone",
  "aiida.cmdline.params.options.DB_PASSWORD.clone",
  "aiida.cmdline.params.options.DB_USERNAME.clone",
  "aiida.cmdline.params.options.DESCRIPTION.clone",
  "aiida.cmdline.params.options.HOSTNAME.clone",
  "aiida.cmdline.params.options.INPUT_PLUGIN.clone",
  "aiida.cmdline.params.options.LABEL.clone",
  "aiida.cmdline.params.options.REPOSITORY_PATH.clone",
  "aiida.cmdline.params.options.SCHEDULER.clone",
  "aiida.cmdline.params.options.TRANSPORT.clone",
  "aiida.cmdline.params.options.USER_EMAIL.clone",
  "aiida.cmdline.params.options.USER_FIRST_NAME.clone",
  "aiida.cmdline.params.options.USER_INSTITUTION.clone",
  "aiida.cmdline.params.options.USER_LAST_NAME.clone",
  "aiida.cmdline.params.options.__init__.ConfigFileOption",
  "aiida.cmdline.params.options.__init__.MultipleValueOption",
  "aiida.cmdline.params.options.__init__.OverridableOption",
  "aiida.cmdline.params.options.__init__.TRAVERSAL_RULE_HELP_STRING",
  "aiida.cmdline.params.options.__init__.active_process_states",
  "aiida.cmdline.params.options.__init__.valid_calc_job_states",
  "aiida.cmdline.params.options.__init__.valid_process_states",
  "aiida.cmdline.params.options.commands.code.description",
  "aiida.cmdline.params.options.commands.code.full_label",
  "aiida.cmdline.params.options.commands.code.get_append_text",
  "aiida.cmdline.params.options.commands.code.get_execname",
  "aiida.cmdline.params.options.commands.code.get_input_plugin_name",
  "aiida.cmdline.params.options.commands.code.get_outgoing",
  "aiida.cmdline.params.options.commands.code.get_prepend_text",
  "aiida.cmdline.params.options.commands.code.get_remote_computer",
  "aiida.cmdline.params.options.commands.code.get_remote_exec_path",
  "aiida.cmdline.params.options.commands.code.hide",
  "aiida.cmdline.params.options.commands.code.is_local",
  "aiida.cmdline.params.options.commands.code.label",
  "aiida.cmdline.params.options.commands.code.list_objects",
  "aiida.cmdline.params.options.commands.code.pk",
  "aiida.cmdline.params.options.commands.code.relabel",
  "aiida.cmdline.params.options.commands.code.reveal",
  "aiida.cmdline.params.options.commands.code.store",
  "aiida.cmdline.params.options.commands.code.uuid",
  "aiida.cmdline.params.options.commands.computer.description",
  "aiida.cmdline.params.options.commands.computer.get_append_text",
  "aiida.cmdline.params.options.commands.computer.get_authinfo",
  "aiida.cmdline.params.options.commands.computer.get_configuration",
  "aiida.cmdline.params.options.commands.computer.get_mpirun_command",
  "aiida.cmdline.params.options.commands.computer.get_prepend_text",
  "aiida.cmdline.params.options.commands.computer.get_shebang",
  "aiida.cmdline.params.options.commands.computer.get_transport_class",
  "aiida.cmdline.params.options.commands.computer.get_workdir",
  "aiida.cmdline.params.options.commands.computer.hostname",
  "aiida.cmdline.params.options.commands.computer.id",
  "aiida.cmdline.params.options.commands.computer.is_user_configured",
  "aiida.cmdline.params.options.commands.computer.label",
  "aiida.cmdline.params.options.commands.computer.pk",
  "aiida.cmdline.params.options.commands.computer.scheduler_type",
  "aiida.cmdline.params.options.commands.computer.store",
  "aiida.cmdline.params.options.commands.computer.transport_type",
  "aiida.cmdline.params.options.commands.computer.uuid",
  "aiida.cmdline.utils.shell.AVAILABLE_SHELLS.keys",
  "aiida.cmdline.utils.templates.env.get_template",
  "aiida.common.AIIDA_LOGGER.debug",
  "aiida.common.AIIDA_LOGGER.error",
  "aiida.common.AIIDA_LOGGER.getChild",
  "aiida.common.LinkType.CALL_CALC",
  "aiida.common.LinkType.CALL_WORK",
  "aiida.common.LinkType.CREATE",
  "aiida.common.LinkType.INPUT_CALC",
  "aiida.common.LinkType.INPUT_WORK",
  "aiida.common.LinkType.RETURN",
  "aiida.common.LinkType.__members__.values",
  "aiida.common.constants.AIIDA_FLOAT_PRECISION.format",
  "aiida.common.constants.elements.items",
  "aiida.common.constants.elements.values",
  "aiida.common.datastructures.CalcJobState.PARSING",
  "aiida.common.datastructures.CalcJobState.RETRIEVING",
  "aiida.common.datastructures.CalcJobState.STASHING",
  "aiida.common.datastructures.CalcJobState.SUBMITTING",
  "aiida.common.datastructures.CalcJobState.UPLOADING",
  "aiida.common.datastructures.CalcJobState.WITHSCHEDULER",
  "aiida.common.datastructures.CodeRunMode.PARALLEL",
  "aiida.common.datastructures.CodeRunMode.SERIAL",
  "aiida.common.datastructures.StashMode.COPY.value",
  "aiida.common.links.GraphTraversalRules.DEFAULT",
  "aiida.common.links.GraphTraversalRules.DELETE",
  "aiida.common.links.GraphTraversalRules.DELETE.value",
  "aiida.common.links.GraphTraversalRules.EXPORT",
  "aiida.common.links.GraphTraversalRules.EXPORT.value",
  "aiida.common.links.GraphTraversalRules.EXPORT.value.items",
  "aiida.common.links.LinkType.CALL_CALC",
  "aiida.common.links.LinkType.CALL_WORK",
  "aiida.common.links.LinkType.CREATE",
  "aiida.common.links.LinkType.CREATE.value",
  "aiida.common.links.LinkType.INPUT_CALC",
  "aiida.common.links.LinkType.INPUT_CALC.value",
  "aiida.common.links.LinkType.INPUT_WORK",
  "aiida.common.links.LinkType.RETURN",
  "aiida.common.log.AIIDA_LOGGER.getChild",
  "aiida.common.log.AIIDA_LOGGER.propagate",
  "aiida.common.log.LOG_LEVELS.keys",
  "aiida.common.timezone.datetime.fromtimestamp",
  "aiida.common.timezone.datetime.now",
  "aiida.common.timezone.datetime.utcnow",
  "aiida.engine.CalcJob.exit_codes.ERROR_SCHEDULER_OUT_OF_MEMORY",
  "aiida.engine.CalcJob.exit_codes.ERROR_SCHEDULER_OUT_OF_WALLTIME",
  "aiida.engine.Process.current",
  "aiida.engine.ProcessState.EXCEPTED",
  "aiida.engine.ProcessState.FINISHED.value",
  "aiida.engine.daemon.client.DaemonClient.DAEMON_ERROR_NOT_RUNNING",
  "aiida.engine.daemon.client.DaemonClient.DAEMON_ERROR_TIMEOUT",
  "aiida.engine.utils.exponential_backoff_retry",
  "aiida.manage.backup.backup_base.AbstractBackup.BACKUP_DIR_KEY",
  "aiida.manage.backup.backup_base.AbstractBackup.BACKUP_LENGTH_THRESHOLD_KEY",
  "aiida.manage.backup.backup_base.AbstractBackup.DAYS_TO_BACKUP_KEY",
  "aiida.manage.backup.backup_base.AbstractBackup.END_DATE_OF_BACKUP_KEY",
  "aiida.manage.backup.backup_base.AbstractBackup.OLDEST_OBJECT_BK_KEY",
  "aiida.manage.backup.backup_base.AbstractBackup.PERIODICITY_KEY",
  "aiida.manage.configuration.PROFILE.database_backend",
  "aiida.manage.configuration.PROFILE.is_test_profile",
  "aiida.manage.configuration.PROFILE.name",
  "aiida.manage.configuration.__init__.BACKEND_UUID",
  "aiida.manage.configuration.__init__.CONFIG",
  "aiida.manage.configuration.__init__.PROFILE",
  "aiida.manage.configuration.__init__._merge_deprecated_cache_yaml",
  "aiida.manage.configuration.__init__.get_config",
  "aiida.manage.configuration.__init__.get_config_path",
  "aiida.manage.configuration.__init__.load_config",
  "aiida.manage.database.integrity.__init__.WARNING_BORDER",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.host",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.password",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.port",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.protocol",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.username",
  "aiida.manage.external.rmq.BROKER_DEFAULTS.virtual_host",
  "aiida.manage.tests.__init__.ProfileManager",
  "aiida.manage.tests.__init__.TemporaryProfileManager",
  "aiida.manage.tests.__init__.TestManager",
  "aiida.manage.tests.__init__.TestManagerError",
  "aiida.manage.tests.__init__._DEFAULT_PROFILE_INFO",
  "aiida.manage.tests.__init__._GLOBAL_TEST_MANAGER",
  "aiida.manage.tests.__init__.get_test_profile_name",
  "aiida.manage.tests.__init__.get_user_dict",
  "aiida.orm.AuthInfo.objects.get",
  "aiida.orm.BandsData.class_node_type",
  "aiida.orm.CifData.get_or_create",
  "aiida.orm.CifData.read_cif",
  "aiida.orm.Code.HIDDEN_KEY",
  "aiida.orm.Comment.objects.get",
  "aiida.orm.Computer.get",
  "aiida.orm.Computer.objects.all",
  "aiida.orm.Computer.objects.delete",
  "aiida.orm.Computer.objects.get",
  "aiida.orm.Computer.objects.get_or_create",
  "aiida.orm.Group.objects.delete",
  "aiida.orm.Group.objects.find",
  "aiida.orm.Group.objects.get_or_create",
  "aiida.orm.Log.objects",
  "aiida.orm.Log.objects.find",
  "aiida.orm.Log.objects.get_logs_for",
  "aiida.orm.Node.objects.find",
  "aiida.orm.Node.objects.query",
  "aiida.orm.UpfData.get_or_create",
  "aiida.orm.UpfFamily.get",
  "aiida.orm.UpfFamily.objects.get_or_create",
  "aiida.orm.User.objects.all",
  "aiida.orm.User.objects.find",
  "aiida.orm.User.objects.get",
  "aiida.orm.User.objects.get_default",
  "aiida.orm.User.objects.get_or_create",
  "aiida.orm.User.objects.reset",
  "aiida.orm.autogroup.CURRENT_AUTOGROUP.clear_group_cache",
  "aiida.orm.autogroup.CURRENT_AUTOGROUP.get_or_create_group",
  "aiida.orm.autogroup.CURRENT_AUTOGROUP.is_to_be_grouped",
  "aiida.orm.autogroup.current_autogroup",
  "aiida.orm.comments.Comment.objects.delete",
  "aiida.orm.comments.Comment.objects.get",
  "aiida.orm.utils.__init__.load_entity",
  "aiida.orm.utils._repository.Repository._section_name",
  "aiida.orm.utils.builders.code.CodeBuilder.CodeType.ON_COMPUTER",
  "aiida.orm.utils.builders.code.CodeBuilder.CodeType.STORE_AND_UPLOAD",
  "aiida.orm.utils.loaders.ComputerEntityLoader.load_entity",
  "aiida.orm.utils.loaders.IdentifierType.ID",
  "aiida.orm.utils.loaders.IdentifierType.LABEL",
  "aiida.orm.utils.loaders.IdentifierType.UUID",
  "aiida.orm.utils.loaders.NodeEntityLoader.load_entity",
  "aiida.orm.utils.mixins.Sealable.SEALED_KEY",
  "aiida.plugins.entry_point.ENTRY_POINT_GROUP_TO_MODULE_PATH_MAP.keys",
  "aiida.plugins.entry_point.ENTRY_POINT_STRING_SEPARATOR.join",
  "aiida.plugins.entry_point.EntryPointFormat.FULL",
  "aiida.plugins.entry_point.EntryPointFormat.MINIMAL",
  "aiida.plugins.entry_point.EntryPointFormat.PARTIAL",
  "aiida.repository.FileType.DIRECTORY",
  "aiida.repository.FileType.FILE",
  "aiida.restapi.common.config.API_CONFIG.split",
  "aiida.restapi.common.config.SERIALIZER_CONFIG.keys",
  "aiida.schedulers.Scheduler._logger.getChild",
  "aiida.schedulers.datastructures.JobState.DONE",
  "aiida.schedulers.datastructures.JobState.QUEUED",
  "aiida.schedulers.datastructures.JobState.QUEUED_HELD",
  "aiida.schedulers.datastructures.JobState.RUNNING",
  "aiida.schedulers.datastructures.JobState.SUSPENDED",
  "aiida.schedulers.datastructures.JobState.UNDETERMINED",
  "aiida.tools.DELETE_LOGGER.setLevel",
  "aiida.tools.data.array.kpoints.__init__._legacy_get_explicit_kpoints_path",
  "aiida.tools.data.array.kpoints.__init__._legacy_get_kpoints_path",
  "aiida.tools.data.array.kpoints.__init__._seekpath_get_explicit_kpoints_path",
  "aiida.tools.data.array.kpoints.__init__._seekpath_get_kpoints_path",
  "aiida.tools.importexport.EXPORT_LOGGER.setLevel",
  "aiida.tools.importexport.ExportFileFormat.TAR_GZIPPED",
  "aiida.tools.importexport.ExportFileFormat.ZIP",
  "aiida.tools.importexport.IMPORT_LOGGER.debug",
  "aiida.tools.importexport.archive.migrations.MIGRATE_FUNCTIONS",
  "aiida.tools.importexport.archive.migrations.__init__._vtype",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v1_to_v2",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v2_to_v3",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v3_to_v4",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v4_to_v5",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v5_to_v6",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v6_to_v7",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v7_to_v8",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v8_to_v9",
  "aiida.tools.importexport.archive.migrations.__init__.migrate_v9_to_v10",
  "aiida.tools.importexport.archive.migrators.MIGRATE_LOGGER.setLevel",
  "aiida.tools.importexport.common.config.COMPUTER_ENTITY_NAME.add",
  "aiida.tools.importexport.common.config.DUPL_SUFFIX.format",
  "aiida.tools.importexport.common.config.ExportFileFormat.TAR_GZIPPED",
  "aiida.tools.importexport.common.config.ExportFileFormat.ZIP",
  "aiida.tools.importexport.common.config.GROUP_ENTITY_NAME.add",
  "aiida.tools.importexport.common.config.NODES_EXPORT_SUBFOLDER.puttree",
  "aiida.tools.importexport.common.config.NODE_ENTITY_NAME.add",
  "aiida.tools.importexport.common.config.NODE_ENTITY_NAME.update",
  "aiida.tools.importexport.dbexport.__init__._check_node_licenses",
  "aiida.tools.importexport.dbexport.__init__._collect_entity_queries",
  "aiida.tools.importexport.dbexport.__init__._get_model_fields",
  "aiida.tools.importexport.dbexport.__init__._get_starting_node_ids",
  "aiida.tools.importexport.dbexport.__init__._write_entity_data",
  "aiida.tools.importexport.dbexport.__init__._write_group_mappings",
  "aiida.tools.importexport.dbexport.__init__._write_node_repositories",
  "aiida.tools.importexport.dbexport.__init__.export",
  "aiida.tools.importexport.dbexport.utils.EXPORT_LOGGER.debug",
  "aiida.tools.importexport.dbexport.utils.EXPORT_LOGGER.info",
  "aiida.tools.importexport.dbimport.utils.IMPORT_LOGGER.debug",
  "aiida.tools.importexport.dbimport.utils.IMPORT_LOGGER.setLevel",
  "aldjemy.core.Cache.meta.tables",
  "alembic.context.config",
  "alembic.context.configure",
  "alembic.context.is_offline_mode",
  "alembic.context.run_migrations",
  "alembic.op.add_column",
  "alembic.op.alter_column",
  "alembic.op.create_foreign_key",
  "alembic.op.create_index",
  "alembic.op.create_table",
  "alembic.op.create_unique_constraint",
  "alembic.op.drop_column",
  "alembic.op.drop_constraint",
  "alembic.op.drop_index",
  "alembic.op.drop_table",
  "alembic.op.execute",
  "alembic.op.f",
  "alembic.op.get_bind",
  "alembic.op.inline_literal",
  "alembic.script.ScriptDirectory.from_config",
  "api.AiidaApi",
  "api.App",
  "api.app",
  "api.app.run",
  "array_list_checker",
  "ase.data.atomic_numbers.tolist",
  "ase.data.colors.jmol_colors.tolist",
  "asyncio.all_tasks",
  "asyncio.create_task",
  "asyncio.current_task",
  "authinfos.AuthInfo",
  "authinfos.AuthInfo.objects",
  "awaitable.AwaitableAction.APPEND",
  "awaitable.AwaitableAction.ASSIGN",
  "awaitable.AwaitableTarget.PROCESS",
  "backend.DjangoBackend",
  "backend.SqlaBackend",
  "backends.Backend",
  "base.Base.metadata",
  "base.to_aiida_type.register",
  "bpython",
  "bs4.BeautifulSoup",
  "build_entries",
  "build_kind_name",
  "calcjob.setup_extension",
  "callback",
  "cast_according_to_type",
  "check_node",
  "chemcount_str_to_number",
  "clean_builtin",
  "cleanout_symbol_list",
  "click.Command.collect_usage_pieces",
  "click.Group.get_command",
  "cls",
  "cls.__name__",
  "collapse_into_unit_cell",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.abc.Mapping",
  "collections.abc.MutableMapping",
  "collections.abc.MutableSequence",
  "collections.abc.Sized",
  "command",
  "comments.Comment",
  "comments.Comment.objects.delete",
  "comments.Comment.objects.find",
  "comments.Comment.objects.get",
  "computers.Computer",
  "computers.Computer.from_backend_entity",
  "config.Config",
  "config.Config.from_file",
  "config.ConfigValidationError",
  "config.config_schema",
  "configuration.get_config",
  "configuration.get_profile",
  "connection_func",
  "context.ToContext",
  "contextlib.nullcontext",
  "conv_f",
  "convert.ConvertIterator",
  "convert.get_backend_entity",
  "convert.get_orm_entity",
  "convert_function",
  "count_statistics",
  "curr_shell",
  "data.DataTranslator.get_downloadable_data",
  "db.models.SCHEMA_VERSION",
  "db_entity",
  "db_setting_model",
  "db_setting_model.objects.filter",
  "def_order",
  "delete_wrong_links",
  "deserializer_method",
  "dict.Dict",
  "dict.__repr__",
  "django.db.connection.introspection.table_names",
  "django.db.migrations.RunPython.noop",
  "django.db.models.AutoField",
  "django.db.models.BooleanField",
  "django.db.models.CharField",
  "django.db.models.DateTimeField",
  "django.db.models.EmailField",
  "django.db.models.FloatField",
  "django.db.models.IntegerField",
  "django.db.models.NullBooleanField",
  "django.db.models.Q.AND",
  "django.db.models.Q.OR",
  "django.db.models.TextField",
  "django.db.models.UUIDField",
  "django.db.models.fields.FieldDoesNotExist",
  "docutils.core.publish_doctree",
  "docutils.nodes",
  "docutils.nodes.Text",
  "docutils.nodes.bullet_list",
  "docutils.nodes.emphasis",
  "docutils.nodes.list_item",
  "docutils.nodes.literal_block",
  "docutils.nodes.paragraph",
  "docutils.nodes.strong",
  "docutils.parsers.rst.directives",
  "docutils.parsers.rst.directives.flag",
  "docutils.parsers.rst.directives.unchanged_required",
  "echo.echo",
  "echo.echo_critical",
  "echo_function",
  "entities.Collection",
  "entities.DjangoModelEntity",
  "entities.Entity",
  "entities.EntityExtrasMixin",
  "entities.SqlaModelEntity",
  "entry_point.load_entry_point",
  "errno",
  "errno.EEXIST",
  "errno.ENOENT",
  "errno.ENOTDIR",
  "errno.EPIPE",
  "exceptions.ValidationError",
  "execute_coroutine",
  "existing_option",
  "factories.CalculationFactory",
  "factories.DataFactory",
  "factories.DbImporterFactory",
  "factories.GroupFactory",
  "factories.OrbitalFactory",
  "factories.ParserFactory",
  "factories.SchedulerFactory",
  "factories.TransportFactory",
  "factories.WorkflowFactory",
  "flask.current_app.url_map.iter_rules",
  "flask.request.args",
  "flask.request.get_json",
  "flask.request.method",
  "flask.request.path",
  "flask.request.query_string.decode",
  "flask.request.url",
  "flask.request.url_root",
  "folder_digests",
  "format_function",
  "format_recursive",
  "func",
  "get_array_from_file",
  "get_ascii_tree",
  "get_current_version",
  "get_dict",
  "get_entry_point",
  "get_entry_points",
  "get_extremas_from_positions",
  "get_new_number",
  "get_node_description",
  "get_node_repository_sub_folder",
  "get_profile",
  "get_report_messages",
  "get_scoped_session",
  "get_statistics_dict",
  "get_subtree",
  "get_tag_from_type",
  "glob_in_dir",
  "group_all_together_symbols",
  "group_together",
  "group_together_symbols",
  "groups.Group",
  "handler",
  "handler.__name__",
  "has_vacancies",
  "hashlib.blake2b",
  "hashlib.md5",
  "hashlib.sha1",
  "hashlib.sha256",
  "implementation.entities.BackendEntity",
  "importlib.resources",
  "importlib.resources.read_text",
  "ipy_version",
  "is_greater_equal_one",
  "is_valid_cache_func",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.islice",
  "itertools.product",
  "kde",
  "l_are_equals",
  "logs.DjangoLog.from_dbmodel",
  "logs.Log",
  "logs.SqlaLog.from_dbmodel",
  "make_rel_url",
  "mayavi.mlab.pipeline.iso_surface",
  "mayavi.mlab.pipeline.scalar_field",
  "migrations._MIGRATION_LOOKUP.apply",
  "migrations.check_and_migrate_config",
  "migrations.config_needs_migrating",
  "migrator_cls",
  "model",
  "model._meta.local_fields",
  "model.objects.bulk_create",
  "model.objects.filter",
  "namedtuple_",
  "nint",
  "node.WarnWhenNotEntered",
  "nodes.DjangoNode",
  "nodes.Node",
  "numpy.arccos",
  "numpy.float64",
  "numpy.inf",
  "object.__setattr__",
  "option",
  "orbital.Orbital._base_fields_optional",
  "orbital.Orbital._base_fields_required",
  "os.R_OK",
  "os.access",
  "os.chmod",
  "os.chown",
  "os.close",
  "os.environ.copy",
  "os.environ.get",
  "os.getcwd",
  "os.getpid",
  "os.listdir",
  "os.lstat",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonpath",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.extsep",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.samefile",
  "os.path.sep",
  "os.path.sep.join",
  "os.path.split",
  "os.path.splitext",
  "os.readlink",
  "os.remove",
  "os.rename",
  "os.rmdir",
  "os.stat",
  "os.symlink",
  "os.system",
  "os.umask",
  "parser_class",
  "parser_class.__name__",
  "permute",
  "pgsu.DEFAULT_DSN",
  "pgsu.DEFAULT_DSN.copy",
  "pgsu.PGSU",
  "pgsu.PostgresConnectionMode",
  "pgsu.PostgresConnectionMode.PSQL",
  "pgtest.pgtest.PGTest",
  "plumpy.Bundle.__new__",
  "plumpy.ProcessState.CREATED.value",
  "plumpy.ProcessState.EXCEPTED",
  "plumpy.ProcessState.FINISHED",
  "plumpy.ProcessState.RUNNING.value",
  "plumpy.ProcessState.WAITING.value",
  "plumpy.events.reset_event_loop_policy",
  "plumpy.events.set_event_loop_policy",
  "plumpy.process_states.ProcessState.EXCEPTED",
  "plumpy.process_states.ProcessState.FINISHED",
  "plumpy.process_states.ProcessState.KILLED",
  "process.Process",
  "process.Process.define.__name__",
  "process.ProcessState.RUNNING",
  "process.ProcessState.WAITING",
  "process.setup_extension",
  "process_actions",
  "process_class",
  "process_class.recreate_from",
  "process_class.spec",
  "process_function",
  "processes.ProcessState.EXCEPTED",
  "processes.ProcessState.FINISHED",
  "processes.ProcessState.KILLED",
  "processes.calcjobs.manager.JobManager",
  "processes.futures.ProcessFuture",
  "processes.process.Process.current",
  "pymatgen.core.__version__",
  "pymysql.connect",
  "pyparsing.printables.replace",
  "pyparsing.pyparsing_common.number",
  "pytz.utc",
  "querybuilder.DjangoQueryBuilder",
  "querybuilder.QueryBuilder",
  "querybuilder.SqlaQueryBuilder",
  "re.M",
  "re.VERBOSE",
  "re.X",
  "reader_cls",
  "reset_session",
  "run_get_node",
  "scheduler_class",
  "serializer_method",
  "settings.AIIDA_CONFIG_FOLDER",
  "settings.DEFAULT_CONFIG_FILE_NAME",
  "settings.DEFAULT_CONFIG_INDENT_SIZE",
  "settings.DEFAULT_UMASK",
  "show_function",
  "shutdown_runner",
  "signal.SIGINT",
  "signal.SIGTERM",
  "single_to_list",
  "socket.timeout",
  "sphinxcontrib.details.directive.details",
  "sphinxcontrib.details.directive.summary",
  "split_url",
  "sqlalchemy.dialects.postgresql.dialect",
  "sqlalchemy.func.count",
  "sqlalchemy.func.date_trunc",
  "sqlalchemy.func.max",
  "sqlalchemy.sql.func.count",
  "sqlalchemy.sql.func.jsonb_set",
  "string.split",
  "suggester",
  "sys",
  "sys.argv",
  "sys.executable",
  "sys.exit",
  "sys.getdefaultencoding",
  "sys.getfilesystemencoding",
  "sys.modules",
  "sys.path",
  "sys.path.append",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.buffer",
  "sys.stdout.isatty",
  "sys.stdout.write",
  "sys.version_info",
  "tabulate.tabulate.PRESERVE_WHITESPACE",
  "time",
  "time.mktime",
  "time.sleep",
  "time.strptime",
  "time.time",
  "tokenizer",
  "tools_class",
  "transport_class",
  "transports.TransportQueue",
  "traverse_graph",
  "types.CalculationParamType",
  "types.CodeParamType",
  "types.ComputerParamType",
  "types.ConfigOptionParamType",
  "types.DataParamType",
  "types.EmailType",
  "types.FileOrUrl",
  "types.GroupParamType",
  "types.HostnameType",
  "types.LazyChoice",
  "types.NodeParamType",
  "types.NonEmptyStringParamType",
  "types.PluginParamType",
  "types.ProcessParamType",
  "types.ProfileParamType",
  "types.UserParamType",
  "types.WorkflowParamType",
  "typing.TypedDict",
  "updating",
  "users.DjangoUser",
  "users.SqlaUser",
  "users.User",
  "users.User.from_backend_entity",
  "users.User.objects",
  "users.User.objects.get_default",
  "utf8writer",
  "utils.ModelWrapper",
  "utils.decorators.with_dbenv",
  "utils.defaults.get_default_profile",
  "utils.disable_expire_on_commit",
  "utils.echo.ExitCode.CRITICAL",
  "utils.echo.ExitCode.SUCCESS",
  "utils.echo.VALID_DICT_FORMATS_MAPPING.keys",
  "utils.instantiate_process",
  "utils.is_process_function",
  "utils.loop_scope",
  "utils.node.load_node_class",
  "validate_traversal_rules",
  "validator",
  "value",
  "workchain.setup_extension",
  "wrapper",
  "zipfile.BadZipfile",
  "zmq.__version__.split"
 ],
 "deps": {
  "BackupError": [],
  "BlockIterator": [],
  "CifFile": [],
  "DbNode": [],
  "ENGINE": [],
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-7.23.0-py39hef51801_0"
  ],
  "IcsdSearchResults": [],
  "Iterator": [],
  "Kind": [],
  "MySQLdb": [],
  "NodeType": [],
  "NodesIterator": [],
  "PatternWithResult": [],
  "Site": [],
  "StartCircusNotFound": [],
  "_copy_tree": [],
  "_deserialize_attribute": [],
  "_is_non_db": [],
  "_is_path_1": [],
  "_is_path_2": [],
  "_is_path_3": [],
  "_is_path_4": [],
  "_join": [],
  "_migration_calc_job_option_attribute_keys": [],
  "_num_points_from_coordinates": [],
  "_validate_identifier_pattern": [],
  "a_are_equals": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "aiida": [],
  "aio_pika": [
   "aio-pika/conda-forge/noarch/aio-pika-6.8.0-pyh6c4a22f_0"
  ],
  "aldjemy": [
   "aldjemy/conda-forge/noarch/aldjemy-0.10.1-pyh9f0ad1d_1"
  ],
  "alembic": [
   "alembic/conda-forge/noarch/alembic-1.0.7-py_0"
  ],
  "api": [],
  "archive_path": [
   "archive-path/conda-forge/noarch/archive-path-0.2.1-pyhd8ed1ab_0"
  ],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "array_list_checker": [],
  "ase": [
   "ase/conda-forge/noarch/ase-3.21.0-pyhd8ed1ab_0"
  ],
  "asyncio": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "authinfos": [],
  "awaitable": [],
  "backend": [],
  "backends": [],
  "base": [],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bpython": [],
  "bs4": [],
  "build_entries": [],
  "build_kind_name": [],
  "calcjob": [],
  "callback": [],
  "cast_according_to_type": [],
  "check_node": [],
  "chemcount_str_to_number": [],
  "circus": [
   "circus/conda-forge/linux-64/circus-0.15.0-py27_0"
  ],
  "clean_builtin": [],
  "cleanout_symbol_list": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "click_completion": [
   "click-completion/conda-forge/noarch/click-completion-0.3.1-py_0"
  ],
  "click_config_file": [
   "click-config-file/conda-forge/noarch/click-config-file-0.6.0-pyhd8ed1ab_1",
   "click_config_file/conda-forge/noarch/click_config_file-0.4.5-py_0"
  ],
  "click_spinner": [
   "click-spinner/conda-forge/noarch/click-spinner-0.1.7-py_0"
  ],
  "cls": [],
  "code": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "codecs": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collapse_into_unit_cell": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "command": [],
  "comments": [],
  "computers": [],
  "concurrent": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "config": [],
  "configuration": [],
  "connection_func": [],
  "context": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "contextvars": [
   "contextvars/conda-forge/noarch/contextvars-2.3-py_0"
  ],
  "conv_f": [],
  "convert": [],
  "convert_function": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "count_statistics": [],
  "curr_shell": [],
  "data": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.8-pyh787bdff_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "db": [],
  "db_entity": [],
  "db_setting_model": [],
  "def_order": [],
  "delete_wrong_links": [],
  "deserializer_method": [],
  "dict": [],
  "difflib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "django": [
   "django/conda-forge/noarch/django-3.1.4-pyhd8ed1ab_0"
  ],
  "docutils": [],
  "echo": [],
  "echo_function": [],
  "entities": [],
  "entry_point": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "errno": [],
  "ete3": [
   "ete3/conda-forge/noarch/ete3-3.1.1-py_0"
  ],
  "exceptions": [],
  "execute_coroutine": [],
  "existing_option": [],
  "factories": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.11.1-pyh9f0ad1d_1"
  ],
  "filecmp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "flask_cors": [
   "flask-cors/conda-forge/noarch/flask-cors-3.0.10-pyhd8ed1ab_0",
   "flask_cors/conda-forge/noarch/flask_cors-3.0.9-pyh9f0ad1d_0"
  ],
  "flask_restful": [
   "flask-restful/conda-forge/noarch/flask-restful-0.3.6-py_1"
  ],
  "fnmatch": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "folder_digests": [],
  "format_function": [],
  "format_recursive": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_array_from_file": [],
  "get_ascii_tree": [],
  "get_current_version": [],
  "get_dict": [],
  "get_entry_point": [],
  "get_entry_points": [],
  "get_extremas_from_positions": [],
  "get_new_number": [],
  "get_node_description": [],
  "get_node_repository_sub_folder": [],
  "get_profile": [],
  "get_report_messages": [],
  "get_scoped_session": [],
  "get_statistics_dict": [],
  "get_subtree": [],
  "get_tag_from_type": [],
  "getpass": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "glob_in_dir": [],
  "graphviz": [
   "python-graphviz/conda-forge/noarch/python-graphviz-0.14.2-pyh9f0ad1d_0"
  ],
  "group_all_together_symbols": [],
  "group_together": [],
  "group_together_symbols": [],
  "groups": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "handler": [],
  "has_vacancies": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "html": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "imp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "implementation": [],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ipy_version": [],
  "is_greater_equal_one": [],
  "is_valid_cache_func": [],
  "itertools": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.10-py_1"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-py_2"
  ],
  "kde": [],
  "keyword": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "kiwipy": [
   "kiwipy/conda-forge/noarch/kiwipy-0.6.1-pyh9f0ad1d_1"
  ],
  "l_are_equals": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "logs": [],
  "make_rel_url": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "mayavi": [
   "mayavi/conda-forge/linux-64/mayavi-4.5.0-py36_3"
  ],
  "migrations": [],
  "migrator_cls": [],
  "model": [],
  "namedtuple_": [],
  "nint": [],
  "node": [],
  "nodes": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "option": [],
  "orbital": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pamqp": [
   "pamqp/conda-forge/noarch/pamqp-2.3.0-py_0"
  ],
  "param": [
   "param/conda-forge/noarch/param-1.8.2-py_0"
  ],
  "paramiko": [
   "paramiko/conda-forge/noarch/paramiko-2.7.1-pyh9f0ad1d_1"
  ],
  "parser_class": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "permute": [],
  "pgsu": [],
  "pgtest": [],
  "phonopy": [
   "phonopy/conda-forge/linux-64/phonopy-1.11.12.92-np112py27_0",
   "phonopy/conda-forge/linux-64/phonopy-1.14.0-py27h3010b51_1"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pkgutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "plumpy": [
   "plumpy/conda-forge/noarch/plumpy-0.14.5-pyh9f0ad1d_3"
  ],
  "process": [],
  "process_actions": [],
  "process_class": [],
  "process_function": [],
  "processes": [],
  "profile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "psutil": [
   "psutil/conda-forge/linux-64/psutil-5.8.0-py37h5e8e339_1"
  ],
  "psycopg2": [
   "psycopg2/conda-forge/linux-64/psycopg2-2.8.6-py39hba1e1b8_1"
  ],
  "pymatgen": [
   "pymatgen/conda-forge/linux-64/pymatgen-2020.10.9.1-py37h99015e2_0"
  ],
  "pymysql": [
   "pymysql/conda-forge/noarch/pymysql-1.0.1-pyhd8ed1ab_0"
  ],
  "pyparsing": [
   "pyparsing/conda-forge/noarch/pyparsing-2.4.3-py_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "pytz": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pytz/conda-forge/noarch/pytz-2018.4-py_0"
  ],
  "querybuilder": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "reader_cls": [],
  "readline": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "reentry": [
   "reentry/conda-forge/linux-64/reentry-1.2.2-py36_0"
  ],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "reset_session": [],
  "rlcompleter": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "run_get_node": [],
  "scheduler_class": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "seekpath": [
   "seekpath/conda-forge/noarch/seekpath-1.9.4-py_0"
  ],
  "serializer_method": [],
  "settings": [],
  "shelve": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "show_function": [],
  "shutdown_runner": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "simplejson": [
   "simplejson/conda-forge/linux-64/simplejson-3.16.0-py36h14c3975_1002"
  ],
  "single_to_list": [],
  "singledispatch": [
   "singledispatch/conda-forge/noarch/singledispatch-3.6.1-pyh44b312d_0"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "spglib": [
   "spglib/conda-forge/linux-64/spglib-1.9.9.44-np111py35_0"
  ],
  "sphinx": [
   "sphinx/conda-forge/noarch/sphinx-3.4.2-pyhd8ed1ab_0"
  ],
  "sphinxcontrib": [],
  "split_url": [],
  "sqlalchemy": [
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.3.15-py36h8c4c3a4_1",
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.4.6-py37h6b43d8f_0"
  ],
  "sqlalchemy_utils": [
   "sqlalchemy-utils/conda-forge/noarch/sqlalchemy-utils-0.36.8-pyhd3deb0d_0"
  ],
  "stat": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "suggester": [],
  "sys": [],
  "tabulate": [
   "tabulate/conda-forge/noarch/tabulate-0.8.7-pyh9f0ad1d_0"
  ],
  "tarfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test": [
   "abtem/conda-forge/noarch/abtem-1.0.0b11-pyhd8ed1ab_0",
   "aiohttp-client-cache/conda-forge/noarch/aiohttp-client-cache-0.3.0-pyhd8ed1ab_0",
   "ansible-runner/conda-forge/noarch/ansible-runner-1.4.6-pyh9f0ad1d_0",
   "awssert/conda-forge/noarch/awssert-1.0.0-pyhd8ed1ab_0",
   "bletchley/conda-forge/noarch/bletchley-0.2.0-py_0",
   "botorch/conda-forge/noarch/botorch-0.2.2-py_0",
   "dbt/conda-forge/noarch/dbt-0.14.4-py_0",
   "dolfyn/conda-forge/noarch/dolfyn-0.8.1-py_1",
   "easybuild-framework/conda-forge/noarch/easybuild-framework-4.3.4-pyhd8ed1ab_0",
   "ensureconda/conda-forge/noarch/ensureconda-1.2.1-py_0",
   "fairlearn/conda-forge/noarch/fairlearn-0.4.6-py_0",
   "findiff/conda-forge/noarch/findiff-0.8.9-pyhd8ed1ab_0",
   "flask-redis/conda-forge/noarch/flask-redis-0.4.0-py_0",
   "forest/conda-forge/noarch/forest-0.3.1-py_0",
   "gpytorch/conda-forge/noarch/gpytorch-1.4.0-pyhd8ed1ab_0",
   "hopcroftkarp/conda-forge/noarch/hopcroftkarp-1.2.4-py_0",
   "ibm-cloud-sdk-core/conda-forge/noarch/ibm-cloud-sdk-core-3.1.0-pyh9f0ad1d_0",
   "ioos_qartod/conda-forge/noarch/ioos_qartod-0.0.3-py_1",
   "label-maker/conda-forge/noarch/label-maker-0.8.0-pyh9f0ad1d_0",
   "meshplex/conda-forge/noarch/meshplex-0.15.14-pyhd8ed1ab_0",
   "museotoolbox/conda-forge/noarch/museotoolbox-0.13.0-pyh9f0ad1d_0",
   "nlpaug/conda-forge/noarch/nlpaug-1.1.5-pyhd8ed1ab_0",
   "otfmi/conda-forge/noarch/otfmi-0.10-pyh44b312d_0",
   "px4tools/conda-forge/noarch/px4tools-0.9.6-py_1000",
   "py-readability-metrics/conda-forge/noarch/py-readability-metrics-1.4.5-pyhd8ed1ab_0",
   "pyinstrument/conda-forge/noarch/pyinstrument-3.1.0-py_0",
   "pypd/conda-forge/noarch/pypd-1.1.0-py_0",
   "pyreportjasper/conda-forge/noarch/pyreportjasper-2.1.0-pyhd3deb0d_0",
   "python-awips/conda-forge/noarch/python-awips-18.1.2-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython",
   "pyulog/conda-forge/noarch/pyulog-0.6.0-py_0",
   "pyzotero/conda-forge/noarch/pyzotero-1.3.16-py_0",
   "radiant-mlhub/conda-forge/noarch/radiant-mlhub-0.1.3-pyhd8ed1ab_0",
   "sat-search/conda-forge/noarch/sat-search-0.3.0-py_0",
   "satsearch/conda-forge/noarch/satsearch-0.1.0-py_0",
   "signalrcore/conda-forge/noarch/signalrcore-0.9.2-pyhd8ed1ab_0",
   "sklearn-json/conda-forge/noarch/sklearn-json-0.1.0-pyhd8ed1ab_0",
   "snorkel/conda-forge/noarch/snorkel-0.9.4-py_0",
   "tatsu/conda-forge/noarch/tatsu-5.6.1-pyhd8ed1ab_0",
   "wildmeshing/conda-forge/linux-64/wildmeshing-0.1.1-py37hbff90af_0"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "tokenizer": [],
  "tools_class": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "transport_class": [],
  "transports": [],
  "traverse_graph": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tzlocal": [
   "tzlocal/conda-forge/noarch/tzlocal-2.0.0-py_0"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "updating": [],
  "upf_to_json": [
   "upf_to_json/conda-forge/noarch/upf_to_json-0.9.2-py_0"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "users": [],
  "utf8writer": [],
  "utils": [],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "validate_traversal_rules": [],
  "validator": [],
  "value": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "webbrowser": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-1.0.0-py_0"
  ],
  "workchain": [],
  "wrapper": [],
  "wrapt": [
   "wrapt/conda-forge/linux-64/wrapt-1.12.1-py38h25fe258_2"
  ],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "zmq": [
   "pyzmq/conda-forge/linux-64/pyzmq-21.0.1-py36h81c33ee_0"
  ]
 }
}