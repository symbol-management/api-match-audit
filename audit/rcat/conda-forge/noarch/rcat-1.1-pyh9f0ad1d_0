{
 "bad": [
  "_compute",
  "_decorate_box",
  "_domain",
  "_get_mapobj",
  "argparse",
  "argparse.ArgumentParser",
  "asop_calc",
  "ast",
  "ast.literal_eval",
  "calc_L2",
  "collections.defaultdict",
  "convolve",
  "convolve.convolve2Dfunc",
  "convolve.kernel_gen",
  "coord_return",
  "copy.deepcopy",
  "custom_legend",
  "dask.distributed.Client",
  "dask.distributed.LocalCluster",
  "datetime.datetime",
  "datetime.datetime.combine",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "distfunc",
  "ehi_calc",
  "eop_calc",
  "fractions.Fraction",
  "functools.reduce",
  "get_map",
  "get_object_properties",
  "glob",
  "glob.glob",
  "importlib.machinery.SourceFileLoader",
  "itertools",
  "itertools.cycle",
  "itertools.groupby",
  "itertools.product",
  "logging",
  "logging.debug",
  "logging.warn",
  "m",
  "m.contour",
  "m.contourf",
  "m.drawcoastlines",
  "m.drawcountries",
  "m.pcolormesh",
  "manage_chunks",
  "map_label",
  "math",
  "math.ceil",
  "math.floor",
  "math.pi",
  "math.sqrt",
  "matplotlib",
  "matplotlib.cm.BrBG",
  "matplotlib.cm.Paired",
  "matplotlib.cm.PuRd",
  "matplotlib.cm.RdBu_r",
  "matplotlib.cm.Set1.colors",
  "matplotlib.cm.Spectral_r",
  "matplotlib.cm.YlGnBu",
  "matplotlib.cm.get_cmap",
  "matplotlib.colors",
  "matplotlib.colors.BoundaryNorm",
  "matplotlib.colors.ListedColormap",
  "matplotlib.lines.Line2D",
  "matplotlib.patches.Patch",
  "matplotlib.patches.Polygon",
  "matplotlib.path.Path",
  "matplotlib.pyplot",
  "matplotlib.pyplot.clabel",
  "matplotlib.pyplot.cm.get_cmap",
  "matplotlib.pyplot.connect",
  "matplotlib.pyplot.draw",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.style.use",
  "matplotlib.pyplot.subplots",
  "mpl_toolkits.axes_grid1.ImageGrid",
  "mpl_toolkits.basemap.Basemap",
  "multiprocessing",
  "multiprocessing.Pool",
  "multiprocessing.cpu_count",
  "netCDF4.Dataset",
  "numpy",
  "numpy.NAN",
  "numpy.NaN",
  "numpy.abs",
  "numpy.all",
  "numpy.any",
  "numpy.append",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.arctan2",
  "numpy.array",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.average",
  "numpy.bincount",
  "numpy.broadcast_to",
  "numpy.c_",
  "numpy.ceil",
  "numpy.complex",
  "numpy.convolve",
  "numpy.copy",
  "numpy.cos",
  "numpy.diff",
  "numpy.digitize",
  "numpy.dstack",
  "numpy.dtype",
  "numpy.e",
  "numpy.empty",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.fabs",
  "numpy.fft.fftn",
  "numpy.fft.ifftn",
  "numpy.fft.ifftshift",
  "numpy.flipud",
  "numpy.floor",
  "numpy.histogram",
  "numpy.hstack",
  "numpy.insert",
  "numpy.int",
  "numpy.int64",
  "numpy.invert",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.log",
  "numpy.log10",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.ma.MaskedArray",
  "numpy.ma.filled",
  "numpy.ma.getmask",
  "numpy.ma.is_masked",
  "numpy.ma.masked_outside",
  "numpy.ma.masked_where",
  "numpy.ma.max",
  "numpy.ma.mean",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.minimum",
  "numpy.moveaxis",
  "numpy.nan",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmin",
  "numpy.nanpercentile",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.ogrid",
  "numpy.ones",
  "numpy.percentile",
  "numpy.pi",
  "numpy.product",
  "numpy.r_",
  "numpy.random.randint",
  "numpy.repeat",
  "numpy.round",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.sum",
  "numpy.timedelta64",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "os",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "pandas",
  "pandas.Series",
  "pandas.to_datetime",
  "pandas.to_timedelta",
  "pdf_calc",
  "print_ncattr",
  "pss_calc",
  "re",
  "re.split",
  "rpxx_calc",
  "rtxx_calc",
  "rxx_calc",
  "scipy.ndimage.measurements.center_of_mass",
  "scipy.optimize",
  "scipy.optimize.curve_fit",
  "scipy.signal",
  "scipy.sparse",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.spatial.distance.pdist",
  "scipy.stats.skew",
  "sdii_calc",
  "skimage.measure.find_contours",
  "skimage.measure.label",
  "skimage.measure.regionprops",
  "skimage.morphology.remove_small_objects",
  "sys",
  "sys.exit",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter"
 ],
 "deps": {
  "_compute": [],
  "_decorate_box": [],
  "_domain": [],
  "_get_mapobj": [],
  "argparse": [],
  "asop_calc": [],
  "ast": [],
  "calc_L2": [],
  "collections": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "convolve": [],
  "coord_return": [],
  "copy": [],
  "custom_legend": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "dask_jobqueue": [
   "dask-jobqueue/conda-forge/noarch/dask-jobqueue-0.3.0-py_0"
  ],
  "datetime": [],
  "distfunc": [],
  "ehi_calc": [],
  "eop_calc": [],
  "fractions": [],
  "functools": [],
  "get_map": [],
  "get_object_properties": [],
  "glob": [],
  "importlib": [],
  "ipdb": [
   "ipdb/conda-forge/noarch/ipdb-0.12.3-py_0"
  ],
  "itertools": [],
  "logging": [],
  "m": [],
  "manage_chunks": [],
  "map_label": [],
  "math": [],
  "matplotlib": [],
  "mpl_toolkits": [],
  "multiprocessing": [],
  "netCDF4": [],
  "numpy": [],
  "os": [],
  "palettable": [
   "palettable/conda-forge/noarch/palettable-3.1.1-py_0"
  ],
  "pandas": [],
  "pdf_calc": [],
  "print_ncattr": [],
  "pss_calc": [],
  "re": [],
  "rpxx_calc": [],
  "rtxx_calc": [],
  "rxx_calc": [],
  "scipy": [],
  "sdii_calc": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "skimage": [],
  "sys": [],
  "warnings": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.15.0-py_0"
  ],
  "xesmf": [
   "xesmf/conda-forge/noarch/xesmf-0.5.3-pyhd8ed1ab_0"
  ]
 }
}