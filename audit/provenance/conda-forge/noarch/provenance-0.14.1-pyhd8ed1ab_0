{
 "bad": [
  "Exception.__init__",
  "_archive_file",
  "_commonstore.chained_contains",
  "_commonstore.chained_delete",
  "_commonstore.chained_filename",
  "_commonstore.chained_get",
  "_commonstore.chained_put",
  "_commonstore.ensure_contains",
  "_commonstore.ensure_delete",
  "_commonstore.ensure_present",
  "_commonstore.ensure_put",
  "_commonstore.ensure_read",
  "_commonstore.ensure_write",
  "_commonstore.find_first",
  "_dependencies.dependencies",
  "_provenance_wrapper",
  "_version.get_versions",
  "alembic.command.stamp",
  "alembic.command.upgrade",
  "alembic.config.Config",
  "alembic.config.Config.current",
  "alembic.config.Config.set_current",
  "alembic.context.begin_transaction",
  "alembic.context.config",
  "alembic.context.configure",
  "alembic.context.is_offline_mode",
  "alembic.context.run_migrations",
  "alembic.migration.MigrationContext.configure",
  "alembic.op.create_table",
  "alembic.op.drop_table",
  "artifact_hasher.artifact_hasher",
  "atomic_from_config",
  "blobstores.RemoteStore",
  "boltons.funcutils.FunctionBuilder.from_func",
  "boltons.funcutils.wraps",
  "ca",
  "cloudpickle.CloudPickler",
  "cloudpickle.dump",
  "cloudpickle.load",
  "cls",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "create_chained",
  "datetime.datetime",
  "datetime.datetime.utcnow",
  "decimal.InvalidOperation",
  "extract_args",
  "extract_kargs",
  "f",
  "f.__merge_defaults__",
  "f._provenance_metadata",
  "f.args",
  "f.func",
  "f.keywords.keys",
  "frozendict.frozendict",
  "func",
  "functools.singledispatch",
  "google.cloud.storage.Client",
  "graphviz.Digraph",
  "hashing.Hasher",
  "hashing.Hasher.__init__",
  "hashing.Hasher.hash",
  "hashing.Hasher.save",
  "hashing.NumpyHasher",
  "hashing.NumpyHasher.__init__",
  "hashing.NumpyHasher.hash",
  "hashing.NumpyHasher.save",
  "hashing.file_hash",
  "hashing.hash",
  "hashing.value_repr",
  "hashing.value_repr.register",
  "hashlib.md5",
  "hashlib.new",
  "hashlib.sha1",
  "input_process_fn",
  "inspect.getfullargspec",
  "io.BytesIO",
  "joblib.disk.mkdirp",
  "joblib.dump",
  "joblib.load",
  "json.JSONEncoder",
  "json.loads",
  "logging.getLogger",
  "memoized_property.memoized_property",
  "method",
  "models",
  "models.Artifact",
  "models.Artifact.id",
  "models.Artifact.id.in_",
  "models.Artifact.run_id",
  "models.Artifact.value_id",
  "models.ArtifactSet",
  "models.ArtifactSet.created_at.desc",
  "models.ArtifactSet.labels",
  "models.ArtifactSet.set_id",
  "models.ArtifactSetMember",
  "models.ArtifactSetMember.set_id",
  "models.Base.metadata.create_all",
  "models.Run",
  "models.Run.id",
  "multiprocessing.cpu_count",
  "numpy",
  "numpy.bool_",
  "numpy.floating",
  "numpy.integer",
  "numpy.ndarray",
  "op",
  "operator",
  "operator.and_",
  "operator.contains",
  "operator.or_",
  "operator.sub",
  "os.getpid",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.splitext",
  "os.remove",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.read_parquet",
  "paramiko.SFTPClient.from_transport",
  "paramiko.SSHClient",
  "pickle.DEFAULT_PROTOCOL",
  "pickle.PicklingError",
  "pickle.dump",
  "platform.machine",
  "platform.node",
  "platform.platform",
  "platform.processor",
  "platform.release",
  "platform.system",
  "platform.version",
  "provenance._commonstore.KeyExistsError",
  "provenance._commonstore.PermissionError",
  "provenance._commonstore.ensure_read",
  "provenance._commonstore.find_first",
  "provenance._config.BLOBSTORE_TYPES",
  "provenance._config.GSStore",
  "provenance._config.REPO_TYPES",
  "provenance._config.SFTPStore",
  "provenance._config.atomic_item_from_config",
  "provenance._config.blobstore_from_config",
  "provenance._config.blobstores_from_config",
  "provenance._config.from_config",
  "provenance._config.full_config",
  "provenance._config.items_from_config",
  "provenance._config.load_config",
  "provenance._config.logger",
  "provenance._config.merge_prototypes",
  "provenance._config.repo_from_config",
  "provenance._config.repos_from_config",
  "provenance._dependencies.DependencyWalker",
  "provenance._dependencies.Pickler",
  "provenance._dependencies._artifact_branches",
  "provenance._dependencies._deps",
  "provenance._logging.structlog",
  "provenance._version.version_json",
  "provenance.artifact_hasher.ArtifactHasher",
  "provenance.artifact_hasher.NumpyArtifactHasher",
  "provenance.artifact_hasher._save",
  "provenance.blobstores.BaseBlobStore",
  "provenance.blobstores.ChainedStore",
  "provenance.blobstores.DiskStore",
  "provenance.blobstores.MemoryStore",
  "provenance.blobstores.RemoteStore",
  "provenance.blobstores.S3Store",
  "provenance.blobstores._abspath",
  "provenance.blobstores._atomic_write",
  "provenance.blobstores._temp_filename",
  "provenance.core.ArchivedFile",
  "provenance.core.ArtifactRecord",
  "provenance.core.ImpureFunctionError",
  "provenance.core.MutatedArtifactValueError",
  "provenance.core._EXT_MAPPINGS",
  "provenance.core._archive_file_hash",
  "provenance.core._base_fn",
  "provenance.core._extract_extension",
  "provenance.core.artifact_properties",
  "provenance.core.composite_artifact",
  "provenance.core.create_id",
  "provenance.core.file_dump",
  "provenance.core.file_load",
  "provenance.core.fn_info",
  "provenance.core.get_metadata",
  "provenance.core.hash_inputs",
  "provenance.core.provenance",
  "provenance.core.provenance_wrapper",
  "provenance.core.remove_inputs_fn",
  "provenance.core.run_info",
  "provenance.google_storage.GSStore",
  "provenance.google_storage.retry",
  "provenance.hashing.Hasher",
  "provenance.hashing.NumpyHasher",
  "provenance.hashing.Pickler",
  "provenance.hashing._ConsistentSet",
  "provenance.hashing._MyHash",
  "provenance.hashing.hash",
  "provenance.hashing.pickle",
  "provenance.hashing.value_repr",
  "provenance.migrations.env.config",
  "provenance.migrations.env.run_migrations_offline",
  "provenance.migrations.env.run_migrations_online",
  "provenance.migrations.env.target_metadata",
  "provenance.models.Base",
  "provenance.models.Base.metadata",
  "provenance.models.SHA1_LENGTH",
  "provenance.models.VALUE_ID_LENGTH",
  "provenance.repos.Artifact",
  "provenance.repos.ArtifactProxy",
  "provenance.repos.ArtifactRepository",
  "provenance.repos.ArtifactSet",
  "provenance.repos.CallableArtifactProxy",
  "provenance.repos.ChainedRepo",
  "provenance.repos.Config",
  "provenance.repos.Config.set_current",
  "provenance.repos.Encoder",
  "provenance.repos.MemoryRepo",
  "provenance.repos.PostgresRepo",
  "provenance.repos.Proxy",
  "provenance.repos.RepoSpy",
  "provenance.repos._alembic_config",
  "provenance.repos._artifact_from_record",
  "provenance.repos._artifact_id",
  "provenance.repos._check_labels_name",
  "provenance.repos._check_pid",
  "provenance.repos._contains_set",
  "provenance.repos._create_db_if_needed",
  "provenance.repos._db_engine",
  "provenance.repos._delete_set",
  "provenance.repos._host_info",
  "provenance.repos._inputs_json",
  "provenance.repos._insert_set_members_sql",
  "provenance.repos._ping_postgres",
  "provenance.repos._process_info",
  "provenance.repos._put_only_value",
  "provenance.repos._put_set",
  "provenance.repos._record_pid",
  "provenance.repos._set_op",
  "provenance.repos._set_search_path",
  "provenance.repos._transform",
  "provenance.repos.artifact_proxy",
  "provenance.repos.artifact_set_properties",
  "provenance.repos.coerce_to_artifact",
  "provenance.repos.coerce_to_artifacts",
  "provenance.repos.current_config",
  "provenance.repos.get_default_repo",
  "provenance.repos.is_proxy",
  "provenance.repos.lazy_dict",
  "provenance.repos.lazy_proxy_dict",
  "provenance.repos.load_artifact",
  "provenance.repos.load_proxy",
  "provenance.repos.save_artifact",
  "provenance.repos.set_default_repo",
  "provenance.repos.set_difference",
  "provenance.repos.set_intersection",
  "provenance.repos.set_union",
  "provenance.repos.transform_value",
  "provenance.repos.using_repo",
  "provenance.serializers.Serializer",
  "provenance.serializers._pandas_and_parquet_present",
  "provenance.serializers._pytorch_present",
  "provenance.serializers.cloudpickle_dump",
  "provenance.serializers.cloudpickle_load",
  "provenance.serializers.joblib_dump",
  "provenance.serializers.object_serializer",
  "provenance.serializers.partial_serializer",
  "provenance.serializers.pd_df_parquet_dump",
  "provenance.serializers.pd_df_parquet_load",
  "provenance.serializers.pd_series_parquet_dump",
  "provenance.serializers.pd_series_parquet_load",
  "provenance.serializers.pytorch_model_dump",
  "provenance.serializers.pytorch_model_load",
  "provenance.serializers.register_serializer",
  "provenance.serializers.serializers",
  "provenance.sftp.SFTPStore",
  "provenance.sftp._ssh_client",
  "provenance.utils.UNSPECIFIED_ARG",
  "provenance.utils._func_param_info",
  "provenance.utils.args_extractor",
  "provenance.utils.inner_function",
  "provenance.utils.is_curry_func",
  "provenance.utils.partial_fn_info",
  "provenance.vis.utils.DigraphDicts",
  "provenance.vis.utils._viz_artifact",
  "provenance.vis.utils.artifact_id",
  "provenance.vis.utils.artifact_record",
  "provenance.vis.utils.dicts_to_digraph",
  "provenance.vis.utils.edge",
  "provenance.vis.utils.elide",
  "provenance.vis.utils.node",
  "provenance.vis.utils.param_node_id",
  "psutil.Process",
  "repos.Artifact",
  "repos.Config.current",
  "repos._artifact_from_record",
  "repos.capture_set",
  "repos.coerce_to_artifact",
  "repos.get_check_mutations",
  "repos.get_default_repo",
  "repos.get_read_only",
  "repos.get_repo_by_name",
  "repos.get_use_cache",
  "repos.is_proxy",
  "s3fs.S3FileSystem",
  "serializers",
  "serializers.DEFAULT_INPUT_SERIALIZER",
  "serializers.DEFAULT_VALUE_SERIALIZER",
  "serializers.artifact_ids",
  "serializers.created_at",
  "serializers.id",
  "serializers.labels",
  "serializers.object_serializer",
  "serializers.query",
  "serializers.register_serializer",
  "serializers.serializer",
  "serializers.serializers",
  "serializers.serializers.keys",
  "set_labels_fn",
  "shutil.copy",
  "shutil.move",
  "shutil.rmtree",
  "sqlalchemy.BOOLEAN",
  "sqlalchemy.Column",
  "sqlalchemy.FLOAT",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.ForeignKeyConstraint",
  "sqlalchemy.INTEGER",
  "sqlalchemy.PrimaryKeyConstraint",
  "sqlalchemy.VARCHAR",
  "sqlalchemy.create_engine",
  "sqlalchemy.dialects.postgresql.ARRAY",
  "sqlalchemy.dialects.postgresql.BOOLEAN",
  "sqlalchemy.dialects.postgresql.FLOAT",
  "sqlalchemy.dialects.postgresql.INTEGER",
  "sqlalchemy.dialects.postgresql.JSONB",
  "sqlalchemy.dialects.postgresql.TIMESTAMP",
  "sqlalchemy.dialects.postgresql.VARCHAR",
  "sqlalchemy.dialects.postgresql.insert",
  "sqlalchemy.engine_from_config",
  "sqlalchemy.event.listens_for",
  "sqlalchemy.exc.DBAPIError",
  "sqlalchemy.exc.DisconnectionError",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.orm.deferred",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.pool.NullPool",
  "sqlalchemy.schema.CreateSchema",
  "sqlalchemy.select",
  "sqlalchemy.sql.exists",
  "sqlalchemy.sql.select",
  "sqlalchemy.sql.text",
  "sqlalchemy_utils.functions.create_database",
  "sqlalchemy_utils.functions.database_exists",
  "str.maketrans",
  "struct.pack",
  "sys.modules",
  "sys.version_info",
  "tempfile.NamedTemporaryFile",
  "time.time",
  "toolz.curried.valfilter",
  "toolz.curry",
  "toolz.dissoc",
  "toolz.filter",
  "toolz.groupby",
  "toolz.identity",
  "toolz.keyfilter",
  "toolz.map",
  "toolz.memoize",
  "toolz.merge",
  "toolz.partial",
  "toolz.pipe",
  "toolz.reduce",
  "toolz.thread_first",
  "toolz.valfilter",
  "toolz.valmap",
  "torch.load",
  "torch.nn.Module",
  "torch.save",
  "types.MethodType",
  "utils.UNSPECIFIED_ARG",
  "utils.args_extractor",
  "utils.fn_info",
  "utils.inner_function",
  "utils.is_curry_func",
  "utils.lineage_dot",
  "utils.param_info",
  "wrapt.CallableObjectProxy",
  "wrapt.ObjectProxy",
  "yaml.load"
 ],
 "deps": {
  "Exception": [],
  "_archive_file": [],
  "_commonstore": [],
  "_dependencies": [],
  "_provenance_wrapper": [],
  "_version": [],
  "alembic": [],
  "artifact_hasher": [],
  "atomic_from_config": [],
  "blobstores": [],
  "boltons": [],
  "ca": [],
  "cloudpickle": [],
  "cls": [],
  "collections": [],
  "contextlib": [],
  "copy": [],
  "create_chained": [],
  "datetime": [],
  "decimal": [],
  "extract_args": [],
  "extract_kargs": [],
  "f": [],
  "frozendict": [],
  "func": [],
  "functools": [],
  "google": [],
  "graphviz": [],
  "hashing": [],
  "hashlib": [],
  "input_process_fn": [],
  "inspect": [],
  "io": [],
  "joblib": [],
  "json": [],
  "logging": [],
  "memoized_property": [],
  "method": [],
  "models": [],
  "multiprocessing": [],
  "numpy": [],
  "op": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "paramiko": [],
  "pickle": [],
  "platform": [],
  "provenance": [],
  "psutil": [],
  "repos": [],
  "s3fs": [],
  "serializers": [],
  "set_labels_fn": [],
  "shutil": [],
  "sqlalchemy": [],
  "sqlalchemy_utils": [],
  "str": [],
  "struct": [],
  "sys": [],
  "tempfile": [],
  "time": [],
  "toolz": [],
  "torch": [],
  "types": [],
  "utils": [],
  "wrapt": [],
  "yaml": []
 }
}