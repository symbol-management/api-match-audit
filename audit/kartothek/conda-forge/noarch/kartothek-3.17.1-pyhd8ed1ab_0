{
 "bad": [
  "_csv.CsvSerializer",
  "_f",
  "_fmt",
  "_fmt_origin",
  "_generic.DataFrameSerializer",
  "_generic.DataFrameSerializer.register_serializer",
  "_generic.PredicatesType",
  "_generic.check_predicates",
  "_generic.filter_df",
  "_generic.filter_df_from_predicates",
  "_get_files",
  "_io_buffer.BlockBuffer",
  "_make_list",
  "_parquet.ParquetSerializer",
  "_parse",
  "_reduce_dtype",
  "_renormalize_meta",
  "_shuffle.shuffle_store_dask_partitions",
  "_sizeof.register_sizeof_ktk_classes",
  "_store_group",
  "_util.ensure_unicode_string_type",
  "_utils._cast_categorical_to_index_cat",
  "_utils._get_data",
  "_utils._identity",
  "_utils._maybe_get_categoricals_from_index",
  "_utils.map_delayed",
  "_wrapper",
  "all_predicates_accept",
  "attr.asdict",
  "attr.evolve",
  "attr.ib",
  "attr.s",
  "attr.validators.optional",
  "azure.common.AzureMissingResourceHttpError",
  "azure.core.exceptions.ResourceNotFoundError",
  "azure.storage.blob.BlockBlobService",
  "azure.storage.blob.ContainerClient",
  "c",
  "click.Choice",
  "click.STRING",
  "click.UsageError",
  "click.argument",
  "click.echo",
  "click.group",
  "click.option",
  "click.pass_context",
  "click.secho",
  "click.style",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "cond_type",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "cytoolz.map",
  "dask.array.Array",
  "dask.bag.Bag",
  "dask.bag.concat",
  "dask.bag.from_delayed",
  "dask.bag.from_sequence",
  "dask.config.set",
  "dask.dataframe.DataFrame",
  "dask.dataframe.Series",
  "dask.dataframe.from_delayed",
  "dask.dataframe.from_pandas",
  "dask.dataframe.utils.clear_known_categories",
  "dask.delayed",
  "dask.delayed.Delayed",
  "dask.diagnostics.ProgressBar",
  "dask.sizeof.sizeof",
  "dask.sizeof.sizeof.register",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "decorator.decorator",
  "delayed.read_table_as_delayed",
  "difflib.unified_diff",
  "distributed.protocol.deserialize_bytes",
  "distributed.protocol.serialize_bytes",
  "distutils.version.LooseVersion",
  "dtype",
  "dtype.type",
  "factory",
  "fnmatch.filter",
  "func",
  "function",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "gzip.GzipFile",
  "hypothesis.errors.NonInteractiveExampleWarning",
  "hypothesis.extra.numpy.arrays",
  "hypothesis.extra.numpy.byte_string_dtypes",
  "hypothesis.extra.numpy.datetime64_dtypes",
  "hypothesis.extra.numpy.floating_dtypes",
  "hypothesis.extra.numpy.integer_dtypes",
  "hypothesis.extra.numpy.unicode_string_dtypes",
  "hypothesis.extra.numpy.unsigned_integer_dtypes",
  "hypothesis.given",
  "hypothesis.settings",
  "hypothesis.strategies.dates",
  "hypothesis.strategies.integers",
  "hypothesis.strategies.lists",
  "hypothesis.strategies.one_of",
  "hypothesis.strategies.permutations",
  "hypothesis.strategies.sampled_from",
  "hypothesis.strategies.sets",
  "hypothesis.strategies.text",
  "hypothesis.strategies.tuples",
  "inspect.getfullargspec",
  "inspect.signature",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.StringIO",
  "iter.read_dataset_as_metapartitions__iterator",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.permutations",
  "json.dumps",
  "kartothek.api.consistency._check_datasets",
  "kartothek.api.consistency._check_dimension_columns",
  "kartothek.api.consistency._check_indices",
  "kartothek.api.consistency._check_overlap",
  "kartothek.api.consistency._check_partition_columns",
  "kartothek.api.consistency.check_datasets",
  "kartothek.api.consistency.get_cube_payload",
  "kartothek.api.consistency.get_payload_subset",
  "kartothek.api.discover._discover_dataset_meta_files",
  "kartothek.api.discover._logger",
  "kartothek.api.discover.check_datasets",
  "kartothek.api.discover.discover_cube",
  "kartothek.api.discover.discover_datasets",
  "kartothek.api.discover.discover_datasets_unchecked",
  "kartothek.cli._cleanup.cleanup",
  "kartothek.cli._copy.copy",
  "kartothek.cli._delete.delete",
  "kartothek.cli._index.index",
  "kartothek.cli._info._collist_string",
  "kartothek.cli._info._collist_string_index",
  "kartothek.cli._info._info_dataset",
  "kartothek.cli._info.info",
  "kartothek.cli._query.IPython",
  "kartothek.cli._query._ValidatorFromParse",
  "kartothek.cli._query._ask_conditions",
  "kartothek.cli._query._ask_payload",
  "kartothek.cli._query._get_ipython",
  "kartothek.cli._query._history_conditions",
  "kartothek.cli._query._history_payload",
  "kartothek.cli._query._shell",
  "kartothek.cli._query.query",
  "kartothek.cli._stats.stats",
  "kartothek.cli._utils._match_pattern",
  "kartothek.cli._utils.filter_items",
  "kartothek.cli._utils.get_cube",
  "kartothek.cli._utils.get_store",
  "kartothek.cli._utils.to_bold",
  "kartothek.cli._utils.to_header",
  "kartothek.cli.cli",
  "kartothek.core._compat.load_json",
  "kartothek.core._mixins.CopyMixin",
  "kartothek.core._zmsgpack.packb",
  "kartothek.core._zmsgpack.unpackb",
  "kartothek.core.common_metadata.SchemaWrapper",
  "kartothek.core.common_metadata._bytes2schema",
  "kartothek.core.common_metadata._determine_schemas_to_compare",
  "kartothek.core.common_metadata._dict_to_binary",
  "kartothek.core.common_metadata._diff_schemas",
  "kartothek.core.common_metadata._get_common_metadata_key",
  "kartothek.core.common_metadata._logger",
  "kartothek.core.common_metadata._pandas_in_schemas",
  "kartothek.core.common_metadata._remove_diff_header",
  "kartothek.core.common_metadata._schema2bytes",
  "kartothek.core.common_metadata._strip_columns_from_schema",
  "kartothek.core.common_metadata._swap_fields_by_name",
  "kartothek.core.common_metadata.empty_dataframe_from_schema",
  "kartothek.core.common_metadata.make_meta",
  "kartothek.core.common_metadata.normalize_column_order",
  "kartothek.core.common_metadata.normalize_type",
  "kartothek.core.common_metadata.read_schema_metadata",
  "kartothek.core.common_metadata.store_schema_metadata",
  "kartothek.core.common_metadata.validate_compatible",
  "kartothek.core.common_metadata.validate_shared_columns",
  "kartothek.core.cube.conditions.C",
  "kartothek.core.cube.conditions.Condition",
  "kartothek.core.cube.conditions.Conjunction",
  "kartothek.core.cube.conditions.Conjunction.from_string",
  "kartothek.core.cube.conditions.Conjunction.from_two",
  "kartothek.core.cube.conditions.EqualityCondition",
  "kartothek.core.cube.conditions.GreaterEqualCondition",
  "kartothek.core.cube.conditions.GreaterThanCondition",
  "kartothek.core.cube.conditions.InIntervalCondition",
  "kartothek.core.cube.conditions.InequalityCondition",
  "kartothek.core.cube.conditions.IsInCondition",
  "kartothek.core.cube.conditions.LessEqualCondition",
  "kartothek.core.cube.conditions.LessThanCondition",
  "kartothek.core.cube.conditions.SimpleCondition",
  "kartothek.core.cube.conditions.VirtualColumn",
  "kartothek.core.cube.conditions._converter_condlist",
  "kartothek.core.cube.conditions._validator_condlist",
  "kartothek.core.cube.conditions._validator_value",
  "kartothek.core.cube.conditions._validator_valuelist",
  "kartothek.core.cube.constants.KTK_CUBE_DF_SERIALIZER",
  "kartothek.core.cube.constants.KTK_CUBE_DF_SERIALIZER.restore_dataframe",
  "kartothek.core.cube.constants.KTK_CUBE_METADATA_DIMENSION_COLUMNS",
  "kartothek.core.cube.constants.KTK_CUBE_METADATA_KEY_IS_SEED",
  "kartothek.core.cube.constants.KTK_CUBE_METADATA_PARTITION_COLUMNS",
  "kartothek.core.cube.constants.KTK_CUBE_METADATA_STORAGE_FORMAT",
  "kartothek.core.cube.constants.KTK_CUBE_METADATA_VERSION",
  "kartothek.core.cube.constants.KTK_CUBE_UUID_SEPERATOR",
  "kartothek.core.cube.cube.Cube",
  "kartothek.core.cube.cube._validate_not_subset",
  "kartothek.core.cube.cube._validator_not_empty",
  "kartothek.core.cube.cube._validator_uuid",
  "kartothek.core.cube.cube._validator_uuid_freestanding",
  "kartothek.core.dataset.DatasetMetadata",
  "kartothek.core.dataset.DatasetMetadata.exists",
  "kartothek.core.dataset.DatasetMetadata.load_from_store",
  "kartothek.core.dataset.DatasetMetadataBase",
  "kartothek.core.dataset.DatasetMetadataBuilder",
  "kartothek.core.dataset.DatasetMetadataBuilder.from_dataset",
  "kartothek.core.dataset.T",
  "kartothek.core.dataset.TableMetaType",
  "kartothek.core.dataset._add_creation_time",
  "kartothek.core.dataset._check_index_depth",
  "kartothek.core.dataset._construct_dynamic_index_from_partitions",
  "kartothek.core.dataset._empty_partition_indices",
  "kartothek.core.dataset._get_partition_keys_from_partitions",
  "kartothek.core.dataset._get_partition_label",
  "kartothek.core.dataset._get_type_from_meta",
  "kartothek.core.dataset._load_partitions_from_filenames",
  "kartothek.core.dataset._validate_uuid",
  "kartothek.core.dataset.to_ordinary_dict",
  "kartothek.core.docs._PARAMETER_MAPPING",
  "kartothek.core.docs.default_docs",
  "kartothek.core.factory.DatasetFactory",
  "kartothek.core.factory.T",
  "kartothek.core.factory._ensure_factory",
  "kartothek.core.index.ExplicitSecondaryIndex",
  "kartothek.core.index.ExplicitSecondaryIndex.from_v2",
  "kartothek.core.index.IndexBase",
  "kartothek.core.index.IndexBase.normalize_value",
  "kartothek.core.index.IndexDictType",
  "kartothek.core.index.PartitionIndex",
  "kartothek.core.index.ValueType",
  "kartothek.core.index._MULTI_COLUMN_INDEX_DCT_TYPE",
  "kartothek.core.index._PARTITION_COLUMN_NAME",
  "kartothek.core.index._index_dct_to_table",
  "kartothek.core.index._logger",
  "kartothek.core.index._parquet_bytes_to_dict",
  "kartothek.core.index.filter_indices",
  "kartothek.core.index.merge_indices",
  "kartothek.core.naming.DEFAULT_METADATA_STORAGE_FORMAT",
  "kartothek.core.naming.DEFAULT_METADATA_VERSION",
  "kartothek.core.naming.EXTERNAL_INDEX_SUFFIX",
  "kartothek.core.naming.MAX_METADATA_VERSION",
  "kartothek.core.naming.METADATA_BASE_SUFFIX",
  "kartothek.core.naming.METADATA_FORMAT_JSON",
  "kartothek.core.naming.METADATA_FORMAT_MSGPACK",
  "kartothek.core.naming.METADATA_VERSION_KEY",
  "kartothek.core.naming.MIN_METADATA_VERSION",
  "kartothek.core.naming.PARQUET_FILE_SUFFIX",
  "kartothek.core.naming.TABLE_METADATA_FILE",
  "kartothek.core.naming.UUID_KEY",
  "kartothek.core.naming.get_partition_file_prefix",
  "kartothek.core.naming.metadata_key_from_uuid",
  "kartothek.core.partition.Partition",
  "kartothek.core.partition.Partition.from_dict",
  "kartothek.core.partition.PartitionDictType",
  "kartothek.core.testing.TIME_TO_FREEZE_ISO",
  "kartothek.core.testing.get_dataframe_not_nested",
  "kartothek.core.testing.get_scalar_dtype_strategy",
  "kartothek.core.typing.StoreFactory",
  "kartothek.core.typing.StoreInput",
  "kartothek.core.urlencode.decode_key",
  "kartothek.core.urlencode.quote",
  "kartothek.core.urlencode.quote_indices",
  "kartothek.core.urlencode.unquote_indices",
  "kartothek.core.utils._identity",
  "kartothek.core.utils._is_simplekv_key_value_store",
  "kartothek.core.utils._verify_metadata_version",
  "kartothek.core.utils.ensure_store",
  "kartothek.core.utils.ensure_string_type",
  "kartothek.core.utils.lazy_store",
  "kartothek.core.utils.verify_metadata_version",
  "kartothek.core.uuid._uuid_hook_object",
  "kartothek.core.uuid._uuid_hook_str",
  "kartothek.core.uuid.gen_uuid",
  "kartothek.core.uuid.gen_uuid_object",
  "kartothek.io.dask._shuffle._KTK_HASH_BUCKET",
  "kartothek.io.dask._shuffle._hash_bucket",
  "kartothek.io.dask._sizeof._dct_sizeof",
  "kartothek.io.dask._utils.CATEGORICAL_EFFICIENCY_WARN_LIMIT",
  "kartothek.io.dask._utils._cast_categorical_to_index_cat",
  "kartothek.io.dask._utils._construct_categorical",
  "kartothek.io.dask._utils._get_data",
  "kartothek.io.dask._utils._identity",
  "kartothek.io.dask._utils._maybe_get_categoricals_from_index",
  "kartothek.io.dask.bag._load_and_concat_metapartitions_inner",
  "kartothek.io.dask.bag._store_dataset_from_partitions_flat",
  "kartothek.io.dask.bag.build_dataset_indices__bag",
  "kartothek.io.dask.bag.read_dataset_as_metapartitions_bag",
  "kartothek.io.dask.bag_cube.build_cube_from_bag",
  "kartothek.io.dask.bag_cube.cleanup_cube_bag",
  "kartothek.io.dask.bag_cube.collect_stats_bag",
  "kartothek.io.dask.bag_cube.copy_cube_bag",
  "kartothek.io.dask.bag_cube.delete_cube_bag",
  "kartothek.io.dask.bag_cube.query_cube_bag",
  "kartothek.io.dask.common_cube._store_bag_as_dataset_parallel",
  "kartothek.io.dask.common_cube.append_to_cube_from_bag_internal",
  "kartothek.io.dask.common_cube.build_cube_from_bag_internal",
  "kartothek.io.dask.common_cube.extend_cube_from_bag_internal",
  "kartothek.io.dask.common_cube.query_cube_bag_internal",
  "kartothek.io.dask.compression._PAYLOAD_COL",
  "kartothek.io.dask.compression._logger",
  "kartothek.io.dask.compression.pack_payload",
  "kartothek.io.dask.compression.pack_payload_pandas",
  "kartothek.io.dask.compression.unpack_payload_pandas",
  "kartothek.io.dask.dataframe._get_dask_meta_for_dataset",
  "kartothek.io.dask.dataframe._hash_partition",
  "kartothek.io.dask.dataframe._shuffle_docs",
  "kartothek.io.dask.dataframe._unpack_hash",
  "kartothek.io.dask.dataframe._write_dataframe_partitions",
  "kartothek.io.dask.dataframe.read_dataset_as_ddf",
  "kartothek.io.dask.dataframe.store_dataset_from_ddf",
  "kartothek.io.dask.dataframe_cube._ddfs_to_bag",
  "kartothek.io.dask.delayed._delete_all_additional_metadata",
  "kartothek.io.dask.delayed._delete_tl_metadata",
  "kartothek.io.dask.delayed._load_and_concat_metapartitions",
  "kartothek.io.dask.delayed._load_and_concat_metapartitions_inner",
  "kartothek.io.dask.delayed._load_and_merge_mps",
  "kartothek.io.dask.delayed.garbage_collect_dataset__delayed",
  "kartothek.io.dask.delayed.read_dataset_as_delayed_metapartitions",
  "kartothek.io.eager._check_compatible_list",
  "kartothek.io.eager._maybe_infer_files_attribute",
  "kartothek.io.eager.build_dataset_indices",
  "kartothek.io.eager.garbage_collect_dataset",
  "kartothek.io.eager.read_dataset_as_dataframes",
  "kartothek.io.eager.read_dataset_as_metapartitions",
  "kartothek.io.eager.read_table",
  "kartothek.io.eager.store_dataframes_as_dataset",
  "kartothek.io.eager.update_dataset_from_dataframes",
  "kartothek.io.eager_cube._normalize_user_input",
  "kartothek.io.eager_cube._prepare_data_for_ktk_all",
  "kartothek.io.eager_cube.append_to_cube",
  "kartothek.io.eager_cube.build_cube",
  "kartothek.io.eager_cube.copy_cube",
  "kartothek.io.eager_cube.extend_cube",
  "kartothek.io.eager_cube.query_cube",
  "kartothek.io.eager_cube.remove_partitions",
  "kartothek.io.iter.read_dataset_as_dataframes__iterator",
  "kartothek.io.iter.read_dataset_as_metapartitions__iterator",
  "kartothek.io.iter.store_dataframes_as_dataset__iter",
  "kartothek.io.testing.append_cube.existing_cube",
  "kartothek.io.testing.copy_cube.assert_same_keys",
  "kartothek.io.testing.copy_cube.built_cube",
  "kartothek.io.testing.copy_cube.cube",
  "kartothek.io.testing.copy_cube.df_enrich",
  "kartothek.io.testing.copy_cube.df_seed",
  "kartothek.io.testing.copy_cube.simple_cube_1",
  "kartothek.io.testing.copy_cube.simple_cube_2",
  "kartothek.io.testing.extend_cube.existing_cube",
  "kartothek.io.testing.gc._test_gc",
  "kartothek.io.testing.index.assert_index_dct_equal",
  "kartothek.io.testing.merge.MERGE_EXP_CL1",
  "kartothek.io.testing.merge.MERGE_EXP_CL2",
  "kartothek.io.testing.merge.MERGE_TASKS",
  "kartothek.io.testing.query_cube._tuple_to_condition",
  "kartothek.io.testing.query_cube.apply_condition_unsafe",
  "kartothek.io.testing.query_cube.cond_types_all",
  "kartothek.io.testing.query_cube.cond_types_simple",
  "kartothek.io.testing.query_cube.data_no_part",
  "kartothek.io.testing.query_cube.fullrange_cube",
  "kartothek.io.testing.query_cube.fullrange_data",
  "kartothek.io.testing.query_cube.fullrange_df",
  "kartothek.io.testing.query_cube.massive_partitions_cube",
  "kartothek.io.testing.query_cube.massive_partitions_data",
  "kartothek.io.testing.query_cube.massive_partitions_df",
  "kartothek.io.testing.query_cube.multipartition_cube",
  "kartothek.io.testing.query_cube.multipartition_df",
  "kartothek.io.testing.query_cube.no_part_cube",
  "kartothek.io.testing.query_cube.no_part_df",
  "kartothek.io.testing.query_cube.other_part_cube",
  "kartothek.io.testing.query_cube.sparse_outer_cube",
  "kartothek.io.testing.query_cube.sparse_outer_data",
  "kartothek.io.testing.query_cube.sparse_outer_df",
  "kartothek.io.testing.query_cube.sparse_outer_opt_cube",
  "kartothek.io.testing.query_cube.sparse_outer_opt_df",
  "kartothek.io.testing.query_cube.st_columns",
  "kartothek.io.testing.query_cube.st_cond_types",
  "kartothek.io.testing.query_cube.st_conditions",
  "kartothek.io.testing.query_cube.st_values",
  "kartothek.io.testing.query_cube.test_cube",
  "kartothek.io.testing.query_cube.test_df",
  "kartothek.io.testing.query_cube.testset",
  "kartothek.io.testing.query_cube.updated_cube",
  "kartothek.io.testing.query_cube.updated_df",
  "kartothek.io.testing.read.NoPickle",
  "kartothek.io.testing.read._gen_partition",
  "kartothek.io.testing.read._perform_read_test",
  "kartothek.io.testing.read._strip_unused_categoricals",
  "kartothek.io.testing.read.custom_read_parameters",
  "kartothek.io.testing.read.dataset_dispatch_by_uuid",
  "kartothek.io.testing.read.dates_as_object",
  "kartothek.io.testing.read.label_filter",
  "kartothek.io.testing.read.mark_nopickle",
  "kartothek.io.testing.read.no_pickle_factory",
  "kartothek.io.testing.read.no_pickle_store",
  "kartothek.io.testing.read.store_input_types",
  "kartothek.io.testing.read.use_categoricals",
  "kartothek.io.testing.read.use_dataset_factory",
  "kartothek.io.testing.update_cube._extend_cube",
  "kartothek.io.testing.update_cube._write_cube",
  "kartothek.io.testing.write.NoPickle",
  "kartothek.io.testing.write._exception_str",
  "kartothek.io.testing.write.mark_nopickle",
  "kartothek.io.testing.write.no_pickle_factory",
  "kartothek.io.testing.write.no_pickle_store",
  "kartothek.io.testing.write.store_input_types",
  "kartothek.io_components.cube.append.check_existing_datasets",
  "kartothek.io_components.cube.cleanup.get_keys_to_clean",
  "kartothek.io_components.cube.common.assert_stores_different",
  "kartothek.io_components.cube.common.check_blocksize",
  "kartothek.io_components.cube.common.check_store_factory",
  "kartothek.io_components.cube.copy.get_copy_keys",
  "kartothek.io_components.cube.query._dermine_load_columns",
  "kartothek.io_components.cube.query._determine_restrictive_dataset_ids",
  "kartothek.io_components.cube.query._filter_relevant_datasets",
  "kartothek.io_components.cube.query._get_indexed_columns",
  "kartothek.io_components.cube.query._group.QueryGroup",
  "kartothek.io_components.cube.query._group._load_all_mps",
  "kartothek.io_components.cube.query._group._load_partition",
  "kartothek.io_components.cube.query._group._load_partition_dfs",
  "kartothek.io_components.cube.query._group.quick_concat",
  "kartothek.io_components.cube.query._intention.QueryIntention",
  "kartothek.io_components.cube.query._intention._process_conditions",
  "kartothek.io_components.cube.query._intention._process_dimension_columns",
  "kartothek.io_components.cube.query._intention._process_partition_by",
  "kartothek.io_components.cube.query._intention._process_payload",
  "kartothek.io_components.cube.query._intention._test_condition_types",
  "kartothek.io_components.cube.query._intention.determine_intention",
  "kartothek.io_components.cube.query._load_required_explicit_indices",
  "kartothek.io_components.cube.query._reduce_empty_dtype_sizes",
  "kartothek.io_components.cube.query._regroup._aligned_df_to_label2gp",
  "kartothek.io_components.cube.query._regroup._create_aligned_partition_df",
  "kartothek.io_components.cube.query._regroup._create_dataset_df",
  "kartothek.io_components.cube.query._regroup._labels_col",
  "kartothek.io_components.cube.query._regroup._map_ktk_mps_to_groups",
  "kartothek.io_components.cube.query._regroup._regroup",
  "kartothek.io_components.cube.query._regroup.regroup",
  "kartothek.io_components.cube.query.load_group",
  "kartothek.io_components.cube.query.plan_query",
  "kartothek.io_components.cube.query.quick_concat",
  "kartothek.io_components.cube.remove._prepare_mp_empty",
  "kartothek.io_components.cube.remove.prepare_metapartitions_for_removal_action",
  "kartothek.io_components.cube.stats._fold_stats",
  "kartothek.io_components.cube.stats.collect_stats_block",
  "kartothek.io_components.cube.stats.get_metapartitions_for_stats",
  "kartothek.io_components.cube.stats.reduce_stats",
  "kartothek.io_components.cube.write.MultiTableCommitAborted",
  "kartothek.io_components.cube.write._check_duplicates",
  "kartothek.io_components.cube.write._rollback_transaction",
  "kartothek.io_components.cube.write.apply_postwrite_checks",
  "kartothek.io_components.cube.write.assert_dimesion_index_cols_notnull",
  "kartothek.io_components.cube.write.check_datasets_prebuild",
  "kartothek.io_components.cube.write.check_datasets_preextend",
  "kartothek.io_components.cube.write.check_provided_metadata_dict",
  "kartothek.io_components.cube.write.check_user_df",
  "kartothek.io_components.cube.write.multiplex_user_input",
  "kartothek.io_components.cube.write.prepare_data_for_ktk",
  "kartothek.io_components.cube.write.prepare_ktk_metadata",
  "kartothek.io_components.cube.write.prepare_ktk_partition_on",
  "kartothek.io_components.delete.delete_common_metadata",
  "kartothek.io_components.delete.delete_indices",
  "kartothek.io_components.delete.delete_top_level_metadata",
  "kartothek.io_components.gc.delete_files",
  "kartothek.io_components.gc.dispatch_files_to_gc",
  "kartothek.io_components.index.update_indices_from_partitions",
  "kartothek.io_components.merge.LOGGER",
  "kartothek.io_components.merge.align_datasets",
  "kartothek.io_components.metapartition.LOGGER",
  "kartothek.io_components.metapartition.MetaPartition",
  "kartothek.io_components.metapartition.MetaPartition.apply",
  "kartothek.io_components.metapartition.MetaPartition.build_indices",
  "kartothek.io_components.metapartition.MetaPartition.concat_metapartitions",
  "kartothek.io_components.metapartition.MetaPartition.delete_from_store",
  "kartothek.io_components.metapartition.MetaPartition.from_partition",
  "kartothek.io_components.metapartition.MetaPartition.get_parquet_metadata",
  "kartothek.io_components.metapartition.MetaPartition.load_dataframes",
  "kartothek.io_components.metapartition.MetaPartition.merge_indices",
  "kartothek.io_components.metapartition.MetaPartition.merge_metapartitions",
  "kartothek.io_components.metapartition.MetaPartition.partition_on",
  "kartothek.io_components.metapartition.MetaPartition.remove_dataframes",
  "kartothek.io_components.metapartition.MetaPartition.store_dataframes",
  "kartothek.io_components.metapartition.MetaPartitionIterator",
  "kartothek.io_components.metapartition.SINGLE_TABLE",
  "kartothek.io_components.metapartition.SINGLE_TABLE.P.iloc",
  "kartothek.io_components.metapartition.SINGLE_TABLE.field",
  "kartothek.io_components.metapartition.SINGLE_TABLE.reset_index",
  "kartothek.io_components.metapartition._Literal",
  "kartothek.io_components.metapartition._METADATA_SCHEMA",
  "kartothek.io_components.metapartition._METADATA_SCHEMA.keys",
  "kartothek.io_components.metapartition._MULTI_TABLE_DICT_LIST",
  "kartothek.io_components.metapartition._SplitPredicate",
  "kartothek.io_components.metapartition._apply_to_list",
  "kartothek.io_components.metapartition._combine_predicates",
  "kartothek.io_components.metapartition._initialize_store_for_metapartition",
  "kartothek.io_components.metapartition._predicates_to_named",
  "kartothek.io_components.metapartition._unique_label",
  "kartothek.io_components.metapartition.parse_input_to_metapartition",
  "kartothek.io_components.metapartition.partition_labels_from_mps",
  "kartothek.io_components.read.dispatch_metapartitions_from_factory",
  "kartothek.io_components.update._get_partitions",
  "kartothek.io_components.update.update_dataset_from_partitions",
  "kartothek.io_components.utils.InvalidObject",
  "kartothek.io_components.utils.LOGGER",
  "kartothek.io_components.utils._NORMALIZE_ARGS",
  "kartothek.io_components.utils._NORMALIZE_ARGS_LIST",
  "kartothek.io_components.utils._combine_metadata",
  "kartothek.io_components.utils._ensure_compatible_indices",
  "kartothek.io_components.utils._ensure_valid_indices",
  "kartothek.io_components.utils._remove_invalids",
  "kartothek.io_components.utils.align_categories",
  "kartothek.io_components.utils.check_single_table_dataset",
  "kartothek.io_components.utils.combine_metadata",
  "kartothek.io_components.utils.extract_duplicates",
  "kartothek.io_components.utils.normalize_arg",
  "kartothek.io_components.utils.normalize_args",
  "kartothek.io_components.utils.raise_if_indices_overlap",
  "kartothek.io_components.utils.signature",
  "kartothek.io_components.utils.sort_values_categorical",
  "kartothek.io_components.utils.validate_partition_keys",
  "kartothek.io_components.write.persist_common_metadata",
  "kartothek.io_components.write.persist_indices",
  "kartothek.io_components.write.raise_if_dataset_exists",
  "kartothek.io_components.write.store_dataset_from_partitions",
  "kartothek.io_components.write.update_indices",
  "kartothek.io_components.write.update_metadata",
  "kartothek.io_components.write.update_partitions",
  "kartothek.io_components.write.write_partition",
  "kartothek.serialization.DataFrameSerializer",
  "kartothek.serialization.DataFrameSerializer.restore_dataframe",
  "kartothek.serialization.ParquetSerializer",
  "kartothek.serialization.PredicatesType",
  "kartothek.serialization._csv.CsvSerializer",
  "kartothek.serialization._generic.ConjunctionType",
  "kartothek.serialization._generic.LiteralType",
  "kartothek.serialization._generic.LiteralValue",
  "kartothek.serialization._generic.PredicatesType",
  "kartothek.serialization._generic._ensure_type_stability",
  "kartothek.serialization._generic._handle_categorical_data",
  "kartothek.serialization._generic._handle_null_arrays",
  "kartothek.serialization._generic._handle_timelike_values",
  "kartothek.serialization._generic.check_predicates",
  "kartothek.serialization._generic.filter_array_like",
  "kartothek.serialization._io_buffer.BlockBuffer",
  "kartothek.serialization._parquet.EPOCH_ORDINAL",
  "kartothek.serialization._parquet.HAVE_BOTO",
  "kartothek.serialization._parquet.ParquetSerializer",
  "kartothek.serialization._parquet._columns_for_pushdown",
  "kartothek.serialization._parquet._empty_table_from_schema",
  "kartothek.serialization._parquet._epsilon",
  "kartothek.serialization._parquet._highest_significant_position",
  "kartothek.serialization._parquet._normalize_predicates",
  "kartothek.serialization._parquet._normalize_value",
  "kartothek.serialization._parquet._predicate_accepts",
  "kartothek.serialization._parquet._read_row_groups_into_tables",
  "kartothek.serialization._parquet._reset_dictionary_columns",
  "kartothek.serialization._parquet._timelike_to_arrow_encoding",
  "kartothek.serialization._util._check_contains_null",
  "kartothek.serialization.check_predicates",
  "kartothek.serialization.columns_in_predicates",
  "kartothek.serialization.default_serializer",
  "kartothek.serialization.filter_array_like",
  "kartothek.serialization.filter_df_from_predicates",
  "kartothek.serialization.filter_predicates_by_column",
  "kartothek.serialization.testing.BINARY_COLUMNS",
  "kartothek.serialization.testing._to_binary",
  "kartothek.serialization.testing.get_dataframe_not_nested",
  "kartothek.utils.converters.converter_str",
  "kartothek.utils.converters.converter_str_set",
  "kartothek.utils.converters.converter_str_set_optional",
  "kartothek.utils.converters.converter_str_tupleset",
  "kartothek.utils.converters.converter_tuple",
  "kartothek.utils.converters.get_str_to_python_converter",
  "kartothek.utils.ktk_adapters._DummyStore",
  "kartothek.utils.ktk_adapters._dummy_store_factory",
  "kartothek.utils.ktk_adapters.get_dataset_columns",
  "kartothek.utils.ktk_adapters.get_dataset_keys",
  "kartothek.utils.ktk_adapters.get_dataset_schema",
  "kartothek.utils.ktk_adapters.get_partition_dataframe",
  "kartothek.utils.ktk_adapters.get_physical_partition_stats",
  "kartothek.utils.ktk_adapters.metadata_factory_from_dataset",
  "kartothek.utils.pandas.aggregate_to_lists",
  "kartothek.utils.pandas.concat_dataframes",
  "kartothek.utils.pandas.drop_sorted_duplicates_keep_last",
  "kartothek.utils.pandas.is_dataframe_sorted",
  "kartothek.utils.pandas.mask_sorted_duplicates_keep_last",
  "kartothek.utils.pandas.merge_dataframes_robust",
  "kartothek.utils.pandas.sort_dataframe",
  "kartothek.utils.store._azure_bbs_content_md5",
  "kartothek.utils.store._azure_cc_content_md5",
  "kartothek.utils.store._copy_azure_bbs",
  "kartothek.utils.store._copy_azure_cc",
  "kartothek.utils.store._copy_naive",
  "kartothek.utils.store._has_azure_bbs",
  "kartothek.utils.store._has_azure_cc",
  "kartothek.utils.store._logger",
  "kartothek.utils.store.copy_keys",
  "logging.FATAL",
  "logging.getLogger",
  "mapping",
  "method",
  "method.__name__",
  "msgpack.packb",
  "msgpack.unpackb",
  "multiprocessing.pool.ThreadPool",
  "numpy.absolute",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.errstate",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.fromiter",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.lexsort",
  "numpy.log10",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.nan",
  "numpy.object",
  "numpy.ones",
  "numpy.repeat",
  "numpy.signedinteger",
  "numpy.sort",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.unique",
  "numpy.unsignedinteger",
  "numpy.zeros",
  "object.__getattribute__",
  "os.path.commonprefix",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DatetimeIndex",
  "pandas.Float64Index",
  "pandas.Index",
  "pandas.Int64Index",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.Timestamp",
  "pandas.__version__",
  "pandas.api.types.CategoricalDtype",
  "pandas.api.types.is_bool",
  "pandas.api.types.is_categorical_dtype",
  "pandas.api.types.is_datetime64_dtype",
  "pandas.api.types.is_float",
  "pandas.api.types.is_integer",
  "pandas.api.types.is_list_like",
  "pandas.api.types.is_scalar",
  "pandas.api.types.is_signed_integer_dtype",
  "pandas.api.types.is_sparse",
  "pandas.api.types.is_unsigned_integer_dtype",
  "pandas.arrays.SparseArray",
  "pandas.concat",
  "pandas.errors.EmptyDataError",
  "pandas.isnull",
  "pandas.merge",
  "pandas.options.mode.chained_assignment",
  "pandas.read_csv",
  "pandas.set_option",
  "pandas.testing.assert_frame_equal",
  "pandas.to_datetime",
  "pandas.util.hash_pandas_object",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dumps",
  "pipe",
  "pkg_resources.get_distribution",
  "pprint.pformat",
  "prompt_toolkit.completion.WordCompleter",
  "prompt_toolkit.history.InMemoryHistory",
  "prompt_toolkit.prompt",
  "prompt_toolkit.validation.ValidationError",
  "prompt_toolkit.validation.Validator",
  "pyarrow.BufferOutputStream",
  "pyarrow.BufferReader",
  "pyarrow.DataType",
  "pyarrow.Schema",
  "pyarrow.Schema.equals.__doc__",
  "pyarrow.Schema.from_pandas",
  "pyarrow.Schema.remove_metadata.__doc__",
  "pyarrow.Schema.set.__doc__",
  "pyarrow.Table",
  "pyarrow.Table.from_arrays",
  "pyarrow.Table.from_pandas",
  "pyarrow.__version__",
  "pyarrow.array",
  "pyarrow.bool_",
  "pyarrow.concat_tables",
  "pyarrow.date32",
  "pyarrow.date64",
  "pyarrow.field",
  "pyarrow.float64",
  "pyarrow.int64",
  "pyarrow.list_",
  "pyarrow.null",
  "pyarrow.parquet.ParquetFile",
  "pyarrow.parquet.ParquetWriter",
  "pyarrow.parquet.read_pandas",
  "pyarrow.parquet.read_schema",
  "pyarrow.parquet.read_table",
  "pyarrow.parquet.write_metadata",
  "pyarrow.parquet.write_table",
  "pyarrow.schema",
  "pyarrow.string",
  "pyarrow.timestamp",
  "pyarrow.types.is_binary",
  "pyarrow.types.is_boolean",
  "pyarrow.types.is_date",
  "pyarrow.types.is_date32",
  "pyarrow.types.is_dictionary",
  "pyarrow.types.is_floating",
  "pyarrow.types.is_integer",
  "pyarrow.types.is_list",
  "pyarrow.types.is_nested",
  "pyarrow.types.is_null",
  "pyarrow.types.is_signed_integer",
  "pyarrow.types.is_string",
  "pyarrow.types.is_temporal",
  "pyarrow.types.is_timestamp",
  "pyarrow.types.is_unsigned_integer",
  "pyarrow.uint64",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "random.shuffle",
  "re.VERBOSE",
  "re.match",
  "set.__doc__",
  "set.union",
  "simplejson.dumps",
  "simplejson.loads",
  "simplekv.KeyValueStore",
  "simplekv.contrib.VALID_KEY_RE_EXTENDED.match",
  "simplekv.net.botostore.BotoStore",
  "store",
  "storefact.get_store",
  "storefact.get_store_from_url",
  "string.ascii_lowercase",
  "time.sleep",
  "time.time",
  "toolz.dicttoolz.valmap",
  "toolz.itertoolz.partition_all",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.FrozenSet",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.SupportsFloat",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "unittest.mock.patch",
  "urllib.parse.quote",
  "urlquote.quote",
  "urlquote.quoting.PYTHON_3_7_QUOTING",
  "urlquote.unquote",
  "utils.create_dataset",
  "uuid.uuid1",
  "uuid.uuid4",
  "var_f",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "yaml.YAMLError",
  "yaml.safe_load",
  "zstd.ZstdCompressor",
  "zstd.ZstdDecompressor"
 ],
 "deps": {
  "_csv": [],
  "_f": [],
  "_fmt": [],
  "_fmt_origin": [],
  "_generic": [],
  "_get_files": [],
  "_io_buffer": [],
  "_make_list": [],
  "_parquet": [],
  "_parse": [],
  "_reduce_dtype": [],
  "_renormalize_meta": [],
  "_shuffle": [],
  "_sizeof": [],
  "_store_group": [],
  "_util": [],
  "_utils": [],
  "_wrapper": [],
  "all_predicates_accept": [],
  "attr": [],
  "azure": [],
  "c": [],
  "click": [],
  "collections": [],
  "cond_type": [],
  "contextlib": [],
  "copy": [],
  "cytoolz": [],
  "dask": [],
  "datetime": [],
  "decorator": [],
  "delayed": [],
  "difflib": [],
  "distributed": [],
  "distutils": [],
  "dtype": [],
  "factory": [],
  "fnmatch": [],
  "func": [],
  "function": [],
  "functools": [],
  "gzip": [],
  "hypothesis": [],
  "inspect": [],
  "io": [],
  "iter": [],
  "itertools": [],
  "json": [],
  "kartothek": [],
  "logging": [],
  "mapping": [],
  "method": [],
  "msgpack": [],
  "multiprocessing": [],
  "numpy": [],
  "object": [],
  "os": [],
  "pandas": [],
  "pickle": [],
  "pipe": [],
  "pkg_resources": [],
  "pprint": [],
  "prompt_toolkit": [],
  "pyarrow": [],
  "pytest": [],
  "random": [],
  "re": [],
  "set": [],
  "simplejson": [],
  "simplekv": [],
  "store": [],
  "storefact": [],
  "string": [],
  "time": [],
  "toolz": [],
  "typing": [],
  "unittest": [],
  "urllib": [],
  "urlquote": [],
  "utils": [],
  "uuid": [],
  "var_f": [],
  "warnings": [],
  "yaml": [],
  "zstd": []
 }
}