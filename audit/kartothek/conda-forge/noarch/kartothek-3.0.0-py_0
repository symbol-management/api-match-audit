{
 "bad": [
  "Literal",
  "SplitPredicate",
  "_compat.ARROW_LARGER_EQ_0130",
  "_csv.CsvSerializer",
  "_f",
  "_generic.DataFrameSerializer",
  "_generic.DataFrameSerializer.register_serializer",
  "_generic.check_predicates",
  "_generic.filter_df",
  "_generic.filter_df_from_predicates",
  "_get_files",
  "_io_buffer.BlockBuffer",
  "_load_and_concat",
  "_parquet.ParquetSerializer",
  "_renormalize_meta",
  "_update._update_dask_partitions_one_to_one",
  "_update._update_dask_partitions_shuffle",
  "_util.ensure_unicode_string_type",
  "_utils._maybe_get_categoricals_from_index",
  "_utils.map_delayed",
  "_wrapper",
  "all_predicates_accept",
  "collections.Counter",
  "collections.Iterable",
  "collections.Iterator",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "dask.__version__",
  "dask.array.concatenate",
  "dask.bag.from_sequence",
  "dask.compute",
  "dask.dataframe.from_delayed",
  "dask.dataframe.from_pandas",
  "dask.dataframe.utils.clear_known_categories",
  "dask.delayed",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "decorator.decorator",
  "delayed.read_table_as_delayed",
  "difflib.unified_diff",
  "dill.dumps",
  "dill.loads",
  "distributed.Client",
  "distributed.utils_test.cluster",
  "distutils.version.LooseVersion",
  "dt_constructor",
  "dtype",
  "dtype.type",
  "extract_dataframe",
  "factory",
  "func",
  "funcsigs.signature",
  "function",
  "functools.partial",
  "functools.wraps",
  "gzip.GzipFile",
  "hypothesis.extra.numpy.arrays",
  "hypothesis.extra.numpy.byte_string_dtypes",
  "hypothesis.extra.numpy.datetime64_dtypes",
  "hypothesis.extra.numpy.floating_dtypes",
  "hypothesis.extra.numpy.integer_dtypes",
  "hypothesis.extra.numpy.unicode_string_dtypes",
  "hypothesis.extra.numpy.unsigned_integer_dtypes",
  "hypothesis.strategies.dates",
  "hypothesis.strategies.lists",
  "hypothesis.strategies.one_of",
  "hypothesis.strategies.text",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "inspect.signature",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.StringIO",
  "iter.read_dataset_as_metapartitions__iterator",
  "json.dumps",
  "json.loads",
  "kartothek.core._compat.ARROW_LARGER_EQ_0130",
  "kartothek.core._compat.load_json",
  "kartothek.core._mixins.CopyMixin",
  "kartothek.core._time._datetime_utcnow_orig",
  "kartothek.core._time._time_patcher",
  "kartothek.core._time._time_patcher.__exit__",
  "kartothek.core._time.datetime_now",
  "kartothek.core._time.datetime_utcnow",
  "kartothek.core._zmsgpack.packb",
  "kartothek.core._zmsgpack.unpackb",
  "kartothek.core.common_metadata.SchemaWrapper",
  "kartothek.core.common_metadata._bytes2schema",
  "kartothek.core.common_metadata._determine_schemas_to_compare",
  "kartothek.core.common_metadata._dict_to_binary",
  "kartothek.core.common_metadata._diff_schemas",
  "kartothek.core.common_metadata._get_common_metadata_key",
  "kartothek.core.common_metadata._logger",
  "kartothek.core.common_metadata._pandas_in_schemas",
  "kartothek.core.common_metadata._pandas_meta_from_schema",
  "kartothek.core.common_metadata._remove_diff_header",
  "kartothek.core.common_metadata._schema2bytes",
  "kartothek.core.common_metadata._strip_columns_from_schema",
  "kartothek.core.common_metadata._swap_fields_by_name",
  "kartothek.core.common_metadata.empty_dataframe_from_schema",
  "kartothek.core.common_metadata.make_meta",
  "kartothek.core.common_metadata.normalize_column_order",
  "kartothek.core.common_metadata.normalize_type",
  "kartothek.core.common_metadata.read_schema_metadata",
  "kartothek.core.common_metadata.store_schema_metadata",
  "kartothek.core.common_metadata.validate_compatible",
  "kartothek.core.common_metadata.validate_shared_columns",
  "kartothek.core.dataset.DatasetMetadata",
  "kartothek.core.dataset.DatasetMetadata.exists",
  "kartothek.core.dataset.DatasetMetadata.load_from_store",
  "kartothek.core.dataset.DatasetMetadataBase",
  "kartothek.core.dataset.DatasetMetadataBuilder",
  "kartothek.core.dataset.DatasetMetadataBuilder.from_dataset",
  "kartothek.core.dataset._add_creation_time",
  "kartothek.core.dataset._check_index_depth",
  "kartothek.core.dataset._construct_dynamic_index_from_partitions",
  "kartothek.core.dataset._get_partition_keys_from_partitions",
  "kartothek.core.dataset._get_partition_label",
  "kartothek.core.dataset._get_type_from_meta",
  "kartothek.core.dataset._load_partitions_from_filenames",
  "kartothek.core.dataset._validate_uuid",
  "kartothek.core.dataset.to_ordinary_dict",
  "kartothek.core.factory.DatasetFactory",
  "kartothek.core.factory._ensure_factory",
  "kartothek.core.index.ExplicitSecondaryIndex",
  "kartothek.core.index.ExplicitSecondaryIndex.from_v2",
  "kartothek.core.index.IndexBase",
  "kartothek.core.index.PartitionIndex",
  "kartothek.core.index._PARTITION_COLUMN_NAME",
  "kartothek.core.index._index_dct_to_table",
  "kartothek.core.index._logger",
  "kartothek.core.index.filter_indices",
  "kartothek.core.index.merge_indices",
  "kartothek.core.naming.DEFAULT_METADATA_STORAGE_FORMAT",
  "kartothek.core.naming.DEFAULT_METADATA_VERSION",
  "kartothek.core.naming.EXTERNAL_INDEX_SUFFIX",
  "kartothek.core.naming.MAX_METADATA_VERSION",
  "kartothek.core.naming.METADATA_BASE_SUFFIX",
  "kartothek.core.naming.METADATA_FORMAT_JSON",
  "kartothek.core.naming.METADATA_FORMAT_MSGPACK",
  "kartothek.core.naming.METADATA_VERSION_KEY",
  "kartothek.core.naming.MIN_METADATA_VERSION",
  "kartothek.core.naming.PARQUET_FILE_SUFFIX",
  "kartothek.core.naming.TABLE_METADATA_FILE",
  "kartothek.core.naming.UUID_KEY",
  "kartothek.core.naming.get_partition_file_prefix",
  "kartothek.core.naming.metadata_key_from_uuid",
  "kartothek.core.partition.Partition",
  "kartothek.core.partition.Partition.from_v2_dict",
  "kartothek.core.testing.TIME_TO_FREEZE_ISO",
  "kartothek.core.testing.cm_frozen_time",
  "kartothek.core.testing.get_dataframe_not_nested",
  "kartothek.core.testing.get_scalar_dtype_strategy",
  "kartothek.core.urlencode.decode_key",
  "kartothek.core.urlencode.quote",
  "kartothek.core.urlencode.quote_indices",
  "kartothek.core.urlencode.unquote_indices",
  "kartothek.core.utils._check_callable",
  "kartothek.core.utils.verify_metadata_version",
  "kartothek.core.uuid._uuid_hook_object",
  "kartothek.core.uuid._uuid_hook_str",
  "kartothek.core.uuid.gen_uuid",
  "kartothek.core.uuid.gen_uuid_object",
  "kartothek.io.dask._utils.CATEGORICAL_EFFICIENCY_WARN_LIMIT",
  "kartothek.io.dask._utils._construct_categorical",
  "kartothek.io.dask.bag._store_dataset_from_partitions_flat",
  "kartothek.io.dask.bag.store_bag_as_dataset",
  "kartothek.io.dask.dataframe._get_dask_meta_for_dataset",
  "kartothek.io.dask.dataframe.read_dataset_as_ddf",
  "kartothek.io.dask.dataframe.update_dataset_from_ddf",
  "kartothek.io.dask.delayed._delete_all_additional_metadata",
  "kartothek.io.dask.delayed._delete_tl_metadata",
  "kartothek.io.dask.delayed._get_data",
  "kartothek.io.dask.delayed._identity",
  "kartothek.io.dask.delayed._load_and_concat_metapartitions",
  "kartothek.io.dask.delayed._load_and_merge_mps",
  "kartothek.io.dask.delayed.delete_dataset__delayed",
  "kartothek.io.dask.delayed.garbage_collect_dataset__delayed",
  "kartothek.io.dask.delayed.merge_datasets_as_delayed",
  "kartothek.io.dask.delayed.read_dataset_as_delayed",
  "kartothek.io.dask.delayed.read_dataset_as_delayed_metapartitions",
  "kartothek.io.dask.delayed.read_table_as_delayed",
  "kartothek.io.dask.delayed.store_delayed_as_dataset",
  "kartothek.io.dask.delayed.update_dataset_from_delayed",
  "kartothek.io.eager._check_compatible_list",
  "kartothek.io.eager._maybe_infer_files_attribute",
  "kartothek.io.eager.commit_dataset",
  "kartothek.io.eager.create_empty_dataset_header",
  "kartothek.io.eager.delete_dataset",
  "kartothek.io.eager.read_dataset_as_dataframes",
  "kartothek.io.eager.read_dataset_as_metapartitions",
  "kartothek.io.eager.read_table",
  "kartothek.io.eager.store_dataframes_as_dataset",
  "kartothek.io.eager.write_single_partition",
  "kartothek.io.iter.read_dataset_as_dataframes__iterator",
  "kartothek.io.iter.read_dataset_as_metapartitions__iterator",
  "kartothek.io.iter.store_dataframes_as_dataset__iter",
  "kartothek.io.iter.update_dataset_from_dataframes__iter",
  "kartothek.io.testing.delete.bound_delete_dataset",
  "kartothek.io.testing.gc._test_gc",
  "kartothek.io.testing.merge.MERGE_EXP_CL1",
  "kartothek.io.testing.merge.MERGE_EXP_CL2",
  "kartothek.io.testing.merge.MERGE_TASKS",
  "kartothek.io.testing.read._gen_partition",
  "kartothek.io.testing.read._perform_read_test",
  "kartothek.io.testing.read._strip_unused_categoricals",
  "kartothek.io.testing.read.bound_load_dataframes",
  "kartothek.io.testing.read.bound_load_metapartitions",
  "kartothek.io.testing.read.custom_read_parameters",
  "kartothek.io.testing.read.dates_as_object",
  "kartothek.io.testing.read.label_filter",
  "kartothek.io.testing.read.output_type",
  "kartothek.io.testing.read.use_categoricals",
  "kartothek.io.testing.read.use_dataset_factory",
  "kartothek.io.testing.write._exception_str",
  "kartothek.io_components.delete.delete_common_metadata",
  "kartothek.io_components.delete.delete_indices",
  "kartothek.io_components.delete.delete_top_level_metadata",
  "kartothek.io_components.docs._PARAMETER_MAPPING",
  "kartothek.io_components.docs.default_docs",
  "kartothek.io_components.gc.delete_files",
  "kartothek.io_components.gc.dispatch_files_to_gc",
  "kartothek.io_components.merge.LOGGER",
  "kartothek.io_components.merge.align_datasets",
  "kartothek.io_components.metapartition.LOGGER",
  "kartothek.io_components.metapartition.MetaPartition",
  "kartothek.io_components.metapartition.MetaPartition.apply",
  "kartothek.io_components.metapartition.MetaPartition.build_indices",
  "kartothek.io_components.metapartition.MetaPartition.concat_metapartitions",
  "kartothek.io_components.metapartition.MetaPartition.delete_from_store",
  "kartothek.io_components.metapartition.MetaPartition.from_dict",
  "kartothek.io_components.metapartition.MetaPartition.from_partition",
  "kartothek.io_components.metapartition.MetaPartition.load_dataframes",
  "kartothek.io_components.metapartition.MetaPartition.merge_indices",
  "kartothek.io_components.metapartition.MetaPartition.merge_metapartitions",
  "kartothek.io_components.metapartition.MetaPartition.partition_on",
  "kartothek.io_components.metapartition.MetaPartition.store_dataframes",
  "kartothek.io_components.metapartition.MetaPartitionIterator",
  "kartothek.io_components.metapartition.SINGLE_TABLE",
  "kartothek.io_components.metapartition._apply_to_list",
  "kartothek.io_components.metapartition._initialize_store_for_metapartition",
  "kartothek.io_components.metapartition._predicates_to_named",
  "kartothek.io_components.metapartition._unique_label",
  "kartothek.io_components.metapartition.parse_input_to_metapartition",
  "kartothek.io_components.metapartition.partition_labels_from_mps",
  "kartothek.io_components.read._allowed_labels_by_conjunction",
  "kartothek.io_components.read._allowed_labels_by_predicates",
  "kartothek.io_components.read._index_to_dataframe",
  "kartothek.io_components.read.dispatch_metapartitions",
  "kartothek.io_components.read.dispatch_metapartitions_from_factory",
  "kartothek.io_components.update._get_partitions",
  "kartothek.io_components.update.update_dataset_from_partitions",
  "kartothek.io_components.utils.InvalidObject",
  "kartothek.io_components.utils.LOGGER",
  "kartothek.io_components.utils.NoDefault",
  "kartothek.io_components.utils.NoPickleFactory",
  "kartothek.io_components.utils._ARGS_TO_TYPE",
  "kartothek.io_components.utils._combine_metadata",
  "kartothek.io_components.utils._ensure_compatible_indices",
  "kartothek.io_components.utils._instantiate_store",
  "kartothek.io_components.utils._make_callable",
  "kartothek.io_components.utils._remove_invalids",
  "kartothek.io_components.utils.align_categories",
  "kartothek.io_components.utils.check_single_table_dataset",
  "kartothek.io_components.utils.combine_metadata",
  "kartothek.io_components.utils.extract_duplicates",
  "kartothek.io_components.utils.normalize_arg",
  "kartothek.io_components.utils.normalize_args",
  "kartothek.io_components.utils.signature",
  "kartothek.io_components.utils.sort_values_categorical",
  "kartothek.io_components.utils.validate_partition_keys",
  "kartothek.io_components.write.persist_common_metadata",
  "kartothek.io_components.write.persist_indices",
  "kartothek.io_components.write.raise_if_dataset_exists",
  "kartothek.io_components.write.store_dataset_from_partitions",
  "kartothek.io_components.write.update_indices",
  "kartothek.io_components.write.update_metadata",
  "kartothek.io_components.write.update_partitions",
  "kartothek.serialization.DataFrameSerializer.restore_dataframe",
  "kartothek.serialization.ParquetSerializer",
  "kartothek.serialization._arrow_compat._fix_pyarrow_0130_table",
  "kartothek.serialization._arrow_compat._fix_pyarrow_07992_table",
  "kartothek.serialization._csv.CsvSerializer",
  "kartothek.serialization._generic.filter_array_like",
  "kartothek.serialization._io_buffer.BlockBuffer",
  "kartothek.serialization._parquet.EPOCH_ORDINAL",
  "kartothek.serialization._parquet.HAVE_BOTO",
  "kartothek.serialization._parquet.ParquetSerializer",
  "kartothek.serialization._parquet._columns_for_pushdown",
  "kartothek.serialization._parquet._empty_table_from_schema",
  "kartothek.serialization._parquet._epsilon",
  "kartothek.serialization._parquet._fix_pyarrow_07992_table",
  "kartothek.serialization._parquet._highest_significant_position",
  "kartothek.serialization._parquet._normalize_predicates",
  "kartothek.serialization._parquet._normalize_value",
  "kartothek.serialization._parquet._predicate_accepts",
  "kartothek.serialization._parquet._read_row_groups_into_tables",
  "kartothek.serialization._parquet._reset_dictionary_columns",
  "kartothek.serialization._parquet._timelike_to_arrow_encoding",
  "kartothek.serialization._util._check_contains_null",
  "kartothek.serialization.default_serializer",
  "kartothek.serialization.filter_array_like",
  "kartothek.serialization.filter_df_from_predicates",
  "kartothek.serialization.testing.BINARY_COLUMNS",
  "kartothek.serialization.testing._to_binary",
  "logging.getLogger",
  "mapping",
  "method",
  "method.__name__",
  "msgpack.packb",
  "msgpack.unpackb",
  "numpy.NaN",
  "numpy.absolute",
  "numpy.arange",
  "numpy.array",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.broadcast_to",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.empty",
  "numpy.errstate",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.fromiter",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.log10",
  "numpy.logical_and",
  "numpy.object",
  "numpy.ones",
  "numpy.random.shuffle",
  "numpy.repeat",
  "numpy.sort",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.zeros",
  "object.__getattribute__",
  "os.path.commonprefix",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.DataFrame",
  "pandas.Index",
  "pandas.Int64Index",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.Timestamp",
  "pandas.__version__",
  "pandas.api.types.CategoricalDtype",
  "pandas.api.types.is_bool",
  "pandas.api.types.is_categorical",
  "pandas.api.types.is_datetime64_dtype",
  "pandas.api.types.is_float",
  "pandas.api.types.is_integer",
  "pandas.api.types.is_list_like",
  "pandas.api.types.is_scalar",
  "pandas.concat",
  "pandas.errors.EmptyDataError",
  "pandas.merge",
  "pandas.np.arange",
  "pandas.read_csv",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_datetime",
  "pandas.util.testing.assert_frame_equal",
  "pipe",
  "pkg_resources.get_distribution",
  "pprint.pformat",
  "pyarrow.BufferOutputStream",
  "pyarrow.BufferReader",
  "pyarrow.Schema",
  "pyarrow.Schema.equals.__doc__",
  "pyarrow.Schema.from_pandas",
  "pyarrow.Schema.remove_metadata.__doc__",
  "pyarrow.Schema.set.__doc__",
  "pyarrow.Table",
  "pyarrow.Table.from_arrays",
  "pyarrow.Table.from_pandas",
  "pyarrow.__version__",
  "pyarrow.array",
  "pyarrow.concat_tables",
  "pyarrow.date32",
  "pyarrow.date64",
  "pyarrow.field",
  "pyarrow.float64",
  "pyarrow.int64",
  "pyarrow.list_",
  "pyarrow.null",
  "pyarrow.parquet.ParquetFile",
  "pyarrow.parquet.read_pandas",
  "pyarrow.parquet.read_schema",
  "pyarrow.parquet.read_table",
  "pyarrow.parquet.write_metadata",
  "pyarrow.parquet.write_table",
  "pyarrow.schema",
  "pyarrow.string",
  "pyarrow.timestamp",
  "pyarrow.types.is_binary",
  "pyarrow.types.is_boolean",
  "pyarrow.types.is_date",
  "pyarrow.types.is_date32",
  "pyarrow.types.is_dictionary",
  "pyarrow.types.is_floating",
  "pyarrow.types.is_integer",
  "pyarrow.types.is_list",
  "pyarrow.types.is_nested",
  "pyarrow.types.is_null",
  "pyarrow.types.is_signed_integer",
  "pyarrow.types.is_string",
  "pyarrow.types.is_temporal",
  "pyarrow.types.is_timestamp",
  "pyarrow.types.is_unsigned_integer",
  "pyarrow.uint64",
  "pytest.fixture",
  "pytest.mark.min_metadata_version",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.raises",
  "pytest.skip",
  "pytest.xfail",
  "re.match",
  "set.__doc__",
  "simplejson.dumps",
  "simplejson.loads",
  "simplekv.net.botostore.BotoStore",
  "six.PY2",
  "six.binary_type",
  "six.iteritems",
  "six.iterkeys",
  "six.itervalues",
  "six.moves.cStringIO",
  "six.moves.urllib.parse.quote",
  "six.moves.urllib.parse.unquote",
  "six.reraise",
  "six.string_types",
  "six.text_type",
  "six.viewkeys",
  "six.viewvalues",
  "string.ascii_lowercase",
  "sys.exc_info",
  "test_read_dataset_as_dataframes",
  "tests.io.dask.bag.test_write._store_dataframes",
  "tests.io.dask.conftest._client",
  "tests.io.dask.conftest.cm_distributed_frozen_time",
  "tests.io.dask.dataframe.test_read._read_as_ddf",
  "tests.io.dask.dataframe.test_update._unwrap_partition",
  "tests.io.dask.delayed.test_delete._delete",
  "tests.io.dask.delayed.test_gc._run_garbage_collect",
  "tests.io.dask.delayed.test_merge._merge_datasets",
  "tests.io.dask.delayed.test_read._load_dataframes",
  "tests.io.dask.delayed.test_read.output_type",
  "tests.io.dask.delayed.test_write._store_dataframes",
  "tests.io.eager.test_delete._delete_store",
  "tests.io.eager.test_delete._delete_store_factory",
  "tests.io.eager.test_read._read_dataset",
  "tests.io.eager.test_read._read_table",
  "tests.io.iter.test_read._load_dataframes",
  "tests.io.iter.test_read._load_metapartitions",
  "tests.io.iter.test_read.output_type",
  "tests.io.iter.test_write._store_dataframes",
  "tests.io_components.test_dataset_metadata_factory.CountFactory",
  "tests.io_components.test_dataset_metadata_factory.CountStore",
  "tests.io_components.test_dataset_metadata_factory.count_store",
  "time.time",
  "types.GeneratorType",
  "unittest.mock.patch",
  "utils.create_dataset",
  "uuid.uuid4",
  "warnings.warn",
  "zstd.ZstdCompressor",
  "zstd.ZstdDecompressor"
 ],
 "deps": {
  "Literal": [],
  "SplitPredicate": [],
  "_compat": [],
  "_csv": [],
  "_f": [],
  "_generic": [],
  "_get_files": [],
  "_io_buffer": [],
  "_load_and_concat": [],
  "_parquet": [],
  "_renormalize_meta": [],
  "_update": [],
  "_util": [],
  "_utils": [],
  "_wrapper": [],
  "all_predicates_accept": [],
  "collections": [],
  "contextlib": [],
  "copy": [],
  "dask": [],
  "datetime": [],
  "decorator": [],
  "delayed": [],
  "difflib": [],
  "dill": [],
  "distributed": [],
  "distutils": [],
  "dt_constructor": [],
  "dtype": [],
  "extract_dataframe": [],
  "factory": [],
  "func": [],
  "funcsigs": [],
  "function": [],
  "functools": [],
  "gzip": [],
  "hypothesis": [],
  "inspect": [],
  "io": [],
  "iter": [],
  "json": [],
  "kartothek": [],
  "logging": [],
  "mapping": [],
  "method": [],
  "msgpack": [],
  "numpy": [],
  "object": [],
  "os": [],
  "pandas": [],
  "pipe": [],
  "pkg_resources": [],
  "pprint": [],
  "pyarrow": [],
  "pytest": [],
  "re": [],
  "set": [],
  "simplejson": [],
  "simplekv": [],
  "six": [],
  "string": [],
  "sys": [],
  "test_read_dataset_as_dataframes": [],
  "tests": [],
  "time": [],
  "types": [],
  "unittest": [],
  "utils": [],
  "uuid": [],
  "warnings": [],
  "zstd": []
 }
}