{
 "bad": [
  "IPython",
  "__future__.absolute_import",
  "_bytes2schema",
  "_collist_string",
  "_ddfs_to_bag",
  "_dict_to_binary",
  "_f",
  "_fmt",
  "_fmt_origin",
  "_generic.DataFrameSerializer.register_serializer",
  "_get_files",
  "_index_dct_to_table",
  "_make_list",
  "_normalize_user_input",
  "_parquet_bytes_to_dict",
  "_parse",
  "_prepare_data_for_ktk_all",
  "_reduce_dtype",
  "_renormalize_meta",
  "_schema2bytes",
  "_store_bag_as_dataset_parallel",
  "_store_group",
  "_wrapper",
  "all_predicates_accept",
  "attr.ib",
  "attr.s",
  "azure.common.AzureMissingResourceHttpError",
  "azure.core.exceptions.ResourceNotFoundError",
  "azure.storage.blob.BlockBlobService",
  "azure.storage.blob.ContainerClient",
  "c",
  "collections",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "cond_type",
  "contextlib",
  "contextlib.contextmanager",
  "converter_str",
  "converter_tuple",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "cytoolz.map",
  "dask",
  "dask.config.set",
  "dask.sizeof.sizeof.register",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "difflib",
  "difflib.unified_diff",
  "distutils.version.LooseVersion",
  "dtype",
  "dtype.type",
  "fnmatch",
  "fnmatch.filter",
  "func",
  "function",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "gzip",
  "gzip.GzipFile",
  "inspect",
  "inspect.getfullargspec",
  "inspect.signature",
  "io",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.StringIO",
  "iter.read_dataset_as_metapartitions__iterator",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.permutations",
  "json",
  "json.dumps",
  "kartothek.cli.__init__.cli",
  "kartothek.core.cube.constants.KTK_CUBE_DF_SERIALIZER.restore_dataframe",
  "kartothek.core.dataset.DatasetMetadata.exists",
  "kartothek.io.dask.__init__.register_sizeof_ktk_classes",
  "kartothek.io_components.cube.query.__init__._dermine_load_columns",
  "kartothek.io_components.cube.query.__init__._determine_restrictive_dataset_ids",
  "kartothek.io_components.cube.query.__init__._filter_relevant_datasets",
  "kartothek.io_components.cube.query.__init__._get_indexed_columns",
  "kartothek.io_components.cube.query.__init__._load_required_explicit_indices",
  "kartothek.io_components.cube.query.__init__._reduce_empty_dtype_sizes",
  "kartothek.io_components.metapartition.SINGLE_TABLE.P.iloc",
  "kartothek.io_components.metapartition.SINGLE_TABLE.field",
  "kartothek.io_components.metapartition.SINGLE_TABLE.reset_index",
  "kartothek.io_components.metapartition._METADATA_SCHEMA.keys",
  "kartothek.serialization.DataFrameSerializer.restore_dataframe",
  "kartothek.serialization.__init__.CsvSerializer",
  "kartothek.serialization.__init__.ParquetSerializer",
  "logging",
  "logging.FATAL",
  "logging.getLogger",
  "mapping",
  "method",
  "method.__name__",
  "msgpack",
  "msgpack.packb",
  "msgpack.unpackb",
  "multiprocessing.pool.ThreadPool",
  "numpy",
  "numpy.absolute",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.errstate",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.fromiter",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.lexsort",
  "numpy.log10",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.nan",
  "numpy.object",
  "numpy.ones",
  "numpy.repeat",
  "numpy.signedinteger",
  "numpy.sort",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.unique",
  "numpy.unsignedinteger",
  "numpy.zeros",
  "object.__getattribute__",
  "os",
  "os.path.commonprefix",
  "pandas",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DatetimeIndex",
  "pandas.Float64Index",
  "pandas.Index",
  "pandas.Int64Index",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.Timestamp",
  "pandas.__version__",
  "pandas.api.types.CategoricalDtype",
  "pandas.api.types.is_bool",
  "pandas.api.types.is_categorical_dtype",
  "pandas.api.types.is_datetime64_dtype",
  "pandas.api.types.is_float",
  "pandas.api.types.is_integer",
  "pandas.api.types.is_list_like",
  "pandas.api.types.is_scalar",
  "pandas.api.types.is_signed_integer_dtype",
  "pandas.api.types.is_sparse",
  "pandas.api.types.is_unsigned_integer_dtype",
  "pandas.arrays.SparseArray",
  "pandas.concat",
  "pandas.errors.EmptyDataError",
  "pandas.isnull",
  "pandas.merge",
  "pandas.options.mode.chained_assignment",
  "pandas.read_csv",
  "pandas.set_option",
  "pandas.testing",
  "pandas.testing.assert_frame_equal",
  "pandas.to_datetime",
  "pandas.util.hash_pandas_object",
  "pickle",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dumps",
  "pipe",
  "pkg_resources",
  "pkg_resources.get_distribution",
  "pprint",
  "pprint.pformat",
  "pyarrow",
  "pyarrow.BufferOutputStream",
  "pyarrow.BufferReader",
  "pyarrow.DataType",
  "pyarrow.Schema",
  "pyarrow.Schema.equals.__doc__",
  "pyarrow.Schema.from_pandas",
  "pyarrow.Schema.remove_metadata.__doc__",
  "pyarrow.Schema.set.__doc__",
  "pyarrow.Table",
  "pyarrow.Table.from_arrays",
  "pyarrow.Table.from_pandas",
  "pyarrow.__version__",
  "pyarrow.array",
  "pyarrow.bool_",
  "pyarrow.concat_tables",
  "pyarrow.date32",
  "pyarrow.date64",
  "pyarrow.field",
  "pyarrow.float64",
  "pyarrow.int64",
  "pyarrow.list_",
  "pyarrow.null",
  "pyarrow.parquet",
  "pyarrow.parquet.ParquetFile",
  "pyarrow.parquet.ParquetWriter",
  "pyarrow.parquet.read_pandas",
  "pyarrow.parquet.read_schema",
  "pyarrow.parquet.read_table",
  "pyarrow.parquet.write_metadata",
  "pyarrow.parquet.write_table",
  "pyarrow.schema",
  "pyarrow.string",
  "pyarrow.timestamp",
  "pyarrow.types.is_binary",
  "pyarrow.types.is_boolean",
  "pyarrow.types.is_date",
  "pyarrow.types.is_date32",
  "pyarrow.types.is_dictionary",
  "pyarrow.types.is_floating",
  "pyarrow.types.is_integer",
  "pyarrow.types.is_list",
  "pyarrow.types.is_null",
  "pyarrow.types.is_signed_integer",
  "pyarrow.types.is_string",
  "pyarrow.types.is_temporal",
  "pyarrow.types.is_timestamp",
  "pyarrow.types.is_unsigned_integer",
  "pyarrow.uint64",
  "pytest",
  "pytest.fixture",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "random",
  "random.shuffle",
  "re",
  "re.VERBOSE",
  "re.match",
  "set.__doc__",
  "set.union",
  "simplejson",
  "simplejson.dumps",
  "simplejson.loads",
  "simplekv.contrib.VALID_KEY_RE_EXTENDED.match",
  "store",
  "string",
  "string.ascii_lowercase",
  "time",
  "time.sleep",
  "time.time",
  "typing",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.FrozenSet",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Literal",
  "typing.Mapping",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.SupportsFloat",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "typing.overload",
  "unittest.mock",
  "unittest.mock.patch",
  "urllib.parse.quote",
  "urlquote.quote",
  "urlquote.quoting.PYTHON_3_7_QUOTING",
  "urlquote.unquote",
  "uuid",
  "uuid.uuid1",
  "uuid.uuid4",
  "var_f",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "zstd",
  "zstd.ZstdCompressor",
  "zstd.ZstdDecompressor"
 ],
 "deps": {
  "IPython": [],
  "__future__": [],
  "_bytes2schema": [],
  "_collist_string": [],
  "_ddfs_to_bag": [],
  "_dict_to_binary": [],
  "_f": [],
  "_fmt": [],
  "_fmt_origin": [],
  "_generic": [],
  "_get_files": [],
  "_index_dct_to_table": [],
  "_make_list": [],
  "_normalize_user_input": [],
  "_parquet_bytes_to_dict": [],
  "_parse": [],
  "_prepare_data_for_ktk_all": [],
  "_reduce_dtype": [],
  "_renormalize_meta": [],
  "_schema2bytes": [],
  "_store_bag_as_dataset_parallel": [],
  "_store_group": [],
  "_wrapper": [],
  "all_predicates_accept": [],
  "attr": [
   "attrs/conda-forge/noarch/attrs-18.2.0-py_0"
  ],
  "azure": [],
  "c": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "collections": [],
  "cond_type": [],
  "contextlib": [],
  "converter_str": [],
  "converter_tuple": [],
  "copy": [],
  "cytoolz": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "datetime": [],
  "decorator": [
   "decorator/conda-forge/noarch/decorator-4.3.0-py_0"
  ],
  "difflib": [],
  "distributed": [
   "distributed/conda-forge/noarch/distributed-2.1.0-py_0"
  ],
  "distutils": [],
  "dtype": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.11.1-pyh9f0ad1d_1"
  ],
  "fnmatch": [],
  "func": [],
  "function": [],
  "functools": [],
  "gzip": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.23.12-py_0"
  ],
  "inspect": [],
  "io": [],
  "iter": [],
  "itertools": [],
  "json": [],
  "kartothek": [],
  "logging": [],
  "mapping": [],
  "method": [],
  "msgpack": [],
  "multiprocessing": [],
  "numpy": [],
  "object": [],
  "os": [],
  "pandas": [],
  "pickle": [],
  "pipe": [],
  "pkg_resources": [],
  "pprint": [],
  "prompt_toolkit": [
   "prompt-toolkit/conda-forge/noarch/prompt-toolkit-3.0.8-py_0",
   "prompt_toolkit/conda-forge/noarch/prompt_toolkit-2.0.10-py_0"
  ],
  "pyarrow": [],
  "pytest": [],
  "random": [],
  "re": [],
  "set": [],
  "simplejson": [],
  "simplekv": [
   "simplekv/conda-forge/noarch/simplekv-0.11.11-py_0"
  ],
  "store": [],
  "storefact": [
   "storefact/conda-forge/noarch/storefact-0.10.0-py_0"
  ],
  "string": [],
  "time": [],
  "toolz": [
   "toolz/conda-forge/noarch/toolz-0.8.2-py_3"
  ],
  "typing": [],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "unittest": [],
  "urllib": [],
  "urlquote": [],
  "uuid": [],
  "var_f": [],
  "warnings": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "zstd": []
 }
}