{
 "bad": [
  "A",
  "A.SetA",
  "A.foo",
  "Alpha",
  "AssertIsSame",
  "Aux",
  "B",
  "B.Method.__doc__",
  "Bar",
  "C",
  "C.f",
  "C1",
  "Check",
  "Create",
  "CustomAssertEqual",
  "D",
  "ExtendedNull",
  "FlawedZoo",
  "Foo",
  "FrozenMethod",
  "GetImplementedInterfaces",
  "GetSignature",
  "GetWeakRef",
  "I",
  "IBar",
  "IFoo",
  "Impl",
  "InterfSetItem",
  "M1",
  "M3",
  "Method",
  "Method1",
  "Method2",
  "MockClass",
  "My",
  "My2",
  "My3",
  "My4",
  "MyClass",
  "MyList",
  "MyMethod",
  "MyMethod.enabled",
  "MyObject",
  "MyRightMethod",
  "MySet",
  "MySingleton",
  "MySingleton.ClearSingleton",
  "MySingleton.GetSingleton",
  "MySingleton.GetStackCount",
  "MySingleton.HasSingleton",
  "MySingleton.PopSingleton",
  "MySingleton.PushSingleton",
  "MySingleton.SetSingleton",
  "MySingleton.SlowConstructor",
  "MySingleton._ObtainStack",
  "MyStr",
  "MyWrongMethod",
  "NoCheck",
  "Obj",
  "Receiver",
  "Sender",
  "Stub",
  "TestERROR",
  "TestMissingSignature",
  "TestMissingSignatureOptional",
  "TestNoMatch",
  "TestOK",
  "TestObject",
  "TestWrongParameterName",
  "Zoo",
  "_AssertImplementsFullChecking",
  "_CalculateMro",
  "_CheckIfClassImplements",
  "_IsMethod",
  "_MyNullSubClass",
  "_adaptable_interface.IAdaptable",
  "_callback.Callback.Register",
  "_callback.Callback._EXTRA_ARGS_CONSTANT",
  "_callback.Callback._GetInfo",
  "a",
  "a.SetA",
  "a.event",
  "alpha",
  "alpha.Register",
  "attr.s",
  "b",
  "b.Method",
  "c",
  "c.Contains",
  "c.Method",
  "c.Register",
  "c.Unregister",
  "c.UnregisterAll",
  "c1",
  "c1.Register",
  "c2",
  "c2.Register",
  "c_ref",
  "cache",
  "callback",
  "callback.AllowCallingAgain",
  "callback.Register",
  "callback.Unregister",
  "copy._copy_dispatch",
  "dict.__setitem__",
  "f",
  "foo",
  "foo.Register",
  "foo.SetFilename",
  "foo.after",
  "foo.before",
  "func",
  "func.__class__",
  "func.__doc__",
  "func.__name__",
  "func_obj",
  "gen_signature_and_args",
  "itertools.chain",
  "list.append",
  "list.extend",
  "m",
  "m_ref",
  "meth",
  "n",
  "n.attr1",
  "n.attr1.attr2",
  "n.attr1.attr2.attr3",
  "n.attr1.method1",
  "n.foo",
  "n.method",
  "n.method1",
  "obj_ref",
  "os.chdir",
  "os.getcwd",
  "pf",
  "pf.is_dead",
  "priority_callback",
  "pytest.FixtureRequest",
  "pytest.mark.parametrize",
  "r",
  "ref",
  "ref_s",
  "rf",
  "rf.is_dead",
  "stub",
  "stub2",
  "sys",
  "sys._getframe",
  "sys.getrefcount",
  "type.__new__",
  "w",
  "weak_a",
  "wrapper"
 ],
 "deps": {
  "A": [],
  "Alpha": [],
  "AssertIsSame": [],
  "Aux": [],
  "B": [],
  "Bar": [],
  "C": [],
  "C1": [],
  "Check": [],
  "Create": [],
  "CustomAssertEqual": [],
  "D": [],
  "ExtendedNull": [],
  "FlawedZoo": [],
  "Foo": [],
  "FrozenMethod": [],
  "GetImplementedInterfaces": [],
  "GetSignature": [],
  "GetWeakRef": [],
  "I": [],
  "IBar": [],
  "IFoo": [],
  "Impl": [],
  "InterfSetItem": [],
  "M1": [],
  "M3": [],
  "Method": [],
  "Method1": [],
  "Method2": [],
  "MockClass": [],
  "My": [],
  "My2": [],
  "My3": [],
  "My4": [],
  "MyClass": [],
  "MyList": [],
  "MyMethod": [],
  "MyObject": [],
  "MyRightMethod": [],
  "MySet": [],
  "MySingleton": [],
  "MyStr": [],
  "MyWrongMethod": [],
  "NoCheck": [],
  "Obj": [],
  "Receiver": [],
  "Sender": [],
  "Stub": [],
  "TestERROR": [],
  "TestMissingSignature": [],
  "TestMissingSignatureOptional": [],
  "TestNoMatch": [],
  "TestOK": [],
  "TestObject": [],
  "TestWrongParameterName": [],
  "Zoo": [],
  "_AssertImplementsFullChecking": [],
  "_CalculateMro": [],
  "_CheckIfClassImplements": [],
  "_IsMethod": [],
  "_MyNullSubClass": [],
  "_adaptable_interface": [],
  "_callback": [],
  "a": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "alpha": [],
  "attr": [
   "attrs/conda-forge/noarch/attrs-18.2.0-py_0"
  ],
  "b": [],
  "c": [],
  "c1": [],
  "c2": [],
  "c_ref": [],
  "cache": [],
  "callback": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dict": [],
  "f": [],
  "foo": [],
  "func": [],
  "func_obj": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gen_signature_and_args": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "list": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "m": [],
  "m_ref": [],
  "meth": [],
  "mypy": [
   "mypy/conda-forge/noarch/mypy-0.670-py_0",
   "mypy/conda-forge/noarch/mypy-0.701-py_0"
  ],
  "n": [],
  "obj_ref": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pf": [],
  "priority_callback": [],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "r": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ref": [],
  "ref_s": [],
  "rf": [],
  "stub": [],
  "stub2": [],
  "sys": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "w": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weak_a": [],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wrapper": []
 }
}