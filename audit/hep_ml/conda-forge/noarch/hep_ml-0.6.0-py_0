{
 "bad": [
  "IPython.parallel.Client",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "act",
  "activation_raw",
  "check_sample_weight",
  "collections.OrderedDict",
  "commonutils.check_sample_weight",
  "commonutils.check_xyw",
  "commonutils.compute_cut_for_efficiency",
  "commonutils.compute_knn_indices_of_same_class",
  "commonutils.compute_knn_indices_of_signal",
  "commonutils.map_on_cluster",
  "commonutils.score_to_proba",
  "commonutils.sigmoid_function",
  "commonutils.take_features",
  "commonutils.take_last",
  "commonutils.to_pandas_dataframe",
  "commonutils.weighted_quantile",
  "copy",
  "copy.deepcopy",
  "func",
  "gradientboosting.UGradientBoostingClassifier",
  "input.reshape",
  "input.shape",
  "itertools",
  "itertools.cycle",
  "loss_",
  "loss_function",
  "losses.AbstractLossFunction",
  "losses.ReweightLossFunction",
  "make_one_step",
  "metrics_utils._cvm_2samp_fast",
  "metrics_utils.bin_to_group_indices",
  "metrics_utils.compute_bin_efficiencies",
  "metrics_utils.compute_bin_indices",
  "metrics_utils.compute_bin_weights",
  "metrics_utils.compute_divided_weight",
  "metrics_utils.compute_group_efficiencies",
  "metrics_utils.compute_group_efficiencies_by_indices",
  "metrics_utils.compute_group_weights",
  "metrics_utils.group_indices_to_groups_matrix",
  "metrics_utils.prepare_distribution",
  "metrics_utils.theil",
  "metrics_utils.weighted_deviation",
  "multiprocessing.pool.ThreadPool",
  "numbers",
  "numbers.Number",
  "numpy",
  "numpy.abs",
  "numpy.add.at",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.average",
  "numpy.bincount",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.ediff1d",
  "numpy.exp",
  "numpy.float",
  "numpy.hstack",
  "numpy.in1d",
  "numpy.int",
  "numpy.interp",
  "numpy.linalg.inv",
  "numpy.linspace",
  "numpy.log",
  "numpy.logaddexp",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.newaxis.sum",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.percentile",
  "numpy.prod",
  "numpy.random.RandomState",
  "numpy.ravel",
  "numpy.searchsorted",
  "numpy.shape",
  "numpy.sign",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.take",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "pandas",
  "pandas.DataFrame",
  "preprocessing.IronTransformer",
  "scipy.ndimage.gaussian_filter",
  "scipy.sparse",
  "scipy.sparse.block_diag",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.lil_matrix",
  "scipy.sparse.vstack",
  "scipy.special.expit",
  "six.moves.zip",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.clone",
  "sklearn.cross_validation",
  "sklearn.cross_validation.train_test_split",
  "sklearn.datasets.make_blobs",
  "sklearn.model_selection",
  "sklearn.neighbors.unsupervised.NearestNeighbors",
  "sklearn.preprocessing",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.tree.tree.DTYPE",
  "sklearn.utils.check_random_state",
  "sklearn.utils.random.check_random_state",
  "sklearn.utils.validation.check_random_state",
  "sklearn.utils.validation.column_or_1d",
  "str.startswith",
  "theano",
  "theano.config.floatX",
  "theano.function",
  "theano.ifelse.ifelse",
  "theano.shared",
  "theano.tensor",
  "theano.tensor.arange",
  "theano.tensor.batched_dot",
  "theano.tensor.clip",
  "theano.tensor.dot",
  "theano.tensor.exp",
  "theano.tensor.grad",
  "theano.tensor.log",
  "theano.tensor.matrix",
  "theano.tensor.mean",
  "theano.tensor.nnet.sigmoid",
  "theano.tensor.nnet.softmax",
  "theano.tensor.nnet.softplus",
  "theano.tensor.sgn",
  "theano.tensor.shape",
  "theano.tensor.shared_randomstreams.RandomStreams",
  "theano.tensor.sqrt",
  "theano.tensor.tanh",
  "theano.tensor.vector",
  "theano.tensor.where",
  "trainer_function",
  "tree.SklearnClusteringTree",
  "tree.SklearnClusteringTree.prepare_data",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "IPython": [],
  "__future__": [],
  "act": [],
  "activation_raw": [],
  "check_sample_weight": [],
  "collections": [],
  "commonutils": [],
  "copy": [],
  "func": [],
  "gradientboosting": [],
  "input": [],
  "itertools": [],
  "loss_": [],
  "loss_function": [],
  "losses": [],
  "make_one_step": [],
  "metrics_utils": [],
  "multiprocessing": [],
  "numbers": [],
  "numpy": [],
  "pandas": [],
  "preprocessing": [],
  "scipy": [],
  "six": [],
  "sklearn": [],
  "str": [],
  "theano": [],
  "trainer_function": [],
  "tree": [],
  "warnings": []
 }
}