{
 "bad": [
  "A",
  "AttributeError",
  "COO",
  "COO.from_iter",
  "COO.from_scipy_sparse",
  "Ellipsis",
  "GCXS",
  "IndexError",
  "KeyError",
  "NotImplemented",
  "NotImplementedError",
  "RuntimeError",
  "RuntimeWarning",
  "TypeError",
  "ValueError",
  "_1d_reshape",
  "_resize",
  "_transpose",
  "_zero_of_dtype",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "all",
  "any",
  "bool",
  "broadcast_to",
  "check_compressed_axes",
  "check_consistent_fill_value",
  "check_zero_fill_value",
  "classmethod",
  "cls",
  "cls.from_coo",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.abc.Sized",
  "collections.defaultdict",
  "collections.deque",
  "convert_to_flat",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "dict",
  "dot",
  "elemwise",
  "enumerate",
  "equivalent",
  "format",
  "functools.reduce",
  "get_versions",
  "getattr",
  "hasattr",
  "html_table",
  "id",
  "int",
  "is_sorted",
  "isinstance",
  "isscalar",
  "issubclass",
  "itertools.zip_longest",
  "len",
  "linear_loc",
  "list",
  "map",
  "matmul",
  "max",
  "method",
  "method.reduceat",
  "min",
  "normalize_axis",
  "normalize_index",
  "numba.core.cgutils.alloca_once",
  "numba.core.cgutils.alloca_once_value",
  "numba.core.cgutils.create_struct_proxy",
  "numba.core.cgutils.false_bit",
  "numba.core.cgutils.if_unlikely",
  "numba.core.cgutils.is_null",
  "numba.core.cgutils.pack_struct",
  "numba.core.cgutils.true_bit",
  "numba.core.imputils.impl_ret_borrowed",
  "numba.core.imputils.lower_builtin",
  "numba.core.imputils.lower_constant",
  "numba.core.types.Type",
  "numba.core.types.UniTuple",
  "numba.core.typing.typeof.typeof_impl.register",
  "numba.extending.NativeValue",
  "numba.extending.box",
  "numba.extending.models.StructModel",
  "numba.extending.models.StructModel.__init__",
  "numba.extending.unbox",
  "numbers.Integral",
  "numbers.Number",
  "numpy.add",
  "numpy.add.reduce",
  "numpy.add.reduceat",
  "numpy.all",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.bincount",
  "numpy.bool_",
  "numpy.broadcast_arrays",
  "numpy.broadcast_to",
  "numpy.clip",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.cumsum",
  "numpy.diff",
  "numpy.divide",
  "numpy.dtype",
  "numpy.empty",
  "numpy.float16",
  "numpy.full",
  "numpy.imag",
  "numpy.int64",
  "numpy.integer",
  "numpy.intp",
  "numpy.issubdtype",
  "numpy.ix_",
  "numpy.load",
  "numpy.logical_and.reduce",
  "numpy.logical_or.reduce",
  "numpy.maximum.reduce",
  "numpy.minimum.reduce",
  "numpy.multiply",
  "numpy.multiply.reduce",
  "numpy.ndarray",
  "numpy.ndarray.astype",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.power",
  "numpy.prod",
  "numpy.ravel_multi_index",
  "numpy.real",
  "numpy.repeat",
  "numpy.result_type",
  "numpy.round",
  "numpy.savez",
  "numpy.savez_compressed",
  "numpy.searchsorted",
  "numpy.setdiff1d",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.true_divide",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.uintp",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator.mul",
  "property",
  "range",
  "reduce_super_ufunc",
  "ret",
  "reversed",
  "round",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "set",
  "slice",
  "sorted",
  "sparse._utils._zero_of_dtype",
  "sparse_func",
  "staticmethod",
  "str",
  "sum",
  "super",
  "tuple",
  "type",
  "uncompress_dimension",
  "zip"
 ],
 "deps": [
  [
   "dask-0.10.1-py34_1",
   "dask-0.12.0-py34_0",
   "dask-0.12.0-py35_0",
   "dask-0.13.0-py36_0",
   "dask-0.14.0-py36_0",
   "dask-core-0.16.0-py_0",
   "dask-core-0.16.1-py_0",
   "dask-core-0.17.0-py_0",
   "dask-core-0.17.1-py_0",
   "dask-core-0.17.2-py_0",
   "dask-core-0.17.3-py_0",
   "dask-core-0.17.4-py_0",
   "dask-core-0.17.5-py_0"
  ],
  [],
  [
   "numpy-1.13.0-py34_blas_openblas_200",
   "numpy-1.13.2-py36_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblash1522bff_1201",
   "numpy-1.13.3-py35_blas_openblas_200",
   "numpy-1.13.3-py35_blas_openblas_201",
   "numpy-1.13.3-py36_blas_openblash1522bff_1201",
   "numpy-1.13.3-py36_blas_openblashb06ca3d_201",
   "numpy-1.14.2-py27_blas_openblas_200",
   "numpy-1.14.5-py27_blas_openblashd3ea46f_200",
   "numpy-1.14.5-py35_blas_openblashd3ea46f_202",
   "numpy-1.14.5-py36_blas_openblashd3ea46f_202",
   "numpy-1.14.6-py27_blas_openblashb06ca3d_200",
   "numpy-1.14.6-py27he5ce36f_1201",
   "numpy-1.14.6-py37h95a1406_1201",
   "numpy-1.15.2-py27_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py27_blas_openblashd3ea46f_1",
   "numpy-1.15.2-py35_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_1",
   "numpy-1.15.4-py27_blas_openblash1522bff_1000",
   "numpy-1.15.4-py27_blas_openblashb06ca3d_0",
   "numpy-1.15.4-py27h8b7e671_1001",
   "numpy-1.15.4-py27h8b7e671_1002",
   "numpy-1.15.4-py37_blas_openblashb06ca3d_0",
   "numpy-1.16.1-py37_blas_openblash1522bff_0",
   "numpy-1.16.2-py36h8b7e671_1",
   "numpy-1.16.4-py27h95a1406_0",
   "numpy-1.16.5-py27h95a1406_0",
   "numpy-1.16.6-py38h18fd61f_0",
   "numpy-1.17.1-py36h95a1406_0",
   "numpy-1.17.3-py37h95a1406_0",
   "numpy-1.17.5-py37h95a1406_0",
   "numpy-1.17.5-py38h18fd61f_1",
   "numpy-1.18.1-py37h8960a57_1",
   "numpy-1.18.4-py36h7314795_0",
   "numpy-1.18.4-py36he0f5f23_0",
   "numpy-1.19.0-py36he0f5f23_0",
   "numpy-1.19.1-py36h3849536_2",
   "numpy-1.19.1-py37h7ea13bd_2",
   "numpy-1.19.1-py37h8960a57_0",
   "numpy-1.19.2-py36h68c22af_1",
   "numpy-1.19.2-py37h7008fea_1",
   "numpy-1.19.2-py38hf89b668_1",
   "numpy-1.19.4-py37haa41c4c_2",
   "numpy-1.19.4-py38h18fd61f_2",
   "numpy-1.19.5-py36h2aa4a07_1",
   "numpy-1.19.5-py39hdbf815f_1"
  ],
  [
   "sparse-0.11.0-py_0",
   "sparse-0.11.1-py_0"
  ],
  [
   "typing-3.5.0.1-py34_0",
   "typing-3.6.1-py35_0",
   "typing-3.6.2-py36_0",
   "typing-3.6.4-py27_0",
   "typing-3.6.6-py27_0",
   "typing-3.6.6-py35_0"
  ]
 ]
}