{
 "bad": [
  "A",
  "_compressed.GCXS",
  "_compressed.GCXS.from_coo",
  "_compressed.concatenate",
  "_compressed.stack",
  "_compute_mask",
  "_coo.COO",
  "_coo.COO.from_iter",
  "_coo.common.concatenate",
  "_coo.common.stack",
  "_coo.concatenate",
  "_coo.core.COO.from_iter",
  "_coo.stack",
  "_dok.DOK",
  "_dok.DOK.from_coo",
  "_matmul_recurser",
  "_settings.AUTO_DENSIFY",
  "_sparse_array.SparseArray",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "array_from_list_intp",
  "check_equal",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.abc.Sized",
  "collections.defaultdict",
  "collections.deque",
  "common.linear_loc",
  "compressed.GCXS",
  "compressed.GCXS.from_coo",
  "contextlib.ExitStack",
  "contextlib.contextmanager",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "core.COO",
  "core.as_coo",
  "core.elemwise",
  "dok.DOK.from_coo",
  "dot",
  "equivalent",
  "f",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "itertools",
  "itertools.chain",
  "itertools.product",
  "itertools.zip_longest",
  "json",
  "json.loads",
  "math",
  "math.isnan",
  "nanreduce",
  "numba",
  "numba.cgutils",
  "numba.cgutils.alloca_once",
  "numba.cgutils.alloca_once_value",
  "numba.cgutils.create_struct_proxy",
  "numba.cgutils.false_bit",
  "numba.cgutils.is_null",
  "numba.cgutils.pack_struct",
  "numba.cgutils.true_bit",
  "numba.extending.NativeValue",
  "numba.extending.box",
  "numba.extending.lower_builtin",
  "numba.extending.make_attribute_wrapper",
  "numba.extending.models",
  "numba.extending.models.StructModel",
  "numba.extending.register_model",
  "numba.extending.type_callable",
  "numba.extending.unbox",
  "numba.from_dtype",
  "numba.jit",
  "numba.numpy_support.as_dtype",
  "numba.numpy_support.from_dtype",
  "numba.targets.imputils.impl_ret_borrowed",
  "numba.targets.imputils.lower_constant",
  "numba.typed.List",
  "numba.typed.List.empty_list",
  "numba.types",
  "numba.types.Any",
  "numba.types.Type",
  "numba.types.UniTuple",
  "numba.types.int64",
  "numba.types.intp",
  "numba.typing.typeof.typeof_impl",
  "numba.typing.typeof.typeof_impl.register",
  "numbers.Integral",
  "numbers.Number",
  "numpy",
  "numpy.add",
  "numpy.add.reduce",
  "numpy.add.reduceat",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.bincount",
  "numpy.bool",
  "numpy.bool_",
  "numpy.broadcast_arrays",
  "numpy.broadcast_to",
  "numpy.character",
  "numpy.clip",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.copy",
  "numpy.cumsum",
  "numpy.diff",
  "numpy.divide",
  "numpy.dtype",
  "numpy.empty",
  "numpy.errstate",
  "numpy.float16",
  "numpy.float_",
  "numpy.floating",
  "numpy.fmax",
  "numpy.fmin",
  "numpy.full",
  "numpy.imag",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.intp",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.isposinf",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.ix_",
  "numpy.lib.mixins.NDArrayOperatorsMixin",
  "numpy.load",
  "numpy.log",
  "numpy.logical_and.reduce",
  "numpy.logical_or.reduce",
  "numpy.maximum.reduce",
  "numpy.min_scalar_type",
  "numpy.minimum.reduce",
  "numpy.multiply",
  "numpy.multiply.reduce",
  "numpy.ndarray",
  "numpy.ndarray.astype",
  "numpy.ndim",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.power",
  "numpy.prod",
  "numpy.random",
  "numpy.random.RandomState",
  "numpy.random.rand",
  "numpy.ravel_multi_index",
  "numpy.real",
  "numpy.repeat",
  "numpy.result_type",
  "numpy.round",
  "numpy.savez",
  "numpy.savez_compressed",
  "numpy.searchsorted",
  "numpy.setdiff1d",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.transpose",
  "numpy.true_divide",
  "numpy.uint8",
  "numpy.uintp",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "operator",
  "operator.mul",
  "os",
  "os.environ.get",
  "reduce_super_ufunc",
  "scipy.sparse",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "sparse.__init__.get_versions",
  "sparse_func",
  "typing.Callable",
  "umath._cartesian_product",
  "umath.elemwise",
  "warnings",
  "warnings.warn"
 ],
 "deps": {
  "A": [],
  "_compressed": [],
  "_compute_mask": [],
  "_coo": [],
  "_dok": [],
  "_matmul_recurser": [],
  "_settings": [],
  "_sparse_array": [],
  "abc": [],
  "array_from_list_intp": [],
  "check_equal": [],
  "collections": [],
  "common": [],
  "compressed": [],
  "contextlib": [],
  "copy": [],
  "core": [],
  "dok": [],
  "dot": [],
  "equivalent": [],
  "f": [],
  "functools": [],
  "itertools": [],
  "json": [],
  "math": [],
  "nanreduce": [],
  "numba": [],
  "numbers": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "reduce_super_ufunc": [],
  "scipy": [],
  "sparse": [],
  "sparse_func": [],
  "typing": [],
  "umath": [],
  "warnings": []
 }
}