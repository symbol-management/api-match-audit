{
 "bad": [
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "bottle.response.headers",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.namedtuple",
  "comp",
  "contextlib.contextmanager",
  "cudamat.cudamat.CUDAMatrix",
  "cudamat.cudamat.cuda_set_device",
  "cudamat.cudamat.dot",
  "cudamat.cudamat.empty",
  "cudamat.cudamat.exp",
  "cudamat.cudamat.init",
  "cudamat.cudamat.log",
  "exceptions.ModelEvaluationError",
  "has_constant",
  "io.StringIO",
  "itertools.izip",
  "loader",
  "loader.construct_pairs",
  "loader.flatten_mapping",
  "logging.DEBUG",
  "logging.FileHandler",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.debug",
  "logging.getLogger",
  "math.ceil",
  "math.fabs",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.ylabel",
  "matplotlib.use",
  "misc.config",
  "models.util.apply_filter_query",
  "models.util.columns_in_filters",
  "normalize",
  "numbers.Number",
  "numpy.append",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.count_nonzero",
  "numpy.cumsum",
  "numpy.diagonal",
  "numpy.dot",
  "numpy.exp",
  "numpy.expm1",
  "numpy.float64",
  "numpy.floor",
  "numpy.inf",
  "numpy.inf.copy",
  "numpy.int",
  "numpy.int64",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.linalg.inv",
  "numpy.log",
  "numpy.log1p",
  "numpy.matrix",
  "numpy.max",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.power",
  "numpy.random.choice",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.random",
  "numpy.random.uniform",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.searchsorted",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.transpose",
  "numpy.zeros",
  "object_pairs_hook",
  "orca.get_table",
  "os.getenv",
  "os.makedirs",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "pandas.DataFrame",
  "pandas.Index",
  "pandas.MultiIndex.from_arrays",
  "pandas.Series",
  "pandas.Series.add",
  "pandas.concat",
  "pandas.merge",
  "patsy.dmatrix",
  "pmat.PMAT",
  "pmat.initialize_gpu",
  "pmat.random",
  "simplejson.dumps",
  "statsmodels.formula.api.ols",
  "sys.version_info",
  "tokenize.NAME",
  "tokenize.generate_tokens",
  "toolz.concat",
  "toolz.concatv",
  "toolz.curry",
  "toolz.reduce",
  "toolz.remove",
  "toolz.unique",
  "trow",
  "twod_get",
  "urbanchoice.interaction.mnl_interaction_dataset",
  "urbanchoice.mnl.mnl_estimate",
  "urbanchoice.mnl.mnl_simulate",
  "urbansim.accounts.COLS",
  "urbansim.accounts.Transaction",
  "urbansim.accounts._column_names_from_metadata",
  "urbansim.developer.sqftproforma.SqFtProFormaConfig",
  "urbansim.developer.sqftproforma.logger",
  "urbansim.maps.dframe_explorer.CONFIG",
  "urbansim.maps.dframe_explorer.DFRAMES",
  "urbansim.maps.dframe_explorer.get_schema",
  "urbansim.models.dcm.DiscreteChoiceModel",
  "urbansim.models.dcm.MNLDiscreteChoiceModel",
  "urbansim.models.dcm.MNLDiscreteChoiceModelGroup",
  "urbansim.models.dcm.SegmentedMNLDiscreteChoiceModel",
  "urbansim.models.dcm.logger",
  "urbansim.models.dcm.unit_choice",
  "urbansim.models.regression.RegressionModel",
  "urbansim.models.regression.RegressionModelGroup",
  "urbansim.models.regression.YTRANSFORM_MAPPING",
  "urbansim.models.regression._FakeRegressionResults",
  "urbansim.models.regression._model_fit_to_table",
  "urbansim.models.regression._rhs",
  "urbansim.models.regression.fit_model",
  "urbansim.models.regression.logger",
  "urbansim.models.regression.predict",
  "urbansim.models.relocation.find_movers",
  "urbansim.models.relocation.logger",
  "urbansim.models.supplydemand._calculate_adjustment",
  "urbansim.models.supplydemand.logger",
  "urbansim.models.transition.TabularGrowthRateTransition",
  "urbansim.models.transition.TabularTotalsTransition",
  "urbansim.models.transition._empty_index",
  "urbansim.models.transition._update_linked_table",
  "urbansim.models.transition.add_or_remove_rows",
  "urbansim.models.transition.add_rows",
  "urbansim.models.transition.logger",
  "urbansim.models.transition.remove_rows",
  "urbansim.models.util._filterize",
  "urbansim.models.util._tokens_from_patsy",
  "urbansim.models.util.apply_filter_query",
  "urbansim.models.util.has_constant_expr",
  "urbansim.models.util.logger",
  "urbansim.models.util.str_model_expression",
  "urbansim.urbanchoice.interaction.GPU",
  "urbansim.urbanchoice.interaction.logger",
  "urbansim.urbanchoice.mnl.get_hessian",
  "urbansim.urbanchoice.mnl.get_standard_error",
  "urbansim.urbanchoice.mnl.logger",
  "urbansim.urbanchoice.mnl.mnl_loglik",
  "urbansim.urbanchoice.mnl.mnl_probs",
  "urbansim.urbanchoice.pmat.PMAT",
  "urbansim.utils.logutil.US_LOG_DATE_FMT",
  "urbansim.utils.logutil.US_LOG_FMT",
  "urbansim.utils.logutil._add_urbansim_handler",
  "urbansim.utils.misc._mkifnotexists",
  "urbansim.utils.misc._pandassummarytojson",
  "urbansim.utils.misc.configs_dir",
  "urbansim.utils.misc.naics_d",
  "urbansim.utils.misc.series64bitto32bit",
  "urbansim.utils.networks.logger",
  "urbansim.utils.sampling.accounting_sample_no_replace",
  "urbansim.utils.sampling.accounting_sample_replace",
  "urbansim.utils.sampling.get_probs",
  "urbansim.utils.yamlio.__represent_long",
  "urbansim.utils.yamlio.__represent_ordereddict",
  "urbansim.utils.yamlio.ordered_yaml",
  "urbansim.utils.yamlio.series_to_yaml_safe",
  "util.apply_filter_query",
  "util.columns_in_filters",
  "util.columns_in_formula",
  "util.concat_indexes",
  "util.filter_table",
  "util.str_model_expression",
  "utils.logutil.log_start_finish",
  "utils.sampling.sample_rows",
  "utils.yamlio.convert_to_yaml",
  "utils.yamlio.frame_to_yaml_safe",
  "utils.yamlio.to_scalar_safe",
  "utils.yamlio.yaml_to_dict",
  "yaml.Loader",
  "yaml.add_representer",
  "yaml.dump",
  "yaml.load",
  "yaml.nodes.MappingNode",
  "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
  "yaml.safe_load"
 ],
 "deps": {
  "abc": [],
  "bottle": [
   "bottle/conda-forge/noarch/bottle-0.12.18-py_0"
  ],
  "collections": [],
  "comp": [],
  "contextlib": [],
  "cudamat": [],
  "exceptions": [],
  "has_constant": [],
  "io": [],
  "itertools": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.11.3-pyh44b312d_0"
  ],
  "loader": [],
  "logging": [],
  "math": [],
  "matplotlib": [],
  "misc": [],
  "models": [],
  "normalize": [],
  "numbers": [],
  "numpy": [],
  "object_pairs_hook": [],
  "orca": [],
  "os": [],
  "pandas": [],
  "patsy": [
   "patsy/conda-forge/noarch/patsy-0.5.1-py_0"
  ],
  "pmat": [],
  "prettytable": [
   "prettytable/conda-forge/noarch/prettytable-0.7.2-py_2",
   "prettytable/conda-forge/noarch/prettytable-2.0.0-pyhd8ed1ab_0"
  ],
  "simplejson": [],
  "statsmodels": [],
  "sys": [],
  "tokenize": [],
  "toolz": [],
  "trow": [],
  "twod_get": [],
  "urbanchoice": [],
  "urbansim": [],
  "util": [],
  "utils": [],
  "yaml": []
 }
}