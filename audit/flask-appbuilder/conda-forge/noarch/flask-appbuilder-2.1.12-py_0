{
 "bad": [
  "Model.metadata",
  "PIL.Image",
  "PIL.Image.ANTIALIAS",
  "PIL.Image.open",
  "PIL.ImageOps",
  "PIL.ImageOps.fit",
  "__future__.unicode_literals",
  "addon_class",
  "addon_class.post_process",
  "addon_class.pre_process",
  "addon_class.register_views",
  "base64",
  "base64.urlsafe_b64decode",
  "calendar",
  "calendar.month_name",
  "click",
  "click.Choice",
  "click.echo",
  "click.group",
  "click.option",
  "click.password_option",
  "click.style",
  "click.testing.CliRunner",
  "const.AUTH_DB",
  "const.AUTH_LDAP",
  "const.AUTH_OAUTH",
  "const.AUTH_OID",
  "const.AUTH_REMOTE_USER",
  "const.LOGMSG_ERR_DBI_ADD_GENERIC.format",
  "const.LOGMSG_ERR_DBI_DEL_GENERIC.format",
  "const.LOGMSG_ERR_DBI_EDIT_GENERIC.format",
  "const.LOGMSG_ERR_FAB_ADDON_IMPORT.format",
  "const.LOGMSG_ERR_FAB_ADDON_PROCESS.format",
  "const.LOGMSG_ERR_FAB_ADD_PERMISSION_MENU.format",
  "const.LOGMSG_ERR_FAB_ADD_PERMISSION_VIEW.format",
  "const.LOGMSG_ERR_SEC_ACCESS_DENIED.format",
  "const.LOGMSG_ERR_SEC_ADD_PERMISSION.format",
  "const.LOGMSG_ERR_SEC_ADD_PERMROLE.format",
  "const.LOGMSG_ERR_SEC_ADD_PERMVIEW.format",
  "const.LOGMSG_ERR_SEC_ADD_REGISTER_USER.format",
  "const.LOGMSG_ERR_SEC_ADD_ROLE.format",
  "const.LOGMSG_ERR_SEC_ADD_USER.format",
  "const.LOGMSG_ERR_SEC_ADD_VIEWMENU.format",
  "const.LOGMSG_ERR_SEC_AUTH_LDAP.format",
  "const.LOGMSG_ERR_SEC_AUTH_LDAP_TLS.format",
  "const.LOGMSG_ERR_SEC_CREATE_DB.format",
  "const.LOGMSG_ERR_SEC_DEL_PERMISSION.format",
  "const.LOGMSG_ERR_SEC_DEL_PERMROLE.format",
  "const.LOGMSG_ERR_SEC_DEL_PERMVIEW.format",
  "const.LOGMSG_ERR_SEC_DEL_REGISTER_USER.format",
  "const.LOGMSG_ERR_SEC_NO_REGISTER_HASH.format",
  "const.LOGMSG_ERR_SEC_UPD_ROLE.format",
  "const.LOGMSG_ERR_SEC_UPD_USER.format",
  "const.LOGMSG_INF_FAB_ADDON_ADDED.format",
  "const.LOGMSG_INF_FAB_ADD_VIEW.format",
  "const.LOGMSG_INF_SEC_ADD_DB",
  "const.LOGMSG_INF_SEC_ADD_PERMROLE.format",
  "const.LOGMSG_INF_SEC_ADD_PERMVIEW.format",
  "const.LOGMSG_INF_SEC_ADD_ROLE.format",
  "const.LOGMSG_INF_SEC_ADD_USER.format",
  "const.LOGMSG_INF_SEC_DEL_PERMROLE.format",
  "const.LOGMSG_INF_SEC_DEL_PERMVIEW.format",
  "const.LOGMSG_INF_SEC_NO_DB",
  "const.LOGMSG_INF_SEC_UPD_ROLE.format",
  "const.LOGMSG_INF_SEC_UPD_USER.format",
  "const.LOGMSG_WAR_DBI_ADD_INTEGRITY.format",
  "const.LOGMSG_WAR_DBI_AVG_ZERODIV",
  "const.LOGMSG_WAR_DBI_DEL_INTEGRITY.format",
  "const.LOGMSG_WAR_DBI_EDIT_INTEGRITY.format",
  "const.LOGMSG_WAR_FAB_VIEW_EXISTS.format",
  "const.LOGMSG_WAR_SEC_DEL_PERMISSION.format",
  "const.LOGMSG_WAR_SEC_DEL_PERMVIEW.format",
  "const.LOGMSG_WAR_SEC_DEL_PERM_PVM.format",
  "const.LOGMSG_WAR_SEC_DEL_VIEWMENU.format",
  "const.LOGMSG_WAR_SEC_DEL_VIEWMENU_PVM.format",
  "const.LOGMSG_WAR_SEC_LOGIN_FAILED.format",
  "const.LOGMSG_WAR_SEC_NOLDAP_OBJ.format",
  "const.PERMISSION_PREFIX.add",
  "copy",
  "copy.copy",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.strptime",
  "dateutil.parser",
  "dateutil.parser.parse",
  "enum",
  "enum.Enum",
  "f",
  "f.__name__",
  "f._permission_name",
  "f._response_key_func_mappings",
  "f._urls",
  "f._urls.append",
  "field",
  "filter_class",
  "filters.GenericFilterConverter",
  "filters.MongoEngineFilterConverter",
  "filters.SQLAFilterConverter",
  "filters.__all__",
  "filters.apply_all",
  "filters.copy",
  "flask.current_app.appbuilder.add_permissions",
  "flask.current_app.appbuilder.app_name",
  "flask.current_app.appbuilder.baseviews",
  "flask.current_app.appbuilder.get_session.get_bind",
  "flask.current_app.appbuilder.security_cleanup",
  "flask.current_app.appbuilder.security_converge",
  "flask.current_app.appbuilder.sm.add_user",
  "flask.current_app.appbuilder.sm.auth_role_admin",
  "flask.current_app.appbuilder.sm.auth_type",
  "flask.current_app.appbuilder.sm.find_role",
  "flask.current_app.appbuilder.sm.get_all_users",
  "flask.current_app.appbuilder.sm.has_access",
  "flask.current_app.appbuilder.sm.is_item_public",
  "flask.current_app.appbuilder.version",
  "flask.current_app.config.get",
  "flask.g.user",
  "flask.g.user.id",
  "flask.g.user.is_authenticated",
  "flask.globals._request_ctx_stack.top",
  "flask.request.args",
  "flask.request.args.copy",
  "flask.request.args.get",
  "flask.request.args.items",
  "flask.request.args.to_dict",
  "flask.request.endpoint",
  "flask.request.environ.get",
  "flask.request.form",
  "flask.request.form.getlist",
  "flask.request.form.keys",
  "flask.request.full_path",
  "flask.request.is_json",
  "flask.request.json",
  "flask.request.json.get",
  "flask.request.method",
  "flask.request.path",
  "flask.request.referrer",
  "flask.request.script_root",
  "flask.request.url",
  "flask.request.view_args.copy",
  "flask.session.get",
  "flask.session.pop",
  "flask_appbuilder.Model.metadata",
  "flask_appbuilder.api.__init__.API_ADD_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_ADD_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_ADD_TITLE_RES_KEY",
  "flask_appbuilder.api.__init__.API_ADD_TITLE_RIS_KEY",
  "flask_appbuilder.api.__init__.API_DESCRIPTION_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_DESCRIPTION_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_EDIT_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_EDIT_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_EDIT_TITLE_RES_KEY",
  "flask_appbuilder.api.__init__.API_EDIT_TITLE_RIS_KEY",
  "flask_appbuilder.api.__init__.API_FILTERS_RES_KEY",
  "flask_appbuilder.api.__init__.API_FILTERS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_LABEL_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_LABEL_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_LIST_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_LIST_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_LIST_TITLE_RES_KEY",
  "flask_appbuilder.api.__init__.API_LIST_TITLE_RIS_KEY",
  "flask_appbuilder.api.__init__.API_ORDER_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_ORDER_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_ORDER_COLUMN_RIS_KEY",
  "flask_appbuilder.api.__init__.API_ORDER_DIRECTION_RIS_KEY",
  "flask_appbuilder.api.__init__.API_PAGE_INDEX_RIS_KEY",
  "flask_appbuilder.api.__init__.API_PAGE_SIZE_RIS_KEY",
  "flask_appbuilder.api.__init__.API_PERMISSIONS_RES_KEY",
  "flask_appbuilder.api.__init__.API_PERMISSIONS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_RESULT_RES_KEY",
  "flask_appbuilder.api.__init__.API_SELECT_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_SHOW_COLUMNS_RES_KEY",
  "flask_appbuilder.api.__init__.API_SHOW_COLUMNS_RIS_KEY",
  "flask_appbuilder.api.__init__.API_SHOW_TITLE_RES_KEY",
  "flask_appbuilder.api.__init__.API_SHOW_TITLE_RIS_KEY",
  "flask_appbuilder.api.__init__.API_URI_RIS_KEY",
  "flask_appbuilder.api.__init__.BaseApi",
  "flask_appbuilder.api.__init__.BaseModelApi",
  "flask_appbuilder.api.__init__.Model2SchemaConverter",
  "flask_appbuilder.api.__init__.ModelRestApi",
  "flask_appbuilder.api.__init__.as_unicode",
  "flask_appbuilder.api.__init__.expose",
  "flask_appbuilder.api.__init__.get_error_msg",
  "flask_appbuilder.api.__init__.get_info_schema",
  "flask_appbuilder.api.__init__.get_item_schema",
  "flask_appbuilder.api.__init__.get_list_schema",
  "flask_appbuilder.api.__init__.log",
  "flask_appbuilder.api.__init__.merge_response_func",
  "flask_appbuilder.api.__init__.permission_name",
  "flask_appbuilder.api.__init__.protect",
  "flask_appbuilder.api.__init__.rison",
  "flask_appbuilder.api.__init__.safe",
  "flask_appbuilder.models.generic.__init__.GenericColumn",
  "flask_appbuilder.models.generic.__init__.GenericModel",
  "flask_appbuilder.models.generic.__init__.GenericSession",
  "flask_appbuilder.models.generic.__init__.MetaGenericModel",
  "flask_appbuilder.models.generic.__init__.PSModel",
  "flask_appbuilder.models.generic.__init__.PSSession",
  "flask_appbuilder.models.generic.__init__.with_metaclass",
  "flask_appbuilder.models.sqla.Base.metadata.create_all",
  "flask_appbuilder.models.sqla.Model.metadata.create_all",
  "flask_appbuilder.models.sqla.__init__.Model",
  "flask_appbuilder.models.sqla.__init__.ModelDeclarativeMeta",
  "flask_appbuilder.security.mongoengine.models.User.objects.filter",
  "flask_login.current_user.is_authenticated",
  "flask_mail.Mail",
  "flask_mail.Message",
  "flask_mongoengine.MongoEngine",
  "flask_openid.OpenID",
  "flask_openid.OpenIDResponse",
  "flask_openid.SessionWrapper",
  "func",
  "functools",
  "functools.reduce",
  "functools.update_wrapper",
  "inspect.isclass",
  "io.BytesIO",
  "item",
  "itertools.groupby",
  "jinja2",
  "jinja2.StrictUndefined",
  "json",
  "json.dumps",
  "json.loads",
  "jsonschema",
  "jsonschema.ValidationError",
  "jsonschema.validate",
  "jwt",
  "jwt.InvalidTokenError",
  "jwt.decode",
  "jwt.encode",
  "ldap",
  "ldap.LDAPError",
  "ldap.OPT_REFERRALS",
  "ldap.OPT_X_TLS_ALLOW",
  "ldap.OPT_X_TLS_CACERTDIR",
  "ldap.OPT_X_TLS_CACERTFILE",
  "ldap.OPT_X_TLS_CERTFILE",
  "ldap.OPT_X_TLS_DEMAND",
  "ldap.OPT_X_TLS_KEYFILE",
  "ldap.OPT_X_TLS_NEWCTX",
  "ldap.OPT_X_TLS_REQUIRE_CERT",
  "ldap.initialize",
  "ldap.set_option",
  "logging",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.basicConfig",
  "logging.exception",
  "logging.getLogger",
  "login_handler",
  "marshmallow_enum.EnumField",
  "marshmallow_enum.EnumField.NAME",
  "marshmallow_enum.EnumField.VALUE",
  "meta",
  "metaclass",
  "mockldap.MockLdap",
  "models.User.objects",
  "models.assoc_permissionview_role.c.permission_view_id",
  "models.sqla.Base.metadata.create_all",
  "mongoengine.BooleanField",
  "mongoengine.DateTimeField",
  "mongoengine.Document",
  "mongoengine.FileField",
  "mongoengine.FloatField",
  "mongoengine.ImageField",
  "mongoengine.IntField",
  "mongoengine.ListField",
  "mongoengine.ReferenceField",
  "mongoengine.StringField",
  "mongoengine.models.Model1.drop_collection",
  "mongoengine.models.Model1.objects",
  "mongoengine.models.Model2.drop_collection",
  "mongoengine.models.Model2.objects",
  "nose.tools.eq_",
  "nose.tools.ok_",
  "objs",
  "openid.consumer.consumer.CANCEL",
  "openid.consumer.consumer.Consumer",
  "openid.consumer.consumer.SUCCESS",
  "operator",
  "operator.attrgetter",
  "os",
  "os.chdir",
  "os.environ",
  "os.getcwd",
  "os.makedirs",
  "os.path",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.path.splitext",
  "os.popen",
  "os.remove",
  "os.rename",
  "prison",
  "prison.decoder.ParserException",
  "prison.dumps",
  "prison.loads",
  "random",
  "random.choice",
  "random.randint",
  "random.uniform",
  "re",
  "re.compile",
  "re.findall",
  "re.match",
  "re.search",
  "re.sub",
  "shutil",
  "shutil.copytree",
  "sqla.models.Model1CustomSchema",
  "sqla.models.TmpEnum.e1",
  "sqla.models.TmpEnum.e2",
  "sqlalchemy",
  "sqlalchemy.Boolean",
  "sqlalchemy.Column",
  "sqlalchemy.Date",
  "sqlalchemy.DateTime",
  "sqlalchemy.Enum",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.Sequence",
  "sqlalchemy.String",
  "sqlalchemy.Table",
  "sqlalchemy.UniqueConstraint",
  "sqlalchemy.and_",
  "sqlalchemy.engine.Engine",
  "sqlalchemy.engine.reflection.Inspector",
  "sqlalchemy.engine.reflection.Inspector.from_engine",
  "sqlalchemy.event",
  "sqlalchemy.event.listens_for",
  "sqlalchemy.exc.IntegrityError",
  "sqlalchemy.ext.declarative.api.as_declarative",
  "sqlalchemy.ext.declarative.as_declarative",
  "sqlalchemy.ext.declarative.declared_attr",
  "sqlalchemy.func",
  "sqlalchemy.func.count",
  "sqlalchemy.func.lower",
  "sqlalchemy.literal",
  "sqlalchemy.orm.Load",
  "sqlalchemy.orm.backref",
  "sqlalchemy.orm.descriptor_props.SynonymProperty",
  "sqlalchemy.orm.properties.RelationshipProperty",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.util.identity_key",
  "sqlalchemy.types",
  "sqlalchemy.types.Boolean",
  "sqlalchemy.types.Date",
  "sqlalchemy.types.DateTime",
  "sqlalchemy.types.Enum",
  "sqlalchemy.types.Float",
  "sqlalchemy.types.Integer",
  "sqlalchemy.types.LargeBinary",
  "sqlalchemy.types.Numeric",
  "sqlalchemy.types.String",
  "sqlalchemy.types.Text",
  "sqlalchemy.types.TypeDecorator",
  "string",
  "string.ascii_letters",
  "sys",
  "sys.exc_info",
  "sys.path.append",
  "sys.version_info",
  "traceback",
  "traceback.format_exc",
  "type.__call__",
  "type.__init__",
  "type.__new__",
  "typing.Dict",
  "typing.List",
  "typing.Optional",
  "unicode",
  "unittest",
  "unittest.TestCase",
  "urllib.parse.quote",
  "urllib.quote",
  "urllib.request.urlopen",
  "urllib2.urlopen",
  "uuid",
  "uuid.uuid1",
  "v",
  "widget",
  "wtforms.BooleanField",
  "wtforms.DateField",
  "wtforms.DateTimeField",
  "wtforms.DecimalField",
  "wtforms.FloatField",
  "wtforms.IntegerField",
  "wtforms.PasswordField",
  "wtforms.StringField",
  "wtforms.TextAreaField",
  "wtforms.ValidationError",
  "wtforms.compat.string_types",
  "wtforms.compat.text_type",
  "wtforms.fields",
  "wtforms.fields.Field",
  "wtforms.fields.FileField",
  "wtforms.fields.SelectField",
  "wtforms.fields.SelectFieldBase",
  "wtforms.fields.StringField",
  "wtforms.fields.TextField",
  "wtforms.fields.core._unset_value",
  "wtforms.utils.unset_value",
  "wtforms.validators",
  "wtforms.validators.DataRequired",
  "wtforms.validators.Email",
  "wtforms.validators.EqualTo",
  "wtforms.validators.InputRequired",
  "wtforms.validators.Length",
  "wtforms.validators.Optional",
  "wtforms.validators.ValidationError",
  "wtforms.widgets",
  "wtforms.widgets.HTMLString",
  "wtforms.widgets.PasswordInput",
  "wtforms.widgets.Select",
  "wtforms.widgets.TextArea",
  "wtforms.widgets.TextInput",
  "wtforms.widgets.html_params",
  "zipfile.ZipFile"
 ],
 "deps": {
  "Model": [],
  "PIL": [],
  "__future__": [],
  "addon_class": [],
  "apispec": [
   "apispec/conda-forge/noarch/apispec-4.7.0-pyhd8ed1ab_0"
  ],
  "base64": [],
  "calendar": [],
  "click": [],
  "const": [],
  "copy": [],
  "datetime": [],
  "dateutil": [],
  "enum": [],
  "f": [],
  "field": [],
  "filter_class": [],
  "filters": [],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "flask_appbuilder": [],
  "flask_babel": [
   "flask-babel/conda-forge/noarch/flask-babel-1.0.0-py_0"
  ],
  "flask_jwt_extended": [
   "flask-jwt-extended/conda-forge/noarch/flask-jwt-extended-3.20.0-py_0"
  ],
  "flask_login": [
   "flask-login/conda-forge/noarch/flask-login-0.5.0-pyh9f0ad1d_0"
  ],
  "flask_mail": [],
  "flask_mongoengine": [],
  "flask_openid": [],
  "flask_sqlalchemy": [
   "flask-sqlalchemy/conda-forge/noarch/flask-sqlalchemy-2.4.3-pyh9f0ad1d_0"
  ],
  "flask_wtf": [
   "flask-wtf/conda-forge/noarch/flask-wtf-0.14.2-py_1"
  ],
  "func": [],
  "functools": [],
  "inspect": [],
  "io": [],
  "item": [],
  "itertools": [],
  "jinja2": [],
  "json": [],
  "jsonschema": [],
  "jwt": [],
  "ldap": [],
  "logging": [],
  "login_handler": [],
  "marshmallow": [
   "marshmallow/conda-forge/noarch/marshmallow-2.13.1-py_1",
   "toastedmarshmallow/conda-forge/noarch/toastedmarshmallow-0.2.6-py_0"
  ],
  "marshmallow_enum": [],
  "marshmallow_sqlalchemy": [
   "marshmallow-sqlalchemy/conda-forge/noarch/marshmallow-sqlalchemy-0.23.0-py_0"
  ],
  "meta": [],
  "metaclass": [],
  "mockldap": [],
  "models": [],
  "mongoengine": [
   "mongoengine/conda-forge/noarch/mongoengine-0.16.3-py_1"
  ],
  "nose": [],
  "objs": [],
  "openid": [],
  "operator": [],
  "os": [],
  "prison": [],
  "random": [],
  "re": [],
  "shutil": [],
  "sqla": [],
  "sqlalchemy": [],
  "sqlalchemy_utils": [
   "sqlalchemy-utils/conda-forge/noarch/sqlalchemy-utils-0.36.8-pyhd3deb0d_0"
  ],
  "string": [],
  "sys": [],
  "traceback": [],
  "type": [],
  "typing": [],
  "unicode": [],
  "unittest": [],
  "urllib": [],
  "urllib2": [],
  "uuid": [],
  "v": [],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-1.0.0-py_0"
  ],
  "widget": [],
  "wtforms": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "zipfile": []
 }
}