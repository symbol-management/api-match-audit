{
 "bad": [
  "A",
  "BufferClass",
  "ClassA",
  "CustomClass",
  "CustomFS",
  "CustomNDArray",
  "CustomType",
  "DuckReader",
  "DuckWriter",
  "DummyClass",
  "FromPlasma",
  "MyArray",
  "MyArray2",
  "MyArrayInvalid",
  "MyDate",
  "MyDatetime",
  "MyObj",
  "MyObject",
  "Path",
  "SubFoo",
  "TempClass",
  "ToPlasma",
  "_DeprecatedMeta",
  "_can_definitely_zero_copy",
  "_check",
  "_check_case",
  "_check_series",
  "_check_type",
  "_deserialize_pandas_dataframe",
  "_generated_version.version",
  "_get_use",
  "_leak_check",
  "_make_table",
  "_serialize_pandas_dataframe",
  "_visit_level",
  "accepts_filter",
  "all_filters_accept",
  "allocate",
  "append_library_dir",
  "assert_create_raises_plasma_full",
  "assert_opens",
  "assert_yields_projected",
  "bool_env",
  "check",
  "check_data",
  "check_fields",
  "check_one_batch",
  "check_result",
  "clock",
  "cls",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.abc.Sequence",
  "con",
  "concurrent.futures.ThreadPoolExecutor",
  "convert_column",
  "convert_single_predicate",
  "date",
  "datetime.datetime.today",
  "datetime.timezone.utc",
  "deserialize_or_output",
  "dt",
  "dt_ms",
  "dt_s",
  "dt_us",
  "eq",
  "f32",
  "f_type",
  "filter.evaluate",
  "filter.llvm_ir.find",
  "func",
  "gc.collect",
  "gc.disable",
  "gc.enable",
  "gc.isenabled",
  "get_buffer",
  "get_symlink_path",
  "hypothesis.Verbosity.verbose",
  "hypothesis.settings.load_profile",
  "hypothesis.settings.register_profile",
  "illegal_assignment",
  "is_pickleable",
  "iter_chunked_array",
  "itertools.count",
  "itertools.cycle",
  "itertools.islice",
  "itertools.product",
  "itertools.zip_longest",
  "java.lang.IllegalArgumentException",
  "jvm_vsr",
  "klass",
  "list_type_factory",
  "make_batch",
  "make_buffer",
  "make_schema",
  "multiprocessing.get_context",
  "ne",
  "normalized",
  "np_scalar",
  "numba.cuda.cudadrv.devicearray.DeviceNDArray",
  "numpy.NaN",
  "numpy.__name__",
  "numpy.__version__",
  "numpy.alltrue",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.bytes_",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.empty",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.frombuffer",
  "numpy.full",
  "numpy.iinfo",
  "numpy.insert",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.int_",
  "numpy.integer",
  "numpy.isnan",
  "numpy.lib.format.descr_to_dtype",
  "numpy.lib.format.dtype_to_descr",
  "numpy.linspace",
  "numpy.ma.array",
  "numpy.ma.masked_array",
  "numpy.matrix",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.object",
  "numpy.object_",
  "numpy.ones",
  "numpy.random.RandomState",
  "numpy.random.bytes",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.repeat",
  "numpy.sctypes",
  "numpy.split",
  "numpy.str_",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.timedelta64",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.unicode_",
  "numpy.void",
  "numpy.where",
  "numpy.zeros",
  "object.__new__",
  "object.__sizeof__",
  "one_filter_accepts",
  "os.chdir",
  "os.environ.copy",
  "os.environ.get",
  "os.error",
  "os.execv",
  "os.getcwd",
  "os.listdir",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.sep",
  "os.path.split",
  "os.path.supports_unicode_filenames",
  "os.pathsep.join",
  "os.remove",
  "os.symlink",
  "os.unlink",
  "pandas",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.CategoricalIndex",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DatetimeIndex",
  "pandas.Index",
  "pandas.Int32Dtype",
  "pandas.Int64Dtype",
  "pandas.MultiIndex.from_arrays",
  "pandas.MultiIndex.from_tuples",
  "pandas.NaT",
  "pandas.NaT.value",
  "pandas.PeriodDtype",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.SparseArray",
  "pandas.SparseDataFrame",
  "pandas.SparseSeries",
  "pandas.Timedelta",
  "pandas.Timestamp",
  "pandas.Timestamp.now",
  "pandas.__version__",
  "pandas.array",
  "pandas.arrays.IntegerArray",
  "pandas.arrays.IntervalArray",
  "pandas.arrays.PeriodArray",
  "pandas.concat",
  "pandas.core",
  "pandas.core.arrays",
  "pandas.core.arrays.datetimes.DatetimeArray",
  "pandas.core.arrays.integer._IntegerDtype",
  "pandas.core.arrays.interval.IntervalArray",
  "pandas.core.arrays.period.PeriodArray",
  "pandas.core.internals.BlockManager",
  "pandas.core.internals.CategoricalBlock",
  "pandas.core.internals.DatetimeTZBlock",
  "pandas.core.internals.ExtensionBlock",
  "pandas.core.internals.IntBlock",
  "pandas.core.internals.ObjectBlock",
  "pandas.core.internals.make_block",
  "pandas.date_range",
  "pandas.interval_range",
  "pandas.isnull",
  "pandas.period_range",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.testing",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_datetime",
  "pandas.to_numeric",
  "pandas.util.testing.rands",
  "pandas_examples.dataframe_with_arrays",
  "pandas_examples.dataframe_with_lists",
  "psutil.Process",
  "put",
  "pyarrow.Array._import_from_c",
  "pyarrow.Array.from_buffers",
  "pyarrow.Array.from_pandas",
  "pyarrow.BooleanArray.from_buffers",
  "pyarrow.Codec.detect",
  "pyarrow.Codec.is_available",
  "pyarrow.DataType._import_from_c",
  "pyarrow.DictionaryArray.from_arrays",
  "pyarrow.ExtensionArray.from_storage",
  "pyarrow.ExtensionType.__init__",
  "pyarrow.FixedSizeListArray.from_arrays",
  "pyarrow.ListArray.from_arrays",
  "pyarrow.MapArray.from_arrays",
  "pyarrow.MessageReader.open_stream",
  "pyarrow.MetadataVersion.V5",
  "pyarrow.PyExtensionType.__init__",
  "pyarrow.RecordBatch._import_from_c",
  "pyarrow.RecordBatch.from_arrays",
  "pyarrow.RecordBatch.from_pandas",
  "pyarrow.RecordBatch.from_struct_array",
  "pyarrow.Schema._import_from_c",
  "pyarrow.Schema.from_pandas",
  "pyarrow.SerializedPyObject.from_components",
  "pyarrow.SparseCOOTensor.from_dense_numpy",
  "pyarrow.SparseCOOTensor.from_numpy",
  "pyarrow.SparseCOOTensor.from_pydata_sparse",
  "pyarrow.SparseCOOTensor.from_scipy",
  "pyarrow.SparseCOOTensor.from_tensor",
  "pyarrow.SparseCSCMatrix.from_numpy",
  "pyarrow.SparseCSCMatrix.from_scipy",
  "pyarrow.SparseCSFTensor.from_dense_numpy",
  "pyarrow.SparseCSFTensor.from_numpy",
  "pyarrow.SparseCSFTensor.from_tensor",
  "pyarrow.SparseCSRMatrix.from_dense_numpy",
  "pyarrow.SparseCSRMatrix.from_numpy",
  "pyarrow.SparseCSRMatrix.from_scipy",
  "pyarrow.SparseCSRMatrix.from_tensor",
  "pyarrow.StringArray.from_buffers",
  "pyarrow.StructArray.from_arrays",
  "pyarrow.Table.from_arrays",
  "pyarrow.Table.from_batches",
  "pyarrow.Table.from_pandas",
  "pyarrow.Table.from_pydict",
  "pyarrow.Tensor.from_numpy",
  "pyarrow.UnionArray.from_dense",
  "pyarrow.UnionArray.from_sparse",
  "pyarrow.__file__",
  "pyarrow.__path__",
  "pyarrow._compute.CastOptions.safe",
  "pyarrow._compute.CastOptions.unsafe",
  "pyarrow._compute.FilterOptions",
  "pyarrow._compute.MatchSubstringOptions",
  "pyarrow._compute.TakeOptions",
  "pyarrow._compute.call_function",
  "pyarrow._dataset.CsvFileFormat",
  "pyarrow._dataset.Dataset",
  "pyarrow._dataset.DirectoryPartitioning",
  "pyarrow._dataset.DirectoryPartitioning.discover",
  "pyarrow._dataset.Expression._field",
  "pyarrow._dataset.Expression._scalar",
  "pyarrow._dataset.FileFormat",
  "pyarrow._dataset.FileSystemDatasetFactory",
  "pyarrow._dataset.FileSystemFactoryOptions",
  "pyarrow._dataset.HivePartitioning",
  "pyarrow._dataset.HivePartitioning.discover",
  "pyarrow._dataset.IpcFileFormat",
  "pyarrow._dataset.ParquetDatasetFactory",
  "pyarrow._dataset.ParquetFactoryOptions",
  "pyarrow._dataset.ParquetFileFormat",
  "pyarrow._dataset.Partitioning",
  "pyarrow._dataset.PartitioningFactory",
  "pyarrow._dataset.UnionDataset",
  "pyarrow._fs.FileInfo",
  "pyarrow._fs.FileSystem",
  "pyarrow._fs.FileSystemHandler",
  "pyarrow._fs.FileType.Directory",
  "pyarrow._fs.FileType.File",
  "pyarrow._fs.FileType.NotFound",
  "pyarrow._fs.FileType.Unknown",
  "pyarrow._fs.LocalFileSystem",
  "pyarrow._fs.PyFileSystem",
  "pyarrow._orc.ORCReader",
  "pyarrow._parquet.ParquetReader",
  "pyarrow._parquet.ParquetWriter",
  "pyarrow._s3fs.initialize_s3",
  "pyarrow.cffi.ffi.cast",
  "pyarrow.cffi.ffi.new",
  "pyarrow.compute.__dict__.items",
  "pyarrow.cpp_build_info.version_info",
  "pyarrow.cuda.IpcMemHandle.from_buffer",
  "pyarrow.dataset.DirectoryPartitioning.discover",
  "pyarrow.dataset.FileSystemDataset.from_paths",
  "pyarrow.dataset.HivePartitioning.discover",
  "pyarrow.dataset.Scanner.from_dataset",
  "pyarrow.flight.BasicAuth.deserialize",
  "pyarrow.flight.DescriptorType.CMD",
  "pyarrow.flight.FlightDescriptor.deserialize",
  "pyarrow.flight.FlightDescriptor.for_command",
  "pyarrow.flight.FlightDescriptor.for_path",
  "pyarrow.flight.FlightInfo.deserialize",
  "pyarrow.flight.FlightMethod.DO_ACTION",
  "pyarrow.flight.FlightMethod.DO_EXCHANGE",
  "pyarrow.flight.FlightMethod.DO_GET",
  "pyarrow.flight.FlightMethod.DO_PUT",
  "pyarrow.flight.FlightMethod.GET_FLIGHT_INFO",
  "pyarrow.flight.FlightMethod.GET_SCHEMA",
  "pyarrow.flight.FlightMethod.LIST_ACTIONS",
  "pyarrow.flight.FlightMethod.LIST_FLIGHTS",
  "pyarrow.flight.Location.for_grpc_tcp",
  "pyarrow.flight.Location.for_grpc_unix",
  "pyarrow.flight.Ticket.deserialize",
  "pyarrow.fs.FileSystem.from_uri",
  "pyarrow.fs.FileType.Directory",
  "pyarrow.fs.FileType.File",
  "pyarrow.fs.FileType.NotFound",
  "pyarrow.fs.FileType.Unknown",
  "pyarrow.fs.HadoopFileSystem.from_uri",
  "pyarrow.fs.create_dir",
  "pyarrow.fs.open_output_stream",
  "pyarrow.gandiva.TreeExprBuilder",
  "pyarrow.gandiva.get_registered_function_signatures",
  "pyarrow.gandiva.make_filter",
  "pyarrow.gandiva.make_projector",
  "pyarrow.ipc.MetadataVersion.V4",
  "pyarrow.ipc.MetadataVersion.V5",
  "pyarrow.lib.Array",
  "pyarrow.lib.ArrowException",
  "pyarrow.lib.ArrowInvalid",
  "pyarrow.lib.ArrowNotImplementedError",
  "pyarrow.lib.BinaryScalar",
  "pyarrow.lib.BooleanScalar",
  "pyarrow.lib.ChunkedArray",
  "pyarrow.lib.Codec.is_available",
  "pyarrow.lib.DataType",
  "pyarrow.lib.Date32Scalar",
  "pyarrow.lib.Date64Scalar",
  "pyarrow.lib.Decimal128Scalar",
  "pyarrow.lib.Decimal128Type",
  "pyarrow.lib.DictionaryScalar",
  "pyarrow.lib.DictionaryType",
  "pyarrow.lib.DoubleScalar",
  "pyarrow.lib.DurationScalar",
  "pyarrow.lib.FeatherReader",
  "pyarrow.lib.Field",
  "pyarrow.lib.FixedSizeBinaryScalar",
  "pyarrow.lib.FixedSizeBinaryType",
  "pyarrow.lib.FixedSizeListScalar",
  "pyarrow.lib.FixedSizeListType",
  "pyarrow.lib.FloatArray",
  "pyarrow.lib.FloatScalar",
  "pyarrow.lib.HadoopFileSystem",
  "pyarrow.lib.HalfFloatScalar",
  "pyarrow.lib.Int16Array",
  "pyarrow.lib.Int16Scalar",
  "pyarrow.lib.Int32Scalar",
  "pyarrow.lib.Int64Array",
  "pyarrow.lib.Int64Scalar",
  "pyarrow.lib.Int64Value",
  "pyarrow.lib.Int8Scalar",
  "pyarrow.lib.IpcWriteOptions",
  "pyarrow.lib.LargeBinaryScalar",
  "pyarrow.lib.LargeListScalar",
  "pyarrow.lib.LargeListType",
  "pyarrow.lib.LargeStringScalar",
  "pyarrow.lib.ListScalar",
  "pyarrow.lib.ListType",
  "pyarrow.lib.MapScalar",
  "pyarrow.lib.MetadataVersion.V4",
  "pyarrow.lib.MetadataVersion.V5",
  "pyarrow.lib.NullScalar",
  "pyarrow.lib.RecordBatch",
  "pyarrow.lib.Scalar",
  "pyarrow.lib.Schema",
  "pyarrow.lib.SerializationContext",
  "pyarrow.lib.StringBuilder",
  "pyarrow.lib.StringScalar",
  "pyarrow.lib.StructScalar",
  "pyarrow.lib.StructType",
  "pyarrow.lib.Table",
  "pyarrow.lib.Table.from_pandas",
  "pyarrow.lib.Time32Scalar",
  "pyarrow.lib.Time32Type",
  "pyarrow.lib.Time64Scalar",
  "pyarrow.lib.Time64Type",
  "pyarrow.lib.TimestampScalar",
  "pyarrow.lib.TimestampType",
  "pyarrow.lib.Type_BINARY",
  "pyarrow.lib.Type_BOOL",
  "pyarrow.lib.Type_DATE32",
  "pyarrow.lib.Type_DATE64",
  "pyarrow.lib.Type_DECIMAL",
  "pyarrow.lib.Type_DICTIONARY",
  "pyarrow.lib.Type_DOUBLE",
  "pyarrow.lib.Type_DURATION",
  "pyarrow.lib.Type_FIXED_SIZE_BINARY",
  "pyarrow.lib.Type_FIXED_SIZE_LIST",
  "pyarrow.lib.Type_FLOAT",
  "pyarrow.lib.Type_HALF_FLOAT",
  "pyarrow.lib.Type_INT16",
  "pyarrow.lib.Type_INT32",
  "pyarrow.lib.Type_INT64",
  "pyarrow.lib.Type_INT8",
  "pyarrow.lib.Type_LARGE_BINARY",
  "pyarrow.lib.Type_LARGE_LIST",
  "pyarrow.lib.Type_LARGE_STRING",
  "pyarrow.lib.Type_LIST",
  "pyarrow.lib.Type_MAP",
  "pyarrow.lib.Type_NA",
  "pyarrow.lib.Type_STRING",
  "pyarrow.lib.Type_STRUCT",
  "pyarrow.lib.Type_TIME32",
  "pyarrow.lib.Type_TIME64",
  "pyarrow.lib.Type_TIMESTAMP",
  "pyarrow.lib.Type_UINT16",
  "pyarrow.lib.Type_UINT32",
  "pyarrow.lib.Type_UINT64",
  "pyarrow.lib.Type_UINT8",
  "pyarrow.lib.UInt16Scalar",
  "pyarrow.lib.UInt32Scalar",
  "pyarrow.lib.UInt64Scalar",
  "pyarrow.lib.UInt8Scalar",
  "pyarrow.lib.UnionMode_DENSE",
  "pyarrow.lib.UnionMode_SPARSE",
  "pyarrow.lib.UnionScalar",
  "pyarrow.lib.UnionType",
  "pyarrow.lib._RecordBatchFileReader",
  "pyarrow.lib._RecordBatchFileWriter",
  "pyarrow.lib._RecordBatchStreamReader",
  "pyarrow.lib._RecordBatchStreamWriter",
  "pyarrow.lib._is_primitive",
  "pyarrow.lib._ndarray_to_arrow_type",
  "pyarrow.lib._pandas_api.categorical_type.from_codes",
  "pyarrow.lib._pandas_api.data_frame",
  "pyarrow.lib._pandas_api.datetimetz_type",
  "pyarrow.lib._pandas_api.extension_dtype",
  "pyarrow.lib._pandas_api.get_rangeindex_attribute",
  "pyarrow.lib._pandas_api.infer_dtype",
  "pyarrow.lib._pandas_api.is_categorical",
  "pyarrow.lib._pandas_api.is_datetimetz",
  "pyarrow.lib._pandas_api.is_extension_array_dtype",
  "pyarrow.lib._pandas_api.is_sparse",
  "pyarrow.lib._pandas_api.pandas_dtype",
  "pyarrow.lib._pandas_api.pd",
  "pyarrow.lib._pandas_api.pd.Index",
  "pyarrow.lib._pandas_api.pd.MultiIndex",
  "pyarrow.lib._pandas_api.pd.MultiIndex.from_tuples",
  "pyarrow.lib._pandas_api.pd.RangeIndex",
  "pyarrow.lib._pandas_api.version",
  "pyarrow.lib.array",
  "pyarrow.lib.binary",
  "pyarrow.lib.builtin_pickle",
  "pyarrow.lib.builtin_pickle.HIGHEST_PROTOCOL",
  "pyarrow.lib.builtin_pickle.dumps",
  "pyarrow.lib.builtin_pickle.loads",
  "pyarrow.lib.concat_tables",
  "pyarrow.lib.cpp_build_info.compiler_flags",
  "pyarrow.lib.cpp_build_info.compiler_id",
  "pyarrow.lib.cpp_build_info.compiler_version",
  "pyarrow.lib.cpp_build_info.git_description",
  "pyarrow.lib.cpp_build_info.git_id",
  "pyarrow.lib.cpp_build_info.package_kind",
  "pyarrow.lib.cpp_build_info.version",
  "pyarrow.lib.frombytes",
  "pyarrow.lib.is_named_tuple",
  "pyarrow.lib.py_buffer",
  "pyarrow.lib.string",
  "pyarrow.lib.string_to_tzinfo",
  "pyarrow.lib.table_to_blocks",
  "pyarrow.lib.tobytes",
  "pyarrow.lib.tzinfo_to_string",
  "pyarrow.lib.write_feather",
  "pyarrow.localfs.read_parquet",
  "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
  "pyarrow.pandas_compat._pandas_api.get_rangeindex_attribute",
  "pyarrow.pandas_compat._pandas_api.has_sparse",
  "pyarrow.pandas_compat._pandas_api.have_pandas",
  "pyarrow.pandas_compat._pandas_api.is_data_frame",
  "pyarrow.pandas_compat._pandas_api.loose_version",
  "pyarrow.pandas_compat._pandas_api.pd.SparseDataFrame",
  "pyarrow.util.pathlib.Path",
  "pytest.approx",
  "pytest.fail",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.lazy_fixture",
  "pytest.mark.cython",
  "pytest.mark.dataset",
  "pytest.mark.fastparquet",
  "pytest.mark.filterwarnings",
  "pytest.mark.flight",
  "pytest.mark.gandiva",
  "pytest.mark.hdfs",
  "pytest.mark.large_memory",
  "pytest.mark.memory_leak",
  "pytest.mark.nopandas",
  "pytest.mark.orc",
  "pytest.mark.pandas",
  "pytest.mark.parametrize",
  "pytest.mark.parquet",
  "pytest.mark.plasma",
  "pytest.mark.requires_testing_data",
  "pytest.mark.s3",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.slow",
  "pytest.mark.tensorflow",
  "pytest.mark.xfail",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "pytest.yield_fixture",
  "pytz.utc",
  "read_multiple_files",
  "ref",
  "schema_cls",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.isspmatrix",
  "scipy.sparse.isspmatrix_coo",
  "scipy.sparse.isspmatrix_csc",
  "scipy.sparse.isspmatrix_csr",
  "shutil.copyfile",
  "shutil.rmtree",
  "signal.SIGTERM",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.SOL_SOCKET",
  "socket.SO_REUSEADDR",
  "socket.socket",
  "sparse.COO",
  "string.ascii_letters",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "string.digits",
  "string.printable",
  "struct.pack",
  "struct.unpack",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
  "sys.argv",
  "sys.executable",
  "sys.getrefcount",
  "sys.getsizeof",
  "sys.maxsize",
  "sys.modules",
  "sys.path",
  "sys.path.insert",
  "sys.platform",
  "sys.version_info",
  "sysconfig.get_platform",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile.mkdtemp",
  "tempfile.mktemp",
  "tensorflow",
  "tensorflow.__version__",
  "tensorflow.load_op_library",
  "tensorflow.sysconfig.get_compile_flags",
  "tensorflow.sysconfig.get_link_flags",
  "tensorflow.test.is_built_with_cuda",
  "test_fs.ProxyHandler",
  "test_writes",
  "textwrap.dedent",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "time",
  "time.sleep",
  "time.thread_time",
  "time.time",
  "torch.ByteTensor",
  "torch.CharTensor",
  "torch.DoubleTensor",
  "torch.FloatTensor",
  "torch.HalfTensor",
  "torch.IntTensor",
  "torch.LongTensor",
  "torch.ShortTensor",
  "torch.Tensor",
  "torch.from_numpy",
  "torch.sparse_coo_tensor",
  "type.to_pandas_dtype",
  "type.tz",
  "type.value_type",
  "uuid.uuid4",
  "warnings.warn",
  "weakref.ref",
  "wr",
  "xml.etree.ElementTree.parse"
 ],
 "deps": {
  "A": [],
  "BufferClass": [],
  "ClassA": [],
  "CustomClass": [],
  "CustomFS": [],
  "CustomNDArray": [],
  "CustomType": [],
  "DuckReader": [],
  "DuckWriter": [],
  "DummyClass": [],
  "FromPlasma": [],
  "MyArray": [],
  "MyArray2": [],
  "MyArrayInvalid": [],
  "MyDate": [],
  "MyDatetime": [],
  "MyObj": [],
  "MyObject": [],
  "Path": [],
  "SubFoo": [],
  "TempClass": [],
  "ToPlasma": [],
  "_DeprecatedMeta": [],
  "_can_definitely_zero_copy": [],
  "_check": [],
  "_check_case": [],
  "_check_series": [],
  "_check_type": [],
  "_deserialize_pandas_dataframe": [],
  "_generated_version": [],
  "_get_use": [],
  "_leak_check": [],
  "_make_table": [],
  "_serialize_pandas_dataframe": [],
  "_visit_level": [],
  "accepts_filter": [],
  "all_filters_accept": [],
  "allocate": [],
  "api": [
   "groclient/conda-forge/noarch/groclient-1.107.3-pyhd8ed1ab_0"
  ],
  "append_library_dir": [],
  "assert_create_raises_plasma_full": [],
  "assert_opens": [],
  "assert_yields_projected": [],
  "ast": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "base64": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "bool_env": [],
  "bz2": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "cffi": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "check": [],
  "check_data": [],
  "check_fields": [],
  "check_one_batch": [],
  "check_result": [],
  "clock": [],
  "cls": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "con": [],
  "concurrent": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "convert_column": [],
  "convert_single_predicate": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "date": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "decimal": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "deserialize_or_output": [],
  "distutils": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "dt": [],
  "dt_ms": [],
  "dt_s": [],
  "dt_us": [],
  "eq": [],
  "f32": [],
  "f_type": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.10.0-py_0"
  ],
  "filter": [],
  "fsspec": [
   "fsspec/conda-forge/noarch/fsspec-0.7.2-py_0"
  ],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "gc": [],
  "get_buffer": [],
  "get_symlink_path": [],
  "glob": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "gzip": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.1.2-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.23.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.23.6-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.27.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.28.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.2-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.8.6-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-6.0.0-pyhd8ed1ab_0"
  ],
  "illegal_assignment": [],
  "inspect": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "is_pickleable": [],
  "iter_chunked_array": [],
  "itertools": [],
  "java": [],
  "json": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "jvm_vsr": [],
  "klass": [],
  "list_type_factory": [],
  "make_batch": [],
  "make_buffer": [],
  "make_schema": [],
  "math": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "ne": [],
  "normalized": [],
  "np_scalar": [],
  "numba": [],
  "numbers": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "numpy": [],
  "object": [],
  "one_filter_accepts": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pandas": [],
  "pandas_examples": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "posixpath": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "psutil": [],
  "put": [],
  "pyarrow": [],
  "pytest": [],
  "pytz": [
   "pytz/conda-forge/noarch/pytz-2019.2-py_0"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "read_multiple_files": [],
  "ref": [],
  "schema_cls": [],
  "scipy": [],
  "setuptools_scm": [
   "setuptools-scm/conda-forge/noarch/setuptools-scm-4.0.0-pyh9f0ad1d_0",
   "setuptools-scm/conda-forge/noarch/setuptools-scm-5.0.1-pyhd3deb0d_0",
   "setuptools_scm/conda-forge/noarch/setuptools_scm-3.3.0-py_0"
  ],
  "shutil": [],
  "signal": [],
  "socket": [],
  "sparse": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "sysconfig": [],
  "tempfile": [],
  "tensorflow": [],
  "test_fs": [],
  "test_writes": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "torch": [],
  "traceback": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "type": [],
  "unittest": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008"
  ],
  "uuid": [],
  "warnings": [],
  "weakref": [],
  "wr": [],
  "xml": []
 }
}