{
 "bad": [
  "OpenMLFlow._from_dict",
  "OpenMLTraceIteration",
  "__check_response",
  "__read_url",
  "_attribute_list_to_dict",
  "_calculate_local_measure",
  "_create_flow_from_xml",
  "_create_setup_from_xml",
  "_create_task_from_xml",
  "_encode_if_category",
  "_get",
  "_get_study",
  "_parse_config",
  "_prediction_to_probabilities",
  "_seed_current_object",
  "_send_request",
  "abc.ABC",
  "abc.abstractmethod",
  "argparse",
  "argparse.ArgumentParser",
  "argparse.Namespace",
  "cast_fn",
  "cls",
  "collections",
  "collections.OrderedDict",
  "collections.namedtuple",
  "config.apikey",
  "config.connection_n_retries",
  "config.get_cache_directory",
  "config.retry_policy",
  "config.server",
  "config.server.split",
  "configure_field",
  "copy",
  "copy.copy",
  "data_feature.OpenMLDataFeature.LEGAL_DATA_TYPES",
  "datasets.OpenMLDataset",
  "datasets.functions.get_dataset",
  "datasets.get_dataset",
  "decode_arff",
  "distutils.version.LooseVersion",
  "extension_class",
  "extension_class.can_handle_model",
  "extract_parameters",
  "flatten_all",
  "flows.functions.get_flow",
  "format.lower",
  "func",
  "functions._get_dataset_arff",
  "functions._get_dataset_parquet",
  "functools.wraps",
  "get_flow_dict",
  "get_run",
  "get_task_and_type_conversion",
  "gzip",
  "gzip.open",
  "hashlib",
  "hashlib.md5",
  "importlib",
  "importlib.import_module",
  "input.get",
  "inspect",
  "inspect.Signature.empty",
  "inspect.getdoc",
  "inspect.getfile",
  "inspect.isfunction",
  "inspect.signature",
  "io",
  "io.StringIO",
  "io.open",
  "is_subcomponent_specification",
  "itertools",
  "itertools.product",
  "json",
  "json.decoder.JSONDecodeError",
  "json.dumps",
  "json.loads",
  "logging",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.Handler",
  "logging.INFO",
  "logging.NOTSET",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "logging.handlers",
  "logging.handlers.RotatingFileHandler",
  "logging.info",
  "logging.warning",
  "match_format",
  "math",
  "math.exp",
  "model_class",
  "numpy",
  "numpy.__version__",
  "numpy.all",
  "numpy.arange",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.int",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.isnan",
  "numpy.ma.masked",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.random.RandomState",
  "numpy.random.uniform",
  "numpy.sctypes.items",
  "numpy.sum",
  "object.__init__",
  "obtain_field",
  "openml.config.logger.info",
  "openml.config.logger.warning",
  "openml.datasets.OpenMLDataset.url_for_id",
  "openml.extensions.sklearn.__init__.SklearnExtension",
  "openml.flows.OpenMLFlow.from_filesystem",
  "openml.flows.OpenMLFlow.url_for_id",
  "openml.runs.OpenMLRunTrace._from_filesystem",
  "openml.tasks.OpenMLTask.url_for_id",
  "openml.tasks.TaskType.LEARNING_CURVE",
  "openml.tasks.TaskType.SUPERVISED_CLASSIFICATION",
  "openml.tasks.TaskType.SUPERVISED_REGRESSION",
  "os",
  "os.chdir",
  "os.environ.get",
  "os.getcwd",
  "os.getpid",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.name",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getsize",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.sep.join",
  "pandas",
  "pandas.Categorical",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DataFrame.from_records",
  "pandas.DataFrame.sparse.from_spmatrix",
  "pandas.Series",
  "pandas.SparseDtype",
  "pandas.api.types.infer_dtype",
  "pandas.concat",
  "pandas.factorize",
  "pandas.merge",
  "pandas.read_feather",
  "pandas.read_parquet",
  "pickle",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dump",
  "pickle.load",
  "platform",
  "platform.system",
  "random",
  "random.gauss",
  "re",
  "re.IGNORECASE",
  "re.compile",
  "re.match",
  "re.sub",
  "re.subn",
  "remove_all_in_parentheses",
  "runs.functions.get_run",
  "rv_class",
  "scipy",
  "scipy.__version__",
  "scipy.sparse",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.spmatrix",
  "scipy.stats",
  "scipy.stats.distributions.rv_frozen",
  "set_field_function",
  "shutil",
  "shutil.rmtree",
  "sklearn",
  "sklearn.__version__",
  "sklearn._min_dependencies",
  "sklearn._min_dependencies.JOBLIB_MIN_VERSION",
  "sklearn._min_dependencies.NUMPY_MIN_VERSION",
  "sklearn._min_dependencies.SCIPY_MIN_VERSION",
  "sklearn._min_dependencies.THREADPOOLCTL_MIN_VERSION",
  "sklearn.base",
  "sklearn.base.clone",
  "sklearn.exceptions.NotFittedError",
  "sklearn.impute.SimpleImputer",
  "sklearn.metrics",
  "sklearn.model_selection",
  "sklearn.model_selection.BaseCrossValidator",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.RandomizedSearchCV",
  "sklearn.model_selection._search.BaseSearchCV",
  "sklearn.pipeline",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.Imputer",
  "split.OpenMLSplit._from_arff_file",
  "string",
  "string.hexdigits",
  "struct",
  "struct.calcsize",
  "sys",
  "sys.version_info",
  "task.OpenMLClassificationTask.get",
  "task.OpenMLClusteringTask.get",
  "task.OpenMLLearningCurveTask.get",
  "task.OpenMLRegressionTask.get",
  "task.TaskType.CLUSTERING.get",
  "task.TaskType.LEARNING_CURVE",
  "task.TaskType.LEARNING_CURVE.get",
  "task.TaskType.SUPERVISED_CLASSIFICATION",
  "task.TaskType.SUPERVISED_CLASSIFICATION.get",
  "task.TaskType.SUPERVISED_REGRESSION",
  "task.TaskType.SUPERVISED_REGRESSION.get",
  "task_cls",
  "tasks.TaskType.CLUSTERING",
  "tasks.TaskType.LEARNING_CURVE",
  "tasks.TaskType.SUBGROUP_DISCOVERY",
  "tasks.TaskType.SUPERVISED_CLASSIFICATION",
  "tasks.TaskType.SUPERVISED_REGRESSION",
  "tasks.functions.get_task",
  "time",
  "time.process_time",
  "time.sleep",
  "time.strftime",
  "time.time",
  "trace.OpenMLRunTrace.merge_traces",
  "trace.OpenMLRunTrace.trace_from_xml",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.IO",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.TYPE_CHECKING",
  "typing.TextIO",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "typing.cast",
  "unittest",
  "unittest.TestCase",
  "urllib.parse",
  "urllib.parse.urlparse",
  "valid_category",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "webbrowser",
  "webbrowser.open",
  "xml",
  "xml.parsers.expat.ExpatError"
 ],
 "deps": {
  "OpenMLFlow": [],
  "OpenMLTraceIteration": [],
  "__check_response": [],
  "__read_url": [],
  "_attribute_list_to_dict": [],
  "_calculate_local_measure": [],
  "_create_flow_from_xml": [],
  "_create_setup_from_xml": [],
  "_create_task_from_xml": [],
  "_encode_if_category": [],
  "_get": [],
  "_get_study": [],
  "_parse_config": [],
  "_prediction_to_probabilities": [],
  "_seed_current_object": [],
  "_send_request": [],
  "abc": [],
  "arff": [
   "liac-arff/conda-forge/noarch/liac-arff-2.5.0-pyhd8ed1ab_0"
  ],
  "argparse": [],
  "cast_fn": [],
  "cls": [],
  "collections": [],
  "config": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "configure_field": [],
  "copy": [],
  "data_feature": [],
  "datasets": [],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decode_arff": [],
  "distutils": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "extension_class": [],
  "extract_parameters": [],
  "flatten_all": [],
  "flows": [],
  "format": [],
  "func": [],
  "functions": [],
  "functools": [],
  "get_flow_dict": [],
  "get_run": [],
  "get_task_and_type_conversion": [],
  "gzip": [],
  "hashlib": [],
  "importlib": [],
  "input": [],
  "inspect": [],
  "io": [],
  "is_subcomponent_specification": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-0.14.0-py_0"
  ],
  "json": [],
  "logging": [],
  "match_format": [],
  "math": [],
  "minio": [
   "minio/conda-forge/noarch/minio-7.0.0-pyhd3deb0d_0"
  ],
  "model_class": [],
  "numpy": [],
  "object": [],
  "obtain_field": [],
  "openml": [],
  "os": [],
  "oslo_concurrency": [
   "oslo.concurrency/conda-forge/noarch/oslo.concurrency-4.2.0-py_0"
  ],
  "pandas": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pickle": [],
  "platform": [],
  "random": [],
  "re": [],
  "remove_all_in_parentheses": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "runs": [],
  "rv_class": [],
  "scipy": [],
  "set_field_function": [],
  "shutil": [],
  "sklearn": [],
  "split": [],
  "string": [],
  "struct": [],
  "sys": [],
  "task": [],
  "task_cls": [],
  "tasks": [],
  "time": [],
  "trace": [],
  "typing": [],
  "unittest": [],
  "urllib": [],
  "urllib3": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "urllib3/conda-forge/noarch/urllib3-1.26.5-pyhd8ed1ab_0"
  ],
  "valid_category": [],
  "warnings": [],
  "webbrowser": [],
  "xml": [],
  "xmltodict": [
   "xmltodict/conda-forge/noarch/xmltodict-0.12.0-py_0"
  ]
 }
}