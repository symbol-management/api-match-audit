{
 "bad": [
  "ConfigSpace",
  "ConfigSpace.CategoricalHyperparameter",
  "ConfigSpace.ConfigurationSpace",
  "ConfigSpace.UniformFloatHyperparameter",
  "ConfigSpace.hyperparameters",
  "_store",
  "catboost",
  "catboost.CatBoost",
  "collections.abc.Sequence",
  "collections.defaultdict",
  "enum.auto",
  "get_sample",
  "inspect",
  "inspect.getfullargspec",
  "inspect.isclass",
  "lightgbm",
  "lightgbm.__version__.split",
  "lightgbm.sklearn.LGBMModel",
  "logging",
  "logging.getLogger",
  "multiprocessing",
  "multiprocessing.cpu_count",
  "numbers",
  "numbers.Integral",
  "numpy",
  "numpy.array",
  "numpy.asarray",
  "numpy.average",
  "numpy.ceil",
  "numpy.empty",
  "numpy.float64",
  "numpy.int32",
  "numpy.log",
  "numpy.ma.MaskedArray",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.random.seed",
  "numpy.sqrt",
  "numpy.unique",
  "os",
  "os.path.expanduser",
  "os.path.join",
  "pandas",
  "pandas.DataFrame",
  "pickle.PicklingError",
  "random",
  "random.randint",
  "random.seed",
  "ray",
  "ray.cloudpickle",
  "ray.cloudpickle.dump",
  "ray.cloudpickle.load",
  "ray.cluster_resources",
  "ray.get",
  "ray.init",
  "ray.is_initialized",
  "ray.put",
  "ray.shutdown",
  "ray.tune",
  "ray.tune.Trainable",
  "ray.tune.grid_search",
  "ray.tune.logger.CSVLogger",
  "ray.tune.logger.JsonLogger",
  "ray.tune.logger.Logger",
  "ray.tune.logger.MLFLowLogger",
  "ray.tune.logger.TBXLogger",
  "ray.tune.run",
  "ray.tune.sample.Domain",
  "ray.tune.sample_from",
  "ray.tune.schedulers.ASHAScheduler",
  "ray.tune.schedulers.AsyncHyperBandScheduler",
  "ray.tune.schedulers.HyperBandForBOHB",
  "ray.tune.schedulers.HyperBandScheduler",
  "ray.tune.schedulers.MedianStoppingRule",
  "ray.tune.schedulers.PopulationBasedTraining",
  "ray.tune.schedulers.TrialScheduler",
  "ray.tune.stopper.CombinedStopper",
  "ray.tune.stopper.MaximumIterationStopper",
  "ray.tune.stopper.Stopper",
  "ray.tune.suggest.BasicVariantGenerator",
  "ray.tune.suggest.ConcurrencyLimiter",
  "ray.tune.suggest.bohb.TuneBOHB",
  "ray.tune.suggest.hyperopt.HyperOptSearch",
  "ray.tune.suggest.optuna.OptunaSearch",
  "ray.tune.suggest.optuna.param",
  "ray.tune.suggest.optuna.param.suggest_categorical",
  "ray.tune.suggest.optuna.param.suggest_loguniform",
  "ray.tune.suggest.optuna.param.suggest_uniform",
  "ray.tune.suggest.skopt.SkOptSearch",
  "ray.tune.suggest.suggestion.Searcher",
  "ray.tune.trial.Trial",
  "ray.tune.trial.Trial.TERMINATED",
  "scipy.stats.rankdata",
  "score",
  "sklearn.base.BaseEstimator",
  "sklearn.base.clone",
  "sklearn.base.is_classifier",
  "sklearn.ensemble.BaseEnsemble",
  "sklearn.exceptions.NotFittedError",
  "sklearn.metrics.check_scoring",
  "sklearn.model_selection.ParameterGrid",
  "sklearn.model_selection.check_cv",
  "sklearn.model_selection.cross_validate",
  "sklearn.pipeline.Pipeline",
  "sklearn.tree.BaseDecisionTree",
  "sklearn.utils.metaestimators._safe_split",
  "sklearn.utils.validation.check_is_fitted",
  "time",
  "time.time",
  "tune_sklearn.utils.EarlyStopping.CATBOOST",
  "tune_sklearn.utils.EarlyStopping.LGBM",
  "tune_sklearn.utils.EarlyStopping.NO_EARLY_STOP",
  "tune_sklearn.utils.EarlyStopping.PARTIAL_FIT",
  "tune_sklearn.utils.EarlyStopping.WARM_START_ENSEMBLE",
  "tune_sklearn.utils.EarlyStopping.WARM_START_ITER",
  "tune_sklearn.utils.EarlyStopping.XGB",
  "typing.Dict",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "xgboost",
  "xgboost.sklearn.XGBModel"
 ],
 "deps": {
  "ConfigSpace": [],
  "_store": [],
  "catboost": [],
  "collections": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "get_sample": [],
  "hyperopt": [
   "hyperopt/conda-forge/noarch/hyperopt-0.2.2-py_0"
  ],
  "inspect": [],
  "lightgbm": [],
  "logging": [],
  "multiprocessing": [],
  "numbers": [],
  "numpy": [],
  "optuna": [
   "optuna/conda-forge/noarch/optuna-1.2.0-py_0"
  ],
  "os": [],
  "pandas": [],
  "pickle": [],
  "random": [],
  "ray": [],
  "scipy": [],
  "score": [],
  "sklearn": [],
  "skopt": [
   "scikit-optimize/conda-forge/noarch/scikit-optimize-0.4-py_0"
  ],
  "time": [],
  "tune_sklearn": [],
  "typing": [],
  "warnings": [],
  "xgboost": []
 }
}