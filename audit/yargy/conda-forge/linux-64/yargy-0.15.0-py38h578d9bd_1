{
 "bad": [
  "DictionaryPredicate",
  "F",
  "F.a",
  "F.a.const",
  "F.a.custom",
  "F.a.inflected",
  "F.a.normalized",
  "F.b",
  "G",
  "MorphFunctionNormalizer",
  "Name",
  "Person",
  "_",
  "_.activate",
  "_.label",
  "all.matches",
  "attribute.AttributeBase",
  "attribute.AttributeScheme",
  "attribute.AttributeSchemeBase",
  "attribute.CustomAttribute",
  "attribute.MorphAttribute",
  "bnf.BNFTransformator",
  "bnf.RemoveForwardTransformator",
  "check.assert_type",
  "constructors.BoundedRule",
  "constructors.EmptyProduction",
  "constructors.ForwardRule",
  "constructors.InterpretationRule",
  "constructors.Leaf",
  "constructors.Main",
  "constructors.MaxBoundedRule",
  "constructors.MinBoundedRule",
  "constructors.MinMaxBoundedRule",
  "constructors.NamedRule",
  "constructors.Node",
  "constructors.OptionalRule",
  "constructors.OrRule",
  "constructors.ParameterPredicate",
  "constructors.ParameterPredicateScheme",
  "constructors.Predicate",
  "constructors.PredicateScheme",
  "constructors.Production",
  "constructors.Relation",
  "constructors.RelationRule",
  "constructors.RepeatableOptionalRule",
  "constructors.RepeatableRule",
  "constructors.Rule",
  "constructors.Tree",
  "constructors.is_forward_rule",
  "constructors.is_rule",
  "fact.Fact",
  "fact.InterpretatorFact",
  "input.items",
  "input.key",
  "interpretator.Chain",
  "itertools.combinations",
  "method",
  "normalizer.ConstNormalizer",
  "normalizer.FunctionFunctionNormalizer",
  "normalizer.FunctionNormalizer",
  "normalizer.InflectedNormalizer",
  "normalizer.MorphFunctionNormalizer",
  "normalizer.NormalizedNormalizer",
  "normalizer.Normalizer",
  "predicate",
  "predicates.AndPredicate",
  "predicates.NotPredicate",
  "predicates.OrPredicate",
  "predicates.Predicate",
  "predicates.bank.DictionaryPredicate",
  "predicates.bank.caseless",
  "predicates.bank.eq",
  "predicates.eq",
  "predicates.is_predicate",
  "pymorphy2.MorphAnalyzer.__call__",
  "re.IGNORECASE",
  "re.UNICODE",
  "record.Record",
  "relation",
  "relations.AndRelation",
  "relations.Main",
  "relations.NotRelation",
  "relations.OrRelation",
  "relations.Relation",
  "relations.is_relation",
  "rule.EmptyRule",
  "rule.ForwardRule",
  "rule.OrRule",
  "rule.Production",
  "rule.Rule",
  "rule.bnf.BNFRule",
  "rule.bnf.is_rule",
  "rule.constructors.PipelineRule",
  "rule.constructors.Production",
  "rule.is_rule",
  "span.Span",
  "span.resolve_spans",
  "str.lower",
  "tagger",
  "token.Token",
  "token.is_morph_token",
  "tokenizer",
  "tokenizer.check_type",
  "tokenizer.remove_types",
  "tokenizer.split",
  "transform",
  "transformator",
  "transformators.ActivateTransformator",
  "transformators.ApplyRelationsTransformator",
  "transformators.DotRuleTransformator",
  "transformators.DotTreeTransformator",
  "transformators.FlattenTransformator",
  "transformators.InplaceRuleTransformator",
  "transformators.InterpretationTransformator",
  "transformators.KeepInterpretationNodesTransformator",
  "transformators.PropogateEmptyTransformator",
  "transformators.RelationsTransformator",
  "transformators.ReplaceEmptyTransformator",
  "transformators.ReplaceExtendedTransformator",
  "transformators.ReplaceOrTransformator",
  "transformators.RuleTransformator",
  "transformators.SquashExtendedTransformator",
  "tree.Leaf",
  "tree.Node",
  "tree.Tree",
  "yargy.interpretation.attribute.construct",
  "yargy.interpretation.attribute.name"
 ],
 "deps": {
  "DictionaryPredicate": [],
  "F": [],
  "G": [],
  "MorphFunctionNormalizer": [],
  "Name": [],
  "Person": [],
  "_": [],
  "all": [],
  "attribute": [],
  "bnf": [],
  "check": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "constructors": [],
  "fact": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython"
  ],
  "input": [],
  "inspect": [
   "python/conda-forge/linux-64/python-2.7.14-0",
   "python/conda-forge/linux-64/python-2.7.15-h33da82c_4",
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_4_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "interpretator": [],
  "itertools": [],
  "method": [],
  "normalizer": [],
  "predicate": [],
  "predicates": [],
  "pymorphy2": [
   "pymorphy2/conda-forge/noarch/pymorphy2-0.9.1-pyh9f0ad1d_0"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-3.1.1-py27_0",
   "pytest/conda-forge/linux-64/pytest-3.10.0-py37_1000",
   "pytest/conda-forge/linux-64/pytest-3.2.2-py36_1",
   "pytest/conda-forge/linux-64/pytest-3.7.2-py35_0",
   "pytest/conda-forge/linux-64/pytest-4.0.2-py38_1001",
   "pytest/conda-forge/linux-64/pytest-4.6.1-py27_0",
   "pytest/conda-forge/linux-64/pytest-4.6.2-py36_0",
   "pytest/conda-forge/linux-64/pytest-5.1.2-py37_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "record": [],
  "relation": [],
  "relations": [],
  "rule": [],
  "span": [],
  "str": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.5.3-1",
   "python/conda-forge/linux-64/python-3.6.6-h5001a0f_0",
   "python/conda-forge/linux-64/python-3.7.0-h5001a0f_4",
   "python/conda-forge/linux-64/python-3.7.8-hffdb5ce_3_cpython",
   "python/conda-forge/linux-64/python-3.8.0-h357f687_1",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_5_cpython"
  ],
  "tagger": [],
  "token": [],
  "tokenizer": [],
  "transform": [],
  "transformator": [],
  "transformators": [],
  "tree": [],
  "visitor": [
   "visitor/conda-forge/noarch/visitor-0.1.3-pyh9f0ad1d_1"
  ],
  "yargy": []
 }
}