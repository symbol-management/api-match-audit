{
 "bad": [
  "_define_project_id_config",
  "_define_region_config",
  "_execute_load_in_source",
  "add_one",
  "contextlib.contextmanager",
  "create_solid",
  "dagster.Bool",
  "dagster.DagsterExecutionStepExecutionError",
  "dagster.Dict",
  "dagster.Enum",
  "dagster.EnumValue",
  "dagster.Field",
  "dagster.InputDefinition",
  "dagster.Int",
  "dagster.List",
  "dagster.ModeDefinition",
  "dagster.Nothing",
  "dagster.OutputDefinition",
  "dagster.Path",
  "dagster.PermissiveDict",
  "dagster.PipelineDefinition",
  "dagster.RunConfig",
  "dagster.SerializationStrategy",
  "dagster.String",
  "dagster.SystemStorageData",
  "dagster.check",
  "dagster.check.NotImplementedCheckError",
  "dagster.check.inst_param",
  "dagster.check.list_param",
  "dagster.check.opt_str_param",
  "dagster.check.param_invariant",
  "dagster.check.str_param",
  "dagster.core.definitions.create_environment_type",
  "dagster.core.definitions.events.ObjectStoreOperation",
  "dagster.core.definitions.events.ObjectStoreOperationType",
  "dagster.core.definitions.events.ObjectStoreOperationType.CP_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.GET_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.RM_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.SET_OBJECT",
  "dagster.core.events.DagsterEventType",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.execution.api.create_execution_plan",
  "dagster.core.execution.api.execute_plan",
  "dagster.core.execution.api.scoped_pipeline_context",
  "dagster.core.instance.DagsterInstance",
  "dagster.core.instance.DagsterInstance.ephemeral",
  "dagster.core.storage.file_manager.FileHandle",
  "dagster.core.storage.file_manager.FileManager",
  "dagster.core.storage.file_manager.TempfileManager",
  "dagster.core.storage.file_manager.check_file_like_obj",
  "dagster.core.storage.intermediate_store.IntermediateStore",
  "dagster.core.storage.intermediates_manager.IntermediateStoreIntermediatesManager",
  "dagster.core.storage.object_store.ObjectStore",
  "dagster.core.storage.pipeline_run.PipelineRun",
  "dagster.core.storage.pipeline_run.PipelineRun.create_empty_run",
  "dagster.core.storage.system_storage.fs_system_storage",
  "dagster.core.storage.system_storage.mem_system_storage",
  "dagster.core.storage.type_storage.TypeStoragePlugin",
  "dagster.core.storage.type_storage.TypeStoragePluginRegistry",
  "dagster.core.types.config.ConfigScalar",
  "dagster.core.types.evaluator.evaluate_config",
  "dagster.core.types.marshal.PickleSerializationStrategy",
  "dagster.core.types.marshal.SerializationStrategy",
  "dagster.core.types.runtime.Bool",
  "dagster.core.types.runtime.Bool.inst",
  "dagster.core.types.runtime.RuntimeType",
  "dagster.core.types.runtime.String",
  "dagster.core.types.runtime.String.inst",
  "dagster.core.types.runtime.resolve_to_runtime_type",
  "dagster.dagster_type",
  "dagster.execute_pipeline",
  "dagster.lambda_solid",
  "dagster.pipeline",
  "dagster.resource",
  "dagster.seven",
  "dagster.seven.json",
  "dagster.seven.json.dumps",
  "dagster.seven.mock",
  "dagster.seven.mock.patch",
  "dagster.seven.mock.patch.dict",
  "dagster.solid",
  "dagster.system_storage",
  "dagster.utils.test.yield_empty_pipeline_context",
  "dagster_gcp.bq_create_dataset.alias",
  "dagster_gcp.bq_delete_dataset.alias",
  "dagster_gcp.import_df_to_bq.alias",
  "datetime",
  "datetime.date",
  "delete_solid",
  "google.api_core.exceptions",
  "google.cloud.bigquery",
  "google.cloud.bigquery.Client",
  "google.cloud.bigquery.client._DEFAULT_NUM_RETRIES",
  "google.cloud.bigquery.job.CreateDisposition",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_IF_NEEDED",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_NEVER",
  "google.cloud.bigquery.job.Encoding",
  "google.cloud.bigquery.job.Encoding.ISO_8859_1",
  "google.cloud.bigquery.job.Encoding.UTF_8",
  "google.cloud.bigquery.job.LoadJobConfig",
  "google.cloud.bigquery.job.QueryJobConfig",
  "google.cloud.bigquery.job.QueryPriority",
  "google.cloud.bigquery.job.QueryPriority.BATCH",
  "google.cloud.bigquery.job.QueryPriority.INTERACTIVE",
  "google.cloud.bigquery.job.SchemaUpdateOption",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_ADDITION",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_RELAXATION",
  "google.cloud.bigquery.job.SourceFormat",
  "google.cloud.bigquery.job.SourceFormat.AVRO",
  "google.cloud.bigquery.job.SourceFormat.CSV",
  "google.cloud.bigquery.job.SourceFormat.DATASTORE_BACKUP",
  "google.cloud.bigquery.job.SourceFormat.NEWLINE_DELIMITED_JSON",
  "google.cloud.bigquery.job.SourceFormat.ORC",
  "google.cloud.bigquery.job.SourceFormat.PARQUET",
  "google.cloud.bigquery.job.WriteDisposition",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_APPEND",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_EMPTY",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_TRUNCATE",
  "google.cloud.bigquery.retry.DEFAULT_RETRY",
  "google.cloud.bigquery.table.EncryptionConfiguration",
  "google.cloud.bigquery.table.TimePartitioning",
  "google.cloud.exceptions.NotFound",
  "google.cloud.storage",
  "io",
  "io.BytesIO",
  "load_solid",
  "logging",
  "logging.info",
  "logging.warning",
  "os",
  "os.getenv",
  "pandas",
  "pandas.DataFrame",
  "pytest",
  "pytest.fixture",
  "pytest.mark.nettest",
  "pytest.mark.skip",
  "pytest.raises",
  "query_solid",
  "re",
  "re.escape",
  "re.match",
  "return_df",
  "return_gcs_uri",
  "return_one",
  "sys",
  "sys.modules",
  "time",
  "time.sleep",
  "types.BigQueryLoadSource.DataFrame",
  "types.BigQueryLoadSource.File",
  "types.BigQueryLoadSource.GCS",
  "user_throw_exception",
  "uuid",
  "uuid.uuid4"
 ],
 "deps": {
  "_define_project_id_config": [],
  "_define_region_config": [],
  "_execute_load_in_source": [],
  "add_one": [],
  "contextlib": [],
  "create_solid": [],
  "dagster": [],
  "dagster_gcp": [],
  "dagster_pandas": [
   "dagster-pandas/conda-forge/noarch/dagster-pandas-0.9.2-py_1",
   "dagster_pandas/conda-forge/noarch/dagster_pandas-0.6.6-py_0"
  ],
  "datetime": [],
  "delete_solid": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "google": [],
  "googleapiclient": [
   "google-api-python-client/conda-forge/noarch/google-api-python-client-1.7.8-py_0"
  ],
  "httplib2": [
   "httplib2/conda-forge/noarch/httplib2-0.17.1-pyh9f0ad1d_0"
  ],
  "io": [],
  "load_solid": [],
  "logging": [],
  "oauth2client": [
   "oauth2client/conda-forge/noarch/oauth2client-4.1.3-py_0"
  ],
  "os": [],
  "pandas": [],
  "pytest": [],
  "query_solid": [],
  "re": [],
  "return_df": [],
  "return_gcs_uri": [],
  "return_one": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "sys": [],
  "time": [],
  "types": [],
  "user_throw_exception": [],
  "uuid": []
 }
}