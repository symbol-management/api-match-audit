{
 "bad": [
  "ColoredStreamHandler",
  "CredentialsConfiguration",
  "MemoryHandler",
  "_copy_win_ownership",
  "_generate_dacl",
  "_get_current_user",
  "_get_names_from_loaded_cert_or_req",
  "_install_current_file",
  "_is_interactive_only_auth",
  "_key_hash",
  "_notAfterBefore",
  "_report_failure",
  "_report_no_chall_path",
  "_run_deploy_hook",
  "_run_hook",
  "_search_lineages",
  "_validate_webroot",
  "_write_current_hash",
  "_write_msg",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "acme.challenges",
  "acme.challenges.Challenge",
  "acme.challenges.Challenge.TYPES",
  "acme.challenges.DNS",
  "acme.challenges.DNS01",
  "acme.challenges.HTTP01",
  "acme.challenges.HTTP01.URI_ROOT_PATH",
  "acme.challenges.HTTP01Response.PORT",
  "acme.challenges.KeyAuthorizationChallenge",
  "acme.challenges.TLSALPN01",
  "acme.client",
  "acme.client.BackwardsCompatibleClientV2",
  "acme.client.ClientBase",
  "acme.client.ClientNetwork",
  "acme.crypto_util",
  "acme.crypto_util._pyopenssl_cert_or_req_all_names",
  "acme.crypto_util._pyopenssl_cert_or_req_san",
  "acme.crypto_util.dump_pyopenssl_chain",
  "acme.crypto_util.make_csr",
  "acme.errors",
  "acme.errors.ClientError",
  "acme.errors.Error",
  "acme.errors.WildcardUnsupportedError",
  "acme.fields",
  "acme.fields.RFC3339Field",
  "acme.messages",
  "acme.messages.Authorization",
  "acme.messages.AuthorizationResource",
  "acme.messages.ChallengeBody",
  "acme.messages.Error",
  "acme.messages.ExternalAccountBinding.from_data",
  "acme.messages.IDENTIFIER_FQDN",
  "acme.messages.Identifier",
  "acme.messages.NewRegistration.from_data",
  "acme.messages.OrderResource",
  "acme.messages.RegistrationResource",
  "acme.messages.RegistrationResource.json_loads",
  "acme.messages.STATUS_INVALID",
  "acme.messages.STATUS_PENDING",
  "acme.messages.STATUS_VALID",
  "acme.messages.is_acme_error",
  "acme.standalone",
  "acme.standalone.BaseDualNetworkedServers",
  "acme.standalone.HTTP01DualNetworkedServers",
  "acme.standalone.HTTP01RequestHandler.HTTP01Resource",
  "add",
  "argparse",
  "argparse.Action",
  "argparse.ArgumentError",
  "argparse.ArgumentTypeError",
  "argparse.HelpFormatter",
  "argparse.OPTIONAL",
  "argparse.SUPPRESS",
  "argparse.ZERO_OR_MORE",
  "atexit",
  "cast",
  "certbot._internal.cli.__init__.has_default_value",
  "certbot._internal.cli.__init__.logger",
  "certbot._internal.cli.__init__.prepare_and_parse_args",
  "certbot._internal.cli.__init__.set_by_cli",
  "certbot._internal.cli.cli_constants.SHORT_USAGE.replace",
  "certbot._internal.cli.cli_constants.VAR_MODIFIERS.get",
  "certbot._internal.cli.verb_help.VERB_HELP_MAP.get",
  "certbot._internal.constants.REVOCATION_REASONS.keys",
  "certbot._internal.display.dummy_readline.__doc__",
  "certbot.compat.os.O_CREAT",
  "certbot.compat.os.O_EXCL",
  "certbot.compat.os.O_RDWR",
  "certbot.compat.os.O_TRUNC",
  "certbot.compat.os.O_WRONLY",
  "certbot.compat.os.close",
  "certbot.compat.os.devnull",
  "certbot.compat.os.environ",
  "certbot.compat.os.environ.copy",
  "certbot.compat.os.environ.get",
  "certbot.compat.os.environ.pop",
  "certbot.compat.os.environ.split",
  "certbot.compat.os.environ.update",
  "certbot.compat.os.fdopen",
  "certbot.compat.os.getenv",
  "certbot.compat.os.getpid",
  "certbot.compat.os.kill",
  "certbot.compat.os.linesep",
  "certbot.compat.os.linesep.join",
  "certbot.compat.os.listdir",
  "certbot.compat.os.lstat",
  "certbot.compat.os.name",
  "certbot.compat.os.path.abspath",
  "certbot.compat.os.path.basename",
  "certbot.compat.os.path.dirname",
  "certbot.compat.os.path.exists",
  "certbot.compat.os.path.expanduser",
  "certbot.compat.os.path.isabs",
  "certbot.compat.os.path.isdir",
  "certbot.compat.os.path.isfile",
  "certbot.compat.os.path.islink",
  "certbot.compat.os.path.join",
  "certbot.compat.os.path.lexists",
  "certbot.compat.os.path.normcase",
  "certbot.compat.os.path.normpath",
  "certbot.compat.os.path.relpath",
  "certbot.compat.os.path.samefile",
  "certbot.compat.os.path.sep",
  "certbot.compat.os.path.split",
  "certbot.compat.os.path.splitdrive",
  "certbot.compat.os.path.splitext",
  "certbot.compat.os.pathsep",
  "certbot.compat.os.pathsep.join",
  "certbot.compat.os.remove",
  "certbot.compat.os.rmdir",
  "certbot.compat.os.symlink",
  "certbot.compat.os.unlink",
  "certbot.display.util.ANSI_SGR_BOLD",
  "certbot.display.util.ANSI_SGR_RESET",
  "certbot.display.util.CSR",
  "certbot.display.util.DeprecatedArgumentAction",
  "certbot.display.util.Key",
  "certbot.display.util._release_locks",
  "certbot.display.util.add_deprecated_argument",
  "certbot.display.util.atexit_register",
  "certbot.display.util.enforce_domain_sanity",
  "certbot.display.util.get_os_info_ua",
  "certbot.display.util.is_staging",
  "certbot.display.util.is_wildcard_domain",
  "certbot.display.util.make_or_verify_dir",
  "certbot.display.util.safe_email",
  "certbot.display.util.safe_open",
  "certbot.display.util.set_up_core_dir",
  "certbot.display.util.unique_file",
  "certbot.interfaces.IConfig.__getitem__",
  "certbot.interfaces.IDisplay.names",
  "certbot.interfaces.IPluginFactory.providedBy",
  "certbot.plugins.enhancements._INDEX",
  "certbot.plugins.util.env_no_snap_for_external_calls",
  "certbot.plugins.util.exe_exists",
  "certbot.util.PERM_ERR_FMT.format",
  "challb_to_achall",
  "checkpoint_func",
  "cli_plugin_requests",
  "collections",
  "collections.abc.Mapping",
  "collections.namedtuple",
  "configargparse",
  "configargparse.ACTION_TYPES_THAT_DONT_NEED_A_VALUE",
  "configargparse.ACTION_TYPES_THAT_DONT_NEED_A_VALUE.add",
  "configobj",
  "configobj.ConfigObj",
  "configobj.ConfigObjError",
  "contextlib.contextmanager",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.exceptions.UnsupportedAlgorithm",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
  "cryptography.hazmat.primitives.asymmetric.ec.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.SHA1",
  "cryptography.hazmat.primitives.serialization",
  "cryptography.hazmat.primitives.serialization.Encoding",
  "cryptography.hazmat.primitives.serialization.Encoding.DER",
  "cryptography.hazmat.primitives.serialization.Encoding.PEM",
  "cryptography.hazmat.primitives.serialization.NoEncryption",
  "cryptography.hazmat.primitives.serialization.PrivateFormat",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
  "cryptography.hazmat.primitives.serialization.load_der_private_key",
  "cryptography.hazmat.primitives.serialization.load_pem_private_key",
  "cryptography.x509",
  "cryptography.x509.AuthorityInformationAccess",
  "cryptography.x509.AuthorityInformationAccessOID.OCSP",
  "cryptography.x509.ExtendedKeyUsage",
  "cryptography.x509.ExtensionNotFound",
  "cryptography.x509.NameOID.COMMON_NAME",
  "cryptography.x509.SubjectKeyIdentifier.from_public_key",
  "cryptography.x509.get_serial_number",
  "cryptography.x509.load_pem_x509_certificate",
  "cryptography.x509.ocsp",
  "cryptography.x509.ocsp.OCSPCertStatus.REVOKED",
  "cryptography.x509.ocsp.OCSPRequestBuilder",
  "cryptography.x509.ocsp.OCSPResponse",
  "cryptography.x509.ocsp.OCSPResponseStatus.SUCCESSFUL",
  "cryptography.x509.ocsp.load_der_ocsp_response",
  "cryptography.x509.oid.ExtendedKeyUsageOID.OCSP_SIGNING",
  "csv",
  "csv.reader",
  "csv.writer",
  "datetime",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "distro",
  "distro.like",
  "distro.linux_distribution",
  "distro.name",
  "errno",
  "exit_func",
  "expanded_tempdir",
  "func",
  "functools",
  "functools.partial",
  "get_certnames",
  "get_python_os_info",
  "glob",
  "glob.glob",
  "glob.iglob",
  "has_chall",
  "hashlib",
  "hashlib.sha256",
  "importlib.reload",
  "io",
  "io.StringIO",
  "itertools",
  "josepy.JWK.json_loads",
  "josepy.JWKRSA.load",
  "json",
  "json.dumps",
  "json.loads",
  "lexicon.config.ConfigResolver",
  "lexicon.providers.base.Provider",
  "list_hooks",
  "load",
  "loader",
  "logging",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "logging.handlers",
  "logging.handlers.MemoryHandler",
  "logging.handlers.RotatingFileHandler",
  "logging.shutdown",
  "match_func",
  "mock",
  "msvcrt",
  "msvcrt.LK_NBLCK",
  "msvcrt.LK_UNLCK",
  "msvcrt.locking",
  "multiprocessing.Event",
  "multiprocessing.Process",
  "notify",
  "notify_error",
  "ntsecuritycon",
  "ntsecuritycon.FILE_ALL_ACCESS",
  "ntsecuritycon.FILE_GENERIC_EXECUTE",
  "ntsecuritycon.FILE_GENERIC_READ",
  "object.__getattribute__",
  "object.__setattr__",
  "os.O_CREAT",
  "os.O_EXCL",
  "os.X_OK",
  "os.access",
  "os.chmod",
  "os.chown",
  "os.environ.get",
  "os.fstat",
  "os.getuid",
  "os.mkdir",
  "os.open",
  "os.path.isfile",
  "os.readlink",
  "os.rename",
  "os.stat",
  "os.umask",
  "pick_plugin",
  "pkg_resources",
  "pkg_resources.iter_entry_points",
  "pkg_resources.resource_filename",
  "pkg_resources.resource_string",
  "pkg_resources.working_set.add_entry",
  "pywintypes",
  "pywintypes.error",
  "random",
  "random.uniform",
  "re.DOTALL",
  "re.IGNORECASE",
  "renewal_filename_for_lineagename",
  "requests",
  "requests.Response",
  "requests.Session",
  "requests.adapters.HTTPAdapter",
  "requests.exceptions.HTTPError",
  "requests.exceptions.RequestException",
  "requests.post",
  "restore_func",
  "rv_func",
  "signal.SIGHUP",
  "signal.SIGQUIT",
  "signal.SIGTERM",
  "signal.SIGXCPU",
  "signal.SIGXFSZ",
  "signal.SIG_IGN",
  "socket.AF_UNIX",
  "socket.SOCK_STREAM",
  "socket.error",
  "socket.inet_aton",
  "sys",
  "sys.path.extend",
  "sys.platform.startswith",
  "sys.stdin.isatty",
  "sys.stdin.readline",
  "sys.stdout.flush",
  "sys.stdout.isatty",
  "sys.stdout.write",
  "time",
  "traceback",
  "traceback.format_exc",
  "traceback.format_exception",
  "traceback.format_exception_only",
  "unittest.mock.call.add_txt_record",
  "unittest.mock.call.del_txt_record",
  "validator",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "win32api",
  "win32api.GetDomainName",
  "win32api.GetUserName",
  "win32com.shell.shell",
  "win32com.shell.shell.IsUserAnAdmin",
  "win32con",
  "win32con.CREATE_ALWAYS",
  "win32con.CREATE_NEW",
  "win32console.GetStdHandle",
  "win32console.STD_OUTPUT_HANDLE",
  "win32file",
  "win32file.CreateDirectory",
  "win32file.CreateFile",
  "win32file.FILE_SHARE_READ",
  "win32file.FILE_SHARE_WRITE",
  "win32file.GENERIC_READ",
  "win32security",
  "win32security.ACL",
  "win32security.ACL_REVISION",
  "win32security.ConvertStringSidToSid",
  "win32security.DACL_SECURITY_INFORMATION",
  "win32security.GetFileSecurity",
  "win32security.LookupAccountName",
  "win32security.OWNER_SECURITY_INFORMATION",
  "win32security.SECURITY_ATTRIBUTES",
  "win32security.SetFileSecurity",
  "win32security.TRUSTEE_IS_SID",
  "win32security.TRUSTEE_IS_USER",
  "winerror",
  "winerror.ERROR_ALREADY_EXISTS",
  "winerror.ERROR_FILE_EXISTS",
  "winerror.ERROR_SHARING_VIOLATION",
  "yesno",
  "zope.component",
  "zope.interface",
  "zope.interface.interface",
  "zope.interface.interfaces",
  "zope.interface.verify"
 ],
 "deps": {
  "OpenSSL": [
   "pyopenssl/conda-forge/noarch/pyopenssl-20.0.1-pyhd8ed1ab_0"
  ],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "fcntl": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "josepy": [
   "josepy/conda-forge/noarch/josepy-1.8.0-pyhd8ed1ab_0"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "parsedatetime": [
   "parsedatetime/conda-forge/linux-64/parsedatetime-2.2-py35_0",
   "parsedatetime/conda-forge/noarch/parsedatetime-2.4-py_1",
   "parsedatetime/conda-forge/noarch/parsedatetime-2.6-pyh9f0ad1d_0"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pyrfc3339": [
   "pyrfc3339/conda-forge/noarch/pyrfc3339-1.1-py_0"
  ],
  "pytz": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "pytz/conda-forge/noarch/pytz-2017.3-py_1",
   "pytz/conda-forge/noarch/pytz-2017.3-py_2",
   "pytz/conda-forge/noarch/pytz-2018.4-py_0",
   "pytz/conda-forge/noarch/pytz-2018.5-py_0",
   "pytz/conda-forge/noarch/pytz-2018.6-py_0",
   "pytz/conda-forge/noarch/pytz-2019.1-py_0",
   "pytz/conda-forge/noarch/pytz-2019.2-py_0",
   "pytz/conda-forge/noarch/pytz-2020.1-pyh9f0ad1d_0",
   "pytz/conda-forge/noarch/pytz-2020.4-pyhd8ed1ab_0"
  ],
  "queue": [
   "pies2overrides/conda-forge/osx-64/pies2overrides-2.6.7-py27_1000",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "readline": [
   "gnureadline/conda-forge/osx-64/gnureadline-6.3.3-py36_0",
   "pyreadline/conda-forge/win-64/pyreadline-2.1-py37h4c0cbd9_1003",
   "pyreadline3/conda-forge/win-64/pyreadline3-3.3-py38haa244fe_1",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "select": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "stat": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.10.0.0-pyha770c72_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.2-py_0",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "urllib3": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.1.0-pyhd3deb0d_0",
   "urllib3/conda-forge/linux-64/urllib3-1.24.1-py37_1000",
   "urllib3/conda-forge/linux-64/urllib3-1.25.7-py36_0",
   "urllib3/conda-forge/linux-64/urllib3-1.25.8-py37hc8dfbb8_1",
   "urllib3/conda-forge/noarch/urllib3-1.25.11-py_0",
   "urllib3/conda-forge/noarch/urllib3-1.26.0-pyhd8ed1ab_0",
   "urllib3/conda-forge/noarch/urllib3-1.26.2-pyhd8ed1ab_0",
   "urllib3/conda-forge/noarch/urllib3-1.26.3-pyhd8ed1ab_0",
   "urllib3/conda-forge/noarch/urllib3-1.26.5-pyhd8ed1ab_0",
   "urllib3/conda-forge/noarch/urllib3-1.26.6-pyhd8ed1ab_0"
  ]
 }
}