{
 "bad": [
  "BaseDPMachine",
  "BaseDPMechanism",
  "TestClass",
  "TestMSE",
  "TestMech",
  "_delta_c",
  "_f",
  "_func",
  "abc.ABC",
  "abc.abstractmethod",
  "b_plus",
  "copy.copy",
  "copy.deepcopy",
  "diffprivlib.accountant.BudgetAccountant",
  "diffprivlib.accountant.BudgetAccountant._default",
  "diffprivlib.accountant.BudgetAccountant.load_default",
  "diffprivlib.accountant.BudgetAccountant.pop_default",
  "diffprivlib.mechanisms.Binary",
  "diffprivlib.mechanisms.DPMachine",
  "diffprivlib.mechanisms.DPMechanism",
  "diffprivlib.mechanisms.Exponential",
  "diffprivlib.mechanisms.ExponentialHierarchical",
  "diffprivlib.mechanisms.Gaussian",
  "diffprivlib.mechanisms.GaussianAnalytic",
  "diffprivlib.mechanisms.GaussianDiscrete",
  "diffprivlib.mechanisms.Geometric",
  "diffprivlib.mechanisms.GeometricFolded",
  "diffprivlib.mechanisms.GeometricTruncated",
  "diffprivlib.mechanisms.Laplace",
  "diffprivlib.mechanisms.LaplaceBoundedDomain",
  "diffprivlib.mechanisms.LaplaceBoundedNoise",
  "diffprivlib.mechanisms.LaplaceFolded",
  "diffprivlib.mechanisms.LaplaceTruncated",
  "diffprivlib.mechanisms.Staircase",
  "diffprivlib.mechanisms.TruncationAndFoldingMixin",
  "diffprivlib.mechanisms.Uniform",
  "diffprivlib.mechanisms.Vector",
  "diffprivlib.mechanisms.Wishart",
  "diffprivlib.mechanisms.base.DPMachine",
  "diffprivlib.mechanisms.base.DPMechanism",
  "diffprivlib.mechanisms.base.DPMechanism.get_bias",
  "diffprivlib.mechanisms.base.DPMechanism.get_variance",
  "diffprivlib.mechanisms.base.DPMechanism.set_epsilon_delta",
  "diffprivlib.mechanisms.base.TruncationAndFoldingMixin",
  "diffprivlib.mechanisms.base.TruncationAndFoldingMixin.__init__",
  "diffprivlib.mechanisms.base.TruncationAndFoldingMixin.__repr__",
  "diffprivlib.mechanisms.base.TruncationAndFoldingMixin.check_inputs",
  "diffprivlib.mechanisms.binary.Binary.check_inputs",
  "diffprivlib.mechanisms.binary.Binary.randomise",
  "diffprivlib.mechanisms.exponential.Exponential",
  "diffprivlib.mechanisms.gaussian.Gaussian",
  "diffprivlib.mechanisms.geometric.Geometric",
  "diffprivlib.mechanisms.geometric.Geometric.check_inputs",
  "diffprivlib.mechanisms.geometric.Geometric.randomise",
  "diffprivlib.mechanisms.geometric.Geometric.set_sensitivity",
  "diffprivlib.mechanisms.laplace.Laplace",
  "diffprivlib.mechanisms.laplace.Laplace.check_inputs",
  "diffprivlib.mechanisms.laplace.Laplace.get_bias",
  "diffprivlib.mechanisms.laplace.Laplace.get_variance",
  "diffprivlib.mechanisms.laplace.Laplace.randomise",
  "diffprivlib.mechanisms.laplace.Laplace.set_sensitivity",
  "diffprivlib.mechanisms.laplace.LaplaceTruncated",
  "diffprivlib.mechanisms.transforms.DPTransformer",
  "diffprivlib.mechanisms.transforms.IntToString",
  "diffprivlib.mechanisms.transforms.RoundedInteger",
  "diffprivlib.mechanisms.transforms.StringToInt",
  "diffprivlib.mechanisms.transforms.base.DPTransformer",
  "diffprivlib.models.k_means.KMeans",
  "diffprivlib.models.linear_regression.LinearRegression",
  "diffprivlib.models.linear_regression._preprocess_data",
  "diffprivlib.models.logistic_regression.LogisticRegression",
  "diffprivlib.models.logistic_regression._check_multi_class",
  "diffprivlib.models.logistic_regression._check_solver",
  "diffprivlib.models.logistic_regression._logistic_regression_path",
  "diffprivlib.models.naive_bayes.GaussianNB",
  "diffprivlib.models.pca.PCA",
  "diffprivlib.models.standard_scaler.StandardScaler",
  "diffprivlib.models.standard_scaler._incremental_mean_and_var",
  "diffprivlib.tools.histograms.histogram",
  "diffprivlib.tools.histograms.histogram2d",
  "diffprivlib.tools.histograms.histogramdd",
  "diffprivlib.tools.mean",
  "diffprivlib.tools.nanmean",
  "diffprivlib.tools.nanvar",
  "diffprivlib.tools.utils._mean",
  "diffprivlib.tools.utils._std",
  "diffprivlib.tools.utils._sum",
  "diffprivlib.tools.utils._var",
  "diffprivlib.tools.utils.count_nonzero",
  "diffprivlib.tools.utils.mean",
  "diffprivlib.tools.utils.nanmean",
  "diffprivlib.tools.utils.nanstd",
  "diffprivlib.tools.utils.nansum",
  "diffprivlib.tools.utils.nanvar",
  "diffprivlib.tools.utils.std",
  "diffprivlib.tools.utils.sum",
  "diffprivlib.tools.utils.var",
  "diffprivlib.utils.Budget",
  "diffprivlib.utils.BudgetError",
  "diffprivlib.utils.DiffprivlibCompatibilityWarning",
  "diffprivlib.utils.PrivacyLeakWarning",
  "diffprivlib.utils.copy_docstring",
  "diffprivlib.utils.global_seed",
  "diffprivlib.utils.warn_unused_args",
  "diffprivlib.validation.check_bounds",
  "diffprivlib.validation.check_epsilon_delta",
  "diffprivlib.validation.clip_to_bounds",
  "diffprivlib.validation.clip_to_norm",
  "dp_mech",
  "joblib.Parallel",
  "joblib.delayed",
  "math.erf",
  "noisy_func",
  "numbers.Integral",
  "numbers.Real",
  "numpy._NoValue",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.append",
  "numpy.arange",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.bool_",
  "numpy.cbrt",
  "numpy.ceil",
  "numpy.character",
  "numpy.clip",
  "numpy.core.multiarray.ndarray",
  "numpy.core.umath.sqrt",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.diff",
  "numpy.dot",
  "numpy.errstate",
  "numpy.exp",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.histogram",
  "numpy.histogram2d",
  "numpy.histogramdd",
  "numpy.hstack",
  "numpy.in1d",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.intp",
  "numpy.isclose",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.linalg.lstsq",
  "numpy.linalg.norm",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.log",
  "numpy.logspace",
  "numpy.max",
  "numpy.mean",
  "numpy.median",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan",
  "numpy.nanmean",
  "numpy.nansum",
  "numpy.nanvar",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.nditer",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pi",
  "numpy.ptp",
  "numpy.random.binomial",
  "numpy.random.gamma",
  "numpy.random.geometric",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.round",
  "numpy.searchsorted",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.size",
  "numpy.sqrt",
  "numpy.std",
  "numpy.sum",
  "numpy.unique",
  "numpy.var",
  "numpy.zeros",
  "numpy.zeros_like",
  "objective",
  "old_noisy_func",
  "path_func",
  "phi",
  "pytest.mark.filterwarnings",
  "pytest.warns",
  "scipy.optimize.fmin_l_bfgs_b",
  "sklearn.base.BaseEstimator",
  "sklearn.cluster.KMeans",
  "sklearn.datasets.load_iris",
  "sklearn.decomposition._pca.PCA",
  "sklearn.decomposition._pca.PCA.fit_transform",
  "sklearn.decomposition._pca._infer_dimension",
  "sklearn.decomposition._pca._infer_dimension_",
  "sklearn.decomposition.pca.PCA",
  "sklearn.exceptions.ConvergenceWarning",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model._logistic._logistic_loss_and_grad",
  "sklearn.model_selection.train_test_split",
  "sklearn.naive_bayes.GaussianNB",
  "sklearn.preprocessing.StandardScaler",
  "sklearn.preprocessing._data._handle_zeros_in_scale",
  "sklearn.utils.check_X_y",
  "sklearn.utils.check_array",
  "sklearn.utils.check_consistent_length",
  "sklearn.utils.extmath._incremental_mean_and_var",
  "sklearn.utils.extmath.stable_cumsum",
  "sklearn.utils.extmath.svd_flip",
  "sklearn.utils.fixes._joblib_parallel_args",
  "sklearn.utils.multiclass._check_partial_fit_first_call",
  "sklearn.utils.multiclass.check_classification_targets",
  "sklearn.utils.validation.FLOAT_DTYPES",
  "sys.maxsize",
  "target_func",
  "tuple.__new__",
  "unittest.TestCase",
  "unittest.case.TestCase",
  "value",
  "warnings.simplefilter",
  "warnings.warn"
 ],
 "deps": {
  "BaseDPMachine": [],
  "BaseDPMechanism": [],
  "TestClass": [],
  "TestMSE": [],
  "TestMech": [],
  "_delta_c": [],
  "_f": [],
  "_func": [],
  "abc": [],
  "b_plus": [],
  "copy": [],
  "diffprivlib": [],
  "dp_mech": [],
  "joblib": [],
  "math": [],
  "noisy_func": [],
  "numbers": [],
  "numpy": [],
  "objective": [],
  "old_noisy_func": [],
  "path_func": [],
  "phi": [],
  "pytest": [],
  "scipy": [],
  "sklearn": [],
  "sys": [],
  "target_func": [],
  "tuple": [],
  "unittest": [],
  "value": [],
  "warnings": []
 }
}