{
 "bad": [
  "add",
  "applies",
  "asteval.Interpreter",
  "asteval.make_symbol_table",
  "attribute.model_attribute",
  "base_model.Model",
  "calculate_group",
  "click.Choice",
  "click.Group",
  "click.IntRange",
  "click.ParamType",
  "click.Path",
  "click.argument",
  "click.confirm",
  "click.echo",
  "click.group",
  "click.option",
  "click.pause",
  "click.prompt",
  "click.version_option",
  "collections.OrderedDict",
  "collections.deque",
  "collections.namedtuple",
  "commands.optimize.optimize_cmd",
  "commands.pluginlist.plugin_list_cmd",
  "commands.print.print_cmd",
  "commands.validate.validate_cmd",
  "copy.copy",
  "copy.deepcopy",
  "ctypes.CFUNCTYPE",
  "ctypes.c_double",
  "dataset_descriptor.DatasetDescriptor",
  "enum.Enum",
  "f",
  "format_parameter",
  "functools.wraps",
  "glotaran.ParameterGroup",
  "glotaran.analysis.nnls.residual_nnls",
  "glotaran.analysis.optimize.SUPPORTED_METHODS",
  "glotaran.analysis.optimize.optimize",
  "glotaran.analysis.optimize.optimize_problem",
  "glotaran.analysis.problem.GroupedBag",
  "glotaran.analysis.problem.GroupedProblem",
  "glotaran.analysis.problem.GroupedProblemDescriptor",
  "glotaran.analysis.problem.LabelAndMatrix",
  "glotaran.analysis.problem.ParameterError",
  "glotaran.analysis.problem.Problem",
  "glotaran.analysis.problem.ProblemDescriptor",
  "glotaran.analysis.problem.UngroupedBag",
  "glotaran.analysis.problem._calculate_matrix",
  "glotaran.analysis.problem._combine_matrices",
  "glotaran.analysis.problem._find_closest_index",
  "glotaran.analysis.problem._find_overlap",
  "glotaran.analysis.problem._reduce_matrix",
  "glotaran.analysis.scheme.Scheme",
  "glotaran.analysis.scheme.Scheme.from_yaml_file",
  "glotaran.analysis.scheme._get_min_max_from_interval",
  "glotaran.analysis.simulation.simulate",
  "glotaran.analysis.test.models.DecayDatasetDescriptor",
  "glotaran.analysis.test.models.DecayModel",
  "glotaran.analysis.test.models.GaussianDecayModel",
  "glotaran.analysis.test.models.GaussianShapeDecayDatasetDescriptor",
  "glotaran.analysis.test.models.MultichannelMulticomponentDecay",
  "glotaran.analysis.test.models.OneCompartmentDecay",
  "glotaran.analysis.test.models.SimpleTestMegacomplex",
  "glotaran.analysis.test.models.SimpleTestModel.from_dict",
  "glotaran.analysis.test.models.ThreeDatasetDecay",
  "glotaran.analysis.test.models.TwoCompartmentDecay",
  "glotaran.analysis.test.models.additional_penalty_typecheck",
  "glotaran.analysis.test.models.calculate_c",
  "glotaran.analysis.test.models.calculate_e",
  "glotaran.analysis.test.models.calculate_kinetic",
  "glotaran.analysis.test.models.calculate_spectral_gauss",
  "glotaran.analysis.test.models.calculate_spectral_simple",
  "glotaran.analysis.test.models.constrain_matrix_function_typecheck",
  "glotaran.analysis.test.models.retrieve_clp_typecheck",
  "glotaran.analysis.test.test_problem.problem",
  "glotaran.analysis.variable_projection.residual_variable_projection",
  "glotaran.builtin.file_formats.ascii.test.test_explicit_file_reader.DATA_DIR",
  "glotaran.builtin.file_formats.ascii.test.test_explicit_file_reader.TEST_BLOCK_2x2_BOTTOM_RIGHT",
  "glotaran.builtin.file_formats.ascii.test.test_explicit_file_reader.TEST_BLOCK_2x2_TOP_LEFT",
  "glotaran.builtin.file_formats.ascii.test.test_explicit_file_reader.TEST_FILE_ASCII",
  "glotaran.builtin.file_formats.ascii.wavelength_time_explicit_file.DataFileType",
  "glotaran.builtin.file_formats.ascii.wavelength_time_explicit_file.ExplicitFile",
  "glotaran.builtin.file_formats.ascii.wavelength_time_explicit_file.TimeExplicitFile",
  "glotaran.builtin.file_formats.ascii.wavelength_time_explicit_file.WavelengthExplicitFile",
  "glotaran.builtin.file_formats.ascii.wavelength_time_explicit_file.get_data_file_format",
  "glotaran.builtin.file_formats.sdt.sdt_file_reader.read_sdt",
  "glotaran.builtin.file_formats.sdt.test.DATA_DIR",
  "glotaran.builtin.file_formats.sdt.test.test_file_readers.TEMPORAL_DATA",
  "glotaran.builtin.models.kinetic_image.KineticImageModel.from_dict",
  "glotaran.builtin.models.kinetic_image.initial_concentration.InitialConcentration",
  "glotaran.builtin.models.kinetic_image.irf.Irf.add_type",
  "glotaran.builtin.models.kinetic_image.irf.IrfGaussian",
  "glotaran.builtin.models.kinetic_image.irf.IrfMeasured",
  "glotaran.builtin.models.kinetic_image.irf.IrfMultiGaussian",
  "glotaran.builtin.models.kinetic_image.k_matrix.KMatrix",
  "glotaran.builtin.models.kinetic_image.kinetic_image_dataset_descriptor.KineticImageDatasetDescriptor",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix._calculate_for_k_matrix",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix._dble",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.calculate_kinetic_matrix_gaussian_irf",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.calculate_kinetic_matrix_no_irf",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.erf",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.erf_addr",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.erfcx",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.erfcx_addr",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.functype",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.kinetic_image_matrix",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.kinetic_matrix",
  "glotaran.builtin.models.kinetic_image.kinetic_image_matrix.sqrt2",
  "glotaran.builtin.models.kinetic_image.kinetic_image_result.retrieve_decay_assocatiated_data",
  "glotaran.builtin.models.kinetic_image.kinetic_image_result.retrieve_irf",
  "glotaran.builtin.models.kinetic_image.kinetic_image_result.retrieve_species_assocatiated_data",
  "glotaran.builtin.models.kinetic_image.test.test_k_matrix.ParallelModel",
  "glotaran.builtin.models.kinetic_image.test.test_k_matrix.ParallelModelWithEquilibria",
  "glotaran.builtin.models.kinetic_image.test.test_k_matrix.SequentialModel",
  "glotaran.builtin.models.kinetic_image.test.test_k_matrix.SequentialModelWithBacktransfer",
  "glotaran.builtin.models.kinetic_image.test.test_kinetic_image_model.OneComponentOneChannel",
  "glotaran.builtin.models.kinetic_image.test.test_kinetic_image_model.OneComponentOneChannelGaussianIrf",
  "glotaran.builtin.models.kinetic_image.test.test_kinetic_image_model.ThreeComponentParallel",
  "glotaran.builtin.models.kinetic_image.test.test_kinetic_image_model.ThreeComponentSequential",
  "glotaran.builtin.models.kinetic_image.test.test_kinetic_image_model._create_gaussian_clp",
  "glotaran.builtin.models.kinetic_spectrum.KineticSpectrumModel.from_dict",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_matrix.kinetic_spectrum_matrix",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_model.apply_kinetic_model_constraints",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_model.grouped",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_model.has_kinetic_model_constraints",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_model.index_dependent",
  "glotaran.builtin.models.kinetic_spectrum.kinetic_spectrum_model.retrieve_spectral_clps",
  "glotaran.builtin.models.kinetic_spectrum.spectral_constraints.OnlyConstraint",
  "glotaran.builtin.models.kinetic_spectrum.spectral_constraints.ZeroConstraint",
  "glotaran.builtin.models.kinetic_spectrum.spectral_constraints.apply_spectral_constraints",
  "glotaran.builtin.models.kinetic_spectrum.spectral_irf.IrfGaussianCoherentArtifact",
  "glotaran.builtin.models.kinetic_spectrum.spectral_irf.IrfSpectralGaussian",
  "glotaran.builtin.models.kinetic_spectrum.spectral_irf.IrfSpectralMultiGaussian",
  "glotaran.builtin.models.kinetic_spectrum.spectral_penalties._get_area",
  "glotaran.builtin.models.kinetic_spectrum.spectral_penalties._get_idx_from_interval",
  "glotaran.builtin.models.kinetic_spectrum.spectral_relations.create_spectral_relation_matrix",
  "glotaran.builtin.models.kinetic_spectrum.spectral_shape.SpectralShapeGaussian",
  "glotaran.builtin.models.kinetic_spectrum.spectral_shape.SpectralShapeOne",
  "glotaran.builtin.models.kinetic_spectrum.spectral_shape.SpectralShapeZero",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_1C_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_1C_GAUSSIAN_IRF",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_1C_NO_IRF",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_3C_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_3C_PARALLEL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.MODEL_3C_SEQUENTIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.OneComponentOneChannel",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.OneComponentOneChannelGaussianIrf",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_1C_GAUSSIAN_IRF_INITIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_1C_GAUSSIAN_WANTED",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_1C_INITIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_1C_NO_IRF_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_1C_WANTED",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_BASE_PARALLEL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_BASE_SEQUENTIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_INITIAL_PARALLEL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_INITIAL_SEQUENTIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_PARALLEL_WANTED",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.PARAMETERS_3C_SIM_SEQUENTIAL",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.ThreeComponentParallel",
  "glotaran.builtin.models.kinetic_spectrum.test.test_kinetic_spectrum_model.ThreeComponentSequential",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.MODEL_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.MODEL_MULTI_IRF_DISPERSION",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.MODEL_SIMPLE_IRF_DISPERSION",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.MultiIrfDispersion",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.PARAMETERS_BASE",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.PARAMETERS_MULTI_IRF_DISPERSION",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.PARAMETERS_SIMPLE_IRF_DISPERSION",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_irf.SimpleIrfDispersion",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.DatasetSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.IrfSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.ModelSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.NoiseSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.OptimizationSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.ParameterSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.ShapeSpec",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.plot_overview",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.test__get_idx_from_interval",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_penalties.test_equal_area_penalties",
  "glotaran.builtin.models.kinetic_spectrum.test.test_spectral_relations.test_spectral_relation",
  "glotaran.cli.commands.util.ValOrRangeOrList",
  "glotaran.cli.commands.util._load_file",
  "glotaran.cli.main.Cli",
  "glotaran.cli.main.glotaran",
  "glotaran.io.prepare_dataset.prepare_time_trace_dataset",
  "glotaran.io.prepare_time_trace_dataset",
  "glotaran.io.read_data_file",
  "glotaran.io.reader.Reader",
  "glotaran.io.reader.file_reader",
  "glotaran.io.reader.known_reading_formats",
  "glotaran.io.reader.known_reading_formats.keys",
  "glotaran.io.reader.known_reading_formats.values",
  "glotaran.model.DatasetDescriptor",
  "glotaran.model.Model",
  "glotaran.model.attribute._create_add_type_func",
  "glotaran.model.attribute._create_fill_func",
  "glotaran.model.attribute._create_from_dict_func",
  "glotaran.model.attribute._create_from_list_func",
  "glotaran.model.attribute._create_get_state_func",
  "glotaran.model.attribute._create_init_func",
  "glotaran.model.attribute._create_mprint_func",
  "glotaran.model.attribute._create_set_state_func",
  "glotaran.model.attribute._create_validation_func",
  "glotaran.model.base_model.Model",
  "glotaran.model.decorator.ConstrainMatrixFunction",
  "glotaran.model.decorator.FinalizeFunction",
  "glotaran.model.decorator.GlobalMatrixFunction",
  "glotaran.model.decorator.IndexDependentMatrixFunction",
  "glotaran.model.decorator.MatrixFunction",
  "glotaran.model.decorator.PenaltyFunction",
  "glotaran.model.decorator.RetrieveClpFunction",
  "glotaran.model.decorator._create_add_func",
  "glotaran.model.decorator._create_get_func",
  "glotaran.model.decorator._create_init_func",
  "glotaran.model.decorator._create_property_for_attribute",
  "glotaran.model.decorator._create_set_func",
  "glotaran.model.model",
  "glotaran.model.model.additional_penalty_function_called",
  "glotaran.model.model.constrain_matrix_function_called",
  "glotaran.model.model.dataset",
  "glotaran.model.model.index_dependent",
  "glotaran.model.model.irf.values",
  "glotaran.model.model.is_grouped",
  "glotaran.model.model.is_index_dependent",
  "glotaran.model.model.retrieve_clp_function_called",
  "glotaran.model.model.spectral_constraints",
  "glotaran.model.model.spectral_relations",
  "glotaran.model.model.weights",
  "glotaran.model.model_attribute",
  "glotaran.model.model_attribute_typed",
  "glotaran.parameter.Parameter",
  "glotaran.parameter.ParameterGroup",
  "glotaran.parameter.ParameterGroup.from_dict",
  "glotaran.parameter.ParameterGroup.from_file",
  "glotaran.parameter.ParameterGroup.from_list",
  "glotaran.parameter.parameter.Keys",
  "glotaran.parameter.parameter.Parameter",
  "glotaran.parameter.parameter.RESERVED_LABELS",
  "glotaran.parameter.parameter._log_value",
  "glotaran.parameter.parameter._match_scientific",
  "glotaran.parameter.parameter._retrieve_from_list_by_type",
  "glotaran.parameter.parameter._sanatize_parameter_list",
  "glotaran.parameter.parameter_group.ParameterGroup",
  "glotaran.parameter.parameter_group.ParameterNotFoundException",
  "glotaran.parse.parser.parse_spec",
  "glotaran.parse.parser.parse_yaml",
  "glotaran.parse.parser.parse_yaml_file",
  "glotaran.parse.register._model_register",
  "glotaran.parse.register.known_model_names",
  "glotaran.parse.register.register_model",
  "glotaran.parse.util.list_string_to_tuple",
  "glotaran.parse.util.match_elements_in_string_of_list",
  "glotaran.parse.util.name_pattern",
  "glotaran.parse.util.number_pattern",
  "glotaran.parse.util.sanitize_dict_keys",
  "glotaran.parse.util.sanitize_dict_values",
  "glotaran.parse.util.sanitize_list_with_broken_tuples",
  "glotaran.parse.util.sanitize_yaml",
  "glotaran.parse.util.string_to_tuple",
  "glotaran.parse.util.tuple_name_pattern",
  "glotaran.parse.util.tuple_number_pattern",
  "glotaran.read_model_from_yaml",
  "glotaran.read_model_from_yaml_file",
  "glotaran.read_parameters_from_yaml",
  "importlib.util.find_spec",
  "initial_concentration.InitialConcentration",
  "inspect.signature",
  "irf.Irf",
  "irf.IrfMultiGaussian",
  "itertools.chain",
  "itertools.islice",
  "itertools.product",
  "k_matrix.KMatrix",
  "kinetic_image.irf.IrfMultiGaussian",
  "kinetic_image.kinetic_image_megacomplex.KineticImageMegacomplex",
  "kinetic_image.kinetic_image_model.KineticImageModel",
  "kinetic_image.kinetic_image_result.retrieve_decay_assocatiated_data",
  "kinetic_image.kinetic_image_result.retrieve_irf",
  "kinetic_image.kinetic_image_result.retrieve_species_assocatiated_data",
  "kinetic_image_dataset_descriptor.KineticImageDatasetDescriptor",
  "kinetic_image_matrix.kinetic_image_matrix",
  "kinetic_image_megacomplex.KineticImageMegacomplex",
  "kinetic_image_result.finalize_kinetic_image_result",
  "kinetic_spectrum_dataset_descriptor.KineticSpectrumDatasetDescriptor",
  "kinetic_spectrum_matrix.kinetic_spectrum_matrix",
  "kinetic_spectrum_model.KineticSpectrumModel",
  "kinetic_spectrum_result.finalize_kinetic_spectrum_result",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "model_set",
  "models.MultichannelMulticomponentDecay.c_axis",
  "models.MultichannelMulticomponentDecay.c_axis.size",
  "models.MultichannelMulticomponentDecay.e_axis",
  "models.MultichannelMulticomponentDecay.e_axis.size",
  "models.MultichannelMulticomponentDecay.initial_parameters",
  "models.MultichannelMulticomponentDecay.model",
  "models.MultichannelMulticomponentDecay.sim_model",
  "models.MultichannelMulticomponentDecay.wanted_parameters",
  "models.SimpleTestModel.from_dict",
  "numba.extending.get_cython_function_address",
  "numba.jit",
  "numba.prange",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.concatenate",
  "numpy.delete",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.diagonal",
  "numpy.dot",
  "numpy.empty",
  "numpy.exp",
  "numpy.float64",
  "numpy.geomspace",
  "numpy.inf",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isreal",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.inv",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.log",
  "numpy.multiply",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.object",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.pi",
  "numpy.power",
  "numpy.prod",
  "numpy.random.normal",
  "numpy.random.seed",
  "numpy.savetxt",
  "numpy.sqrt",
  "numpy.square",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.transpose",
  "numpy.uint16",
  "numpy.vstack",
  "numpy.zeros",
  "os.makedirs",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "pandas.DataFrame",
  "pandas.read_csv",
  "parameter.Parameter",
  "parameter.Parameter.from_list_or_value",
  "parameter.Parameter.valid_label",
  "parameter.ParameterGroup",
  "parameter_group.ParameterGroup",
  "parse.parser.load_yaml",
  "parse.parser.load_yaml_file",
  "pathlib.Path",
  "pkg_resources.iter_entry_points",
  "prepare_dataset.prepare_time_trace_dataset",
  "problem.Problem",
  "property.ModelProperty",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.warns",
  "re.ASCII",
  "re.compile",
  "re.search",
  "reader.read_data_file",
  "register.get_model",
  "register.known_model",
  "result.Result",
  "scheme.Scheme",
  "scipy.linalg.eig",
  "scipy.linalg.lapack.dgeqrf",
  "scipy.linalg.lapack.dormqr",
  "scipy.linalg.lapack.dtrtrs",
  "scipy.linalg.solve",
  "scipy.optimize.OptimizeResult",
  "scipy.optimize.least_squares",
  "scipy.optimize.nnls",
  "sdtfile.SdtFile",
  "spectral_constraints.SpectralConstraint",
  "spectral_constraints.apply_spectral_constraints",
  "spectral_irf.IrfGaussianCoherentArtifact",
  "spectral_irf.IrfSpectralMultiGaussian",
  "spectral_matrix.spectral_matrix",
  "spectral_penalties.EqualAreaPenalty",
  "spectral_penalties.apply_spectral_penalties",
  "spectral_penalties.has_spectral_penalties",
  "spectral_relations.SpectralRelation",
  "spectral_relations.apply_spectral_relations",
  "spectral_relations.retrieve_related_clps",
  "spectral_shape.SpectralShape",
  "sys.exit",
  "type.__args__",
  "type.__name__",
  "type.__origin__",
  "type._glotaran_model_attribute_types.values",
  "typing.Any",
  "typing.Callable",
  "typing.Deque",
  "typing.Dict",
  "typing.Generator",
  "typing.List",
  "typing.Literal",
  "typing.NamedTuple",
  "typing.Sequence",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "util.VALORRANGEORLIST",
  "util.load_dataset",
  "util.load_dataset_file",
  "util.load_model_file",
  "util.load_parameter_file",
  "util.load_parameters_file",
  "util.load_scheme_file",
  "util.select_data",
  "util.select_name",
  "util.signature_analysis",
  "util.wrap_func_as_method",
  "util.write_data",
  "warnings.warn",
  "weight.Weight",
  "xarray.DataArray",
  "xarray.Dataset",
  "yaml.safe_load"
 ],
 "deps": {
  "add": [],
  "applies": [],
  "asteval": [],
  "attribute": [],
  "base_model": [],
  "calculate_group": [],
  "click": [],
  "collections": [],
  "commands": [],
  "copy": [],
  "ctypes": [],
  "dataset_descriptor": [],
  "enum": [],
  "f": [],
  "format_parameter": [],
  "functools": [],
  "glotaran": [],
  "importlib": [],
  "initial_concentration": [],
  "inspect": [],
  "irf": [],
  "itertools": [],
  "k_matrix": [],
  "kinetic_image": [],
  "kinetic_image_dataset_descriptor": [],
  "kinetic_image_matrix": [],
  "kinetic_image_megacomplex": [],
  "kinetic_image_result": [],
  "kinetic_spectrum_dataset_descriptor": [],
  "kinetic_spectrum_matrix": [],
  "kinetic_spectrum_model": [],
  "kinetic_spectrum_result": [],
  "matplotlib": [],
  "model_set": [],
  "models": [],
  "numba": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "parameter": [],
  "parameter_group": [],
  "parse": [],
  "pathlib": [],
  "pkg_resources": [],
  "prepare_dataset": [],
  "problem": [],
  "property": [],
  "pytest": [],
  "re": [],
  "reader": [],
  "register": [],
  "result": [],
  "scheme": [],
  "scipy": [],
  "sdtfile": [],
  "spectral_constraints": [],
  "spectral_irf": [],
  "spectral_matrix": [],
  "spectral_penalties": [],
  "spectral_relations": [],
  "spectral_shape": [],
  "sys": [],
  "type": [],
  "typing": [],
  "util": [],
  "warnings": [],
  "weight": [],
  "xarray": [],
  "yaml": []
 }
}