{
 "bad": [
  "Exception.__init__",
  "SectionContext",
  "StdoutFilter",
  "_get_ignore_decorators",
  "_get_matches",
  "_get_set",
  "_suspected_as_section",
  "add_check",
  "ast.literal_eval",
  "ast.parse",
  "checker.check",
  "cls",
  "collections.abc.Set",
  "collections.namedtuple",
  "config.ConfigurationParser",
  "config.IllegalConfiguration",
  "configparser.RawConfigParser",
  "copy.deepcopy",
  "functools.partial",
  "io.StringIO",
  "itertools.chain",
  "itertools.dropwhile",
  "itertools.permutations",
  "itertools.takewhile",
  "itertools.tee",
  "itertools.zip_longest",
  "logging.DEBUG",
  "logging.Filter",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "match",
  "match_dir",
  "method",
  "option",
  "optparse.OptionGroup",
  "optparse.OptionParser",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.walk",
  "parser.AllError",
  "parser.Class",
  "parser.Definition",
  "parser.Function",
  "parser.Method",
  "parser.Module",
  "parser.NestedClass",
  "parser.NestedFunction",
  "parser.Package",
  "parser.ParseError",
  "parser.Parser",
  "parser.StringIO",
  "pkgutil.get_data",
  "pydocstyle.__main__.main",
  "pydocstyle.checker.ConventionChecker",
  "pydocstyle.checker.check_for",
  "pydocstyle.checker.get_function_args",
  "pydocstyle.checker.get_leading_words",
  "pydocstyle.checker.is_ascii",
  "pydocstyle.checker.leading_space",
  "pydocstyle.checker.parse",
  "pydocstyle.checker.string",
  "pydocstyle.cli.ReturnCode",
  "pydocstyle.cli.main",
  "pydocstyle.cli.run_pydocstyle",
  "pydocstyle.cli.setup_stream_handlers",
  "pydocstyle.config.CheckConfiguration",
  "pydocstyle.config.IllegalConfiguration",
  "pydocstyle.config.RunConfiguration",
  "pydocstyle.config.check_initialized",
  "pydocstyle.parser.Class",
  "pydocstyle.parser.Decorator",
  "pydocstyle.parser.Definition",
  "pydocstyle.parser.Docstring",
  "pydocstyle.parser.Function",
  "pydocstyle.parser.Method",
  "pydocstyle.parser.Module",
  "pydocstyle.parser.Package",
  "pydocstyle.parser.ParseError",
  "pydocstyle.parser.Token",
  "pydocstyle.parser.TokenKind",
  "pydocstyle.parser.TokenStream",
  "pydocstyle.parser.UnexpectedTokenError",
  "pydocstyle.parser.Value",
  "pydocstyle.parser.humanize",
  "pydocstyle.utils.NON_ALPHANUMERIC_STRIP_RE",
  "pydocstyle.violations.AttrDict",
  "pydocstyle.violations.D1xx",
  "pydocstyle.violations.D2xx",
  "pydocstyle.violations.D3xx",
  "pydocstyle.violations.D4xx",
  "pydocstyle.violations.Error",
  "pydocstyle.violations.ErrorParams",
  "pydocstyle.violations.ErrorRegistry",
  "pydocstyle.violations.all_errors",
  "pydocstyle.wordlists.COMMENT_RE",
  "pydocstyle.wordlists.load_wordlist",
  "pydocstyle.wordlists.make_imperative_verbs_dict",
  "pydocstyle.wordlists.stem",
  "re.compile",
  "snowballstemmer.stemmer",
  "str.__new__",
  "string.ascii_letters",
  "sys.exit",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.write",
  "sys.version_info",
  "textwrap.dedent",
  "this_check",
  "this_check.__doc__.partition",
  "this_check._terminal",
  "tokenize.COMMENT",
  "tokenize.DEDENT",
  "tokenize.DOT",
  "tokenize.ENDMARKER",
  "tokenize.INDENT",
  "tokenize.NAME",
  "tokenize.NEWLINE",
  "tokenize.NL",
  "tokenize.OP",
  "tokenize.STRING",
  "tokenize.TokenError",
  "tokenize.generate_tokens",
  "tokenize.open",
  "tokenize.tok_name",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Iterable",
  "typing.Iterator",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "utils.__version__",
  "utils.common_prefix_length",
  "utils.is_blank",
  "utils.log",
  "utils.log.addHandler",
  "utils.log.debug",
  "utils.log.error",
  "utils.log.handlers",
  "utils.log.info",
  "utils.log.setLevel",
  "utils.log.warning",
  "utils.pairwise",
  "utils.strip_non_alphanumeric",
  "violations.D100",
  "violations.D101",
  "violations.D102",
  "violations.D103",
  "violations.D104",
  "violations.D105",
  "violations.D106",
  "violations.D107",
  "violations.D200",
  "violations.D201",
  "violations.D202",
  "violations.D203",
  "violations.D204",
  "violations.D205",
  "violations.D206",
  "violations.D207",
  "violations.D208",
  "violations.D209",
  "violations.D210",
  "violations.D211",
  "violations.D212",
  "violations.D213",
  "violations.D214",
  "violations.D215",
  "violations.D300",
  "violations.D301",
  "violations.D302",
  "violations.D400",
  "violations.D401",
  "violations.D401b",
  "violations.D402",
  "violations.D403",
  "violations.D404",
  "violations.D405",
  "violations.D406",
  "violations.D407",
  "violations.D408",
  "violations.D409",
  "violations.D410",
  "violations.D411",
  "violations.D412",
  "violations.D413",
  "violations.D414",
  "violations.D415",
  "violations.D416",
  "violations.D417",
  "violations.Error.explain",
  "violations.Error.source",
  "violations.ErrorRegistry.get_error_codes",
  "violations.conventions",
  "violations.conventions.keys",
  "violations.conventions.pep257",
  "wordlists.IMPERATIVE_BLACKLIST",
  "wordlists.IMPERATIVE_VERBS.get",
  "wordlists.stem"
 ],
 "deps": {
  "Exception": [],
  "SectionContext": [],
  "StdoutFilter": [],
  "_get_ignore_decorators": [],
  "_get_matches": [],
  "_get_set": [],
  "_suspected_as_section": [],
  "add_check": [],
  "ast": [],
  "checker": [],
  "cls": [],
  "collections": [],
  "config": [],
  "configparser": [],
  "copy": [],
  "functools": [],
  "io": [],
  "itertools": [],
  "logging": [],
  "match": [],
  "match_dir": [],
  "method": [],
  "option": [],
  "optparse": [],
  "os": [],
  "parser": [],
  "pkgutil": [],
  "pydocstyle": [],
  "re": [],
  "snowballstemmer": [],
  "str": [],
  "string": [],
  "sys": [],
  "textwrap": [],
  "this_check": [],
  "tokenize": [],
  "typing": [],
  "utils": [],
  "violations": [],
  "wordlists": []
 }
}