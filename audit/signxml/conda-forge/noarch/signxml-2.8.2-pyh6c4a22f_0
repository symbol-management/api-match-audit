{
 "bad": [
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "__future__.unicode_literals",
  "base64.b64decode",
  "base64.b64encode",
  "certifi",
  "certifi.where",
  "collections.namedtuple",
  "cryptography.exceptions",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.dsa",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP192R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP224R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP384R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP521R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT163K1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT233K1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT233R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT283R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT409K1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT409R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECT571K1",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.utils",
  "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature",
  "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.Hash",
  "cryptography.hazmat.primitives.hashes.SHA1",
  "cryptography.hazmat.primitives.hashes.SHA224",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hashes.SHA384",
  "cryptography.hazmat.primitives.hashes.SHA512",
  "cryptography.hazmat.primitives.hmac",
  "cryptography.hazmat.primitives.hmac.HMAC",
  "cryptography.hazmat.primitives.serialization.load_der_public_key",
  "cryptography.hazmat.primitives.serialization.load_pem_private_key",
  "curve_class",
  "dict.__getitem__",
  "eight.bytes",
  "eight.str",
  "enum.Enum",
  "long",
  "lxml.etree",
  "lxml.etree.Element",
  "lxml.etree.Entity",
  "lxml.etree.SubElement",
  "lxml.etree.XMLParser",
  "lxml.etree.XMLSchema",
  "lxml.etree.XMLSyntaxError",
  "lxml.etree.fromstring",
  "lxml.etree.parse",
  "lxml.etree.tostring",
  "math",
  "math.ceil",
  "os",
  "os.path.dirname",
  "os.path.join",
  "pack",
  "re",
  "re.S",
  "re.compile",
  "re.findall",
  "re.search",
  "signxml.__init__.InvalidCertificate",
  "signxml.__init__.InvalidDigest",
  "signxml.__init__.InvalidInput",
  "signxml.__init__.InvalidSignature",
  "signxml.__init__.Namespace",
  "signxml.__init__.VerifyResult",
  "signxml.__init__.XMLProcessor",
  "signxml.__init__.XMLSignatureProcessor",
  "signxml.__init__._remove_sig",
  "signxml.__init__.add_pem_header",
  "signxml.__init__.bits_to_bytes_unit",
  "signxml.__init__.bytes_to_long",
  "signxml.__init__.ds_tag",
  "signxml.__init__.dsig11_tag",
  "signxml.__init__.ec_tag",
  "signxml.__init__.ensure_bytes",
  "signxml.__init__.ensure_str",
  "signxml.__init__.iterate_pem",
  "signxml.__init__.long_to_bytes",
  "signxml.__init__.methods",
  "signxml.__init__.namespaces",
  "signxml.__init__.strip_pem_header",
  "signxml.__init__.verify_x509_cert_chain",
  "signxml.util.__init__.InvalidCertificate",
  "signxml.util.__init__.InvalidInput",
  "signxml.util.__init__.PEM_FOOTER",
  "signxml.util.__init__.PEM_HEADER",
  "signxml.util.__init__.RedundantCert",
  "signxml.util.__init__.USING_PYTHON2",
  "signxml.util.__init__._add_cert_to_store",
  "signxml.util.__init__.ensure_bytes",
  "signxml.util.__init__.ensure_str",
  "signxml.util.__init__.hmac_sha1",
  "signxml.util.__init__.pem_regexp",
  "signxml.util.__init__.raw_p_sha1",
  "struct",
  "struct.pack",
  "struct.unpack",
  "sys",
  "sys.version_info",
  "textwrap",
  "textwrap.fill",
  "unpack",
  "xml.etree.ElementTree",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.tostring"
 ],
 "deps": {
  "OpenSSL": [
   "pyopenssl/conda-forge/noarch/pyopenssl-19.1.0-py_1"
  ],
  "__future__": [],
  "base64": [],
  "certifi": [],
  "collections": [],
  "cryptography": [],
  "curve_class": [],
  "dict": [],
  "eight": [],
  "enum": [],
  "long": [],
  "lxml": [],
  "math": [],
  "os": [],
  "pack": [],
  "re": [],
  "signxml": [],
  "struct": [],
  "sys": [],
  "textwrap": [],
  "unpack": [],
  "xml": []
 }
}