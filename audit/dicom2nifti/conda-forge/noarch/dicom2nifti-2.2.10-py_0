{
 "bad": [
  "dicom.charset.python_encoding.update",
  "dicom2nifti.common._get_slice_pixeldata",
  "dicom2nifti.common.apply_scaling",
  "dicom2nifti.common.create_affine",
  "dicom2nifti.common.do_scaling",
  "dicom2nifti.common.get_fd_array_value",
  "dicom2nifti.common.get_fd_value",
  "dicom2nifti.common.get_fl_value",
  "dicom2nifti.common.get_is_value",
  "dicom2nifti.common.get_nifti_data",
  "dicom2nifti.common.get_numpy_type",
  "dicom2nifti.common.get_ss_value",
  "dicom2nifti.common.get_volume_pixeldata",
  "dicom2nifti.common.is_ge",
  "dicom2nifti.common.is_hitachi",
  "dicom2nifti.common.is_multiframe_dicom",
  "dicom2nifti.common.is_orthogonal",
  "dicom2nifti.common.is_orthogonal_nifti",
  "dicom2nifti.common.is_philips",
  "dicom2nifti.common.is_siemens",
  "dicom2nifti.common.is_slice_increment_inconsistent",
  "dicom2nifti.common.is_valid_imaging_dicom",
  "dicom2nifti.common.logger",
  "dicom2nifti.common.read_dicom_directory",
  "dicom2nifti.common.set_tr_te",
  "dicom2nifti.common.sort_dicoms",
  "dicom2nifti.common.validate_instance_number",
  "dicom2nifti.common.validate_orientation",
  "dicom2nifti.common.validate_orthogonal",
  "dicom2nifti.common.validate_slice_increment",
  "dicom2nifti.common.validate_slicecount",
  "dicom2nifti.common.write_bval_file",
  "dicom2nifti.common.write_bvec_file",
  "dicom2nifti.compressed_dicom._compress_dicom",
  "dicom2nifti.compressed_dicom._decompress_dicom",
  "dicom2nifti.compressed_dicom._get_gdcmconv",
  "dicom2nifti.compressed_dicom._is_compressed",
  "dicom2nifti.compressed_dicom._which",
  "dicom2nifti.compressed_dicom.is_dicom_file",
  "dicom2nifti.compressed_dicom.logger",
  "dicom2nifti.compressed_dicom.read_file",
  "dicom2nifti.convert_dicom.Vendor",
  "dicom2nifti.convert_dicom._get_vendor",
  "dicom2nifti.convert_dicom.are_imaging_dicoms",
  "dicom2nifti.convert_dicom.dicom_array_to_nifti",
  "dicom2nifti.convert_dicom.logger",
  "dicom2nifti.convert_dir._is_valid_imaging_dicom",
  "dicom2nifti.convert_dir._remove_accents",
  "dicom2nifti.convert_dir.logger",
  "dicom2nifti.convert_ge._4d_to_nifti",
  "dicom2nifti.convert_ge._create_bvals_bvecs",
  "dicom2nifti.convert_ge._get_bvals_bvecs",
  "dicom2nifti.convert_ge._get_full_block",
  "dicom2nifti.convert_ge._get_grouped_dicoms",
  "dicom2nifti.convert_ge._is_4d",
  "dicom2nifti.convert_ge._is_diffusion_imaging",
  "dicom2nifti.convert_ge._timepoint_to_block",
  "dicom2nifti.convert_ge.dicom_to_nifti",
  "dicom2nifti.convert_ge.logger",
  "dicom2nifti.convert_generic._convert_slice_incement_inconsistencies",
  "dicom2nifti.convert_generic.dicom_to_nifti",
  "dicom2nifti.convert_generic.logger",
  "dicom2nifti.convert_generic.remove_duplicate_slices",
  "dicom2nifti.convert_generic.remove_localizers_by_imagetype",
  "dicom2nifti.convert_generic.remove_localizers_by_orientation",
  "dicom2nifti.convert_hitachi.dicom_to_nifti",
  "dicom2nifti.convert_hitachi.logger",
  "dicom2nifti.convert_philips._assert_explicit_vr",
  "dicom2nifti.convert_philips._create_affine_multiframe",
  "dicom2nifti.convert_philips._create_bvals_bvecs",
  "dicom2nifti.convert_philips._create_singleframe_bvals_bvecs",
  "dicom2nifti.convert_philips._fix_diffusion_images",
  "dicom2nifti.convert_philips._get_grouped_dicoms",
  "dicom2nifti.convert_philips._get_t_position_index",
  "dicom2nifti.convert_philips._is_bval_type_a",
  "dicom2nifti.convert_philips._is_bval_type_b",
  "dicom2nifti.convert_philips._is_float",
  "dicom2nifti.convert_philips._is_multiframe_4d",
  "dicom2nifti.convert_philips._is_multiframe_anatomical",
  "dicom2nifti.convert_philips._is_multiframe_diffusion_imaging",
  "dicom2nifti.convert_philips._is_singleframe_4d",
  "dicom2nifti.convert_philips._is_singleframe_diffusion_imaging",
  "dicom2nifti.convert_philips._multiframe_to_block",
  "dicom2nifti.convert_philips._multiframe_to_nifti",
  "dicom2nifti.convert_philips._singleframe_to_block",
  "dicom2nifti.convert_philips._singleframe_to_nifti",
  "dicom2nifti.convert_philips._stack_to_block",
  "dicom2nifti.convert_philips.dicom_to_nifti",
  "dicom2nifti.convert_philips.logger",
  "dicom2nifti.convert_siemens.MosaicType",
  "dicom2nifti.convert_siemens._classic_4d_to_nifti",
  "dicom2nifti.convert_siemens._classic_get_full_block",
  "dicom2nifti.convert_siemens._classic_get_grouped_dicoms",
  "dicom2nifti.convert_siemens._classic_timepoint_to_block",
  "dicom2nifti.convert_siemens._create_affine_siemens_mosaic",
  "dicom2nifti.convert_siemens._create_bvals",
  "dicom2nifti.convert_siemens._create_bvecs",
  "dicom2nifti.convert_siemens._get_asconv_headers",
  "dicom2nifti.convert_siemens._get_mosaic_type",
  "dicom2nifti.convert_siemens._get_sorted_mosaics",
  "dicom2nifti.convert_siemens._is_4d",
  "dicom2nifti.convert_siemens._is_classic_4d",
  "dicom2nifti.convert_siemens._is_diffusion_imaging",
  "dicom2nifti.convert_siemens._is_mosaic",
  "dicom2nifti.convert_siemens._mosaic_4d_to_nifti",
  "dicom2nifti.convert_siemens._mosaic_get_full_block",
  "dicom2nifti.convert_siemens._mosaic_to_block",
  "dicom2nifti.convert_siemens.dicom_to_nifti",
  "dicom2nifti.convert_siemens.logger",
  "dicom2nifti.exceptions.ConversionError",
  "dicom2nifti.exceptions.ConversionValidationError",
  "dicom2nifti.image_reorientation._reorient_3d",
  "dicom2nifti.image_reorientation._reorient_4d",
  "dicom2nifti.image_reorientation.reorient_image",
  "dicom2nifti.image_volume.ImageVolume",
  "dicom2nifti.image_volume.Slice",
  "dicom2nifti.image_volume.SliceOrientation",
  "dicom2nifti.image_volume.SliceType",
  "dicom2nifti.image_volume.SliceType.AXIAL",
  "dicom2nifti.image_volume.__calc_most_likely_direction__",
  "dicom2nifti.image_volume.load",
  "dicom2nifti.patch_pydicom_encodings.apply",
  "dicom2nifti.resample._create_affine",
  "dicom2nifti.resample.resample_nifti_images",
  "dicom2nifti.resample.resample_single_nifti",
  "dicom2nifti.settings.gdcmconv_path",
  "dicom2nifti.settings.pydicom_read_force",
  "dicom2nifti.settings.resample",
  "dicom2nifti.settings.resample_padding",
  "dicom2nifti.settings.resample_spline_interpolation_order",
  "dicom2nifti.settings.validate_instance_number",
  "dicom2nifti.settings.validate_multiframe_implicit",
  "dicom2nifti.settings.validate_orientation",
  "dicom2nifti.settings.validate_orthogonal",
  "dicom2nifti.settings.validate_slice_increment",
  "dicom2nifti.settings.validate_slicecount",
  "gc.collect",
  "is_exe",
  "itertools.chain.from_iterable",
  "logging.getLogger",
  "math.pow",
  "nibabel.Nifti1Image",
  "nibabel.affines.to_matvec",
  "nibabel.load",
  "nibabel.nifti1.Nifti1Image",
  "numpy.abs",
  "numpy.allclose",
  "numpy.amax",
  "numpy.amin",
  "numpy.argmax",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asanyarray",
  "numpy.bitwise_or",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.count_nonzero",
  "numpy.cross",
  "numpy.dot",
  "numpy.dtype",
  "numpy.eye",
  "numpy.fliplr",
  "numpy.flipud",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.full",
  "numpy.int16",
  "numpy.int32",
  "numpy.int8",
  "numpy.linalg.inv",
  "numpy.linalg.norm",
  "numpy.max",
  "numpy.minimum",
  "numpy.newaxis",
  "numpy.percentile",
  "numpy.promote_types",
  "numpy.shape",
  "numpy.sign",
  "numpy.squeeze",
  "numpy.swapaxes",
  "numpy.transpose",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint8",
  "numpy.zeros",
  "os.X_OK",
  "os.access",
  "os.environ.split",
  "os.path.basename",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.remove",
  "os.walk",
  "pydicom.config.enforce_valid_values",
  "pydicom.read_file",
  "pydicom.tag.Tag",
  "re.DOTALL",
  "re.findall",
  "re.sub",
  "shutil.copytree",
  "shutil.rmtree",
  "struct.pack",
  "struct.unpack",
  "subprocess.check_output",
  "tempfile.NamedTemporaryFile",
  "tempfile.mkdtemp",
  "traceback.print_exc",
  "unicodedata.normalize"
 ],
 "deps": {
  "dicom": [],
  "dicom2nifti": [],
  "gc": [],
  "is_exe": [],
  "itertools": [],
  "logging": [],
  "math": [],
  "nibabel": [],
  "numpy": [],
  "os": [],
  "pydicom": [],
  "re": [],
  "shutil": [],
  "struct": [],
  "subprocess": [],
  "tempfile": [],
  "traceback": [],
  "unicodedata": []
 }
}