{
 "bad": [
  "_calculateRatio",
  "_get_descr",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "affine.Affine",
  "affine.Affine.scale",
  "affine.Affine.translation",
  "asyncio.gather",
  "attr.Factory",
  "attr.ib",
  "attr.s",
  "base.BaseReader",
  "base.MosaicMethodBase",
  "base.MultiBaseReader",
  "boto3.session.Session",
  "boto3.session.Session.client",
  "cogeo.COGReader",
  "collections.UserDict",
  "colormap.apply_cmap",
  "concurrent.futures.Future",
  "concurrent.futures.ThreadPoolExecutor",
  "constants.BBox",
  "constants.ColorTuple",
  "constants.MAX_THREADS",
  "constants.NumType",
  "constants.WEB_MERCATOR_CRS",
  "constants.WEB_MERCATOR_TMS",
  "constants.WGS84_CRS",
  "enum.Enum",
  "errors.AlphaBandWarning",
  "errors.ColorMapAlreadyRegistered",
  "errors.EmptyMosaicError",
  "errors.ExpressionMixingWarning",
  "errors.InvalidAssetName",
  "errors.InvalidColorMapName",
  "errors.InvalidFormat",
  "errors.InvalidMosaicMethod",
  "errors.MissingAssets",
  "errors.MissingBands",
  "errors.PointOutsideBounds",
  "errors.RioTilerError",
  "errors.TileOutsideBounds",
  "expression.apply_expression",
  "expression.parse_expression",
  "functools.lru_cache",
  "functools.partial",
  "future",
  "inspect.isclass",
  "io.BytesIO",
  "json.load",
  "json.loads",
  "logger.logger.debug",
  "logger.logger.info",
  "logging.getLogger",
  "math.ceil",
  "methods.base.MosaicMethodBase",
  "methods.defaults.FirstMethod",
  "models.ImageData",
  "models.ImageData.create_from_list",
  "models.ImageStatistics",
  "models.Info",
  "models.Metadata",
  "models.SpatialInfo",
  "morecantile.Tile",
  "morecantile.TileMatrixSet",
  "numexpr.evaluate",
  "numpy.add",
  "numpy.all",
  "numpy.array",
  "numpy.bitwise_and",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.errstate",
  "numpy.expand_dims",
  "numpy.float",
  "numpy.histogram",
  "numpy.iinfo",
  "numpy.load",
  "numpy.ma.MaskedArray",
  "numpy.ma.array",
  "numpy.ma.is_masked",
  "numpy.ma.mean",
  "numpy.ma.median",
  "numpy.ma.stack",
  "numpy.ma.std",
  "numpy.ma.where",
  "numpy.multiply",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.number",
  "numpy.percentile",
  "numpy.repeat",
  "numpy.save",
  "numpy.savez_compressed",
  "numpy.stack",
  "numpy.transpose",
  "numpy.uint8",
  "numpy.where",
  "numpy.zeros",
  "ops",
  "pydantic.BaseModel",
  "pystac.Item",
  "pystac.Item.from_dict",
  "rasterio.coords.BoundingBox",
  "rasterio.crs.CRS",
  "rasterio.enums.ColorInterp.alpha",
  "rasterio.enums.MaskFlags.alpha",
  "rasterio.enums.MaskFlags.per_dataset",
  "rasterio.enums.Resampling",
  "rasterio.features.bounds",
  "rasterio.features.is_valid_geom",
  "rasterio.io.DatasetReader",
  "rasterio.io.DatasetWriter",
  "rasterio.io.MemoryFile",
  "rasterio.open",
  "rasterio.plot.reshape_as_image",
  "rasterio.profiles.Profile",
  "rasterio.rio.helpers.coords",
  "rasterio.rio.overview.get_maximum_overview_level",
  "rasterio.transform.from_bounds",
  "rasterio.transform.from_gcps",
  "rasterio.transform.rowcol",
  "rasterio.vrt.WarpedVRT",
  "rasterio.warp.calculate_default_transform",
  "rasterio.warp.transform",
  "rasterio.warp.transform_bounds",
  "rasterio.warp.transform_geom",
  "rasterio.windows.Window",
  "rasterio.windows.from_bounds",
  "re.IGNORECASE",
  "re.compile",
  "re.findall",
  "reader.part",
  "reader.point",
  "reader.preview",
  "reader.stats",
  "requests.get",
  "rio_color.operations.parse_operations",
  "rio_color.utils.scale_dtype",
  "rio_color.utils.to_math_type",
  "rio_tiler.colormap.ColorMaps",
  "rio_tiler.colormap.DEFAULT_CMAPS_FILES",
  "rio_tiler.colormap.apply_discrete_cmap",
  "rio_tiler.colormap.make_lut",
  "rio_tiler.errors.RioTilerError",
  "rio_tiler.io.base.BaseReader",
  "rio_tiler.io.base.SpatialMixin",
  "rio_tiler.io.cogeo.COGReader",
  "rio_tiler.io.stac.DEFAULT_VALID_TYPE",
  "rio_tiler.io.stac._get_assets",
  "rio_tiler.io.stac._to_pystac_item",
  "rio_tiler.io.stac.fetch",
  "rio_tiler.models.Bounds",
  "rio_tiler.models.ImageData",
  "rio_tiler.models.ImageStatistics",
  "rio_tiler.models.Info",
  "rio_tiler.models.NodataTypes",
  "rio_tiler.models.RioTilerBaseModel",
  "rio_tiler.models.SpatialInfo",
  "rio_tiler.models.to_coordsbbox",
  "rio_tiler.mosaic.methods.defaults.FirstMethod",
  "rio_tiler.mosaic.methods.defaults.MeanMethod",
  "rio_tiler.mosaic.methods.defaults.MedianMethod",
  "rio_tiler.mosaic.methods.defaults.StdevMethod",
  "rio_tiler.profiles.JPEGProfile",
  "rio_tiler.profiles.PNGProfile",
  "rio_tiler.profiles.PNGRAWProfile",
  "rio_tiler.profiles.WEBPProfile",
  "rio_tiler.reader.part",
  "rio_tiler.reader.preview",
  "rio_tiler.reader.read",
  "rio_tiler.tasks.TaskType",
  "rio_tiler.tasks.create_tasks",
  "rio_tiler.tasks.filter_tasks",
  "rio_tiler.utils._requested_tile_aligned_with_internal_tile",
  "tasks.create_tasks",
  "tasks.filter_tasks",
  "tasks.multi_arrays",
  "tasks.multi_values",
  "typing.Any",
  "typing.Callable",
  "typing.Coroutine",
  "typing.Dict",
  "typing.Generator",
  "typing.Iterator",
  "typing.List",
  "typing.Optional",
  "typing.Sequence",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "typing.cast",
  "urllib.parse.urlparse",
  "utils._chunks",
  "utils._requested_tile_aligned_with_internal_tile",
  "utils._stats",
  "utils.aws_get_object",
  "utils.create_cutline",
  "utils.get_vrt_transform",
  "utils.has_alpha_band",
  "utils.has_mask_band",
  "utils.linear_rescale",
  "utils.non_alpha_indexes",
  "utils.render",
  "warnings.warn"
 ],
 "deps": {
  "_calculateRatio": [],
  "_get_descr": [],
  "abc": [],
  "affine": [],
  "asyncio": [],
  "attr": [],
  "base": [],
  "boto3": [],
  "cogeo": [],
  "collections": [],
  "colormap": [],
  "concurrent": [],
  "constants": [],
  "enum": [],
  "errors": [],
  "expression": [],
  "functools": [],
  "future": [],
  "inspect": [],
  "io": [],
  "json": [],
  "logger": [],
  "logging": [],
  "math": [],
  "methods": [],
  "models": [],
  "morecantile": [],
  "numexpr": [],
  "numpy": [],
  "ops": [],
  "pydantic": [],
  "pystac": [],
  "rasterio": [],
  "re": [],
  "reader": [],
  "requests": [],
  "rio_color": [],
  "rio_tiler": [],
  "tasks": [],
  "typing": [],
  "urllib": [],
  "utils": [],
  "warnings": []
 }
}