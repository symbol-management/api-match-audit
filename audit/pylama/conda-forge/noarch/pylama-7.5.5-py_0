{
 "bad": [
  "ConfigParser.ConfigParser",
  "Queue",
  "StringIO.StringIO",
  "UserDict.DictMixin",
  "UserDict.DictMixin.items",
  "UserDict.DictMixin.iteritems",
  "UserDict.DictMixin.iterkeys",
  "UserDict.DictMixin.itervalues",
  "UserDict.DictMixin.pop",
  "UserDict.DictMixin.setdefault",
  "UserDict.DictMixin.update",
  "UserDict.DictMixin.values",
  "__future__.absolute_import",
  "__future__.print_function",
  "__future__.unicode_literals",
  "__future__.with_statement",
  "_ast",
  "_ast.PyCF_ONLY_AST",
  "argparse.ArgumentParser",
  "ast",
  "ast.PyCF_ONLY_AST",
  "collections.OrderedDict",
  "collections.defaultdict",
  "config.LOGGER.debug",
  "config.LOGGER.info",
  "config.LOGGER.level",
  "config.MODELINE_RE.search",
  "core.LOGGER.info",
  "core.LOGGER.warning",
  "dict.__delitem__",
  "dict.__setitem__",
  "dict.clear",
  "eradicate.commented_out_code_line_numbers",
  "fnmatch",
  "fnmatch.translate",
  "hook.install_hook",
  "io",
  "io.StringIO",
  "io.UnsupportedOperation",
  "io.open",
  "lint.extensions.LINTERS.get",
  "lint.extensions.LINTERS.keys",
  "logging",
  "logging.DEBUG",
  "logging.FileHandler",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.getLogger",
  "logging.warning",
  "main.LOGGER.error",
  "main.LOGGER.warn",
  "mccabe.McCabeChecker",
  "mccabe.McCabeChecker._code",
  "mccabe.McCabeChecker.max_complexity",
  "multiprocessing",
  "multiprocessing.cpu_count",
  "os",
  "os.R_OK",
  "os.access",
  "os.altsep",
  "os.chmod",
  "os.getcwd",
  "os.path",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.ext",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.sep",
  "os.walk",
  "pkg_resources.iter_entry_points",
  "process_value",
  "pydocstyle.PEP257Checker",
  "pyflakes.checker.messages.DoctestSyntaxError.message",
  "pyflakes.checker.messages.DuplicateArgument.message",
  "pyflakes.checker.messages.ImportShadowedByLoopVar.message",
  "pyflakes.checker.messages.ImportStarUsage.message",
  "pyflakes.checker.messages.ImportStarUsed.message",
  "pyflakes.checker.messages.LateFutureImport.message",
  "pyflakes.checker.messages.RedefinedInListComp.message",
  "pyflakes.checker.messages.RedefinedWhileUnused.message",
  "pyflakes.checker.messages.ReturnOutsideFunction.message",
  "pyflakes.checker.messages.ReturnWithArgsInsideGenerator.message",
  "pyflakes.checker.messages.UndefinedExport.message",
  "pyflakes.checker.messages.UndefinedLocal.message",
  "pyflakes.checker.messages.UndefinedName.message",
  "pyflakes.checker.messages.UnusedImport.message",
  "pyflakes.checker.messages.UnusedVariable.message",
  "pytest",
  "pytest.File",
  "pytest.Item",
  "pytest.skip",
  "queue",
  "queue.Empty",
  "queue.Queue",
  "radon.visitors.ComplexityVisitor.from_code",
  "re",
  "re.I",
  "re.M",
  "re.compile",
  "re.split",
  "subprocess.PIPE",
  "subprocess.Popen",
  "sys",
  "sys.argv",
  "sys.exit",
  "sys.modules",
  "sys.stdout",
  "sys.version_info",
  "threading",
  "threading.Thread",
  "traceback",
  "traceback.format_exc",
  "xrange"
 ],
 "deps": {
  "ConfigParser": [],
  "Queue": [],
  "StringIO": [],
  "UserDict": [],
  "__future__": [],
  "_ast": [],
  "argparse": [],
  "ast": [],
  "collections": [],
  "config": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0"
  ],
  "core": [],
  "dict": [],
  "eradicate": [],
  "fnmatch": [],
  "hook": [],
  "io": [],
  "lint": [],
  "logging": [],
  "main": [],
  "mccabe": [],
  "multiprocessing": [],
  "os": [],
  "pkg_resources": [],
  "process_value": [],
  "py": [
   "py/conda-forge/noarch/py-1.8.2-pyh9f0ad1d_0"
  ],
  "pycodestyle": [
   "pycodestyle/conda-forge/noarch/pycodestyle-2.6.0-pyh9f0ad1d_0"
  ],
  "pydocstyle": [
   "pydocstyle/conda-forge/noarch/pydocstyle-6.0.0-pyhd8ed1ab_0"
  ],
  "pyflakes": [
   "pyflakes/conda-forge/noarch/pyflakes-2.3.0-pyhd8ed1ab_0"
  ],
  "pytest": [],
  "queue": [],
  "radon": [
   "radon/conda-forge/noarch/radon-4.1.0-py_0"
  ],
  "re": [],
  "subprocess": [],
  "sys": [],
  "threading": [],
  "traceback": [],
  "xrange": []
 }
}