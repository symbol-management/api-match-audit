{
 "bad": [
  "Crypto.PublicKey.RSA",
  "Crypto.PublicKey.RSA.RsaKey",
  "Crypto.PublicKey.RSA._RSAobj",
  "Crypto.PublicKey.RSA.construct",
  "Crypto.PublicKey.RSA.importKey",
  "Crypto.Signature.PKCS1_v1_5.new",
  "Crypto.Util.asn1.DerSequence",
  "Crypto.Util.number.long_to_bytes",
  "base64.b64encode",
  "base64.urlsafe_b64decode",
  "base64.urlsafe_b64encode",
  "binascii.Error",
  "binascii.unhexlify",
  "calendar.timegm",
  "collections.Iterable",
  "collections.Mapping",
  "constants.ALGORITHMS.HASHES",
  "constants.ALGORITHMS.HS256",
  "cryptography.exceptions.InvalidSignature",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP384R1",
  "cryptography.hazmat.primitives.asymmetric.ec.SECP521R1",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmp1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmq1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_iqmp",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_recover_prime_factors",
  "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature",
  "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hashes.SHA384",
  "cryptography.hazmat.primitives.hashes.SHA512",
  "cryptography.hazmat.primitives.serialization.Encoding.PEM",
  "cryptography.hazmat.primitives.serialization.NoEncryption",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.PKCS8",
  "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
  "cryptography.hazmat.primitives.serialization.PublicFormat.PKCS1",
  "cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo",
  "cryptography.hazmat.primitives.serialization.load_pem_private_key",
  "cryptography.hazmat.primitives.serialization.load_pem_public_key",
  "cryptography.utils.int_from_bytes",
  "cryptography.utils.int_to_bytes",
  "cryptography.x509.load_pem_x509_certificate",
  "curve",
  "datetime.datetime",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "ecdsa.SigningKey",
  "ecdsa.SigningKey.from_pem",
  "ecdsa.VerifyingKey",
  "ecdsa.VerifyingKey.from_pem",
  "ecdsa.curves.NIST256p",
  "ecdsa.curves.NIST384p",
  "ecdsa.curves.NIST521p",
  "ecdsa.der.UnexpectedDER",
  "ecdsa.ecdsa.int_to_string",
  "ecdsa.ecdsa.point_is_valid",
  "ecdsa.ellipticcurve.Point",
  "ecdsa.keys.SigningKey.from_secret_exponent",
  "ecdsa.keys.VerifyingKey.from_public_point",
  "ecdsa.util.sigdecode_string",
  "ecdsa.util.sigencode_string",
  "exceptions.ExpiredSignatureError",
  "exceptions.JWSError",
  "exceptions.JWTClaimsError",
  "exceptions.JWTError",
  "hashlib.sha256",
  "hashlib.sha384",
  "hashlib.sha512",
  "hmac.compare_digest",
  "hmac.new",
  "jose.backends.ECKey",
  "jose.backends.RSAKey",
  "jose.backends._asn1.PKCS8PrivateKey",
  "jose.backends._asn1.PublicKeyInfo",
  "jose.backends._asn1.RSA_ENCRYPTION_ASN1_OID",
  "jose.backends._asn1.RsaAlgorithmIdentifier",
  "jose.backends._asn1.rsa_private_key_pkcs1_to_pkcs8",
  "jose.backends._asn1.rsa_private_key_pkcs8_to_pkcs1",
  "jose.backends._asn1.rsa_public_key_pkcs1_to_pkcs8",
  "jose.backends._asn1.rsa_public_key_pkcs8_to_pkcs1",
  "jose.backends.base.Key",
  "jose.backends.pycrypto_backend._RSAKey",
  "jose.backends.pycrypto_backend._der_to_pem",
  "jose.backends.rsa_backend.ASN1_SEQUENCE_ID",
  "jose.backends.rsa_backend.LEGACY_INVALID_PKCS8_RSA_HEADER",
  "jose.backends.rsa_backend.RSAKey",
  "jose.backends.rsa_backend._MAX_RECOVERY_ATTEMPTS",
  "jose.backends.rsa_backend._gcd",
  "jose.backends.rsa_backend._legacy_private_key_pkcs8_to_pkcs1",
  "jose.backends.rsa_backend._rsa_recover_prime_factors",
  "jose.constants.ALGORITHMS.EC",
  "jose.constants.ALGORITHMS.ES256",
  "jose.constants.ALGORITHMS.ES256.get",
  "jose.constants.ALGORITHMS.ES384",
  "jose.constants.ALGORITHMS.ES384.get",
  "jose.constants.ALGORITHMS.ES512",
  "jose.constants.ALGORITHMS.ES512.get",
  "jose.constants.ALGORITHMS.HMAC",
  "jose.constants.ALGORITHMS.HS256",
  "jose.constants.ALGORITHMS.HS384",
  "jose.constants.ALGORITHMS.HS512",
  "jose.constants.ALGORITHMS.KEYS",
  "jose.constants.ALGORITHMS.RS256",
  "jose.constants.ALGORITHMS.RS256.get",
  "jose.constants.ALGORITHMS.RS384",
  "jose.constants.ALGORITHMS.RS384.get",
  "jose.constants.ALGORITHMS.RS512",
  "jose.constants.ALGORITHMS.RS512.get",
  "jose.constants.ALGORITHMS.RSA",
  "jose.constants.ALGORITHMS.SUPPORTED",
  "jose.constants.ALGORITHMS.SUPPORTED.add",
  "jose.constants.Algorithms",
  "jose.exceptions.JOSEError",
  "jose.exceptions.JWKError",
  "jose.exceptions.JWSError",
  "jose.exceptions.JWSSignatureError",
  "jose.exceptions.JWTError",
  "jose.jwk.construct",
  "jose.jwk.get_algorithm_object",
  "jose.jwk.get_key",
  "jose.jws._encode_header",
  "jose.jws._encode_payload",
  "jose.jws._get_keys",
  "jose.jws._load",
  "jose.jws._sig_matches_keys",
  "jose.jws._sign_header_and_claims",
  "jose.jws._verify_signature",
  "jose.jws.get_unverified_claims",
  "jose.jws.get_unverified_header",
  "jose.jws.get_unverified_headers",
  "jose.jws.sign",
  "jose.jws.verify",
  "jose.jwt._validate_at_hash",
  "jose.jwt._validate_aud",
  "jose.jwt._validate_claims",
  "jose.jwt._validate_exp",
  "jose.jwt._validate_iat",
  "jose.jwt._validate_iss",
  "jose.jwt._validate_jti",
  "jose.jwt._validate_nbf",
  "jose.jwt._validate_sub",
  "jose.jwt.get_unverified_header",
  "jose.utils.base64_to_long",
  "jose.utils.base64url_decode",
  "jose.utils.base64url_encode",
  "jose.utils.constant_time_string_compare",
  "jose.utils.int_arr_to_long",
  "jose.utils.long",
  "jose.utils.long_to_base64",
  "json.dumps",
  "json.loads",
  "key_class",
  "math.ceil",
  "pyasn1.codec.der.decoder.decode",
  "pyasn1.codec.der.encoder.encode",
  "pyasn1.error.PyAsn1Error",
  "pyasn1.type.namedtype.NamedType",
  "pyasn1.type.namedtype.NamedTypes",
  "pyasn1.type.univ.BitString",
  "pyasn1.type.univ.BitString.fromOctetString",
  "pyasn1.type.univ.Integer",
  "pyasn1.type.univ.Null",
  "pyasn1.type.univ.ObjectIdentifier",
  "pyasn1.type.univ.OctetString",
  "pyasn1.type.univ.Sequence",
  "rsa.PrivateKey",
  "rsa.PrivateKey.load_pkcs1",
  "rsa.PublicKey",
  "rsa.PublicKey.load_pkcs1",
  "rsa.PublicKey.load_pkcs1_openssl_pem",
  "rsa.pem.load_pem",
  "rsa.pem.save_pem",
  "rsa.pkcs1.VerificationError",
  "rsa.sign",
  "rsa.verify",
  "six.binary_type",
  "six.string_types",
  "six.text_type",
  "struct.unpack",
  "sys.version_info",
  "utils.calculate_at_hash",
  "utils.timedelta_total_seconds"
 ],
 "deps": {
  "Crypto": [],
  "base64": [],
  "binascii": [],
  "calendar": [],
  "collections": [],
  "constants": [],
  "cryptography": [],
  "curve": [],
  "datetime": [],
  "ecdsa": [],
  "exceptions": [],
  "hashlib": [],
  "hmac": [],
  "jose": [],
  "json": [],
  "key_class": [],
  "math": [],
  "pyasn1": [],
  "rsa": [],
  "six": [],
  "struct": [],
  "sys": [],
  "utils": []
 }
}