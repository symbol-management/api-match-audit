{
 "bad": [
  "CategoryError",
  "DefaultFactory",
  "DefaultFactory.register",
  "DefaultFactory.unregister",
  "Delta_perp_i2",
  "ExtraValidationFactory",
  "ExtraValidationFactory.register",
  "FactoryWithExternalRegistry",
  "Foo",
  "Identifications",
  "MultipleMatchFactory",
  "NoDefaultFactory",
  "WidgetType",
  "WidgetType.__name__",
  "_atomic_number_to_symbol",
  "_extract_charge",
  "_extract_mass_number",
  "_get_element",
  "_prepare_input",
  "_pytest.outcomes.Failed",
  "_reconstruct_ion_symbol",
  "_reconstruct_isotope_symbol",
  "abc.ABC",
  "abc.abstractmethod",
  "add_mass_energy",
  "aliases",
  "astropy.constants.Constant",
  "astropy.constants.EMConstant",
  "astropy.constants.a0",
  "astropy.constants.c",
  "astropy.constants.c.si",
  "astropy.constants.c.to",
  "astropy.constants.c.to_value",
  "astropy.constants.c.value",
  "astropy.constants.codata2010.mu0",
  "astropy.constants.e.si",
  "astropy.constants.e.si.value",
  "astropy.constants.eps0.si",
  "astropy.constants.hbar.si.to",
  "astropy.constants.k_B",
  "astropy.constants.k_B.si",
  "astropy.constants.k_B.si.to",
  "astropy.constants.k_B.to",
  "astropy.constants.m_e",
  "astropy.constants.m_e.si",
  "astropy.constants.m_e.to",
  "astropy.constants.m_n",
  "astropy.constants.m_n.to",
  "astropy.constants.m_p",
  "astropy.constants.m_p.to",
  "astropy.constants.mu0",
  "astropy.constants.mu0.value",
  "astropy.constants.si.c",
  "astropy.constants.si.e",
  "astropy.constants.si.e.to",
  "astropy.constants.si.eps0",
  "astropy.constants.si.h",
  "astropy.constants.si.hbar",
  "astropy.constants.si.k_B",
  "astropy.constants.si.m_e",
  "astropy.constants.si.mu0",
  "astropy.modeling.fitting.LinearLSQFitter",
  "astropy.modeling.models.Polynomial1D",
  "astropy.tests.helper.assert_quantity_allclose",
  "astropy.units",
  "astropy.units.A",
  "astropy.units.AA",
  "astropy.units.C",
  "astropy.units.G",
  "astropy.units.Gyr",
  "astropy.units.Hz",
  "astropy.units.J",
  "astropy.units.Joule",
  "astropy.units.K",
  "astropy.units.Kelvin",
  "astropy.units.MK",
  "astropy.units.MeV",
  "astropy.units.MeV.si",
  "astropy.units.Mpc",
  "astropy.units.N",
  "astropy.units.N.to_string",
  "astropy.units.Ohm",
  "astropy.units.Pa",
  "astropy.units.Quantity",
  "astropy.units.Ry",
  "astropy.units.S",
  "astropy.units.T",
  "astropy.units.Unit",
  "astropy.units.UnitBase",
  "astropy.units.UnitConversionError",
  "astropy.units.UnitTypeError",
  "astropy.units.UnitsError",
  "astropy.units.UnitsWarning",
  "astropy.units.V",
  "astropy.units.W",
  "astropy.units.allclose",
  "astropy.units.amp",
  "astropy.units.ampere",
  "astropy.units.barn",
  "astropy.units.candela",
  "astropy.units.cd",
  "astropy.units.cm",
  "astropy.units.cm.to",
  "astropy.units.coulomb",
  "astropy.units.cy",
  "astropy.units.deg_C",
  "astropy.units.dimensionless_angles",
  "astropy.units.dimensionless_unscaled",
  "astropy.units.dimensionless_unscaled.unit",
  "astropy.units.eV",
  "astropy.units.equivalencies.Equivalency",
  "astropy.units.g",
  "astropy.units.isclose",
  "astropy.units.kC",
  "astropy.units.kK",
  "astropy.units.keV",
  "astropy.units.kg",
  "astropy.units.kg.to",
  "astropy.units.kilogram",
  "astropy.units.km",
  "astropy.units.l",
  "astropy.units.m",
  "astropy.units.m.all",
  "astropy.units.m.to",
  "astropy.units.mA",
  "astropy.units.meter",
  "astropy.units.mm",
  "astropy.units.mol",
  "astropy.units.nm",
  "astropy.units.ohm",
  "astropy.units.pc",
  "astropy.units.quantity.Quantity",
  "astropy.units.quantity.allclose",
  "astropy.units.rad",
  "astropy.units.rad.to",
  "astropy.units.radian",
  "astropy.units.s",
  "astropy.units.s.all",
  "astropy.units.s.to",
  "astropy.units.second",
  "astropy.units.temperature",
  "astropy.units.temperature_energy",
  "astropy.units.u",
  "astropy.units.u.to",
  "astropy.units.um",
  "astropy.units.yr.to",
  "astropy.visualization.quantity_support",
  "atomic._is_electron",
  "atomic.atomic_number",
  "atomic.common_isotopes",
  "atomic.electric_charge",
  "atomic.half_life",
  "atomic.integer_charge",
  "atomic.is_stable",
  "atomic.isotopic_abundance",
  "atomic.known_isotopes",
  "atomic.mass_number",
  "atomic.particle_mass",
  "atomic.periodic_table_block",
  "atomic.periodic_table_category",
  "atomic.periodic_table_group",
  "atomic.periodic_table_period",
  "atomic.reduced_mass",
  "atomic.stable_isotopes",
  "atomic.standard_atomic_weight",
  "become_set",
  "collections.Hashable",
  "collections.abc.Iterable",
  "collections.defaultdict",
  "collections.namedtuple",
  "colorama.Fore.BLUE",
  "colorama.Fore.CYAN",
  "colorama.Fore.MAGENTA",
  "colorama.Fore.RED",
  "colorama.Style.BRIGHT",
  "common_isotopes_for_element",
  "contextlib.ExitStack",
  "copy.deepcopy",
  "cv",
  "cv._check_value",
  "datetime.datetime.utcnow",
  "decorated_function",
  "decorator",
  "decorators.particle_input",
  "dielectric.RotatingTensorElements",
  "dielectric.StixTensorElements",
  "dielectric.cold_plasma_permittivity_LRP",
  "dielectric.cold_plasma_permittivity_SDP",
  "dielectric.permittivity_1D_Maxwellian",
  "distribution.Maxwellian_1D",
  "distribution.Maxwellian_speed_1D",
  "distribution.Maxwellian_speed_2D",
  "distribution.Maxwellian_speed_3D",
  "distribution.Maxwellian_velocity_2D",
  "distribution.Maxwellian_velocity_3D",
  "distribution.kappa_velocity_1D",
  "distribution.kappa_velocity_3D",
  "distutils.version.StrictVersion",
  "eta_2",
  "f",
  "f.__name__",
  "f_a_0",
  "f_a_1",
  "f_a_2",
  "f_a_3",
  "f_a_4",
  "f_a_5",
  "f_alpha_0",
  "f_alpha_1",
  "f_alpha_2",
  "f_alpha_cross",
  "f_alpha_par_e",
  "f_alpha_perp",
  "f_b_0",
  "f_b_1",
  "f_b_2",
  "f_b_3",
  "f_b_4",
  "f_b_5",
  "f_beta_0",
  "f_beta_1",
  "f_beta_2",
  "f_beta_3",
  "f_beta_4",
  "f_beta_cross",
  "f_beta_par_e",
  "f_beta_perp",
  "f_eta_0_e",
  "f_eta_2",
  "f_eta_4",
  "f_h_0",
  "f_h_1",
  "f_h_2",
  "f_h_3",
  "f_h_4",
  "f_h_5",
  "f_hprime_0",
  "f_hprime_1",
  "f_hprime_2",
  "f_hprime_3",
  "f_hprime_4",
  "f_k_0",
  "f_k_1",
  "f_k_2",
  "f_k_3",
  "f_k_4",
  "f_k_5",
  "f_kappa_0",
  "f_kappa_1",
  "f_kappa_2",
  "f_kappa_3",
  "f_kappa_4",
  "f_kappa_cross",
  "f_kappa_par_e",
  "f_kappa_perp",
  "ff_obj",
  "ff_obj.curve_fit",
  "ff_obj.curve_fit_results",
  "ff_obj.param_errors",
  "ff_obj.param_names",
  "ff_obj.params",
  "ff_obj.root_solve",
  "ff_obj.rsq",
  "fit_func",
  "fit_p",
  "fn",
  "func_none_shall_not_pass",
  "func_none_shall_not_pass_with_tuple",
  "func_none_shall_pass",
  "func_none_shall_pass_with_list",
  "func_none_shall_pass_with_tuple",
  "func_not_optional_particle_with_list",
  "func_not_optional_particle_with_tuple",
  "func_optional_particle",
  "func_optional_particle_with_list",
  "func_optional_particle_with_tuple",
  "functools.WRAPPER_ASSIGNMENTS",
  "functools.reduce",
  "functools.wraps",
  "get_particle",
  "get_particle_mass",
  "glob.glob",
  "h5py.File",
  "helpers.modify_docstring",
  "helpers.preserve_signature",
  "inspect.BoundArguments",
  "inspect.Parameter",
  "inspect.Parameter.POSITIONAL_ONLY",
  "inspect.Parameter.POSITIONAL_OR_KEYWORD",
  "inspect.Parameter.VAR_KEYWORD",
  "inspect.Parameter.VAR_POSITIONAL",
  "inspect.Parameter.empty",
  "inspect.Signature",
  "inspect._empty",
  "inspect.cleandoc",
  "inspect.isclass",
  "inspect.ismethod",
  "inspect.signature",
  "invalid_list_type",
  "io.SEEK_SET",
  "io.StringIO",
  "isotopes._Isotopes.keys",
  "itertools.product",
  "json.JSONDecoder",
  "json.JSONDecoder.__init__",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "known_isotopes_for_element",
  "lmfit.Parameters",
  "lmfit.minimize",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.grid",
  "matplotlib.pyplot.legend",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.scatter",
  "matplotlib.pyplot.semilogy",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.xlabel",
  "matplotlib.pyplot.ylabel",
  "matplotlib.use",
  "mpmath.polylog",
  "nuclear.mass_energy",
  "nuclear.nuclear_binding_energy",
  "nuclear.nuclear_reaction_energy",
  "numbers.Complex",
  "numbers.Integral",
  "numbers.Real",
  "numpy.NaN",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.array",
  "numpy.asarray",
  "numpy.clip",
  "numpy.complex",
  "numpy.complex128",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.cross",
  "numpy.diag",
  "numpy.dot",
  "numpy.equal",
  "numpy.errstate",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.flatnonzero",
  "numpy.float",
  "numpy.float64",
  "numpy.floating",
  "numpy.full",
  "numpy.gradient",
  "numpy.imag",
  "numpy.inf",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.isclose",
  "numpy.iscomplexobj",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.linalg.norm",
  "numpy.linspace",
  "numpy.log",
  "numpy.log10",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_xor",
  "numpy.logspace",
  "numpy.matmul",
  "numpy.max",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.moveaxis",
  "numpy.nan",
  "numpy.nanmax",
  "numpy.nanmin",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.outer",
  "numpy.pi",
  "numpy.pi.si.value",
  "numpy.pi.to",
  "numpy.piecewise",
  "numpy.poly1d",
  "numpy.polyfit",
  "numpy.power",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.real",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.sin",
  "numpy.size",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.tile",
  "numpy.trapz",
  "numpy.unique",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "optional_list",
  "optional_particle",
  "optional_tuple",
  "os.environ",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "p",
  "parameters.gyrofrequency",
  "parameters.kappa_thermal_speed",
  "parameters.plasma_frequency",
  "parameters.thermal_speed",
  "particle_class.Particle",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkgutil.get_data",
  "plasmapy.__version__",
  "plasmapy.analysis.fit_functions.AbstractFitFunction",
  "plasmapy.analysis.fit_functions.Exponential",
  "plasmapy.analysis.fit_functions.ExponentialPlusLinear",
  "plasmapy.analysis.fit_functions.ExponentialPlusOffset",
  "plasmapy.analysis.fit_functions.Linear",
  "plasmapy.analysis.fit_functions._RootResults",
  "plasmapy.analysis.tests.test_fit_functions.BaseFFTests",
  "plasmapy.diagnostics.langmuir.Characteristic",
  "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse",
  "plasmapy.diagnostics.langmuir._fit_func_lin",
  "plasmapy.diagnostics.langmuir._fit_func_lin_inverse",
  "plasmapy.diagnostics.langmuir.extract_exponential_section",
  "plasmapy.diagnostics.langmuir.extract_ion_section",
  "plasmapy.diagnostics.langmuir.extrapolate_electron_current",
  "plasmapy.diagnostics.langmuir.extrapolate_ion_current_OML",
  "plasmapy.diagnostics.langmuir.get_EEDF",
  "plasmapy.diagnostics.langmuir.get_electron_density_LM",
  "plasmapy.diagnostics.langmuir.get_electron_saturation_current",
  "plasmapy.diagnostics.langmuir.get_electron_temperature",
  "plasmapy.diagnostics.langmuir.get_floating_potential",
  "plasmapy.diagnostics.langmuir.get_ion_density_LM",
  "plasmapy.diagnostics.langmuir.get_ion_density_OML",
  "plasmapy.diagnostics.langmuir.get_ion_saturation_current",
  "plasmapy.diagnostics.langmuir.get_plasma_potential",
  "plasmapy.diagnostics.langmuir.reduce_bimaxwellian_temperature",
  "plasmapy.diagnostics.langmuir.swept_probe_analysis",
  "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
  "plasmapy.diagnostics.tests.test_langmuir.N",
  "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
  "plasmapy.diagnostics.tests.test_langmuir.characteristic",
  "plasmapy.diagnostics.tests.test_langmuir.characteristic_simulated",
  "plasmapy.diagnostics.tests.test_langmuir.current_arr",
  "plasmapy.diagnostics.tests.test_langmuir.shuffle_characteristic",
  "plasmapy.diagnostics.tests.test_thomson.gen_collective_spectrum",
  "plasmapy.diagnostics.tests.test_thomson.gen_multiple_ion_species_spectrum",
  "plasmapy.diagnostics.tests.test_thomson.gen_non_collective_spectrum",
  "plasmapy.diagnostics.tests.test_thomson.width_at_value",
  "plasmapy.diagnostics.thomson.spectral_density",
  "plasmapy.dispersion.dispersionfunction.plasma_dispersion_func",
  "plasmapy.dispersion.dispersionfunction.plasma_dispersion_func_deriv",
  "plasmapy.dispersion.tests.test_dispersion.plasma_disp_deriv_table",
  "plasmapy.dispersion.tests.test_dispersion.plasma_disp_func_errors_table",
  "plasmapy.dispersion.tests.test_dispersion.plasma_dispersion_func_table",
  "plasmapy.fallback_version",
  "plasmapy.formulary.__all__",
  "plasmapy.formulary.braginskii.ClassicalTransport",
  "plasmapy.formulary.braginskii.Coulomb_logarithm",
  "plasmapy.formulary.braginskii._check_Z",
  "plasmapy.formulary.braginskii._get_spitzer_harm_coeffs",
  "plasmapy.formulary.braginskii._nondim_resist_braginskii",
  "plasmapy.formulary.braginskii._nondim_resist_ji_held",
  "plasmapy.formulary.braginskii._nondim_resist_spitzer",
  "plasmapy.formulary.braginskii._nondim_resistivity",
  "plasmapy.formulary.braginskii._nondim_tc_e_braginskii",
  "plasmapy.formulary.braginskii._nondim_tc_e_ji_held",
  "plasmapy.formulary.braginskii._nondim_tc_e_spitzer",
  "plasmapy.formulary.braginskii._nondim_tc_i_braginskii",
  "plasmapy.formulary.braginskii._nondim_tc_i_ji_held",
  "plasmapy.formulary.braginskii._nondim_te_conductivity",
  "plasmapy.formulary.braginskii._nondim_tec_braginskii",
  "plasmapy.formulary.braginskii._nondim_tec_ji_held",
  "plasmapy.formulary.braginskii._nondim_tec_spitzer",
  "plasmapy.formulary.braginskii._nondim_thermal_conductivity",
  "plasmapy.formulary.braginskii._nondim_visc_e_braginskii",
  "plasmapy.formulary.braginskii._nondim_visc_e_ji_held",
  "plasmapy.formulary.braginskii._nondim_visc_i_braginskii",
  "plasmapy.formulary.braginskii._nondim_visc_i_ji_held",
  "plasmapy.formulary.braginskii._nondim_viscosity",
  "plasmapy.formulary.braginskii.electron_thermal_conductivity",
  "plasmapy.formulary.braginskii.electron_viscosity",
  "plasmapy.formulary.braginskii.ion_thermal_conductivity",
  "plasmapy.formulary.braginskii.ion_viscosity",
  "plasmapy.formulary.braginskii.resistivity",
  "plasmapy.formulary.braginskii.thermoelectric_conductivity",
  "plasmapy.formulary.collisions.Coulomb_cross_section",
  "plasmapy.formulary.collisions.Coulomb_logarithm",
  "plasmapy.formulary.collisions.Knudsen_number",
  "plasmapy.formulary.collisions.Spitzer_resistivity",
  "plasmapy.formulary.collisions._boilerPlate",
  "plasmapy.formulary.collisions._replaceNanVwithThermalV",
  "plasmapy.formulary.collisions.collision_frequency",
  "plasmapy.formulary.collisions.coupling_parameter",
  "plasmapy.formulary.collisions.fundamental_electron_collision_freq",
  "plasmapy.formulary.collisions.fundamental_ion_collision_freq",
  "plasmapy.formulary.collisions.impact_parameter",
  "plasmapy.formulary.collisions.impact_parameter_perp",
  "plasmapy.formulary.collisions.mean_free_path",
  "plasmapy.formulary.collisions.mobility",
  "plasmapy.formulary.dielectric.RotatingTensorElements",
  "plasmapy.formulary.dielectric.StixTensorElements",
  "plasmapy.formulary.dielectric.permittivity_1D_Maxwellian",
  "plasmapy.formulary.dimensionless.Mag_Reynolds",
  "plasmapy.formulary.dimensionless.Re_",
  "plasmapy.formulary.dimensionless.Reynolds_number",
  "plasmapy.formulary.dimensionless.Rm_",
  "plasmapy.formulary.dimensionless.beta",
  "plasmapy.formulary.dimensionless.quantum_theta",
  "plasmapy.formulary.distribution._v_drift_units",
  "plasmapy.formulary.drifts.ExB_drift",
  "plasmapy.formulary.drifts.force_drift",
  "plasmapy.formulary.drifts.veb_",
  "plasmapy.formulary.drifts.vfd_",
  "plasmapy.formulary.ionization.Saha",
  "plasmapy.formulary.ionization.Z_bal_",
  "plasmapy.formulary.ionization.ionization_balance",
  "plasmapy.formulary.magnetostatics.CircularWire",
  "plasmapy.formulary.magnetostatics.FiniteStraightWire",
  "plasmapy.formulary.magnetostatics.GeneralWire",
  "plasmapy.formulary.magnetostatics.InfiniteStraightWire",
  "plasmapy.formulary.magnetostatics.MagneticDipole",
  "plasmapy.formulary.magnetostatics.MagnetoStatics",
  "plasmapy.formulary.magnetostatics.Wire",
  "plasmapy.formulary.mathematics.Fermi_integral",
  "plasmapy.formulary.parameters.Alfven_speed",
  "plasmapy.formulary.parameters.Bohm_diffusion",
  "plasmapy.formulary.parameters.DB_",
  "plasmapy.formulary.parameters.Debye_length",
  "plasmapy.formulary.parameters.Debye_number",
  "plasmapy.formulary.parameters.Hall_parameter",
  "plasmapy.formulary.parameters._coefficients",
  "plasmapy.formulary.parameters._grab_charge",
  "plasmapy.formulary.parameters.betaH_",
  "plasmapy.formulary.parameters.cs_",
  "plasmapy.formulary.parameters.cwp_",
  "plasmapy.formulary.parameters.gyrofrequency",
  "plasmapy.formulary.parameters.gyroradius",
  "plasmapy.formulary.parameters.inertial_length",
  "plasmapy.formulary.parameters.ion_sound_speed",
  "plasmapy.formulary.parameters.kappa_thermal_speed",
  "plasmapy.formulary.parameters.lambdaD_",
  "plasmapy.formulary.parameters.lower_hybrid_frequency",
  "plasmapy.formulary.parameters.magnetic_energy_density",
  "plasmapy.formulary.parameters.magnetic_pressure",
  "plasmapy.formulary.parameters.mass_density",
  "plasmapy.formulary.parameters.nD_",
  "plasmapy.formulary.parameters.oc_",
  "plasmapy.formulary.parameters.plasma_frequency",
  "plasmapy.formulary.parameters.pmag_",
  "plasmapy.formulary.parameters.pth_",
  "plasmapy.formulary.parameters.rc_",
  "plasmapy.formulary.parameters.rho_",
  "plasmapy.formulary.parameters.rhoc_",
  "plasmapy.formulary.parameters.thermal_pressure",
  "plasmapy.formulary.parameters.thermal_speed",
  "plasmapy.formulary.parameters.ub_",
  "plasmapy.formulary.parameters.upper_hybrid_frequency",
  "plasmapy.formulary.parameters.va_",
  "plasmapy.formulary.parameters.vth_",
  "plasmapy.formulary.parameters.vth_kappa_",
  "plasmapy.formulary.parameters.wc_",
  "plasmapy.formulary.parameters.wlh_",
  "plasmapy.formulary.parameters.wp_",
  "plasmapy.formulary.parameters.wuh_",
  "plasmapy.formulary.quantum.Fermi_energy",
  "plasmapy.formulary.quantum.Wigner_Seitz_radius",
  "plasmapy.formulary.quantum.chemical_potential",
  "plasmapy.formulary.quantum.deBroglie_wavelength",
  "plasmapy.formulary.quantum.thermal_deBroglie_wavelength",
  "plasmapy.formulary.radiation.thermal_bremsstrahlung",
  "plasmapy.formulary.relativity.Lorentz_factor",
  "plasmapy.formulary.relativity.relativistic_energy",
  "plasmapy.formulary.tests.test_dielectric.B",
  "plasmapy.formulary.tests.test_dielectric.n",
  "plasmapy.formulary.tests.test_dielectric.omega",
  "plasmapy.formulary.tests.test_dielectric.single_species",
  "plasmapy.formulary.tests.test_dielectric.three_species",
  "plasmapy.formulary.tests.test_dimensionless.B",
  "plasmapy.formulary.tests.test_dimensionless.T",
  "plasmapy.formulary.tests.test_dimensionless.n",
  "plasmapy.formulary.tests.test_parameters.B",
  "plasmapy.formulary.tests.test_parameters.B_arr",
  "plasmapy.formulary.tests.test_parameters.B_nanarr",
  "plasmapy.formulary.tests.test_parameters.T_allnanarr",
  "plasmapy.formulary.tests.test_parameters.T_arr",
  "plasmapy.formulary.tests.test_parameters.T_e",
  "plasmapy.formulary.tests.test_parameters.T_i",
  "plasmapy.formulary.tests.test_parameters.T_nanarr",
  "plasmapy.formulary.tests.test_parameters.T_nanarr2",
  "plasmapy.formulary.tests.test_parameters.T_negarr",
  "plasmapy.formulary.tests.test_parameters.V",
  "plasmapy.formulary.tests.test_parameters.V_allnanarr",
  "plasmapy.formulary.tests.test_parameters.V_arr",
  "plasmapy.formulary.tests.test_parameters.V_nanarr",
  "plasmapy.formulary.tests.test_parameters.Z",
  "plasmapy.formulary.tests.test_parameters.ion",
  "plasmapy.formulary.tests.test_parameters.k_1",
  "plasmapy.formulary.tests.test_parameters.k_2",
  "plasmapy.formulary.tests.test_parameters.m_i",
  "plasmapy.formulary.tests.test_parameters.mu",
  "plasmapy.formulary.tests.test_parameters.n_e",
  "plasmapy.formulary.tests.test_parameters.n_i",
  "plasmapy.formulary.tests.test_quantum.T_e",
  "plasmapy.formulary.tests.test_quantum.n_e",
  "plasmapy.optional_deps._optional_import_error_template",
  "plasmapy.optional_deps.h5py_import_error",
  "plasmapy.optional_deps.lmfit_import_error",
  "plasmapy.optional_deps.mpl_import_error",
  "plasmapy.optional_deps.mpmath_import_error",
  "plasmapy.particles.IonizationState",
  "plasmapy.particles.IonizationStates",
  "plasmapy.particles.Particle",
  "plasmapy.particles.State",
  "plasmapy.particles.__all__",
  "plasmapy.particles.atomic.__all__",
  "plasmapy.particles.atomic._is_electron",
  "plasmapy.particles.atomic.atomic_number",
  "plasmapy.particles.atomic.integer_charge",
  "plasmapy.particles.atomic.known_isotopes",
  "plasmapy.particles.atomic.mass_number",
  "plasmapy.particles.atomic.particle_mass",
  "plasmapy.particles.atomic_number",
  "plasmapy.particles.atomic_symbol",
  "plasmapy.particles.data.test.data_dir",
  "plasmapy.particles.decorators._category_errmsg",
  "plasmapy.particles.decorators._particle_errmsg",
  "plasmapy.particles.decorators.particle_input",
  "plasmapy.particles.elements._Elements",
  "plasmapy.particles.elements._Elements.keys",
  "plasmapy.particles.elements._PeriodicTable",
  "plasmapy.particles.elements._atomic_numbers_to_symbols",
  "plasmapy.particles.elements._atomic_numbers_to_symbols.keys",
  "plasmapy.particles.elements._atomic_numbers_to_symbols.values",
  "plasmapy.particles.elements._element_names_to_symbols",
  "plasmapy.particles.elements._element_names_to_symbols.keys",
  "plasmapy.particles.elements._element_obj_hook",
  "plasmapy.particles.exceptions.AtomicError",
  "plasmapy.particles.exceptions.AtomicWarning",
  "plasmapy.particles.exceptions.ChargeError",
  "plasmapy.particles.exceptions.InvalidElementError",
  "plasmapy.particles.exceptions.InvalidIonError",
  "plasmapy.particles.exceptions.InvalidIsotopeError",
  "plasmapy.particles.exceptions.InvalidParticleError",
  "plasmapy.particles.exceptions.MissingAtomicDataError",
  "plasmapy.particles.exceptions.MissingAtomicDataWarning",
  "plasmapy.particles.exceptions.UnexpectedParticleError",
  "plasmapy.particles.integer_charge",
  "plasmapy.particles.ionization_state.IonizationState",
  "plasmapy.particles.ionization_state.State",
  "plasmapy.particles.ionization_states.IonizationStates",
  "plasmapy.particles.isotope_symbol",
  "plasmapy.particles.isotopes._Isotopes",
  "plasmapy.particles.isotopes._Isotopes.get",
  "plasmapy.particles.isotopes._Isotopes.keys",
  "plasmapy.particles.isotopes._isotope_obj_hook",
  "plasmapy.particles.json_load_particle",
  "plasmapy.particles.json_loads_particle",
  "plasmapy.particles.mass_number",
  "plasmapy.particles.parsing._case_insensitive_aliases",
  "plasmapy.particles.parsing._case_sensitive_aliases",
  "plasmapy.particles.parsing._create_alias_dicts",
  "plasmapy.particles.parsing._dealias_particle_aliases",
  "plasmapy.particles.parsing._invalid_particle_errmsg",
  "plasmapy.particles.parsing._parse_and_check_atomic_input",
  "plasmapy.particles.particle_class.AbstractParticle",
  "plasmapy.particles.particle_class.CustomParticle",
  "plasmapy.particles.particle_class.DimensionlessParticle",
  "plasmapy.particles.particle_class.Particle",
  "plasmapy.particles.particle_class._atomic_property_categories",
  "plasmapy.particles.particle_class._category_errmsg",
  "plasmapy.particles.particle_class._classification_categories",
  "plasmapy.particles.particle_class._periodic_table_categories",
  "plasmapy.particles.particle_class._specific_particle_categories",
  "plasmapy.particles.particle_class._valid_categories",
  "plasmapy.particles.particle_input",
  "plasmapy.particles.particle_mass",
  "plasmapy.particles.particle_symbol",
  "plasmapy.particles.reduced_mass",
  "plasmapy.particles.serialization.ParticleJSONDecoder",
  "plasmapy.particles.special_particles.ParticleZoo",
  "plasmapy.particles.special_particles.ParticleZoo._taxonomy_dict",
  "plasmapy.particles.special_particles.ParticleZoo.everything",
  "plasmapy.particles.special_particles._ParticleZooClass",
  "plasmapy.particles.special_particles._Particles",
  "plasmapy.particles.special_particles._Particles.keys",
  "plasmapy.particles.special_particles._Particles.replace",
  "plasmapy.particles.special_particles._antiparticles",
  "plasmapy.particles.special_particles._antiparticles.keys",
  "plasmapy.particles.special_particles._create_Particles_dict",
  "plasmapy.particles.special_particles._special_ion_masses",
  "plasmapy.particles.special_particles._special_ion_masses.keys",
  "plasmapy.particles.symbols.atomic_symbol",
  "plasmapy.particles.symbols.particle_symbol",
  "plasmapy.particles.tests.test_atomic.all_tests",
  "plasmapy.particles.tests.test_atomic.atomic_ParticleError_badargs",
  "plasmapy.particles.tests.test_atomic.atomic_ParticleErrors_funcs_table",
  "plasmapy.particles.tests.test_atomic.atomic_TypeError_badargs",
  "plasmapy.particles.tests.test_atomic.atomic_TypeError_funcs_table",
  "plasmapy.particles.tests.test_atomic.atomic_number_table",
  "plasmapy.particles.tests.test_atomic.atomic_symbol_table",
  "plasmapy.particles.tests.test_atomic.electric_charge_table",
  "plasmapy.particles.tests.test_atomic.element_name_table",
  "plasmapy.particles.tests.test_atomic.equivalent_particle_mass_args",
  "plasmapy.particles.tests.test_atomic.half_life_table",
  "plasmapy.particles.tests.test_atomic.integer_charge_table",
  "plasmapy.particles.tests.test_atomic.is_stable_table",
  "plasmapy.particles.tests.test_atomic.isotope_symbol_table",
  "plasmapy.particles.tests.test_atomic.isotopic_abundance_elements",
  "plasmapy.particles.tests.test_atomic.isotopic_abundance_isotopes",
  "plasmapy.particles.tests.test_atomic.isotopic_abundance_sum_table",
  "plasmapy.particles.tests.test_atomic.mass_number_table",
  "plasmapy.particles.tests.test_atomic.metatable",
  "plasmapy.particles.tests.test_atomic.particle_mass_table",
  "plasmapy.particles.tests.test_atomic.standard_atomic_weight_table",
  "plasmapy.particles.tests.test_atomic.str_electron_table",
  "plasmapy.particles.tests.test_atomic.tables_and_functions",
  "plasmapy.particles.tests.test_decorators.Test_particle_input",
  "plasmapy.particles.tests.test_decorators.ambiguous_keywords",
  "plasmapy.particles.tests.test_decorators.decorator_categories_table",
  "plasmapy.particles.tests.test_decorators.func_simple_noparens",
  "plasmapy.particles.tests.test_decorators.func_simple_parens",
  "plasmapy.particles.tests.test_decorators.function_to_test_annotations",
  "plasmapy.particles.tests.test_decorators.function_with_element_argument",
  "plasmapy.particles.tests.test_decorators.function_with_ion_argument",
  "plasmapy.particles.tests.test_decorators.function_with_isotope_argument",
  "plasmapy.particles.tests.test_decorators.function_with_list_annotation",
  "plasmapy.particles.tests.test_decorators.function_with_no_annotations",
  "plasmapy.particles.tests.test_decorators.function_with_tuple_annotation",
  "plasmapy.particles.tests.test_decorators.is_element",
  "plasmapy.particles.tests.test_decorators.is_ion",
  "plasmapy.particles.tests.test_decorators.is_isotope",
  "plasmapy.particles.tests.test_decorators.list_annotation_test_table",
  "plasmapy.particles.tests.test_decorators.not_element",
  "plasmapy.particles.tests.test_decorators.not_ion",
  "plasmapy.particles.tests.test_decorators.not_isotope",
  "plasmapy.particles.tests.test_decorators.particle_input_error_table",
  "plasmapy.particles.tests.test_decorators.particle_input_simple_table",
  "plasmapy.particles.tests.test_decorators.tuple_annotation_test_table",
  "plasmapy.particles.tests.test_ionization_state.IE",
  "plasmapy.particles.tests.test_ionization_state.expected_properties",
  "plasmapy.particles.tests.test_ionization_state.instance",
  "plasmapy.particles.tests.test_ionization_state.kwargs",
  "plasmapy.particles.tests.test_ionization_state.test_cases",
  "plasmapy.particles.tests.test_ionization_state.test_names",
  "plasmapy.particles.tests.test_ionization_state.tests_for_exceptions",
  "plasmapy.particles.tests.test_ionization_states.IE",
  "plasmapy.particles.tests.test_ionization_states.check_abundances_consistency",
  "plasmapy.particles.tests.test_ionization_states.has_attribute",
  "plasmapy.particles.tests.test_ionization_states.pytest",
  "plasmapy.particles.tests.test_ionization_states.test_names",
  "plasmapy.particles.tests.test_ionization_states.tests",
  "plasmapy.particles.tests.test_ionization_states.tests_for_exceptions",
  "plasmapy.particles.tests.test_nuclear.nuclear_reaction_energy_kwargs_table",
  "plasmapy.particles.tests.test_nuclear.test_nuclear_equivalent_calls_table",
  "plasmapy.particles.tests.test_nuclear.test_nuclear_table",
  "plasmapy.particles.tests.test_parsing._particle_call_string",
  "plasmapy.particles.tests.test_parsing.alias_dictionaries",
  "plasmapy.particles.tests.test_parsing.aliases_and_symbols",
  "plasmapy.particles.tests.test_parsing.atomic_warnings_table",
  "plasmapy.particles.tests.test_parsing.invalid_particles_table",
  "plasmapy.particles.tests.test_parsing.parse_check_table",
  "plasmapy.particles.tests.test_particle_class.custom_particles_from_json_tests",
  "plasmapy.particles.tests.test_particle_class.customized_particle_errors",
  "plasmapy.particles.tests.test_particle_class.customized_particle_repr_table",
  "plasmapy.particles.tests.test_particle_class.customized_particle_tests",
  "plasmapy.particles.tests.test_particle_class.equivalent_particles_table",
  "plasmapy.particles.tests.test_particle_class.nuclide_mass_and_mass_equiv_table",
  "plasmapy.particles.tests.test_particle_class.opposite",
  "plasmapy.particles.tests.test_particle_class.particle",
  "plasmapy.particles.tests.test_particle_class.particle_antiparticle_pairs",
  "plasmapy.particles.tests.test_particle_class.particle_json_repr_table",
  "plasmapy.particles.tests.test_particle_class.particles_from_json_tests",
  "plasmapy.particles.tests.test_particle_class.test_Particle_error_table",
  "plasmapy.particles.tests.test_particle_class.test_Particle_table",
  "plasmapy.particles.tests.test_particle_class.test_Particle_warning_table",
  "plasmapy.particles.tests.test_special_particles.particle_antiparticle_pairs",
  "plasmapy.particles.tests.test_special_particles.required_keys",
  "plasmapy.pkg_resources",
  "plasmapy.plasma.BasePlasma",
  "plasmapy.plasma.BasePlasma._registry",
  "plasmapy.plasma.BasePlasma._registry.get",
  "plasmapy.plasma.GenericPlasma",
  "plasmapy.plasma.exceptions.DataStandardError",
  "plasmapy.plasma.plasma_base.BasePlasma",
  "plasmapy.plasma.plasma_base.GenericPlasma",
  "plasmapy.plasma.plasma_base.GenericPlasma._registry",
  "plasmapy.plasma.plasma_factory.PlasmaFactory",
  "plasmapy.plasma.sources.Plasma3D",
  "plasmapy.plasma.sources.openpmd_hdf5.HDF5Reader",
  "plasmapy.plasma.sources.openpmd_hdf5._NEWER_VERSION",
  "plasmapy.plasma.sources.openpmd_hdf5._OUTDATED_VERSION",
  "plasmapy.plasma.sources.openpmd_hdf5._UNITS",
  "plasmapy.plasma.sources.openpmd_hdf5._fetch_units",
  "plasmapy.plasma.sources.openpmd_hdf5._valid_version",
  "plasmapy.plasma.sources.plasma3d.Plasma3D",
  "plasmapy.plasma.sources.plasmablob.PlasmaBlob",
  "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_2d",
  "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_3d",
  "plasmapy.plasma.sources.tests.test_openpmd_hdf5.h5_theta",
  "plasmapy.plasma.sources.tests.test_openpmd_hdf5.units_test_table",
  "plasmapy.plasma.tests.test_plasma_base.IsDataSource",
  "plasmapy.plasma.tests.test_plasma_base.IsNotDataSource",
  "plasmapy.plasma.tests.test_plasma_base.NoDataSource",
  "plasmapy.simulation.abstractions.AbstractSimulation",
  "plasmapy.simulation.particletracker.ParticleTracker",
  "plasmapy.simulation.tests.test_particletracker.uniform_magnetic_field",
  "plasmapy.sys",
  "plasmapy.tests.helpers.MissingExceptionFail",
  "plasmapy.tests.helpers.MissingWarningFail",
  "plasmapy.tests.helpers.TypeMismatchFail",
  "plasmapy.tests.helpers.UnexpectedExceptionFail",
  "plasmapy.tests.helpers.UnexpectedResultFail",
  "plasmapy.tests.helpers.exceptions.InvalidTestError",
  "plasmapy.tests.helpers.exceptions.MissingExceptionFail",
  "plasmapy.tests.helpers.exceptions.MissingWarningFail",
  "plasmapy.tests.helpers.exceptions.TestFailed",
  "plasmapy.tests.helpers.exceptions.TypeMismatchFail",
  "plasmapy.tests.helpers.exceptions.UnexpectedExceptionFail",
  "plasmapy.tests.helpers.exceptions.UnexpectedResultFail",
  "plasmapy.tests.helpers.exceptions.UnexpectedWarningFail",
  "plasmapy.tests.helpers.tests.sample_functions.SampleException",
  "plasmapy.tests.helpers.tests.sample_functions.SampleWarning",
  "plasmapy.utils.CouplingWarning",
  "plasmapy.utils.PhysicsError",
  "plasmapy.utils.PlasmaPyError",
  "plasmapy.utils.PlasmaPyWarning",
  "plasmapy.utils.RelativityError",
  "plasmapy.utils.call_string",
  "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
  "plasmapy.utils.datatype_factory_base.MultipleMatchError",
  "plasmapy.utils.datatype_factory_base.NoMatchError",
  "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
  "plasmapy.utils.decorators.angular_freq_to_hz",
  "plasmapy.utils.decorators.check_relativistic",
  "plasmapy.utils.decorators.checks.CheckBase",
  "plasmapy.utils.decorators.checks.CheckUnits",
  "plasmapy.utils.decorators.checks.CheckUnits._CheckUnits__check_defaults",
  "plasmapy.utils.decorators.checks.CheckUnits.__module__",
  "plasmapy.utils.decorators.checks.CheckUnits.__qualname__",
  "plasmapy.utils.decorators.checks.CheckValues",
  "plasmapy.utils.decorators.checks.CheckValues._CheckValues__check_defaults",
  "plasmapy.utils.decorators.checks.CheckValues.__module__",
  "plasmapy.utils.decorators.checks.CheckValues.__qualname__",
  "plasmapy.utils.decorators.checks._check_relativistic",
  "plasmapy.utils.decorators.checks.check_relativistic",
  "plasmapy.utils.decorators.checks.check_units",
  "plasmapy.utils.decorators.checks.check_values",
  "plasmapy.utils.decorators.converter.angular_freq_to_hz",
  "plasmapy.utils.decorators.helpers.preserve_signature",
  "plasmapy.utils.decorators.modify_docstring",
  "plasmapy.utils.decorators.tests.test_checks.non_relativistic_speed_examples",
  "plasmapy.utils.decorators.tests.test_checks.relativistic_error_examples",
  "plasmapy.utils.decorators.tests.test_checks.relativistic_warning_examples",
  "plasmapy.utils.decorators.validate_quantities",
  "plasmapy.utils.decorators.validators.ValidateQuantities",
  "plasmapy.utils.decorators.validators.ValidateQuantities.__module__",
  "plasmapy.utils.decorators.validators.ValidateQuantities.__qualname__",
  "plasmapy.utils.decorators.validators.validate_quantities",
  "plasmapy.utils.error_messages._exc_str",
  "plasmapy.utils.error_messages._exception_color",
  "plasmapy.utils.error_messages._format_arg",
  "plasmapy.utils.error_messages._format_kw",
  "plasmapy.utils.error_messages._format_quantity",
  "plasmapy.utils.error_messages._message_color",
  "plasmapy.utils.error_messages._represent_result",
  "plasmapy.utils.error_messages._result_color",
  "plasmapy.utils.error_messages.call_string",
  "plasmapy.utils.exceptions.CouplingWarning",
  "plasmapy.utils.exceptions.InvalidRomanNumeralError",
  "plasmapy.utils.exceptions.OutOfRangeError",
  "plasmapy.utils.exceptions.PhysicsError",
  "plasmapy.utils.exceptions.PhysicsWarning",
  "plasmapy.utils.exceptions.PlasmaPyError",
  "plasmapy.utils.exceptions.PlasmaPyWarning",
  "plasmapy.utils.exceptions.RelativityError",
  "plasmapy.utils.exceptions.RelativityWarning",
  "plasmapy.utils.exceptions.RomanError",
  "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
  "plasmapy.utils.pytest_helpers.pytest_helpers._blue",
  "plasmapy.utils.pytest_helpers.pytest_helpers._bold",
  "plasmapy.utils.pytest_helpers.pytest_helpers._cyan",
  "plasmapy.utils.pytest_helpers.pytest_helpers._func_color",
  "plasmapy.utils.pytest_helpers.pytest_helpers._magenta",
  "plasmapy.utils.pytest_helpers.pytest_helpers._message_color",
  "plasmapy.utils.pytest_helpers.pytest_helpers._process_input",
  "plasmapy.utils.pytest_helpers.pytest_helpers._red",
  "plasmapy.utils.pytest_helpers.pytest_helpers._type_color",
  "plasmapy.utils.pytest_helpers.run_test",
  "plasmapy.utils.pytest_helpers.run_test_equivalent_calls",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.adams_number",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.call_string_table",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.f_args_kwargs_expected_whaterror",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.func",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.generic_function",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.inputs_table",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.issue_warning",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.raise_exception",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_arg",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.return_quantity",
  "plasmapy.utils.pytest_helpers.tests.test_pytest_helpers.run_test_equivalent_calls_table",
  "plasmapy.utils.roman.InvalidRomanNumeralError",
  "plasmapy.utils.roman.OutOfRangeError",
  "plasmapy.utils.roman._romanNumeralMap",
  "plasmapy.utils.roman._romanNumeralPattern",
  "plasmapy.utils.roman.from_roman",
  "plasmapy.utils.roman.is_roman_numeral",
  "plasmapy.utils.roman.to_roman",
  "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.DefaultWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.ExternallyValidatedWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.UnvalidatedWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.external_validation_function",
  "plasmapy.utils.tests.test_roman.fromRoman_exceptions_table",
  "plasmapy.utils.tests.test_roman.ints_and_roman_numerals",
  "plasmapy.utils.tests.test_roman.test_is_roman_numeral_table",
  "plasmapy.utils.tests.test_roman.toRoman_exceptions_table",
  "plasmapy.warn_add",
  "poly",
  "pprint.pprint",
  "process_particles_list",
  "pytest.fail",
  "pytest.fail.Exception",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.slow",
  "pytest.mark.xfail",
  "pytest.raises",
  "pytest.raises.Exception",
  "pytest.warns",
  "quantum.Ef_",
  "quantum.Fermi_energy",
  "quantum.Thomas_Fermi_length",
  "quantum.Wigner_Seitz_radius",
  "quantum._chemical_potential_interp",
  "quantum.chemical_potential",
  "quantum.deBroglie_wavelength",
  "quantum.lambdaDB_",
  "quantum.lambdaDB_th_",
  "quantum.thermal_deBroglie_wavelength",
  "re.match",
  "re.split",
  "scipy.integrate.dblquad",
  "scipy.integrate.quad",
  "scipy.integrate.tplquad",
  "scipy.integrate.trapz",
  "scipy.interpolate.RegularGridInterpolator",
  "scipy.optimize.curve_fit",
  "scipy.optimize.fsolve",
  "scipy.special.exp1",
  "scipy.special.gamma",
  "scipy.special.wofz",
  "scipy.stats.linregress",
  "setuptools_scm.get_version",
  "speed_func",
  "stable_isotopes_for_element",
  "str.join",
  "symbols.atomic_symbol",
  "symbols.element_name",
  "symbols.isotope_symbol",
  "sys.version_info",
  "take_particle",
  "test_function",
  "total_baryon_number",
  "total_charge",
  "types.LambdaType",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.NoReturn",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "unittest.mock.Mock",
  "unittest.mock.patch",
  "unittest.mock.patch.object",
  "urllib.parse.urlencode",
  "value",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.warn",
  "webbrowser.open",
  "wfoo",
  "wfoo.__signature__",
  "wfunc",
  "wrapped_function"
 ],
 "deps": {
  "CategoryError": [],
  "DefaultFactory": [],
  "Delta_perp_i2": [],
  "ExtraValidationFactory": [],
  "FactoryWithExternalRegistry": [],
  "Foo": [],
  "Identifications": [],
  "MultipleMatchFactory": [],
  "NoDefaultFactory": [],
  "WidgetType": [],
  "_atomic_number_to_symbol": [],
  "_extract_charge": [],
  "_extract_mass_number": [],
  "_get_element": [],
  "_prepare_input": [],
  "_pytest": [],
  "_reconstruct_ion_symbol": [],
  "_reconstruct_isotope_symbol": [],
  "abc": [],
  "add_mass_energy": [],
  "aliases": [],
  "astropy": [],
  "atomic": [],
  "become_set": [],
  "collections": [],
  "colorama": [],
  "common_isotopes_for_element": [],
  "contextlib": [],
  "copy": [],
  "cv": [],
  "datetime": [],
  "decorated_function": [],
  "decorator": [],
  "decorators": [],
  "dielectric": [],
  "distribution": [],
  "distutils": [],
  "eta_2": [],
  "f": [],
  "f_a_0": [],
  "f_a_1": [],
  "f_a_2": [],
  "f_a_3": [],
  "f_a_4": [],
  "f_a_5": [],
  "f_alpha_0": [],
  "f_alpha_1": [],
  "f_alpha_2": [],
  "f_alpha_cross": [],
  "f_alpha_par_e": [],
  "f_alpha_perp": [],
  "f_b_0": [],
  "f_b_1": [],
  "f_b_2": [],
  "f_b_3": [],
  "f_b_4": [],
  "f_b_5": [],
  "f_beta_0": [],
  "f_beta_1": [],
  "f_beta_2": [],
  "f_beta_3": [],
  "f_beta_4": [],
  "f_beta_cross": [],
  "f_beta_par_e": [],
  "f_beta_perp": [],
  "f_eta_0_e": [],
  "f_eta_2": [],
  "f_eta_4": [],
  "f_h_0": [],
  "f_h_1": [],
  "f_h_2": [],
  "f_h_3": [],
  "f_h_4": [],
  "f_h_5": [],
  "f_hprime_0": [],
  "f_hprime_1": [],
  "f_hprime_2": [],
  "f_hprime_3": [],
  "f_hprime_4": [],
  "f_k_0": [],
  "f_k_1": [],
  "f_k_2": [],
  "f_k_3": [],
  "f_k_4": [],
  "f_k_5": [],
  "f_kappa_0": [],
  "f_kappa_1": [],
  "f_kappa_2": [],
  "f_kappa_3": [],
  "f_kappa_4": [],
  "f_kappa_cross": [],
  "f_kappa_par_e": [],
  "f_kappa_perp": [],
  "ff_obj": [],
  "fit_func": [],
  "fit_p": [],
  "fn": [],
  "func_none_shall_not_pass": [],
  "func_none_shall_not_pass_with_tuple": [],
  "func_none_shall_pass": [],
  "func_none_shall_pass_with_list": [],
  "func_none_shall_pass_with_tuple": [],
  "func_not_optional_particle_with_list": [],
  "func_not_optional_particle_with_tuple": [],
  "func_optional_particle": [],
  "func_optional_particle_with_list": [],
  "func_optional_particle_with_tuple": [],
  "functools": [],
  "get_particle": [],
  "get_particle_mass": [],
  "glob": [],
  "h5py": [],
  "helpers": [],
  "inspect": [],
  "invalid_list_type": [],
  "io": [],
  "isotopes": [],
  "itertools": [],
  "json": [],
  "known_isotopes_for_element": [],
  "lmfit": [],
  "matplotlib": [],
  "mpmath": [],
  "nuclear": [],
  "numbers": [],
  "numpy": [],
  "optional_list": [],
  "optional_particle": [],
  "optional_tuple": [],
  "os": [],
  "p": [],
  "parameters": [],
  "particle_class": [],
  "pkg_resources": [],
  "pkgutil": [],
  "plasmapy": [],
  "poly": [],
  "pprint": [],
  "process_particles_list": [],
  "pytest": [],
  "quantum": [],
  "re": [],
  "scipy": [],
  "setuptools_scm": [],
  "speed_func": [],
  "stable_isotopes_for_element": [],
  "str": [],
  "symbols": [],
  "sys": [],
  "take_particle": [],
  "test_function": [],
  "total_baryon_number": [],
  "total_charge": [],
  "types": [],
  "typing": [],
  "unittest": [],
  "urllib": [],
  "value": [],
  "warnings": [],
  "webbrowser": [],
  "wfoo": [],
  "wfunc": [],
  "wrapped_function": []
 }
}