{
 "bad": [
  "abc.ABC",
  "abc.abstractmethod",
  "aiida.get_aiida_structure_data",
  "aliases",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "ase.get_ase_atoms",
  "call_next",
  "cif.get_cif",
  "collections.defaultdict",
  "copy.deepcopy",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.timezone.utc",
  "elasticsearch_dsl.Field",
  "elasticsearch_dsl.Integer",
  "elasticsearch_dsl.Keyword",
  "elasticsearch_dsl.Q",
  "elasticsearch_dsl.Text",
  "fastapi.Request",
  "fastapi.middleware.cors.CORSMiddleware",
  "fastapi.responses.JSONResponse",
  "fastapi.responses.Response",
  "fastapi.templating.Jinja2Templates",
  "functools.wraps",
  "inspect.signature",
  "itertools.count",
  "itertools.islice",
  "itertools.product",
  "jarvis.get_jarvis_atoms",
  "json.JSONDecodeError",
  "json.load",
  "linecache.getline",
  "links.links_coll",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.INFO",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "logging.handlers.RotatingFileHandler",
  "numpy",
  "numpy.arccos",
  "numpy.array",
  "numpy.asarray",
  "numpy.cos",
  "numpy.cross",
  "numpy.dot",
  "numpy.float64",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.pi",
  "numpy.sin",
  "numpy.spacing",
  "numpy.sqrt",
  "numpy.vstack",
  "op_fn",
  "operator.and_",
  "operator.or_",
  "optimade.__api_version__.split",
  "optimade.adapters.logger.LOGGER.warning",
  "optimade.models.ATOMIC_NUMBERS",
  "optimade.models.BaseInfoAttributes",
  "optimade.models.BaseInfoResource",
  "optimade.models.BaseInfoResource.schema",
  "optimade.models.CHEMICAL_SYMBOLS",
  "optimade.models.DataType",
  "optimade.models.DataType.DICTIONARY",
  "optimade.models.DataType.FLOAT",
  "optimade.models.DataType.INTEGER",
  "optimade.models.DataType.LIST",
  "optimade.models.DataType.STRING",
  "optimade.models.DataType.TIMESTAMP",
  "optimade.models.DataType.from_json_type",
  "optimade.models.EntryInfoResource",
  "optimade.models.EntryInfoResponse",
  "optimade.models.EntryResource",
  "optimade.models.EntryResponseMany",
  "optimade.models.EntryResponseOne",
  "optimade.models.ErrorResponse",
  "optimade.models.ErrorSource",
  "optimade.models.Implementation",
  "optimade.models.IndexInfoAttributes",
  "optimade.models.IndexInfoResource",
  "optimade.models.IndexInfoResource.schema",
  "optimade.models.IndexInfoResponse",
  "optimade.models.IndexRelationship",
  "optimade.models.InfoResponse",
  "optimade.models.LinksResource",
  "optimade.models.LinksResponse",
  "optimade.models.OptimadeError",
  "optimade.models.Provider",
  "optimade.models.ReferenceResource",
  "optimade.models.ReferenceResource.schema",
  "optimade.models.ReferenceResponseMany",
  "optimade.models.ReferenceResponseOne",
  "optimade.models.RelatedLinksResource.schema",
  "optimade.models.ResponseMeta",
  "optimade.models.ResponseMetaQuery",
  "optimade.models.Species",
  "optimade.models.StructureFeatures.DISORDER",
  "optimade.models.StructureResource",
  "optimade.models.StructureResource.schema",
  "optimade.models.StructureResponseMany",
  "optimade.models.StructureResponseOne",
  "optimade.models.SupportLevel.MUST",
  "optimade.models.SupportLevel.OPTIONAL",
  "optimade.models.SupportLevel.SHOULD",
  "optimade.models.ToplevelLinks",
  "optimade.models.Warnings",
  "optimade.models.utils.SupportLevel.MUST",
  "optimade.models.utils.SupportLevel.OPTIONAL",
  "optimade.models.utils.SupportLevel.SHOULD",
  "optimade.server.config.CONFIG.aliases.get",
  "optimade.server.config.CONFIG.base_url",
  "optimade.server.config.CONFIG.base_url.rstrip",
  "optimade.server.config.CONFIG.config_file",
  "optimade.server.config.CONFIG.debug",
  "optimade.server.config.CONFIG.default_db",
  "optimade.server.config.CONFIG.implementation",
  "optimade.server.config.CONFIG.index_base_url",
  "optimade.server.config.CONFIG.index_links_path",
  "optimade.server.config.CONFIG.index_links_path.exists",
  "optimade.server.config.CONFIG.length_aliases.get",
  "optimade.server.config.CONFIG.links_collection",
  "optimade.server.config.CONFIG.log_dir",
  "optimade.server.config.CONFIG.log_level.value.upper",
  "optimade.server.config.CONFIG.mongo_database",
  "optimade.server.config.CONFIG.mongo_uri",
  "optimade.server.config.CONFIG.page_limit",
  "optimade.server.config.CONFIG.page_limit_max",
  "optimade.server.config.CONFIG.provider",
  "optimade.server.config.CONFIG.provider.prefix",
  "optimade.server.config.CONFIG.provider_fields.get",
  "optimade.server.config.CONFIG.references_collection",
  "optimade.server.config.CONFIG.structures_collection",
  "optimade.server.config.CONFIG.use_real_mongo",
  "optimade.server.data.providers.get",
  "optimade.server.exception_handlers.OPTIMADE_EXCEPTIONS",
  "optimade.server.logger.LOGGER.debug",
  "optimade.server.logger.LOGGER.error",
  "optimade.server.logger.LOGGER.info",
  "optimade.server.logger.LOGGER.warn",
  "optimade.server.logger.LOGGER.warning",
  "optimade.server.mappers.BaseResourceMapper",
  "optimade.server.mappers.BaseResourceMapper.TOP_LEVEL_NON_ATTRIBUTES_FIELDS",
  "optimade.server.mappers.LinksMapper",
  "optimade.server.mappers.ReferenceMapper",
  "optimade.server.mappers.StructureMapper",
  "optimade.server.middleware.OPTIMADE_MIDDLEWARE",
  "optimade.server.routers.ENTRY_COLLECTIONS.items",
  "optimade.server.routers.ENTRY_COLLECTIONS.keys",
  "optimade.server.routers.links.links_coll.collection.insert_many",
  "optimade.server.routers.links.links_coll.collection.replace_one",
  "optimade.server.routers.utils.BASE_URL_PREFIXES.replace",
  "optimade.server.routers.utils.BASE_URL_PREFIXES.values",
  "optimade.server.schemas.ENTRY_INFO_SCHEMAS.keys",
  "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas",
  "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.get",
  "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.keys",
  "optimade.validator.config.VALIDATOR_CONFIG.exclusive_operators",
  "optimade.validator.config.VALIDATOR_CONFIG.inclusive_operators",
  "optimade.validator.config.VALIDATOR_CONFIG.info_endpoint",
  "optimade.validator.config.VALIDATOR_CONFIG.links_endpoint",
  "optimade.validator.config.VALIDATOR_CONFIG.non_entry_endpoints",
  "optimade.validator.config.VALIDATOR_CONFIG.response_classes",
  "optimade.validator.config.VALIDATOR_CONFIG.response_classes_index",
  "optimade.validator.config.VALIDATOR_CONFIG.top_level_non_attribute_fields",
  "optimade.validator.config.VALIDATOR_CONFIG.unique_properties",
  "optimade.validator.config.VALIDATOR_CONFIG.versions_endpoint",
  "os.environ.get",
  "os.getenv",
  "pathlib.Path.home",
  "pprint",
  "pretty_print",
  "proteindatabank.get_pdb",
  "proteindatabank.get_pdbx_mmcif",
  "pydantic.AnyHttpUrl",
  "pydantic.AnyUrl",
  "pydantic.EmailStr",
  "pydantic.Field",
  "pydantic.conlist",
  "pydantic.parse_obj_as",
  "pydantic.root_validator",
  "pymatgen.Molecule",
  "pymatgen.Structure",
  "pymatgen.get_pymatgen",
  "pymongo.MongoClient",
  "random.randint",
  "random.sample",
  "re.compile",
  "re.findall",
  "re.match",
  "re.split",
  "re.sub",
  "references.references_coll",
  "simplejson.JSONDecodeError",
  "simplejson.dumps",
  "simplejson.loads",
  "string.ascii_lowercase",
  "structures.structures_coll",
  "sys.exit",
  "sys.float_info.epsilon",
  "sys.stdout",
  "test_fn",
  "test_fn.__name__",
  "time.sleep",
  "traceback",
  "traceback.format_exc",
  "traceback.format_exception",
  "traceback.print_exc",
  "traceback.split",
  "type_",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.Generator",
  "typing.IO",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "urllib.parse.ParseResult",
  "urllib.parse.SplitResult",
  "urllib.parse.parse_qs",
  "urllib.parse.urlencode",
  "urllib.parse.urlparse",
  "uvicorn.logging.DefaultFormatter",
  "validator.ImplementationValidator",
  "values",
  "warning_pprint",
  "warnings.WarningMessage",
  "warnings._showwarning_orig",
  "warnings._showwarnmsg_impl",
  "warnings.catch_warnings",
  "warnings.formatwarning",
  "warnings.showwarning",
  "warnings.simplefilter",
  "warnings.warn"
 ],
 "deps": {
  "abc": [],
  "aiida": [
   "aiida-core/conda-forge/noarch/aiida-core-1.5.2-pyhd3deb0d_0"
  ],
  "aliases": [],
  "argparse": [],
  "ase": [
   "ase/conda-forge/noarch/ase-3.17.0-py_0"
  ],
  "bson": [
   "bson/conda-forge/noarch/bson-0.5.7-py_0"
  ],
  "call_next": [],
  "cif": [],
  "collections": [],
  "copy": [],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.6-py_0"
  ],
  "datetime": [],
  "django": [
   "django/conda-forge/noarch/django-1.11.7-py_0",
   "django/conda-forge/noarch/django-3.1.1-py_0"
  ],
  "elasticsearch_dsl": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "fastapi": [
   "fastapi/conda-forge/noarch/fastapi-0.36.0-py_0",
   "fastapi/conda-forge/noarch/fastapi-0.42.0-py_0"
  ],
  "functools": [],
  "inspect": [],
  "itertools": [],
  "jarvis": [
   "jarvis-tools/conda-forge/noarch/jarvis-tools-2020.10.10-pyh9f0ad1d_0"
  ],
  "json": [],
  "lark": [
   "lark-parser/conda-forge/noarch/lark-parser-0.10.0-pyh9f0ad1d_0"
  ],
  "linecache": [],
  "links": [],
  "logging": [],
  "mongomock": [
   "mongomock/conda-forge/noarch/mongomock-3.20.0-pyh9f0ad1d_0"
  ],
  "numpy": [],
  "op_fn": [],
  "operator": [],
  "optimade": [
   "optimade/conda-forge/noarch/optimade-0.12.4-pyhd8ed1ab_2"
  ],
  "os": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pprint": [],
  "pretty_print": [],
  "proteindatabank": [],
  "pydantic": [
   "pydantic/conda-forge/noarch/pydantic-0.18.1-py_1"
  ],
  "pymatgen": [],
  "pymongo": [],
  "random": [],
  "re": [],
  "references": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "simplejson": [],
  "starlette": [
   "starlette-base/conda-forge/noarch/starlette-base-0.13.5-py_2",
   "starlette/conda-forge/noarch/starlette-0.13.4-py_0",
   "starlette/conda-forge/noarch/starlette-0.13.5-py_0"
  ],
  "string": [],
  "structures": [],
  "sys": [],
  "test_fn": [],
  "time": [],
  "traceback": [],
  "type_": [],
  "typing": [],
  "typing_extensions": [
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.2-py_0"
  ],
  "urllib": [],
  "uvicorn": [],
  "validator": [],
  "values": [],
  "warning_pprint": [],
  "warnings": []
 }
}