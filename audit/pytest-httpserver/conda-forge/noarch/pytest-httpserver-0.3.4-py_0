{
 "bad": [
  "abc.ABC",
  "abc.abstractmethod",
  "collections.defaultdict",
  "contextlib.contextmanager",
  "contextlib.suppress",
  "copy.copy",
  "format_handlers",
  "httpserver.HTTPServer",
  "httpserver.HTTPServer.DEFAULT_LISTEN_HOST",
  "httpserver.HTTPServer.DEFAULT_LISTEN_PORT",
  "json.dumps",
  "matcher",
  "os.environ.get",
  "pytest.fixture",
  "pytest_httpserver.httpserver.BooleanQueryMatcher",
  "pytest_httpserver.httpserver.Error",
  "pytest_httpserver.httpserver.HTTPServerError",
  "pytest_httpserver.httpserver.HandlerType",
  "pytest_httpserver.httpserver.HeaderValueMatcher",
  "pytest_httpserver.httpserver.METHOD_ALL",
  "pytest_httpserver.httpserver.MappingQueryMatcher",
  "pytest_httpserver.httpserver.NoHandlerError",
  "pytest_httpserver.httpserver.NoMethodFoundForMatchingHeaderValueError",
  "pytest_httpserver.httpserver.QueryMatcher",
  "pytest_httpserver.httpserver.RequestHandler",
  "pytest_httpserver.httpserver.RequestHandlerList",
  "pytest_httpserver.httpserver.RequestMatcher",
  "pytest_httpserver.httpserver.StringQueryMatcher",
  "pytest_httpserver.httpserver.URI_DEFAULT",
  "pytest_httpserver.httpserver.Waiting",
  "pytest_httpserver.httpserver.WaitingSettings",
  "pytest_httpserver.httpserver._create_query_matcher",
  "pytest_httpserver.pytest_plugin.Plugin",
  "pytest_httpserver.pytest_plugin.PluginHTTPServer",
  "pytest_httpserver.pytest_plugin.get_httpserver_listen_address",
  "pytest_httpserver.pytest_plugin.httpserver_listen_address",
  "queue.Empty",
  "queue.Full",
  "queue.LifoQueue",
  "ssl.SSLContext",
  "threading.Thread",
  "time.monotonic",
  "typing.Callable",
  "typing.Mapping",
  "typing.Optional",
  "typing.Union",
  "werkzeug.wrappers.Request.application"
 ],
 "deps": {
  "abc": [],
  "collections": [],
  "contextlib": [],
  "copy": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "format_handlers": [],
  "httpserver": [],
  "json": [],
  "matcher": [],
  "os": [],
  "pytest": [],
  "pytest_httpserver": [],
  "queue": [],
  "ssl": [],
  "threading": [],
  "time": [],
  "typing": [],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-0.15.0-py_0"
  ]
 }
}