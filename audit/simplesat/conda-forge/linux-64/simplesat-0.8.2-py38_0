{
 "bad": [
  "DependencySolver",
  "DummyVersion",
  "P",
  "R",
  "Result",
  "S",
  "_convert_upgrade_request_if_needed",
  "_neighbors_for_requirement",
  "_reverse_neighbors_in_repositories",
  "_version.is_released",
  "_version.version_info",
  "attr.attr",
  "attr.attributes",
  "best",
  "callback",
  "collections.OrderedDict.__getitem__",
  "combine",
  "compute_constraint",
  "constraints.ConflictRequirement._from_string",
  "constraints.ConflictRequirement.from_constraints",
  "constraints.InstallRequirement._from_string",
  "constraints.InstallRequirement.from_constraints",
  "constraints.InstallRequirement.from_package_string",
  "constraints.PrettyPackageStringParser",
  "get_names",
  "init_rules_and_policy",
  "insert_star",
  "itertools",
  "itertools.chain.from_iterable",
  "itertools.groupby",
  "minimal_unsat",
  "mock",
  "mock.patch",
  "mock.patch.object",
  "multi.MultiConstraints._from_string",
  "okonomiyaki.versions.EnpkgVersion.from_string",
  "okonomiyaki.versions.EnpkgVersion.from_upstream_and_build",
  "os.path.dirname",
  "package.RepositoryPackageMetadata._from_pretty_string",
  "pkg_key",
  "pkg_name",
  "policy_factory",
  "re.VERBOSE",
  "request.JobType.hard_update",
  "request.JobType.install",
  "request.JobType.remove",
  "request.JobType.soft_update",
  "request_job",
  "requirement.InstallRequirement._from_string",
  "requirement.InstallRequirement.from_constraints",
  "requirement.InstallRequirement.from_package_string",
  "requirements_are_satisfiable",
  "rules_generator.RuleType.job_update",
  "rules_generator.RuleType.package_broken",
  "rules_generator.RuleType.package_conflicts",
  "rules_generator.RuleType.package_requires",
  "set.union",
  "simplesat.InstallRequirement._from_string",
  "simplesat.InstallRequirement.from_package_string",
  "simplesat.__init__.__git_revision__",
  "simplesat.__init__.__version__",
  "simplesat.constraints.InstallRequirement._from_string",
  "simplesat.constraints.Requirement._from_string",
  "simplesat.constraints.Requirement.from_constraints",
  "simplesat.constraints.requirement.InstallRequirement._from_string",
  "simplesat.constraints.requirement.InstallRequirement.from_constraints",
  "simplesat.constraints.requirement.InstallRequirement.from_package_string",
  "simplesat.package.ConstraintKinds.conflicts",
  "simplesat.package.ConstraintKinds.install_requires",
  "simplesat.package.ConstraintKinds.provides",
  "simplesat.request.JobType.hard_update",
  "simplesat.request.JobType.install",
  "simplesat.request.JobType.remove",
  "simplesat.request.JobType.soft_update",
  "simplesat.request.JobType.upgrade",
  "simplesat.sat.MiniSATSolver.from_rules",
  "simplesat.sat.__init__.MiniSATSolver",
  "simplesat.sat.policy.__init__.LoggedUndeterminedClausePolicy",
  "simplesat.test_data.__init__.HERE",
  "simplesat.test_data.__init__.INDICES_DIR",
  "six.functools.partial",
  "six.moves.cPickle",
  "six.moves.cPickle.dumps",
  "six.moves.cPickle.loads",
  "six.moves.range",
  "split",
  "sys",
  "sys.version_info",
  "tails",
  "test_utils.Scenario.from_yaml",
  "unittest2",
  "unittest2.TestCase"
 ],
 "deps": {
  "DependencySolver": [],
  "DummyVersion": [],
  "P": [],
  "R": [],
  "Result": [],
  "S": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_convert_upgrade_request_if_needed": [],
  "_neighbors_for_requirement": [],
  "_reverse_neighbors_in_repositories": [],
  "_version": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "attr": [
   "attrs/conda-forge/noarch/attrs-18.2.0-py_0"
  ],
  "best": [],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "callback": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "combine": [],
  "compute_constraint": [],
  "constraints": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_names": [],
  "init_rules_and_policy": [],
  "insert_star": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "minimal_unsat": [],
  "mock": [],
  "multi": [],
  "okonomiyaki": [
   "okonomiyaki/conda-forge/noarch/okonomiyaki-1.3.0-pyhd8ed1ab_0"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "package": [],
  "parse": [
   "parse/conda-forge/noarch/parse-1.8.4-py_1"
  ],
  "pkg_key": [],
  "pkg_name": [],
  "policy_factory": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "request": [],
  "request_job": [],
  "requirement": [],
  "requirements_are_satisfiable": [],
  "rules_generator": [],
  "set": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "simplesat": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "split": [],
  "sys": [],
  "tails": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test_utils": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "timeit": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest2": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ]
 }
}