{
 "bad": [
  "Decoder",
  "Encoder",
  "ExpForwardOnly",
  "ExpInverseOnly",
  "FeatureNdimsKernel",
  "Function",
  "HasFields",
  "HashableWeakRef",
  "IndepBern1d",
  "IndepBern1dSliceable",
  "InnerResults",
  "KernelFn",
  "MVNCholPrecisionTriL",
  "Model",
  "MyDist",
  "MyDistException",
  "NUTSKernelResults",
  "NamedVariable",
  "NoFields",
  "Results",
  "Root",
  "SplineParams",
  "Sub1",
  "Sub11",
  "Sub2",
  "TensorShape",
  "TerribleDistribution",
  "_AutomaticJacobian",
  "_BDFDiagnostics",
  "_BDFIterand",
  "_BDFSolverInternalState",
  "_BareBonesBijector",
  "_NewtonIterand",
  "_ProductKernel",
  "_SumKernel",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "_add",
  "_assert_ndims_statically",
  "_assert_shape",
  "_axis_size",
  "_batch_of_zeros_with_rightmost_singletons",
  "_batch_univariate_softmax",
  "_binomial_subtree_acceptance_batched",
  "_bisect",
  "_bootstrap_results",
  "_broadcast",
  "_broadcast_2",
  "_broadcast_ab",
  "_build_tree",
  "_buildtree",
  "_check",
  "_check2d",
  "_check2d_rows",
  "_choose_next_op",
  "_compose_augmented",
  "_compute",
  "_compute_non_batch_kl",
  "_compute_quantiles",
  "_continue_test_batched",
  "_convert_to_tensor",
  "_create_polynomial",
  "_decompose_augmented",
  "_dkwm_cdf_envelope",
  "_do_update",
  "_ensure_list",
  "_evaluate_objective_multiple",
  "_expand_is_accepted_like",
  "_expand_scalar",
  "_expand_tensor",
  "_expand_x_fn",
  "_expected_cdf",
  "_expected_pdf",
  "_explore",
  "_f",
  "_get_batch_ndims",
  "_get_final_shape",
  "_get_indices",
  "_get_leftmost_dim_size",
  "_get_ndims",
  "_get_rank",
  "_get_samples",
  "_get_static_ndims",
  "_hessian_diag_elt_with_l2",
  "_impl",
  "_importance_sampler_positive_f",
  "_init",
  "_is_list_like",
  "_itemwise_error_rate",
  "_joint_log_prob",
  "_kernel_fn",
  "_kl_gamma_gamma",
  "_label_str",
  "_lbeta",
  "_log_joint",
  "_log_loosum_exp_impl",
  "_log_soosum_exp_impl",
  "_log_vector_matrix",
  "_logspace_mean",
  "_make",
  "_make_convex_combined_log_prob_fn",
  "_make_static_axis_non_negative_list",
  "_mask_if_invalid",
  "_maybe_attach_assertion",
  "_maybe_make_linop",
  "_maybe_seed",
  "_move_dim_and_sort",
  "_move_dims_to_flat_end",
  "_mul_right",
  "_mutant_part",
  "_neg_log_likelihood",
  "_numpy_text",
  "_pad",
  "_powerset",
  "_prepare_args",
  "_propagate_cov",
  "_propagate_mean",
  "_recreate_kernel",
  "_render_comma_list",
  "_render_pattern",
  "_replace_at_index",
  "_replace_event_shape_in_shape_tensor",
  "_replace_event_shape_in_tensorshape",
  "_rightmost_expand_to_rank",
  "_satisfies_wolfe",
  "_scalar_univariate_softmax",
  "_secant",
  "_sequence_like",
  "_serialize",
  "_set_event_shape",
  "_shrink_towards_best",
  "_sliced_maker",
  "_static_event_size",
  "_std_samples_with_gradients",
  "_step_along_direction",
  "_str_dtype",
  "_str_list",
  "_str_tensorshape",
  "_strip",
  "_strip_batch_dim",
  "_sum_pairs",
  "_swap",
  "_tf_where",
  "_very_close",
  "_where",
  "_where_leading_dims",
  "_zeros_like",
  "ab",
  "ab.primop",
  "ab.program",
  "ab.return_",
  "ab.var.four",
  "ab.var.six",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "actual_hypersphere_volume",
  "actual_mvn_log_prob",
  "add",
  "additional_check",
  "an_op_on_objects",
  "as_index",
  "assert_catches_mistake",
  "assert_ops",
  "bar",
  "base_template",
  "batch_fibo",
  "batch_gather",
  "batched",
  "batchwise_reduce_sum",
  "bijector_class",
  "bijector_fn",
  "bootstrap_fn",
  "broadcast_fn",
  "broadcasting_shapes",
  "build_assign_op",
  "build_loss",
  "builder",
  "calculate_linear_predictor",
  "callee",
  "caller",
  "canonicalize_observed_time_series_with_mask",
  "cast",
  "cauchy_function",
  "cauchy_new_state_fn",
  "cdf_op",
  "chain",
  "check",
  "check_catches_mistake",
  "check_consistency",
  "check_is_scalar",
  "check_live_variables_defined",
  "check_read_agrees",
  "cloudpickle.CloudPickler.dispatch",
  "cloudpickle.CloudPickler.save_reduce",
  "cls",
  "code",
  "codecs",
  "codecs.decode",
  "codecs.encode",
  "collections",
  "collections.Counter",
  "collections.Mapping",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.namedtuple",
  "compile_fn",
  "computation",
  "compute_hamiltonian",
  "concat_vectors",
  "concrete_loop_body",
  "constraint",
  "constraint_fn",
  "constraint_for",
  "construct_monte_carlo_csiszar_f_divergence",
  "contextlib",
  "contextlib.contextmanager",
  "control",
  "conv",
  "conv_layer",
  "convergence_criteria_fn",
  "convert",
  "convert_to_tensor",
  "convert_to_tensor_fn",
  "convolution_op",
  "copy",
  "copy.copy",
  "cos",
  "coshe",
  "count_executions",
  "cov_step",
  "covariance_entry",
  "create_component",
  "ctor",
  "ctt",
  "d",
  "d0",
  "d0._dist_fn_args",
  "d0._dist_fn_wrapped",
  "d0_",
  "d1",
  "d1._dist_fn_args",
  "d1._dist_fn_wrapped",
  "d1_",
  "decoder",
  "decoder_model",
  "default_init",
  "discrepancy_fn",
  "dist",
  "dist.batch_shape",
  "dist.cdf",
  "dist.copy",
  "dist.entropy",
  "dist.log_prob",
  "dist.mean",
  "dist.mode",
  "dist.name",
  "dist.prob",
  "dist.sample",
  "dist.stddev",
  "dist.variance",
  "dist_cls",
  "dist_fn",
  "distribution_b",
  "distribution_cls",
  "distribution_cls.__init__.__doc__",
  "distribution_cls.__name__",
  "distutils.version",
  "do_padding",
  "doit",
  "dt",
  "dtype",
  "encoder",
  "encoder.predict_on_batch",
  "entropy_alt",
  "eval_secant2",
  "eval_update",
  "even",
  "event",
  "event_shape",
  "evolve_trajectory",
  "exchange_proposed_fn",
  "expand_x_fn",
  "expected_log_prob",
  "expected_lp",
  "f",
  "fake_distribution",
  "fake_tensor",
  "fdf",
  "fdf.num_calls",
  "fibonacci_inst",
  "filter_step",
  "flatten",
  "fn",
  "fn_broadcast",
  "fn_slice",
  "foo",
  "foo_cls",
  "full_var",
  "fun",
  "func",
  "func_estimate",
  "function",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "g",
  "gast.Bytes",
  "gast.Call",
  "gast.Ellipsis",
  "gast.Expr",
  "gast.If",
  "gast.List",
  "gast.Load",
  "gast.Module",
  "gast.Name",
  "gast.NameConstant",
  "gast.Num",
  "gast.Return",
  "gast.Store",
  "gast.Str",
  "gast.Tuple",
  "gather",
  "gather_squeeze",
  "gc",
  "gc.collect",
  "gc.get_objects",
  "gcd",
  "generate_one",
  "generic_to_array",
  "get_fn",
  "get_half_cauchy_func",
  "get_name",
  "get_observation_matrix_for_timestep",
  "get_observation_noise_for_timestep",
  "get_results",
  "get_shape_tensor",
  "get_shapes_and_dtypes",
  "get_tensor_shape",
  "get_transition_matrix_for_timestep",
  "get_transition_noise_for_timestep",
  "get_val_and_grad_fn",
  "getter",
  "grad_and_hessian_loss_fn",
  "gradient_helper",
  "gradp",
  "gradq",
  "h",
  "half_normal_function",
  "halfway",
  "has_not_u_turn",
  "has_target_log_prob",
  "hashlib",
  "hashlib.md5",
  "hashlib.sha512",
  "heapq",
  "heapq.heappop",
  "heapq.heappush",
  "histograms",
  "hypothesis.HealthCheck.data_too_large",
  "hypothesis.HealthCheck.too_slow",
  "hypothesis.PrintSettings.ALWAYS",
  "hypothesis.extra.numpy.all",
  "hypothesis.extra.numpy.arange",
  "hypothesis.extra.numpy.array",
  "hypothesis.extra.numpy.asarray",
  "hypothesis.extra.numpy.bool",
  "hypothesis.extra.numpy.concatenate",
  "hypothesis.extra.numpy.diag",
  "hypothesis.extra.numpy.finfo",
  "hypothesis.extra.numpy.float32",
  "hypothesis.extra.numpy.float64",
  "hypothesis.extra.numpy.floor",
  "hypothesis.extra.numpy.int32",
  "hypothesis.extra.numpy.isfinite",
  "hypothesis.extra.numpy.linalg.inv",
  "hypothesis.extra.numpy.linalg.solve",
  "hypothesis.extra.numpy.matmul",
  "hypothesis.extra.numpy.min",
  "hypothesis.extra.numpy.newaxis",
  "hypothesis.extra.numpy.ones",
  "hypothesis.extra.numpy.random.randn",
  "hypothesis.extra.numpy.random.random",
  "hypothesis.extra.numpy.random.seed",
  "hypothesis.extra.numpy.random.uniform",
  "hypothesis.extra.numpy.sqrt",
  "hypothesis.extra.numpy.swapaxes",
  "hypothesis.extra.numpy.tril",
  "hypothesis.extra.numpy.triu",
  "hypothesis.extra.numpy.zeros",
  "importlib",
  "importlib.import_module",
  "increase_rank",
  "init",
  "init_clone",
  "initializer",
  "input.dtype",
  "input.reshape",
  "input.shape",
  "inspect",
  "inspect.cleandoc",
  "inspect.getargspec",
  "inspect.getcallargs",
  "inspect.getfullargspec",
  "inspect.getmro",
  "inspect.getsource",
  "inspect.isclass",
  "int.from_bytes",
  "integrator",
  "interceptor",
  "interpret",
  "io",
  "io.BytesIO",
  "iota_sum",
  "is_acceptable",
  "is_diagonal",
  "is_finite",
  "is_last_day_of_season",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.count",
  "itertools.product",
  "jacobian_fn",
  "jacobian_fn_mat",
  "jax_kwargs",
  "jitter",
  "k",
  "kernel_initializer",
  "kernel_results_cls",
  "kernels",
  "kl_divergence_fn",
  "kl_fn",
  "layer",
  "layer.bias.assign",
  "layer.bias_posterior_tensor",
  "layer.get_losses_for",
  "layer.kernel",
  "layer.kernel.assign",
  "layer.kernel_posterior_tensor",
  "layer.losses",
  "layer.losses.shape",
  "layer.seed",
  "layer.trainable_variables",
  "layer.trainable_weights",
  "layer_one",
  "layer_two",
  "loc",
  "loc_scale_fn",
  "log_gamma_log_prob",
  "log_joint",
  "log_joint_builtin",
  "log_joint_fn",
  "log_joint_scoped",
  "log_joint_transformed",
  "log_joint_wrapped",
  "logit",
  "logits",
  "loop_body",
  "loop_fn",
  "loss_fn",
  "lu_reconstruct_assertions",
  "m",
  "m.weights",
  "made",
  "made._input_order",
  "made.trainable_variables",
  "make_bijector",
  "make_distribution",
  "make_distribution_fn",
  "make_fn",
  "make_kernel_fn",
  "make_loop_body",
  "make_ph",
  "make_run_block_callable",
  "make_shape_tensor",
  "make_trick_fun",
  "many_steps",
  "mask_if_invalid",
  "math",
  "math.log",
  "math.pi",
  "math.sqrt",
  "maybe_check_quadrature_param",
  "maybe_flatten",
  "maybe_static",
  "maybe_stop",
  "mcem_iter",
  "mean_fn",
  "mean_step",
  "merge_doc",
  "method",
  "mixture_func",
  "mk_ind_norm",
  "mk_target",
  "mock",
  "mock.ANY",
  "mock.patch.object",
  "model",
  "model.build",
  "model.compile",
  "model.fit",
  "model.get_weights",
  "model.layers.trainable",
  "model.layers.weights.shape",
  "model.layers.weights.trainable",
  "model.log_prob",
  "model.losses",
  "model.save",
  "model.weights",
  "model.weights.dtype",
  "model_copy",
  "model_copy.predict",
  "model_no_norm",
  "monte_carlo_hypersphere_volume",
  "my_primop",
  "my_tuple",
  "ndims_fn",
  "net",
  "net.trainable_variables",
  "new_fn",
  "noncentered_horseshoe_prior",
  "norm_layer",
  "norm_layer.g",
  "norm_layer.layer.bias",
  "normal",
  "normal_differential_entropy",
  "normal_with_unknown_mean",
  "np_f",
  "np_softmax",
  "npdt",
  "numpy",
  "numpy.abs",
  "numpy.add",
  "numpy.all",
  "numpy.amax",
  "numpy.amin",
  "numpy.angle",
  "numpy.any",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arccosh",
  "numpy.arcsin",
  "numpy.arcsinh",
  "numpy.arctan",
  "numpy.arctan2",
  "numpy.arctanh",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.bincount",
  "numpy.block",
  "numpy.bool",
  "numpy.broadcast",
  "numpy.broadcast_to",
  "numpy.ceil",
  "numpy.clip",
  "numpy.complex",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.conjugate",
  "numpy.cos",
  "numpy.cosh",
  "numpy.count_nonzero",
  "numpy.cov",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.diagonal",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.double",
  "numpy.dtype",
  "numpy.e",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.equal",
  "numpy.errstate",
  "numpy.euler_gamma",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.expm1",
  "numpy.eye",
  "numpy.fabs",
  "numpy.fft.fftn",
  "numpy.fft.ifftn",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.flip",
  "numpy.float",
  "numpy.float128",
  "numpy.float16",
  "numpy.float16.get",
  "numpy.float32",
  "numpy.float32.get",
  "numpy.float64",
  "numpy.float64.get",
  "numpy.floating",
  "numpy.floor",
  "numpy.floor_divide",
  "numpy.full",
  "numpy.generic",
  "numpy.greater",
  "numpy.greater_equal",
  "numpy.histogram",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.imag",
  "numpy.inf",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.isposinf",
  "numpy.issubdtype",
  "numpy.less",
  "numpy.less_equal",
  "numpy.linalg.cholesky",
  "numpy.linalg.det",
  "numpy.linalg.eig",
  "numpy.linalg.inv",
  "numpy.linalg.matrix_rank",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linalg.qr",
  "numpy.linalg.slogdet",
  "numpy.linalg.solve",
  "numpy.linspace",
  "numpy.log",
  "numpy.log1p",
  "numpy.log2",
  "numpy.logaddexp",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.logical_xor",
  "numpy.logspace",
  "numpy.math.lgamma",
  "numpy.matmul",
  "numpy.matrix",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.mgrid.reshape",
  "numpy.min",
  "numpy.minimum",
  "numpy.moveaxis",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndenumerate",
  "numpy.ndindex",
  "numpy.negative",
  "numpy.newaxis",
  "numpy.nextafter",
  "numpy.nonzero",
  "numpy.not_equal",
  "numpy.object",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.percentile",
  "numpy.pi",
  "numpy.polyfit",
  "numpy.polynomial.hermite.hermgauss",
  "numpy.polyval",
  "numpy.power",
  "numpy.prod",
  "numpy.product",
  "numpy.r_",
  "numpy.random",
  "numpy.random.RandomState",
  "numpy.random.beta",
  "numpy.random.choice",
  "numpy.random.dirichlet",
  "numpy.random.gamma",
  "numpy.random.geometric",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.standard_normal",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.real",
  "numpy.reciprocal",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.roll",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.searchsorted",
  "numpy.setdiff1d",
  "numpy.sign",
  "numpy.sin",
  "numpy.sinh",
  "numpy.size",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.subtract",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.take",
  "numpy.tan",
  "numpy.tanh",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.tile",
  "numpy.trace",
  "numpy.transpose",
  "numpy.tril",
  "numpy.triu",
  "numpy.triu_indices",
  "numpy.true_divide",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unique",
  "numpy.var",
  "numpy.vectorize",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "numpy_softplus",
  "objective_fn",
  "objective_function",
  "observation_fn",
  "observed_log_joint_fn",
  "odd",
  "ode_fn",
  "ode_fn_vec",
  "one_step_fn",
  "operator",
  "operator.abs",
  "operator.add",
  "operator.and_",
  "operator.floordiv",
  "operator.ge",
  "operator.gt",
  "operator.le",
  "operator.lt",
  "operator.mod",
  "operator.mul",
  "operator.neg",
  "operator.or_",
  "operator.pow",
  "operator.sub",
  "operator.truediv",
  "operator.xor",
  "original_fn",
  "os",
  "os.environ.get",
  "os.urandom",
  "part_converged",
  "pattern_flatten",
  "pattern_map",
  "pattern_map2",
  "pickle",
  "pickle.loads",
  "pprint",
  "pprint.pprint",
  "prefer_static_value",
  "prepare_args",
  "prior_model",
  "prior_model.trainable_variables",
  "probs",
  "proposal_log_prob_fn",
  "psd",
  "pushforward_latents_step",
  "pushforward_step",
  "quantized_log_prob",
  "random_orthogonal_matrix",
  "random_with_shape",
  "rastrigin",
  "re",
  "re.compile",
  "re.escape",
  "re.search",
  "re.sub",
  "record_vars_defined_on_entry",
  "ref",
  "rejection_sample_with_gradient",
  "reshape_output",
  "reshaped_distributional_transform",
  "result",
  "rosenbrock",
  "run",
  "run_chain",
  "run_chain_and_get_diagnostic",
  "run_chain_and_get_divergence",
  "run_chain_and_get_estimation_error",
  "run_chain_and_get_summary",
  "run_hmc",
  "run_one",
  "s",
  "sample",
  "sample_chain",
  "scale",
  "scale_tril",
  "scaled_identity",
  "scipy",
  "scipy.fftpack",
  "scipy.fftpack.dct",
  "scipy.interpolate",
  "scipy.interpolate.interp1d",
  "scipy.linalg",
  "scipy.linalg.cholesky",
  "scipy.linalg.circulant",
  "scipy.linalg.solve_triangular",
  "scipy.optimize",
  "scipy.optimize.newton",
  "scipy.special",
  "scipy.special.beta",
  "scipy.special.betaln",
  "scipy.special.binom",
  "scipy.special.digamma",
  "scipy.special.erfinv",
  "scipy.special.expit",
  "scipy.special.gamma",
  "scipy.special.gammaln",
  "scipy.special.i0",
  "scipy.special.i1",
  "scipy.special.ive",
  "scipy.special.log_ndtr",
  "scipy.special.logit",
  "scipy.special.logsumexp",
  "scipy.special.ndtr",
  "scipy.special.ndtri",
  "scipy.special.psi",
  "scipy.stats",
  "scipy.stats.beta",
  "scipy.stats.beta.cdf",
  "scipy.stats.beta.entropy",
  "scipy.stats.beta.mean",
  "scipy.stats.beta.var",
  "scipy.stats.binom.cdf",
  "scipy.stats.binom.mean",
  "scipy.stats.binom.pmf",
  "scipy.stats.binom.var",
  "scipy.stats.cauchy",
  "scipy.stats.chi.cdf",
  "scipy.stats.chi.entropy",
  "scipy.stats.chi.logpdf",
  "scipy.stats.chi.mean",
  "scipy.stats.chi.var",
  "scipy.stats.chi2.cdf",
  "scipy.stats.chi2.entropy",
  "scipy.stats.chi2.logpdf",
  "scipy.stats.chi2.mean",
  "scipy.stats.chi2.var",
  "scipy.stats.dirichlet.entropy",
  "scipy.stats.dirichlet.mean",
  "scipy.stats.dirichlet.var",
  "scipy.stats.expon",
  "scipy.stats.expon.cdf",
  "scipy.stats.expon.entropy",
  "scipy.stats.expon.logpdf",
  "scipy.stats.expon.logsf",
  "scipy.stats.expon.mean",
  "scipy.stats.expon.var",
  "scipy.stats.frechet_r",
  "scipy.stats.gamma",
  "scipy.stats.gamma.cdf",
  "scipy.stats.gamma.entropy",
  "scipy.stats.gamma.logpdf",
  "scipy.stats.gamma.mean",
  "scipy.stats.gamma.std",
  "scipy.stats.gamma.var",
  "scipy.stats.genpareto",
  "scipy.stats.genpareto.entropy",
  "scipy.stats.genpareto.mean",
  "scipy.stats.genpareto.var",
  "scipy.stats.geom.cdf",
  "scipy.stats.geom.entropy",
  "scipy.stats.geom.logcdf",
  "scipy.stats.geom.logpmf",
  "scipy.stats.geom.mean",
  "scipy.stats.geom.std",
  "scipy.stats.geom.var",
  "scipy.stats.gumbel_r",
  "scipy.stats.gumbel_r.cdf",
  "scipy.stats.gumbel_r.logcdf",
  "scipy.stats.gumbel_r.logpdf",
  "scipy.stats.gumbel_r.mean",
  "scipy.stats.gumbel_r.pdf",
  "scipy.stats.gumbel_r.std",
  "scipy.stats.gumbel_r.var",
  "scipy.stats.halfcauchy.cdf",
  "scipy.stats.halfcauchy.entropy",
  "scipy.stats.halfcauchy.logcdf",
  "scipy.stats.halfcauchy.logpdf",
  "scipy.stats.halfcauchy.median",
  "scipy.stats.halfcauchy.pdf",
  "scipy.stats.halfcauchy.ppf",
  "scipy.stats.halfnorm",
  "scipy.stats.invgamma",
  "scipy.stats.invgamma.cdf",
  "scipy.stats.invgamma.entropy",
  "scipy.stats.invgamma.logpdf",
  "scipy.stats.invgamma.mean",
  "scipy.stats.invgamma.var",
  "scipy.stats.invgauss",
  "scipy.stats.ks_2samp",
  "scipy.stats.kstest",
  "scipy.stats.laplace",
  "scipy.stats.laplace.cdf",
  "scipy.stats.laplace.entropy",
  "scipy.stats.laplace.logcdf",
  "scipy.stats.laplace.logpdf",
  "scipy.stats.laplace.logsf",
  "scipy.stats.laplace.mean",
  "scipy.stats.laplace.std",
  "scipy.stats.laplace.var",
  "scipy.stats.logistic.cdf",
  "scipy.stats.logistic.entropy",
  "scipy.stats.logistic.logcdf",
  "scipy.stats.logistic.logpdf",
  "scipy.stats.logistic.logsf",
  "scipy.stats.logistic.mean",
  "scipy.stats.logistic.sf",
  "scipy.stats.logistic.var",
  "scipy.stats.lognorm",
  "scipy.stats.lognorm.logpdf",
  "scipy.stats.multivariate_normal",
  "scipy.stats.nbinom.logcdf",
  "scipy.stats.nbinom.logpmf",
  "scipy.stats.nbinom.mean",
  "scipy.stats.nbinom.std",
  "scipy.stats.nbinom.var",
  "scipy.stats.norm",
  "scipy.stats.norm.cdf",
  "scipy.stats.norm.logpdf",
  "scipy.stats.norm.pdf",
  "scipy.stats.pareto",
  "scipy.stats.poisson.cdf",
  "scipy.stats.poisson.logcdf",
  "scipy.stats.poisson.logpmf",
  "scipy.stats.poisson.mean",
  "scipy.stats.poisson.pmf",
  "scipy.stats.poisson.std",
  "scipy.stats.poisson.var",
  "scipy.stats.special_ortho_group",
  "scipy.stats.special_ortho_group.rvs",
  "scipy.stats.t.cdf",
  "scipy.stats.t.entropy",
  "scipy.stats.t.interval",
  "scipy.stats.t.logcdf",
  "scipy.stats.t.logpdf",
  "scipy.stats.t.pdf",
  "scipy.stats.t.rvs",
  "scipy.stats.t.std",
  "scipy.stats.t.var",
  "scipy.stats.triang",
  "scipy.stats.truncnorm",
  "scipy.stats.uniform",
  "scipy.stats.uniform.cdf",
  "scipy.stats.vonmises",
  "scipy.stats.vonmises.cdf",
  "scipy.stats.vonmises.entropy",
  "scipy.stats.vonmises.logpdf",
  "scipy.stats.vonmises.pdf",
  "scipy.stats.zipf.cdf",
  "scipy.stats.zipf.logcdf",
  "scipy.stats.zipf.logpmf",
  "scipy.stats.zipf.mean",
  "scipy.stats.zipf.pmf",
  "scipy.stats.zipf.std",
  "scipy.stats.zipf.var",
  "scipy_f",
  "seed",
  "seed.original_seed",
  "seed_gen",
  "seed_hi",
  "seed_lo",
  "seed_stream",
  "setter",
  "shape_fn",
  "shape_tensor_fn",
  "shift_and_log_scale_fn",
  "sin",
  "sinhe",
  "six.moves.zip_longest",
  "smooth_step",
  "sp_func",
  "spline_flow",
  "square",
  "squared_frobenius_norm",
  "stack_class",
  "static_fn",
  "static_num_frequencies",
  "stop",
  "stopping_condition",
  "stopping_policy_fn",
  "stream",
  "strm",
  "strm1",
  "strm2",
  "strm3",
  "subroutine",
  "sys",
  "sys.modules",
  "sys.path.endswith",
  "sys.path.pop",
  "sys.stderr",
  "sys.stdout.flush",
  "t",
  "target_fn",
  "target_log_prob",
  "target_log_prob_fn",
  "tensorflow",
  "tensorflow.GradientTape",
  "tensorflow.TensorShape",
  "tensorflow.__version__",
  "tensorflow.cast",
  "tensorflow.compat.v1",
  "tensorflow.compat.v1.AUTO_REUSE",
  "tensorflow.compat.v1.ConfigProto",
  "tensorflow.compat.v1.Dimension",
  "tensorflow.compat.v1.Print",
  "tensorflow.compat.v1.Session",
  "tensorflow.compat.v1.SparseTensorValue",
  "tensorflow.compat.v1.assert_equal",
  "tensorflow.compat.v1.assert_greater",
  "tensorflow.compat.v1.assert_greater_equal",
  "tensorflow.compat.v1.assert_integer",
  "tensorflow.compat.v1.assert_less",
  "tensorflow.compat.v1.assert_less_equal",
  "tensorflow.compat.v1.assert_near",
  "tensorflow.compat.v1.assert_negative",
  "tensorflow.compat.v1.assert_non_negative",
  "tensorflow.compat.v1.assert_non_positive",
  "tensorflow.compat.v1.assert_none_equal",
  "tensorflow.compat.v1.assert_positive",
  "tensorflow.compat.v1.assert_proper_iterable",
  "tensorflow.compat.v1.assert_rank",
  "tensorflow.compat.v1.assert_rank_at_least",
  "tensorflow.compat.v1.assert_rank_in",
  "tensorflow.compat.v1.assert_scalar",
  "tensorflow.compat.v1.assign_add",
  "tensorflow.compat.v1.batch_gather",
  "tensorflow.compat.v1.colocate_with",
  "tensorflow.compat.v1.control_flow_v2_enabled",
  "tensorflow.compat.v1.disable_control_flow_v2",
  "tensorflow.compat.v1.enable_eager_execution",
  "tensorflow.compat.v1.get_default_graph",
  "tensorflow.compat.v1.get_default_session",
  "tensorflow.compat.v1.get_variable",
  "tensorflow.compat.v1.get_variable_scope",
  "tensorflow.compat.v1.global_variables_initializer",
  "tensorflow.compat.v1.glorot_normal_initializer",
  "tensorflow.compat.v1.initialize_all_variables",
  "tensorflow.compat.v1.initializers.constant",
  "tensorflow.compat.v1.initializers.random_normal",
  "tensorflow.compat.v1.initializers.variables",
  "tensorflow.compat.v1.initializers.zeros",
  "tensorflow.compat.v1.layers.BatchNormalization",
  "tensorflow.compat.v1.layers.Dense",
  "tensorflow.compat.v1.layers.dense",
  "tensorflow.compat.v1.logging.DEBUG",
  "tensorflow.compat.v1.logging.ERROR",
  "tensorflow.compat.v1.logging.FATAL",
  "tensorflow.compat.v1.logging.INFO",
  "tensorflow.compat.v1.logging.TaskLevelStatusMessage",
  "tensorflow.compat.v1.logging.WARN",
  "tensorflow.compat.v1.logging.debug",
  "tensorflow.compat.v1.logging.error",
  "tensorflow.compat.v1.logging.fatal",
  "tensorflow.compat.v1.logging.flush",
  "tensorflow.compat.v1.logging.get_verbosity",
  "tensorflow.compat.v1.logging.info",
  "tensorflow.compat.v1.logging.log",
  "tensorflow.compat.v1.logging.log_every_n",
  "tensorflow.compat.v1.logging.log_first_n",
  "tensorflow.compat.v1.logging.log_if",
  "tensorflow.compat.v1.logging.set_verbosity",
  "tensorflow.compat.v1.logging.vlog",
  "tensorflow.compat.v1.logging.warn",
  "tensorflow.compat.v1.logging.warning",
  "tensorflow.compat.v1.make_template",
  "tensorflow.compat.v1.name_scope",
  "tensorflow.compat.v1.placeholder",
  "tensorflow.compat.v1.placeholder_with_default",
  "tensorflow.compat.v1.random.set_random_seed",
  "tensorflow.compat.v1.reset_default_graph",
  "tensorflow.compat.v1.scatter_add",
  "tensorflow.compat.v1.set_random_seed",
  "tensorflow.compat.v1.setdiff1d",
  "tensorflow.compat.v1.test.compute_gradient_error",
  "tensorflow.compat.v1.tpu.rewrite",
  "tensorflow.compat.v1.train.AdamOptimizer",
  "tensorflow.compat.v1.train.get_or_create_global_step",
  "tensorflow.compat.v1.train.polynomial_decay",
  "tensorflow.compat.v1.trainable_variables",
  "tensorflow.compat.v1.variable_scope",
  "tensorflow.compat.v1.where",
  "tensorflow.compat.v2",
  "tensorflow.compat.v2.Assert",
  "tensorflow.compat.v2.DType",
  "tensorflow.compat.v2.GradientTape",
  "tensorflow.compat.v2.Graph",
  "tensorflow.compat.v2.IndexedSlices",
  "tensorflow.compat.v2.Module",
  "tensorflow.compat.v2.Module._TF_MODULE_IGNORED_PROPERTIES.union",
  "tensorflow.compat.v2.SparseTensor",
  "tensorflow.compat.v2.Tensor",
  "tensorflow.compat.v2.Tensor.OVERLOADABLE_OPERATORS",
  "tensorflow.compat.v2.Tensor.__abs__",
  "tensorflow.compat.v2.Tensor.__add__",
  "tensorflow.compat.v2.Tensor.__and__",
  "tensorflow.compat.v2.Tensor.__bool__",
  "tensorflow.compat.v2.Tensor.__div__",
  "tensorflow.compat.v2.Tensor.__floordiv__",
  "tensorflow.compat.v2.Tensor.__ge__",
  "tensorflow.compat.v2.Tensor.__getitem__",
  "tensorflow.compat.v2.Tensor.__gt__",
  "tensorflow.compat.v2.Tensor.__invert__",
  "tensorflow.compat.v2.Tensor.__iter__",
  "tensorflow.compat.v2.Tensor.__le__",
  "tensorflow.compat.v2.Tensor.__lt__",
  "tensorflow.compat.v2.Tensor.__matmul__",
  "tensorflow.compat.v2.Tensor.__mod__",
  "tensorflow.compat.v2.Tensor.__mul__",
  "tensorflow.compat.v2.Tensor.__neg__",
  "tensorflow.compat.v2.Tensor.__nonzero__",
  "tensorflow.compat.v2.Tensor.__or__",
  "tensorflow.compat.v2.Tensor.__pow__",
  "tensorflow.compat.v2.Tensor.__radd__",
  "tensorflow.compat.v2.Tensor.__rand__",
  "tensorflow.compat.v2.Tensor.__rdiv__",
  "tensorflow.compat.v2.Tensor.__rfloordiv__",
  "tensorflow.compat.v2.Tensor.__rmatmul__",
  "tensorflow.compat.v2.Tensor.__rmod__",
  "tensorflow.compat.v2.Tensor.__rmul__",
  "tensorflow.compat.v2.Tensor.__ror__",
  "tensorflow.compat.v2.Tensor.__rpow__",
  "tensorflow.compat.v2.Tensor.__rsub__",
  "tensorflow.compat.v2.Tensor.__rtruediv__",
  "tensorflow.compat.v2.Tensor.__rxor__",
  "tensorflow.compat.v2.Tensor.__sub__",
  "tensorflow.compat.v2.Tensor.__truediv__",
  "tensorflow.compat.v2.Tensor.__xor__",
  "tensorflow.compat.v2.TensorArray",
  "tensorflow.compat.v2.TensorShape",
  "tensorflow.compat.v2.TensorSpec",
  "tensorflow.compat.v2.Variable",
  "tensorflow.compat.v2.abs",
  "tensorflow.compat.v2.add_n",
  "tensorflow.compat.v2.argmax",
  "tensorflow.compat.v2.argmin",
  "tensorflow.compat.v2.argsort",
  "tensorflow.compat.v2.as_dtype",
  "tensorflow.compat.v2.asinh",
  "tensorflow.compat.v2.assert_greater",
  "tensorflow.compat.v2.assert_less",
  "tensorflow.compat.v2.atan",
  "tensorflow.compat.v2.atan2",
  "tensorflow.compat.v2.atanh",
  "tensorflow.compat.v2.bfloat16",
  "tensorflow.compat.v2.bitwise.left_shift",
  "tensorflow.compat.v2.bool",
  "tensorflow.compat.v2.bool.get",
  "tensorflow.compat.v2.boolean_mask",
  "tensorflow.compat.v2.broadcast_dynamic_shape",
  "tensorflow.compat.v2.broadcast_static_shape",
  "tensorflow.compat.v2.broadcast_to",
  "tensorflow.compat.v2.cast",
  "tensorflow.compat.v2.clip_by_value",
  "tensorflow.compat.v2.compat.dimension_value",
  "tensorflow.compat.v2.complex",
  "tensorflow.compat.v2.complex128",
  "tensorflow.compat.v2.concat",
  "tensorflow.compat.v2.cond",
  "tensorflow.compat.v2.constant",
  "tensorflow.compat.v2.control_dependencies",
  "tensorflow.compat.v2.convert_to_tensor",
  "tensorflow.compat.v2.cos",
  "tensorflow.compat.v2.cosh",
  "tensorflow.compat.v2.cumsum",
  "tensorflow.compat.v2.custom_gradient",
  "tensorflow.compat.v2.debugging.Assert",
  "tensorflow.compat.v2.debugging.assert_less",
  "tensorflow.compat.v2.debugging.assert_same_float_dtype",
  "tensorflow.compat.v2.debugging.check_numerics",
  "tensorflow.compat.v2.debugging.is_numeric_tensor",
  "tensorflow.compat.v2.device",
  "tensorflow.compat.v2.dtypes.cast",
  "tensorflow.compat.v2.dtypes.float32",
  "tensorflow.compat.v2.dynamic_partition",
  "tensorflow.compat.v2.dynamic_stitch",
  "tensorflow.compat.v2.einsum",
  "tensorflow.compat.v2.enable_v2_behavior",
  "tensorflow.compat.v2.ensure_shape",
  "tensorflow.compat.v2.equal",
  "tensorflow.compat.v2.errors.InvalidArgumentError",
  "tensorflow.compat.v2.errors.OpError",
  "tensorflow.compat.v2.errors.UnimplementedError",
  "tensorflow.compat.v2.executing_eagerly",
  "tensorflow.compat.v2.exp",
  "tensorflow.compat.v2.expand_dims",
  "tensorflow.compat.v2.eye",
  "tensorflow.compat.v2.fill",
  "tensorflow.compat.v2.float16",
  "tensorflow.compat.v2.float16.get",
  "tensorflow.compat.v2.float32",
  "tensorflow.compat.v2.float32.get",
  "tensorflow.compat.v2.float64",
  "tensorflow.compat.v2.float64.get",
  "tensorflow.compat.v2.floor",
  "tensorflow.compat.v2.foldl",
  "tensorflow.compat.v2.function",
  "tensorflow.compat.v2.gather",
  "tensorflow.compat.v2.gather_nd",
  "tensorflow.compat.v2.get_static_value",
  "tensorflow.compat.v2.gradients",
  "tensorflow.compat.v2.greater",
  "tensorflow.compat.v2.greater_equal",
  "tensorflow.compat.v2.group",
  "tensorflow.compat.v2.half",
  "tensorflow.compat.v2.hessians",
  "tensorflow.compat.v2.histogram_fixed_width",
  "tensorflow.compat.v2.histogram_fixed_width_bins",
  "tensorflow.compat.v2.identity",
  "tensorflow.compat.v2.initializers.deserialize",
  "tensorflow.compat.v2.initializers.serialize",
  "tensorflow.compat.v2.int16",
  "tensorflow.compat.v2.int16.get",
  "tensorflow.compat.v2.int32",
  "tensorflow.compat.v2.int32.get",
  "tensorflow.compat.v2.int32.max",
  "tensorflow.compat.v2.int64",
  "tensorflow.compat.v2.int64.get",
  "tensorflow.compat.v2.int64.max",
  "tensorflow.compat.v2.int8",
  "tensorflow.compat.v2.int8.get",
  "tensorflow.compat.v2.is_tensor",
  "tensorflow.compat.v2.keras",
  "tensorflow.compat.v2.keras.Input",
  "tensorflow.compat.v2.keras.Model",
  "tensorflow.compat.v2.keras.Sequential",
  "tensorflow.compat.v2.keras.activations.serialize",
  "tensorflow.compat.v2.keras.backend.floatx",
  "tensorflow.compat.v2.keras.constraints.get",
  "tensorflow.compat.v2.keras.initializers.GlorotNormal",
  "tensorflow.compat.v2.keras.initializers.Initializer",
  "tensorflow.compat.v2.keras.initializers.get",
  "tensorflow.compat.v2.keras.initializers.serialize",
  "tensorflow.compat.v2.keras.layers",
  "tensorflow.compat.v2.keras.layers.BatchNormalization",
  "tensorflow.compat.v2.keras.layers.Dense",
  "tensorflow.compat.v2.keras.layers.InputLayer",
  "tensorflow.compat.v2.keras.layers.InputSpec",
  "tensorflow.compat.v2.keras.layers.Lambda",
  "tensorflow.compat.v2.keras.layers.Layer",
  "tensorflow.compat.v2.keras.layers.Wrapper",
  "tensorflow.compat.v2.keras.models.Sequential",
  "tensorflow.compat.v2.keras.optimizers.SGD",
  "tensorflow.compat.v2.keras.regularizers.Regularizer",
  "tensorflow.compat.v2.keras.utils.deserialize_keras_object",
  "tensorflow.compat.v2.keras.utils.get_custom_objects",
  "tensorflow.compat.v2.keras.utils.serialize_keras_object",
  "tensorflow.compat.v2.less",
  "tensorflow.compat.v2.linalg",
  "tensorflow.compat.v2.linalg.LinearOperator",
  "tensorflow.compat.v2.linalg.LinearOperatorBlockDiag",
  "tensorflow.compat.v2.linalg.LinearOperatorDiag",
  "tensorflow.compat.v2.linalg.LinearOperatorFullMatrix",
  "tensorflow.compat.v2.linalg.LinearOperatorIdentity",
  "tensorflow.compat.v2.linalg.LinearOperatorLowRankUpdate",
  "tensorflow.compat.v2.linalg.LinearOperatorLowerTriangular",
  "tensorflow.compat.v2.linalg.LinearOperatorScaledIdentity",
  "tensorflow.compat.v2.linalg.adjoint",
  "tensorflow.compat.v2.linalg.band_part",
  "tensorflow.compat.v2.linalg.cholesky",
  "tensorflow.compat.v2.linalg.cholesky_solve",
  "tensorflow.compat.v2.linalg.det",
  "tensorflow.compat.v2.linalg.diag",
  "tensorflow.compat.v2.linalg.diag_part",
  "tensorflow.compat.v2.linalg.eigh",
  "tensorflow.compat.v2.linalg.eye",
  "tensorflow.compat.v2.linalg.lstsq",
  "tensorflow.compat.v2.linalg.lu",
  "tensorflow.compat.v2.linalg.matmul",
  "tensorflow.compat.v2.linalg.matrix_rank",
  "tensorflow.compat.v2.linalg.matrix_transpose",
  "tensorflow.compat.v2.linalg.matvec",
  "tensorflow.compat.v2.linalg.norm",
  "tensorflow.compat.v2.linalg.pinv",
  "tensorflow.compat.v2.linalg.qr",
  "tensorflow.compat.v2.linalg.set_diag",
  "tensorflow.compat.v2.linalg.slogdet",
  "tensorflow.compat.v2.linalg.tensor_diag",
  "tensorflow.compat.v2.linalg.triangular_solve",
  "tensorflow.compat.v2.linspace",
  "tensorflow.compat.v2.logging.warn",
  "tensorflow.compat.v2.logical_and",
  "tensorflow.compat.v2.logical_not",
  "tensorflow.compat.v2.logical_or",
  "tensorflow.compat.v2.map_fn",
  "tensorflow.compat.v2.math",
  "tensorflow.compat.v2.math.abs",
  "tensorflow.compat.v2.math.accumulate_n",
  "tensorflow.compat.v2.math.acos",
  "tensorflow.compat.v2.math.acosh",
  "tensorflow.compat.v2.math.add",
  "tensorflow.compat.v2.math.add_n",
  "tensorflow.compat.v2.math.angle",
  "tensorflow.compat.v2.math.argmax",
  "tensorflow.compat.v2.math.argmin",
  "tensorflow.compat.v2.math.asin",
  "tensorflow.compat.v2.math.asinh",
  "tensorflow.compat.v2.math.atan",
  "tensorflow.compat.v2.math.atan2",
  "tensorflow.compat.v2.math.atanh",
  "tensorflow.compat.v2.math.bessel_i0",
  "tensorflow.compat.v2.math.bessel_i0e",
  "tensorflow.compat.v2.math.bessel_i1",
  "tensorflow.compat.v2.math.bessel_i1e",
  "tensorflow.compat.v2.math.betainc",
  "tensorflow.compat.v2.math.bincount",
  "tensorflow.compat.v2.math.ceil",
  "tensorflow.compat.v2.math.confusion_matrix",
  "tensorflow.compat.v2.math.conj",
  "tensorflow.compat.v2.math.cos",
  "tensorflow.compat.v2.math.cosh",
  "tensorflow.compat.v2.math.count_nonzero",
  "tensorflow.compat.v2.math.cumprod",
  "tensorflow.compat.v2.math.cumsum",
  "tensorflow.compat.v2.math.digamma",
  "tensorflow.compat.v2.math.divide",
  "tensorflow.compat.v2.math.divide_no_nan",
  "tensorflow.compat.v2.math.equal",
  "tensorflow.compat.v2.math.erf",
  "tensorflow.compat.v2.math.erfc",
  "tensorflow.compat.v2.math.exp",
  "tensorflow.compat.v2.math.expm1",
  "tensorflow.compat.v2.math.floor",
  "tensorflow.compat.v2.math.floordiv",
  "tensorflow.compat.v2.math.floormod",
  "tensorflow.compat.v2.math.greater",
  "tensorflow.compat.v2.math.greater_equal",
  "tensorflow.compat.v2.math.igamma",
  "tensorflow.compat.v2.math.igammac",
  "tensorflow.compat.v2.math.imag",
  "tensorflow.compat.v2.math.invert_permutation",
  "tensorflow.compat.v2.math.is_finite",
  "tensorflow.compat.v2.math.is_inf",
  "tensorflow.compat.v2.math.is_nan",
  "tensorflow.compat.v2.math.is_non_decreasing",
  "tensorflow.compat.v2.math.is_strictly_increasing",
  "tensorflow.compat.v2.math.l2_normalize",
  "tensorflow.compat.v2.math.lbeta",
  "tensorflow.compat.v2.math.less",
  "tensorflow.compat.v2.math.less_equal",
  "tensorflow.compat.v2.math.lgamma",
  "tensorflow.compat.v2.math.log",
  "tensorflow.compat.v2.math.log1p",
  "tensorflow.compat.v2.math.log_sigmoid",
  "tensorflow.compat.v2.math.log_softmax",
  "tensorflow.compat.v2.math.logical_and",
  "tensorflow.compat.v2.math.logical_not",
  "tensorflow.compat.v2.math.logical_or",
  "tensorflow.compat.v2.math.logical_xor",
  "tensorflow.compat.v2.math.maximum",
  "tensorflow.compat.v2.math.minimum",
  "tensorflow.compat.v2.math.multiply",
  "tensorflow.compat.v2.math.multiply_no_nan",
  "tensorflow.compat.v2.math.negative",
  "tensorflow.compat.v2.math.nextafter",
  "tensorflow.compat.v2.math.not_equal",
  "tensorflow.compat.v2.math.polygamma",
  "tensorflow.compat.v2.math.polyval",
  "tensorflow.compat.v2.math.pow",
  "tensorflow.compat.v2.math.real",
  "tensorflow.compat.v2.math.reciprocal",
  "tensorflow.compat.v2.math.reduce_all",
  "tensorflow.compat.v2.math.reduce_any",
  "tensorflow.compat.v2.math.reduce_logsumexp",
  "tensorflow.compat.v2.math.reduce_max",
  "tensorflow.compat.v2.math.reduce_mean",
  "tensorflow.compat.v2.math.reduce_min",
  "tensorflow.compat.v2.math.reduce_prod",
  "tensorflow.compat.v2.math.reduce_std",
  "tensorflow.compat.v2.math.reduce_sum",
  "tensorflow.compat.v2.math.reduce_variance",
  "tensorflow.compat.v2.math.rint",
  "tensorflow.compat.v2.math.round",
  "tensorflow.compat.v2.math.rsqrt",
  "tensorflow.compat.v2.math.sigmoid",
  "tensorflow.compat.v2.math.sign",
  "tensorflow.compat.v2.math.sin",
  "tensorflow.compat.v2.math.sinh",
  "tensorflow.compat.v2.math.softmax",
  "tensorflow.compat.v2.math.softplus",
  "tensorflow.compat.v2.math.softsign",
  "tensorflow.compat.v2.math.sqrt",
  "tensorflow.compat.v2.math.square",
  "tensorflow.compat.v2.math.squared_difference",
  "tensorflow.compat.v2.math.subtract",
  "tensorflow.compat.v2.math.tan",
  "tensorflow.compat.v2.math.tanh",
  "tensorflow.compat.v2.math.top_k",
  "tensorflow.compat.v2.math.truediv",
  "tensorflow.compat.v2.math.unsorted_segment_sum",
  "tensorflow.compat.v2.math.xdivy",
  "tensorflow.compat.v2.math.xlogy",
  "tensorflow.compat.v2.math.zeta",
  "tensorflow.compat.v2.matmul",
  "tensorflow.compat.v2.maximum",
  "tensorflow.compat.v2.meshgrid",
  "tensorflow.compat.v2.minimum",
  "tensorflow.compat.v2.multiply",
  "tensorflow.compat.v2.name_scope",
  "tensorflow.compat.v2.nest",
  "tensorflow.compat.v2.nest.assert_same_structure",
  "tensorflow.compat.v2.nest.flatten",
  "tensorflow.compat.v2.nest.is_nested",
  "tensorflow.compat.v2.nest.map_structure",
  "tensorflow.compat.v2.nest.pack_sequence_as",
  "tensorflow.compat.v2.newaxis",
  "tensorflow.compat.v2.newaxis.batch_shape",
  "tensorflow.compat.v2.newaxis.event_shape",
  "tensorflow.compat.v2.newaxis.shape",
  "tensorflow.compat.v2.nn.bias_add",
  "tensorflow.compat.v2.nn.l2_normalize",
  "tensorflow.compat.v2.nn.moments",
  "tensorflow.compat.v2.nn.relu",
  "tensorflow.compat.v2.nn.sigmoid",
  "tensorflow.compat.v2.nn.sigmoid_cross_entropy_with_logits",
  "tensorflow.compat.v2.nn.softmax",
  "tensorflow.compat.v2.nn.softmax_cross_entropy_with_logits",
  "tensorflow.compat.v2.nn.softplus",
  "tensorflow.compat.v2.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.compat.v2.nn.top_k",
  "tensorflow.compat.v2.no_op",
  "tensorflow.compat.v2.norm",
  "tensorflow.compat.v2.not_equal",
  "tensorflow.compat.v2.one_hot",
  "tensorflow.compat.v2.ones",
  "tensorflow.compat.v2.ones_like",
  "tensorflow.compat.v2.optimizers.Adam",
  "tensorflow.compat.v2.optimizers.Optimizer",
  "tensorflow.compat.v2.optimizers.SGD",
  "tensorflow.compat.v2.pad",
  "tensorflow.compat.v2.pow",
  "tensorflow.compat.v2.qint16",
  "tensorflow.compat.v2.qint16.as_numpy_dtype",
  "tensorflow.compat.v2.random.categorical",
  "tensorflow.compat.v2.random.gamma",
  "tensorflow.compat.v2.random.normal",
  "tensorflow.compat.v2.random.poisson",
  "tensorflow.compat.v2.random.set_seed",
  "tensorflow.compat.v2.random.shuffle",
  "tensorflow.compat.v2.random.uniform",
  "tensorflow.compat.v2.range",
  "tensorflow.compat.v2.rank",
  "tensorflow.compat.v2.reduce_all",
  "tensorflow.compat.v2.reduce_any",
  "tensorflow.compat.v2.reduce_logsumexp",
  "tensorflow.compat.v2.reduce_max",
  "tensorflow.compat.v2.reduce_mean",
  "tensorflow.compat.v2.reduce_min",
  "tensorflow.compat.v2.reduce_prod",
  "tensorflow.compat.v2.reduce_sum",
  "tensorflow.compat.v2.register_tensor_conversion_function",
  "tensorflow.compat.v2.reshape",
  "tensorflow.compat.v2.reverse",
  "tensorflow.compat.v2.roll",
  "tensorflow.compat.v2.round",
  "tensorflow.compat.v2.scan",
  "tensorflow.compat.v2.searchsorted",
  "tensorflow.compat.v2.sets.difference",
  "tensorflow.compat.v2.shape",
  "tensorflow.compat.v2.sigmoid",
  "tensorflow.compat.v2.sign",
  "tensorflow.compat.v2.signal.dct",
  "tensorflow.compat.v2.signal.fft",
  "tensorflow.compat.v2.signal.fft2d",
  "tensorflow.compat.v2.signal.fft3d",
  "tensorflow.compat.v2.signal.idct",
  "tensorflow.compat.v2.signal.ifft",
  "tensorflow.compat.v2.signal.ifft2d",
  "tensorflow.compat.v2.signal.ifft3d",
  "tensorflow.compat.v2.sin",
  "tensorflow.compat.v2.sinh",
  "tensorflow.compat.v2.size",
  "tensorflow.compat.v2.slice",
  "tensorflow.compat.v2.sort",
  "tensorflow.compat.v2.sparse.reshape",
  "tensorflow.compat.v2.sparse.slice",
  "tensorflow.compat.v2.sparse.sparse_dense_matmul",
  "tensorflow.compat.v2.sparse.to_dense",
  "tensorflow.compat.v2.split",
  "tensorflow.compat.v2.sqrt",
  "tensorflow.compat.v2.square",
  "tensorflow.compat.v2.squeeze",
  "tensorflow.compat.v2.stack",
  "tensorflow.compat.v2.stop_gradient",
  "tensorflow.compat.v2.string",
  "tensorflow.compat.v2.switch_case",
  "tensorflow.compat.v2.tan",
  "tensorflow.compat.v2.tensor_scatter_nd_add",
  "tensorflow.compat.v2.tensor_scatter_nd_update",
  "tensorflow.compat.v2.tensordot",
  "tensorflow.compat.v2.test.Benchmark",
  "tensorflow.compat.v2.test.TestCase",
  "tensorflow.compat.v2.test.is_gpu_available",
  "tensorflow.compat.v2.test.main",
  "tensorflow.compat.v2.tile",
  "tensorflow.compat.v2.transpose",
  "tensorflow.compat.v2.uint16",
  "tensorflow.compat.v2.uint16.get",
  "tensorflow.compat.v2.uint8.get",
  "tensorflow.compat.v2.unique",
  "tensorflow.compat.v2.unstack",
  "tensorflow.compat.v2.where",
  "tensorflow.compat.v2.while_loop",
  "tensorflow.compat.v2.xla.experimental.compile",
  "tensorflow.compat.v2.zeros",
  "tensorflow.compat.v2.zeros_like",
  "tensorflow.concat",
  "tensorflow.expand_dims",
  "tensorflow.int64",
  "tensorflow.keras.Sequential",
  "tensorflow.keras.utils.CustomObjectScope",
  "tensorflow.matmul",
  "tensorflow.nn.bias_add",
  "tensorflow.nn.relu",
  "tensorflow.ones",
  "tensorflow.python.autograph.converters.break_statements",
  "tensorflow.python.autograph.converters.break_statements.transform",
  "tensorflow.python.autograph.converters.continue_statements",
  "tensorflow.python.autograph.converters.continue_statements.transform",
  "tensorflow.python.autograph.converters.return_statements",
  "tensorflow.python.autograph.converters.return_statements.transform",
  "tensorflow.python.autograph.core.converter",
  "tensorflow.python.autograph.core.converter.ConversionOptions",
  "tensorflow.python.autograph.core.converter.EntityContext",
  "tensorflow.python.autograph.core.converter.ProgramContext",
  "tensorflow.python.autograph.core.converter.standard_analysis",
  "tensorflow.python.autograph.core.naming",
  "tensorflow.python.autograph.core.naming.Namer",
  "tensorflow.python.autograph.pyct.anno",
  "tensorflow.python.autograph.pyct.anno.Basic.QN",
  "tensorflow.python.autograph.pyct.anno.Static.SCOPE",
  "tensorflow.python.autograph.pyct.anno.getanno",
  "tensorflow.python.autograph.pyct.anno.hasanno",
  "tensorflow.python.autograph.pyct.common_transformers.anf",
  "tensorflow.python.autograph.pyct.common_transformers.anf.ANY",
  "tensorflow.python.autograph.pyct.common_transformers.anf.ASTEdgePattern",
  "tensorflow.python.autograph.pyct.common_transformers.anf.REPLACE",
  "tensorflow.python.autograph.pyct.common_transformers.anf.transform",
  "tensorflow.python.autograph.pyct.compiler",
  "tensorflow.python.autograph.pyct.compiler.ast_to_object",
  "tensorflow.python.autograph.pyct.inspect_utils",
  "tensorflow.python.autograph.pyct.inspect_utils.getfutureimports",
  "tensorflow.python.autograph.pyct.parser",
  "tensorflow.python.autograph.pyct.parser.parse_entity",
  "tensorflow.python.autograph.pyct.qual_names",
  "tensorflow.python.autograph.pyct.qual_names.QN",
  "tensorflow.python.autograph.pyct.templates",
  "tensorflow.python.autograph.pyct.templates.replace",
  "tensorflow.python.autograph.pyct.templates.replace_as_expression",
  "tensorflow.python.autograph.pyct.transformer",
  "tensorflow.python.autograph.pyct.transformer.Base",
  "tensorflow.python.autograph.pyct.transformer.EntityInfo",
  "tensorflow.python.client.session",
  "tensorflow.python.client.session.register_session_run_conversion_functions",
  "tensorflow.python.framework.composite_tensor",
  "tensorflow.python.framework.composite_tensor.CompositeTensor",
  "tensorflow.python.framework.ops",
  "tensorflow.python.framework.ops.EagerTensor",
  "tensorflow.python.framework.ops.convert_to_tensor_or_composite",
  "tensorflow.python.framework.tensor_util",
  "tensorflow.python.framework.tensor_util.constant_value_as_shape",
  "tensorflow.python.framework.test_util",
  "tensorflow.python.framework.test_util.TensorFlowTestCase",
  "tensorflow.python.framework.test_util.VectorDistributionTestHelpers",
  "tensorflow.python.framework.test_util.enable_control_flow_v2",
  "tensorflow.python.framework.test_util.run_all_in_graph_and_eager_modes",
  "tensorflow.python.framework.test_util.run_deprecated_v1",
  "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes",
  "tensorflow.python.framework.type_spec",
  "tensorflow.python.framework.type_spec.BatchableTypeSpec",
  "tensorflow.python.framework.type_spec.TypeSpec.from_value",
  "tensorflow.python.keras.testing_utils",
  "tensorflow.python.keras.testing_utils.layer_test",
  "tensorflow.python.keras.utils.generic_utils",
  "tensorflow.python.keras.utils.generic_utils.func_dump",
  "tensorflow.python.keras.utils.generic_utils.func_load",
  "tensorflow.python.keras.utils.tf_utils",
  "tensorflow.python.keras.utils.tf_utils.register_symbolic_tensor_type",
  "tensorflow.python.layers.utils",
  "tensorflow.python.layers.utils.conv_output_length",
  "tensorflow.python.layers.utils.convert_data_format",
  "tensorflow.python.ops.array_ops",
  "tensorflow.python.ops.array_ops.prevent_gradient",
  "tensorflow.python.ops.control_flow_ops",
  "tensorflow.python.ops.control_flow_ops._case_helper",
  "tensorflow.python.ops.control_flow_util",
  "tensorflow.python.ops.control_flow_util.ENABLE_CONTROL_FLOW_V2",
  "tensorflow.python.ops.control_flow_util.GraphOrParentsInXlaContext",
  "tensorflow.python.ops.gen_array_ops",
  "tensorflow.python.ops.gen_array_ops.unique_with_counts_v2",
  "tensorflow.python.ops.gradient_checker_v2",
  "tensorflow.python.ops.gradient_checker_v2.compute_gradient",
  "tensorflow.python.ops.gradient_checker_v2.max_error",
  "tensorflow.python.ops.linalg.linear_operator_addition",
  "tensorflow.python.ops.linalg.linear_operator_addition.add_operators",
  "tensorflow.python.ops.linalg.linear_operator_util",
  "tensorflow.python.ops.linalg.linear_operator_util.matrix_triangular_solve_with_broadcast",
  "tensorflow.python.ops.nn_ops",
  "tensorflow.python.ops.nn_ops.Convolution",
  "tensorflow.python.ops.random_ops",
  "tensorflow.python.ops.random_ops.parameterized_truncated_normal",
  "tensorflow.python.ops.spectral_ops_test_util",
  "tensorflow.python.ops.spectral_ops_test_util.fft_kernel_label_map",
  "tensorflow.python.ops.unconnected_gradients.UnconnectedGradients",
  "tensorflow.python.ops.unconnected_gradients.UnconnectedGradients.NONE",
  "tensorflow.python.platform.test",
  "tensorflow.python.platform.test.main",
  "tensorflow.python.pywrap_tensorflow",
  "tensorflow.python.pywrap_tensorflow.TF_TryEvaluateConstant_wrapper",
  "tensorflow.python.training.training_ops",
  "tensorflow.python.training.training_ops.resource_apply_gradient_descent",
  "tensorflow.python.util.all_util.remove_undocumented",
  "tensorflow.python.util.deprecation",
  "tensorflow.python.util.deprecation.deprecated",
  "tensorflow.python.util.deprecation.silence",
  "tensorflow.python.util.lazy_loader",
  "tensorflow.python.util.lazy_loader.LazyLoader",
  "tensorflow.python.util.nest",
  "tensorflow.python.util.nest._is_namedtuple",
  "tensorflow.python.util.nest.flatten_up_to",
  "tensorflow.python.util.nest.get_traverse_shallow_structure",
  "tensorflow.python.util.nest.map_structure_up_to",
  "tensorflow.python.util.tf_inspect",
  "tensorflow.python.util.tf_inspect._inspect.getargvalues",
  "tensorflow.python.util.tf_inspect._inspect.stack",
  "tensorflow.python.util.tf_inspect.getdoc",
  "tensorflow.python.util.tf_inspect.getfullargspec",
  "tensorflow.python.util.tf_inspect.getmro",
  "tensorflow.python.util.tf_inspect.isclass",
  "tensorflow.random.uniform",
  "tensorflow.shape",
  "tensorflow.size",
  "tensorflow.test.main",
  "tensorflow.zeros",
  "tensorflow.zeros_like",
  "tensorflow_probability.__init__._ensure_tf_install",
  "tensorflow_probability.bijectors",
  "tensorflow_probability.bijectors.Affine",
  "tensorflow_probability.bijectors.AffineScalar",
  "tensorflow_probability.bijectors.Bijector",
  "tensorflow_probability.bijectors.Exp",
  "tensorflow_probability.bijectors.Reshape",
  "tensorflow_probability.bijectors.Sigmoid",
  "tensorflow_probability.bijectors.Softplus",
  "tensorflow_probability.distributions",
  "tensorflow_probability.distributions.Bernoulli",
  "tensorflow_probability.distributions.Bernoulli.__init__.__doc__",
  "tensorflow_probability.distributions.Categorical",
  "tensorflow_probability.distributions.Distribution",
  "tensorflow_probability.distributions.LinearGaussianStateSpaceModel",
  "tensorflow_probability.distributions.MultivariateNormalDiag",
  "tensorflow_probability.distributions.MultivariateNormalFullCovariance",
  "tensorflow_probability.distributions.Normal",
  "tensorflow_probability.distributions.TransformedDistribution",
  "tensorflow_probability.distributions.TruncatedNormal",
  "tensorflow_probability.distributions.VariationalGaussianProcess",
  "tensorflow_probability.distributions.VariationalGaussianProcess.optimal_variational_posterior",
  "tensorflow_probability.distributions.VonMisesFisher",
  "tensorflow_probability.distributions.Wishart",
  "tensorflow_probability.distributions.__dict__",
  "tensorflow_probability.edward2",
  "tensorflow_probability.edward2.Bernoulli",
  "tensorflow_probability.edward2.Bernoulli.__doc__",
  "tensorflow_probability.edward2.Bernoulli.__name__",
  "tensorflow_probability.edward2.Dirichlet",
  "tensorflow_probability.edward2.Normal",
  "tensorflow_probability.edward2.Poisson",
  "tensorflow_probability.edward2.RandomVariable",
  "tensorflow_probability.edward2.__dict__",
  "tensorflow_probability.edward2.as_random_variable",
  "tensorflow_probability.edward2.get_next_interceptor",
  "tensorflow_probability.edward2.interceptable",
  "tensorflow_probability.edward2.interception",
  "tensorflow_probability.edward2.make_log_joint_fn",
  "tensorflow_probability.edward2.make_value_setter",
  "tensorflow_probability.edward2.tape",
  "tensorflow_probability.experimental.mcmc.NoUTurnSampler",
  "tensorflow_probability.experimental.substrates.jax",
  "tensorflow_probability.experimental.substrates.numpy",
  "tensorflow_probability.glm.Bernoulli",
  "tensorflow_probability.glm.BernoulliNormalCDF",
  "tensorflow_probability.glm.CustomExponentialFamily",
  "tensorflow_probability.glm.GammaExp",
  "tensorflow_probability.glm.GammaSoftplus",
  "tensorflow_probability.glm.LogNormal",
  "tensorflow_probability.glm.LogNormalSoftplus",
  "tensorflow_probability.glm.Normal",
  "tensorflow_probability.glm.NormalReciprocal",
  "tensorflow_probability.glm.Poisson",
  "tensorflow_probability.glm.PoissonSoftplus",
  "tensorflow_probability.glm.fit",
  "tensorflow_probability.glm.fit_sparse",
  "tensorflow_probability.glm.fit_sparse_one_step",
  "tensorflow_probability.layers.BlockwiseInitializer",
  "tensorflow_probability.layers.Convolution1DFlipout",
  "tensorflow_probability.layers.Convolution1DReparameterization",
  "tensorflow_probability.layers.Convolution2DFlipout",
  "tensorflow_probability.layers.Convolution2DReparameterization",
  "tensorflow_probability.layers.Convolution3DFlipout",
  "tensorflow_probability.layers.Convolution3DReparameterization",
  "tensorflow_probability.layers.DenseFlipout",
  "tensorflow_probability.layers.DenseLocalReparameterization",
  "tensorflow_probability.layers.DenseReparameterization",
  "tensorflow_probability.layers.DenseVariational",
  "tensorflow_probability.layers.DistributionLambda",
  "tensorflow_probability.layers.VariableLayer",
  "tensorflow_probability.layers.VariationalGaussianProcess",
  "tensorflow_probability.layers.default_mean_field_normal_fn",
  "tensorflow_probability.layers.default_multivariate_normal_fn",
  "tensorflow_probability.math.batch_interp_regular_1d_grid",
  "tensorflow_probability.math.batch_interp_regular_nd_grid",
  "tensorflow_probability.math.cholesky_concat",
  "tensorflow_probability.math.clip_by_value_preserve_gradient",
  "tensorflow_probability.math.custom_gradient",
  "tensorflow_probability.math.dense_to_sparse",
  "tensorflow_probability.math.diag_jacobian",
  "tensorflow_probability.math.fill_triangular",
  "tensorflow_probability.math.fill_triangular_inverse",
  "tensorflow_probability.math.interp_regular_1d_grid",
  "tensorflow_probability.math.log1psquare",
  "tensorflow_probability.math.log_add_exp",
  "tensorflow_probability.math.log_combinations",
  "tensorflow_probability.math.lu_matrix_inverse",
  "tensorflow_probability.math.lu_reconstruct",
  "tensorflow_probability.math.lu_solve",
  "tensorflow_probability.math.minimize",
  "tensorflow_probability.math.ode.BDF",
  "tensorflow_probability.math.ode.ChosenBySolver",
  "tensorflow_probability.math.pivoted_cholesky",
  "tensorflow_probability.math.psd_kernels.ExpSinSquared",
  "tensorflow_probability.math.psd_kernels.ExponentiatedQuadratic",
  "tensorflow_probability.math.psd_kernels.FeatureScaled",
  "tensorflow_probability.math.psd_kernels.FeatureTransformed",
  "tensorflow_probability.math.psd_kernels.KumaraswamyTransformed",
  "tensorflow_probability.math.psd_kernels.Linear",
  "tensorflow_probability.math.psd_kernels.MaternFiveHalves",
  "tensorflow_probability.math.psd_kernels.MaternOneHalf",
  "tensorflow_probability.math.psd_kernels.MaternThreeHalves",
  "tensorflow_probability.math.psd_kernels.Polynomial",
  "tensorflow_probability.math.psd_kernels.PositiveSemidefiniteKernel",
  "tensorflow_probability.math.psd_kernels.RationalQuadratic",
  "tensorflow_probability.math.psd_kernels.SchurComplement",
  "tensorflow_probability.math.random_rademacher",
  "tensorflow_probability.math.random_rayleigh",
  "tensorflow_probability.math.reduce_logmeanexp",
  "tensorflow_probability.math.reduce_weighted_logsumexp",
  "tensorflow_probability.math.secant_root",
  "tensorflow_probability.math.soft_threshold",
  "tensorflow_probability.math.softplus_inverse",
  "tensorflow_probability.math.sparse_or_dense_matmul",
  "tensorflow_probability.math.sparse_or_dense_matvecmul",
  "tensorflow_probability.math.value_and_gradient",
  "tensorflow_probability.mcmc.DualAveragingStepSizeAdaptation",
  "tensorflow_probability.mcmc.HamiltonianMonteCarlo",
  "tensorflow_probability.mcmc.MetropolisAdjustedLangevinAlgorithm",
  "tensorflow_probability.mcmc.MetropolisHastings",
  "tensorflow_probability.mcmc.NoUTurnSampler",
  "tensorflow_probability.mcmc.RandomWalkMetropolis",
  "tensorflow_probability.mcmc.ReplicaExchangeMC",
  "tensorflow_probability.mcmc.SimpleStepSizeAdaptation",
  "tensorflow_probability.mcmc.SliceSampler",
  "tensorflow_probability.mcmc.TransformedTransitionKernel",
  "tensorflow_probability.mcmc.TransitionKernel",
  "tensorflow_probability.mcmc.UncalibratedHamiltonianMonteCarlo",
  "tensorflow_probability.mcmc.default_exchange_proposed_fn",
  "tensorflow_probability.mcmc.effective_sample_size",
  "tensorflow_probability.mcmc.make_simple_step_size_update_policy",
  "tensorflow_probability.mcmc.potential_scale_reduction",
  "tensorflow_probability.mcmc.random_walk_normal_fn",
  "tensorflow_probability.mcmc.random_walk_uniform_fn",
  "tensorflow_probability.mcmc.sample_annealed_importance_chain",
  "tensorflow_probability.mcmc.sample_chain",
  "tensorflow_probability.mcmc.sample_halton_sequence",
  "tensorflow_probability.monte_carlo.expectation",
  "tensorflow_probability.optimizer.StochasticGradientLangevinDynamics",
  "tensorflow_probability.optimizer.VariationalSGD",
  "tensorflow_probability.optimizer.bfgs_minimize",
  "tensorflow_probability.optimizer.converged_all",
  "tensorflow_probability.optimizer.converged_any",
  "tensorflow_probability.optimizer.differential_evolution_minimize",
  "tensorflow_probability.optimizer.lbfgs_minimize",
  "tensorflow_probability.optimizer.linesearch.hager_zhang",
  "tensorflow_probability.optimizer.nelder_mead_minimize",
  "tensorflow_probability.optimizer.proximal_hessian_sparse_minimize",
  "tensorflow_probability.optimizer.proximal_hessian_sparse_one_step",
  "tensorflow_probability.positive_semidefinite_kernels",
  "tensorflow_probability.positive_semidefinite_kernels.ExponentiatedQuadratic",
  "tensorflow_probability.positive_semidefinite_kernels.FeatureScaled",
  "tensorflow_probability.positive_semidefinite_kernels.MaternOneHalf",
  "tensorflow_probability.positive_semidefinite_kernels.SchurComplement",
  "tensorflow_probability.python.__init__._allowed_symbols",
  "tensorflow_probability.python.bijectors.bijector.forward",
  "tensorflow_probability.python.bijectors.bijector.forward_min_event_ndims",
  "tensorflow_probability.python.bijectors.bijector.inverse",
  "tensorflow_probability.python.bijectors.bijector.inverse_min_event_ndims",
  "tensorflow_probability.python.distributions.Bernoulli.logits",
  "tensorflow_probability.python.distributions.Bernoulli.probs",
  "tensorflow_probability.python.distributions.Distribution.log_prob",
  "tensorflow_probability.python.distributions.Distribution.mean",
  "tensorflow_probability.python.distributions.Distribution.mode",
  "tensorflow_probability.python.distributions.Distribution.prob",
  "tensorflow_probability.python.distributions.Distribution.sample",
  "tensorflow_probability.python.distributions.Distribution.stddev",
  "tensorflow_probability.python.distributions.Distribution.variance",
  "tensorflow_probability.python.distributions.MultivariateNormalDiag.sample",
  "tensorflow_probability.python.distributions.Normal.param_shapes",
  "tensorflow_probability.python.distributions.Normal.param_static_shapes",
  "tensorflow_probability.python.distributions.Normal.sample",
  "tensorflow_probability.python.distributions.__dict__",
  "tensorflow_probability.python.distributions.__init__._deprecated",
  "tensorflow_probability.python.distributions.batch_shape",
  "tensorflow_probability.python.distributions.batch_shape_tensor",
  "tensorflow_probability.python.distributions.beta.sample",
  "tensorflow_probability.python.distributions.chi2.sample",
  "tensorflow_probability.python.distributions.distribution.__class__",
  "tensorflow_probability.python.distributions.distribution.batch_shape",
  "tensorflow_probability.python.distributions.distribution.batch_shape_tensor",
  "tensorflow_probability.python.distributions.exponential.cdf",
  "tensorflow_probability.python.distributions.exponential.entropy",
  "tensorflow_probability.python.distributions.exponential.log_prob",
  "tensorflow_probability.python.distributions.exponential.log_survival_function",
  "tensorflow_probability.python.distributions.exponential.mean",
  "tensorflow_probability.python.distributions.exponential.prob",
  "tensorflow_probability.python.distributions.exponential.quantile",
  "tensorflow_probability.python.distributions.exponential.sample",
  "tensorflow_probability.python.distributions.exponential.variance",
  "tensorflow_probability.python.experimental.__init__._allowed_symbols",
  "tensorflow_probability.python.experimental.auto_batching.__init__._allowed_symbols",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.FULL",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.NULL",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.REGISTER",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.TEMPORARY",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pc_var.tensors.dtype",
  "tensorflow_probability.python.experimental.edward2.__init__._allowed_symbols",
  "tensorflow_probability.python.experimental.edward2.generated_random_variables.rv_dict.keys",
  "tensorflow_probability.python.experimental.mcmc.__init__._allowed_symbols",
  "tensorflow_probability.python.experimental.substrates.__init__._allowed_symbols",
  "tensorflow_probability.python.experimental.substrates.jax.math.generic.log_add_exp",
  "tensorflow_probability.python.experimental.substrates.jax.math.generic.log_combinations",
  "tensorflow_probability.python.experimental.substrates.jax.math.generic.reduce_weighted_logsumexp",
  "tensorflow_probability.python.experimental.substrates.jax.math.generic.softplus_inverse",
  "tensorflow_probability.python.experimental.substrates.jax.math.gradient.value_and_gradient",
  "tensorflow_probability.python.experimental.substrates.jax.math.linalg.fill_triangular",
  "tensorflow_probability.python.experimental.substrates.jax.math.linalg.fill_triangular_inverse",
  "tensorflow_probability.python.experimental.substrates.jax.math.numeric.log1psquare",
  "tensorflow_probability.python.experimental.substrates.jax.stats.leave_one_out.log_loomean_exp",
  "tensorflow_probability.python.experimental.substrates.jax.stats.leave_one_out.log_loosum_exp",
  "tensorflow_probability.python.experimental.substrates.jax.stats.leave_one_out.log_soomean_exp",
  "tensorflow_probability.python.experimental.substrates.jax.stats.leave_one_out.log_soosum_exp",
  "tensorflow_probability.python.experimental.substrates.jax.util.seed_stream.SeedStream",
  "tensorflow_probability.python.experimental.substrates.numpy.math.generic.log_add_exp",
  "tensorflow_probability.python.experimental.substrates.numpy.math.generic.log_combinations",
  "tensorflow_probability.python.experimental.substrates.numpy.math.generic.reduce_weighted_logsumexp",
  "tensorflow_probability.python.experimental.substrates.numpy.math.generic.softplus_inverse",
  "tensorflow_probability.python.experimental.substrates.numpy.math.linalg.fill_triangular",
  "tensorflow_probability.python.experimental.substrates.numpy.math.linalg.fill_triangular_inverse",
  "tensorflow_probability.python.experimental.substrates.numpy.math.numeric.log1psquare",
  "tensorflow_probability.python.experimental.substrates.numpy.stats.leave_one_out.log_loomean_exp",
  "tensorflow_probability.python.experimental.substrates.numpy.stats.leave_one_out.log_loosum_exp",
  "tensorflow_probability.python.experimental.substrates.numpy.stats.leave_one_out.log_soomean_exp",
  "tensorflow_probability.python.experimental.substrates.numpy.stats.leave_one_out.log_soosum_exp",
  "tensorflow_probability.python.experimental.substrates.numpy.util.seed_stream.SeedStream",
  "tensorflow_probability.python.glm.__init__._allowed_symbols",
  "tensorflow_probability.python.internal.backend.numpy.adjoint_registrations",
  "tensorflow_probability.python.internal.backend.numpy.cholesky_registrations",
  "tensorflow_probability.python.internal.backend.numpy.compat.v2.Module",
  "tensorflow_probability.python.internal.backend.numpy.compat.v2.Variable",
  "tensorflow_probability.python.internal.backend.numpy.convert_to_tensor",
  "tensorflow_probability.python.internal.backend.numpy.inverse_registrations",
  "tensorflow_probability.python.internal.backend.numpy.linalg.eye",
  "tensorflow_probability.python.internal.backend.numpy.linalg.matmul",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_algebra",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_block_diag",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_circulant",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_composition",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_diag",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_full_matrix",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_identity",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_kronecker",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_low_rank_update",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_lower_triangular",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_toeplitz",
  "tensorflow_probability.python.internal.backend.numpy.linear_operator_zeros",
  "tensorflow_probability.python.internal.backend.numpy.matmul_registrations",
  "tensorflow_probability.python.internal.backend.numpy.solve_registrations",
  "tensorflow_probability.python.internal.hypothesis_testlib.Support.VECTOR_SIZE_TRIANGULAR",
  "tensorflow_probability.python.internal.tensor_util.is_mutable",
  "tensorflow_probability.python.layers.CategoricalMixtureOfOneHotCategorical.new",
  "tensorflow_probability.python.layers.CategoricalMixtureOfOneHotCategorical.params_size",
  "tensorflow_probability.python.layers.IndependentBernoulli.params_size",
  "tensorflow_probability.python.layers.IndependentLogistic.params_size",
  "tensorflow_probability.python.layers.IndependentNormal.params_size",
  "tensorflow_probability.python.layers.IndependentPoisson.params_size",
  "tensorflow_probability.python.layers.MixtureNormal.params_size",
  "tensorflow_probability.python.layers.MixtureSameFamily.new",
  "tensorflow_probability.python.layers.MixtureSameFamily.params_size",
  "tensorflow_probability.python.layers.MultivariateNormalTriL.new",
  "tensorflow_probability.python.layers.MultivariateNormalTriL.params_size",
  "tensorflow_probability.python.layers.OneHotCategorical.new",
  "tensorflow_probability.python.layers.OneHotCategorical.params_size",
  "tensorflow_probability.python.math.__init__._allowed_symbols",
  "tensorflow_probability.python.math.psd_kernels.__init__._allowed_symbols",
  "tensorflow_probability.python.monte_carlo.__init__._allowed_symbols",
  "tensorflow_probability.python.optimizer.__init__._allowed_symbols",
  "tensorflow_probability.python.optimizer.linesearch.__init__._allowed_symbols",
  "tensorflow_probability.python.stats.__init__.__all__",
  "tensorflow_probability.python.sts.__init__._allowed_symbols",
  "tensorflow_probability.python.trainable_distributions.__init__._allowed_symbols",
  "tensorflow_probability.python.util.__init__._allowed_symbols",
  "tensorflow_probability.python.util.seed_stream.SeedStream.__init__",
  "tensorflow_probability.python.vi.__init__._allowed_symbols",
  "tensorflow_probability.stats.auto_correlation",
  "tensorflow_probability.stats.brier_decomposition",
  "tensorflow_probability.stats.brier_score",
  "tensorflow_probability.stats.cholesky_covariance",
  "tensorflow_probability.stats.correlation",
  "tensorflow_probability.stats.count_integers",
  "tensorflow_probability.stats.covariance",
  "tensorflow_probability.stats.expected_calibration_error",
  "tensorflow_probability.stats.find_bins",
  "tensorflow_probability.stats.histogram",
  "tensorflow_probability.stats.log_average_probs",
  "tensorflow_probability.stats.log_loomean_exp",
  "tensorflow_probability.stats.log_loosum_exp",
  "tensorflow_probability.stats.log_soomean_exp",
  "tensorflow_probability.stats.log_soosum_exp",
  "tensorflow_probability.stats.percentile",
  "tensorflow_probability.stats.quantiles",
  "tensorflow_probability.stats.stddev",
  "tensorflow_probability.stats.variance",
  "tensorflow_probability.sts.LocalLevel",
  "tensorflow_probability.sts.LocalLinearTrend",
  "tensorflow_probability.sts.MaskedTimeSeries",
  "tensorflow_probability.sts.Seasonal",
  "tensorflow_probability.sts.Sum",
  "tensorflow_probability.sts.build_factored_surrogate_posterior",
  "tensorflow_probability.sts.build_factored_variational_loss",
  "tensorflow_probability.sts.decompose_by_component",
  "tensorflow_probability.sts.decompose_forecast_by_component",
  "tensorflow_probability.sts.fit_with_hmc",
  "tensorflow_probability.sts.forecast",
  "tensorflow_probability.sts.impute_missing_values",
  "tensorflow_probability.sts.one_step_predictive",
  "tensorflow_probability.trainable_distributions.bernoulli",
  "tensorflow_probability.trainable_distributions.multivariate_normal_tril",
  "tensorflow_probability.trainable_distributions.normal",
  "tensorflow_probability.trainable_distributions.poisson",
  "tensorflow_probability.trainable_distributions.softplus_and_shift",
  "tensorflow_probability.trainable_distributions.tril_with_diag_softplus_and_shift",
  "tensorflow_probability.util.DeferredTensor",
  "tensorflow_probability.util.SeedStream",
  "tensorflow_probability.vi.amari_alpha",
  "tensorflow_probability.vi.arithmetic_geometric",
  "tensorflow_probability.vi.chi_square",
  "tensorflow_probability.vi.csiszar_vimco",
  "tensorflow_probability.vi.csiszar_vimco_helper",
  "tensorflow_probability.vi.dual_csiszar_function",
  "tensorflow_probability.vi.fit_surrogate_posterior",
  "tensorflow_probability.vi.jeffreys",
  "tensorflow_probability.vi.jensen_shannon",
  "tensorflow_probability.vi.kl_forward",
  "tensorflow_probability.vi.kl_reverse",
  "tensorflow_probability.vi.log1p_abs",
  "tensorflow_probability.vi.modified_gan",
  "tensorflow_probability.vi.monte_carlo_variational_loss",
  "tensorflow_probability.vi.mutual_information",
  "tensorflow_probability.vi.pearson",
  "tensorflow_probability.vi.squared_hellinger",
  "tensorflow_probability.vi.symmetrized_csiszar_function",
  "tensorflow_probability.vi.t_power",
  "tensorflow_probability.vi.total_variation",
  "tensorflow_probability.vi.triangular",
  "test_fn",
  "test_points_fn",
  "textwrap",
  "textwrap.dedent",
  "textwrap.wrap",
  "tfp_f",
  "threading",
  "threading.local",
  "time",
  "time.time",
  "to_numpy_arrays",
  "trace",
  "trace_fn",
  "traceback",
  "traceback.format_stack",
  "true_log_joint",
  "true_mvndiag_sample",
  "true_normal_sample",
  "truthy",
  "types",
  "types.FunctionType",
  "types.LambdaType",
  "types.ModuleType",
  "unflatten",
  "unnormalized_posterior_log_prob",
  "unsupported_fn",
  "update",
  "update_factorization",
  "vae_model",
  "vae_model.compile",
  "vae_model.fit",
  "validate_equal_last_dim",
  "value_and_gradients_fn",
  "value_and_gradients_function",
  "var",
  "variance_entry",
  "variational_loss_fn",
  "vecf",
  "vector_size_to_square_matrix_size",
  "walk_graph",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "weakref",
  "weakref.ref",
  "which_clip",
  "with_dependencies",
  "wrap",
  "wrapped_init",
  "y_func"
 ],
 "deps": {
  "Decoder": [],
  "Encoder": [],
  "ExpForwardOnly": [],
  "ExpInverseOnly": [],
  "FeatureNdimsKernel": [],
  "Function": [],
  "HasFields": [],
  "HashableWeakRef": [],
  "IndepBern1d": [],
  "IndepBern1dSliceable": [],
  "InnerResults": [],
  "KernelFn": [],
  "MVNCholPrecisionTriL": [],
  "Model": [],
  "MyDist": [],
  "MyDistException": [],
  "NUTSKernelResults": [],
  "NamedVariable": [],
  "NoFields": [],
  "Results": [],
  "Root": [],
  "SplineParams": [],
  "Sub1": [],
  "Sub11": [],
  "Sub2": [],
  "TensorShape": [],
  "TerribleDistribution": [],
  "_AutomaticJacobian": [],
  "_BDFDiagnostics": [],
  "_BDFIterand": [],
  "_BDFSolverInternalState": [],
  "_BareBonesBijector": [],
  "_NewtonIterand": [],
  "_ProductKernel": [],
  "_SumKernel": [],
  "__future__": [],
  "_add": [],
  "_assert_ndims_statically": [],
  "_assert_shape": [],
  "_axis_size": [],
  "_batch_of_zeros_with_rightmost_singletons": [],
  "_batch_univariate_softmax": [],
  "_binomial_subtree_acceptance_batched": [],
  "_bisect": [],
  "_bootstrap_results": [],
  "_broadcast": [],
  "_broadcast_2": [],
  "_broadcast_ab": [],
  "_build_tree": [],
  "_buildtree": [],
  "_check": [],
  "_check2d": [],
  "_check2d_rows": [],
  "_choose_next_op": [],
  "_compose_augmented": [],
  "_compute": [],
  "_compute_non_batch_kl": [],
  "_compute_quantiles": [],
  "_continue_test_batched": [],
  "_convert_to_tensor": [],
  "_create_polynomial": [],
  "_decompose_augmented": [],
  "_dkwm_cdf_envelope": [],
  "_do_update": [],
  "_ensure_list": [],
  "_evaluate_objective_multiple": [],
  "_expand_is_accepted_like": [],
  "_expand_scalar": [],
  "_expand_tensor": [],
  "_expand_x_fn": [],
  "_expected_cdf": [],
  "_expected_pdf": [],
  "_explore": [],
  "_f": [],
  "_get_batch_ndims": [],
  "_get_final_shape": [],
  "_get_indices": [],
  "_get_leftmost_dim_size": [],
  "_get_ndims": [],
  "_get_rank": [],
  "_get_samples": [],
  "_get_static_ndims": [],
  "_hessian_diag_elt_with_l2": [],
  "_impl": [],
  "_importance_sampler_positive_f": [],
  "_init": [],
  "_is_list_like": [],
  "_itemwise_error_rate": [],
  "_joint_log_prob": [],
  "_kernel_fn": [],
  "_kl_gamma_gamma": [],
  "_label_str": [],
  "_lbeta": [],
  "_log_joint": [],
  "_log_loosum_exp_impl": [],
  "_log_soosum_exp_impl": [],
  "_log_vector_matrix": [],
  "_logspace_mean": [],
  "_make": [],
  "_make_convex_combined_log_prob_fn": [],
  "_make_static_axis_non_negative_list": [],
  "_mask_if_invalid": [],
  "_maybe_attach_assertion": [],
  "_maybe_make_linop": [],
  "_maybe_seed": [],
  "_move_dim_and_sort": [],
  "_move_dims_to_flat_end": [],
  "_mul_right": [],
  "_mutant_part": [],
  "_neg_log_likelihood": [],
  "_numpy_text": [],
  "_pad": [],
  "_powerset": [],
  "_prepare_args": [],
  "_propagate_cov": [],
  "_propagate_mean": [],
  "_recreate_kernel": [],
  "_render_comma_list": [],
  "_render_pattern": [],
  "_replace_at_index": [],
  "_replace_event_shape_in_shape_tensor": [],
  "_replace_event_shape_in_tensorshape": [],
  "_rightmost_expand_to_rank": [],
  "_satisfies_wolfe": [],
  "_scalar_univariate_softmax": [],
  "_secant": [],
  "_sequence_like": [],
  "_serialize": [],
  "_set_event_shape": [],
  "_shrink_towards_best": [],
  "_sliced_maker": [],
  "_static_event_size": [],
  "_std_samples_with_gradients": [],
  "_step_along_direction": [],
  "_str_dtype": [],
  "_str_list": [],
  "_str_tensorshape": [],
  "_strip": [],
  "_strip_batch_dim": [],
  "_sum_pairs": [],
  "_swap": [],
  "_tf_where": [],
  "_very_close": [],
  "_where": [],
  "_where_leading_dims": [],
  "_zeros_like": [],
  "ab": [],
  "abc": [],
  "absl": [
   "absl-py/conda-forge/noarch/absl-py-0.12.0-pyhd8ed1ab_0"
  ],
  "actual_hypersphere_volume": [],
  "actual_mvn_log_prob": [],
  "add": [],
  "additional_check": [],
  "an_op_on_objects": [],
  "as_index": [],
  "assert_catches_mistake": [],
  "assert_ops": [],
  "attr": [
   "attrs/conda-forge/noarch/attrs-18.2.0-py_0"
  ],
  "bar": [],
  "base_template": [],
  "batch_fibo": [],
  "batch_gather": [],
  "batched": [],
  "batchwise_reduce_sum": [],
  "bijector_class": [],
  "bijector_fn": [],
  "bootstrap_fn": [],
  "broadcast_fn": [],
  "broadcasting_shapes": [],
  "build_assign_op": [],
  "build_loss": [],
  "builder": [],
  "calculate_linear_predictor": [],
  "callee": [],
  "caller": [],
  "canonicalize_observed_time_series_with_mask": [],
  "cast": [],
  "cauchy_function": [],
  "cauchy_new_state_fn": [],
  "cdf_op": [],
  "chain": [],
  "check": [],
  "check_catches_mistake": [],
  "check_consistency": [],
  "check_is_scalar": [],
  "check_live_variables_defined": [],
  "check_read_agrees": [],
  "cloudpickle": [
   "cloudpickle/conda-forge/noarch/cloudpickle-1.4.1-py_0"
  ],
  "cls": [],
  "code": [],
  "codecs": [],
  "collections": [],
  "compile_fn": [],
  "computation": [],
  "compute_hamiltonian": [],
  "concat_vectors": [],
  "concrete_loop_body": [],
  "constraint": [],
  "constraint_fn": [],
  "constraint_for": [],
  "construct_monte_carlo_csiszar_f_divergence": [],
  "contextlib": [],
  "control": [],
  "conv": [],
  "conv_layer": [],
  "convergence_criteria_fn": [],
  "convert": [],
  "convert_to_tensor": [],
  "convert_to_tensor_fn": [],
  "convolution_op": [],
  "copy": [],
  "cos": [],
  "coshe": [],
  "count_executions": [],
  "cov_step": [],
  "covariance_entry": [],
  "create_component": [],
  "ctor": [],
  "ctt": [],
  "d": [],
  "d0": [],
  "d0_": [],
  "d1": [],
  "d1_": [],
  "decoder": [],
  "decoder_model": [],
  "decorator": [
   "decorator/conda-forge/noarch/decorator-4.3.0-py_0"
  ],
  "default_init": [],
  "discrepancy_fn": [],
  "dist": [],
  "dist_cls": [],
  "dist_fn": [],
  "distribution_b": [],
  "distribution_cls": [],
  "distutils": [],
  "do_padding": [],
  "doit": [],
  "dt": [],
  "dtype": [],
  "encoder": [],
  "entropy_alt": [],
  "eval_secant2": [],
  "eval_update": [],
  "even": [],
  "event": [],
  "event_shape": [],
  "evolve_trajectory": [],
  "exchange_proposed_fn": [],
  "expand_x_fn": [],
  "expected_log_prob": [],
  "expected_lp": [],
  "f": [],
  "fake_distribution": [],
  "fake_tensor": [],
  "fdf": [],
  "fibonacci_inst": [],
  "filter_step": [],
  "flatten": [],
  "fn": [],
  "fn_broadcast": [],
  "fn_slice": [],
  "foo": [],
  "foo_cls": [],
  "full_var": [],
  "fun": [],
  "func": [],
  "func_estimate": [],
  "function": [],
  "functools": [],
  "g": [],
  "gast": [
   "gast/conda-forge/noarch/gast-0.2.2-py_0"
  ],
  "gather": [],
  "gather_squeeze": [],
  "gc": [],
  "gcd": [],
  "generate_one": [],
  "generic_to_array": [],
  "get_fn": [],
  "get_half_cauchy_func": [],
  "get_name": [],
  "get_observation_matrix_for_timestep": [],
  "get_observation_noise_for_timestep": [],
  "get_results": [],
  "get_shape_tensor": [],
  "get_shapes_and_dtypes": [],
  "get_tensor_shape": [],
  "get_transition_matrix_for_timestep": [],
  "get_transition_noise_for_timestep": [],
  "get_val_and_grad_fn": [],
  "getter": [],
  "grad_and_hessian_loss_fn": [],
  "gradient_helper": [],
  "gradp": [],
  "gradq": [],
  "h": [],
  "half_normal_function": [],
  "halfway": [],
  "has_not_u_turn": [],
  "has_target_log_prob": [],
  "hashlib": [],
  "heapq": [],
  "histograms": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.23.12-py_0"
  ],
  "importlib": [],
  "increase_rank": [],
  "init": [],
  "init_clone": [],
  "initializer": [],
  "input": [],
  "inspect": [],
  "int": [],
  "integrator": [],
  "interceptor": [],
  "interpret": [],
  "io": [],
  "iota_sum": [],
  "is_acceptable": [],
  "is_diagonal": [],
  "is_finite": [],
  "is_last_day_of_season": [],
  "itertools": [],
  "jacobian_fn": [],
  "jacobian_fn_mat": [],
  "jax": [
   "jax/conda-forge/noarch/jax-0.1.73-py_0"
  ],
  "jax_kwargs": [],
  "jitter": [],
  "k": [],
  "kernel_initializer": [],
  "kernel_results_cls": [],
  "kernels": [],
  "kl_divergence_fn": [],
  "kl_fn": [],
  "layer": [],
  "layer_one": [],
  "layer_two": [],
  "loc": [],
  "loc_scale_fn": [],
  "log_gamma_log_prob": [],
  "log_joint": [],
  "log_joint_builtin": [],
  "log_joint_fn": [],
  "log_joint_scoped": [],
  "log_joint_transformed": [],
  "log_joint_wrapped": [],
  "logit": [],
  "logits": [],
  "loop_body": [],
  "loop_fn": [],
  "loss_fn": [],
  "lu_reconstruct_assertions": [],
  "m": [],
  "made": [],
  "make_bijector": [],
  "make_distribution": [],
  "make_distribution_fn": [],
  "make_fn": [],
  "make_kernel_fn": [],
  "make_loop_body": [],
  "make_ph": [],
  "make_run_block_callable": [],
  "make_shape_tensor": [],
  "make_trick_fun": [],
  "many_steps": [],
  "mask_if_invalid": [],
  "math": [],
  "maybe_check_quadrature_param": [],
  "maybe_flatten": [],
  "maybe_static": [],
  "maybe_stop": [],
  "mcem_iter": [],
  "mean_fn": [],
  "mean_step": [],
  "merge_doc": [],
  "method": [],
  "mixture_func": [],
  "mk_ind_norm": [],
  "mk_target": [],
  "mock": [],
  "model": [],
  "model_copy": [],
  "model_no_norm": [],
  "monte_carlo_hypersphere_volume": [],
  "my_primop": [],
  "my_tuple": [],
  "ndims_fn": [],
  "net": [],
  "new_fn": [],
  "noncentered_horseshoe_prior": [],
  "norm_layer": [],
  "normal": [],
  "normal_differential_entropy": [],
  "normal_with_unknown_mean": [],
  "np_f": [],
  "np_softmax": [],
  "npdt": [],
  "numpy": [],
  "numpy_softplus": [],
  "objective_fn": [],
  "objective_function": [],
  "observation_fn": [],
  "observed_log_joint_fn": [],
  "odd": [],
  "ode_fn": [],
  "ode_fn_vec": [],
  "one_step_fn": [],
  "operator": [],
  "original_fn": [],
  "os": [],
  "part_converged": [],
  "pattern_flatten": [],
  "pattern_map": [],
  "pattern_map2": [],
  "pickle": [],
  "pprint": [],
  "prefer_static_value": [],
  "prepare_args": [],
  "prior_model": [],
  "probs": [],
  "proposal_log_prob_fn": [],
  "psd": [],
  "pushforward_latents_step": [],
  "pushforward_step": [],
  "quantized_log_prob": [],
  "random_orthogonal_matrix": [],
  "random_with_shape": [],
  "rastrigin": [],
  "re": [],
  "record_vars_defined_on_entry": [],
  "ref": [],
  "rejection_sample_with_gradient": [],
  "reshape_output": [],
  "reshaped_distributional_transform": [],
  "result": [],
  "rosenbrock": [],
  "run": [],
  "run_chain": [],
  "run_chain_and_get_diagnostic": [],
  "run_chain_and_get_divergence": [],
  "run_chain_and_get_estimation_error": [],
  "run_chain_and_get_summary": [],
  "run_hmc": [],
  "run_one": [],
  "s": [],
  "sample": [],
  "sample_chain": [],
  "scale": [],
  "scale_tril": [],
  "scaled_identity": [],
  "scipy": [],
  "scipy_f": [],
  "seed": [],
  "seed_gen": [],
  "seed_hi": [],
  "seed_lo": [],
  "seed_stream": [],
  "setter": [],
  "shape_fn": [],
  "shape_tensor_fn": [],
  "shift_and_log_scale_fn": [],
  "sin": [],
  "sinhe": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "slicer": [
   "slicer/conda-forge/noarch/slicer-0.0.7-pyhd8ed1ab_0"
  ],
  "smooth_step": [],
  "sp_func": [],
  "spline_flow": [],
  "square": [],
  "squared_frobenius_norm": [],
  "stack_class": [],
  "static_fn": [],
  "static_num_frequencies": [],
  "stop": [],
  "stopping_condition": [],
  "stopping_policy_fn": [],
  "stream": [],
  "strm": [],
  "strm1": [],
  "strm2": [],
  "strm3": [],
  "subroutine": [],
  "sys": [],
  "t": [],
  "target_fn": [],
  "target_log_prob": [],
  "target_log_prob_fn": [],
  "tensorflow": [],
  "tensorflow_probability": [],
  "test_fn": [],
  "test_points_fn": [],
  "textwrap": [],
  "tfp_f": [],
  "threading": [],
  "time": [],
  "to_numpy_arrays": [],
  "trace": [],
  "trace_fn": [],
  "traceback": [],
  "true_log_joint": [],
  "true_mvndiag_sample": [],
  "true_normal_sample": [],
  "truthy": [],
  "types": [],
  "unflatten": [],
  "unnormalized_posterior_log_prob": [],
  "unsupported_fn": [],
  "update": [],
  "update_factorization": [],
  "vae_model": [],
  "validate_equal_last_dim": [],
  "value_and_gradients_fn": [],
  "value_and_gradients_function": [],
  "var": [],
  "variance_entry": [],
  "variational_loss_fn": [],
  "vecf": [],
  "vector_size_to_square_matrix_size": [],
  "walk_graph": [],
  "warnings": [],
  "weakref": [],
  "which_clip": [],
  "with_dependencies": [],
  "wrap": [],
  "wrapped_init": [],
  "y_func": []
 }
}