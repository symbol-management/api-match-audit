{
 "bad": [
  "Adder",
  "Batches",
  "Conv2D",
  "Conv2DTranspose",
  "Decoder",
  "Dense",
  "DistFn",
  "Encoder",
  "ExpForwardOnly",
  "ExpInverseOnly",
  "FeatureNdimsKernel",
  "HasFields",
  "IPython.lib.pretty.pretty",
  "IndepBern1d",
  "IndepBern1dSliceable",
  "InnerResults",
  "KernelFn",
  "MVNCholPrecisionTriL",
  "Model",
  "MyCT",
  "MyDist",
  "MyDistException",
  "Nest",
  "NoFields",
  "NoJacobianBijector",
  "Normal",
  "PartialX",
  "PartialXY",
  "Results",
  "Root",
  "SplineParams",
  "StatefulCategorical",
  "StatefulNormal",
  "Sub1",
  "Sub11",
  "Sub2",
  "TerribleDistribution",
  "_BareBonesBijector",
  "_InstrumentedSolver",
  "_TypedIdentity",
  "_assert_shape",
  "_batch_univariate_softmax",
  "_batched_isotropic_normal_like",
  "_bootstrap_results",
  "_broadcast_2",
  "_broadcast_ab",
  "_check",
  "_check2d",
  "_check2d_rows",
  "_check_sample_stats",
  "_check_stats",
  "_check_swap_matrix",
  "_chunked_matmul_cgrad",
  "_compute_error",
  "_compute_quantiles",
  "_convert_to_tensor",
  "_custom_slice_helper",
  "_dist_func",
  "_do_update",
  "_expand_scalar",
  "_expand_tensor",
  "_expected_cdf",
  "_expected_pdf",
  "_explore",
  "_finite_difference_ldj",
  "_get_states_and_trace",
  "_get_support_bijectors",
  "_get_transformed_sample_and_log_prob",
  "_hessian_diag_elt_with_l2",
  "_impl",
  "_importance_sampler_positive_f",
  "_inner",
  "_interleave_with_b",
  "_joint_log_prob",
  "_kernel_fn",
  "_make",
  "_make_convex_combined_log_prob_fn",
  "_mask_if_invalid",
  "_maybe_expand_dims_neg2",
  "_neg_log_likelihood",
  "_powerset",
  "_recreate_kernel",
  "_right_expand",
  "_run_nuts_chain",
  "_sample",
  "_sample_direction_part",
  "_scalar_univariate_softmax",
  "_scan",
  "_seed",
  "_sharded_log_prob_parts_fwd",
  "_sliced_maker",
  "_std_samples_with_gradients",
  "_step_along_direction",
  "_strip",
  "_where",
  "_xla_reduce",
  "_zeros_like",
  "ab",
  "ab.primop",
  "ab.program",
  "ab.return_",
  "ab.var.four",
  "ab.var.six",
  "absl.app.run",
  "absl.flags.FLAGS.fixed_seed",
  "absl.flags.FLAGS.vary_seed",
  "absl.logging.error",
  "absl.logging.info",
  "absl.logging.vlog",
  "absl.logging.warn",
  "absl.logging.warning",
  "absl.testing.absltest.TestCase",
  "absl.testing.absltest.get_default_test_srcdir",
  "absl.testing.absltest.main",
  "absl.testing.flagsaver.flagsaver",
  "absl.testing.parameterized.TestCase",
  "absl.testing.parameterized._NAMED",
  "absl.testing.parameterized._ParameterizedTestIter",
  "absl.testing.parameterized._update_class_dict_for_param_test_case",
  "absl.testing.parameterized.named_parameters",
  "absl.testing.parameterized.parameters",
  "accumulated_stats",
  "activation",
  "actual_hypersphere_volume",
  "actual_mvn_log_prob",
  "add_variable_fn",
  "add_vector_to_scalar",
  "additional_check",
  "adjoint_fn",
  "affine.bias.shape",
  "affine.kernel.shape",
  "all_categories",
  "an_op_on_objects",
  "apply_binop_to_vector_and_scalar",
  "args_fn",
  "assert_catches_mistake",
  "assert_equal",
  "assert_fn",
  "assertion",
  "auto_ct_mvn_prec_linop",
  "auto_normal",
  "b",
  "b.forward",
  "b.forward_event_shape",
  "b.forward_event_shape_tensor",
  "b.inverse",
  "b.inverse_event_shape",
  "b.inverse_event_shape_tensor",
  "b32",
  "b32.forward",
  "b64",
  "b64.forward",
  "b_float64",
  "bar",
  "base_distribution_class",
  "base_jd_class",
  "base_template",
  "base_value",
  "batch_convergence_reduce_fn",
  "batch_fibo",
  "batch_flat_sample",
  "batch_generator",
  "batched",
  "batched_las_vegas_trial_fn",
  "batchwise_reduce_sum",
  "beta_proportion",
  "bij",
  "bij2",
  "bij3",
  "bijection",
  "bijection.inverse",
  "bijection.variables",
  "bijector",
  "bijector.forward_log_det_jacobian",
  "bijector.inverse",
  "bijector.inverse_event_shape",
  "bijector.inverse_log_det_jacobian",
  "bijector_class",
  "bijector_fn",
  "block_dims_fn",
  "bnn",
  "bnn.extra_loss",
  "bnn.trainable_variables",
  "body_fn",
  "bootstrap_fn",
  "branch_fn",
  "broadcast_fn",
  "build_assign_op",
  "build_inner",
  "build_loss",
  "build_ordereddict",
  "builder",
  "callee",
  "caller",
  "cast",
  "cauchy_function",
  "cauchy_new_state_fn",
  "cdf_op",
  "chain",
  "check",
  "check_catches_mistake",
  "check_consistency",
  "check_live_variables_defined",
  "check_read_agrees",
  "chol_kzz_fn",
  "cholesky_fn",
  "cls",
  "cls.__module__",
  "cls.__name__",
  "cls._type_spec",
  "code",
  "collections.OrderedDict",
  "combine_hint",
  "comparator",
  "compile_fn",
  "complex_dtype",
  "composite_dist",
  "composite_linop",
  "computation",
  "compute_jacobian",
  "const_closure",
  "construct_monte_carlo_csiszar_f_divergence",
  "conv",
  "conv_fn",
  "conv_last",
  "conv_layer",
  "convergence_detected",
  "convert",
  "convert_fn",
  "convert_to_tensor_fn",
  "convolution_op",
  "cooling_schedule",
  "cos",
  "count_executions",
  "coupling_bijector_fn",
  "cov_step",
  "covariance_entry",
  "cpu_fn",
  "create_component",
  "create_distribution",
  "csiszar_function",
  "ctor",
  "ctt",
  "d",
  "d0",
  "d0._dist_fn_args",
  "d0._dist_fn_wrapped",
  "d0_",
  "d1",
  "d1._dist_fn_args",
  "d1._dist_fn_wrapped",
  "d1_",
  "d2",
  "d3",
  "decoder",
  "decoder_model",
  "decoder_model.trainable_variables",
  "default_fn",
  "defun_default_fn",
  "df_factor_fn",
  "dict.fromkeys",
  "discrepancy_fn",
  "dist",
  "dist.batch_shape",
  "dist.cdf",
  "dist.copy",
  "dist.entropy",
  "dist.log_cdf",
  "dist.log_prob",
  "dist.log_survival_function",
  "dist.mean",
  "dist.mode",
  "dist.name",
  "dist.prob",
  "dist.quantile",
  "dist.sample",
  "dist.stddev",
  "dist.survival_function",
  "dist.variance",
  "dist_and_sample",
  "dist_cls",
  "dist_fn",
  "dist_func",
  "distribution_constructor",
  "distribution_fn",
  "dists",
  "dists_fn",
  "divergence_fn",
  "do_minimization",
  "do_run_run_run",
  "do_sample",
  "do_sampling",
  "draw",
  "dt",
  "dtype",
  "einsum_fn",
  "eligibility_filter",
  "encoder",
  "encoder.predict_on_batch",
  "ensure_is_linop",
  "entropy_alt",
  "eval_func",
  "eval_secant2",
  "eval_update",
  "even",
  "event",
  "event_shape",
  "event_space_bijector",
  "exact",
  "exception",
  "execute",
  "execute_test_method",
  "expected_cdf",
  "expected_grad",
  "expected_log_prob",
  "expected_lp",
  "expected_pdf",
  "f",
  "f.extra_loss",
  "f.extra_result",
  "f.trainable_variables",
  "f_actual",
  "f_jac",
  "f_prime",
  "f_vjp",
  "f_wrapped",
  "fake_distribution",
  "fake_tensor",
  "false_fn",
  "fdf",
  "fdf.num_calls",
  "fibonacci_inst",
  "filter_and_smooth",
  "filter_step",
  "fit_op",
  "flat_log_prob_parts_fn",
  "flatten",
  "fldj_fn",
  "fn",
  "fn.__name__",
  "fn_slice",
  "foo",
  "foo_cls",
  "full_var",
  "fun",
  "func",
  "func_estimate",
  "function",
  "g",
  "g_actual",
  "gather",
  "gather_squeeze",
  "gcd",
  "generate_one",
  "get_auprc_update",
  "get_batch_shapes",
  "get_default_args",
  "get_fn",
  "get_half_cauchy_func",
  "get_name",
  "get_results",
  "get_transition_matrix_for_timestep",
  "get_val_and_grad_fn",
  "get_velocity_parts",
  "grad_and_hessian_loss_fn",
  "grad_fn",
  "grad_mul",
  "gradient_helper",
  "gradp",
  "gradq",
  "gs",
  "h",
  "half_normal_function",
  "halfway",
  "has_xla",
  "histograms",
  "ht.inverse",
  "ht.inverse_log_det_jacobian",
  "hypothesis.HealthCheck.data_too_large",
  "hypothesis.HealthCheck.filter_too_much",
  "hypothesis.HealthCheck.too_slow",
  "hypothesis.extra.numpy.arange",
  "hypothesis.extra.numpy.argsort",
  "hypothesis.extra.numpy.array",
  "hypothesis.extra.numpy.asarray",
  "hypothesis.extra.numpy.bool",
  "hypothesis.extra.numpy.concatenate",
  "hypothesis.extra.numpy.diag",
  "hypothesis.extra.numpy.finfo",
  "hypothesis.extra.numpy.float32",
  "hypothesis.extra.numpy.float64",
  "hypothesis.extra.numpy.floor",
  "hypothesis.extra.numpy.int32",
  "hypothesis.extra.numpy.linalg.inv",
  "hypothesis.extra.numpy.linalg.solve",
  "hypothesis.extra.numpy.log",
  "hypothesis.extra.numpy.matmul",
  "hypothesis.extra.numpy.min",
  "hypothesis.extra.numpy.newaxis",
  "hypothesis.extra.numpy.ones",
  "hypothesis.extra.numpy.random.RandomState",
  "hypothesis.extra.numpy.random.rand",
  "hypothesis.extra.numpy.random.randn",
  "hypothesis.extra.numpy.random.seed",
  "hypothesis.extra.numpy.random.uniform",
  "hypothesis.extra.numpy.sqrt",
  "hypothesis.extra.numpy.swapaxes",
  "hypothesis.extra.numpy.tril",
  "hypothesis.extra.numpy.triu",
  "hypothesis.extra.numpy.zeros",
  "iid_fn",
  "ildj_fn",
  "ildj_ratio_fn",
  "increase_rank",
  "index",
  "inflate_fn",
  "init",
  "init_clone",
  "initial_unconstrained_loc",
  "initial_value",
  "initial_value.shape",
  "initializer",
  "input.cholesky",
  "input.determinant",
  "input.diag_part",
  "input.dtype",
  "input.inverse",
  "input.reshape",
  "input.shape",
  "int.from_bytes",
  "integrator",
  "interpret",
  "inverse_fn",
  "iota_sum",
  "is_acceptable",
  "is_diagonal",
  "jax.config.config.enable_omnistaging",
  "jax.core.Tracer",
  "jax.custom_jvp",
  "jax.custom_vjp",
  "jax.jacrev",
  "jax.jit",
  "jax.vmap",
  "jax_kwargs",
  "jd_class",
  "jd_class.__name__",
  "jd_factory",
  "jd_factory.__name__",
  "jda_class",
  "jitter",
  "k",
  "k.cancel",
  "k.output_ref",
  "k.subkey",
  "keras_convt",
  "keras_convt.kernel",
  "kernel_fn",
  "kernel_from_log_prob",
  "kernel_results_cls",
  "kinetic_energy_fn",
  "kl_divergence_fn",
  "kl_fn",
  "layer",
  "layer.bias.assign",
  "layer.bias_posterior_tensor",
  "layer.get_losses_for",
  "layer.kernel",
  "layer.kernel.assign",
  "layer.kernel_posterior_tensor",
  "layer.losses",
  "layer.losses.shape",
  "layer.seed",
  "layer.trainable_variables",
  "layer.trainable_weights",
  "layer_class",
  "layer_cls",
  "layer_one",
  "layer_two",
  "ldj_fn",
  "leaf_fn",
  "likelihood_log_prob_fn",
  "loc",
  "loc_scale_fn",
  "log_gamma_log_prob",
  "log_joint_fn",
  "log_likelihood_fn",
  "log_p",
  "log_prob",
  "log_prob_at_x",
  "log_prob_fn",
  "log_prob_function",
  "log_prob_parts_fn",
  "logit",
  "logits",
  "lookup_branch",
  "loop_fn",
  "loss_fn",
  "lowered_fn",
  "lp_fn",
  "lsht",
  "lsht.inverse",
  "m",
  "m.weights",
  "made",
  "made._input_order",
  "made.trainable_variables",
  "make_affine",
  "make_augmented_state",
  "make_bijector",
  "make_conv",
  "make_deconv",
  "make_dist",
  "make_distribution",
  "make_fn",
  "make_hashable",
  "make_input",
  "make_kernel_bias_fn",
  "make_kernel_fn",
  "make_models",
  "make_ph",
  "make_posterior_fn",
  "make_prior_fn",
  "make_skellam_log_prob",
  "make_solver_fn",
  "make_tempered_target_log_prob_fn",
  "make_transform_kernel_fn",
  "make_trick_fun",
  "map_measure_fn",
  "mat_sq_fn",
  "matmul_fn",
  "maybe_flatten",
  "maybe_jit",
  "maybe_static",
  "maybe_stop",
  "mcem_iter",
  "mean_fn",
  "mean_step",
  "merge_doc",
  "method",
  "min_discrepancy",
  "min_num_samples",
  "mixture_func",
  "mk_20k_poisson",
  "mk_err_msg",
  "mk_ind_norm",
  "mk_target",
  "model",
  "model.build",
  "model.compile",
  "model.extra_loss",
  "model.extra_result",
  "model.fit",
  "model.get_weights",
  "model.input.dtype.as_numpy_dtype",
  "model.input.shape.as_list",
  "model.layers",
  "model.layers.trainable",
  "model.layers.weights.shape",
  "model.layers.weights.trainable",
  "model.log_prob",
  "model.losses",
  "model.predict",
  "model.save",
  "model.summary",
  "model.variables",
  "model.weights",
  "model.weights.dtype",
  "model_copy",
  "model_copy.predict",
  "model_fn",
  "model_from_seq",
  "model_no_norm",
  "momentum_log_prob",
  "monte_carlo_hypersphere_volume",
  "mutate",
  "mvn",
  "my_primop",
  "my_tuple",
  "name_is_nontrivial",
  "namedtuple",
  "ndims_fn",
  "nested_lookup_fn",
  "net",
  "net.trainable_variables",
  "new",
  "new_fn",
  "nn",
  "non_jittable",
  "noncentered_horseshoe_prior",
  "norm_layer",
  "norm_layer.g",
  "norm_layer.layer.bias",
  "norm_scale",
  "normal",
  "normal_differential_entropy",
  "normal_prob",
  "np_f",
  "np_fn",
  "np_softmax",
  "npdt",
  "nt_type",
  "num_tril_nonzero",
  "num_tril_rows",
  "numpy.Inf",
  "numpy.abs",
  "numpy.add",
  "numpy.add.at",
  "numpy.add.reduceat",
  "numpy.all",
  "numpy.amax",
  "numpy.amin",
  "numpy.angle",
  "numpy.any",
  "numpy.apply_along_axis",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arccosh",
  "numpy.arcsin",
  "numpy.arcsinh",
  "numpy.arctan",
  "numpy.arctan2",
  "numpy.arctanh",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.bfloat16",
  "numpy.bincount",
  "numpy.block",
  "numpy.broadcast",
  "numpy.broadcast_arrays",
  "numpy.broadcast_to",
  "numpy.cast",
  "numpy.ceil",
  "numpy.column_stack",
  "numpy.complex128",
  "numpy.complex64",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.cos",
  "numpy.cosh",
  "numpy.count_nonzero",
  "numpy.cov",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.diagonal",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.double",
  "numpy.dtype",
  "numpy.e",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.equal",
  "numpy.errstate",
  "numpy.euler_gamma",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.expm1",
  "numpy.eye",
  "numpy.fabs",
  "numpy.fft.fftn",
  "numpy.fft.ifftn",
  "numpy.fft.irfftn",
  "numpy.fft.rfftn",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.flip",
  "numpy.float128",
  "numpy.float16",
  "numpy.float32",
  "numpy.float32.get",
  "numpy.float64",
  "numpy.float64.get",
  "numpy.floating",
  "numpy.floor",
  "numpy.floor_divide",
  "numpy.full",
  "numpy.generic",
  "numpy.greater",
  "numpy.greater_equal",
  "numpy.histogram",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.imag",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.isposinf",
  "numpy.issctype",
  "numpy.issubdtype",
  "numpy.less",
  "numpy.less_equal",
  "numpy.linalg.cholesky",
  "numpy.linalg.det",
  "numpy.linalg.eig",
  "numpy.linalg.inv",
  "numpy.linalg.matrix_power",
  "numpy.linalg.matrix_rank",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linalg.qr",
  "numpy.linalg.slogdet",
  "numpy.linalg.solve",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.log",
  "numpy.log1p",
  "numpy.logaddexp",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.logical_xor",
  "numpy.logspace",
  "numpy.ma.array",
  "numpy.ma.masked_invalid",
  "numpy.math.lgamma",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.maximum.reduceat",
  "numpy.mean",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.mgrid.reshape",
  "numpy.min",
  "numpy.minimum",
  "numpy.minimum.reduceat",
  "numpy.mod",
  "numpy.moveaxis",
  "numpy.multiply",
  "numpy.multiply.reduceat",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndenumerate",
  "numpy.ndim",
  "numpy.ndindex",
  "numpy.negative",
  "numpy.newaxis",
  "numpy.nextafter",
  "numpy.nonzero",
  "numpy.not_equal",
  "numpy.number",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.pad",
  "numpy.percentile",
  "numpy.pi",
  "numpy.polyfit",
  "numpy.polyval",
  "numpy.power",
  "numpy.prod",
  "numpy.product",
  "numpy.r_",
  "numpy.random.RandomState",
  "numpy.random.beta",
  "numpy.random.choice",
  "numpy.random.dirichlet",
  "numpy.random.gamma",
  "numpy.random.geometric",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.standard_normal",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.real",
  "numpy.reciprocal",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.result_type",
  "numpy.roll",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.set_printoptions",
  "numpy.setdiff1d",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sinh",
  "numpy.size",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.subtract",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.take",
  "numpy.tan",
  "numpy.tanh",
  "numpy.tensordot",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.tile",
  "numpy.trace",
  "numpy.transpose",
  "numpy.tril",
  "numpy.triu",
  "numpy.triu_indices",
  "numpy.true_divide",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.var",
  "numpy.vectorize",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "numpy_dtype",
  "numpy_softplus",
  "object.__dir__",
  "object.__hash__",
  "object.__init__",
  "objective_fn",
  "obs",
  "observation_fn",
  "observation_fn_3dim",
  "observation_jacobian_fn",
  "odd",
  "ode_fn",
  "offset_at_step",
  "old_fn",
  "one_ok",
  "one_step_fn",
  "op",
  "opt_einsum.contract_path",
  "optimization_step",
  "optimizer_step_fn",
  "ordering",
  "original_fn",
  "other",
  "other._struct",
  "other._subkey",
  "other.alive",
  "output_ref",
  "output_ref.ref_set",
  "pair",
  "parameterized_initial_state_prior_fn",
  "parameterized_observation_fn",
  "parameterized_transition_fn",
  "polymorphic_fn",
  "post_processor",
  "predicate",
  "predicate_fn",
  "prior_class",
  "prior_log_prob_fn",
  "prob_fn",
  "probs",
  "proposal_fn",
  "proposal_log_prob_fn",
  "psd",
  "pushforward_step",
  "quadratic_with_hole",
  "quantized_log_prob",
  "random_made",
  "random_orthogonal_matrix",
  "random_with_shape",
  "rastrigin",
  "record_vars_defined_on_entry",
  "reduce_fn",
  "rejection_sample",
  "resample_fn",
  "reshape_inv",
  "reshape_output",
  "reshape_to_234",
  "reshape_to_scalar",
  "result",
  "rollaxis",
  "root",
  "rosenbrock",
  "run_asserts_fn",
  "run_chain",
  "run_chain_and_get_diagnostic",
  "run_chain_and_get_divergence",
  "run_chain_and_get_estimation_error",
  "run_chain_and_get_summary",
  "run_hmc",
  "run_one",
  "run_smc",
  "run_two_chains",
  "s",
  "sample",
  "sample_and_marginals",
  "sample_chain",
  "sample_fn",
  "sample_from_banana",
  "sample_mcmc_chain",
  "sample_type",
  "sampler",
  "sampler.__name__",
  "sampler_impl",
  "sanitize_event_ndims",
  "scalar_gamma",
  "scale",
  "scale_fn",
  "scipy.constants.golden",
  "scipy.fftpack.dct",
  "scipy.interpolate.interp1d",
  "scipy.linalg.cholesky",
  "scipy.linalg.circulant",
  "scipy.linalg.hilbert",
  "scipy.misc.derivative",
  "scipy.optimize.minimize",
  "scipy.optimize.newton",
  "scipy.special.beta",
  "scipy.special.betaln",
  "scipy.special.binom",
  "scipy.special.digamma",
  "scipy.special.erfc",
  "scipy.special.expit",
  "scipy.special.gamma",
  "scipy.special.gammainc",
  "scipy.special.gammaincinv",
  "scipy.special.gammaln",
  "scipy.special.hyp2f1",
  "scipy.special.i0",
  "scipy.special.i1",
  "scipy.special.ive",
  "scipy.special.kv",
  "scipy.special.kve",
  "scipy.special.log_ndtr",
  "scipy.special.logit",
  "scipy.special.ndtr",
  "scipy.special.ndtri",
  "scipy.special.psi",
  "scipy.special.xlog1py",
  "scipy.stats.beta",
  "scipy.stats.beta.cdf",
  "scipy.stats.beta.entropy",
  "scipy.stats.beta.mean",
  "scipy.stats.beta.var",
  "scipy.stats.binom.cdf",
  "scipy.stats.binom.mean",
  "scipy.stats.binom.pmf",
  "scipy.stats.binom.var",
  "scipy.stats.cauchy",
  "scipy.stats.chi.cdf",
  "scipy.stats.chi.entropy",
  "scipy.stats.chi.logpdf",
  "scipy.stats.chi.mean",
  "scipy.stats.chi.var",
  "scipy.stats.chi2.cdf",
  "scipy.stats.chi2.entropy",
  "scipy.stats.chi2.logpdf",
  "scipy.stats.chi2.mean",
  "scipy.stats.chi2.var",
  "scipy.stats.dirichlet.entropy",
  "scipy.stats.dirichlet.mean",
  "scipy.stats.dirichlet.var",
  "scipy.stats.expon",
  "scipy.stats.expon.cdf",
  "scipy.stats.expon.entropy",
  "scipy.stats.expon.logpdf",
  "scipy.stats.expon.logsf",
  "scipy.stats.expon.mean",
  "scipy.stats.expon.var",
  "scipy.stats.exponnorm",
  "scipy.stats.fisk.cdf",
  "scipy.stats.fisk.entropy",
  "scipy.stats.fisk.logcdf",
  "scipy.stats.fisk.logpdf",
  "scipy.stats.fisk.logsf",
  "scipy.stats.fisk.mean",
  "scipy.stats.fisk.pdf",
  "scipy.stats.fisk.var",
  "scipy.stats.frechet_r",
  "scipy.stats.gamma",
  "scipy.stats.gamma.cdf",
  "scipy.stats.gamma.entropy",
  "scipy.stats.gamma.logpdf",
  "scipy.stats.gamma.mean",
  "scipy.stats.gamma.std",
  "scipy.stats.gamma.var",
  "scipy.stats.genextreme",
  "scipy.stats.gennorm",
  "scipy.stats.genpareto",
  "scipy.stats.genpareto.entropy",
  "scipy.stats.genpareto.mean",
  "scipy.stats.genpareto.ppf",
  "scipy.stats.genpareto.var",
  "scipy.stats.geom.cdf",
  "scipy.stats.geom.entropy",
  "scipy.stats.geom.logcdf",
  "scipy.stats.geom.logpmf",
  "scipy.stats.geom.mean",
  "scipy.stats.geom.sf",
  "scipy.stats.geom.std",
  "scipy.stats.geom.var",
  "scipy.stats.gompertz",
  "scipy.stats.gumbel_r",
  "scipy.stats.gumbel_r.cdf",
  "scipy.stats.gumbel_r.logcdf",
  "scipy.stats.gumbel_r.logpdf",
  "scipy.stats.gumbel_r.mean",
  "scipy.stats.gumbel_r.pdf",
  "scipy.stats.gumbel_r.std",
  "scipy.stats.gumbel_r.var",
  "scipy.stats.halfcauchy.cdf",
  "scipy.stats.halfcauchy.entropy",
  "scipy.stats.halfcauchy.logcdf",
  "scipy.stats.halfcauchy.logpdf",
  "scipy.stats.halfcauchy.median",
  "scipy.stats.halfcauchy.pdf",
  "scipy.stats.halfcauchy.ppf",
  "scipy.stats.halfnorm",
  "scipy.stats.invgamma",
  "scipy.stats.invgamma.cdf",
  "scipy.stats.invgamma.entropy",
  "scipy.stats.invgamma.logpdf",
  "scipy.stats.invgamma.mean",
  "scipy.stats.invgamma.var",
  "scipy.stats.invgauss",
  "scipy.stats.invweibull",
  "scipy.stats.johnsonsu",
  "scipy.stats.johnsonsu.cdf",
  "scipy.stats.johnsonsu.logcdf",
  "scipy.stats.johnsonsu.logpdf",
  "scipy.stats.johnsonsu.logsf",
  "scipy.stats.johnsonsu.mean",
  "scipy.stats.johnsonsu.ppf",
  "scipy.stats.johnsonsu.sf",
  "scipy.stats.johnsonsu.std",
  "scipy.stats.johnsonsu.var",
  "scipy.stats.ks_2samp",
  "scipy.stats.kstest",
  "scipy.stats.laplace",
  "scipy.stats.laplace.cdf",
  "scipy.stats.laplace.entropy",
  "scipy.stats.laplace.logcdf",
  "scipy.stats.laplace.logpdf",
  "scipy.stats.laplace.logsf",
  "scipy.stats.laplace.mean",
  "scipy.stats.laplace.std",
  "scipy.stats.laplace.var",
  "scipy.stats.loggamma.mean",
  "scipy.stats.loggamma.std",
  "scipy.stats.loggamma.var",
  "scipy.stats.logistic",
  "scipy.stats.logistic.cdf",
  "scipy.stats.logistic.entropy",
  "scipy.stats.logistic.logcdf",
  "scipy.stats.logistic.logpdf",
  "scipy.stats.logistic.logsf",
  "scipy.stats.logistic.mean",
  "scipy.stats.logistic.ppf",
  "scipy.stats.logistic.sf",
  "scipy.stats.logistic.var",
  "scipy.stats.lognorm",
  "scipy.stats.lognorm.logpdf",
  "scipy.stats.maxwell.logpdf",
  "scipy.stats.moment",
  "scipy.stats.moyal",
  "scipy.stats.moyal.cdf",
  "scipy.stats.moyal.logcdf",
  "scipy.stats.moyal.logpdf",
  "scipy.stats.moyal.mean",
  "scipy.stats.moyal.pdf",
  "scipy.stats.moyal.std",
  "scipy.stats.moyal.var",
  "scipy.stats.multivariate_normal",
  "scipy.stats.nbinom.logcdf",
  "scipy.stats.nbinom.logpmf",
  "scipy.stats.nbinom.mean",
  "scipy.stats.nbinom.std",
  "scipy.stats.nbinom.var",
  "scipy.stats.norm",
  "scipy.stats.norm.cdf",
  "scipy.stats.norm.logpdf",
  "scipy.stats.norm.pdf",
  "scipy.stats.normaltest",
  "scipy.stats.pareto",
  "scipy.stats.poisson.cdf",
  "scipy.stats.poisson.logcdf",
  "scipy.stats.poisson.logpmf",
  "scipy.stats.poisson.mean",
  "scipy.stats.poisson.pmf",
  "scipy.stats.poisson.std",
  "scipy.stats.poisson.var",
  "scipy.stats.rayleigh.cdf",
  "scipy.stats.rayleigh.logpdf",
  "scipy.stats.skellam.logpmf",
  "scipy.stats.skellam.mean",
  "scipy.stats.skellam.pmf",
  "scipy.stats.skellam.std",
  "scipy.stats.skellam.var",
  "scipy.stats.special_ortho_group.rvs",
  "scipy.stats.t.cdf",
  "scipy.stats.t.entropy",
  "scipy.stats.t.interval",
  "scipy.stats.t.logcdf",
  "scipy.stats.t.logpdf",
  "scipy.stats.t.pdf",
  "scipy.stats.t.rvs",
  "scipy.stats.t.std",
  "scipy.stats.t.var",
  "scipy.stats.triang",
  "scipy.stats.truncnorm",
  "scipy.stats.truncnorm.rvs",
  "scipy.stats.uniform",
  "scipy.stats.uniform.cdf",
  "scipy.stats.vonmises.cdf",
  "scipy.stats.vonmises.entropy",
  "scipy.stats.vonmises.logpdf",
  "scipy.stats.vonmises.pdf",
  "scipy.stats.weibull_min.cdf",
  "scipy.stats.weibull_min.logcdf",
  "scipy.stats.weibull_min.logpdf",
  "scipy.stats.weibull_min.mean",
  "scipy.stats.weibull_min.pdf",
  "scipy.stats.weibull_min.std",
  "scipy.stats.weibull_min.var",
  "scipy.stats.zipf.cdf",
  "scipy.stats.zipf.logcdf",
  "scipy.stats.zipf.logpmf",
  "scipy.stats.zipf.mean",
  "scipy.stats.zipf.pmf",
  "scipy.stats.zipf.std",
  "scipy.stats.zipf.var",
  "scipy_f",
  "seed",
  "seed_stream",
  "seedstream",
  "self",
  "self.__action__",
  "self.__class__.__name__",
  "self.__next__",
  "self.__unpack__",
  "self.__wrapped__",
  "self._alive",
  "self._attributes",
  "self._bijector",
  "self._bijector_class",
  "self._callback",
  "self._cleanup",
  "self._forward_name",
  "self._get_or_create_edge",
  "self._hash",
  "self._inverse_name",
  "self._invoke",
  "self._lookup",
  "self._struct",
  "self._subkey",
  "self.alive",
  "self.bijector",
  "self.bijector_class",
  "self.maybe_del",
  "self.storage",
  "self.storage.keys",
  "self.storage.maybe_del",
  "self.storage.output_ref",
  "self.storage.setdefault",
  "self.weak_keys",
  "sess_run_fn",
  "shape",
  "shape_fn",
  "shape_tensor_fn",
  "sharded_log_prob_parts",
  "shift_and_log_scale_fn",
  "sin",
  "single_arg_polymorphic_fn",
  "skip_test_fn",
  "slice_of",
  "smooth_step",
  "solve_fn",
  "solver",
  "sp_func",
  "spline_flow",
  "sqrt",
  "squared_frobenius_norm",
  "state_time_derivative_fn",
  "static_fn",
  "static_perm_to_shape",
  "step_fn",
  "step_size_fn",
  "stop",
  "stopping_condition",
  "stopping_policy_fn",
  "stream",
  "stringify_and_join",
  "strm",
  "strm1",
  "strm2",
  "strm3",
  "subroutine",
  "sum_fn",
  "sum_sq",
  "sys",
  "sys.modules",
  "t",
  "t._fields",
  "t._make",
  "t1",
  "t2",
  "take_dist",
  "target_fn",
  "target_log_prob",
  "target_log_prob_fn",
  "tensor_callable",
  "tensorflow.compat.v1.ConfigProto",
  "tensorflow.compat.v1.Dimension",
  "tensorflow.compat.v1.Graph",
  "tensorflow.compat.v1.Session",
  "tensorflow.compat.v1.SparseTensorValue",
  "tensorflow.compat.v1.__version__",
  "tensorflow.compat.v1.assert_equal",
  "tensorflow.compat.v1.assert_greater_equal",
  "tensorflow.compat.v1.assert_less",
  "tensorflow.compat.v1.cast",
  "tensorflow.compat.v1.compat.v1.placeholder_with_default",
  "tensorflow.compat.v1.compat.v2.name_scope",
  "tensorflow.compat.v1.concat",
  "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled",
  "tensorflow.compat.v1.control_flow_v2_enabled",
  "tensorflow.compat.v1.convert_to_tensor",
  "tensorflow.compat.v1.device",
  "tensorflow.compat.v1.einsum",
  "tensorflow.compat.v1.enable_control_flow_v2",
  "tensorflow.compat.v1.enable_eager_execution",
  "tensorflow.compat.v1.exp",
  "tensorflow.compat.v1.float32",
  "tensorflow.compat.v1.float64",
  "tensorflow.compat.v1.function",
  "tensorflow.compat.v1.get_default_graph",
  "tensorflow.compat.v1.get_default_session",
  "tensorflow.compat.v1.get_variable",
  "tensorflow.compat.v1.get_variable_scope",
  "tensorflow.compat.v1.global_variables_initializer",
  "tensorflow.compat.v1.initializers.random_normal",
  "tensorflow.compat.v1.initializers.variables",
  "tensorflow.compat.v1.int32",
  "tensorflow.compat.v1.int64",
  "tensorflow.compat.v1.keras.experimental.export_saved_model",
  "tensorflow.compat.v1.keras.experimental.load_from_saved_model",
  "tensorflow.compat.v1.layers.BatchNormalization",
  "tensorflow.compat.v1.layers.dense",
  "tensorflow.compat.v1.linalg.diag_part",
  "tensorflow.compat.v1.logging.debug",
  "tensorflow.compat.v1.logging.vlog",
  "tensorflow.compat.v1.logging.warning",
  "tensorflow.compat.v1.make_template",
  "tensorflow.compat.v1.math.log",
  "tensorflow.compat.v1.math.reduce_std",
  "tensorflow.compat.v1.matmul",
  "tensorflow.compat.v1.name_scope",
  "tensorflow.compat.v1.ones",
  "tensorflow.compat.v1.placeholder",
  "tensorflow.compat.v1.placeholder_with_default",
  "tensorflow.compat.v1.random.normal",
  "tensorflow.compat.v1.reduce_logsumexp",
  "tensorflow.compat.v1.reduce_mean",
  "tensorflow.compat.v1.reduce_sum",
  "tensorflow.compat.v1.reset_default_graph",
  "tensorflow.compat.v1.reshape",
  "tensorflow.compat.v1.set_random_seed",
  "tensorflow.compat.v1.shape",
  "tensorflow.compat.v1.tensordot",
  "tensorflow.compat.v1.test.compute_gradient_error",
  "tensorflow.compat.v1.test.main",
  "tensorflow.compat.v1.train.AdamOptimizer",
  "tensorflow.compat.v1.train.get_or_create_global_step",
  "tensorflow.compat.v1.train.polynomial_decay",
  "tensorflow.compat.v1.transpose",
  "tensorflow.compat.v1.variable_scope",
  "tensorflow.compat.v1.where",
  "tensorflow.compat.v1.zeros",
  "tensorflow.compat.v2",
  "tensorflow.compat.v2.Assert",
  "tensorflow.compat.v2.DType",
  "tensorflow.compat.v2.GradientTape",
  "tensorflow.compat.v2.Graph",
  "tensorflow.compat.v2.IndexedSlices",
  "tensorflow.compat.v2.Module",
  "tensorflow.compat.v2.SparseTensor",
  "tensorflow.compat.v2.Tensor",
  "tensorflow.compat.v2.Tensor.OVERLOADABLE_OPERATORS",
  "tensorflow.compat.v2.TensorArray",
  "tensorflow.compat.v2.TensorShape",
  "tensorflow.compat.v2.TensorSpec",
  "tensorflow.compat.v2.TensorSpec.from_tensor",
  "tensorflow.compat.v2.TypeSpec",
  "tensorflow.compat.v2.UnconnectedGradients.ZERO",
  "tensorflow.compat.v2.Variable",
  "tensorflow.compat.v2.Variable.assign",
  "tensorflow.compat.v2.Variable.assign_add",
  "tensorflow.compat.v2.Variable.assign_sub",
  "tensorflow.compat.v2.abs",
  "tensorflow.compat.v2.add",
  "tensorflow.compat.v2.add_n",
  "tensorflow.compat.v2.argmax",
  "tensorflow.compat.v2.argmin",
  "tensorflow.compat.v2.argsort",
  "tensorflow.compat.v2.as_dtype",
  "tensorflow.compat.v2.asinh",
  "tensorflow.compat.v2.assert_equal",
  "tensorflow.compat.v2.assert_greater",
  "tensorflow.compat.v2.atan",
  "tensorflow.compat.v2.atan2",
  "tensorflow.compat.v2.atanh",
  "tensorflow.compat.v2.bitcast",
  "tensorflow.compat.v2.bitwise.bitwise_xor",
  "tensorflow.compat.v2.bool",
  "tensorflow.compat.v2.boolean_mask",
  "tensorflow.compat.v2.broadcast_dynamic_shape",
  "tensorflow.compat.v2.broadcast_static_shape",
  "tensorflow.compat.v2.broadcast_to",
  "tensorflow.compat.v2.cast",
  "tensorflow.compat.v2.clip_by_value",
  "tensorflow.compat.v2.compat.dimension_value",
  "tensorflow.compat.v2.compat.v1.enable_control_flow_v2",
  "tensorflow.compat.v2.compat.v1.scatter_add",
  "tensorflow.compat.v2.compat.v2.compat.dimension_value",
  "tensorflow.compat.v2.complex",
  "tensorflow.compat.v2.complex128",
  "tensorflow.compat.v2.concat",
  "tensorflow.compat.v2.cond",
  "tensorflow.compat.v2.config.experimental.VirtualDeviceConfiguration",
  "tensorflow.compat.v2.config.experimental.list_physical_devices",
  "tensorflow.compat.v2.config.experimental.set_virtual_device_configuration",
  "tensorflow.compat.v2.config.experimental_connect_to_cluster",
  "tensorflow.compat.v2.config.experimental_functions_run_eagerly",
  "tensorflow.compat.v2.config.functions_run_eagerly",
  "tensorflow.compat.v2.config.list_logical_devices",
  "tensorflow.compat.v2.config.list_physical_devices",
  "tensorflow.compat.v2.config.run_functions_eagerly",
  "tensorflow.compat.v2.constant",
  "tensorflow.compat.v2.control_dependencies",
  "tensorflow.compat.v2.convert_to_tensor",
  "tensorflow.compat.v2.cos",
  "tensorflow.compat.v2.cumsum",
  "tensorflow.compat.v2.custom_gradient",
  "tensorflow.compat.v2.data.Dataset.from_tensor_slices",
  "tensorflow.compat.v2.debugging.Assert",
  "tensorflow.compat.v2.debugging.assert_equal",
  "tensorflow.compat.v2.debugging.assert_greater",
  "tensorflow.compat.v2.debugging.assert_greater_equal",
  "tensorflow.compat.v2.debugging.assert_integer",
  "tensorflow.compat.v2.debugging.assert_less",
  "tensorflow.compat.v2.debugging.assert_less_equal",
  "tensorflow.compat.v2.debugging.assert_near",
  "tensorflow.compat.v2.debugging.assert_negative",
  "tensorflow.compat.v2.debugging.assert_non_negative",
  "tensorflow.compat.v2.debugging.assert_non_positive",
  "tensorflow.compat.v2.debugging.assert_none_equal",
  "tensorflow.compat.v2.debugging.assert_positive",
  "tensorflow.compat.v2.debugging.assert_rank",
  "tensorflow.compat.v2.debugging.assert_rank_at_least",
  "tensorflow.compat.v2.debugging.assert_rank_in",
  "tensorflow.compat.v2.debugging.assert_same_float_dtype",
  "tensorflow.compat.v2.debugging.check_numerics",
  "tensorflow.compat.v2.device",
  "tensorflow.compat.v2.distribute.MirroredStrategy",
  "tensorflow.compat.v2.distribute.ReduceOp.SUM",
  "tensorflow.compat.v2.distribute.TPUStrategy",
  "tensorflow.compat.v2.distribute.cluster_resolver.TPUClusterResolver",
  "tensorflow.compat.v2.distribute.get_replica_context",
  "tensorflow.compat.v2.einsum",
  "tensorflow.compat.v2.enable_v2_behavior",
  "tensorflow.compat.v2.equal",
  "tensorflow.compat.v2.errors.InvalidArgumentError",
  "tensorflow.compat.v2.errors.OpError",
  "tensorflow.compat.v2.errors.UnimplementedError",
  "tensorflow.compat.v2.executing_eagerly",
  "tensorflow.compat.v2.exp",
  "tensorflow.compat.v2.expand_dims",
  "tensorflow.compat.v2.eye",
  "tensorflow.compat.v2.fill",
  "tensorflow.compat.v2.float16",
  "tensorflow.compat.v2.float32",
  "tensorflow.compat.v2.float64",
  "tensorflow.compat.v2.floor",
  "tensorflow.compat.v2.foldl",
  "tensorflow.compat.v2.function",
  "tensorflow.compat.v2.gather",
  "tensorflow.compat.v2.gather_nd",
  "tensorflow.compat.v2.get_static_value",
  "tensorflow.compat.v2.gradients",
  "tensorflow.compat.v2.greater",
  "tensorflow.compat.v2.greater_equal",
  "tensorflow.compat.v2.group",
  "tensorflow.compat.v2.half",
  "tensorflow.compat.v2.hessians",
  "tensorflow.compat.v2.histogram_fixed_width",
  "tensorflow.compat.v2.histogram_fixed_width_bins",
  "tensorflow.compat.v2.identity",
  "tensorflow.compat.v2.initializers.constant",
  "tensorflow.compat.v2.initializers.deserialize",
  "tensorflow.compat.v2.initializers.he_normal",
  "tensorflow.compat.v2.initializers.serialize",
  "tensorflow.compat.v2.initializers.zeros",
  "tensorflow.compat.v2.int16",
  "tensorflow.compat.v2.int32",
  "tensorflow.compat.v2.int64",
  "tensorflow.compat.v2.int8",
  "tensorflow.compat.v2.is_tensor",
  "tensorflow.compat.v2.keras",
  "tensorflow.compat.v2.keras.Input",
  "tensorflow.compat.v2.keras.Model",
  "tensorflow.compat.v2.keras.Sequential",
  "tensorflow.compat.v2.keras.activations.get",
  "tensorflow.compat.v2.keras.activations.serialize",
  "tensorflow.compat.v2.keras.backend.floatx",
  "tensorflow.compat.v2.keras.constraints.get",
  "tensorflow.compat.v2.keras.initializers.GlorotNormal",
  "tensorflow.compat.v2.keras.initializers.Initializer",
  "tensorflow.compat.v2.keras.initializers.get",
  "tensorflow.compat.v2.keras.initializers.serialize",
  "tensorflow.compat.v2.keras.layers",
  "tensorflow.compat.v2.keras.layers.BatchNormalization",
  "tensorflow.compat.v2.keras.layers.Concatenate",
  "tensorflow.compat.v2.keras.layers.Conv2D",
  "tensorflow.compat.v2.keras.layers.Conv2DTranspose",
  "tensorflow.compat.v2.keras.layers.Convolution2D",
  "tensorflow.compat.v2.keras.layers.Dense",
  "tensorflow.compat.v2.keras.layers.Dropout",
  "tensorflow.compat.v2.keras.layers.ELU",
  "tensorflow.compat.v2.keras.layers.Flatten",
  "tensorflow.compat.v2.keras.layers.Input",
  "tensorflow.compat.v2.keras.layers.InputLayer",
  "tensorflow.compat.v2.keras.layers.InputSpec",
  "tensorflow.compat.v2.keras.layers.Lambda",
  "tensorflow.compat.v2.keras.layers.Layer",
  "tensorflow.compat.v2.keras.layers.Wrapper",
  "tensorflow.compat.v2.keras.layers.add",
  "tensorflow.compat.v2.keras.layers.multiply",
  "tensorflow.compat.v2.keras.models.Sequential",
  "tensorflow.compat.v2.keras.optimizers.Adam",
  "tensorflow.compat.v2.keras.optimizers.SGD",
  "tensorflow.compat.v2.keras.regularizers.get",
  "tensorflow.compat.v2.keras.utils.CustomObjectScope",
  "tensorflow.compat.v2.keras.utils.deserialize_keras_object",
  "tensorflow.compat.v2.keras.utils.get_custom_objects",
  "tensorflow.compat.v2.less",
  "tensorflow.compat.v2.less_equal",
  "tensorflow.compat.v2.linalg",
  "tensorflow.compat.v2.linalg.LinearOperator",
  "tensorflow.compat.v2.linalg.LinearOperatorBlockDiag",
  "tensorflow.compat.v2.linalg.LinearOperatorBlockLowerTriangular",
  "tensorflow.compat.v2.linalg.LinearOperatorDiag",
  "tensorflow.compat.v2.linalg.LinearOperatorFullMatrix",
  "tensorflow.compat.v2.linalg.LinearOperatorHouseholder",
  "tensorflow.compat.v2.linalg.LinearOperatorIdentity",
  "tensorflow.compat.v2.linalg.LinearOperatorInversion",
  "tensorflow.compat.v2.linalg.LinearOperatorKronecker",
  "tensorflow.compat.v2.linalg.LinearOperatorLowRankUpdate",
  "tensorflow.compat.v2.linalg.LinearOperatorLowerTriangular",
  "tensorflow.compat.v2.linalg.LinearOperatorScaledIdentity",
  "tensorflow.compat.v2.linalg.LinearOperatorZeros",
  "tensorflow.compat.v2.linalg.band_part",
  "tensorflow.compat.v2.linalg.cholesky",
  "tensorflow.compat.v2.linalg.cholesky_solve",
  "tensorflow.compat.v2.linalg.det",
  "tensorflow.compat.v2.linalg.diag",
  "tensorflow.compat.v2.linalg.diag_part",
  "tensorflow.compat.v2.linalg.eigh",
  "tensorflow.compat.v2.linalg.eigvalsh",
  "tensorflow.compat.v2.linalg.eye",
  "tensorflow.compat.v2.linalg.inv",
  "tensorflow.compat.v2.linalg.lu",
  "tensorflow.compat.v2.linalg.matmul",
  "tensorflow.compat.v2.linalg.matrix_transpose",
  "tensorflow.compat.v2.linalg.matvec",
  "tensorflow.compat.v2.linalg.norm",
  "tensorflow.compat.v2.linalg.qr",
  "tensorflow.compat.v2.linalg.set_diag",
  "tensorflow.compat.v2.linalg.slogdet",
  "tensorflow.compat.v2.linalg.solve",
  "tensorflow.compat.v2.linalg.sqrtm",
  "tensorflow.compat.v2.linalg.svd",
  "tensorflow.compat.v2.linalg.tensor_diag",
  "tensorflow.compat.v2.linalg.triangular_solve",
  "tensorflow.compat.v2.linspace",
  "tensorflow.compat.v2.logical_and",
  "tensorflow.compat.v2.logical_not",
  "tensorflow.compat.v2.logical_or",
  "tensorflow.compat.v2.map_fn",
  "tensorflow.compat.v2.math",
  "tensorflow.compat.v2.math.abs",
  "tensorflow.compat.v2.math.acos",
  "tensorflow.compat.v2.math.argmax",
  "tensorflow.compat.v2.math.argmin",
  "tensorflow.compat.v2.math.atan",
  "tensorflow.compat.v2.math.bessel_i0e",
  "tensorflow.compat.v2.math.bessel_i1e",
  "tensorflow.compat.v2.math.betainc",
  "tensorflow.compat.v2.math.bincount",
  "tensorflow.compat.v2.math.ceil",
  "tensorflow.compat.v2.math.confusion_matrix",
  "tensorflow.compat.v2.math.conj",
  "tensorflow.compat.v2.math.cos",
  "tensorflow.compat.v2.math.cosh",
  "tensorflow.compat.v2.math.count_nonzero",
  "tensorflow.compat.v2.math.cumprod",
  "tensorflow.compat.v2.math.cumsum",
  "tensorflow.compat.v2.math.digamma",
  "tensorflow.compat.v2.math.divide_no_nan",
  "tensorflow.compat.v2.math.equal",
  "tensorflow.compat.v2.math.erf",
  "tensorflow.compat.v2.math.erfc",
  "tensorflow.compat.v2.math.erfinv",
  "tensorflow.compat.v2.math.exp",
  "tensorflow.compat.v2.math.expm1",
  "tensorflow.compat.v2.math.floor",
  "tensorflow.compat.v2.math.floordiv",
  "tensorflow.compat.v2.math.floormod",
  "tensorflow.compat.v2.math.igamma",
  "tensorflow.compat.v2.math.igammac",
  "tensorflow.compat.v2.math.imag",
  "tensorflow.compat.v2.math.invert_permutation",
  "tensorflow.compat.v2.math.is_finite",
  "tensorflow.compat.v2.math.is_inf",
  "tensorflow.compat.v2.math.is_nan",
  "tensorflow.compat.v2.math.is_strictly_increasing",
  "tensorflow.compat.v2.math.l2_normalize",
  "tensorflow.compat.v2.math.lbeta",
  "tensorflow.compat.v2.math.lgamma",
  "tensorflow.compat.v2.math.log",
  "tensorflow.compat.v2.math.log1p",
  "tensorflow.compat.v2.math.log_sigmoid",
  "tensorflow.compat.v2.math.log_softmax",
  "tensorflow.compat.v2.math.maximum",
  "tensorflow.compat.v2.math.minimum",
  "tensorflow.compat.v2.math.multiply",
  "tensorflow.compat.v2.math.multiply_no_nan",
  "tensorflow.compat.v2.math.ndtri",
  "tensorflow.compat.v2.math.nextafter",
  "tensorflow.compat.v2.math.not_equal",
  "tensorflow.compat.v2.math.polygamma",
  "tensorflow.compat.v2.math.polyval",
  "tensorflow.compat.v2.math.pow",
  "tensorflow.compat.v2.math.real",
  "tensorflow.compat.v2.math.reciprocal",
  "tensorflow.compat.v2.math.reciprocal_no_nan",
  "tensorflow.compat.v2.math.reduce_any",
  "tensorflow.compat.v2.math.reduce_logsumexp",
  "tensorflow.compat.v2.math.reduce_max",
  "tensorflow.compat.v2.math.reduce_mean",
  "tensorflow.compat.v2.math.reduce_std",
  "tensorflow.compat.v2.math.reduce_sum",
  "tensorflow.compat.v2.math.reduce_variance",
  "tensorflow.compat.v2.math.round",
  "tensorflow.compat.v2.math.rsqrt",
  "tensorflow.compat.v2.math.sigmoid",
  "tensorflow.compat.v2.math.sign",
  "tensorflow.compat.v2.math.sin",
  "tensorflow.compat.v2.math.sinh",
  "tensorflow.compat.v2.math.softmax",
  "tensorflow.compat.v2.math.softplus",
  "tensorflow.compat.v2.math.sqrt",
  "tensorflow.compat.v2.math.square",
  "tensorflow.compat.v2.math.squared_difference",
  "tensorflow.compat.v2.math.tanh",
  "tensorflow.compat.v2.math.top_k",
  "tensorflow.compat.v2.math.unsorted_segment_sum",
  "tensorflow.compat.v2.math.xlog1py",
  "tensorflow.compat.v2.math.xlogy",
  "tensorflow.compat.v2.math.zeta",
  "tensorflow.compat.v2.matmul",
  "tensorflow.compat.v2.maximum",
  "tensorflow.compat.v2.meshgrid",
  "tensorflow.compat.v2.minimum",
  "tensorflow.compat.v2.multiply",
  "tensorflow.compat.v2.name_scope",
  "tensorflow.compat.v2.nest",
  "tensorflow.compat.v2.nest.assert_same_structure",
  "tensorflow.compat.v2.nest.flatten",
  "tensorflow.compat.v2.nest.is_nested",
  "tensorflow.compat.v2.nest.map_structure",
  "tensorflow.compat.v2.nest.pack_sequence_as",
  "tensorflow.compat.v2.newaxis",
  "tensorflow.compat.v2.newaxis.batch_shape",
  "tensorflow.compat.v2.newaxis.event_shape",
  "tensorflow.compat.v2.newaxis.shape",
  "tensorflow.compat.v2.nn.bias_add",
  "tensorflow.compat.v2.nn.conv2d",
  "tensorflow.compat.v2.nn.conv2d_transpose",
  "tensorflow.compat.v2.nn.elu",
  "tensorflow.compat.v2.nn.l2_normalize",
  "tensorflow.compat.v2.nn.log_softmax",
  "tensorflow.compat.v2.nn.moments",
  "tensorflow.compat.v2.nn.relu",
  "tensorflow.compat.v2.nn.sigmoid",
  "tensorflow.compat.v2.nn.softmax",
  "tensorflow.compat.v2.nn.softmax_cross_entropy_with_logits",
  "tensorflow.compat.v2.nn.softplus",
  "tensorflow.compat.v2.nn.sparse_softmax_cross_entropy_with_logits",
  "tensorflow.compat.v2.no_op",
  "tensorflow.compat.v2.norm",
  "tensorflow.compat.v2.not_equal",
  "tensorflow.compat.v2.one_hot",
  "tensorflow.compat.v2.ones",
  "tensorflow.compat.v2.ones_like",
  "tensorflow.compat.v2.optimizers.Adam",
  "tensorflow.compat.v2.optimizers.Optimizer",
  "tensorflow.compat.v2.optimizers.SGD",
  "tensorflow.compat.v2.pad",
  "tensorflow.compat.v2.pow",
  "tensorflow.compat.v2.print",
  "tensorflow.compat.v2.py_function",
  "tensorflow.compat.v2.qint16",
  "tensorflow.compat.v2.qint16.as_numpy_dtype",
  "tensorflow.compat.v2.ragged.range",
  "tensorflow.compat.v2.random",
  "tensorflow.compat.v2.random.categorical",
  "tensorflow.compat.v2.random.experimental.stateless_fold_in",
  "tensorflow.compat.v2.random.gamma",
  "tensorflow.compat.v2.random.normal",
  "tensorflow.compat.v2.random.set_seed",
  "tensorflow.compat.v2.random.stateless_binomial",
  "tensorflow.compat.v2.random.stateless_categorical",
  "tensorflow.compat.v2.random.stateless_gamma",
  "tensorflow.compat.v2.random.stateless_normal",
  "tensorflow.compat.v2.random.stateless_parameterized_truncated_normal",
  "tensorflow.compat.v2.random.stateless_poisson",
  "tensorflow.compat.v2.random.stateless_uniform",
  "tensorflow.compat.v2.random.uniform",
  "tensorflow.compat.v2.range",
  "tensorflow.compat.v2.rank",
  "tensorflow.compat.v2.raw_ops.BroadcastGradientArgs",
  "tensorflow.compat.v2.raw_ops.RandomGammaGrad",
  "tensorflow.compat.v2.raw_ops.UniqueWithCountsV2",
  "tensorflow.compat.v2.reduce_all",
  "tensorflow.compat.v2.reduce_any",
  "tensorflow.compat.v2.reduce_logsumexp",
  "tensorflow.compat.v2.reduce_max",
  "tensorflow.compat.v2.reduce_mean",
  "tensorflow.compat.v2.reduce_min",
  "tensorflow.compat.v2.reduce_prod",
  "tensorflow.compat.v2.reduce_sum",
  "tensorflow.compat.v2.register_tensor_conversion_function",
  "tensorflow.compat.v2.repeat",
  "tensorflow.compat.v2.reshape",
  "tensorflow.compat.v2.reverse",
  "tensorflow.compat.v2.roll",
  "tensorflow.compat.v2.round",
  "tensorflow.compat.v2.saved_model.load",
  "tensorflow.compat.v2.saved_model.save",
  "tensorflow.compat.v2.scan",
  "tensorflow.compat.v2.scatter_nd",
  "tensorflow.compat.v2.searchsorted",
  "tensorflow.compat.v2.sets.difference",
  "tensorflow.compat.v2.shape",
  "tensorflow.compat.v2.sigmoid",
  "tensorflow.compat.v2.sign",
  "tensorflow.compat.v2.signal.dct",
  "tensorflow.compat.v2.signal.fft",
  "tensorflow.compat.v2.signal.idct",
  "tensorflow.compat.v2.signal.ifft",
  "tensorflow.compat.v2.sin",
  "tensorflow.compat.v2.sinh",
  "tensorflow.compat.v2.size",
  "tensorflow.compat.v2.slice",
  "tensorflow.compat.v2.sort",
  "tensorflow.compat.v2.sparse.slice",
  "tensorflow.compat.v2.sparse.to_dense",
  "tensorflow.compat.v2.split",
  "tensorflow.compat.v2.sqrt",
  "tensorflow.compat.v2.square",
  "tensorflow.compat.v2.squeeze",
  "tensorflow.compat.v2.stack",
  "tensorflow.compat.v2.stop_gradient",
  "tensorflow.compat.v2.string",
  "tensorflow.compat.v2.subtract",
  "tensorflow.compat.v2.tan",
  "tensorflow.compat.v2.tensor_scatter_nd_add",
  "tensorflow.compat.v2.tensor_scatter_nd_sub",
  "tensorflow.compat.v2.tensor_scatter_nd_update",
  "tensorflow.compat.v2.tensordot",
  "tensorflow.compat.v2.test.Benchmark",
  "tensorflow.compat.v2.test.TestCase",
  "tensorflow.compat.v2.test.is_gpu_available",
  "tensorflow.compat.v2.test.main",
  "tensorflow.compat.v2.tile",
  "tensorflow.compat.v2.tpu.experimental.initialize_tpu_system",
  "tensorflow.compat.v2.train.Checkpoint",
  "tensorflow.compat.v2.transpose",
  "tensorflow.compat.v2.uint16",
  "tensorflow.compat.v2.uint32",
  "tensorflow.compat.v2.unique",
  "tensorflow.compat.v2.unstack",
  "tensorflow.compat.v2.vectorized_map",
  "tensorflow.compat.v2.where",
  "tensorflow.compat.v2.while_loop",
  "tensorflow.compat.v2.xla.experimental.jit_scope",
  "tensorflow.compat.v2.zeros",
  "tensorflow.compat.v2.zeros_like",
  "tensorflow.compiler.tf2xla.python.xla.variadic_reduce",
  "tensorflow.python.autograph.pyct.anno.Basic.QN",
  "tensorflow.python.autograph.pyct.anno.Static.SCOPE",
  "tensorflow.python.autograph.pyct.common_transformers.anf.ANY",
  "tensorflow.python.autograph.pyct.common_transformers.anf.ASTEdgePattern",
  "tensorflow.python.autograph.pyct.common_transformers.anf.REPLACE",
  "tensorflow.python.autograph.pyct.inspect_utils.getfutureimports",
  "tensorflow.python.autograph.pyct.loader.load_ast",
  "tensorflow.python.autograph.pyct.transformer.Context",
  "tensorflow.python.framework.composite_tensor.CompositeTensor",
  "tensorflow.python.framework.ops",
  "tensorflow.python.framework.ops.EagerTensor",
  "tensorflow.python.framework.ops.Tensor",
  "tensorflow.python.framework.ops.convert_to_tensor_or_composite",
  "tensorflow.python.framework.ops.get_default_graph",
  "tensorflow.python.framework.tensor_shape.as_shape",
  "tensorflow.python.framework.test_util.TestCase",
  "tensorflow.python.framework.test_util.enable_control_flow_v2",
  "tensorflow.python.framework.test_util.jax_disable_test_missing_functionality",
  "tensorflow.python.framework.test_util.jax_disable_variable_test",
  "tensorflow.python.framework.test_util.numpy_disable_gradient_test",
  "tensorflow.python.framework.test_util.numpy_disable_test_missing_functionality",
  "tensorflow.python.framework.test_util.run_deprecated_v1",
  "tensorflow.python.framework.test_util.test_all_tf_execution_regimes",
  "tensorflow.python.framework.test_util.test_np_rng",
  "tensorflow.python.framework.test_util.test_seed",
  "tensorflow.python.framework.test_util.test_seed_stream",
  "tensorflow.python.framework.test_util.tf_tape_safety_test",
  "tensorflow.python.framework.type_spec.BatchableTypeSpec",
  "tensorflow.python.framework.type_spec.type_spec_from_value",
  "tensorflow.python.ops.control_flow_ops._case_helper",
  "tensorflow.python.ops.control_flow_util.GraphOrParentsInXlaContext",
  "tensorflow.python.ops.linalg.linear_operator_addition.add_operators",
  "tensorflow.python.ops.nn_ops.Convolution",
  "tensorflow.python.pywrap_tensorflow.TF_TryEvaluateConstant_wrapper",
  "tensorflow.python.saved_model.nested_structure_coder.NotEncodableError",
  "tensorflow.python.saved_model.nested_structure_coder.StructureCoder",
  "tensorflow.python.saved_model.nested_structure_coder._TypeSpecCodec",
  "tensorflow.python.training.training_ops.resource_apply_gradient_descent",
  "tensorflow.python.util.nest._IF_SHALLOW_IS_SEQ_INPUT_MUST_BE_SEQ.format",
  "tensorflow.python.util.nest._SHALLOW_TREE_HAS_INVALID_KEYS.format",
  "tensorflow.python.util.nest._STRUCTURES_HAVE_MISMATCHING_LENGTHS.format",
  "tensorflow.python.util.nest._STRUCTURES_HAVE_MISMATCHING_TYPES.format",
  "tensorflow.python.util.nest._yield_sorted_items",
  "tensorflow.python.util.nest.flatten_with_tuple_paths",
  "tensorflow.python.util.nest.is_nested",
  "tensorflow.python.util.nest.map_structure_with_tuple_paths",
  "tensorflow.python.util.nest.map_structure_with_tuple_paths_up_to",
  "tensorflow.python.util.tf_inspect.isgeneratorfunction",
  "tensorflow_probability.bijectors",
  "tensorflow_probability.bijectors.Bijector",
  "tensorflow_probability.bijectors.Exp",
  "tensorflow_probability.bijectors.Reshape",
  "tensorflow_probability.bijectors.Scale",
  "tensorflow_probability.bijectors.ScaleMatvecDiag",
  "tensorflow_probability.bijectors.Sigmoid",
  "tensorflow_probability.bijectors.Softplus",
  "tensorflow_probability.distributions",
  "tensorflow_probability.distributions.Beta",
  "tensorflow_probability.distributions.Categorical",
  "tensorflow_probability.distributions.Distribution",
  "tensorflow_probability.distributions.HalfCauchy",
  "tensorflow_probability.distributions.InverseGamma",
  "tensorflow_probability.distributions.LinearGaussianStateSpaceModel",
  "tensorflow_probability.distributions.LogNormal",
  "tensorflow_probability.distributions.MultivariateNormalDiag",
  "tensorflow_probability.distributions.MultivariateNormalFullCovariance",
  "tensorflow_probability.distributions.Normal",
  "tensorflow_probability.distributions.Poisson",
  "tensorflow_probability.distributions.PowerSpherical",
  "tensorflow_probability.distributions.SphericalUniform",
  "tensorflow_probability.distributions.StudentT",
  "tensorflow_probability.distributions.TransformedDistribution",
  "tensorflow_probability.distributions.TruncatedNormal",
  "tensorflow_probability.distributions.Uniform",
  "tensorflow_probability.distributions.VonMisesFisher",
  "tensorflow_probability.distributions.WishartTriL",
  "tensorflow_probability.distributions.kl_divergence",
  "tensorflow_probability.experimental.AutoCompositeTensor",
  "tensorflow_probability.experimental.as_composite",
  "tensorflow_probability.experimental.auto_composite_tensor",
  "tensorflow_probability.experimental.bijectors",
  "tensorflow_probability.experimental.distributions",
  "tensorflow_probability.experimental.distributions.log_prob_ratio",
  "tensorflow_probability.experimental.lazybones",
  "tensorflow_probability.experimental.linalg.LinearOperatorPSDKernel",
  "tensorflow_probability.experimental.mcmc.CovarianceReducer",
  "tensorflow_probability.experimental.mcmc.DiagonalMassMatrixAdaptation",
  "tensorflow_probability.experimental.mcmc.EllipticalSliceSampler",
  "tensorflow_probability.experimental.mcmc.ExpectationsReducer",
  "tensorflow_probability.experimental.mcmc.GradientBasedTrajectoryLengthAdaptation",
  "tensorflow_probability.experimental.mcmc.NoUTurnSampler",
  "tensorflow_probability.experimental.mcmc.PotentialScaleReductionReducer",
  "tensorflow_probability.experimental.mcmc.PreconditionedHamiltonianMonteCarlo",
  "tensorflow_probability.experimental.mcmc.ProgressBarReducer",
  "tensorflow_probability.experimental.mcmc.Reducer",
  "tensorflow_probability.experimental.mcmc.SampleDiscardingKernel",
  "tensorflow_probability.experimental.mcmc.ThinningKernel",
  "tensorflow_probability.experimental.mcmc.TracingReducer",
  "tensorflow_probability.experimental.mcmc.VarianceReducer",
  "tensorflow_probability.experimental.mcmc.WithReductions",
  "tensorflow_probability.experimental.mcmc.augment_prior_with_state_history",
  "tensorflow_probability.experimental.mcmc.augment_with_observation_history",
  "tensorflow_probability.experimental.mcmc.augment_with_state_history",
  "tensorflow_probability.experimental.mcmc.chees_criterion",
  "tensorflow_probability.experimental.mcmc.ess_below_threshold",
  "tensorflow_probability.experimental.mcmc.infer_trajectories",
  "tensorflow_probability.experimental.mcmc.particle_filter",
  "tensorflow_probability.experimental.mcmc.reconstruct_trajectories",
  "tensorflow_probability.experimental.mcmc.resample_systematic",
  "tensorflow_probability.experimental.mcmc.run_kernel",
  "tensorflow_probability.experimental.mcmc.sample_chain_with_burnin",
  "tensorflow_probability.experimental.mcmc.sample_fold",
  "tensorflow_probability.experimental.mcmc.sample_sequential_monte_carlo",
  "tensorflow_probability.experimental.mcmc.step_kernel",
  "tensorflow_probability.experimental.nn",
  "tensorflow_probability.experimental.register_composite",
  "tensorflow_probability.experimental.sequential",
  "tensorflow_probability.experimental.sequential.IteratedFilter",
  "tensorflow_probability.experimental.sequential.extended_kalman_filter",
  "tensorflow_probability.experimental.sequential.geometric_cooling_schedule",
  "tensorflow_probability.experimental.stats.RunningCentralMoments.from_shape",
  "tensorflow_probability.experimental.stats.RunningCovariance.from_shape",
  "tensorflow_probability.experimental.stats.RunningMean.from_shape",
  "tensorflow_probability.experimental.stats.RunningPotentialScaleReduction.from_shape",
  "tensorflow_probability.experimental.stats.RunningVariance.from_shape",
  "tensorflow_probability.experimental.stats.RunningVariance.from_stats",
  "tensorflow_probability.experimental.util.DeferredModule",
  "tensorflow_probability.glm.Bernoulli",
  "tensorflow_probability.glm.BernoulliNormalCDF",
  "tensorflow_probability.glm.Binomial",
  "tensorflow_probability.glm.CustomExponentialFamily",
  "tensorflow_probability.glm.ExponentialFamily.__call__",
  "tensorflow_probability.glm.GammaExp",
  "tensorflow_probability.glm.GammaSoftplus",
  "tensorflow_probability.glm.LogNormal",
  "tensorflow_probability.glm.LogNormalSoftplus",
  "tensorflow_probability.glm.NegativeBinomial",
  "tensorflow_probability.glm.NegativeBinomialSoftplus",
  "tensorflow_probability.glm.Normal",
  "tensorflow_probability.glm.NormalReciprocal",
  "tensorflow_probability.glm.Poisson",
  "tensorflow_probability.glm.PoissonSoftplus",
  "tensorflow_probability.glm.fit",
  "tensorflow_probability.glm.fit_sparse",
  "tensorflow_probability.glm.fit_sparse_one_step",
  "tensorflow_probability.layers.BlockwiseInitializer",
  "tensorflow_probability.layers.Convolution1DFlipout",
  "tensorflow_probability.layers.Convolution1DReparameterization",
  "tensorflow_probability.layers.Convolution2DFlipout",
  "tensorflow_probability.layers.Convolution2DReparameterization",
  "tensorflow_probability.layers.Convolution3DFlipout",
  "tensorflow_probability.layers.Convolution3DReparameterization",
  "tensorflow_probability.layers.DenseFlipout",
  "tensorflow_probability.layers.DenseLocalReparameterization",
  "tensorflow_probability.layers.DenseReparameterization",
  "tensorflow_probability.layers.DenseVariational",
  "tensorflow_probability.layers.DistributionLambda",
  "tensorflow_probability.layers.VariableLayer",
  "tensorflow_probability.layers.VariationalGaussianProcess",
  "tensorflow_probability.layers.default_mean_field_normal_fn",
  "tensorflow_probability.layers.default_multivariate_normal_fn",
  "tensorflow_probability.math",
  "tensorflow_probability.math.batch_interp_regular_1d_grid",
  "tensorflow_probability.math.batch_interp_regular_nd_grid",
  "tensorflow_probability.math.bessel_iv_ratio",
  "tensorflow_probability.math.bessel_ive",
  "tensorflow_probability.math.bessel_kve",
  "tensorflow_probability.math.bracket_root",
  "tensorflow_probability.math.cholesky_concat",
  "tensorflow_probability.math.cholesky_update",
  "tensorflow_probability.math.clip_by_value_preserve_gradient",
  "tensorflow_probability.math.custom_gradient",
  "tensorflow_probability.math.dense_to_sparse",
  "tensorflow_probability.math.diag_jacobian",
  "tensorflow_probability.math.erfcinv",
  "tensorflow_probability.math.fill_triangular",
  "tensorflow_probability.math.fill_triangular_inverse",
  "tensorflow_probability.math.find_root_chandrupatla",
  "tensorflow_probability.math.find_root_secant",
  "tensorflow_probability.math.gram_schmidt",
  "tensorflow_probability.math.interp_regular_1d_grid",
  "tensorflow_probability.math.lambertw",
  "tensorflow_probability.math.lambertw_winitzki_approx",
  "tensorflow_probability.math.log1mexp",
  "tensorflow_probability.math.log1psquare",
  "tensorflow_probability.math.log_add_exp",
  "tensorflow_probability.math.log_combinations",
  "tensorflow_probability.math.log_cosh",
  "tensorflow_probability.math.log_cumsum_exp",
  "tensorflow_probability.math.log_sub_exp",
  "tensorflow_probability.math.lu_matrix_inverse",
  "tensorflow_probability.math.lu_reconstruct",
  "tensorflow_probability.math.lu_solve",
  "tensorflow_probability.math.minimize",
  "tensorflow_probability.math.ode.BDF",
  "tensorflow_probability.math.ode.ChosenBySolver",
  "tensorflow_probability.math.ode.DormandPrince",
  "tensorflow_probability.math.ode.Solver",
  "tensorflow_probability.math.pivoted_cholesky",
  "tensorflow_probability.math.psd_kernels",
  "tensorflow_probability.math.psd_kernels.ExpSinSquared",
  "tensorflow_probability.math.psd_kernels.ExponentiatedQuadratic",
  "tensorflow_probability.math.psd_kernels.FeatureScaled",
  "tensorflow_probability.math.psd_kernels.FeatureTransformed",
  "tensorflow_probability.math.psd_kernels.GeneralizedMatern",
  "tensorflow_probability.math.psd_kernels.KumaraswamyTransformed",
  "tensorflow_probability.math.psd_kernels.Linear",
  "tensorflow_probability.math.psd_kernels.MaternFiveHalves",
  "tensorflow_probability.math.psd_kernels.MaternOneHalf",
  "tensorflow_probability.math.psd_kernels.MaternThreeHalves",
  "tensorflow_probability.math.psd_kernels.Parabolic",
  "tensorflow_probability.math.psd_kernels.Polynomial",
  "tensorflow_probability.math.psd_kernels.PositiveSemidefiniteKernel",
  "tensorflow_probability.math.psd_kernels.RationalQuadratic",
  "tensorflow_probability.math.psd_kernels.SchurComplement",
  "tensorflow_probability.math.random_rademacher",
  "tensorflow_probability.math.random_rayleigh",
  "tensorflow_probability.math.reduce_kahan_sum",
  "tensorflow_probability.math.reduce_log_harmonic_mean_exp",
  "tensorflow_probability.math.reduce_logmeanexp",
  "tensorflow_probability.math.reduce_weighted_logsumexp",
  "tensorflow_probability.math.scan_associative",
  "tensorflow_probability.math.smootherstep",
  "tensorflow_probability.math.soft_sorting_matrix",
  "tensorflow_probability.math.soft_threshold",
  "tensorflow_probability.math.softplus_inverse",
  "tensorflow_probability.math.sparse_or_dense_matmul",
  "tensorflow_probability.math.sparse_or_dense_matvecmul",
  "tensorflow_probability.math.value_and_gradient",
  "tensorflow_probability.mcmc.DualAveragingStepSizeAdaptation",
  "tensorflow_probability.mcmc.HamiltonianMonteCarlo",
  "tensorflow_probability.mcmc.MetropolisAdjustedLangevinAlgorithm",
  "tensorflow_probability.mcmc.MetropolisHastings",
  "tensorflow_probability.mcmc.NoUTurnSampler",
  "tensorflow_probability.mcmc.RandomWalkMetropolis",
  "tensorflow_probability.mcmc.ReplicaExchangeMC",
  "tensorflow_probability.mcmc.SimpleStepSizeAdaptation",
  "tensorflow_probability.mcmc.SliceSampler",
  "tensorflow_probability.mcmc.TransformedTransitionKernel",
  "tensorflow_probability.mcmc.TransitionKernel",
  "tensorflow_probability.mcmc.UncalibratedHamiltonianMonteCarlo",
  "tensorflow_probability.mcmc.UncalibratedLangevin",
  "tensorflow_probability.mcmc.UncalibratedRandomWalk",
  "tensorflow_probability.mcmc.default_swap_proposal_fn",
  "tensorflow_probability.mcmc.effective_sample_size",
  "tensorflow_probability.mcmc.even_odd_swap_proposal_fn",
  "tensorflow_probability.mcmc.make_simple_step_size_update_policy",
  "tensorflow_probability.mcmc.potential_scale_reduction",
  "tensorflow_probability.mcmc.random_walk_normal_fn",
  "tensorflow_probability.mcmc.random_walk_uniform_fn",
  "tensorflow_probability.mcmc.sample_annealed_importance_chain",
  "tensorflow_probability.mcmc.sample_chain",
  "tensorflow_probability.mcmc.sample_halton_sequence",
  "tensorflow_probability.mcmc.simple_step_size_adaptation.SimpleStepSizeAdaptation",
  "tensorflow_probability.mcmc.simple_step_size_adaptation.SimpleStepSizeAdaptationResults",
  "tensorflow_probability.monte_carlo.expectation",
  "tensorflow_probability.optimizer.StochasticGradientLangevinDynamics",
  "tensorflow_probability.optimizer.VariationalSGD",
  "tensorflow_probability.optimizer.bfgs_minimize",
  "tensorflow_probability.optimizer.converged_all",
  "tensorflow_probability.optimizer.converged_any",
  "tensorflow_probability.optimizer.convergence_criteria.LossNotDecreasing",
  "tensorflow_probability.optimizer.convergence_criteria.SuccessiveGradientsAreUncorrelated",
  "tensorflow_probability.optimizer.differential_evolution_minimize",
  "tensorflow_probability.optimizer.lbfgs_minimize",
  "tensorflow_probability.optimizer.linesearch.hager_zhang",
  "tensorflow_probability.optimizer.nelder_mead_minimize",
  "tensorflow_probability.optimizer.proximal_hessian_sparse_minimize",
  "tensorflow_probability.optimizer.proximal_hessian_sparse_one_step",
  "tensorflow_probability.python.bijectors.Exp._cache.clear",
  "tensorflow_probability.python.bijectors._forward.assert_any_call",
  "tensorflow_probability.python.bijectors._forward_log_det_jacobian.assert_called_with",
  "tensorflow_probability.python.bijectors._inverse.assert_any_call",
  "tensorflow_probability.python.bijectors._inverse_log_det_jacobian.assert_called_with",
  "tensorflow_probability.python.bijectors.bijector.SKIP_DTYPE_CHECKS",
  "tensorflow_probability.python.bijectors.bijector.UNSPECIFIED",
  "tensorflow_probability.python.bijectors.bijector._is_injective",
  "tensorflow_probability.python.bijectors.bijector.dtype",
  "tensorflow_probability.python.bijectors.bijector.forward_min_event_ndims",
  "tensorflow_probability.python.bijectors.bijector.inverse_min_event_ndims",
  "tensorflow_probability.python.bijectors.bijector.is_constant_jacobian",
  "tensorflow_probability.python.bijectors.bijector.ldj_reduction_ndims",
  "tensorflow_probability.python.bijectors.bijector.name",
  "tensorflow_probability.python.bijectors.fill_triangular.FillTriangular",
  "tensorflow_probability.python.bijectors.masked_autoregressive._make_dense_autoregressive_masks",
  "tensorflow_probability.python.bijectors.scale_matvec_linear_operator.ScaleMatvecLinearOperator",
  "tensorflow_probability.python.distributions.Bernoulli.logits",
  "tensorflow_probability.python.distributions.Categorical.sample",
  "tensorflow_probability.python.distributions.Distribution.mean",
  "tensorflow_probability.python.distributions.Distribution.sample",
  "tensorflow_probability.python.distributions.Distribution.stddev",
  "tensorflow_probability.python.distributions.Distribution.variance",
  "tensorflow_probability.python.distributions.ExponentiallyModifiedGaussian.param_shapes",
  "tensorflow_probability.python.distributions.ExponentiallyModifiedGaussian.param_static_shapes",
  "tensorflow_probability.python.distributions.GeneralizedNormal.param_shapes",
  "tensorflow_probability.python.distributions.GeneralizedNormal.param_static_shapes",
  "tensorflow_probability.python.distributions.JohnsonSU.param_shapes",
  "tensorflow_probability.python.distributions.JohnsonSU.param_static_shapes",
  "tensorflow_probability.python.distributions.JointDistributionCoroutine.Root",
  "tensorflow_probability.python.distributions.MultivariateNormalDiag.sample",
  "tensorflow_probability.python.distributions.NegativeBinomial.experimental_from_mean_dispersion",
  "tensorflow_probability.python.distributions.Normal.param_shapes",
  "tensorflow_probability.python.distributions.Normal.param_static_shapes",
  "tensorflow_probability.python.distributions.Normal.sample",
  "tensorflow_probability.python.distributions.bates.BATES_TOTAL_COUNT_STABILITY_LIMITS",
  "tensorflow_probability.python.distributions.bates.BATES_TOTAL_COUNT_STABILITY_LIMITS.values",
  "tensorflow_probability.python.distributions.bates._segmented_range",
  "tensorflow_probability.python.distributions.beta.sample",
  "tensorflow_probability.python.distributions.chi2.sample",
  "tensorflow_probability.python.distributions.distribution.__class__",
  "tensorflow_probability.python.distributions.distribution.allow_nan_stats",
  "tensorflow_probability.python.distributions.distribution.batch_shape",
  "tensorflow_probability.python.distributions.distribution.dtype",
  "tensorflow_probability.python.distributions.distribution.experimental_default_event_space_bijector",
  "tensorflow_probability.python.distributions.distribution.name",
  "tensorflow_probability.python.distributions.distribution.reparameterization_type",
  "tensorflow_probability.python.distributions.distribution.validate_args",
  "tensorflow_probability.python.distributions.exp_gamma.random_exp_gamma",
  "tensorflow_probability.python.distributions.gamma.batch_shape",
  "tensorflow_probability.python.distributions.gamma.batch_shape_tensor",
  "tensorflow_probability.python.distributions.gamma.cdf",
  "tensorflow_probability.python.distributions.gamma.entropy",
  "tensorflow_probability.python.distributions.gamma.event_shape",
  "tensorflow_probability.python.distributions.gamma.event_shape_tensor",
  "tensorflow_probability.python.distributions.gamma.log_prob",
  "tensorflow_probability.python.distributions.gamma.mean",
  "tensorflow_probability.python.distributions.gamma.mode",
  "tensorflow_probability.python.distributions.gamma.prob",
  "tensorflow_probability.python.distributions.gamma.sample",
  "tensorflow_probability.python.distributions.gamma.stddev",
  "tensorflow_probability.python.distributions.gamma.variance",
  "tensorflow_probability.python.distributions.hypothesis_testlib.INSTANTIABLE_BASE_DISTS.keys",
  "tensorflow_probability.python.distributions.internal.statistical_testing.assert_multivariate_true_cdf_equal_on_projections_two_sample",
  "tensorflow_probability.python.distributions.internal.statistical_testing.assert_true_cdf_equal_by_dkwm",
  "tensorflow_probability.python.distributions.internal.statistical_testing.assert_true_cdf_equal_by_dkwm_two_sample",
  "tensorflow_probability.python.distributions.internal.statistical_testing.empirical_cdfs",
  "tensorflow_probability.python.distributions.internal.statistical_testing.kolmogorov_smirnov_distance",
  "tensorflow_probability.python.distributions.internal.statistical_testing.kolmogorov_smirnov_distance_two_sample",
  "tensorflow_probability.python.distributions.internal.statistical_testing.left_continuous_cdf_discrete_distribution",
  "tensorflow_probability.python.distributions.internal.statistical_testing.min_discrepancy_of_true_cdfs_detectable_by_dkwm",
  "tensorflow_probability.python.distributions.internal.statistical_testing.min_discrepancy_of_true_cdfs_detectable_by_dkwm_two_sample",
  "tensorflow_probability.python.distributions.internal.statistical_testing.min_num_samples_for_dkwm_cdf_test",
  "tensorflow_probability.python.distributions.internal.statistical_testing.min_num_samples_for_dkwm_cdf_two_sample_test",
  "tensorflow_probability.python.distributions.joint_distribution.dummy_seed",
  "tensorflow_probability.python.distributions.joint_distribution.get_explicit_name_for_component",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.BackwardPassState",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.KalmanFilterState",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm._augment_sample_shape",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.backward_smoothing_update",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.build_backward_pass_step",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.build_kalman_cov_step",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.build_kalman_filter_step",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.build_kalman_mean_step",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.build_pushforward_latents_step",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.kalman_transition",
  "tensorflow_probability.python.distributions.linear_gaussian_ssm.linear_gaussian_update",
  "tensorflow_probability.python.distributions.poisson.batch_shape",
  "tensorflow_probability.python.distributions.poisson.batch_shape_tensor",
  "tensorflow_probability.python.distributions.poisson.cdf",
  "tensorflow_probability.python.distributions.poisson.event_shape",
  "tensorflow_probability.python.distributions.poisson.event_shape_tensor",
  "tensorflow_probability.python.distributions.poisson.log_cdf",
  "tensorflow_probability.python.distributions.poisson.log_prob",
  "tensorflow_probability.python.distributions.poisson.log_rate_parameter",
  "tensorflow_probability.python.distributions.poisson.mean",
  "tensorflow_probability.python.distributions.poisson.mode",
  "tensorflow_probability.python.distributions.poisson.prob",
  "tensorflow_probability.python.distributions.poisson.rate",
  "tensorflow_probability.python.distributions.poisson.rate_parameter",
  "tensorflow_probability.python.distributions.poisson.sample",
  "tensorflow_probability.python.distributions.poisson.stddev",
  "tensorflow_probability.python.distributions.poisson.variance",
  "tensorflow_probability.python.experimental.auto_batching.dsl.ProgramBuilder",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Block",
  "tensorflow_probability.python.experimental.auto_batching.instructions.BranchOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.ControlFlowGraph",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Environment",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Environment.initialize",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Function",
  "tensorflow_probability.python.experimental.auto_batching.instructions.FunctionCallOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.GotoOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.IndirectGotoOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.PopOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.PrimOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Program",
  "tensorflow_probability.python.experimental.auto_batching.instructions.PushGotoOp",
  "tensorflow_probability.python.experimental.auto_batching.instructions.TensorType",
  "tensorflow_probability.python.experimental.auto_batching.instructions.Type",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.FULL",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.NULL",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.REGISTER",
  "tensorflow_probability.python.experimental.auto_batching.instructions.VariableAllocation.TEMPORARY",
  "tensorflow_probability.python.experimental.auto_batching.instructions.detect_batch_size",
  "tensorflow_probability.python.experimental.auto_batching.instructions.extract_referenced_variables",
  "tensorflow_probability.python.experimental.auto_batching.instructions.halt",
  "tensorflow_probability.python.experimental.auto_batching.instructions.halt_op",
  "tensorflow_probability.python.experimental.auto_batching.instructions.interpret",
  "tensorflow_probability.python.experimental.auto_batching.instructions.is_return_op",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pattern_flatten",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pattern_map",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pattern_traverse",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pattern_zip",
  "tensorflow_probability.python.experimental.auto_batching.instructions.pc_var",
  "tensorflow_probability.python.experimental.auto_batching.instructions.prim_op",
  "tensorflow_probability.python.experimental.auto_batching.instructions.push_op",
  "tensorflow_probability.python.experimental.auto_batching.instructions.single_type",
  "tensorflow_probability.python.experimental.auto_batching.numpy_backend.NumpyBackend",
  "tensorflow_probability.python.experimental.auto_batching.tf_backend.TensorFlowBackend",
  "tensorflow_probability.python.experimental.auto_batching.type_inference.infer_types",
  "tensorflow_probability.python.experimental.auto_batching.type_inference.infer_types_from_signature",
  "tensorflow_probability.python.experimental.auto_batching.type_inference.is_inferring",
  "tensorflow_probability.python.experimental.auto_batching.type_inference.signature",
  "tensorflow_probability.python.experimental.auto_batching.type_inference.type_of_pattern",
  "tensorflow_probability.python.experimental.auto_batching.virtual_machine.execute",
  "tensorflow_probability.python.experimental.auto_batching.virtual_machine.is_staging",
  "tensorflow_probability.python.experimental.composite_tensor._registry.clear",
  "tensorflow_probability.python.experimental.lazybones.utils.weak_container.WeakKeyDictionary",
  "tensorflow_probability.python.experimental.lazybones.utils.weak_container.WeakSet",
  "tensorflow_probability.python.experimental.nn.layers.KernelBiasLayer",
  "tensorflow_probability.python.experimental.nn.layers.Layer",
  "tensorflow_probability.python.experimental.nn.util.convolution_util._get_output_shape",
  "tensorflow_probability.python.experimental.nn.util.convolution_util.prepare_conv_args",
  "tensorflow_probability.python.experimental.nn.util.convolution_util.prepare_tuple_argument",
  "tensorflow_probability.python.experimental.parallel_filter.parallel_kalman_filter_lib.kalman_filter",
  "tensorflow_probability.python.experimental.parallel_filter.parallel_kalman_filter_lib.sample_walk",
  "tensorflow_probability.python.glm.fisher_scoring.compute_predicted_linear_response",
  "tensorflow_probability.python.internal.backend.jax.device_count",
  "tensorflow_probability.python.internal.backend.jax.is_tensor",
  "tensorflow_probability.python.internal.backend.jax.jit",
  "tensorflow_probability.python.internal.backend.jax.jvp",
  "tensorflow_probability.python.internal.backend.jax.pmap",
  "tensorflow_probability.python.internal.backend.jax.test.main",
  "tensorflow_probability.python.internal.backend.jax.tree_util.tree_flatten",
  "tensorflow_probability.python.internal.backend.jax.tree_util.tree_leaves",
  "tensorflow_probability.python.internal.backend.jax.tree_util.tree_unflatten",
  "tensorflow_probability.python.internal.backend.jax.vjp",
  "tensorflow_probability.python.internal.backend.jax.vmap",
  "tensorflow_probability.python.internal.backend.numpy.abs",
  "tensorflow_probability.python.internal.backend.numpy.add",
  "tensorflow_probability.python.internal.backend.numpy.argsort",
  "tensorflow_probability.python.internal.backend.numpy.bool",
  "tensorflow_probability.python.internal.backend.numpy.broadcast_to",
  "tensorflow_probability.python.internal.backend.numpy.cast",
  "tensorflow_probability.python.internal.backend.numpy.compat.v1.Dimension",
  "tensorflow_probability.python.internal.backend.numpy.compat.v2.Module",
  "tensorflow_probability.python.internal.backend.numpy.compat.v2.TensorArray",
  "tensorflow_probability.python.internal.backend.numpy.compat.v2.Variable",
  "tensorflow_probability.python.internal.backend.numpy.complex128",
  "tensorflow_probability.python.internal.backend.numpy.complex64",
  "tensorflow_probability.python.internal.backend.numpy.concat",
  "tensorflow_probability.python.internal.backend.numpy.control_flow.group",
  "tensorflow_probability.python.internal.backend.numpy.control_flow.no_op",
  "tensorflow_probability.python.internal.backend.numpy.convert_to_tensor",
  "tensorflow_probability.python.internal.backend.numpy.dtype.__name__",
  "tensorflow_probability.python.internal.backend.numpy.dtype.is_floating",
  "tensorflow_probability.python.internal.backend.numpy.dtype.name",
  "tensorflow_probability.python.internal.backend.numpy.equal",
  "tensorflow_probability.python.internal.backend.numpy.float32",
  "tensorflow_probability.python.internal.backend.numpy.float64",
  "tensorflow_probability.python.internal.backend.numpy.foldl",
  "tensorflow_probability.python.internal.backend.numpy.gather",
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_addition.SUPPORTED_OPERATORS",
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_addition.add_operators",
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_circulant.LinearOperatorCirculant",
  "tensorflow_probability.python.internal.backend.numpy.gen.tensor_shape.Dimension",
  "tensorflow_probability.python.internal.backend.numpy.gen.tensor_shape.TensorShape",
  "tensorflow_probability.python.internal.backend.numpy.gen.tensor_shape.dimension_at_index",
  "tensorflow_probability.python.internal.backend.numpy.gen.tensor_shape.dimension_value",
  "tensorflow_probability.python.internal.backend.numpy.get_static_value",
  "tensorflow_probability.python.internal.backend.numpy.greater",
  "tensorflow_probability.python.internal.backend.numpy.identity",
  "tensorflow_probability.python.internal.backend.numpy.int32",
  "tensorflow_probability.python.internal.backend.numpy.int64",
  "tensorflow_probability.python.internal.backend.numpy.invert_permutation",
  "tensorflow_probability.python.internal.backend.numpy.less",
  "tensorflow_probability.python.internal.backend.numpy.linalg_impl.self_adjoint_eigvals",
  "tensorflow_probability.python.internal.backend.numpy.linspace",
  "tensorflow_probability.python.internal.backend.numpy.logical_and",
  "tensorflow_probability.python.internal.backend.numpy.logical_not",
  "tensorflow_probability.python.internal.backend.numpy.logical_or",
  "tensorflow_probability.python.internal.backend.numpy.math.nextafter",
  "tensorflow_probability.python.internal.backend.numpy.math.top_k",
  "tensorflow_probability.python.internal.backend.numpy.maximum",
  "tensorflow_probability.python.internal.backend.numpy.minimum",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array._reverse",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.broadcast_dynamic_shape",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.concat",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.expand_dims",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.gather",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.one_hot",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.ones",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.ones_like",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.rank",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.reshape",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.reverse",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.shape",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.size",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.split",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.squeeze",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.stack",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.transpose",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.where_v2",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.zeros",
  "tensorflow_probability.python.internal.backend.numpy.numpy_array.zeros_like",
  "tensorflow_probability.python.internal.backend.numpy.numpy_math.range",
  "tensorflow_probability.python.internal.backend.numpy.one_hot",
  "tensorflow_probability.python.internal.backend.numpy.ones",
  "tensorflow_probability.python.internal.backend.numpy.ops.Module",
  "tensorflow_probability.python.internal.backend.numpy.ops.NumpyVariable",
  "tensorflow_probability.python.internal.backend.numpy.ops.Tensor",
  "tensorflow_probability.python.internal.backend.numpy.ops._convert_dimension_to_tensor",
  "tensorflow_probability.python.internal.backend.numpy.ops._convert_tensorshape_to_tensor",
  "tensorflow_probability.python.internal.backend.numpy.ops.broadcast_shape",
  "tensorflow_probability.python.internal.backend.numpy.pad",
  "tensorflow_probability.python.internal.backend.numpy.pow",
  "tensorflow_probability.python.internal.backend.numpy.range",
  "tensorflow_probability.python.internal.backend.numpy.reduce_all",
  "tensorflow_probability.python.internal.backend.numpy.reduce_any",
  "tensorflow_probability.python.internal.backend.numpy.reduce_logsumexp",
  "tensorflow_probability.python.internal.backend.numpy.reduce_max",
  "tensorflow_probability.python.internal.backend.numpy.reduce_min",
  "tensorflow_probability.python.internal.backend.numpy.reduce_prod",
  "tensorflow_probability.python.internal.backend.numpy.reduce_sum",
  "tensorflow_probability.python.internal.backend.numpy.register_tensor_conversion_function",
  "tensorflow_probability.python.internal.backend.numpy.reshape",
  "tensorflow_probability.python.internal.backend.numpy.reverse",
  "tensorflow_probability.python.internal.backend.numpy.scan",
  "tensorflow_probability.python.internal.backend.numpy.slice",
  "tensorflow_probability.python.internal.backend.numpy.sort",
  "tensorflow_probability.python.internal.backend.numpy.split",
  "tensorflow_probability.python.internal.backend.numpy.sqrt",
  "tensorflow_probability.python.internal.backend.numpy.stack",
  "tensorflow_probability.python.internal.backend.numpy.tensor_scatter_nd_add",
  "tensorflow_probability.python.internal.backend.numpy.tensor_scatter_nd_sub",
  "tensorflow_probability.python.internal.backend.numpy.tensor_scatter_nd_update",
  "tensorflow_probability.python.internal.backend.numpy.unique",
  "tensorflow_probability.python.internal.backend.numpy.unstack",
  "tensorflow_probability.python.internal.backend.numpy.where",
  "tensorflow_probability.python.internal.backend.numpy.while_loop",
  "tensorflow_probability.python.internal.backend.numpy.zeros",
  "tensorflow_probability.python.internal.distribution_util.AppendDocstring",
  "tensorflow_probability.python.internal.distribution_util.assert_casting_closed",
  "tensorflow_probability.python.internal.distribution_util.assert_categorical_event_shape",
  "tensorflow_probability.python.internal.distribution_util.assert_integer_form",
  "tensorflow_probability.python.internal.distribution_util.assert_nondecreasing",
  "tensorflow_probability.python.internal.distribution_util.assert_nonnegative_integer_form",
  "tensorflow_probability.python.internal.distribution_util.dimension_size",
  "tensorflow_probability.python.internal.distribution_util.embed_check_categorical_event_shape",
  "tensorflow_probability.python.internal.distribution_util.embed_check_integer_casting_closed",
  "tensorflow_probability.python.internal.distribution_util.expand_to_vector",
  "tensorflow_probability.python.internal.distribution_util.extend_cdf_outside_support",
  "tensorflow_probability.python.internal.distribution_util.gen_new_seed",
  "tensorflow_probability.python.internal.distribution_util.get_broadcast_shape",
  "tensorflow_probability.python.internal.distribution_util.is_diagonal_scale",
  "tensorflow_probability.python.internal.distribution_util.is_distribution_instance",
  "tensorflow_probability.python.internal.distribution_util.maybe_get_static_value",
  "tensorflow_probability.python.internal.distribution_util.mixture_stddev",
  "tensorflow_probability.python.internal.distribution_util.move_dimension",
  "tensorflow_probability.python.internal.distribution_util.pad",
  "tensorflow_probability.python.internal.distribution_util.pad_mixture_dimensions",
  "tensorflow_probability.python.internal.distribution_util.parent_frame_arguments",
  "tensorflow_probability.python.internal.distribution_util.pick_scalar_condition",
  "tensorflow_probability.python.internal.distribution_util.pick_vector",
  "tensorflow_probability.python.internal.distribution_util.prefer_static_rank",
  "tensorflow_probability.python.internal.distribution_util.prefer_static_shape",
  "tensorflow_probability.python.internal.distribution_util.prefer_static_value",
  "tensorflow_probability.python.internal.distribution_util.rotate_transpose",
  "tensorflow_probability.python.internal.distribution_util.same_dynamic_shape",
  "tensorflow_probability.python.internal.distribution_util.shapes_from_loc_and_scale",
  "tensorflow_probability.python.internal.distribution_util.with_dependencies",
  "tensorflow_probability.python.internal.hypothesis_testlib.ALL_SUPPORTS",
  "tensorflow_probability.python.internal.hypothesis_testlib.Support",
  "tensorflow_probability.python.internal.hypothesis_testlib.Support.MATRIX_LOWER_TRIL_POSITIVE_DEFINITE",
  "tensorflow_probability.python.internal.hypothesis_testlib.Support.VECTOR_SIZE_TRIANGULAR",
  "tensorflow_probability.python.internal.hypothesis_testlib.assert_no_excessive_var_usage",
  "tensorflow_probability.python.internal.hypothesis_testlib.broadcast_compatible_shape",
  "tensorflow_probability.python.internal.hypothesis_testlib.broadcasting_params",
  "tensorflow_probability.python.internal.hypothesis_testlib.broadcasting_shapes",
  "tensorflow_probability.python.internal.hypothesis_testlib.constrained_tensors",
  "tensorflow_probability.python.internal.hypothesis_testlib.constrainer",
  "tensorflow_probability.python.internal.hypothesis_testlib.defer_and_count_usage",
  "tensorflow_probability.python.internal.hypothesis_testlib.guitar_skip_if_matches",
  "tensorflow_probability.python.internal.hypothesis_testlib.identity_fn",
  "tensorflow_probability.python.internal.hypothesis_testlib.lower_tril_positive_definite",
  "tensorflow_probability.python.internal.hypothesis_testlib.maybe_variable",
  "tensorflow_probability.python.internal.hypothesis_testlib.no_tf_rank_errors",
  "tensorflow_probability.python.internal.hypothesis_testlib.positive_definite",
  "tensorflow_probability.python.internal.hypothesis_testlib.running_under_guitar",
  "tensorflow_probability.python.internal.hypothesis_testlib.shapes",
  "tensorflow_probability.python.internal.hypothesis_testlib.softplus_plus_eps",
  "tensorflow_probability.python.internal.hypothesis_testlib.tensors_in_support",
  "tensorflow_probability.python.internal.hypothesis_testlib.tfp_hp_settings",
  "tensorflow_probability.python.layers.CategoricalMixtureOfOneHotCategorical.new",
  "tensorflow_probability.python.layers.CategoricalMixtureOfOneHotCategorical.params_size",
  "tensorflow_probability.python.layers.IndependentBernoulli.params_size",
  "tensorflow_probability.python.layers.IndependentLogistic.params_size",
  "tensorflow_probability.python.layers.IndependentNormal.params_size",
  "tensorflow_probability.python.layers.IndependentPoisson.params_size",
  "tensorflow_probability.python.layers.MixtureNormal.params_size",
  "tensorflow_probability.python.layers.MixtureSameFamily.new",
  "tensorflow_probability.python.layers.MixtureSameFamily.params_size",
  "tensorflow_probability.python.layers.MultivariateNormalTriL.new",
  "tensorflow_probability.python.layers.MultivariateNormalTriL.params_size",
  "tensorflow_probability.python.layers.OneHotCategorical.new",
  "tensorflow_probability.python.layers.OneHotCategorical.params_size",
  "tensorflow_probability.python.math.bessel._compute_general_continued_fraction",
  "tensorflow_probability.python.math.bessel.bessel_kve",
  "tensorflow_probability.python.math.linalg.fill_triangular",
  "tensorflow_probability.python.math.linalg.lu_reconstruct",
  "tensorflow_probability.python.math.linalg.lu_reconstruct_assertions",
  "tensorflow_probability.python.math.linalg.lu_solve",
  "tensorflow_probability.python.math.linalg.sparse_or_dense_matvecmul",
  "tensorflow_probability.python.math.ode.bdf_util.MAX_ORDER",
  "tensorflow_probability.python.math.ode.bdf_util.first_step_size",
  "tensorflow_probability.python.math.ode.bdf_util.interpolate_backward_differences",
  "tensorflow_probability.python.math.ode.bdf_util.interpolation_matrix",
  "tensorflow_probability.python.math.ode.bdf_util.newton",
  "tensorflow_probability.python.math.ode.bdf_util.newton_qr",
  "tensorflow_probability.python.math.ode.util.get_state_from_vec",
  "tensorflow_probability.python.math.ode.util.get_state_vec",
  "tensorflow_probability.python.math.ode.util.right_mult_by_jacobian_mat",
  "tensorflow_probability.python.math.ode.util.stop_gradient_of_real_or_complex_entries",
  "tensorflow_probability.python.math.psd_kernels.hypothesis_testlib.base_kernels",
  "tensorflow_probability.python.math.psd_kernels.hypothesis_testlib.kernels",
  "tensorflow_probability.python.math.psd_kernels.hypothesis_testlib.no_pd_errors",
  "tensorflow_probability.python.math.psd_kernels.positive_semidefinite_kernel.PositiveSemidefiniteKernel",
  "tensorflow_probability.python.mcmc.diagnostic._reduce_variance",
  "tensorflow_probability.python.mcmc.hmc.HamiltonianMonteCarlo.bootstrap_results.__doc__",
  "tensorflow_probability.python.mcmc.hmc.HamiltonianMonteCarlo.one_step.__doc__",
  "tensorflow_probability.python.mcmc.hmc.UncalibratedHamiltonianMonteCarloKernelResults._fields",
  "tensorflow_probability.python.mcmc.kernel.inner_kernel",
  "tensorflow_probability.python.mcmc.kernel.parameters",
  "tensorflow_probability.python.mcmc.langevin.MetropolisAdjustedLangevinAlgorithm",
  "tensorflow_probability.python.mcmc.metropolis_hastings.MetropolisHastings",
  "tensorflow_probability.python.mcmc.nuts.NoUTurnSampler",
  "tensorflow_probability.python.mcmc.replica_exchange_mc.default_swap_proposal_fn",
  "tensorflow_probability.python.optimizer.bfgs_utils.converged_all",
  "tensorflow_probability.python.optimizer.bfgs_utils.norm",
  "tensorflow_probability.python.optimizer.bfgs_utils.terminate_if_not_finite",
  "tensorflow_probability.python.optimizer.linesearch.internal.hager_zhang_lib.bracket",
  "tensorflow_probability.python.optimizer.linesearch.internal.hager_zhang_lib.secant2",
  "tensorflow_probability.python.optimizer.linesearch.internal.hager_zhang_lib.update",
  "tensorflow_probability.python.stats.leave_one_out.log_soomean_exp",
  "tensorflow_probability.python.sts.internal.util._maybe_expand_trailing_dim",
  "tensorflow_probability.python.sts.internal.util.canonicalize_observed_time_series_with_mask",
  "tensorflow_probability.python.sts.internal.util.mix_over_posterior_draws",
  "tensorflow_probability.python.sts.internal.util.pad_batch_dimension_for_multiple_chains",
  "tensorflow_probability.random.rademacher",
  "tensorflow_probability.random.rayleigh",
  "tensorflow_probability.random.spherical_uniform",
  "tensorflow_probability.random.split_seed",
  "tensorflow_probability.stats.assign_log_moving_mean_exp",
  "tensorflow_probability.stats.assign_moving_mean_variance",
  "tensorflow_probability.stats.auto_correlation",
  "tensorflow_probability.stats.brier_decomposition",
  "tensorflow_probability.stats.brier_score",
  "tensorflow_probability.stats.cholesky_covariance",
  "tensorflow_probability.stats.correlation",
  "tensorflow_probability.stats.count_integers",
  "tensorflow_probability.stats.covariance",
  "tensorflow_probability.stats.expected_calibration_error",
  "tensorflow_probability.stats.expected_calibration_error_quantiles",
  "tensorflow_probability.stats.find_bins",
  "tensorflow_probability.stats.histogram",
  "tensorflow_probability.stats.log_average_probs",
  "tensorflow_probability.stats.log_loomean_exp",
  "tensorflow_probability.stats.log_loosum_exp",
  "tensorflow_probability.stats.log_soomean_exp",
  "tensorflow_probability.stats.log_soosum_exp",
  "tensorflow_probability.stats.moving_mean_variance_zero_debiased",
  "tensorflow_probability.stats.percentile",
  "tensorflow_probability.stats.quantile_auc",
  "tensorflow_probability.stats.quantiles",
  "tensorflow_probability.stats.stddev",
  "tensorflow_probability.stats.variance",
  "tensorflow_probability.sts.LinearRegression",
  "tensorflow_probability.sts.LocalLevel",
  "tensorflow_probability.sts.LocalLevelStateSpaceModel",
  "tensorflow_probability.sts.LocalLinearTrend",
  "tensorflow_probability.sts.LocalLinearTrendStateSpaceModel",
  "tensorflow_probability.sts.MaskedTimeSeries",
  "tensorflow_probability.sts.Seasonal",
  "tensorflow_probability.sts.Sum",
  "tensorflow_probability.sts.build_factored_surrogate_posterior",
  "tensorflow_probability.sts.decompose_by_component",
  "tensorflow_probability.sts.decompose_forecast_by_component",
  "tensorflow_probability.sts.fit_with_hmc",
  "tensorflow_probability.sts.forecast",
  "tensorflow_probability.sts.impute_missing_values",
  "tensorflow_probability.sts.one_step_predictive",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.INSTANTIABLE_BASE_DISTS.keys",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.INSTANTIABLE_META_DISTS",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.base_distribution_unconstrained_params",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.base_distributions",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.constrain_params",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.distributions",
  "tensorflow_probability.substrates.jax.distributions.hypothesis_testlib.modify_params",
  "tensorflow_probability.substrates.jax.internal.hypothesis_testlib.tfp_hp_settings",
  "tensorflow_probability.substrates.jax.internal.test_util.TestCase",
  "tensorflow_probability.substrates.jax.internal.test_util.test_seed",
  "tensorflow_probability.substrates.numpy.math.value_and_gradient",
  "tensorflow_probability.util.DeferredTensor",
  "tensorflow_probability.util.SeedStream",
  "tensorflow_probability.util.TransformedVariable",
  "tensorflow_probability.vi.amari_alpha",
  "tensorflow_probability.vi.arithmetic_geometric",
  "tensorflow_probability.vi.chi_square",
  "tensorflow_probability.vi.csiszar_vimco",
  "tensorflow_probability.vi.dual_csiszar_function",
  "tensorflow_probability.vi.fit_surrogate_posterior",
  "tensorflow_probability.vi.jeffreys",
  "tensorflow_probability.vi.jensen_shannon",
  "tensorflow_probability.vi.kl_forward",
  "tensorflow_probability.vi.kl_reverse",
  "tensorflow_probability.vi.log1p_abs",
  "tensorflow_probability.vi.modified_gan",
  "tensorflow_probability.vi.monte_carlo_variational_loss",
  "tensorflow_probability.vi.mutual_information",
  "tensorflow_probability.vi.pearson",
  "tensorflow_probability.vi.squared_hellinger",
  "tensorflow_probability.vi.symmetrized_csiszar_function",
  "tensorflow_probability.vi.t_power",
  "tensorflow_probability.vi.total_variation",
  "tensorflow_probability.vi.triangular",
  "test_cdf_func",
  "test_fn",
  "test_fn_or_class",
  "test_kernel",
  "test_method",
  "test_points_fn",
  "test_var_initter",
  "tf_fn",
  "tf_sampler",
  "tfp_f",
  "tfp_transition_kernel",
  "this_shift",
  "tile_for_batch",
  "to_numpy_arrays",
  "tokenize",
  "trace",
  "trace_criterion_fn",
  "trace_fn",
  "trace_one_step",
  "trainable_distribution_fn",
  "transform",
  "transition_fn",
  "transition_jacobian_fn",
  "transpose",
  "traverse_fn",
  "tree._assert_shallow_structure",
  "tree._sequence_like",
  "tree._yield_flat_up_to",
  "tree._yield_value",
  "tree.flatten",
  "tree.flatten_with_path",
  "tree.flatten_with_path_up_to",
  "tree.is_nested",
  "tree.map_structure",
  "tree.map_structure_with_path",
  "tree.map_structure_with_path_up_to",
  "tree.unflatten_as",
  "true_categorical_sample",
  "true_fn",
  "true_mvndiag_sample",
  "true_normal_sample",
  "truthy",
  "try_me",
  "tuning_fn",
  "tuple.__new__",
  "unconstrained_prior_sample_fn",
  "unconstrained_prior_sample_fn.get_concrete_function",
  "unflatten",
  "unnormalized_posterior_log_prob",
  "update_event_ndims",
  "update_f_event_ndims",
  "update_fn",
  "update_i_event_ndims",
  "update_weights_temperature",
  "user_fn",
  "vae_model",
  "vae_model.compile",
  "vae_model.fit",
  "vae_model.trainable_variables",
  "vae_model.trainable_weights",
  "vae_model.variables",
  "validate_equal_last_dim",
  "value_and_gradient",
  "var",
  "variance_entry",
  "variational_loss_fn",
  "vectorized_flat_sample",
  "vectorized_fn",
  "vectorized_matvec",
  "vectorized_sum",
  "vjp_bwd",
  "vjp_fwd",
  "walk_graph",
  "weak_ref",
  "weak_start",
  "weak_start.alive",
  "weakself",
  "wrap",
  "wrap_fn",
  "wrapped_f",
  "wrapped_log_prob",
  "x",
  "x_fn",
  "x_type",
  "xla_scan",
  "y",
  "y2_conditional_dist",
  "y_fn",
  "y_func",
  "your_graph"
 ],
 "deps": [
  [
   "absl-py-0.1.10-py_0",
   "absl-py-0.10.0-py36hc560c46_1",
   "absl-py-0.10.0-py37hc8dfbb8_1",
   "absl-py-0.10.0-pyhd8ed1ab_1",
   "absl-py-0.11.0-pyhd8ed1ab_0",
   "absl-py-0.2.2-py_0",
   "absl-py-0.3.0-py_0",
   "absl-py-0.4.0-py_0",
   "absl-py-0.4.1-py_0",
   "absl-py-0.5.0-py_0",
   "absl-py-0.6.1-py36_0",
   "absl-py-0.7.0-py36_1000",
   "absl-py-0.7.0-py37_1000",
   "absl-py-0.8.0-py27_0",
   "absl-py-0.9.0-py27h8c360ce_1"
  ],
  [
   "affine-1.3.0-py34_0",
   "affine-1.3.0-py35_0",
   "affine-2.0.0.post1-py34_0",
   "affine-2.0.0.post1-py36_0",
   "affine-2.1.0-py36_0",
   "affine-2.1.0-py_1",
   "affine-2.2.0-py_0",
   "affine-2.2.1-py_0",
   "affine-2.2.2-py_0",
   "affine-2.3.0-py_0"
  ],
  [
   "python-build-0.0.4-py_0",
   "python-build-0.1.0-pyhd8ed1ab_0",
   "python-build-0.2.0-pyhd8ed1ab_0",
   "python-build-0.2.1-pyhd8ed1ab_0",
   "python-build-0.3.0-pyhd8ed1ab_0"
  ],
  [
   "decorator-4.3.0-py_0",
   "decorator-4.3.2-py_0",
   "decorator-4.4.0-py_0",
   "decorator-4.4.1-py_0",
   "decorator-4.4.2-py_0"
  ],
  [
   "ht-0.1.52-py_0",
   "ht-0.1.53-py_0",
   "ht-0.1.54-py_0",
   "ht-0.1.55-pyh9f0ad1d_0",
   "ht-0.1.56-pyh9f0ad1d_0",
   "ht-0.1.57-pyh9f0ad1d_0",
   "ht-1.0.0-pyh44b312d_0"
  ],
  [
   "hypothesis-3.37.0-py36_1",
   "hypothesis-3.38.9-py35_1",
   "hypothesis-3.38.9-py36_1",
   "hypothesis-3.40.1-py27_1",
   "hypothesis-3.42.1-py27_1",
   "hypothesis-3.42.1-py36_1",
   "hypothesis-3.44.1-py35_1",
   "hypothesis-3.44.1-py36_1",
   "hypothesis-3.44.23-py35_0",
   "hypothesis-3.44.24-py36_0",
   "hypothesis-3.44.3-py27_1",
   "hypothesis-3.45.1-py27_0",
   "hypothesis-3.45.1-py35_0",
   "hypothesis-3.45.2-py35_0",
   "hypothesis-3.45.3-py36_0",
   "hypothesis-3.46.0-py27_0",
   "hypothesis-3.47.0-py35_0",
   "hypothesis-3.49.1-py27_0",
   "hypothesis-3.50.2-py36_0",
   "hypothesis-3.51.0-py27_0",
   "hypothesis-3.52.0-py27_0",
   "hypothesis-3.52.1-py36_0",
   "hypothesis-3.53.0-py35_0",
   "hypothesis-3.53.0-py36_0",
   "hypothesis-3.55.1-py27_0",
   "hypothesis-3.55.3-py35_0",
   "hypothesis-3.55.6-py27_0",
   "hypothesis-3.55.6-py35_0",
   "hypothesis-3.56.3-py27_0",
   "hypothesis-3.56.5-py36_0",
   "hypothesis-3.56.6-py35_0",
   "hypothesis-3.56.7-py27_0",
   "hypothesis-3.56.9-py27_0",
   "hypothesis-3.57.0-py35h24bf2e0_0",
   "hypothesis-3.59.0-py35h24bf2e0_0",
   "hypothesis-3.59.1-py36h24bf2e0_0",
   "hypothesis-3.60.1-py36h24bf2e0_0",
   "hypothesis-3.66.12-py27h24bf2e0_0",
   "hypothesis-3.66.14-py27h24bf2e0_0",
   "hypothesis-3.66.14-py36h24bf2e0_0",
   "hypothesis-3.66.2-py35h24bf2e0_0",
   "hypothesis-3.66.2-py36h24bf2e0_0",
   "hypothesis-3.66.24-py27h24bf2e0_0",
   "hypothesis-3.66.24-py35h24bf2e0_0",
   "hypothesis-3.66.29-py36h24bf2e0_0",
   "hypothesis-3.66.32-py27h24bf2e0_0",
   "hypothesis-3.66.6-py35h24bf2e0_0",
   "hypothesis-3.66.8-py35h24bf2e0_0",
   "hypothesis-3.66.8-py36h24bf2e0_0",
   "hypothesis-3.67.0-py35h24bf2e0_0",
   "hypothesis-3.67.0-py36h24bf2e0_0",
   "hypothesis-3.67.1-py27h24bf2e0_0",
   "hypothesis-3.67.1-py35h24bf2e0_0",
   "hypothesis-3.68.0-py27h24bf2e0_0",
   "hypothesis-3.69.0-py36h24bf2e0_0",
   "hypothesis-3.69.11-py27h24bf2e0_0",
   "hypothesis-3.69.11-py36h24bf2e0_0",
   "hypothesis-3.70.4-py27h24bf2e0_0",
   "hypothesis-3.70.4-py36h24bf2e0_0",
   "hypothesis-3.71.0-py27h24bf2e0_0",
   "hypothesis-3.71.1-py36h24bf2e0_0",
   "hypothesis-3.71.10-py37_0",
   "hypothesis-3.71.7-py35h24bf2e0_0",
   "hypothesis-3.71.8-py27h24bf2e0_0",
   "hypothesis-3.71.8-py35h24bf2e0_0",
   "hypothesis-3.71.8-py36h24bf2e0_0",
   "hypothesis-3.71.9-py35h24bf2e0_0",
   "hypothesis-3.73.1-py36_0",
   "hypothesis-3.73.3-py27_0",
   "hypothesis-3.73.3-py35_0",
   "hypothesis-3.73.3-py36_0",
   "hypothesis-3.74.0-py27_0",
   "hypothesis-3.74.2-py27_1000",
   "hypothesis-3.74.2-py37_1000",
   "hypothesis-3.74.3-py27_0",
   "hypothesis-3.75.3-py36_0",
   "hypothesis-3.75.4-py37_0",
   "hypothesis-3.76.0-py36_0",
   "hypothesis-3.76.0-py37_0",
   "hypothesis-3.77.0-py27_0",
   "hypothesis-3.78.0-py36_0",
   "hypothesis-3.79.0-py27_0",
   "hypothesis-3.79.2-py27_0",
   "hypothesis-3.79.2-py37_0",
   "hypothesis-3.82.1-py37_0",
   "hypothesis-3.82.4-py37_0",
   "hypothesis-3.82.6-py36_0",
   "hypothesis-3.83.2-py37_0",
   "hypothesis-3.84.0-py27_0",
   "hypothesis-3.84.0-py36_0",
   "hypothesis-3.84.1-py27_0",
   "hypothesis-3.84.1-py37_0",
   "hypothesis-3.84.2-py37_0",
   "hypothesis-3.84.4-py37_0",
   "hypothesis-3.84.5-py36_0",
   "hypothesis-3.84.6-py36_0",
   "hypothesis-3.84.6-py37_0",
   "hypothesis-3.85.1-py37_0",
   "hypothesis-3.86.3-py36_0",
   "hypothesis-3.86.5-py37_0",
   "hypothesis-3.86.7-py36_0",
   "hypothesis-3.86.9-py36_0",
   "hypothesis-3.87.0-py27_0",
   "hypothesis-3.88.1-py27_0",
   "hypothesis-3.88.3-py27_0",
   "hypothesis-4.0.1-py36_0",
   "hypothesis-4.10.0-py36_0",
   "hypothesis-4.11.2-py36_0",
   "hypothesis-4.11.5-py27_0",
   "hypothesis-4.14.3-py27_0",
   "hypothesis-4.16.0-py37_0",
   "hypothesis-4.17.1-py27_0",
   "hypothesis-4.17.2-py36_0",
   "hypothesis-4.18.3-py37_0",
   "hypothesis-4.22.2-py27_0",
   "hypothesis-4.23.4-py37_0",
   "hypothesis-4.23.5-py27_0",
   "hypothesis-4.23.6-py27_0",
   "hypothesis-4.23.7-py36_0",
   "hypothesis-4.23.8-py27_0",
   "hypothesis-4.24.0-py27_0",
   "hypothesis-4.24.0-py36_0",
   "hypothesis-4.24.1-py37_0",
   "hypothesis-4.24.2-py27_0",
   "hypothesis-4.24.5-py37_0",
   "hypothesis-4.26.1-py27_0",
   "hypothesis-4.26.1-py36_0",
   "hypothesis-4.26.1-py37_0",
   "hypothesis-4.26.3-py27_0",
   "hypothesis-4.27.0-py36_0",
   "hypothesis-4.31.0-py27_0",
   "hypothesis-4.32.0-py37_0",
   "hypothesis-4.32.2-py37_0",
   "hypothesis-4.34.0-py36_0",
   "hypothesis-4.36.2-py36_0",
   "hypothesis-4.38.0-py27_0",
   "hypothesis-4.38.1-py36_0",
   "hypothesis-4.38.3-py27_0",
   "hypothesis-4.39.0-py37_0",
   "hypothesis-4.39.3-py27_0",
   "hypothesis-4.4.3-py37_0",
   "hypothesis-4.4.5-py37_0",
   "hypothesis-4.4.6-py36_0",
   "hypothesis-4.4.6-py37_0",
   "hypothesis-4.40.2-py36_0",
   "hypothesis-4.40.2-py37_0",
   "hypothesis-4.41.0-py27_0",
   "hypothesis-4.41.0-py36_0",
   "hypothesis-4.41.0-py37_0",
   "hypothesis-4.41.2-py27_0",
   "hypothesis-4.41.3-py37_0",
   "hypothesis-4.42.10-py38_0",
   "hypothesis-4.42.5-py27_0",
   "hypothesis-4.42.5-py36_0",
   "hypothesis-4.42.6-py38_0",
   "hypothesis-4.42.8-py36_0",
   "hypothesis-4.43.0-py27_0",
   "hypothesis-4.43.0-py37_0",
   "hypothesis-4.43.2-py37_0",
   "hypothesis-4.43.3-py37_0",
   "hypothesis-4.43.4-py36_0",
   "hypothesis-4.43.5-py37_0",
   "hypothesis-4.43.6-py38_0",
   "hypothesis-4.44.0-py38_0",
   "hypothesis-4.44.1-py27_0",
   "hypothesis-4.44.2-py27_0",
   "hypothesis-4.44.2-py37_0",
   "hypothesis-4.44.3-py27_0",
   "hypothesis-4.44.4-py36_0",
   "hypothesis-4.44.4-py38_0",
   "hypothesis-4.45.0-py37_0",
   "hypothesis-4.45.0-py38_0",
   "hypothesis-4.46.0-py27_0",
   "hypothesis-4.46.1-py27_0",
   "hypothesis-4.47.1-py27_0",
   "hypothesis-4.47.2-py37_0",
   "hypothesis-4.47.3-py37_0",
   "hypothesis-4.47.3-py38_0",
   "hypothesis-4.47.4-py27_0",
   "hypothesis-4.47.4-py36_0",
   "hypothesis-4.47.5-py27_0",
   "hypothesis-4.47.5-py38_0",
   "hypothesis-4.49.0-py37_0",
   "hypothesis-4.5.12-py37_0",
   "hypothesis-4.5.4-py36_0",
   "hypothesis-4.5.4-py37_0",
   "hypothesis-4.50.1-py38_0",
   "hypothesis-4.50.2-py38_0",
   "hypothesis-4.50.3-py27_0",
   "hypothesis-4.50.4-py36_0",
   "hypothesis-4.50.4-py37_0",
   "hypothesis-4.51.0-py38_0",
   "hypothesis-4.52.0-py36_0",
   "hypothesis-4.53.0-py36_0",
   "hypothesis-4.53.1-py27_0",
   "hypothesis-4.53.1-py37_0",
   "hypothesis-4.53.3-py36_0",
   "hypothesis-4.53.3-py37_0",
   "hypothesis-4.53.3-py38_0",
   "hypothesis-4.54.0-py36_0",
   "hypothesis-4.54.0-py38_0",
   "hypothesis-4.54.1-py36_0",
   "hypothesis-4.54.2-py38_0",
   "hypothesis-4.55.0-py36_0",
   "hypothesis-4.55.3-py27_0",
   "hypothesis-4.55.3-py36_0",
   "hypothesis-4.55.4-py37_0",
   "hypothesis-4.56.3-py36_0",
   "hypothesis-4.56.3-py37_0",
   "hypothesis-4.57.0-py37_0",
   "hypothesis-4.6.0-py36_0",
   "hypothesis-4.7.0-py37_0",
   "hypothesis-4.7.10-py37_0",
   "hypothesis-4.7.16-py36_0",
   "hypothesis-4.7.16-py37_0",
   "hypothesis-4.7.19-py36_0",
   "hypothesis-4.7.2-py27_0",
   "hypothesis-4.7.6-py27_0",
   "hypothesis-4.7.6-py36_0",
   "hypothesis-4.7.6-py37_0",
   "hypothesis-4.7.9-py27_0",
   "hypothesis-4.7.9-py37_0",
   "hypothesis-5.1.0-py_0",
   "hypothesis-5.1.1-py_0",
   "hypothesis-5.1.2-py_0",
   "hypothesis-5.1.4-py_0",
   "hypothesis-5.1.5-py_0",
   "hypothesis-5.10.0-py_0",
   "hypothesis-5.10.2-py_0",
   "hypothesis-5.10.3-py_0",
   "hypothesis-5.10.4-py_0",
   "hypothesis-5.10.5-py_0",
   "hypothesis-5.11.0-py_0",
   "hypothesis-5.12.0-py_0",
   "hypothesis-5.13.0-py_0",
   "hypothesis-5.13.1-py_0",
   "hypothesis-5.14.0-py_0",
   "hypothesis-5.15.0-py_0",
   "hypothesis-5.15.1-py_0",
   "hypothesis-5.16.0-py_0",
   "hypothesis-5.16.1-py_0",
   "hypothesis-5.16.2-py_0",
   "hypothesis-5.16.3-py_0",
   "hypothesis-5.18.0-py_0",
   "hypothesis-5.18.1-py_0",
   "hypothesis-5.18.2-py_0",
   "hypothesis-5.18.3-py_0",
   "hypothesis-5.19.0-py_0",
   "hypothesis-5.19.1-py_0",
   "hypothesis-5.19.2-py_0",
   "hypothesis-5.19.3-py_0",
   "hypothesis-5.2.0-py_0",
   "hypothesis-5.20.0-py_0",
   "hypothesis-5.20.1-py_0",
   "hypothesis-5.20.2-py_0",
   "hypothesis-5.20.3-py_0",
   "hypothesis-5.21.0-py_0",
   "hypothesis-5.22.0-py_0",
   "hypothesis-5.23.0-py_0",
   "hypothesis-5.23.1-py_0",
   "hypothesis-5.23.10-py_0",
   "hypothesis-5.23.11-py_0",
   "hypothesis-5.23.12-py_0",
   "hypothesis-5.23.2-py_0",
   "hypothesis-5.23.3-py_0",
   "hypothesis-5.23.4-py_0",
   "hypothesis-5.23.5-py_0",
   "hypothesis-5.23.6-py_0",
   "hypothesis-5.23.7-py_0",
   "hypothesis-5.23.8-py_0",
   "hypothesis-5.23.9-py_0",
   "hypothesis-5.24.0-py_0",
   "hypothesis-5.24.1-py_0",
   "hypothesis-5.24.2-py_0",
   "hypothesis-5.24.3-py_0",
   "hypothesis-5.24.4-py_0",
   "hypothesis-5.25.0-py_0",
   "hypothesis-5.26.0-py_0",
   "hypothesis-5.26.1-py_0",
   "hypothesis-5.27.0-py_0",
   "hypothesis-5.28.0-py_0",
   "hypothesis-5.29.3-py_0",
   "hypothesis-5.3.0-py_0",
   "hypothesis-5.3.1-py_0",
   "hypothesis-5.37.1-py_0",
   "hypothesis-5.37.3-py_0",
   "hypothesis-5.37.4-py_0",
   "hypothesis-5.37.5-py_0",
   "hypothesis-5.38.0-py_0",
   "hypothesis-5.38.1-py_0",
   "hypothesis-5.39.0-pyhd8ed1ab_0",
   "hypothesis-5.4.0-py_0",
   "hypothesis-5.4.1-py_0",
   "hypothesis-5.4.2-py_0",
   "hypothesis-5.40.0-pyhd8ed1ab_0",
   "hypothesis-5.41.0-pyhd8ed1ab_0",
   "hypothesis-5.41.1-pyhd8ed1ab_0",
   "hypothesis-5.41.2-pyhd8ed1ab_0",
   "hypothesis-5.41.3-pyhd8ed1ab_0",
   "hypothesis-5.41.4-pyhd8ed1ab_0",
   "hypothesis-5.41.5-pyhd8ed1ab_0",
   "hypothesis-5.42.0-pyhd8ed1ab_0",
   "hypothesis-5.42.1-pyhd8ed1ab_0",
   "hypothesis-5.42.2-pyhd8ed1ab_0",
   "hypothesis-5.42.3-pyhd8ed1ab_0",
   "hypothesis-5.43.0-pyhd8ed1ab_0",
   "hypothesis-5.43.1-pyhd8ed1ab_0",
   "hypothesis-5.43.2-pyhd8ed1ab_0",
   "hypothesis-5.43.3-pyhd8ed1ab_0",
   "hypothesis-5.43.4-pyhd8ed1ab_0",
   "hypothesis-5.43.5-pyhd8ed1ab_0",
   "hypothesis-5.43.6-pyhd8ed1ab_0",
   "hypothesis-5.43.7-pyhd8ed1ab_0",
   "hypothesis-5.43.8-pyhd8ed1ab_0",
   "hypothesis-5.43.9-pyhd8ed1ab_0",
   "hypothesis-5.44.0-pyhd8ed1ab_0",
   "hypothesis-5.46.0-pyhd8ed1ab_0",
   "hypothesis-5.47.0-pyhd8ed1ab_0",
   "hypothesis-5.48.0-pyhd8ed1ab_0",
   "hypothesis-5.49.0-pyhd8ed1ab_0",
   "hypothesis-5.5.0-py_0",
   "hypothesis-5.5.1-py_0",
   "hypothesis-5.5.2-py_0",
   "hypothesis-5.5.3-py_0",
   "hypothesis-5.5.4-py_0",
   "hypothesis-5.5.5-py_0",
   "hypothesis-5.6.0-py_0",
   "hypothesis-5.6.1-py_0",
   "hypothesis-5.7.0-py_0",
   "hypothesis-5.7.1-py_0",
   "hypothesis-5.7.2-py_0",
   "hypothesis-5.8.0-py_0",
   "hypothesis-5.8.1-py_0",
   "hypothesis-5.8.2-py_0",
   "hypothesis-5.8.3-py_0",
   "hypothesis-5.8.4-py_0",
   "hypothesis-5.8.5-py_0",
   "hypothesis-5.8.6-py_0",
   "hypothesis-5.9.0-py_0",
   "hypothesis-5.9.1-py_0",
   "hypothesis-6.0.0-pyhd8ed1ab_0",
   "hypothesis-6.0.1-pyhd8ed1ab_0",
   "hypothesis-6.0.2-pyhd8ed1ab_0",
   "hypothesis-6.0.3-pyhd8ed1ab_0",
   "hypothesis-6.0.4-pyhd8ed1ab_0",
   "hypothesis-6.1.0-pyhd8ed1ab_0",
   "hypothesis-6.1.1-pyhd8ed1ab_0",
   "hypothesis-6.2.0-pyhd8ed1ab_0",
   "hypothesis-6.3.0-pyhd8ed1ab_0"
  ],
  [
   "jax-0.2.7-pyhd8ed1ab_0",
   "jax-0.2.8-pyhd8ed1ab_0",
   "jax-0.2.9-pyhd8ed1ab_0"
  ],
  [
   "numpy-1.10.4-py27_blas_openblas_200",
   "numpy-1.10.4-py27_blas_openblas_204",
   "numpy-1.10.4-py35_blas_openblas_203",
   "numpy-1.11.1-py27_blas_openblas_201",
   "numpy-1.11.2-py27_blas_openblas_201",
   "numpy-1.11.2-py35_blas_openblas_202",
   "numpy-1.11.3-py27_blas_openblas_201",
   "numpy-1.11.3-py27_blas_openblashd3ea46f_205",
   "numpy-1.11.3-py34_blas_openblas_200",
   "numpy-1.11.3-py35_blas_openblas_202",
   "numpy-1.11.3-py36h8b7e671_1206",
   "numpy-1.11.3-py36he5ce36f_1207",
   "numpy-1.12.1-py35_blas_openblas_201",
   "numpy-1.13.0-py34_blas_openblas_200",
   "numpy-1.13.2-py36_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblash1522bff_1201",
   "numpy-1.13.3-py35_blas_openblas_200",
   "numpy-1.13.3-py35_blas_openblas_201",
   "numpy-1.13.3-py36_blas_openblash1522bff_1201",
   "numpy-1.13.3-py36_blas_openblashb06ca3d_201",
   "numpy-1.14.2-py27_blas_openblas_200",
   "numpy-1.14.5-py27_blas_openblashd3ea46f_200",
   "numpy-1.14.5-py35_blas_openblashd3ea46f_202",
   "numpy-1.14.5-py36_blas_openblashd3ea46f_202",
   "numpy-1.14.6-py27_blas_openblashb06ca3d_200",
   "numpy-1.14.6-py27he5ce36f_1201",
   "numpy-1.14.6-py37h95a1406_1201",
   "numpy-1.15.2-py27_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py27_blas_openblashd3ea46f_1",
   "numpy-1.15.2-py35_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_1",
   "numpy-1.15.4-py27_blas_openblash1522bff_1000",
   "numpy-1.15.4-py27_blas_openblashb06ca3d_0",
   "numpy-1.15.4-py27h8b7e671_1001",
   "numpy-1.15.4-py27h8b7e671_1002",
   "numpy-1.15.4-py37_blas_openblashb06ca3d_0",
   "numpy-1.16.1-py37_blas_openblash1522bff_0",
   "numpy-1.16.2-py36h8b7e671_1",
   "numpy-1.16.2-py37_blas_openblash1522bff_0",
   "numpy-1.16.4-py27h95a1406_0",
   "numpy-1.16.5-py27h95a1406_0",
   "numpy-1.16.6-py38h18fd61f_0",
   "numpy-1.17.1-py36h95a1406_0",
   "numpy-1.17.3-py37h95a1406_0",
   "numpy-1.17.5-py37h95a1406_0",
   "numpy-1.17.5-py37haa41c4c_1",
   "numpy-1.17.5-py38h18fd61f_1",
   "numpy-1.18.1-py37h8960a57_1",
   "numpy-1.18.4-py36h7314795_0",
   "numpy-1.18.4-py36he0f5f23_0",
   "numpy-1.19.0-py36he0f5f23_0",
   "numpy-1.19.1-py36h3849536_2",
   "numpy-1.19.1-py37h7ea13bd_2",
   "numpy-1.19.1-py37h8960a57_0",
   "numpy-1.19.2-py36h68c22af_1",
   "numpy-1.19.2-py37h7008fea_1",
   "numpy-1.19.2-py38hf89b668_1",
   "numpy-1.19.4-py37haa41c4c_2",
   "numpy-1.19.4-py38h18fd61f_2",
   "numpy-1.19.5-py36h2aa4a07_1",
   "numpy-1.19.5-py39hdbf815f_1",
   "numpy-1.8.2-py34_blas_openblas_200",
   "numpy-1.8.2-py34_blas_openblas_201",
   "numpy-1.8.2-py35_blas_openblas_200",
   "numpy-1.8.2-py36_blas_openblas_201",
   "numpy-1.9.3-py27_blas_openblas_203",
   "numpy-1.9.3-py27_blas_openblash1522bff_1207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py27_blas_openblashd3ea46f_205",
   "numpy-1.9.3-py27_blas_openblashd3ea46f_206",
   "numpy-1.9.3-py34_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblash1522bff_1007",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py37_blas_openblash1522bff_1007",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_7"
  ],
  [
   "reducer-0.4.1-py_1",
   "reducer-0.4.1-py_2",
   "reducer-0.4.3-py_0",
   "reducer-0.4.4-py_0"
  ],
  [
   "win-unicode-console-0.5-py27_0",
   "win_unicode_console-0.5-py37hc8dfbb8_1001"
  ],
  [
   "scipy-0.17.1-np110py27_blas_openblas_202",
   "scipy-0.17.1-np110py27_blas_openblas_203",
   "scipy-0.17.1-np110py34_blas_openblas_201",
   "scipy-0.17.1-np110py34_blas_openblas_202",
   "scipy-0.17.1-np110py34_blas_openblas_204",
   "scipy-0.17.1-np110py34_blas_openblas_205",
   "scipy-0.17.1-np110py35_blas_openblas_200",
   "scipy-0.17.1-np111py34_blas_openblas_200",
   "scipy-0.17.1-np111py35_blas_openblas_201",
   "scipy-0.17.1-np111py35_blas_openblas_202",
   "scipy-0.17.1-np111py35_blas_openblas_203",
   "scipy-0.18.0-np110py27_blas_openblas_200",
   "scipy-0.18.0-np110py34_blas_openblas_202",
   "scipy-0.18.0-np110py35_blas_openblas_201",
   "scipy-0.18.1-np110py27_blas_openblas_200",
   "scipy-0.18.1-np110py27_blas_openblas_201",
   "scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy-0.18.1-np112py35_blas_openblas_201",
   "scipy-0.19.0-np111py35_blas_openblas_200",
   "scipy-0.19.0-np112py36_blas_openblas_200",
   "scipy-0.19.0-np113py27_blas_openblas_202",
   "scipy-0.19.0-np113py35_blas_openblas_202",
   "scipy-0.19.1-np111py27_blas_openblas_200",
   "scipy-0.19.1-np113py27_blas_openblas_200",
   "scipy-0.19.1-py35_blas_openblas_201",
   "scipy-0.19.1-py36_blas_openblas_202",
   "scipy-1.0.1-py27_blas_openblas_200",
   "scipy-1.0.1-py35_blas_openblas_200",
   "scipy-1.0.1-py36_blas_openblas_200",
   "scipy-1.1.0-py27_blas_openblas_200",
   "scipy-1.1.0-py35_blas_openblash7943236_201",
   "scipy-1.1.0-py36_blas_openblas_200",
   "scipy-1.2.0-py37_blas_openblash1522bff_1201",
   "scipy-1.2.1-py27h09a28d5_1",
   "scipy-1.2.1-py37_blas_openblash1522bff_0",
   "scipy-1.2.1-py37h09a28d5_1",
   "scipy-1.4.0-py36h921218d_0",
   "scipy-1.4.0-py37h921218d_0",
   "scipy-1.4.1-py36h832618f_2",
   "scipy-1.4.1-py38h921218d_0"
  ],
  [
   "slicer-0.0.3-py_0",
   "slicer-0.0.3-pyhd8ed1ab_0",
   "slicer-0.0.7-pyhd8ed1ab_0"
  ],
  [],
  []
 ]
}