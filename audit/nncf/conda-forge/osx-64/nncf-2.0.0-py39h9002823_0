{
 "bad": [
  "Grouper",
  "Mgr",
  "NewNodeArgs",
  "QConfigComparator",
  "_apply_binary_mask_to_module_weight_and_bias",
  "_compare_qps",
  "_compare_shared_input_groups",
  "_compare_unified_scale_groups",
  "_default_quantize",
  "_fake_quant_with_min_max_vars",
  "_find_assignment",
  "_get_conv_layer_attributes",
  "_half_range_quantize",
  "_is_depthwise_conv",
  "_pull_tensor",
  "acc_budget_vs_comp_rate_curve",
  "add_error_msg",
  "check_hidden_size",
  "collections.defaultdict",
  "collections.deque",
  "compatible_fn",
  "export_fn",
  "extensions.BinarizedFunctionsCUDA.ActivationBinarize_backward",
  "extensions.BinarizedFunctionsCUDA.ActivationBinarize_forward",
  "extensions.BinarizedFunctionsCUDA.WeightBinarize_forward",
  "extensions.QuantizedFunctionsCPU.Quantize_backward",
  "extensions.QuantizedFunctionsCPU.Quantize_forward",
  "extensions.QuantizedFunctionsCUDA.Quantize_backward",
  "extensions.QuantizedFunctionsCUDA.Quantize_forward",
  "find_weights_operation",
  "fn1",
  "fn2",
  "forward_fn",
  "forward_func",
  "func",
  "functions.STRound.apply",
  "functools.partial",
  "functools.reduce",
  "fuse_functions",
  "gc",
  "get_a",
  "get_b",
  "get_current_context",
  "get_hook",
  "get_list",
  "get_node_name",
  "get_nodes_fn",
  "hook",
  "impl_cls",
  "init_impl",
  "inspect",
  "inspect.Parameter",
  "inspect.Parameter.VAR_KEYWORD",
  "inspect.Parameter.VAR_POSITIONAL",
  "inspect.Signature",
  "inspect.getfullargspec",
  "inspect.getmembers",
  "inspect.isclass",
  "inspect.isfunction",
  "io",
  "io.BytesIO",
  "is_downstream_quantizer_redundant",
  "is_object_removed",
  "is_weights",
  "iterator",
  "itertools",
  "itertools.chain.from_iterable",
  "loss",
  "make_check_target_points_fn",
  "matplotlib.pyplot",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.savefig",
  "module_call",
  "mse",
  "networkx",
  "networkx.DiGraph",
  "networkx.MultiDiGraph",
  "networkx.algorithms.isomorphism",
  "networkx.algorithms.isomorphism.DiGraphMatcher",
  "networkx.algorithms.isomorphism.categorical_edge_match",
  "networkx.algorithms.isomorphism.categorical_node_match",
  "networkx.algorithms.isomorphism.is_isomorphic",
  "networkx.all_shortest_paths",
  "networkx.drawing.nx_agraph.to_agraph",
  "networkx.drawing.nx_pydot.write_dot",
  "networkx.edge_boundary",
  "networkx.is_isomorphic",
  "networkx.lexicographical_topological_sort",
  "networkx.relabel_nodes",
  "networkx.set_edge_attributes",
  "networkx.set_node_attributes",
  "networkx.topological_sort",
  "networkx.union",
  "networkx.weakly_connected_components",
  "nncf.__init__.torch",
  "nncf.api.compression.CompressionStage.FULLY_COMPRESSED",
  "nncf.api.compression.CompressionStage.PARTIALLY_COMPRESSED",
  "nncf.api.compression.CompressionStage.UNCOMPRESSED",
  "nncf.common.accuracy_aware_training.training_loop.ADAPTIVE_COMPRESSION_CONTROLLERS.register",
  "nncf.common.compression.BaseCompressionAlgorithmController.BUILDER_STATE",
  "nncf.common.compression.BaseCompressionAlgorithmController.CONTROLLER_STATE",
  "nncf.common.graph.Dtype",
  "nncf.common.graph.INPUT_NOOP_METATYPES",
  "nncf.common.graph.INPUT_NOOP_METATYPES.registry_dict.values",
  "nncf.common.graph.LayerName",
  "nncf.common.graph.NNCFGraph",
  "nncf.common.graph.NNCFGraph.ACTIVATION_SHAPE_EDGE_ATTR",
  "nncf.common.graph.NNCFGraph.ID_NODE_ATTR",
  "nncf.common.graph.NNCFGraph.INPUT_PORT_ID_EDGE_ATTR",
  "nncf.common.graph.NNCFGraph.LAYER_ATTRIBUTES",
  "nncf.common.graph.NNCFGraph.NODE_NAME_ATTR",
  "nncf.common.graph.NNCFGraph.NODE_TYPE_ATTR",
  "nncf.common.graph.NNCFNode",
  "nncf.common.graph.NNCFNodeName",
  "nncf.common.graph.OUTPUT_NOOP_METATYPES",
  "nncf.common.graph.OUTPUT_NOOP_METATYPES.registry_dict.values",
  "nncf.common.graph.OperatorMetatype",
  "nncf.common.graph.definitions.NNCFGraphNodeType.INPUT_NODE",
  "nncf.common.graph.definitions.NNCFGraphNodeType.OUTPUT_NODE",
  "nncf.common.graph.layer_attributes.Dtype.FLOAT",
  "nncf.common.graph.layer_attributes.Dtype.INTEGER",
  "nncf.common.graph.operator_metatypes.INPUT_NOOP_METATYPES.register",
  "nncf.common.graph.operator_metatypes.NOOP_METATYPES.register",
  "nncf.common.graph.operator_metatypes.NOOP_METATYPES.registry_dict.values",
  "nncf.common.graph.operator_metatypes.OUTPUT_NOOP_METATYPES.register",
  "nncf.common.graph.patterns.GraphPattern.PATTERN_INPUT_NODE_TYPE",
  "nncf.common.graph.transformations.commands.TargetType.LAYER",
  "nncf.common.graph.transformations.commands.TargetType.OPERATION_WITH_WEIGHTS",
  "nncf.common.graph.transformations.commands.TargetType.OPERATOR_POST_HOOK",
  "nncf.common.graph.transformations.commands.TargetType.OPERATOR_PRE_HOOK",
  "nncf.common.graph.transformations.commands.TargetType.POST_LAYER_OPERATION",
  "nncf.common.graph.transformations.commands.TargetType.PRE_LAYER_OPERATION",
  "nncf.common.graph.transformations.commands.TransformationPriority.PRUNING_PRIORITY",
  "nncf.common.graph.transformations.commands.TransformationPriority.QUANTIZATION_PRIORITY",
  "nncf.common.graph.transformations.commands.TransformationPriority.SPARSIFICATION_PRIORITY",
  "nncf.common.graph.transformations.commands.TransformationType.INSERT",
  "nncf.common.graph.transformations.commands.TransformationType.MULTI_INSERT",
  "nncf.common.graph.transformations.commands.TransformationType.REMOVE",
  "nncf.common.hardware.config.HWConfigType.VPU.value",
  "nncf.common.hardware.opset.HWConfigOpName.ADD",
  "nncf.common.hardware.opset.HWConfigOpName.AVGPOOL",
  "nncf.common.hardware.opset.HWConfigOpName.CONCAT",
  "nncf.common.hardware.opset.HWConfigOpName.CONVOLUTION",
  "nncf.common.hardware.opset.HWConfigOpName.CROP",
  "nncf.common.hardware.opset.HWConfigOpName.DEPTHWISECONVOLUTION",
  "nncf.common.hardware.opset.HWConfigOpName.DIVIDE",
  "nncf.common.hardware.opset.HWConfigOpName.EMBEDDING",
  "nncf.common.hardware.opset.HWConfigOpName.EMBEDDINGBAG",
  "nncf.common.hardware.opset.HWConfigOpName.EQUAL",
  "nncf.common.hardware.opset.HWConfigOpName.FLATTEN",
  "nncf.common.hardware.opset.HWConfigOpName.FLOORMOD",
  "nncf.common.hardware.opset.HWConfigOpName.GREATER",
  "nncf.common.hardware.opset.HWConfigOpName.GREATEREQUAL",
  "nncf.common.hardware.opset.HWConfigOpName.INTERPOLATE",
  "nncf.common.hardware.opset.HWConfigOpName.LESS",
  "nncf.common.hardware.opset.HWConfigOpName.LESSEQUAL",
  "nncf.common.hardware.opset.HWConfigOpName.LOGICALAND",
  "nncf.common.hardware.opset.HWConfigOpName.LOGICALNOT",
  "nncf.common.hardware.opset.HWConfigOpName.LOGICALOR",
  "nncf.common.hardware.opset.HWConfigOpName.LOGICALXOR",
  "nncf.common.hardware.opset.HWConfigOpName.MATMUL",
  "nncf.common.hardware.opset.HWConfigOpName.MAXIMUM",
  "nncf.common.hardware.opset.HWConfigOpName.MAXPOOL",
  "nncf.common.hardware.opset.HWConfigOpName.MINIMUM",
  "nncf.common.hardware.opset.HWConfigOpName.MULTIPLY",
  "nncf.common.hardware.opset.HWConfigOpName.MVN",
  "nncf.common.hardware.opset.HWConfigOpName.NOTEQUAL",
  "nncf.common.hardware.opset.HWConfigOpName.PAD",
  "nncf.common.hardware.opset.HWConfigOpName.POWER",
  "nncf.common.hardware.opset.HWConfigOpName.REDUCEMAX",
  "nncf.common.hardware.opset.HWConfigOpName.REDUCEMEAN",
  "nncf.common.hardware.opset.HWConfigOpName.RESHAPE",
  "nncf.common.hardware.opset.HWConfigOpName.SPLIT",
  "nncf.common.hardware.opset.HWConfigOpName.SQUEEZE",
  "nncf.common.hardware.opset.HWConfigOpName.STRIDEDSLICE",
  "nncf.common.hardware.opset.HWConfigOpName.SUBTRACT",
  "nncf.common.hardware.opset.HWConfigOpName.TILE",
  "nncf.common.hardware.opset.HWConfigOpName.TRANSPOSE",
  "nncf.common.hardware.opset.HWConfigOpName.UNSQUEEZE",
  "nncf.common.insertion_point_graph.InsertionPointGraph.ASSOCIATED_IP_NODE_KEYS_NODE_ATTR",
  "nncf.common.insertion_point_graph.InsertionPointGraph.INSERTION_POINT_NODE_ATTR",
  "nncf.common.insertion_point_graph.InsertionPointGraph.NODE_TYPE_NODE_ATTR",
  "nncf.common.insertion_point_graph.InsertionPointGraphNodeType.OPERATOR",
  "nncf.common.insertion_point_graph.InsertionPointGraphNodeType.POST_HOOK",
  "nncf.common.insertion_point_graph.InsertionPointGraphNodeType.PRE_HOOK",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.AFFECTING_PROPAGATING_QUANTIZERS_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.AFFECTING_PROPAGATING_QUANTIZERS_ATTR.append",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.ALLOWED_INPUT_QUANTIZATION_TYPES_NODE_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.IS_INTEGER_PATH_EDGE_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.IS_IN_IGNORED_SCOPES",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.NODE_TYPE_NODE_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.OPERATOR_METATYPE_NODE_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.QUANTIZATION_TRAIT_NODE_ATTR",
  "nncf.common.quantization.quantizer_propagation.graph.QuantizerPropagationStateGraph.QUANT_INSERTION_POINT_DATA_NODE_ATTR",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizationTrait.CONCAT",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizationTrait.INPUTS_QUANTIZABLE",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizationTrait.NON_QUANTIZABLE",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizationTrait.OUTPUT_QUANTIZATION_AS_WEIGHTS",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizationTrait.QUANTIZATION_AGNOSTIC",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizerPropagationStateGraphNodeType.AUXILIARY_BARRIER",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizerPropagationStateGraphNodeType.OPERATOR",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizerPropagationStateGraphNodeType.POST_HOOK",
  "nncf.common.quantization.quantizer_propagation.structs.QuantizerPropagationStateGraphNodeType.PRE_HOOK",
  "nncf.common.quantization.structs.QuantizationMode.ASYMMETRIC",
  "nncf.common.quantization.structs.QuantizationMode.SYMMETRIC",
  "nncf.common.quantization.structs.QuantizerGroup.ACTIVATIONS",
  "nncf.common.quantization.structs.QuantizerGroup.WEIGHTS",
  "nncf.common.quantization.structs.UnifiedScaleType.UNIFY_ALWAYS",
  "nncf.common.quantization.structs.UnifiedScaleType.UNIFY_ONLY_PER_TENSOR",
  "nncf.common.stateful_classes_registry.TF_STATEFUL_CLASSES.get_registered_class",
  "nncf.common.stateful_classes_registry.TF_STATEFUL_CLASSES.register",
  "nncf.common.utils.backend.BackendType.TENSORFLOW",
  "nncf.common.utils.backend.BackendType.TORCH",
  "nncf.common.utils.logger.logger.addFilter",
  "nncf.common.utils.logger.logger.debug",
  "nncf.common.utils.logger.logger.error",
  "nncf.common.utils.logger.logger.getEffectiveLevel",
  "nncf.common.utils.logger.logger.info",
  "nncf.common.utils.logger.logger.removeFilter",
  "nncf.common.utils.logger.logger.warning",
  "nncf.common.utils.registry.Registry.REGISTERED_NAME_ATTR",
  "nncf.config.schema.__file__",
  "nncf.tensorflow.algorithm_selector.TF_COMPRESSION_ALGORITHMS.register",
  "nncf.tensorflow.graph.metatypes.keras_layers.KERAS_LAYER_METATYPES.get_operator_metatype_by_op_name",
  "nncf.tensorflow.graph.metatypes.keras_layers.KERAS_LAYER_METATYPES.registry_dict.values",
  "nncf.tensorflow.graph.metatypes.tf_ops.TF_OPERATION_METATYPES.get_operator_metatype_by_op_name",
  "nncf.tensorflow.graph.metatypes.tf_ops.TF_OPERATION_METATYPES.registry_dict.values",
  "nncf.tensorflow.hardware.fused_patterns.TF_HW_FUSED_PATTERNS.get_full_pattern_graph",
  "nncf.tensorflow.layers.custom_objects.NNCF_CUSTOM_OBJECTS.register",
  "nncf.tensorflow.layers.custom_objects.NNCF_QUANTIZATION_OPERATONS.get",
  "nncf.tensorflow.layers.custom_objects.NNCF_QUANTIZATION_OPERATONS.register",
  "nncf.tensorflow.layers.operation.InputType.INPUTS",
  "nncf.tensorflow.layers.operation.InputType.WEIGHTS",
  "nncf.tensorflow.pruning.export_helpers.TFElementwise.get_all_op_aliases",
  "nncf.torch.algo_selector.COMPRESSION_ALGORITHMS.get",
  "nncf.torch.algo_selector.COMPRESSION_ALGORITHMS.register",
  "nncf.torch.automl.agent.ddpg.ddpg.DDPG",
  "nncf.torch.automl.environment.quantization_env.QuantizationEnv",
  "nncf.torch.automl.environment.quantization_env.QuantizationEnvParams",
  "nncf.torch.binarization.binarize_functions.ActivationBinarizationScaleThresholdFn.apply",
  "nncf.torch.binarization.binarize_functions.DOREFABinarizeFn.apply",
  "nncf.torch.binarization.binarize_functions.XNORBinarizeFn.apply",
  "nncf.torch.binarization.layers.BINARIZATION_MODULES.get",
  "nncf.torch.checkpoint_loading.OPTIONAL_PARAMETERS_REGISTRY.register",
  "nncf.torch.extensions.EXTENSIONS.register",
  "nncf.torch.extensions.ExtensionsType.CPU",
  "nncf.torch.extensions.ExtensionsType.CUDA",
  "nncf.torch.extensions.__init__.EXTENSIONS",
  "nncf.torch.extensions.__init__.ExtensionsType",
  "nncf.torch.extensions.__init__._force_build_extensions",
  "nncf.torch.functions.STThreshold.apply",
  "nncf.torch.graph.operator_metatypes.PT_OPERATOR_METATYPES.get_operator_metatype_by_op_name",
  "nncf.torch.graph.transformations.commands.TransformationPriority.DEFAULT_PRIORITY",
  "nncf.torch.graph.transformations.commands.TransformationPriority.FP32_TENSOR_STATISTICS_OBSERVATION",
  "nncf.torch.graph.transformations.commands.TransformationPriority.PRUNING_PRIORITY",
  "nncf.torch.graph.transformations.commands.TransformationPriority.QUANTIZATION_PRIORITY",
  "nncf.torch.graph.transformations.commands.TransformationPriority.SPARSIFICATION_PRIORITY",
  "nncf.torch.hardware.fused_patterns.PT_HW_FUSED_PATTERNS.get_full_pattern_graph",
  "nncf.torch.layer_utils.COMPRESSION_MODULES.register",
  "nncf.torch.layer_utils.COMPRESSION_MODULES.registry_dict.values",
  "nncf.torch.layers.ITERATION_MODULES.registry_dict",
  "nncf.torch.layers.ITERATION_MODULES.registry_dict.keys",
  "nncf.torch.layers.NNCFConv2d.__name__",
  "nncf.torch.layers.NNCF_MODULES_DICT.items",
  "nncf.torch.layers.NNCF_PRUNING_MODULES_DICT.keys",
  "nncf.torch.layers.NNCF_WRAPPED_USER_MODULES_DICT.values",
  "nncf.torch.layers.UNWRAPPED_USER_MODULES.registry_dict.items",
  "nncf.torch.module_operations.UpdateWeight.__name__",
  "nncf.torch.nncf_network.ExtraCompressionModuleType.EXTERNAL_QUANTIZER",
  "nncf.torch.nncf_network.PTNNCFGraph.KEY_NODE_ATTR",
  "nncf.torch.pruning.export_helpers.PTElementwise.get_all_op_aliases",
  "nncf.torch.quantization.algo.QuantizerSetupGeneratorBase.DEFAULT_QUANTIZER_CONFIG",
  "nncf.torch.quantization.layers.QUANTIZATION_MODULES.get",
  "nncf.torch.quantization.layers.QUANTIZATION_MODULES.registry_dict.values",
  "nncf.torch.quantization.layers.QuantizationMode.SYMMETRIC",
  "nncf.torch.quantization.quantize_functions.ExportQuantizeToFakeQuantize.apply",
  "nncf.torch.quantization.quantize_functions.ExportQuantizeToONNXQuantDequant.apply",
  "nncf.torch.quantization.quantize_functions.TuneRange.apply",
  "numbers",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.exp",
  "numpy.float32",
  "numpy.floor",
  "numpy.full",
  "numpy.inf",
  "numpy.int64",
  "numpy.linspace",
  "numpy.mean",
  "numpy.median",
  "numpy.moveaxis",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.percentile",
  "numpy.power",
  "numpy.prod",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.reshape",
  "numpy.savetxt",
  "numpy.sign",
  "numpy.transpose",
  "object.__setattr__",
  "op",
  "op.name",
  "operator",
  "operator.itemgetter",
  "quantizer_cls",
  "rec_factory",
  "recursive_helper",
  "remove_nvcc_dep_build",
  "remove_registry_prefix",
  "result_dict_to_val_metric_fn",
  "sample",
  "set.intersection",
  "sort_arch_flags",
  "statistics_callback_cls",
  "string.Template",
  "super_register",
  "sys",
  "tensorflow.Module",
  "tensorflow.Tensor",
  "tensorflow.VariableAggregation.MEAN",
  "tensorflow.abs",
  "tensorflow.cast",
  "tensorflow.clip_by_value",
  "tensorflow.concat",
  "tensorflow.cond",
  "tensorflow.custom_gradient",
  "tensorflow.debugging.assert_equal",
  "tensorflow.debugging.assert_near",
  "tensorflow.device",
  "tensorflow.function",
  "tensorflow.is_tensor",
  "tensorflow.keras.Model.from_config",
  "tensorflow.keras.activations.__name__",
  "tensorflow.keras.initializers.Constant",
  "tensorflow.keras.layers.Layer",
  "tensorflow.keras.layers.__name__",
  "tensorflow.keras.layers.deserialize",
  "tensorflow.less",
  "tensorflow.math.count_nonzero",
  "tensorflow.math.l2_normalize",
  "tensorflow.math.log",
  "tensorflow.math.pow",
  "tensorflow.math.reduce_max",
  "tensorflow.math.reduce_mean",
  "tensorflow.math.reduce_min",
  "tensorflow.math.reduce_sum",
  "tensorflow.math.sigmoid",
  "tensorflow.matmul",
  "tensorflow.maximum",
  "tensorflow.name_scope",
  "tensorflow.norm",
  "tensorflow.ones",
  "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_v2",
  "tensorflow.python.keras.engine.base_layer.TensorFlowOpLayer",
  "tensorflow.python.keras.engine.data_adapter",
  "tensorflow.python.keras.engine.data_adapter.DataHandler",
  "tensorflow.python.keras.engine.data_adapter.unpack_x_y_sample_weight",
  "tensorflow.python.keras.engine.keras_tensor",
  "tensorflow.python.keras.engine.keras_tensor.disable_keras_tensors",
  "tensorflow.python.keras.engine.training_utils.RespectCompiledTrainableState",
  "tensorflow.python.keras.utils.control_flow_util.smart_cond",
  "tensorflow.python.profiler.trace",
  "tensorflow.python.profiler.trace.Trace",
  "tensorflow.quantization.fake_quant_with_min_max_vars",
  "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel",
  "tensorflow.random.stateless_uniform",
  "tensorflow.reduce_all",
  "tensorflow.reduce_any",
  "tensorflow.reduce_max",
  "tensorflow.reduce_min",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.round",
  "tensorflow.saved_model.save",
  "tensorflow.size",
  "tensorflow.sort",
  "tensorflow.sqrt",
  "tensorflow.square",
  "tensorflow.stack",
  "tensorflow.tensor_scatter_nd_update",
  "tensorflow.train.experimental.PythonState",
  "tensorflow.transpose",
  "tensorflow.unstack",
  "tensorflow.where",
  "tensorflow.zeros",
  "time",
  "tm_comparator",
  "torch.Tensor.as_subclass",
  "torch.Tensor.to",
  "torch.__version__.split",
  "torch.abs",
  "torch.all",
  "torch.allclose",
  "torch.any",
  "torch.arange",
  "torch.bool",
  "torch.cat",
  "torch.device",
  "torch.distributed.Backend.NCCL",
  "torch.dtype",
  "torch.empty_like",
  "torch.eq",
  "torch.float",
  "torch.float32",
  "torch.from_numpy",
  "torch.gt",
  "torch.int8",
  "torch.log",
  "torch.long",
  "torch.lt",
  "torch.max",
  "torch.mean",
  "torch.min",
  "torch.nn.Conv1d.__name__",
  "torch.nn.Conv2d.__name__",
  "torch.nn.Conv3d.__name__",
  "torch.nn.ConvTranspose2d.__name__",
  "torch.nn.ConvTranspose3d.__name__",
  "torch.nn.Embedding.__name__",
  "torch.nn.EmbeddingBag.__name__",
  "torch.nn.Linear.__name__",
  "torch.ones",
  "torch.ones_like",
  "torch.rand",
  "torch.randint_like",
  "torch.randn",
  "torch.reshape",
  "torch.round",
  "torch.sigmoid",
  "torch.sqrt",
  "torch.squeeze",
  "torch.stack",
  "torch.sum",
  "torch.uint8",
  "torch.unsqueeze",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "warnings.warn",
  "weakref.proxy",
  "wrap_inputs_fn",
  "wrap_outputs_fn"
 ],
 "deps": {
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-6.2.1-py36hd70f55b_1",
   "pillow/conda-forge/linux-64/pillow-7.0.0-py36h8328e55_1",
   "pillow/conda-forge/linux-64/pillow-7.2.0-py37h718be6c_1"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "addict": [
   "addict/conda-forge/linux-64/addict-2.2.1-py37_0"
  ],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "jsonschema": [
   "jsonschema/conda-forge/noarch/jsonschema-3.2.0-pyhd8ed1ab_3"
  ],
  "jstyleson": [
   "jstyleson/conda-forge/noarch/jstyleson-0.0.2-pyhd8ed1ab_0"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-1.2.2-py37h40f5888_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-40.6.1-py36_0",
   "setuptools/conda-forge/linux-64/setuptools-46.3.0-py38h32f6830_0",
   "setuptools/conda-forge/linux-64/setuptools-49.1.2-py38h32f6830_0"
  ],
  "queue": [
   "pies2overrides/conda-forge/osx-64/pies2overrides-2.6.7-py27_1000",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "random": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.17.1-np110py27_blas_openblas_202",
   "scipy/conda-forge/linux-64/scipy-1.7.0-py37h29e03ee_0",
   "scipy/conda-forge/linux-64/scipy-1.7.0-py37ha768fb6_1"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "tensorflow": [],
  "texttable": [
   "texttable/conda-forge/noarch/texttable-0.9.1-py_0",
   "texttable/conda-forge/noarch/texttable-1.1.0-py_0",
   "texttable/conda-forge/noarch/texttable-1.2.1-py_0",
   "texttable/conda-forge/noarch/texttable-1.3.0-py_0",
   "texttable/conda-forge/noarch/texttable-1.3.1-py_0",
   "texttable/conda-forge/noarch/texttable-1.4.0-py_0",
   "texttable/conda-forge/noarch/texttable-1.5.0-py_0",
   "texttable/conda-forge/noarch/texttable-1.6.0-py_0",
   "texttable/conda-forge/noarch/texttable-1.6.2-py_0",
   "texttable/conda-forge/noarch/texttable-1.6.3-pyh9f0ad1d_0",
   "texttable/conda-forge/noarch/texttable-1.6.4-pyhd8ed1ab_0"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "torch": [],
  "torchvision": [
   "torchvision/conda-forge/linux-64/torchvision-0.9.1-py38cuda110hd0a72be_1_cuda"
  ],
  "types": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}