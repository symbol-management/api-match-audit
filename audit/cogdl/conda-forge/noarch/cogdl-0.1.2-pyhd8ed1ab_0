{
 "bad": [
  "BaseModel.__init__",
  "BioDataset",
  "ChemExtractSubstructureContextPair",
  "Complete",
  "DataLoaderFinetune",
  "DataLoaderMasking",
  "DataLoaderSubstructContext",
  "ExtractSubstructureContextPair",
  "GraphEncoder",
  "MaskAtom",
  "MaskEdge",
  "MoleculeDataset",
  "MyTransform",
  "TestBioDataset",
  "TestChemDataset",
  "act_attention",
  "act_map",
  "act_normalization",
  "add_budget",
  "att",
  "b_xent",
  "base_model.BaseModel",
  "base_task.BaseTask",
  "base_trainer.BaseTrainer",
  "cogdl.data.Batch.from_data_list",
  "cogdl.data.edge_attr",
  "cogdl.data.edge_index",
  "cogdl.data.test_mask",
  "cogdl.data.train_mask",
  "cogdl.data.val_mask",
  "cogdl.datasets.DATASET_REGISTRY.keys",
  "cogdl.models.MODEL_REGISTRY.add_args",
  "cogdl.models.MODEL_REGISTRY.keys",
  "cogdl.tasks.TASK_REGISTRY.add_args",
  "cogdl.tasks.TASK_REGISTRY.keys",
  "collections.Iterable",
  "compute_accuracy",
  "conv",
  "criterion",
  "cycle_index",
  "dgi.AvgReadout",
  "dgi.GCN",
  "dgi.LogReg",
  "dgi.LogRegTrainer",
  "dgl.DGLGraph",
  "dgl.backend.asnumpy",
  "dgl.batch",
  "dgl.contrib.sampling.random_walk",
  "dgl.contrib.sampling.random_walk_with_restart",
  "dgl.data.tu.TUDataset",
  "dgl.nn.pytorch.NNConv",
  "dgl.nn.pytorch.Set2Set",
  "dgl.nn.pytorch.conv.GINConv",
  "dgl.nn.pytorch.glob.AvgPooling",
  "dgl.nn.pytorch.glob.MaxPooling",
  "dgl.nn.pytorch.glob.SumPooling",
  "diff_layer",
  "errno.EEXIST",
  "fc",
  "filter.shape",
  "gc",
  "generate_mask",
  "get_loss",
  "graph_classification.node_degree_as_feature",
  "hashlib.md5",
  "id.argmax",
  "input.device",
  "input.shape",
  "input.size",
  "itertools.product",
  "itertools.repeat",
  "itertools.starmap",
  "k_linear",
  "knowledge_base.KGEModel",
  "layer",
  "layer.get_loss",
  "log",
  "loss_func",
  "makedirs.makedirs",
  "mixhop",
  "model",
  "networkx.DiGraph",
  "networkx.Graph",
  "networkx.adjacency_matrix",
  "networkx.betweenness_centrality",
  "networkx.degree",
  "networkx.from_edgelist",
  "networkx.is_directed",
  "networkx.laplacian_matrix",
  "networkx.normalized_laplacian_matrix",
  "networkx.relabel_nodes",
  "networkx.single_source_shortest_path_length",
  "nsloss",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argwhere",
  "numpy.array",
  "numpy.asarray",
  "numpy.asfarray",
  "numpy.average",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.count_nonzero",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.divide",
  "numpy.dot",
  "numpy.exp",
  "numpy.eye",
  "numpy.float32",
  "numpy.floor",
  "numpy.hstack",
  "numpy.in1d",
  "numpy.inf",
  "numpy.int32",
  "numpy.int64",
  "numpy.intersect1d",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isneginf",
  "numpy.linalg.norm",
  "numpy.log",
  "numpy.log10",
  "numpy.log2",
  "numpy.mat",
  "numpy.matmul",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.nan_to_num",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.ones",
  "numpy.power",
  "numpy.random.beta",
  "numpy.random.choice",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.reciprocal",
  "numpy.save",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.std",
  "numpy.sum",
  "numpy.tile",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.listdir",
  "os.mkdir",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.remove",
  "pandas.DataFrame",
  "parse_text",
  "preprocess_string",
  "pyg_gin.GINLayer",
  "pyg_gin.GINMLP",
  "q_linear",
  "scipy.linalg.block_diag",
  "scipy.linalg.fractional_matrix_power",
  "scipy.linalg.inv",
  "scipy.linalg.svd",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.dia_matrix",
  "scipy.sparse.diags",
  "scipy.sparse.eye",
  "scipy.sparse.identity",
  "scipy.sparse.lil_matrix",
  "scipy.sparse.linalg.eigen.arpack.ArpackError",
  "scipy.sparse.linalg.eigsh",
  "scipy.sparse.linalg.inv",
  "scipy.sparse.linalg.svds",
  "scipy.sparse.save_npz",
  "scipy.special.iv",
  "se",
  "set.union",
  "shutil.unpack_archive",
  "sigmoid",
  "signal_pro",
  "six.moves.urllib.request.urlopen",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.metrics.accuracy_score",
  "sklearn.metrics.auc",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.precision_recall_curve",
  "sklearn.metrics.roc_auc_score",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.normalize",
  "sklearn.svm.SVC",
  "sklearn.utils.extmath.randomized_svd",
  "sklearn.utils.shuffle",
  "spmm",
  "spspmm",
  "tarfile.open",
  "time.time",
  "to_set",
  "torch.BoolTensor",
  "torch.FloatTensor",
  "torch.LongTensor",
  "torch.Size",
  "torch.abs",
  "torch.arange",
  "torch.argmax",
  "torch.argsort",
  "torch.bernoulli",
  "torch.bmm",
  "torch.bool",
  "torch.cat",
  "torch.chunk",
  "torch.clamp",
  "torch.cos",
  "torch.cuda.empty_cache",
  "torch.cuda.manual_seed",
  "torch.device",
  "torch.einsum",
  "torch.empty",
  "torch.exp",
  "torch.eye",
  "torch.flatten",
  "torch.float",
  "torch.float32",
  "torch.from_numpy",
  "torch.full",
  "torch.index_select",
  "torch.int64",
  "torch.irfft",
  "torch.isinf",
  "torch.isnan",
  "torch.log",
  "torch.log_softmax",
  "torch.long",
  "torch.matmul",
  "torch.max",
  "torch.mean",
  "torch.mm",
  "torch.mode",
  "torch.mul",
  "torch.multinomial",
  "torch.neg",
  "torch.nn.BCELoss",
  "torch.nn.BCEWithLogitsLoss",
  "torch.nn.BatchNorm1d",
  "torch.nn.BatchNorm2d",
  "torch.nn.Bilinear",
  "torch.nn.Conv1d",
  "torch.nn.Conv2d",
  "torch.nn.CosineSimilarity",
  "torch.nn.CrossEntropyLoss",
  "torch.nn.Dropout",
  "torch.nn.ELU",
  "torch.nn.Embedding",
  "torch.nn.Flatten",
  "torch.nn.GRU",
  "torch.nn.LSTM",
  "torch.nn.LayerNorm",
  "torch.nn.LeakyReLU",
  "torch.nn.Linear",
  "torch.nn.MSELoss",
  "torch.nn.Module",
  "torch.nn.ModuleList",
  "torch.nn.NLLLoss",
  "torch.nn.PReLU",
  "torch.nn.ReLU",
  "torch.nn.Sequential",
  "torch.nn.Sigmoid",
  "torch.nn.Softmax",
  "torch.nn.Tanh",
  "torch.norm",
  "torch.ones",
  "torch.pow",
  "torch.rand",
  "torch.randint",
  "torch.randn",
  "torch.randperm",
  "torch.range",
  "torch.rfft",
  "torch.sigmoid",
  "torch.sin",
  "torch.sort",
  "torch.sparse.FloatTensor",
  "torch.sparse_coo_tensor",
  "torch.spmm",
  "torch.sqrt",
  "torch.squeeze",
  "torch.stack",
  "torch.sum",
  "torch.t",
  "torch.tanh",
  "torch.trace",
  "torch.unique",
  "torch.unsqueeze",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "torch_cluster.random_walk",
  "torch_geometric.data.Data",
  "torch_geometric.data.DataLoader",
  "torch_geometric.data.Dataset",
  "torch_geometric.data.InMemoryDataset",
  "torch_geometric.datasets.Planetoid",
  "torch_geometric.datasets.QM9",
  "torch_geometric.datasets.Reddit",
  "torch_geometric.datasets.TUDataset",
  "torch_geometric.nn.DeepGraphInfomax",
  "torch_geometric.nn.DynamicEdgeConv",
  "torch_geometric.nn.GATConv",
  "torch_geometric.nn.GCNConv",
  "torch_geometric.nn.GraphUNet",
  "torch_geometric.nn.NNConv",
  "torch_geometric.nn.SAGEConv",
  "torch_geometric.nn.Set2Set",
  "torch_geometric.nn.conv.ChebConv",
  "torch_geometric.nn.conv.GATConv",
  "torch_geometric.nn.conv.GCNConv",
  "torch_geometric.nn.conv.MessagePassing",
  "torch_geometric.nn.global_max_pool",
  "torch_geometric.nn.inits.glorot",
  "torch_geometric.transforms.Compose",
  "torch_geometric.transforms.Distance",
  "torch_geometric.transforms.TargetIndegree",
  "torch_geometric.utils.degree",
  "torch_geometric.utils.dropout_adj",
  "torch_geometric.utils.f1_score",
  "torch_geometric.utils.remove_self_loops",
  "torch_geometric.utils.softmax",
  "torch_sparse.coalesce",
  "torch_sparse.spmm",
  "torch_sparse.spspmm",
  "typing.Any",
  "typing.Optional",
  "typing.TYPE_CHECKING",
  "typing.Type",
  "typing.Union",
  "v_linear",
  "warnings.filterwarnings",
  "xent",
  "zipfile.ZipFile"
 ],
 "deps": {
  "BaseModel": [],
  "BioDataset": [],
  "ChemExtractSubstructureContextPair": [],
  "Complete": [],
  "DataLoaderFinetune": [],
  "DataLoaderMasking": [],
  "DataLoaderSubstructContext": [],
  "ExtractSubstructureContextPair": [],
  "GraphEncoder": [],
  "MaskAtom": [],
  "MaskEdge": [],
  "MoleculeDataset": [],
  "MyTransform": [],
  "TestBioDataset": [],
  "TestChemDataset": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "act_attention": [],
  "act_map": [],
  "act_normalization": [],
  "add_budget": [],
  "argparse": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "att": [],
  "b_xent": [],
  "base_model": [],
  "base_task": [],
  "base_trainer": [],
  "bz2": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "cogdl": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "compute_accuracy": [],
  "conv": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.8.5-h425cb1d_2_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "criterion": [],
  "cycle_index": [],
  "dgi": [],
  "dgl": [],
  "diff_layer": [],
  "errno": [],
  "fc": [],
  "filter": [],
  "functools": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "gc": [],
  "generate_mask": [],
  "gensim": [
   "gensim/conda-forge/linux-64/gensim-3.5.0-py27h04863e7_1000"
  ],
  "get_loss": [],
  "graph_classification": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "hashlib": [],
  "id": [],
  "importlib": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "input": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-1.0.1-pyhd8ed1ab_0"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "k_linear": [],
  "knowledge_base": [],
  "layer": [],
  "linear": [
   "larch/conda-forge/linux-64/larch-5.4.11-py36h92226af_0",
   "larch/conda-forge/linux-64/larch-5.4.7-py36h92226af_1"
  ],
  "log": [],
  "logging": [
   "python/conda-forge/linux-64/python-2.7.15-h721da81_1008",
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "loss_func": [],
  "makedirs": [],
  "math": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "mixhop": [],
  "model": [],
  "multiprocessing": [],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "nsloss": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblas_203"
  ],
  "ogb": [
   "ogb/conda-forge/noarch/ogb-1.2.2-pyh9f0ad1d_0"
  ],
  "optuna": [
   "optuna/conda-forge/noarch/optuna-2.4.0-pyhd8ed1ab_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "pandas": [],
  "parse_text": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "preprocess_string": [],
  "pyg_gin": [],
  "q_linear": [],
  "random": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.8.5-h6f2ec95_1_cpython"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.0-np110py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200"
  ],
  "se": [],
  "set": [],
  "shutil": [],
  "sigmoid": [],
  "signal_pro": [],
  "six": [
   "lldb/conda-forge/linux-64/lldb-6.0.0-py35_0",
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "sklearn": [],
  "spmm": [],
  "spspmm": [],
  "tabulate": [
   "tabulate/conda-forge/noarch/tabulate-0.8.2-py_0",
   "tabulate/conda-forge/noarch/tabulate-0.8.4-py_0"
  ],
  "tarfile": [],
  "texttable": [
   "texttable/conda-forge/noarch/texttable-1.6.0-py_0"
  ],
  "time": [],
  "to_set": [],
  "torch": [
   "pytorch-cpu/conda-forge/linux-64/pytorch-cpu-1.6.0-cpu_py36h3ab7d31_1"
  ],
  "torch_cluster": [],
  "torch_geometric": [],
  "torch_scatter": [
   "pytorch_scatter/conda-forge/linux-64/pytorch_scatter-2.0.4-py36hdd65d5f_0"
  ],
  "torch_sparse": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.18.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.19.2-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.36.1-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.38.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.41.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.44.0-py_0",
   "tqdm/conda-forge/noarch/tqdm-4.46.0-pyh9f0ad1d_0"
  ],
  "typing": [],
  "v_linear": [],
  "warnings": [],
  "xent": [],
  "zipfile": []
 }
}