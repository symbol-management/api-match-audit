{
 "bad": [
  "AttributeError",
  "ElementData",
  "Exception",
  "IOError",
  "ImportError",
  "IndexError",
  "KeyError",
  "LookupError",
  "NamespaceResourcesMap",
  "NamespaceView",
  "NotImplemented",
  "NotImplementedError",
  "OSError",
  "RuntimeError",
  "StopIteration",
  "StringIO",
  "SyntaxError",
  "SystemError",
  "TypeError",
  "URIDict",
  "UnicodeDecodeError",
  "UnicodeEncodeError",
  "UnicodeSubset",
  "ValueError",
  "XMLSchemaAttributeError",
  "XMLSchemaChildrenValidationError",
  "XMLSchemaDecodeError",
  "XMLSchemaEncodeError",
  "XMLSchemaKeyError",
  "XMLSchemaNotBuiltError",
  "XMLSchemaOSError",
  "XMLSchemaParseError",
  "XMLSchemaRegexError",
  "XMLSchemaTypeError",
  "XMLSchemaURLError",
  "XMLSchemaValidationError",
  "XMLSchemaValueError",
  "XsdAnyAttribute",
  "XsdAnyElement",
  "XsdGlobals",
  "XsdKey",
  "XsdKeyref",
  "XsdUnique",
  "__name__",
  "_etree_element",
  "all",
  "any",
  "bool",
  "builder",
  "bytes",
  "callable",
  "chr",
  "classmethod",
  "cls",
  "cls.meta_schema.iter_errors",
  "collections.Counter",
  "collections.Iterable",
  "collections.Mapping",
  "collections.MutableMapping",
  "collections.MutableSequence",
  "collections.MutableSet",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.namedtuple",
  "converter",
  "decimal.Decimal",
  "dict",
  "dict_class",
  "element_class",
  "elementpath.ElementPathSyntaxError",
  "elementpath.XPath1Parser",
  "elementpath.XPath1Parser.symbol_table.items",
  "enumerate",
  "etree_child_index",
  "etree_element",
  "etree_fromstring",
  "etree_get_namespaces",
  "etree_getpath",
  "etree_iselement",
  "etree_iterparse",
  "etree_register_namespace",
  "etree_tostring",
  "expected",
  "factory_or_class",
  "fetch_resource",
  "fetch_schema_locations",
  "filter_function",
  "float",
  "functools.wraps",
  "get_namespace",
  "get_python_regex",
  "get_qname",
  "get_xpath_default_namespace_attribute",
  "get_xsd_attribute",
  "get_xsd_bool_attribute",
  "get_xsd_component",
  "get_xsd_derivation_attribute",
  "get_xsd_int_attribute",
  "getattr",
  "globals",
  "has_xsd_components",
  "hasattr",
  "id",
  "int",
  "isinstance",
  "issubclass",
  "iter",
  "iter_schema_location_hints",
  "iter_xsd_components",
  "iterchildren_xsd_import",
  "iterchildren_xsd_include",
  "iterchildren_xsd_redefine",
  "len",
  "list",
  "load_xml_resource",
  "local_name",
  "lxml.etree",
  "lxml.etree.XMLSchema",
  "lxml.etree.XMLSchemaParseError",
  "lxml.etree.parse",
  "map",
  "map_qname",
  "max",
  "meta_schema_class",
  "min",
  "next",
  "not_whitespace",
  "object",
  "open",
  "ord",
  "pathname2url",
  "print",
  "property",
  "qname_to_prefixed",
  "range",
  "reference_to_qname",
  "repr",
  "reversed",
  "safe_etree_fromstring",
  "schema_class",
  "set",
  "sorted",
  "staticmethod",
  "str",
  "sum",
  "super",
  "sys.maxunicode",
  "test_function_builder",
  "tuple",
  "type",
  "unicode",
  "unicode_chr",
  "unicode_type",
  "unicodedata.category",
  "unmap_qname",
  "urljoin",
  "urlopen",
  "urlparse",
  "urlsplit",
  "urlunsplit",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ParseError",
  "xml.etree.ElementTree.XML",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.iselement",
  "xml.etree.ElementTree.iterparse",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.register_namespace",
  "xml.etree.ElementTree.tostring",
  "xmlschema.XMLSchema",
  "xmlschema.XMLSchemaDecodeError",
  "xmlschema.XMLSchemaEncodeError",
  "xmlschema.XMLSchemaParseError",
  "xmlschema.XMLSchemaURLError",
  "xmlschema.XMLSchemaValidationError",
  "xmlschema.codepoints.UNICODE_CATEGORIES.items",
  "xmlschema.codepoints.UNICODE_CATEGORIES.values",
  "xmlschema.tests.SchemaObserver.components",
  "xsd_qname",
  "zip"
 ],
 "deps": [
  [
   "python-constraint-1.3.1-py_1",
   "python-constraint-1.4.0-py_0"
  ],
  [
   "elementpath-1.0.10-py_0",
   "elementpath-1.0.5-py_0",
   "elementpath-1.0.6-py_0",
   "elementpath-1.0.7-py_0",
   "elementpath-1.0.8-py_0"
  ],
  []
 ]
}