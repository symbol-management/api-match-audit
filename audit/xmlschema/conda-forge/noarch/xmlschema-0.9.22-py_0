{
 "bad": [
  "_etree_element",
  "abc.ABCMeta",
  "argparse.ArgumentParser",
  "argparse.ArgumentTypeError",
  "attributes.XsdAttributeGroup",
  "builder",
  "codecs.open",
  "codepoints.UNICODE_BLOCKS",
  "codepoints.UNICODE_CATEGORIES.code_points",
  "codepoints.UNICODE_CATEGORIES.copy",
  "codepoints.UnicodeSubset",
  "collections.Counter",
  "collections.Iterable",
  "collections.Mapping",
  "collections.MutableMapping",
  "collections.MutableSequence",
  "collections.MutableSet",
  "collections.OrderedDict",
  "collections.Sequence",
  "collections.defaultdict",
  "collections.namedtuple",
  "compat.PY3",
  "compat.StringIO",
  "compat.URLError",
  "compat.long_type",
  "compat.pathname2url",
  "compat.unicode_chr",
  "compat.unicode_type",
  "compat.urljoin",
  "compat.urlopen",
  "compat.urlparse",
  "compat.urlsplit",
  "compat.urlunsplit",
  "compat.uses_relative",
  "complex_types.XsdComplexType",
  "constraints.XsdKey",
  "constraints.XsdKeyref",
  "constraints.XsdUnique",
  "converters.ElementData",
  "converters.XMLSchemaConverter",
  "converters.XSD_VALIDATION_MODES",
  "datetime.datetime.strptime",
  "decimal.Decimal",
  "decimal.DecimalException",
  "dict_class",
  "element_class",
  "element_encode_hook",
  "etree.etree_child_index",
  "etree.etree_element",
  "etree.etree_fromstring",
  "etree.etree_get_namespaces",
  "etree.etree_getpath",
  "etree.etree_iselement",
  "etree.etree_iterparse",
  "etree.etree_parse_error",
  "etree.etree_register_namespace",
  "etree.etree_tostring",
  "exceptions.XMLSchemaAttributeError",
  "exceptions.XMLSchemaChildrenValidationError",
  "exceptions.XMLSchemaDecodeError",
  "exceptions.XMLSchemaEncodeError",
  "exceptions.XMLSchemaException",
  "exceptions.XMLSchemaKeyError",
  "exceptions.XMLSchemaNotBuiltError",
  "exceptions.XMLSchemaOSError",
  "exceptions.XMLSchemaParseError",
  "exceptions.XMLSchemaRegexError",
  "exceptions.XMLSchemaSyntaxError",
  "exceptions.XMLSchemaTypeError",
  "exceptions.XMLSchemaURLError",
  "exceptions.XMLSchemaValidationError",
  "exceptions.XMLSchemaValueError",
  "exceptions.XMLSchemaXPathError",
  "facets.BOOLEAN_FACETS",
  "facets.DATETIME_FACETS",
  "facets.DECIMAL_FACETS",
  "facets.FLOAT_FACETS",
  "facets.LIST_FACETS",
  "facets.STRING_FACETS",
  "facets.UNION_FACETS",
  "facets.XSD_FACETS",
  "facets.XSD_FACETS.union",
  "facets.XsdEnumerationFacet",
  "facets.XsdFacet",
  "facets.XsdPatternsFacet",
  "facets.XsdSingleFacet",
  "factory_or_class",
  "fileinput.filename",
  "fileinput.input",
  "filter_function",
  "functools.wraps",
  "glob.iglob",
  "globals_.XsdGlobals",
  "globals_.iterchildren_xsd_import",
  "globals_.iterchildren_xsd_include",
  "globals_.iterchildren_xsd_redefine",
  "group_class",
  "groups.XsdGroup",
  "json.dump",
  "json.load",
  "lxml.etree",
  "lxml.etree.XMLSchema",
  "lxml.etree.XMLSchemaParseError",
  "lxml.etree.parse",
  "map_qname",
  "meta_schema_class",
  "namespaces.HFP_NAMESPACE_PATH",
  "namespaces.NamespaceMapper",
  "namespaces.NamespaceResourcesMap",
  "namespaces.NamespaceView",
  "namespaces.URIDict",
  "namespaces.VC_NAMESPACE_PATH",
  "namespaces.XLINK_NAMESPACE_PATH",
  "namespaces.XML_NAMESPACE_PATH",
  "namespaces.XSD_NAMESPACE_PATH",
  "namespaces.XSI_NAMESPACE_PATH",
  "namespaces.XSLT_NAMESPACE_PATH",
  "namespaces.get_namespace",
  "not_whitespace",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isfile",
  "os.path.join",
  "os.path.relpath",
  "os.path.splitext",
  "parseutils.check_type",
  "parseutils.check_value",
  "parseutils.get_xpath_default_namespace_attribute",
  "parseutils.get_xsd_attribute",
  "parseutils.get_xsd_bool_attribute",
  "parseutils.get_xsd_component",
  "parseutils.get_xsd_derivation_attribute",
  "parseutils.get_xsd_int_attribute",
  "parseutils.has_xsd_components",
  "parseutils.iter_xsd_components",
  "pdb.set_trace",
  "qnames.XML_LANG",
  "qnames.XSD_ALL_TAG",
  "qnames.XSD_ALTERNATIVE_TAG",
  "qnames.XSD_ANNOTATION_TAG",
  "qnames.XSD_ANY_ATOMIC_TYPE",
  "qnames.XSD_ANY_ATTRIBUTE_TAG",
  "qnames.XSD_ANY_SIMPLE_TYPE",
  "qnames.XSD_ANY_TAG",
  "qnames.XSD_ANY_TYPE",
  "qnames.XSD_APPINFO_TAG",
  "qnames.XSD_ASSERTION_TAG",
  "qnames.XSD_ATTRIBUTE_GROUP_TAG",
  "qnames.XSD_ATTRIBUTE_TAG",
  "qnames.XSD_CHOICE_TAG",
  "qnames.XSD_COMPLEX_CONTENT_TAG",
  "qnames.XSD_COMPLEX_TYPE_TAG",
  "qnames.XSD_DOCUMENTATION_TAG",
  "qnames.XSD_ELEMENT_TAG",
  "qnames.XSD_ENUMERATION_TAG",
  "qnames.XSD_EXPLICIT_TIMEZONE_TAG",
  "qnames.XSD_EXTENSION_TAG",
  "qnames.XSD_FIELD_TAG",
  "qnames.XSD_FRACTION_DIGITS_TAG",
  "qnames.XSD_GROUP_TAG",
  "qnames.XSD_IMPORT_TAG",
  "qnames.XSD_INCLUDE_TAG",
  "qnames.XSD_KEYREF_TAG",
  "qnames.XSD_KEY_TAG",
  "qnames.XSD_LENGTH_TAG",
  "qnames.XSD_LIST_TAG",
  "qnames.XSD_MAX_EXCLUSIVE_TAG",
  "qnames.XSD_MAX_INCLUSIVE_TAG",
  "qnames.XSD_MAX_LENGTH_TAG",
  "qnames.XSD_MIN_EXCLUSIVE_TAG",
  "qnames.XSD_MIN_INCLUSIVE_TAG",
  "qnames.XSD_MIN_LENGTH_TAG",
  "qnames.XSD_NOTATION_TAG",
  "qnames.XSD_NOTATION_TYPE",
  "qnames.XSD_PATTERN_TAG",
  "qnames.XSD_REDEFINE_TAG",
  "qnames.XSD_RESTRICTION_TAG",
  "qnames.XSD_SCHEMA_TAG",
  "qnames.XSD_SELECTOR_TAG",
  "qnames.XSD_SEQUENCE_TAG",
  "qnames.XSD_SIMPLE_CONTENT_TAG",
  "qnames.XSD_SIMPLE_TYPE_TAG",
  "qnames.XSD_TOTAL_DIGITS_TAG",
  "qnames.XSD_UNION_TAG",
  "qnames.XSD_UNIQUE_TAG",
  "qnames.XSD_WHITE_SPACE_ENUM",
  "qnames.XSD_WHITE_SPACE_TAG",
  "qnames.XSI_NIL",
  "qnames.XSI_NONS_SCHEMA_LOCATION",
  "qnames.XSI_SCHEMA_LOCATION",
  "qnames.XSI_TYPE",
  "qnames.get_qname",
  "qnames.local_name",
  "qnames.qname_to_prefixed",
  "qnames.reference_to_qname",
  "qnames.xsd_qname",
  "re.VERBOSE",
  "re.compile",
  "re.escape",
  "re.findall",
  "re.split",
  "regex.get_python_regex",
  "resources.fetch_resource",
  "resources.fetch_schema_locations",
  "resources.iter_schema_location_hints",
  "resources.load_xml_resource",
  "schema_class",
  "simple_types.XsdAtomicBuiltin",
  "simple_types.XsdAtomicRestriction",
  "simple_types.XsdSimpleType",
  "string.ascii_letters",
  "sys.argv",
  "sys.argv.remove",
  "sys.maxunicode",
  "sys.path.insert",
  "sys.version_info",
  "unicode",
  "unicodedata.category",
  "unittest.TestCase",
  "unittest.main",
  "unittest.skipIf",
  "unmap_qname",
  "validator",
  "validators.schema.XMLSchema",
  "wildcards.XsdAnyAttribute",
  "wildcards.XsdAnyElement",
  "xml.etree.ElementTree.Element",
  "xml.etree.ElementTree.ParseError",
  "xml.etree.ElementTree.XML",
  "xml.etree.ElementTree.fromstring",
  "xml.etree.ElementTree.iselement",
  "xml.etree.ElementTree.iterparse",
  "xml.etree.ElementTree.parse",
  "xml.etree.ElementTree.register_namespace",
  "xml.etree.ElementTree.tostring",
  "xmlschema.XMLSchema.meta_schema",
  "xmlschema.XMLSchema.meta_schema.types",
  "xmlschema.codepoints.UNICODE_CATEGORIES.items",
  "xmlschema.codepoints.UNICODE_CATEGORIES.values",
  "xmlschema.tests.SchemaObserver.components",
  "xmlschema.validators.schema.DEFAULT_BUILDERS.items",
  "xpath.ElementPathMixin",
  "xpath.create_xpath_parser",
  "xpath.relative_path",
  "xsdbase.ParticleMixin",
  "xsdbase.ValidatorMixin",
  "xsdbase.XsdAnnotated",
  "xsdbase.XsdAnnotated.__init__",
  "xsdbase.XsdAnnotated._parse",
  "xsdbase.XsdBaseComponent"
 ],
 "deps": {
  "_etree_element": [],
  "abc": [],
  "argparse": [],
  "attributes": [],
  "builder": [],
  "codecs": [],
  "codepoints": [],
  "collections": [],
  "compat": [],
  "complex_types": [],
  "constraint": [
   "python-constraint/conda-forge/noarch/python-constraint-1.3.1-py_1"
  ],
  "constraints": [],
  "converters": [],
  "datetime": [],
  "decimal": [],
  "dict_class": [],
  "element_class": [],
  "element_encode_hook": [],
  "etree": [],
  "exceptions": [],
  "facets": [],
  "factory_or_class": [],
  "fileinput": [],
  "filter_function": [],
  "functools": [],
  "glob": [],
  "globals_": [],
  "group_class": [],
  "groups": [],
  "json": [],
  "lxml": [],
  "map_qname": [],
  "meta_schema_class": [],
  "namespaces": [],
  "not_whitespace": [],
  "os": [],
  "parseutils": [],
  "pdb": [],
  "qnames": [],
  "re": [],
  "regex": [],
  "resources": [],
  "schema_class": [],
  "simple_types": [],
  "string": [],
  "sys": [],
  "unicode": [],
  "unicodedata": [],
  "unittest": [],
  "unmap_qname": [],
  "validator": [],
  "validators": [],
  "wildcards": [],
  "xml": [],
  "xmlschema": [
   "xmlschema/conda-forge/noarch/xmlschema-0.9.22-py_0"
  ],
  "xpath": [],
  "xsdbase": []
 }
}