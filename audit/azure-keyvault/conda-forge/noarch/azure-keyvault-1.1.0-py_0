{
 "bad": [
  "CertificateId",
  "CertificateIssuerId",
  "CertificateOperationId",
  "KeyId",
  "KeyVaultIdentifier",
  "SecretId",
  "_int_to_bigendian_8_bytes",
  "_internal._JweHeader.from_compact_header",
  "_internal._JwsHeader.from_compact_header",
  "_internal._RsaKey.generate",
  "_parse_uri_argument",
  "_validate_string_argument",
  "azure.keyvault.__init__.VERSION",
  "azure.keyvault.http_bearer_challenge_cache.__init__._cache",
  "azure.keyvault.http_bearer_challenge_cache.__init__._lock",
  "azure.keyvault.models.JsonWebKey.from_dict",
  "azure.keyvault.v2016_10_01.__init__.VERSION",
  "azure.keyvault.v7_0.__init__.VERSION",
  "azure.profiles.KnownProfiles",
  "azure.profiles.ProfileDefinition",
  "azure.profiles.multiapiclient.MultiApiClientMixin",
  "base64.b64decode",
  "base64.b64encode",
  "codecs",
  "codecs.decode",
  "codecs.encode",
  "collections.namedtuple",
  "cryptography",
  "cryptography.hazmat.backends.default_backend",
  "cryptography.hazmat.primitives.asymmetric.padding",
  "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
  "cryptography.hazmat.primitives.asymmetric.padding.OAEP",
  "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
  "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
  "cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmp1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmq1",
  "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_iqmp",
  "cryptography.hazmat.primitives.ciphers.Cipher",
  "cryptography.hazmat.primitives.ciphers.algorithms",
  "cryptography.hazmat.primitives.ciphers.algorithms.AES",
  "cryptography.hazmat.primitives.ciphers.modes",
  "cryptography.hazmat.primitives.ciphers.modes.CBC",
  "cryptography.hazmat.primitives.constant_time",
  "cryptography.hazmat.primitives.constant_time.bytes_eq",
  "cryptography.hazmat.primitives.hashes",
  "cryptography.hazmat.primitives.hashes.SHA1",
  "cryptography.hazmat.primitives.hashes.SHA256",
  "cryptography.hazmat.primitives.hmac",
  "cryptography.hazmat.primitives.hmac.HMAC",
  "cryptography.hazmat.primitives.padding",
  "cryptography.hazmat.primitives.padding.PKCS7",
  "enum.Enum",
  "format_error",
  "inspect",
  "inspect.getargspec",
  "json",
  "json.dumps",
  "json.loads",
  "models.CertificateCreateParameters",
  "models.CertificateImportParameters",
  "models.CertificateIssuerItemPaged",
  "models.CertificateIssuerSetParameters",
  "models.CertificateIssuerUpdateParameters",
  "models.CertificateItemPaged",
  "models.CertificateMergeParameters",
  "models.CertificateOperationUpdateParameter",
  "models.CertificateRestoreParameters",
  "models.CertificateUpdateParameters",
  "models.Contacts",
  "models.DeletedCertificateItemPaged",
  "models.DeletedKeyItemPaged",
  "models.DeletedSasDefinitionItemPaged",
  "models.DeletedSecretItemPaged",
  "models.DeletedStorageAccountItemPaged",
  "models.KeyCreateParameters",
  "models.KeyImportParameters",
  "models.KeyItemPaged",
  "models.KeyOperationsParameters",
  "models.KeyRestoreParameters",
  "models.KeySignParameters",
  "models.KeyUpdateParameters",
  "models.KeyVaultErrorException",
  "models.KeyVerifyParameters",
  "models.SasDefinitionCreateParameters",
  "models.SasDefinitionItemPaged",
  "models.SasDefinitionUpdateParameters",
  "models.SecretItemPaged",
  "models.SecretRestoreParameters",
  "models.SecretSetParameters",
  "models.SecretUpdateParameters",
  "models.StorageAccountCreateParameters",
  "models.StorageAccountItemPaged",
  "models.StorageAccountRegenerteKeyParameters",
  "models.StorageAccountUpdateParameters",
  "models.StorageRestoreParameters",
  "os",
  "os.urandom",
  "threading",
  "threading.Lock",
  "time",
  "time.time",
  "urllib.parse",
  "urlparse",
  "urlparse.urlparse",
  "uuid",
  "uuid.uuid1",
  "uuid.uuid4",
  "warnings"
 ],
 "deps": {
  "CertificateId": [],
  "CertificateIssuerId": [],
  "CertificateOperationId": [],
  "KeyId": [],
  "KeyVaultIdentifier": [],
  "SecretId": [],
  "_int_to_bigendian_8_bytes": [],
  "_internal": [],
  "_parse_uri_argument": [],
  "_validate_string_argument": [],
  "azure": [],
  "base64": [],
  "codecs": [],
  "collections": [],
  "cryptography": [],
  "enum": [],
  "format_error": [],
  "inspect": [],
  "json": [],
  "models": [],
  "msrest": [
   "msrest/conda-forge/noarch/msrest-0.6.17-pyh9f0ad1d_0"
  ],
  "msrestazure": [
   "msrestazure/conda-forge/noarch/msrestazure-0.4.31-py_0"
  ],
  "os": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "threading": [],
  "time": [],
  "urllib": [],
  "urlparse": [],
  "uuid": [],
  "warnings": []
 }
}