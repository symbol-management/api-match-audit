{
 "bad": [
  "StringIO.StringIO",
  "api.client.batch_client.logger",
  "api.client.cfg.logger",
  "api.client.crop_model.CropModel",
  "api.client.crop_model.logger",
  "api.client.gro_client.logger",
  "api.client.lib.logger",
  "api.client.samples.analogous_years.lib.distance_matrix.dtw_dist_matrix",
  "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix",
  "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances",
  "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_data",
  "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_dates",
  "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_methods",
  "api.client.samples.analogous_years.lib.feature_extractions.cumulative",
  "api.client.samples.analogous_years.lib.feature_extractions.feature_scaling",
  "api.client.samples.analogous_years.lib.feature_extractions.pca_transformation",
  "api.client.samples.analogous_years.lib.feature_extractions.rm_const_cols",
  "api.client.samples.analogous_years.lib.feature_extractions.ts_feature_extraction",
  "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data",
  "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST",
  "api.client.samples.analogous_years.lib.final_ranks_computation.analogous_years",
  "api.client.samples.analogous_years.lib.final_ranks_computation.ay_cumulative",
  "api.client.samples.analogous_years.lib.final_ranks_computation.ay_dtw",
  "api.client.samples.analogous_years.lib.final_ranks_computation.ay_euclidean",
  "api.client.samples.analogous_years.lib.final_ranks_computation.ay_tsfresh",
  "api.client.samples.analogous_years.lib.final_ranks_computation.combined_methods_distances",
  "api.client.samples.analogous_years.lib.final_ranks_computation.common_start_date",
  "api.client.samples.analogous_years.lib.final_ranks_computation.enso_data",
  "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_matrix",
  "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_scatterplots",
  "api.client.samples.analogous_years.lib.final_ranks_computation.get_file_name",
  "api.client.samples.analogous_years.lib.final_ranks_computation.merge_using_index_column",
  "api.client.samples.analogous_years.lib.final_ranks_computation.ranked_df_dictionary",
  "api.client.samples.analogous_years.lib.final_ranks_computation.save_to_csv",
  "api.client.samples.analogous_years.lib.final_ranks_computation.time_series",
  "api.client.samples.analogous_years.lib.final_ranks_computation_test.data_combined_methods",
  "api.client.samples.analogous_years.lib.get_transform_data.combine_subregions",
  "api.client.samples.analogous_years.lib.get_transform_data.dates_to_period_string",
  "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates",
  "api.client.samples.analogous_years.lib.get_transform_data.get_data",
  "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
  "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm",
  "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
  "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data_for_get_data",
  "api.client.samples.analogous_years.run_analogous_years.API_HOST",
  "api.client.samples.analogous_years.run_analogous_years.check_if_exists",
  "api.client.samples.analogous_years.run_analogous_years.get_data_series_list",
  "api.client.samples.analogous_years.run_analogous_years.list_length_validator",
  "api.client.samples.analogous_years.run_analogous_years.main",
  "api.client.samples.analogous_years.run_analogous_years.str2bool",
  "api.client.samples.analogous_years.run_analogous_years.valid_date",
  "api.client.samples.batch_queries.batch_queries.main",
  "api.client.samples.crop_models.cash_crops.ACCESS_TOKEN",
  "api.client.samples.crop_models.cash_crops.ANNUAL",
  "api.client.samples.crop_models.cash_crops.API_HOST",
  "api.client.samples.crop_models.cash_crops.AVOCADOS",
  "api.client.samples.crop_models.cash_crops.BRAZIL",
  "api.client.samples.crop_models.cash_crops.BRAZ_ARABICA",
  "api.client.samples.crop_models.cash_crops.CASSAVA",
  "api.client.samples.crop_models.cash_crops.CEPEA",
  "api.client.samples.crop_models.cash_crops.COCOA",
  "api.client.samples.crop_models.cash_crops.COMPOSITE_PRICES",
  "api.client.samples.crop_models.cash_crops.DAILY",
  "api.client.samples.crop_models.cash_crops.ETA_PCT",
  "api.client.samples.crop_models.cash_crops.ETA_PCT_MEDIAN",
  "api.client.samples.crop_models.cash_crops.ET_VALUE",
  "api.client.samples.crop_models.cash_crops.FEWSNET1D",
  "api.client.samples.crop_models.cash_crops.FEWSNET1M",
  "api.client.samples.crop_models.cash_crops.GIMMS_MODIS",
  "api.client.samples.crop_models.cash_crops.GLOBCOVER",
  "api.client.samples.crop_models.cash_crops.GRINDINGS",
  "api.client.samples.crop_models.cash_crops.GROYM",
  "api.client.samples.crop_models.cash_crops.HARV_AREA",
  "api.client.samples.crop_models.cash_crops.ICCO",
  "api.client.samples.crop_models.cash_crops.ICO",
  "api.client.samples.crop_models.cash_crops.KENYA_NAIROBI",
  "api.client.samples.crop_models.cash_crops.LAND_COVER",
  "api.client.samples.crop_models.cash_crops.LST",
  "api.client.samples.crop_models.cash_crops.LST_SRC",
  "api.client.samples.crop_models.cash_crops.MOISTURE",
  "api.client.samples.crop_models.cash_crops.MONTHLY",
  "api.client.samples.crop_models.cash_crops.NAFIS",
  "api.client.samples.crop_models.cash_crops.NDVI_DIFF_10YR_MEAN",
  "api.client.samples.crop_models.cash_crops.POINT_IN_TIME",
  "api.client.samples.crop_models.cash_crops.POTENT_ETA",
  "api.client.samples.crop_models.cash_crops.PRODUCER_PRICE",
  "api.client.samples.crop_models.cash_crops.RAINFED_CROPLAND",
  "api.client.samples.crop_models.cash_crops.SAO_PAULO",
  "api.client.samples.crop_models.cash_crops.SIXTEENDAY",
  "api.client.samples.crop_models.cash_crops.SMOS",
  "api.client.samples.crop_models.cash_crops.SOIL_AVAIL",
  "api.client.samples.crop_models.cash_crops.SOYBEANS",
  "api.client.samples.crop_models.cash_crops.SUGARCANE",
  "api.client.samples.crop_models.cash_crops.TEMPERATURE",
  "api.client.samples.crop_models.cash_crops.UNICA",
  "api.client.samples.crop_models.cash_crops.UNITED_STATES",
  "api.client.samples.crop_models.cash_crops.VEG_ANOMALIES",
  "api.client.samples.crop_models.cash_crops.WEEKLY",
  "api.client.samples.crop_models.cash_crops.WHOLESALE_PX",
  "api.client.samples.crop_models.cash_crops.WORLD",
  "api.client.samples.crop_models.cash_crops.YIELD",
  "api.client.samples.crop_models.cash_crops.client",
  "api.client.samples.crop_models.crop_model.CropModel",
  "api.client.samples.crop_models.soybeans.add_brazil_soybeans_yield",
  "api.client.samples.crop_models.soybeans.get_brazil_soybeans_weighted_ndvi",
  "api.client.samples.crop_models.soybeans.main",
  "api.client.samples.crop_models.sugar.API_HOST",
  "api.client.samples.crop_models.sugar.main",
  "api.client.samples.quick_start.ACCESS_TOKEN",
  "api.client.samples.quick_start.API_HOST",
  "api.client.samples.quick_start.OUTPUT_FILENAME",
  "api.client.samples.quick_start.main",
  "api.client.samples.search.ACCESS_TOKEN",
  "api.client.samples.search.API_HOST",
  "api.client.samples.search.main",
  "api.client.samples.similar_regions.find_similar_regions.main",
  "api.client.samples.similar_regions.metric.metric_properties",
  "api.client.samples.similar_regions.metric.metric_weights",
  "api.client.samples.similar_regions.similar_region.ACCESS_TOKEN",
  "api.client.samples.similar_regions.similar_region.API_HOST",
  "api.client.samples.similar_regions.similar_region.DROP_MODE",
  "api.client.samples.similar_regions.similar_region.MAX_RETRY_FAILED_REGIONS",
  "api.client.samples.similar_regions.similar_region.OK_TO_PROCEED_REGION_FRACTION",
  "api.client.samples.similar_regions.similar_region.REGIONS_PER_QUERY",
  "api.client.samples.similar_regions.similar_region.SimilarRegion",
  "api.client.samples.similar_regions.similar_region.T_INT_PER_YEAR",
  "api.client.samples.similar_regions.transform.FourierCoef",
  "api.client.samples.similar_regions.transform.Transformer",
  "api.client.samples.similar_regions.transform._fill_in_blank_days",
  "api.client.samples.similar_regions.transform._impute",
  "argparse.ArgumentParser",
  "argparse.ArgumentTypeError",
  "backports.functools_lru_cache.lru_cache",
  "builtins.map",
  "builtins.str",
  "builtins.zip",
  "checking",
  "cli.main",
  "collections.OrderedDict",
  "dateparser.parse",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.timedelta",
  "dateutil.parser.parse",
  "dateutil.relativedelta.relativedelta",
  "doctest.ELLIPSIS",
  "doctest.NORMALIZE_WHITESPACE",
  "doctest.testmod",
  "dtw.dtw",
  "func",
  "functools.partial",
  "functools.reduce",
  "get_default_logger",
  "getpass.getpass",
  "groclient.GroClient",
  "groclient.batch_client_test.MOCK_HOST",
  "groclient.batch_client_test.MOCK_TOKEN",
  "groclient.batch_client_test.mock_rank_series_by_source",
  "groclient.batch_client_test.mock_tornado_fetch",
  "groclient.cfg.MAX_QUERIES_PER_SECOND",
  "groclient.cfg.MAX_RESULT_COMBINATION_DEPTH",
  "groclient.cfg.MAX_RETRIES",
  "groclient.cfg.MAX_SERIES_PER_COMB",
  "groclient.cfg.TIMEOUT",
  "groclient.cli.pick_random_data_series",
  "groclient.cli.print_one_data_series",
  "groclient.cli.write_one_data_series",
  "groclient.client.BatchError",
  "groclient.client.GroClient",
  "groclient.client_test.MOCK_HOST",
  "groclient.client_test.MOCK_TOKEN",
  "groclient.client_test.mock_get_allowed_units",
  "groclient.client_test.mock_get_available",
  "groclient.client_test.mock_get_available_timefrequency",
  "groclient.client_test.mock_get_data_points",
  "groclient.client_test.mock_get_data_series",
  "groclient.client_test.mock_get_descendant",
  "groclient.client_test.mock_get_descendant_regions",
  "groclient.client_test.mock_get_geo_centre",
  "groclient.client_test.mock_get_geojson",
  "groclient.client_test.mock_get_geojsons",
  "groclient.client_test.mock_get_top",
  "groclient.client_test.mock_list_available",
  "groclient.client_test.mock_lookup",
  "groclient.client_test.mock_rank_series_by_source",
  "groclient.client_test.mock_search",
  "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID",
  "groclient.constants.ENTITY_KEY_TO_TYPE",
  "groclient.lib.APIError",
  "groclient.lib.REGION_LEVELS",
  "groclient.lib._VERSIONS",
  "groclient.lib.convert_value",
  "groclient.lib.get_allowed_units",
  "groclient.lib.get_available",
  "groclient.lib.get_available_timefrequency",
  "groclient.lib.get_data",
  "groclient.lib.get_data_call_params",
  "groclient.lib.get_data_points",
  "groclient.lib.get_data_series",
  "groclient.lib.get_default_logger",
  "groclient.lib.get_descendant",
  "groclient.lib.get_descendant_regions",
  "groclient.lib.get_geo_centre",
  "groclient.lib.get_geojson",
  "groclient.lib.get_geojsons",
  "groclient.lib.get_params_from_selection",
  "groclient.lib.get_source_ranking",
  "groclient.lib.get_top",
  "groclient.lib.get_version_info",
  "groclient.lib.list_available",
  "groclient.lib.list_of_series_to_single_series",
  "groclient.lib.lookup",
  "groclient.lib.lookup_batch",
  "groclient.lib.lookup_belongs",
  "groclient.lib.lookup_single",
  "groclient.lib.make_key",
  "groclient.lib.rank_series_by_source",
  "groclient.lib.redirect",
  "groclient.lib.search",
  "groclient.lib.search_and_lookup",
  "groclient.lib_test.LOOKUP_MAP",
  "groclient.lib_test.MOCK_HOST",
  "groclient.lib_test.MOCK_TOKEN",
  "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
  "groclient.lib_test.lookup_mock",
  "groclient.mock_data.mock_data_points",
  "groclient.mock_data.mock_data_series",
  "groclient.mock_data.mock_entities",
  "groclient.mock_data.mock_entities.values",
  "groclient.mock_data.mock_error_selection",
  "groclient.mock_data.mock_list_of_series_points",
  "groclient.utils.dict_assign",
  "groclient.utils.dict_reformat_keys",
  "groclient.utils.dict_unnest",
  "groclient.utils.intersect",
  "groclient.utils.list_chunk",
  "groclient.utils.str_camel_to_snake",
  "groclient.utils.str_snake_to_camel",
  "groclient.utils.zip_selections",
  "itertools.product",
  "json.dumps",
  "json.loads",
  "log_request",
  "logging.StreamHandler",
  "logging.getLogger",
  "map_result",
  "math.ceil",
  "matplotlib.use",
  "mock.MagicMock",
  "mock.patch",
  "numpy.abs",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.concatenate",
  "numpy.cumsum",
  "numpy.divmod",
  "numpy.inf",
  "numpy.interp",
  "numpy.isclose",
  "numpy.linspace",
  "numpy.load",
  "numpy.nan",
  "numpy.nanstd",
  "numpy.nansum",
  "numpy.ones",
  "numpy.pi",
  "numpy.power",
  "numpy.r_.astype",
  "numpy.round",
  "numpy.savez_compressed",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.sum",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.trace",
  "numpy.where",
  "numpy.zeros",
  "os.environ",
  "os.environ.get",
  "os.makedirs",
  "os.mkdir",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "pandas.DataFrame",
  "pandas.MultiIndex.from_product",
  "pandas.concat",
  "pandas.merge",
  "pandas.pivot_table",
  "pandas.read_csv",
  "pandas.to_datetime",
  "pandas.util.testing.assert_frame_equal",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "platform.python_version",
  "producer",
  "pytest.raises",
  "random.random",
  "re.sub",
  "requests.get",
  "requests.post",
  "scipy.fftpack.fft",
  "scipy.linalg.sqrtm",
  "scipy.spatial.distance.euclidean",
  "scipy.spatial.distance.pdist",
  "scipy.spatial.distance.squareform",
  "seaborn.pairplot",
  "seaborn.set",
  "sklearn.base.TransformerMixin",
  "sklearn.decomposition.PCA",
  "sklearn.neighbors.BallTree",
  "sklearn.neighbors.DistanceMetric.get_metric",
  "sklearn.preprocessing.MaxAbsScaler",
  "sklearn.preprocessing.StandardScaler",
  "sys.exit",
  "tempfile.gettempdir",
  "time.sleep",
  "time.time",
  "tornado.concurrent.Future",
  "tornado.escape.json_decode",
  "tornado.gen.Return",
  "tornado.gen.coroutine",
  "tornado.httpclient.AsyncHTTPClient",
  "tornado.httpclient.HTTPError",
  "tornado.httpclient.HTTPRequest",
  "tornado.httpclient.HTTPResponse",
  "tornado.ioloop.IOLoop",
  "tornado.ioloop.IOLoop.clear_current",
  "tornado.queues.Queue",
  "tqdm.tqdm",
  "tsfresh.extract_features",
  "unicodecsv.DictWriter",
  "unicodecsv.QUOTE_MINIMAL",
  "unicodecsv.writer",
  "unittest.TestCase",
  "unittest.main",
  "urllib.urlencode",
  "value"
 ],
 "deps": {
  "StringIO": [],
  "api": [],
  "argparse": [],
  "backports": [],
  "builtins": [],
  "checking": [],
  "cli": [],
  "collections": [],
  "dateparser": [],
  "datetime": [],
  "dateutil": [],
  "doctest": [],
  "dtw": [],
  "func": [],
  "functools": [],
  "get_default_logger": [],
  "getpass": [],
  "groclient": [],
  "itertools": [],
  "json": [],
  "log_request": [],
  "logging": [],
  "map_result": [],
  "math": [],
  "matplotlib": [],
  "mock": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "pkg_resources": [],
  "platform": [],
  "producer": [],
  "pytest": [],
  "random": [],
  "re": [],
  "requests": [],
  "scipy": [],
  "seaborn": [],
  "sklearn": [],
  "sys": [],
  "tempfile": [],
  "time": [],
  "tornado": [],
  "tqdm": [],
  "tsfresh": [],
  "unicodecsv": [],
  "unittest": [],
  "urllib": [],
  "value": []
 }
}