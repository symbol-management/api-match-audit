{
 "bad": [
  "_define_project_id_config",
  "_define_region_config",
  "_execute_load_in_source",
  "_gcs_client_from_config",
  "add_one",
  "collections.OrderedDict",
  "contextlib.contextmanager",
  "create_solid",
  "csv",
  "csv.DictReader",
  "csv.DictWriter",
  "dagster.Bool",
  "dagster.DagsterEventType",
  "dagster.DagsterEventType.STEP_START",
  "dagster.DagsterExecutionStepExecutionError",
  "dagster.Enum",
  "dagster.EnumValue",
  "dagster.Field",
  "dagster.InputDefinition",
  "dagster.Int",
  "dagster.IntSource",
  "dagster.List",
  "dagster.ModeDefinition",
  "dagster.Noneable",
  "dagster.Nothing",
  "dagster.OutputDefinition",
  "dagster.Permissive",
  "dagster.PipelineDefinition",
  "dagster.SerializationStrategy",
  "dagster.Shape",
  "dagster.String",
  "dagster.StringSource",
  "dagster.SystemStorageData",
  "dagster.check",
  "dagster.check.NotImplementedCheckError",
  "dagster.check.inst_param",
  "dagster.check.list_param",
  "dagster.check.opt_str_param",
  "dagster.check.param_invariant",
  "dagster.check.str_param",
  "dagster.config.ConfigScalar",
  "dagster.config.ConfigScalarKind",
  "dagster.config.PostProcessingError",
  "dagster.config.validate.process_config",
  "dagster.config.validate.validate_config",
  "dagster.configured",
  "dagster.core.definitions.create_environment_type",
  "dagster.core.events.DagsterEventType",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.execution.api.create_execution_plan",
  "dagster.core.execution.api.execute_plan",
  "dagster.core.execution.api.scoped_pipeline_context",
  "dagster.core.execution.plan.objects.StepOutputHandle",
  "dagster.core.instance.DagsterInstance",
  "dagster.core.instance.DagsterInstance.ephemeral",
  "dagster.core.instance.DagsterInstance.from_config",
  "dagster.core.instance.InstanceType",
  "dagster.core.instance.InstanceType.PERSISTENT",
  "dagster.core.launcher.DefaultRunLauncher",
  "dagster.core.run_coordinator.DefaultRunCoordinator",
  "dagster.core.storage.compute_log_manager.ComputeIOType",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDERR",
  "dagster.core.storage.compute_log_manager.ComputeIOType.STDOUT",
  "dagster.core.storage.compute_log_manager.ComputeLogFileData",
  "dagster.core.storage.compute_log_manager.ComputeLogManager",
  "dagster.core.storage.compute_log_manager.MAX_BYTES_FILE_READ",
  "dagster.core.storage.event_log.SqliteEventLogStorage",
  "dagster.core.storage.file_manager.FileHandle",
  "dagster.core.storage.file_manager.FileManager",
  "dagster.core.storage.file_manager.TempfileManager",
  "dagster.core.storage.file_manager.check_file_like_obj",
  "dagster.core.storage.intermediate_storage.ObjectStoreIntermediateStorage",
  "dagster.core.storage.local_compute_log_manager.IO_TYPE_EXTENSION",
  "dagster.core.storage.local_compute_log_manager.LocalComputeLogManager",
  "dagster.core.storage.object_store.ObjectStore",
  "dagster.core.storage.pipeline_run.PipelineRun",
  "dagster.core.storage.root.LocalArtifactStorage",
  "dagster.core.storage.runs.SqliteRunStorage",
  "dagster.core.storage.runs.SqliteRunStorage.from_local",
  "dagster.core.storage.system_storage.build_intermediate_storage_from_object_store",
  "dagster.core.storage.system_storage.fs_intermediate_storage",
  "dagster.core.storage.system_storage.fs_system_storage",
  "dagster.core.storage.system_storage.mem_intermediate_storage",
  "dagster.core.storage.system_storage.mem_system_storage",
  "dagster.core.storage.type_storage.TypeStoragePlugin",
  "dagster.core.storage.type_storage.TypeStoragePluginRegistry",
  "dagster.core.types.dagster_type.Bool",
  "dagster.core.types.dagster_type.String",
  "dagster.core.types.dagster_type.create_any_type",
  "dagster.core.types.dagster_type.resolve_dagster_type",
  "dagster.core.types.marshal.PickleSerializationStrategy",
  "dagster.core.types.marshal.SerializationStrategy",
  "dagster.core.utils.check_dagster_package_version",
  "dagster.core.utils.make_new_run_id",
  "dagster.execute_pipeline",
  "dagster.execute_solid",
  "dagster.intermediate_storage",
  "dagster.lambda_solid",
  "dagster.pipeline",
  "dagster.resource",
  "dagster.serdes.ConfigurableClass",
  "dagster.serdes.ConfigurableClassData",
  "dagster.seven",
  "dagster.seven.TemporaryDirectory",
  "dagster.seven.json",
  "dagster.seven.json.dumps",
  "dagster.seven.mock",
  "dagster.seven.mock.MagicMock",
  "dagster.seven.mock.patch",
  "dagster.seven.mock.patch.dict",
  "dagster.solid",
  "dagster.system_storage",
  "dagster.usable_as_dagster_type",
  "dagster.utils.backoff.backoff",
  "dagster.utils.ensure_dir",
  "dagster.utils.ensure_file",
  "dagster.utils.merger.merge_dicts",
  "dagster.utils.test.yield_empty_pipeline_context",
  "dagster_gcp.__init__.__version__",
  "dagster_gcp.bq_create_dataset.alias",
  "dagster_gcp.bq_delete_dataset.alias",
  "dagster_gcp.import_df_to_bq.alias",
  "datetime",
  "datetime.date",
  "delete_solid",
  "easy",
  "enum.Enum",
  "google.api_core.exceptions",
  "google.api_core.exceptions.TooManyRequests",
  "google.cloud.bigquery",
  "google.cloud.bigquery.Client",
  "google.cloud.bigquery.job.CreateDisposition",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_IF_NEEDED",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_NEVER",
  "google.cloud.bigquery.job.Encoding",
  "google.cloud.bigquery.job.Encoding.ISO_8859_1",
  "google.cloud.bigquery.job.Encoding.UTF_8",
  "google.cloud.bigquery.job.LoadJobConfig",
  "google.cloud.bigquery.job.QueryJobConfig",
  "google.cloud.bigquery.job.QueryPriority",
  "google.cloud.bigquery.job.QueryPriority.BATCH",
  "google.cloud.bigquery.job.QueryPriority.INTERACTIVE",
  "google.cloud.bigquery.job.SchemaUpdateOption",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_ADDITION",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_RELAXATION",
  "google.cloud.bigquery.job.SourceFormat",
  "google.cloud.bigquery.job.SourceFormat.AVRO",
  "google.cloud.bigquery.job.SourceFormat.CSV",
  "google.cloud.bigquery.job.SourceFormat.DATASTORE_BACKUP",
  "google.cloud.bigquery.job.SourceFormat.NEWLINE_DELIMITED_JSON",
  "google.cloud.bigquery.job.SourceFormat.ORC",
  "google.cloud.bigquery.job.SourceFormat.PARQUET",
  "google.cloud.bigquery.job.WriteDisposition",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_APPEND",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_EMPTY",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_TRUNCATE",
  "google.cloud.bigquery.table.EncryptionConfiguration",
  "google.cloud.bigquery.table.TimePartitioning",
  "google.cloud.exceptions.NotFound",
  "google.cloud.storage",
  "google.cloud.storage.Client",
  "google.cloud.storage.client.Client",
  "hashlib",
  "hashlib.sha1",
  "httplib2",
  "httplib2.Http",
  "httplib2.Response",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "load_solid",
  "logging",
  "logging.info",
  "logging.warning",
  "oauth2client.client.GoogleCredentials",
  "os",
  "os.getenv",
  "os.linesep",
  "os.listdir",
  "os.name",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.unlink",
  "pandas",
  "pandas.DataFrame",
  "pytest",
  "pytest.fixture",
  "pytest.mark.nettest",
  "pytest.mark.skip",
  "pytest.raises",
  "query_solid",
  "re",
  "re.escape",
  "re.match",
  "return_df",
  "return_gcs_uri",
  "return_one",
  "sys",
  "sys.modules",
  "sys.version_info",
  "test_solid",
  "time",
  "time.sleep",
  "types.BigQueryLoadSource.DataFrame",
  "types.BigQueryLoadSource.File",
  "types.BigQueryLoadSource.GCS",
  "user_throw_exception",
  "uuid",
  "uuid.uuid4"
 ],
 "deps": {
  "_define_project_id_config": [],
  "_define_region_config": [],
  "_execute_load_in_source": [],
  "_gcs_client_from_config": [],
  "add_one": [],
  "collections": [],
  "contextlib": [],
  "create_solid": [],
  "csv": [],
  "dagster": [],
  "dagster_gcp": [],
  "dagster_pandas": [
   "dagster-pandas/conda-forge/noarch/dagster-pandas-0.9.2-py_1"
  ],
  "datetime": [],
  "delete_solid": [],
  "easy": [],
  "enum": [],
  "google": [],
  "googleapiclient": [
   "google-api-python-client/conda-forge/noarch/google-api-python-client-1.7.8-py_0"
  ],
  "hashlib": [],
  "httplib2": [],
  "io": [],
  "load_solid": [],
  "logging": [],
  "oauth2client": [],
  "os": [],
  "pandas": [],
  "pytest": [],
  "query_solid": [],
  "re": [],
  "return_df": [],
  "return_gcs_uri": [],
  "return_one": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "sys": [],
  "test_solid": [],
  "time": [],
  "types": [],
  "user_throw_exception": [],
  "uuid": []
 }
}