{
 "bad": [
  "_define_project_id_config",
  "_define_region_config",
  "_execute_load_in_source",
  "_gcs_client_from_config",
  "add_one",
  "create_solid",
  "dagster.Bool",
  "dagster.DagsterExecutionStepExecutionError",
  "dagster.Enum",
  "dagster.EnumValue",
  "dagster.Field",
  "dagster.InputDefinition",
  "dagster.Int",
  "dagster.IntSource",
  "dagster.List",
  "dagster.ModeDefinition",
  "dagster.Noneable",
  "dagster.Nothing",
  "dagster.OutputDefinition",
  "dagster.Permissive",
  "dagster.PipelineDefinition",
  "dagster.SerializationStrategy",
  "dagster.Shape",
  "dagster.String",
  "dagster.StringSource",
  "dagster.SystemStorageData",
  "dagster.check",
  "dagster.check.NotImplementedCheckError",
  "dagster.check.inst_param",
  "dagster.check.list_param",
  "dagster.check.opt_str_param",
  "dagster.check.param_invariant",
  "dagster.check.str_param",
  "dagster.config.ConfigScalar",
  "dagster.config.ConfigScalarKind",
  "dagster.config.PostProcessingError",
  "dagster.config.validate.process_config",
  "dagster.config.validate.validate_config",
  "dagster.configured",
  "dagster.core.definitions.create_environment_type",
  "dagster.core.definitions.events.ObjectStoreOperation",
  "dagster.core.definitions.events.ObjectStoreOperationType",
  "dagster.core.definitions.events.ObjectStoreOperationType.CP_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.GET_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.RM_OBJECT",
  "dagster.core.definitions.events.ObjectStoreOperationType.SET_OBJECT",
  "dagster.core.events.DagsterEventType",
  "dagster.core.events.DagsterEventType.STEP_OUTPUT",
  "dagster.core.execution.api.create_execution_plan",
  "dagster.core.execution.api.execute_plan",
  "dagster.core.execution.api.scoped_pipeline_context",
  "dagster.core.execution.plan.objects.StepOutputHandle",
  "dagster.core.instance.DagsterInstance",
  "dagster.core.instance.DagsterInstance.ephemeral",
  "dagster.core.storage.file_manager.FileHandle",
  "dagster.core.storage.file_manager.FileManager",
  "dagster.core.storage.file_manager.TempfileManager",
  "dagster.core.storage.file_manager.check_file_like_obj",
  "dagster.core.storage.intermediate_storage.ObjectStoreIntermediateStorage",
  "dagster.core.storage.object_store.ObjectStore",
  "dagster.core.storage.pipeline_run.PipelineRun",
  "dagster.core.storage.system_storage.build_intermediate_storage_from_object_store",
  "dagster.core.storage.system_storage.fs_intermediate_storage",
  "dagster.core.storage.system_storage.fs_system_storage",
  "dagster.core.storage.system_storage.mem_intermediate_storage",
  "dagster.core.storage.system_storage.mem_system_storage",
  "dagster.core.storage.type_storage.TypeStoragePlugin",
  "dagster.core.storage.type_storage.TypeStoragePluginRegistry",
  "dagster.core.types.dagster_type.Bool",
  "dagster.core.types.dagster_type.String",
  "dagster.core.types.dagster_type.create_any_type",
  "dagster.core.types.dagster_type.resolve_dagster_type",
  "dagster.core.types.marshal.PickleSerializationStrategy",
  "dagster.core.types.marshal.SerializationStrategy",
  "dagster.core.utils.check_dagster_package_version",
  "dagster.core.utils.make_new_run_id",
  "dagster.execute_pipeline",
  "dagster.execute_solid",
  "dagster.intermediate_storage",
  "dagster.lambda_solid",
  "dagster.pipeline",
  "dagster.resource",
  "dagster.seven",
  "dagster.seven.json",
  "dagster.seven.json.dumps",
  "dagster.seven.mock",
  "dagster.seven.mock.MagicMock",
  "dagster.seven.mock.patch",
  "dagster.seven.mock.patch.dict",
  "dagster.solid",
  "dagster.system_storage",
  "dagster.usable_as_dagster_type",
  "dagster.utils.backoff.backoff",
  "dagster.utils.merger.merge_dicts",
  "dagster.utils.test.yield_empty_pipeline_context",
  "dagster_gcp.bq_create_dataset.alias",
  "dagster_gcp.bq_delete_dataset.alias",
  "dagster_gcp.import_df_to_bq.alias",
  "dagster_pandas.DataFrame",
  "delete_solid",
  "google.api_core.exceptions",
  "google.api_core.exceptions.TooManyRequests",
  "google.cloud.bigquery",
  "google.cloud.bigquery.Client",
  "google.cloud.bigquery.job.CreateDisposition",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_IF_NEEDED",
  "google.cloud.bigquery.job.CreateDisposition.CREATE_NEVER",
  "google.cloud.bigquery.job.Encoding",
  "google.cloud.bigquery.job.Encoding.ISO_8859_1",
  "google.cloud.bigquery.job.Encoding.UTF_8",
  "google.cloud.bigquery.job.LoadJobConfig",
  "google.cloud.bigquery.job.QueryJobConfig",
  "google.cloud.bigquery.job.QueryPriority",
  "google.cloud.bigquery.job.QueryPriority.BATCH",
  "google.cloud.bigquery.job.QueryPriority.INTERACTIVE",
  "google.cloud.bigquery.job.SchemaUpdateOption",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_ADDITION",
  "google.cloud.bigquery.job.SchemaUpdateOption.ALLOW_FIELD_RELAXATION",
  "google.cloud.bigquery.job.SourceFormat",
  "google.cloud.bigquery.job.SourceFormat.AVRO",
  "google.cloud.bigquery.job.SourceFormat.CSV",
  "google.cloud.bigquery.job.SourceFormat.DATASTORE_BACKUP",
  "google.cloud.bigquery.job.SourceFormat.NEWLINE_DELIMITED_JSON",
  "google.cloud.bigquery.job.SourceFormat.ORC",
  "google.cloud.bigquery.job.SourceFormat.PARQUET",
  "google.cloud.bigquery.job.WriteDisposition",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_APPEND",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_EMPTY",
  "google.cloud.bigquery.job.WriteDisposition.WRITE_TRUNCATE",
  "google.cloud.bigquery.table.EncryptionConfiguration",
  "google.cloud.bigquery.table.TimePartitioning",
  "google.cloud.exceptions.NotFound",
  "google.cloud.storage",
  "google.cloud.storage.client.Client",
  "googleapiclient.discovery.build",
  "hashlib.sha1",
  "httplib2",
  "httplib2.Http",
  "httplib2.Response",
  "io",
  "io.BytesIO",
  "io.StringIO",
  "load_solid",
  "pandas",
  "pandas.DataFrame",
  "pytest",
  "pytest.fixture",
  "pytest.mark.nettest",
  "pytest.mark.skip",
  "pytest.raises",
  "query_solid",
  "return_df",
  "return_gcs_uri",
  "return_one",
  "sys",
  "test_solid",
  "time",
  "types.BigQueryLoadSource.DataFrame",
  "types.BigQueryLoadSource.File",
  "types.BigQueryLoadSource.GCS",
  "user_throw_exception",
  "uuid",
  "uuid.uuid4"
 ],
 "deps": {
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "oauth2client": [
   "oauth2client/conda-forge/noarch/oauth2client-4.1.2-py_1",
   "oauth2client/conda-forge/noarch/oauth2client-4.1.3-py_0"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}