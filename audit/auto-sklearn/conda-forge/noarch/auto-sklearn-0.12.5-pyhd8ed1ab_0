{
 "bad": [
  "ConfigSpace.Configuration",
  "ConfigSpace.NotEqualsCondition",
  "ConfigSpace.conditions.EqualsCondition",
  "ConfigSpace.conditions.InCondition",
  "ConfigSpace.configuration_space.Configuration",
  "ConfigSpace.configuration_space.ConfigurationSpace",
  "ConfigSpace.forbidden.ForbiddenAndConjunction",
  "ConfigSpace.forbidden.ForbiddenEqualsClause",
  "ConfigSpace.forbidden.ForbiddenInClause",
  "ConfigSpace.hyperparameters.CategoricalHyperparameter",
  "ConfigSpace.hyperparameters.Constant",
  "ConfigSpace.hyperparameters.UnParametrizedHyperparameter",
  "ConfigSpace.hyperparameters.UniformFloatHyperparameter",
  "ConfigSpace.hyperparameters.UniformIntegerHyperparameter",
  "ConfigSpace.read_and_write.json",
  "ConfigSpace.read_and_write.json.dump",
  "ConfigSpace.read_and_write.json.write",
  "abc",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "ast",
  "ast.literal_eval",
  "autosklearn.__init__.requirements",
  "autosklearn.evaluation.__init__._encode_exit_status",
  "autosklearn.metrics.__init__.CLASSIFICATION_METRICS",
  "autosklearn.metrics.__init__.REGRESSION_METRICS",
  "autosklearn.metrics.__init__.Scorer",
  "autosklearn.metrics.__init__._PredictScorer",
  "autosklearn.metrics.__init__._ProbaScorer",
  "autosklearn.metrics.__init__._ThresholdScorer",
  "autosklearn.metrics.__init__.accuracy",
  "autosklearn.metrics.__init__.average_precision",
  "autosklearn.metrics.__init__.balanced_accuracy",
  "autosklearn.metrics.__init__.calculate_score",
  "autosklearn.metrics.__init__.get_metric_score",
  "autosklearn.metrics.__init__.log_loss",
  "autosklearn.metrics.__init__.make_scorer",
  "autosklearn.metrics.__init__.mean_absolute_error",
  "autosklearn.metrics.__init__.mean_squared_error",
  "autosklearn.metrics.__init__.mean_squared_log_error",
  "autosklearn.metrics.__init__.median_absolute_error",
  "autosklearn.metrics.__init__.qualified_name",
  "autosklearn.metrics.__init__.r2",
  "autosklearn.metrics.__init__.roc_auc",
  "autosklearn.metrics.__init__.root_mean_squared_error",
  "autosklearn.metrics.__init__.sanitize_array",
  "autosklearn.metrics.f1_macro",
  "autosklearn.pipeline.components.classification.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.classification.__init__.AutoSklearnClassificationAlgorithm",
  "autosklearn.pipeline.components.classification.__init__.ClassifierChoice",
  "autosklearn.pipeline.components.classification.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.classification.__init__._addons",
  "autosklearn.pipeline.components.classification.__init__._classifiers",
  "autosklearn.pipeline.components.classification.__init__.classifier_directory",
  "autosklearn.pipeline.components.classification.__init__.find_components",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__.AutoSklearnPreprocessingAlgorithm",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__._addons",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__._ohes",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__.find_components",
  "autosklearn.pipeline.components.data_preprocessing.categorical_encoding.__init__.ohe_directory",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__.AutoSklearnPreprocessingAlgorithm",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__._addons",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__._mcs",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__.find_components",
  "autosklearn.pipeline.components.data_preprocessing.minority_coalescense.__init__.mc_directory",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__.AutoSklearnPreprocessingAlgorithm",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__._addons",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__._rescalers",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__.find_components",
  "autosklearn.pipeline.components.data_preprocessing.rescaling.__init__.rescaling_directory",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.AutoSklearnPreprocessingAlgorithm",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.FeaturePreprocessorChoice",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.feature_preprocessing.__init__._addons",
  "autosklearn.pipeline.components.feature_preprocessing.__init__._preprocessors",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.classifier_directory",
  "autosklearn.pipeline.components.feature_preprocessing.__init__.find_components",
  "autosklearn.pipeline.components.regression.__init__.AutoSklearnChoice",
  "autosklearn.pipeline.components.regression.__init__.AutoSklearnRegressionAlgorithm",
  "autosklearn.pipeline.components.regression.__init__.RegressorChoice",
  "autosklearn.pipeline.components.regression.__init__.ThirdPartyComponents",
  "autosklearn.pipeline.components.regression.__init__._addons",
  "autosklearn.pipeline.components.regression.__init__._regressors",
  "autosklearn.pipeline.components.regression.__init__.find_components",
  "autosklearn.pipeline.components.regression.__init__.regressor_directory",
  "autosklearn.util.RE_PATTERN.match",
  "autosklearn.util.__init__.SUBPATTERN",
  "calculate_all_metafeatures",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.deque",
  "copy",
  "copy.copy",
  "copy.deepcopy",
  "counter",
  "csv",
  "csv.DictReader",
  "dask",
  "dask.distributed.Client",
  "dask.distributed.LocalCluster",
  "distutils.version.LooseVersion",
  "functools",
  "functools.cmp_to_key",
  "functools.partial",
  "glob",
  "glob.escape",
  "glob.glob",
  "gzip",
  "gzip.open",
  "hashlib",
  "hashlib.md5",
  "importlib",
  "importlib.import_module",
  "input.replace",
  "inspect",
  "inspect.getmembers",
  "inspect.isclass",
  "io",
  "io.StringIO",
  "itertools",
  "itertools.combinations_with_replacement",
  "itertools.permutations",
  "itertools.product",
  "json",
  "json.dumps",
  "json.load",
  "json.loads",
  "logging",
  "logging.DEBUG",
  "logging.LogRecord",
  "logging.Logger",
  "logging.config",
  "logging.config.dictConfig",
  "logging.getLogger",
  "logging.handlers",
  "logging.handlers.DEFAULT_TCP_LOGGING_PORT",
  "logging.handlers.SocketHandler",
  "logging.info",
  "logging.makeLogRecord",
  "math",
  "math.pow",
  "metric_",
  "metric_._optimum",
  "metric_._sign",
  "metric_.name",
  "multiprocessing",
  "multiprocessing.Queue",
  "multiprocessing.Value",
  "multiprocessing.context.BaseContext",
  "multiprocessing.get_context",
  "numbers",
  "numbers.Integral",
  "numpy",
  "numpy.NaN",
  "numpy.abs",
  "numpy.add",
  "numpy.all",
  "numpy.allclose",
  "numpy.amax",
  "numpy.amin",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argwhere",
  "numpy.around",
  "numpy.array",
  "numpy.array_equal",
  "numpy.average",
  "numpy.bincount",
  "numpy.bool",
  "numpy.ceil",
  "numpy.clip",
  "numpy.concatenate",
  "numpy.count_nonzero",
  "numpy.cumsum",
  "numpy.dot",
  "numpy.empty_like",
  "numpy.exp",
  "numpy.float",
  "numpy.float128",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.inf",
  "numpy.inner",
  "numpy.int",
  "numpy.int32",
  "numpy.int64",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.linalg.norm",
  "numpy.load",
  "numpy.log",
  "numpy.logical_not",
  "numpy.ma",
  "numpy.ma.MaskedArray",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.min",
  "numpy.minimum",
  "numpy.multiply",
  "numpy.nanargmax",
  "numpy.nanargmin",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmin",
  "numpy.nanstd",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.random.RandomState",
  "numpy.random.random",
  "numpy.ravel",
  "numpy.rint",
  "numpy.round",
  "numpy.save",
  "numpy.shape",
  "numpy.size",
  "numpy.std",
  "numpy.sum",
  "numpy.transpose",
  "numpy.unique",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "obj",
  "obj.exit_status",
  "obj.exitcode",
  "obj.stderr",
  "obj.stdout",
  "obj.wall_clock_time",
  "open_method",
  "os",
  "os.environ.get",
  "os.getpid",
  "os.kill",
  "os.listdir",
  "os.makedirs",
  "os.name",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.expandvars",
  "os.path.getmtime",
  "os.path.getsize",
  "os.path.isfile",
  "os.path.join",
  "os.path.split",
  "os.remove",
  "os.rename",
  "os.walk",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.Timestamp.now",
  "pandas.api.types.is_numeric_dtype",
  "pandas.concat",
  "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
  "pandas.isnull",
  "pandas.to_numeric",
  "pathlib",
  "pathlib.Path",
  "pathlib.Path.home",
  "pickle",
  "pickle.dump",
  "pickle.load",
  "pickle.loads",
  "pkg_resources",
  "pkg_resources.DistributionNotFound",
  "pkg_resources.get_distribution",
  "pkg_resources.resource_string",
  "pkgutil",
  "pkgutil.iter_modules",
  "platform",
  "platform.linux_distribution",
  "platform.mac_ver",
  "platform.machine",
  "platform.platform",
  "platform.system",
  "platform.version",
  "pynisher.MemorylimitException",
  "pynisher.TimeoutException",
  "pynisher.enforce_limits",
  "queue",
  "queue.Empty",
  "random",
  "random.randint",
  "random.sample",
  "re",
  "re.compile",
  "read_func",
  "repr.getvalue",
  "repr.write",
  "resource",
  "resource.RLIMIT_AS",
  "resource.RUSAGE_SELF",
  "resource.getrlimit",
  "resource.getrusage",
  "safe_ensemble_script",
  "safe_ensemble_script.exit_status",
  "safe_ensemble_script.result",
  "safe_mf",
  "scipy.linalg.LinAlgError",
  "scipy.sparse",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.issparse",
  "scipy.sparse.isspmatrix",
  "scipy.stats",
  "select",
  "select.select",
  "shutil",
  "shutil.rmtree",
  "sklearn",
  "sklearn.__path__",
  "sklearn.__version__",
  "sklearn.base",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.cluster",
  "sklearn.compose",
  "sklearn.compose.make_column_transformer",
  "sklearn.datasets",
  "sklearn.decomposition",
  "sklearn.discriminant_analysis",
  "sklearn.dummy.DummyClassifier",
  "sklearn.dummy.DummyRegressor",
  "sklearn.ensemble",
  "sklearn.ensemble.ExtraTreesClassifier",
  "sklearn.ensemble.ExtraTreesRegressor",
  "sklearn.ensemble.RandomForestClassifier",
  "sklearn.ensemble.RandomForestRegressor",
  "sklearn.ensemble.VotingClassifier",
  "sklearn.ensemble.VotingRegressor",
  "sklearn.exceptions.NotFittedError",
  "sklearn.experimental.enable_hist_gradient_boosting",
  "sklearn.feature_selection",
  "sklearn.feature_selection.SelectFromModel",
  "sklearn.gaussian_process",
  "sklearn.impute",
  "sklearn.kernel_approximation",
  "sklearn.linear_model",
  "sklearn.linear_model.PassiveAggressiveClassifier",
  "sklearn.linear_model.SGDClassifier",
  "sklearn.linear_model.SGDRegressor",
  "sklearn.manifold",
  "sklearn.metrics",
  "sklearn.metrics._classification.type_of_target",
  "sklearn.model_selection.BaseCrossValidator",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.PredefinedSplit",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.StratifiedShuffleSplit",
  "sklearn.model_selection._split.BaseCrossValidator",
  "sklearn.model_selection._split.BaseShuffleSplit",
  "sklearn.model_selection._split._RepeatedSplits",
  "sklearn.model_selection.train_test_split",
  "sklearn.multiclass",
  "sklearn.multiclass.OneVsRestClassifier",
  "sklearn.naive_bayes",
  "sklearn.neighbors",
  "sklearn.neighbors.NearestNeighbors",
  "sklearn.neural_network.MLPClassifier",
  "sklearn.neural_network.MLPRegressor",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing",
  "sklearn.preprocessing.MinMaxScaler",
  "sklearn.preprocessing.OneHotEncoder",
  "sklearn.preprocessing.OrdinalEncoder",
  "sklearn.svm",
  "sklearn.tree",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.multiclass.type_of_target",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.check_random_state",
  "smac.tae.StatusType.ABORT",
  "smac.tae.StatusType.CRASHED",
  "smac.tae.StatusType.DONOTADVANCE",
  "smac.tae.StatusType.MEMOUT",
  "smac.tae.StatusType.RUNNING",
  "smac.tae.StatusType.STOP",
  "smac.tae.StatusType.SUCCESS",
  "smac.tae.StatusType.TIMEOUT",
  "smac.tae.base.StatusType.ABORT",
  "smac.tae.base.StatusType.STOP",
  "socketserver",
  "socketserver.StreamRequestHandler",
  "socketserver.ThreadingTCPServer",
  "struct",
  "struct.unpack",
  "subprocess",
  "subprocess.check_output",
  "sys",
  "sys.modules",
  "sys.modules.keys",
  "sys.platform",
  "sys.stderr.write",
  "sys.stdout.write",
  "sys.version.split",
  "sys.version_info",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "threading",
  "threading.Event",
  "time",
  "time.ctime",
  "time.process_time",
  "time.sleep",
  "time.strftime",
  "time.time",
  "traceback",
  "traceback.format_exc",
  "typing",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.List",
  "typing.Optional",
  "typing.TextIO",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "typing.cast",
  "typing.no_type_check",
  "unittest",
  "unittest.TestCase",
  "unittest.mock",
  "uuid",
  "uuid.uuid1",
  "warnings",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.showwarning",
  "warnings.warn",
  "zlib",
  "zlib.adler32"
 ],
 "deps": {
  "ConfigSpace": [],
  "abc": [],
  "arff": [
   "liac-arff/conda-forge/noarch/liac-arff-2.5.0-pyhd8ed1ab_0"
  ],
  "ast": [],
  "autosklearn": [],
  "calculate_all_metafeatures": [],
  "collections": [],
  "copy": [],
  "counter": [],
  "csv": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "distutils": [],
  "functools": [],
  "glob": [],
  "gzip": [],
  "hashlib": [],
  "importlib": [],
  "input": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "joblib": [
   "joblib/conda-forge/noarch/joblib-0.14.0-py_0"
  ],
  "json": [],
  "logging": [],
  "math": [],
  "metric_": [],
  "multiprocessing": [],
  "numbers": [],
  "numpy": [],
  "obj": [],
  "open_method": [],
  "os": [],
  "pandas": [],
  "pathlib": [],
  "pickle": [],
  "pkg_resources": [],
  "pkgutil": [],
  "platform": [],
  "pynisher": [
   "pynisher/conda-forge/noarch/pynisher-0.6.4-pyhd8ed1ab_0"
  ],
  "queue": [],
  "random": [],
  "re": [],
  "read_func": [],
  "repr": [],
  "resource": [],
  "safe_ensemble_script": [],
  "safe_mf": [],
  "scipy": [],
  "select": [],
  "shutil": [],
  "sklearn": [],
  "smac": [
   "smac/conda-forge/noarch/smac-0.13.1-pyhd8ed1ab_0"
  ],
  "socketserver": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "threading": [],
  "time": [],
  "traceback": [],
  "typing": [],
  "unittest": [],
  "uuid": [],
  "warnings": [],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "zlib": []
 }
}