{
 "bad": [
  "_is_include_directive",
  "_parse_server_raw",
  "_redirect_block_for_domain",
  "_ssl_matches",
  "_vhost_matches",
  "acme.challenges.HTTP01.URI_ROOT_PATH",
  "can_append",
  "certbot.compat.os.environ.get",
  "certbot.compat.os.linesep",
  "certbot.compat.os.path.extsep",
  "certbot.compat.os.path.isabs",
  "certbot.compat.os.path.isfile",
  "certbot.compat.os.path.join",
  "certbot.compat.os.path.normpath",
  "certbot.compat.os.sep",
  "certbot.display.util.env_no_snap_for_external_calls",
  "certbot.display.util.exe_exists",
  "certbot.display.util.get_filtered_names",
  "certbot.display.util.is_wildcard_domain",
  "certbot.display.util.lock_dir_until_exit",
  "certbot.display.util.run_script",
  "certbot.display.util.unique_file",
  "certbot.plugins.common.hostname_regex.match",
  "certbot.plugins.common.private_ips_regex.match",
  "certbot_nginx._internal.constants.CLI_DEFAULTS",
  "functools.partial",
  "io.open",
  "list.__delitem__",
  "list.__setitem__",
  "list.append",
  "list.extend",
  "list.insert",
  "preference_test",
  "pyparsing",
  "pyparsing.Combine",
  "pyparsing.Forward",
  "pyparsing.Group",
  "pyparsing.Literal",
  "pyparsing.Optional",
  "pyparsing.ParseBaseException",
  "pyparsing.ParseException",
  "pyparsing.QuotedString",
  "pyparsing.Regex",
  "pyparsing.White",
  "pyparsing.ZeroOrMore",
  "pyparsing.restOfLine",
  "pyparsing.stringEnd",
  "re.IGNORECASE",
  "socket",
  "socket.AF_INET",
  "socket.AF_INET6",
  "socket.error",
  "socket.gethostbyaddr",
  "socket.gethostname",
  "socket.herror",
  "socket.inet_pton",
  "socket.timeout",
  "time",
  "type_",
  "zope.component",
  "zope.interface"
 ],
 "deps": {
  "OpenSSL": [
   "pyopenssl/conda-forge/noarch/pyopenssl-20.0.1-pyhd8ed1ab_0"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "acme": [
   "acme/conda-forge/noarch/acme-1.15.0-pyhd8ed1ab_0",
   "acme/conda-forge/noarch/acme-1.16.0-pyhd8ed1ab_0",
   "acme/conda-forge/noarch/acme-1.17.0-pyhd8ed1ab_0"
  ],
  "certbot": [
   "certbot/conda-forge/win-64/certbot-1.17.0-py36ha15d459_0"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-40.6.1-py36_0",
   "setuptools/conda-forge/linux-64/setuptools-46.3.0-py38h32f6830_0",
   "setuptools/conda-forge/linux-64/setuptools-49.1.2-py38h32f6830_0"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}