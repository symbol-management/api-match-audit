{
 "bad": [
  "Levenshtein.ratio",
  "_aget_zenodo_files",
  "_version.get_versions",
  "adownload_from_url",
  "asyncio.gather",
  "asyncio.new_event_loop",
  "asyncio.set_event_loop",
  "compound.Compound.id",
  "compound_cache.CompoundCache",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.timezone.utc",
  "equilibrator_cache._version.version_json",
  "equilibrator_cache.api.DEFAULT_COMPOUND_CACHE_FNAME",
  "equilibrator_cache.api.DEFAULT_ZENODO_DOI",
  "equilibrator_cache.api.create_compound_cache_from_sqlite_file",
  "equilibrator_cache.compatibility.AnnotationGrouping",
  "equilibrator_cache.compatibility.group_metabolites_by_annotation",
  "equilibrator_cache.compatibility.logger",
  "equilibrator_cache.compatibility.map_metabolites_to_compounds",
  "equilibrator_cache.compound_cache.PROTON_INCHI_KEY",
  "equilibrator_cache.compound_cache.Session",
  "equilibrator_cache.compound_cache.WATER_INCHI_KEY",
  "equilibrator_cache.compound_cache.logger",
  "equilibrator_cache.models.SYMBOL_TO_CHARGE",
  "equilibrator_cache.models.compound.Base",
  "equilibrator_cache.models.compound.Compound",
  "equilibrator_cache.models.compound.SYMBOL_TO_CHARGE",
  "equilibrator_cache.models.compound_identifier.Base",
  "equilibrator_cache.models.compound_identifier.logger",
  "equilibrator_cache.models.compound_microspecies.Base",
  "equilibrator_cache.models.magnesium_dissociation_constant.Base",
  "equilibrator_cache.models.mixins.timezone_aware_now",
  "equilibrator_cache.models.registry.Base",
  "equilibrator_cache.reaction.POSSIBLE_REACTION_ARROWS",
  "equilibrator_cache.reaction.PROTON_INCHI",
  "equilibrator_cache.reaction.Reaction",
  "equilibrator_cache.reaction.WATER_INCHI",
  "equilibrator_cache.thermodynamic_constants.LOG10",
  "equilibrator_cache.thermodynamic_constants.Q_",
  "equilibrator_cache.thermodynamic_constants.R",
  "equilibrator_cache.thermodynamic_constants.debye_hueckel",
  "equilibrator_cache.thermodynamic_constants.default_R_in_kJ_per_mol_per_K",
  "equilibrator_cache.thermodynamic_constants.default_T",
  "equilibrator_cache.thermodynamic_constants.default_T_in_K",
  "equilibrator_cache.thermodynamic_constants.standard_dg_formation_mg",
  "equilibrator_cache.thermodynamic_constants.standard_dh_formation_mg",
  "equilibrator_cache.thermodynamic_constants.ureg",
  "equilibrator_cache.zenodo.aget_zenodo_files",
  "equilibrator_cache.zenodo.client",
  "equilibrator_cache.zenodo.data",
  "equilibrator_cache.zenodo.data_streams",
  "equilibrator_cache.zenodo.download_from_url",
  "equilibrator_cache.zenodo.fnames",
  "equilibrator_cache.zenodo.get_zenodo_checksum",
  "equilibrator_cache.zenodo.get_zenodo_files",
  "equilibrator_cache.zenodo.md5",
  "equilibrator_cache.zenodo.num_bytes",
  "equilibrator_cache.zenodo.rec",
  "equilibrator_cache.zenodo.tasks",
  "equilibrator_cache.zenodo.total",
  "equilibrator_cache.zenodo.urls",
  "equilibrator_cache.zenodo.zen",
  "exceptions.MissingDissociationConstantsException",
  "exceptions.ParseException",
  "functools.partial",
  "functools.reduce",
  "get_pivot_atom",
  "hashlib.md5",
  "io.BytesIO",
  "json.loads",
  "logging.debug",
  "logging.getLogger",
  "logging.info",
  "mixins.TimeStampMixin",
  "models.Compound",
  "models.Compound.inchi.in_",
  "models.Compound.inchi_key.in_",
  "models.Compound.inchi_key.like",
  "models.CompoundIdentifier",
  "models.CompoundIdentifier.accession",
  "models.CompoundIdentifier.accession.in_",
  "models.CompoundIdentifier.compound_id",
  "models.CompoundIdentifier.registry_id",
  "models.CompoundMicrospecies",
  "models.Registry",
  "models.Registry.id",
  "models.Registry.name",
  "models.Registry.namespace",
  "numpy.abs",
  "numpy.any",
  "numpy.array",
  "numpy.inf",
  "numpy.log",
  "numpy.logaddexp",
  "numpy.ndarray",
  "numpy.zeros",
  "os.environ",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.Series",
  "pandas.concat",
  "pandas.read_sql",
  "pyzenodo3.base.requests.exceptions.ConnectionError",
  "re.compile",
  "re.findall",
  "re.split",
  "registry.Registry",
  "registry.Registry.id",
  "sqlalchemy.Boolean",
  "sqlalchemy.Column",
  "sqlalchemy.DateTime",
  "sqlalchemy.Float",
  "sqlalchemy.ForeignKey",
  "sqlalchemy.Integer",
  "sqlalchemy.PickleType",
  "sqlalchemy.String",
  "sqlalchemy.create_engine",
  "sqlalchemy.engine.base.Engine",
  "sqlalchemy.exists",
  "sqlalchemy.ext.declarative.declarative_base",
  "sqlalchemy.orm.joinedload",
  "sqlalchemy.orm.reconstructor",
  "sqlalchemy.orm.relationship",
  "sqlalchemy.orm.session.make_transient",
  "sqlalchemy.orm.sessionmaker",
  "sqlalchemy.orm.validates",
  "sys.float_info.epsilon",
  "thermodynamic_constants.Q_",
  "thermodynamic_constants.R",
  "thermodynamic_constants._legendre_transform",
  "thermodynamic_constants.default_T_in_K",
  "thermodynamic_constants.default_pMg",
  "thermodynamic_constants.ureg.check",
  "tqdm.asyncio.tqdm",
  "typing.Callable",
  "typing.ClassVar",
  "typing.Dict",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Pattern",
  "typing.Set",
  "typing.Tuple",
  "typing.Union",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "zenodo.get_cached_filepath"
 ],
 "deps": {
  "Levenshtein": [],
  "_aget_zenodo_files": [],
  "_version": [],
  "adownload_from_url": [],
  "appdirs": [
   "appdirs/conda-forge/noarch/appdirs-1.4.3-py_1"
  ],
  "asyncio": [],
  "compound": [],
  "compound_cache": [],
  "datetime": [],
  "equilibrator_cache": [],
  "exceptions": [],
  "functools": [],
  "get_pivot_atom": [],
  "hashlib": [],
  "httpx": [
   "httpx/conda-forge/noarch/httpx-0.15.3-py_0"
  ],
  "io": [],
  "json": [],
  "logging": [],
  "mixins": [],
  "models": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "periodictable": [
   "periodictable/conda-forge/noarch/periodictable-1.5.2-py_0"
  ],
  "pint": [
   "pint/conda-forge/noarch/pint-0.11-py_1",
   "pint/conda-forge/noarch/pint-0.13-py_0",
   "pint/conda-forge/noarch/pint-0.8.1-py_1"
  ],
  "pyzenodo3": [
   "pyzenodo3/conda-forge/noarch/pyzenodo3-1.0.2-py_0"
  ],
  "re": [],
  "registry": [],
  "sqlalchemy": [],
  "sys": [],
  "tenacity": [
   "tenacity/conda-forge/noarch/tenacity-6.2.0-py_1",
   "tenacity/conda-forge/noarch/tenacity-6.3.1-pyhd8ed1ab_0"
  ],
  "thermodynamic_constants": [],
  "tqdm": [],
  "typing": [],
  "warnings": [],
  "zenodo": []
 }
}