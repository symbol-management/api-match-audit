{
 "bad": [
  "Frame",
  "StreamReaderWithShape",
  "StreamWriterWithShape",
  "__builtin__",
  "__builtin__._ASTROPY_SETUP_",
  "_compiler.compiler",
  "astropy._erfa",
  "astropy._erfa.d2dtf",
  "astropy._erfa.dtf2d",
  "astropy.config.configuration.ConfigurationDefaultMissingError",
  "astropy.config.configuration.ConfigurationDefaultMissingWarning",
  "astropy.config.configuration.update_default_config",
  "astropy.extern.six",
  "astropy.extern.six.PY2",
  "astropy.extern.six.add_metaclass",
  "astropy.extern.six.string_types",
  "astropy.io.fits",
  "astropy.io.fits.Header",
  "astropy.tests.helper.catch_warnings",
  "astropy.tests.helper.pytest",
  "astropy.tests.helper.pytest.raises",
  "astropy.tests.pytest_plugins",
  "astropy.tests.runner.TestRunner",
  "astropy.tests.runner.TestRunner.make_test_runner_in",
  "astropy.time.Time",
  "astropy.time.Time.now",
  "astropy.time.TimeDelta",
  "astropy.time.TimeString",
  "astropy.units",
  "astropy.units.Hz",
  "astropy.units.MHz",
  "astropy.units.UnitsError",
  "astropy.units.day",
  "astropy.units.hr",
  "astropy.units.kHz",
  "astropy.units.m",
  "astropy.units.ms",
  "astropy.units.nHz",
  "astropy.units.ns",
  "astropy.units.one",
  "astropy.units.s",
  "astropy.units.us",
  "astropy.units.yr",
  "astropy.utils.lazyproperty",
  "backward",
  "baseband.data.__init__._full_path",
  "baseband.vdif.VDIFHeader.fromfile",
  "bisect.bisect",
  "builtins",
  "cls",
  "contextlib.contextmanager",
  "copy",
  "copy.copy",
  "crc12",
  "crc12.check",
  "cython_version.cython_version",
  "dada.DADAFrame",
  "dada.DADAFrame.fromdata",
  "dada.DADAFrame.fromfile",
  "dada.DADAHeader",
  "dada.DADAHeader.fromfile",
  "dada.DADAHeader.fromkeys",
  "dada.DADAHeader.fromvalues",
  "dada.DADAPayload.fromdata",
  "dada.DADAPayload.fromfile",
  "dada.open",
  "datetime",
  "datetime.datetime",
  "decoder",
  "encoder",
  "forward",
  "frame.DADAFrame.fromdata",
  "frame.DADAFrame.fromfile",
  "frame.GSBFrame.fromfile",
  "frame.GUPPIFrame.fromdata",
  "frame.GUPPIFrame.fromfile",
  "frame.Mark4Frame.fromdata",
  "frame.Mark4Frame.fromfile",
  "frame.Mark5BFrame.fromdata",
  "frame.Mark5BFrame.fromfile",
  "frame.VDIFFrame.fromdata",
  "frame.VDIFFrame.fromfile",
  "frame.VDIFFrameSet.fromdata",
  "frame.VDIFFrameSet.fromfile",
  "functools.reduce",
  "gsb.GSBFrame",
  "gsb.GSBFrame.fromdata",
  "gsb.GSBFrame.fromfile",
  "gsb.GSBHeader",
  "gsb.GSBHeader.fromfile",
  "gsb.GSBHeader.fromkeys",
  "gsb.GSBHeader.fromvalues",
  "gsb.GSBPayload",
  "gsb.GSBPayload.fromdata",
  "gsb.GSBPayload.fromfile",
  "gsb.header.GSBPhasedHeader.fromkeys",
  "gsb.open",
  "gsb.payload.GSBPayload.fromdata",
  "guppi.GUPPIFrame",
  "guppi.GUPPIFrame.fromdata",
  "guppi.GUPPIFrame.fromfile",
  "guppi.GUPPIHeader",
  "guppi.GUPPIHeader.fromfile",
  "guppi.GUPPIHeader.fromkeys",
  "guppi.GUPPIHeader.fromvalues",
  "guppi.GUPPIPayload.fromdata",
  "guppi.GUPPIPayload.fromfile",
  "guppi.open",
  "header.DADAHeader.fromfile",
  "header.DADAHeader.fromvalues",
  "header.GSBHeader.fromfile",
  "header.GSBHeader.fromvalues",
  "header.GUPPIHeader.fromfile",
  "header.GUPPIHeader.fromvalues",
  "header.Mark4Header.fromfile",
  "header.Mark4TrackHeader.fromvalues",
  "header.Mark5BHeader.fromfile",
  "header.Mark5BHeader.fromvalues",
  "header.VDIFBaseHeader._header_parser.keys",
  "header.VDIFBaseHeader._properties",
  "header.VDIFHeader.fromfile",
  "header.VDIFHeader.fromvalues",
  "header.four_word_struct.pack",
  "helpers.sequentialfile.FileNameSequencer",
  "helpers.sequentialfile.SequentialFileBase",
  "helpers.sequentialfile.open",
  "info",
  "info.attr_names",
  "info.consistent_kwargs",
  "info.consistent_kwargs.keys",
  "info.file_info",
  "info.format",
  "info.inconsistent_kwargs",
  "info.inconsistent_kwargs.keys",
  "info.irrelevant_kwargs",
  "info.irrelevant_kwargs.keys",
  "info.missing",
  "info.missing.keys",
  "info.start_time",
  "info.used_kwargs",
  "info.used_kwargs.keys",
  "info2",
  "info3",
  "io.BufferedIOBase.read.__doc__",
  "io.BufferedIOBase.seek.__doc__",
  "io.BufferedIOBase.write.__doc__",
  "io.BytesIO",
  "io.open",
  "itertools",
  "mark4.Mark4Frame",
  "mark4.Mark4Frame.fromdata",
  "mark4.Mark4Frame.fromfile",
  "mark4.Mark4Header",
  "mark4.Mark4Header.fromfile",
  "mark4.Mark4Header.fromkeys",
  "mark4.Mark4Header.fromvalues",
  "mark4.Mark4Payload",
  "mark4.Mark4Payload.fromdata",
  "mark4.Mark4Payload.fromfile",
  "mark4.header.Mark4Header",
  "mark4.header.crc12",
  "mark4.header.crc12.check",
  "mark4.header.stream2words",
  "mark4.header.words2stream",
  "mark4.open",
  "mark4.payload.lut1bit",
  "mark4.payload.lut1bit.astype",
  "mark4.payload.lut2bit1",
  "mark4.payload.lut2bit2",
  "mark4.payload.lut2bit3",
  "mark5b.Mark5BFrame",
  "mark5b.Mark5BFrame.fromdata",
  "mark5b.Mark5BFrame.fromfile",
  "mark5b.Mark5BHeader",
  "mark5b.Mark5BHeader.fromfile",
  "mark5b.Mark5BHeader.fromkeys",
  "mark5b.Mark5BHeader.fromvalues",
  "mark5b.Mark5BPayload",
  "mark5b.Mark5BPayload._encoders",
  "mark5b.Mark5BPayload.fromdata",
  "mark5b.Mark5BPayload.fromfile",
  "mark5b.header.Mark5BHeader",
  "mark5b.header.Mark5BHeader._header_parser.items",
  "mark5b.header.Mark5BHeader.set_time",
  "mark5b.open",
  "mark5b.payload.lut1bit",
  "mark5b.payload.lut1bit.astype",
  "mark5b.payload.lut2bit",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.ascontiguousarray",
  "numpy.atleast_1d",
  "numpy.bitwise_or.reduce",
  "numpy.bool",
  "numpy.broadcast_to",
  "numpy.clip",
  "numpy.complex64",
  "numpy.concatenate",
  "numpy.convolve",
  "numpy.double",
  "numpy.dtype",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.floor_divide",
  "numpy.frombuffer",
  "numpy.fromfile",
  "numpy.full",
  "numpy.full_like",
  "numpy.greater_equal",
  "numpy.hstack",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.intc",
  "numpy.integer",
  "numpy.isscalar",
  "numpy.left_shift",
  "numpy.linspace",
  "numpy.log2",
  "numpy.memmap",
  "numpy.ndarray",
  "numpy.nditer",
  "numpy.newaxis",
  "numpy.newaxis.astype",
  "numpy.newaxis.sum",
  "numpy.ones",
  "numpy.packbits",
  "numpy.prod",
  "numpy.r_",
  "numpy.random.normal",
  "numpy.repeat",
  "numpy.rint",
  "numpy.rollaxis",
  "numpy.round",
  "numpy.searchsorted",
  "numpy.signbit",
  "numpy.tile",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unique",
  "numpy.unpackbits",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "open.__doc__",
  "open.__module__",
  "operator",
  "operator.index",
  "os.environ.get",
  "os.getcwd",
  "os.path",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "payload.DADAPayload._dtype_word.itemsize",
  "payload.DADAPayload._sample_shape_maker",
  "payload.DADAPayload.fromfile",
  "payload.GSBPayload._sample_shape_maker",
  "payload.GSBPayload.fromdata",
  "payload.GSBPayload.fromfile",
  "payload.GUPPIPayload._sample_shape_maker",
  "payload.GUPPIPayload.fromfile",
  "payload.Mark4Payload._sample_shape_maker",
  "payload.Mark5BPayload._sample_shape_maker",
  "payload.VDIFPayload.fromfile",
  "pytest",
  "pytest.mark.parametrize",
  "pytest.raises",
  "re",
  "run_git",
  "sequentialfile.FileNameSequencer",
  "sequentialfile.open",
  "shape_cls",
  "six",
  "six.PY2",
  "str.split",
  "struct.Struct",
  "subprocess",
  "subprocess.PIPE",
  "subprocess.Popen",
  "sys",
  "vdif.VDIFFrame",
  "vdif.VDIFFrame.from_mark5b_frame",
  "vdif.VDIFFrame.fromdata",
  "vdif.VDIFFrame.fromfile",
  "vdif.VDIFFrameSet",
  "vdif.VDIFFrameSet.fromdata",
  "vdif.VDIFHeader",
  "vdif.VDIFHeader.from_mark5b_header",
  "vdif.VDIFHeader.fromfile",
  "vdif.VDIFHeader.fromkeys",
  "vdif.VDIFHeader.fromvalues",
  "vdif.VDIFPayload",
  "vdif.VDIFPayload.fromdata",
  "vdif.VDIFPayload.fromfile",
  "vdif.header.VDIFBaseHeader",
  "vdif.header.VDIFHeader.fromvalues",
  "vdif.header.VDIFHeaderMeta._registry.pop",
  "vdif.header.VDIFSampleRateHeader",
  "vdif.header.VDIFSampleRateHeader._header_parser",
  "vdif.header.VDIF_HEADER_CLASSES",
  "vdif.open",
  "vdif.payload.lut1bit",
  "vdif.payload.lut1bit.astype",
  "vdif.payload.lut2bit",
  "vdif.payload.lut4bit",
  "version.githash",
  "version.version",
  "vlbi_base.base.VLBIStreamBase.samples_per_frame.fget",
  "vlbi_base.base.VLBIStreamBase.samples_per_frame.fset",
  "vlbi_base.encoding.OPTIMAL_2BIT_HIGH",
  "vlbi_base.encoding.encode_2bit_base.__doc__",
  "vlbi_base.file_info.VLBIFileReaderInfo.attr_names",
  "vlbi_base.header.HeaderParser",
  "vlbi_base.header.eight_word_struct.unpack",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn"
 ],
 "deps": {
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "fractions": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "importlib": [
   "importlib/conda-forge/linux-64/importlib-1.0.4-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "locale": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}