{
 "bad": [
  "Annoying",
  "AnnoyingException",
  "Child",
  "Dodgy",
  "FileTypeError",
  "MyList",
  "MyObject",
  "MyTuple",
  "OurClass",
  "Popen",
  "Popen.all_calls",
  "Popen.mock.method_calls",
  "Popen.set_command",
  "Popen.set_default",
  "T",
  "TestFloat",
  "X",
  "atexit.register",
  "bad_gen",
  "behaviour",
  "behaviour.pid",
  "behaviour.poll_count",
  "behaviour.stderr",
  "behaviour.stdout",
  "calendar.timegm",
  "class_",
  "class_a",
  "class_b",
  "cleanup",
  "cmp",
  "collections.defaultdict",
  "collections.namedtuple",
  "comparer",
  "comparison._compare_mapping",
  "comparison.register",
  "compat.ClassType",
  "compat.PY2",
  "compat.PY3",
  "compat.PY_36_PLUS",
  "compat.PY_37_PLUS",
  "compat.Unicode",
  "contextlib.contextmanager",
  "date_type",
  "datetime.date",
  "datetime.date.add",
  "datetime.date.set",
  "datetime.date.tick",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.__class__",
  "datetime.datetime.add",
  "datetime.datetime.now",
  "datetime.datetime.set",
  "datetime.datetime.tick",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "datetime.tzinfo",
  "decimal.Decimal",
  "difflib.unified_diff",
  "dir.compare",
  "dir.getpath",
  "dir.path",
  "dir.read",
  "dir.write",
  "django.compare",
  "django.contrib.auth.models.User",
  "django.contrib.auth.models.User.objects.create",
  "django.core.exceptions.ValidationError",
  "django.core.management.execute_from_command_line",
  "django.db.models.DateTimeField",
  "django.db.models.IntegerField",
  "django.db.models.Model",
  "errno.ENOENT",
  "errno.ESRCH",
  "exception",
  "field",
  "func",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "guppy.hpy",
  "inspect.getargspec",
  "itertools.chain.from_iterable",
  "logging.Handler",
  "logging.Handler.__init__",
  "logging._handlerList",
  "logging._handlers",
  "logging.getLogger",
  "m",
  "m.call_args",
  "m.foo",
  "m.foo.bar",
  "m.mock_calls",
  "mock.DEFAULT",
  "mock.Mock",
  "mock.call",
  "mock.call.Popen",
  "mock.mock.call",
  "mock.mock.version_info",
  "models.SampleModel",
  "module.submodule.foo",
  "os.close",
  "os.dup",
  "os.dup2",
  "os.environ.setdefault",
  "os.linesep",
  "os.listdir",
  "os.makedirs",
  "os.path.exists",
  "os.path.isdir",
  "os.path.join",
  "os.path.sep",
  "os.path.split",
  "os.rmdir",
  "os.sep",
  "os.sep.join",
  "os.symlink",
  "os.unlink",
  "os.walk",
  "patched",
  "pipes.quote",
  "pprint.pformat",
  "pytest.mark.django_db",
  "query_set",
  "re.MULTILINE",
  "re.compile",
  "rmtree.rmtree",
  "shouldraise.ShouldAssert",
  "shutil.rmtree",
  "signal.SIGINT",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.Popen.all_calls",
  "subprocess.Popen.set_command",
  "subprocess.STDOUT",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
  "sybil.Region",
  "sybil.Sybil",
  "sybil.document.Document",
  "sybil.parsers.capture.parse_captures",
  "sybil.parsers.codeblock.CodeBlockParser",
  "sybil.parsers.doctest.DocTestParser",
  "sys.exc_info",
  "sys.executable",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stderr.fileno",
  "sys.stdout",
  "sys.stdout.fileno",
  "sys.version_info",
  "t",
  "t.add",
  "t.set",
  "t_compare",
  "target",
  "tempfile.TemporaryFile",
  "tempfile.mkdtemp",
  "test_compare.CompareHelper",
  "test_datetime.SampleTZInfo",
  "test_function",
  "test_function.__name__",
  "test_function1",
  "test_function2",
  "test_method",
  "test_something",
  "testfixtures.Comparison",
  "testfixtures.LogCapture",
  "testfixtures.LogCapture.instances",
  "testfixtures.LogCapture.uninstall_all",
  "testfixtures.OutputCapture",
  "testfixtures.RangeComparison",
  "testfixtures.Replace",
  "testfixtures.Replacer",
  "testfixtures.RoundComparison",
  "testfixtures.ShouldNotWarn",
  "testfixtures.ShouldRaise",
  "testfixtures.ShouldWarn",
  "testfixtures.StringComparison",
  "testfixtures.TempDirectory",
  "testfixtures.TempDirectory.cleanup_all",
  "testfixtures.TempDirectory.instances",
  "testfixtures.compare",
  "testfixtures.comparison.CompareContext",
  "testfixtures.comparison._compare_mapping",
  "testfixtures.comparison._extract_attrs",
  "testfixtures.comparison._mro",
  "testfixtures.comparison._registry",
  "testfixtures.comparison._shared_mro",
  "testfixtures.comparison._short_repr",
  "testfixtures.comparison._unsafe_iterables",
  "testfixtures.comparison.compare",
  "testfixtures.comparison.compare_bytes",
  "testfixtures.comparison.compare_call",
  "testfixtures.comparison.compare_dict",
  "testfixtures.comparison.compare_exception",
  "testfixtures.comparison.compare_generator",
  "testfixtures.comparison.compare_object",
  "testfixtures.comparison.compare_partial",
  "testfixtures.comparison.compare_sequence",
  "testfixtures.comparison.compare_set",
  "testfixtures.comparison.compare_simple",
  "testfixtures.comparison.compare_text",
  "testfixtures.comparison.compare_tuple",
  "testfixtures.comparison.compare_with_type",
  "testfixtures.comparison.diff",
  "testfixtures.comparison.sorted_by_repr",
  "testfixtures.comparison.split_repr",
  "testfixtures.comparison.strip_blank_lines",
  "testfixtures.comparison.trailing_whitespace_re",
  "testfixtures.compat.BytesLiteral",
  "testfixtures.compat.ClassType",
  "testfixtures.compat.Iterable",
  "testfixtures.compat.PY2",
  "testfixtures.compat.PY3",
  "testfixtures.compat.PY_36_PLUS",
  "testfixtures.compat.PY_37_PLUS",
  "testfixtures.compat.PY_VERSION",
  "testfixtures.compat.StringIO",
  "testfixtures.compat.Unicode",
  "testfixtures.compat.UnicodeLiteral",
  "testfixtures.compat.basestring",
  "testfixtures.compat.class_type_name",
  "testfixtures.compat.exception_module",
  "testfixtures.compat.new_class",
  "testfixtures.compat.reduce",
  "testfixtures.compat.xrange",
  "testfixtures.compat.zip_longest",
  "testfixtures.components.TestComponents",
  "testfixtures.diff",
  "testfixtures.django.compare_model",
  "testfixtures.django.instance_fields",
  "testfixtures.django.model_to_dict",
  "testfixtures.generator",
  "testfixtures.log_capture",
  "testfixtures.logcapture.LogCapture",
  "testfixtures.logcapture.LogCaptureForDecorator",
  "testfixtures.mock.ANY",
  "testfixtures.mock.DEFAULT",
  "testfixtures.mock.MagicMock",
  "testfixtures.mock.Mock",
  "testfixtures.mock.MockCall",
  "testfixtures.mock.UnittestMockCall",
  "testfixtures.mock.__eq__",
  "testfixtures.mock.call",
  "testfixtures.mock.call.Popen",
  "testfixtures.mock.call.Popen_instance.communicate",
  "testfixtures.mock.call.Popen_instance.kill",
  "testfixtures.mock.call.Popen_instance.poll",
  "testfixtures.mock.call.Popen_instance.send_signal",
  "testfixtures.mock.call.Popen_instance.stdin.write",
  "testfixtures.mock.call.Popen_instance.terminate",
  "testfixtures.mock.call.Popen_instance.wait",
  "testfixtures.mock.call.aCall",
  "testfixtures.mock.call.baz",
  "testfixtures.mock.call.baz.bar",
  "testfixtures.mock.call.call",
  "testfixtures.mock.call.foo",
  "testfixtures.mock.call.foo.bar",
  "testfixtures.mock.call.register",
  "testfixtures.mock.call.stdin.write",
  "testfixtures.mock.call.wait",
  "testfixtures.mock.has_backport",
  "testfixtures.mock.has_unittest_mock",
  "testfixtures.mock.mock_call.__class__",
  "testfixtures.mock.parent_name",
  "testfixtures.mock.patch",
  "testfixtures.mock.patch.multiple",
  "testfixtures.mock.unittest_mock_call.__class__",
  "testfixtures.not_there",
  "testfixtures.popen.MockPopen",
  "testfixtures.popen.MockPopenInstance",
  "testfixtures.popen.PopenBehaviour",
  "testfixtures.popen.record",
  "testfixtures.popen.set_command_params",
  "testfixtures.popen.shell_join",
  "testfixtures.replace",
  "testfixtures.replace.Replacer",
  "testfixtures.replace.not_same_descriptor",
  "testfixtures.replace.restore",
  "testfixtures.resolve.not_there",
  "testfixtures.resolve.resolve",
  "testfixtures.rmtree._rmtree",
  "testfixtures.rmtree._waitfor",
  "testfixtures.should_raise",
  "testfixtures.shouldraise.ShouldAssert",
  "testfixtures.shouldraise.ShouldRaise",
  "testfixtures.shouldraise.param_docs",
  "testfixtures.shouldwarn.ShouldNotWarn",
  "testfixtures.shouldwarn.ShouldWarn",
  "testfixtures.singleton",
  "testfixtures.sybil.CLASS",
  "testfixtures.sybil.FILEBLOCK_END",
  "testfixtures.sybil.FILEBLOCK_START",
  "testfixtures.sybil.FileBlock",
  "testfixtures.sybil.FileParser",
  "testfixtures.tdatetime.__add__",
  "testfixtures.tdatetime.__new__",
  "testfixtures.tdatetime.__time_new__",
  "testfixtures.tdatetime.add",
  "testfixtures.tdatetime.correct_date",
  "testfixtures.tdatetime.correct_date_method",
  "testfixtures.tdatetime.correct_datetime",
  "testfixtures.tdatetime.instantiate",
  "testfixtures.tdatetime.ms",
  "testfixtures.tdatetime.now",
  "testfixtures.tdatetime.set_",
  "testfixtures.tdatetime.test_date",
  "testfixtures.tdatetime.test_datetime",
  "testfixtures.tdatetime.test_factory",
  "testfixtures.tdatetime.test_time",
  "testfixtures.tdatetime.tick",
  "testfixtures.tdatetime.utcnow",
  "testfixtures.tempdir",
  "testfixtures.tempdirectory.TempDirectory",
  "testfixtures.test_date",
  "testfixtures.test_datetime",
  "testfixtures.test_time",
  "testfixtures.tests.conftest.sybil_setup",
  "testfixtures.tests.conftest.sybil_teardown",
  "testfixtures.tests.sample1",
  "testfixtures.tests.sample1.SampleClassA",
  "testfixtures.tests.sample1.SampleClassB",
  "testfixtures.tests.sample1.Slotted",
  "testfixtures.tests.sample1.X",
  "testfixtures.tests.sample1.X.aMethod",
  "testfixtures.tests.sample1.X.bMethod",
  "testfixtures.tests.sample1.X.y",
  "testfixtures.tests.sample1.a_function",
  "testfixtures.tests.sample1.bad",
  "testfixtures.tests.sample1.foo",
  "testfixtures.tests.sample1.now",
  "testfixtures.tests.sample1.someDict",
  "testfixtures.tests.sample1.someDict.keys",
  "testfixtures.tests.sample1.str_now_2",
  "testfixtures.tests.sample1.str_today_1",
  "testfixtures.tests.sample1.str_today_2",
  "testfixtures.tests.sample1.today",
  "testfixtures.tests.sample1.z",
  "testfixtures.tests.sample2.guppy",
  "testfixtures.tests.sample2.z",
  "testfixtures.tests.test_compare.CompareHelper",
  "testfixtures.tests.test_compare.call_list_repr",
  "testfixtures.tests.test_compare.hexaddr",
  "testfixtures.tests.test_compare.hexsub",
  "testfixtures.tests.test_compare.marker",
  "testfixtures.tests.test_comparison.AClass",
  "testfixtures.tests.test_comparison.BClass",
  "testfixtures.tests.test_comparison.FussyDefineComparison",
  "testfixtures.tests.test_comparison.WeirdException",
  "testfixtures.tests.test_comparison.X",
  "testfixtures.tests.test_comparison.compare_repr",
  "testfixtures.tests.test_datetime.SampleTZInfo",
  "testfixtures.tests.test_datetime.SampleTZInfo2",
  "testfixtures.tests.test_django.manage.main",
  "testfixtures.tests.test_log_capture.BaseCaptureTest",
  "testfixtures.tests.test_log_capture.child",
  "testfixtures.tests.test_log_capture.one",
  "testfixtures.tests.test_log_capture.root",
  "testfixtures.tests.test_log_capture.two",
  "testfixtures.tests.test_logcapture.child",
  "testfixtures.tests.test_logcapture.one",
  "testfixtures.tests.test_logcapture.root",
  "testfixtures.tests.test_logcapture.two",
  "testfixtures.tests.test_popen_docs.CustomBehaviour",
  "testfixtures.tests.test_popen_docs.dotted_path",
  "testfixtures.tests.test_popen_docs.my_func",
  "testfixtures.tests.test_popen_docs.process_in_batches",
  "testfixtures.tests.test_shouldwarn.comma",
  "testfixtures.tests.test_shouldwarn.warn_module",
  "testfixtures.tests.test_tempdirectory.some_text",
  "testfixtures.tests.test_twisted.log",
  "testfixtures.twisted.INFO",
  "testfixtures.twisted.LogCapture.make",
  "testfixtures.twisted.compare",
  "testfixtures.utils.DEFAULT",
  "testfixtures.utils.Wrapping",
  "testfixtures.utils.defaults",
  "testfixtures.utils.extend_docstring",
  "testfixtures.utils.indent",
  "testfixtures.utils.match_type_or_instance",
  "testfixtures.utils.singleton",
  "testfixtures.utils.wrap",
  "testfixtures.wrap",
  "textwrap.dedent",
  "time.sleep",
  "time.strptime",
  "time.time",
  "time.time.add",
  "time.time.set",
  "time.time.tick",
  "to_test",
  "twisted.logger.LogLevel.critical",
  "twisted.logger.LogLevel.debug",
  "twisted.logger.LogLevel.error",
  "twisted.logger.LogLevel.info",
  "twisted.logger.LogLevel.warn",
  "twisted.logger.Logger",
  "twisted.logger.formatEvent",
  "twisted.logger.globalLogPublisher._observers",
  "twisted.python.failure.Failure",
  "twisted.trial.unittest.TestCase",
  "types.GeneratorType",
  "unittest.TestCase",
  "unittest.mock._Call.__eq__",
  "unittest.mock.call",
  "value",
  "warnings.WarningMessage",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "warnings.warn_explicit",
  "z",
  "zope.component.getSiteManager.sethook",
  "zope.interface.registry.Components"
 ],
 "deps": {
  "Annoying": [],
  "AnnoyingException": [],
  "Child": [],
  "Dodgy": [],
  "FileTypeError": [],
  "MyList": [],
  "MyObject": [],
  "MyTuple": [],
  "OurClass": [],
  "Popen": [],
  "T": [],
  "TestFloat": [],
  "X": [],
  "atexit": [],
  "bad_gen": [],
  "behaviour": [],
  "calendar": [],
  "class_": [],
  "class_a": [],
  "class_b": [],
  "cleanup": [],
  "cmp": [],
  "collections": [],
  "comparer": [],
  "comparison": [],
  "compat": [],
  "contextlib": [],
  "date_type": [],
  "datetime": [],
  "decimal": [],
  "difflib": [],
  "dir": [],
  "django": [],
  "errno": [],
  "exception": [],
  "field": [],
  "func": [],
  "functools": [],
  "guppy": [],
  "inspect": [],
  "itertools": [],
  "logging": [],
  "m": [],
  "mock": [],
  "models": [],
  "module": [],
  "os": [],
  "patched": [],
  "pipes": [],
  "pprint": [],
  "pytest": [],
  "query_set": [],
  "re": [],
  "rmtree": [],
  "shouldraise": [],
  "shutil": [],
  "signal": [],
  "subprocess": [],
  "sybil": [],
  "sys": [],
  "t": [],
  "t_compare": [],
  "target": [],
  "tempfile": [],
  "test_compare": [],
  "test_datetime": [],
  "test_function": [],
  "test_function1": [],
  "test_function2": [],
  "test_method": [],
  "test_something": [],
  "testfixtures": [],
  "textwrap": [],
  "time": [],
  "to_test": [],
  "twisted": [],
  "types": [],
  "unittest": [],
  "value": [],
  "warnings": [],
  "z": [],
  "zope": []
 }
}