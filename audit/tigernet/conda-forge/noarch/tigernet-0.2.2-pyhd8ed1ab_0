{
 "bad": [
  "SynthNetwork",
  "_dist_calc",
  "_drop_covered_nodes",
  "_ensure_numeric",
  "_find_root_depth",
  "_get_k_nearest",
  "_record_snapped_points",
  "_remove_segm_ids",
  "_return_coords",
  "_set_stat",
  "_unary2point",
  "ast.literal_eval",
  "copy.deepcopy",
  "generate_data.generate_xyid",
  "geopandas.GeoDataFrame",
  "geopandas.GeoDataFrame.from_dict",
  "geopandas.geodataframe.GeoDataFrame",
  "geopandas.pd.set_option",
  "geopandas.read_file",
  "info.get_discard_mtfcc_by_desc",
  "info.get_discard_segms",
  "info.get_mtfcc_types",
  "intersector",
  "libpysal.cg.KDTree",
  "network_objects.graph_barb",
  "network_objects.graph_barb_wcm_copy_attr",
  "network_objects.graph_barb_wcm_copy_var",
  "network_objects.graph_barb_wpaths_copy_attr",
  "network_objects.graph_barb_wpaths_copy_var",
  "network_objects.graph_empirical_simplified",
  "network_objects.network_barb",
  "network_objects.network_barb_wcm_inplace_attr",
  "network_objects.network_barb_wcm_inplace_var",
  "network_objects.network_barb_wpaths_inplace_attr",
  "network_objects.network_barb_wpaths_inplace_var",
  "network_objects.network_empirical_full",
  "network_objects.network_empirical_lcc",
  "network_objects.network_empirical_simplified",
  "network_objects.network_empirical_simplified_wcm",
  "network_objects.network_empirical_simplified_wcm.n2n_matrix",
  "network_objects.network_empirical_simplified_wcm.n2n_paths",
  "network_objects.network_lattice_1x1_geomelem",
  "network_objects.network_lattice_1x1_no_args",
  "network_objects.network_lattice_1x1_small",
  "network_objects.network_lattice_1x1_wcm_attr",
  "network_objects.network_lattice_1x1_wcm_var",
  "network_objects.network_lattice_1x1_wpaths_attr",
  "network_objects.network_lattice_1x1_wpaths_var",
  "network_objects.network_lattice_2x1x1_all",
  "network_objects.network_lattice_2x1x1_largest",
  "network_objects.network_lattice_2x1x1_wcm_attr",
  "network_objects.network_lattice_2x1x1_wcm_var",
  "network_objects.network_lattice_2x1x1_wpaths_attr",
  "network_objects.network_lattice_2x1x1_wpaths_var",
  "nru",
  "numpy.array",
  "numpy.empty",
  "numpy.float64",
  "numpy.inf",
  "numpy.inf.max",
  "numpy.int64",
  "numpy.linspace",
  "numpy.log2",
  "numpy.nan",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.sin",
  "numpy.sqrt",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.where",
  "numpy.zeros",
  "operator.eq",
  "pandas.DataFrame",
  "rand_pt",
  "re.split",
  "scipy.spatial.distance_matrix",
  "setter",
  "shapely.geometry.GeometryCollection",
  "shapely.geometry.LineString",
  "shapely.geometry.MultiLineString",
  "shapely.geometry.MultiPoint",
  "shapely.geometry.Point",
  "shapely.ops.linemerge",
  "stats.calc_sinuosity",
  "stats.circuity",
  "stats.connectivity",
  "stats.dist_metric",
  "stats.entropies",
  "stats.set_node_degree",
  "tigernet.Network",
  "tigernet.Observations",
  "tigernet.generate_data._get_lat_lines",
  "tigernet.generate_lattice",
  "tigernet.generate_obs",
  "tigernet.generate_sine_lines",
  "tigernet.get_discard_mtfcc_by_desc",
  "tigernet.get_discard_segms",
  "tigernet.get_mtfcc_types",
  "tigernet.obs2obs_cost_matrix",
  "tigernet.testing_data",
  "tigernet.tests.network_objects.INTRST",
  "tigernet.tests.network_objects.RAMP",
  "tigernet.tests.network_objects.SERV_DR",
  "tigernet.tests.network_objects.SKIP_RESTR",
  "tigernet.tests.network_objects.SPLIT_BY",
  "tigernet.tests.network_objects.SPLIT_GRP",
  "tigernet.tests.network_objects.barb",
  "tigernet.tests.network_objects.comp_kws",
  "tigernet.tests.network_objects.discard_segs",
  "tigernet.tests.network_objects.gdf",
  "tigernet.tests.network_objects.geom_kws",
  "tigernet.tests.network_objects.graph_barb",
  "tigernet.tests.network_objects.graph_barb_wcm_copy_attr",
  "tigernet.tests.network_objects.graph_barb_wpaths_copy_attr",
  "tigernet.tests.network_objects.h1v1",
  "tigernet.tests.network_objects.kwargs",
  "tigernet.tests.network_objects.kws",
  "tigernet.tests.network_objects.lattice",
  "tigernet.tests.network_objects.lattice1",
  "tigernet.tests.network_objects.lattice2",
  "tigernet.tests.network_objects.mtfcc_kws",
  "tigernet.tests.network_objects.network_barb",
  "tigernet.tests.network_objects.network_barb_wcm_inplace_attr",
  "tigernet.tests.network_objects.network_barb_wpaths_inplace_attr",
  "tigernet.tests.network_objects.network_empirical_lcc",
  "tigernet.tests.network_objects.network_empirical_simplified",
  "tigernet.tests.network_objects.network_empirical_simplified_wcm",
  "tigernet.tests.network_objects.network_lattice_1x1_no_args",
  "tigernet.tests.network_objects.network_lattice_1x1_small",
  "tigernet.tests.network_objects.network_lattice_1x1_wcm_attr",
  "tigernet.tests.network_objects.network_lattice_1x1_wpaths_attr",
  "tigernet.tests.network_objects.network_lattice_2x1x1_all",
  "tigernet.tests.network_objects.network_lattice_2x1x1_wcm_attr",
  "tigernet.tests.network_objects.network_lattice_2x1x1_wpaths_attr",
  "tigernet.tests.network_objects.roads",
  "tigernet.tests.network_objects.yes_roads",
  "tigernet.tests.test_cost_matrix.inf",
  "tigernet.utils._correct_ring",
  "tigernet.utils._create_split_lines",
  "tigernet.utils._drop_geoms",
  "tigernet.utils._euc_dist",
  "tigernet.utils._find_break_locs",
  "tigernet.utils._get_hacky_index",
  "tigernet.utils._locate_naps",
  "tigernet.utils._make_break_locs",
  "tigernet.utils._simplifysegs",
  "tigernet.utils._split_line",
  "tigernet.utils._weld_MultiLineString",
  "tigernet.utils.add_ids",
  "tigernet.utils.add_length",
  "tigernet.utils.assert_2_neighs",
  "tigernet.utils.associate",
  "tigernet.utils.branch_or_leaf",
  "tigernet.utils.cleanse_supercycle",
  "tigernet.utils.create_node",
  "tigernet.utils.dijkstra",
  "tigernet.utils.fill_frame",
  "tigernet.utils.generate_tree",
  "tigernet.utils.get_intersecting_geoms",
  "tigernet.utils.get_neighbor_distances",
  "tigernet.utils.get_neighbors",
  "tigernet.utils.get_roots",
  "tigernet.utils.initial_subset",
  "tigernet.utils.label_rings",
  "tigernet.utils.line_splitter",
  "tigernet.utils.record_filter",
  "tigernet.utils.remove_adj",
  "tigernet.utils.restriction_welder",
  "tigernet.utils.ring_correction",
  "tigernet.utils.xwalk",
  "unittest.TestCase",
  "unittest.main",
  "utils._drop_geoms",
  "utils._split_line",
  "utils._weld_MultiLineString",
  "utils.add_ids",
  "utils.add_length",
  "utils.assert_2_neighs",
  "utils.associate",
  "utils.branch_or_leaf",
  "utils.calc_valency",
  "utils.euc_calc",
  "utils.extract_nodes",
  "utils.fill_frame",
  "utils.geom_assoc",
  "utils.get_cc_len",
  "utils.get_intersecting_geoms",
  "utils.get_largest_cc",
  "utils.get_neighbors",
  "utils.get_obs2coords",
  "utils.get_roots",
  "utils.label_rings",
  "utils.obs2obs_costs",
  "utils.record_filter",
  "utils.remove_restricted",
  "utils.restriction_welder",
  "utils.ring_correction",
  "utils.set_ids",
  "utils.shortest_path",
  "utils.simplify",
  "utils.snap_to_nearest",
  "utils.tiger_netprep",
  "utils.update_adj",
  "utils.xwalk",
  "warnings.warn"
 ],
 "deps": {
  "SynthNetwork": [],
  "_dist_calc": [],
  "_drop_covered_nodes": [],
  "_ensure_numeric": [],
  "_find_root_depth": [],
  "_get_k_nearest": [],
  "_record_snapped_points": [],
  "_remove_segm_ids": [],
  "_return_coords": [],
  "_set_stat": [],
  "_unary2point": [],
  "ast": [],
  "copy": [],
  "generate_data": [],
  "geopandas": [],
  "info": [],
  "intersector": [],
  "libpysal": [],
  "network_objects": [],
  "nru": [],
  "numpy": [],
  "operator": [],
  "pandas": [],
  "rand_pt": [],
  "re": [],
  "scipy": [],
  "setter": [],
  "shapely": [],
  "stats": [],
  "tigernet": [],
  "unittest": [],
  "utils": [],
  "warnings": []
 }
}