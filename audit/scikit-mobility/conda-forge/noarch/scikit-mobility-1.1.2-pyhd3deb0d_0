{
 "bad": [
  "_to_matrix",
  "abc.ABC",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "check_condition",
  "collections.Counter",
  "collections.defaultdict",
  "csv",
  "datetime",
  "datetime.timedelta",
  "distfunc",
  "errno",
  "errno.ENOENT",
  "fiona",
  "fiona.open",
  "fnmatch",
  "fnmatch.filter",
  "geopandas.GeoDataFrame.from_features",
  "in_seq",
  "inspect",
  "inspect.currentframe",
  "inspect.getargvalues",
  "itertools.combinations",
  "json",
  "json.dump",
  "json.dumps",
  "json.load",
  "logging",
  "logging.INFO",
  "logging.basicConfig",
  "logging.info",
  "math",
  "math.acos",
  "math.asin",
  "math.atan",
  "math.atan2",
  "math.ceil",
  "math.cos",
  "math.fabs",
  "math.log",
  "math.modf",
  "math.pi",
  "math.pow",
  "math.sin",
  "math.sqrt",
  "matplotlib.pyplot",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.xlim",
  "measure_distance",
  "nparray_to_trajdataframe",
  "numpy",
  "numpy.NaN",
  "numpy.arange",
  "numpy.argmax",
  "numpy.array",
  "numpy.cumsum",
  "numpy.delete",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.fill_diagonal",
  "numpy.fromiter",
  "numpy.histogram",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.log",
  "numpy.log2",
  "numpy.max",
  "numpy.mean",
  "numpy.median",
  "numpy.minimum",
  "numpy.nan",
  "numpy.ones",
  "numpy.power",
  "numpy.putmask",
  "numpy.radians",
  "numpy.random.choice",
  "numpy.random.multinomial",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.random.uniform",
  "numpy.reshape",
  "numpy.rint",
  "numpy.round",
  "numpy.searchsorted",
  "numpy.sqrt",
  "numpy.subtract",
  "numpy.sum",
  "numpy.unique",
  "numpy.where",
  "numpy.zeros",
  "object.__setattr__",
  "operator",
  "operator.itemgetter",
  "os",
  "os.listdir",
  "os.remove",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame._set_traj",
  "pandas.DataFrame.from_dict",
  "pandas.DatetimeIndex",
  "pandas.Grouper",
  "pandas.Series",
  "pandas.Timedelta",
  "pandas.concat",
  "pandas.core.dtypes.common.is_datetime64_any_dtype",
  "pandas.core.dtypes.common.is_float_dtype",
  "pandas.core.dtypes.common.is_integer_dtype",
  "pandas.core.dtypes.common.is_string_dtype",
  "pandas.date_range",
  "pandas.merge",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.to_datetime",
  "powerlaw",
  "powerlaw.Truncated_Power_Law",
  "preprocessing.compression.compress",
  "preprocessing.filtering.filter",
  "r",
  "random",
  "random.random",
  "scipy.sparse.lil_matrix",
  "scipy.stats",
  "scipy.stats.entropy",
  "scipy.stats.pearsonr",
  "scipy.stats.spearmanr",
  "shapely",
  "shapely.geometry.MultiPolygon",
  "shapely.geometry.Point",
  "shapely.geometry.Polygon",
  "shapely.geometry.box",
  "shapely.geometry.linestring.LineString",
  "shapely.geometry.multilinestring.MultiLineString",
  "shapely.geometry.multipolygon.MultiPolygon",
  "shapely.geometry.polygon.Polygon",
  "shapely.ops.cascaded_union",
  "sklearn.cluster.DBSCAN",
  "sklearn.metrics.mean_squared_error",
  "sklearn.metrics.r2_score",
  "skmob.utils.constants.DATETIME.append",
  "skmob.utils.constants.DATETIME.apply",
  "skmob.utils.constants.FREQUENCY.max",
  "skmob.utils.constants.INSTANCE.append",
  "skmob.utils.constants.INSTANCE_ELEMENT.append",
  "skmob.utils.constants.LATITUDE.append",
  "skmob.utils.constants.LONGITUDE.append",
  "skmob.utils.constants.PROBABILITY.append",
  "skmob.utils.constants.UID.append",
  "skmob.utils.constants.UID.isin",
  "statsmodels",
  "statsmodels.genmod.families.family.Poisson",
  "statsmodels.genmod.families.links.log",
  "statsmodels.genmod.generalized_linear_model.GLM",
  "sys",
  "sys._getframe",
  "tessellation.tilers.tiler.get",
  "tqdm.tqdm.pandas",
  "utils.constants.CLUSTER",
  "utils.constants.CLUSTERING_PARAMS",
  "utils.constants.COMPRESSION_PARAMS",
  "utils.constants.DATETIME",
  "utils.constants.DATETIME.dtype",
  "utils.constants.DATETIME.iloc",
  "utils.constants.DATETIME.max",
  "utils.constants.DATETIME.min",
  "utils.constants.DATETIME.reset_index",
  "utils.constants.DATETIME.set_index",
  "utils.constants.DATETIME.sort_values",
  "utils.constants.DATETIME.values",
  "utils.constants.DEFAULT_CRS",
  "utils.constants.DESTINATION",
  "utils.constants.DESTINATION.astype",
  "utils.constants.DESTINATION.values",
  "utils.constants.DESTINATION_LAT",
  "utils.constants.DESTINATION_LNG",
  "utils.constants.DETECTION_PARAMS",
  "utils.constants.FILTERING_PARAMS",
  "utils.constants.FLOW",
  "utils.constants.FLOW.iloc",
  "utils.constants.FLOW.mean",
  "utils.constants.FLOW.values",
  "utils.constants.FREQUENCY",
  "utils.constants.LATITUDE",
  "utils.constants.LATITUDE.astype",
  "utils.constants.LATITUDE.drop_duplicates",
  "utils.constants.LATITUDE.dtype",
  "utils.constants.LATITUDE.sort_values",
  "utils.constants.LATITUDE.values",
  "utils.constants.LEAVING_DATETIME",
  "utils.constants.LEAVING_DATETIME.max",
  "utils.constants.LONGITUDE",
  "utils.constants.LONGITUDE.astype",
  "utils.constants.LONGITUDE.drop_duplicates",
  "utils.constants.LONGITUDE.dtype",
  "utils.constants.LONGITUDE.sort_values",
  "utils.constants.LONGITUDE.values",
  "utils.constants.ORIGIN",
  "utils.constants.ORIGIN.astype",
  "utils.constants.ORIGIN.values",
  "utils.constants.ORIGIN_LAT",
  "utils.constants.ORIGIN_LNG",
  "utils.constants.PROBABILITY",
  "utils.constants.PROBABILITY.sort_values",
  "utils.constants.RELEVANCE",
  "utils.constants.TID",
  "utils.constants.TILE_ID",
  "utils.constants.TILE_ID.astype",
  "utils.constants.TILE_ID.geometry.iloc",
  "utils.constants.TILE_ID.shift",
  "utils.constants.TILE_ID.values",
  "utils.constants.TOTAL_FREQ",
  "utils.constants.TOT_OUTFLOW",
  "utils.constants.UID",
  "utils.constants.UID.shift",
  "utils.constants.UID.sort_values",
  "utils.constants.UID.unique",
  "utils.constants.UNIVERSAL_CRS",
  "utils.gislib.getDistance",
  "utils.plot.flow_style_function",
  "utils.plot.plot_diary",
  "utils.plot.plot_flows",
  "utils.plot.plot_gdf",
  "utils.plot.plot_stops",
  "utils.plot.plot_trajectory",
  "utils.plot.traj_style_function",
  "utils.utils.bbox_from_name",
  "utils.utils.bbox_from_points",
  "utils.utils.diff_seconds",
  "utils.utils.get_columns",
  "utils.utils.get_geom_centroid",
  "utils.utils.is_multi_trajectory",
  "utils.utils.is_multi_user",
  "utils.utils.nearest",
  "utils.utils.to_matrix",
  "warnings.warn"
 ],
 "deps": {
  "_to_matrix": [],
  "abc": [],
  "check_condition": [],
  "collections": [],
  "csv": [],
  "datetime": [],
  "distfunc": [],
  "errno": [],
  "fiona": [],
  "fnmatch": [],
  "folium": [
   "folium/conda-forge/noarch/folium-0.12.0-pyhd8ed1ab_1"
  ],
  "geojson": [
   "geojson/conda-forge/noarch/geojson-2.5.0-py_0"
  ],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.5.0-py_0"
  ],
  "in_seq": [],
  "inspect": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "math": [],
  "matplotlib": [],
  "measure_distance": [],
  "nparray_to_trajdataframe": [],
  "numpy": [],
  "object": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "powerlaw": [],
  "preprocessing": [],
  "r": [],
  "random": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "scipy": [],
  "shapely": [],
  "sklearn": [],
  "skmob": [],
  "statsmodels": [],
  "sys": [],
  "tessellation": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "utils": [],
  "warnings": []
 }
}