{
 "bad": [
  "ChunkedEncodingFix",
  "DruidMetric",
  "DruidMetric.datasource_id",
  "DruidMetric.metric_name.in_",
  "MySQLdb",
  "MySQLdb.constants.FIELD_TYPE",
  "PIL.Image.ANTIALIAS",
  "RefreshResults",
  "TCLIService.ttypes.TFetchOrientation.FETCH_NEXT",
  "TCLIService.ttypes.TOperationState.ERROR_STATE",
  "__future__.annotations",
  "_log_query",
  "_thread",
  "action",
  "add_filter_scope",
  "alembic.context.begin_transaction",
  "alembic.context.config",
  "alembic.context.configure",
  "alembic.context.is_offline_mode",
  "alembic.context.run_migrations",
  "alembic.op.add_column",
  "alembic.op.alter_column",
  "alembic.op.batch_alter_table",
  "alembic.op.create_foreign_key",
  "alembic.op.create_index",
  "alembic.op.create_table",
  "alembic.op.create_unique_constraint",
  "alembic.op.drop_column",
  "alembic.op.drop_constraint",
  "alembic.op.drop_index",
  "alembic.op.drop_table",
  "alembic.op.execute",
  "alembic.op.f",
  "alembic.op.get_bind",
  "alembic.op.get_context",
  "alter_positions",
  "auth_provider_class",
  "base.BaseSQLValidator",
  "celery.signals.worker_process_init.connect",
  "check",
  "check.version",
  "check_perms",
  "class_",
  "clean_fulfilled_requests",
  "colorama.Fore.BLUE",
  "colorama.Fore.CYAN",
  "colorama.Fore.GREEN",
  "colorama.Fore.YELLOW",
  "colorama.Style.RESET_ALL",
  "compute_generic_thumbnail",
  "convert_to_hive_type",
  "croniter.croniter.is_valid",
  "datetime.datetime.today",
  "datetime.timezone.utc",
  "decimal.Decimal",
  "deser",
  "dict.fromkeys",
  "direction",
  "driver_class",
  "errno",
  "errno.EEXIST",
  "event_logger_type",
  "f",
  "fbprophet.Prophet",
  "filter.get",
  "find_cycle",
  "flask.current_app.appbuilder.app_name",
  "flask.current_app.appbuilder.baseviews",
  "flask.current_app.appbuilder.get_session",
  "flask.current_app.appbuilder.get_session.query",
  "flask.current_app.appbuilder.sm.raise_for_dashboard_access",
  "flask.current_app.appbuilder.sm.user_model",
  "flask.current_app.appbuilder.sm.user_model.id",
  "flask.current_app.config",
  "flask.current_app.config.get",
  "flask.current_app.debug",
  "flask.current_app.extensions.configure_args",
  "flask.current_app.session_interface.save_session",
  "flask.current_app.test_request_context",
  "flask.g.form_data",
  "flask.g.user",
  "flask.g.user.email.split",
  "flask.g.user.get_id",
  "flask.g.user.get_user_id",
  "flask.g.user.id",
  "flask.g.user.is_anonymous",
  "flask.g.user.roles",
  "flask.g.user.username",
  "flask.request.args",
  "flask.request.args.get",
  "flask.request.args.getlist",
  "flask.request.args.items",
  "flask.request.args.split",
  "flask.request.args.to_dict",
  "flask.request.cookies",
  "flask.request.files.get",
  "flask.request.form",
  "flask.request.form.get",
  "flask.request.form.to_dict",
  "flask.request.get_json",
  "flask.request.headers.get",
  "flask.request.is_json",
  "flask.request.json",
  "flask.request.json.get",
  "flask.request.method",
  "flask.request.path",
  "flask.request.referrer",
  "flask.request.scheme",
  "flask.request.url_rule",
  "flask.session.get",
  "flask_app_mutator",
  "flask_appbuilder.Base.metadata",
  "flask_appbuilder.Model.metadata",
  "flask_appbuilder.security.sqla.models.PermissionView.permission",
  "flask_appbuilder.security.sqla.models.PermissionView.view_menu",
  "flask_appbuilder.security.sqla.models.Role.id.in_",
  "flask_appbuilder.security.sqla.models.User.username",
  "flask_appbuilder.security.sqla.models.assoc_user_role.c.role_id",
  "flask_appbuilder.security.sqla.models.assoc_user_role.c.user_id",
  "flask_appbuilder.security.views.PermissionModelView.include_route_methods",
  "flask_appbuilder.security.views.PermissionModelView.list_widget",
  "flask_appbuilder.security.views.PermissionViewModelView.include_route_methods",
  "flask_appbuilder.security.views.PermissionViewModelView.list_widget",
  "flask_appbuilder.security.views.RoleModelView.edit_columns",
  "flask_appbuilder.security.views.RoleModelView.include_route_methods",
  "flask_appbuilder.security.views.RoleModelView.list_columns",
  "flask_appbuilder.security.views.RoleModelView.list_widget",
  "flask_appbuilder.security.views.RoleModelView.related_views",
  "flask_appbuilder.security.views.UserModelView.include_route_methods",
  "flask_appbuilder.security.views.UserModelView.list_widget",
  "flask_appbuilder.security.views.ViewMenuModelView.include_route_methods",
  "flask_babel.lazy_gettext.strip",
  "flask_wtf.form.FlaskForm.Meta.bind_field",
  "fn",
  "format_seconds",
  "func",
  "geohash",
  "geohash.apply",
  "geohash.bbox",
  "geohash.decode",
  "geohash.encode",
  "get_datasource_label",
  "get_files",
  "get_filter_key",
  "google.oauth2.service_account",
  "google.oauth2.service_account.Credentials.from_service_account_info",
  "handle_single_value",
  "hashlib.md5",
  "helpers.misc_dash_slices.add",
  "import_simple_obj",
  "itertools.product",
  "key",
  "log",
  "markupsafe.Markup",
  "markupsafe.escape",
  "marshmallow.EXCLUDE",
  "marshmallow.fields.Tuple",
  "merge_pv",
  "middleware",
  "needs_conversion",
  "new_exception",
  "numpy.inf",
  "numpy.nan",
  "numpy.object_",
  "object_ref",
  "on_error",
  "os.environ.get",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.join",
  "os.path.splitext",
  "os.remove",
  "pandas.DataFrame.from_records",
  "pandas.Series.div",
  "pandas.Series.sub",
  "pandas.api.types.is_numeric_dtype",
  "pandas.io.parsers.STR_NA_VALUES",
  "pgsanity.pgsanity.check_string",
  "plugin",
  "postgres.PostgreSQLValidator.get",
  "presto_db.PrestoDBSQLValidator.get",
  "pydruid.utils.dimensions.RegisteredLookupExtraction",
  "pyhive.hive.ProgrammingError",
  "pyhive.hive.ttypes.TOperationState.INITIALIZED_STATE",
  "pyhive.hive.ttypes.TOperationState.RUNNING_STATE",
  "pyparsing.pyparsing_common.signed_integer",
  "pyparsing.quotedString.setName",
  "pytz.utc",
  "pytz.utc.localize",
  "quartile1",
  "quartile3",
  "query_cost_formatter",
  "quote",
  "re.IGNORECASE",
  "re.VERBOSE",
  "result_func",
  "selenium.common.exceptions.TimeoutException",
  "selenium.common.exceptions.WebDriverException",
  "selenium.webdriver.chrome",
  "selenium.webdriver.chrome.options.Options",
  "selenium.webdriver.chrome.webdriver.WebDriver",
  "selenium.webdriver.common.by.By",
  "selenium.webdriver.common.by.By.CLASS_NAME",
  "selenium.webdriver.firefox",
  "selenium.webdriver.firefox.options.Options",
  "selenium.webdriver.firefox.webdriver.WebDriver",
  "selenium.webdriver.remote.webdriver.WebDriver",
  "selenium.webdriver.support.expected_conditions",
  "selenium.webdriver.support.expected_conditions.presence_of_all_elements_located",
  "selenium.webdriver.support.expected_conditions.presence_of_element_located",
  "selenium.webdriver.support.ui.WebDriverWait",
  "session_class",
  "signal.SIGALRM",
  "signal.alarm",
  "slice.id",
  "slice.params",
  "slice.slice_name",
  "slice.uuid",
  "slice.viz_type",
  "sql_query_mutator",
  "sqla_type",
  "sqlalchemy.Metadata",
  "sqlalchemy.databases.mysql.LONGTEXT",
  "sqlalchemy.exc.errno",
  "sqlalchemy.func.AVG",
  "sqlalchemy.func.COUNT",
  "sqlalchemy.func.LOWER",
  "sqlalchemy.func.MAX",
  "sqlalchemy.func.MIN",
  "sqlalchemy.func.REGEXP",
  "sqlalchemy.func.SUM",
  "sqlalchemy.func.count",
  "sqlalchemy.func.lower",
  "sqlalchemy.sql.func.lower",
  "sqlparse.tokens.Literal.Number.Integer",
  "state_cls",
  "superset.ConnectorRegistry.get_datasource_by_name",
  "superset.ConnectorRegistry.get_eager_datasource",
  "superset.ConnectorRegistry.sources",
  "superset.annotation_layers.annotations.dao.AnnotationDAO.create",
  "superset.annotation_layers.annotations.dao.AnnotationDAO.delete",
  "superset.annotation_layers.annotations.dao.AnnotationDAO.find_by_id",
  "superset.annotation_layers.annotations.dao.AnnotationDAO.find_by_ids",
  "superset.annotation_layers.annotations.dao.AnnotationDAO.update",
  "superset.annotation_layers.dao.AnnotationLayerDAO.create",
  "superset.annotation_layers.dao.AnnotationLayerDAO.delete",
  "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_id",
  "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_ids",
  "superset.annotation_layers.dao.AnnotationLayerDAO.update",
  "superset.app.after_request",
  "superset.app.app_context",
  "superset.app.config",
  "superset.app.context_processor",
  "superset.app.errorhandler",
  "superset.app.route",
  "superset.app.shell_context_processor",
  "superset.app.test_request_context",
  "superset.appbuilder.add_permissions",
  "superset.appbuilder.app.config",
  "superset.appbuilder.app_icon",
  "superset.appbuilder.app_name",
  "superset.appbuilder.get_url_for_locale",
  "superset.appbuilder.get_url_for_login",
  "superset.appbuilder.get_url_for_logout",
  "superset.appbuilder.get_url_for_userinfo",
  "superset.appbuilder.languages",
  "superset.appbuilder.menu.get_data",
  "superset.cache.get",
  "superset.cache_manager.data_cache.memoize",
  "superset.charts.dao.ChartDAO.create",
  "superset.charts.dao.ChartDAO.delete",
  "superset.charts.dao.ChartDAO.find_by_id",
  "superset.charts.dao.ChartDAO.find_by_ids",
  "superset.charts.dao.ChartDAO.update",
  "superset.conf.get",
  "superset.config.DEFAULT_FEATURE_FLAGS.copy",
  "superset.config.FEATURE_FLAGS",
  "superset.config.GET_FEATURE_FLAGS_FUNC",
  "superset.connectors.connector_registry.ConnectorRegistry.sources",
  "superset.connectors.connector_registry.ConnectorRegistry.sources.cluster_class",
  "superset.connectors.connector_registry.ConnectorRegistry.sources.get",
  "superset.connectors.druid.models.DruidCluster.export_schema",
  "superset.connectors.druid.models.DruidCluster.import_from_dict",
  "superset.connectors.druid.models.DruidColumn.column_name",
  "superset.connectors.druid.models.DruidColumn.datasource_id",
  "superset.connectors.druid.models.DruidDatasource.cluster_id",
  "superset.connectors.druid.models.DruidDatasource.datasource_name",
  "superset.connectors.druid.models.DruidMetric.datasource_id",
  "superset.connectors.druid.models.DruidMetric.metric_name",
  "superset.connectors.sqla.models.RLSFilterRoles.c.rls_filter_id",
  "superset.connectors.sqla.models.RLSFilterRoles.c.role_id.in_",
  "superset.connectors.sqla.models.RLSFilterTables.c.rls_filter_id",
  "superset.connectors.sqla.models.RLSFilterTables.c.table_id",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.clause",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.filter_type",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.group_key",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.id",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.id.in_",
  "superset.connectors.sqla.models.RowLevelSecurityFilter.id.notin_",
  "superset.connectors.sqla.models.SqlMetric.id",
  "superset.connectors.sqla.models.SqlMetric.id.in_",
  "superset.connectors.sqla.models.SqlMetric.metric_name",
  "superset.connectors.sqla.models.SqlMetric.metric_name.in_",
  "superset.connectors.sqla.models.SqlMetric.table_id",
  "superset.connectors.sqla.models.SqlMetric.table_id.in_",
  "superset.connectors.sqla.models.SqlaTable.database_id",
  "superset.connectors.sqla.models.SqlaTable.id",
  "superset.connectors.sqla.models.SqlaTable.id.in_",
  "superset.connectors.sqla.models.SqlaTable.import_from_dict",
  "superset.connectors.sqla.models.SqlaTable.perm.in_",
  "superset.connectors.sqla.models.SqlaTable.schema",
  "superset.connectors.sqla.models.SqlaTable.schema.isnot",
  "superset.connectors.sqla.models.SqlaTable.sql",
  "superset.connectors.sqla.models.SqlaTable.sql.is_",
  "superset.connectors.sqla.models.SqlaTable.table_name",
  "superset.connectors.sqla.models.SqlaTable.table_name.ilike",
  "superset.connectors.sqla.models.SqlaTable.type",
  "superset.connectors.sqla.models.TableColumn.column_name",
  "superset.connectors.sqla.models.TableColumn.column_name.in_",
  "superset.connectors.sqla.models.TableColumn.id",
  "superset.connectors.sqla.models.TableColumn.id.in_",
  "superset.connectors.sqla.models.TableColumn.table_id",
  "superset.connectors.sqla.models.TableColumn.table_id.in_",
  "superset.constants.RouteMethod.ACTION",
  "superset.constants.RouteMethod.ACTION_POST",
  "superset.constants.RouteMethod.API_CREATE",
  "superset.constants.RouteMethod.API_DELETE",
  "superset.constants.RouteMethod.API_GET",
  "superset.constants.RouteMethod.API_READ",
  "superset.constants.RouteMethod.API_SET",
  "superset.constants.RouteMethod.API_UPDATE",
  "superset.constants.RouteMethod.CRUD_SET",
  "superset.constants.RouteMethod.DISTINCT",
  "superset.constants.RouteMethod.DOWNLOAD",
  "superset.constants.RouteMethod.EXPORT",
  "superset.constants.RouteMethod.GET",
  "superset.constants.RouteMethod.GET_LIST",
  "superset.constants.RouteMethod.IMPORT",
  "superset.constants.RouteMethod.LIST",
  "superset.constants.RouteMethod.RELATED",
  "superset.constants.RouteMethod.RELATED_VIEW_SET",
  "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
  "superset.constants.RouteMethod.SHOW",
  "superset.css_templates.dao.CssTemplateDAO.find_by_ids",
  "superset.dashboards.dao.DashboardDAO.create",
  "superset.dashboards.dao.DashboardDAO.delete",
  "superset.dashboards.dao.DashboardDAO.find_by_id",
  "superset.dashboards.dao.DashboardDAO.find_by_ids",
  "superset.dashboards.dao.DashboardDAO.update",
  "superset.databases.dao.DatabaseDAO.create",
  "superset.databases.dao.DatabaseDAO.delete",
  "superset.databases.dao.DatabaseDAO.find_all",
  "superset.databases.dao.DatabaseDAO.find_by_id",
  "superset.databases.dao.DatabaseDAO.update",
  "superset.datasets.dao.DatasetDAO.create",
  "superset.datasets.dao.DatasetDAO.delete",
  "superset.datasets.dao.DatasetDAO.find_by_id",
  "superset.datasets.dao.DatasetDAO.find_by_ids",
  "superset.db.Session",
  "superset.db.create_scoped_session",
  "superset.db.engine",
  "superset.db.engine.execute",
  "superset.db.func.count",
  "superset.db.session",
  "superset.db.session.add",
  "superset.db.session.add_all",
  "superset.db.session.close",
  "superset.db.session.commit",
  "superset.db.session.delete",
  "superset.db.session.expunge_all",
  "superset.db.session.merge",
  "superset.db.session.no_autoflush",
  "superset.db.session.query",
  "superset.db.session.rollback",
  "superset.db_engine_specs.__init__.attribute",
  "superset.db_engine_specs.__init__.imported_module",
  "superset.db_engine_specs.base.LimitMethod.FETCH_MANY",
  "superset.db_engine_specs.base.LimitMethod.WRAP_SQL",
  "superset.db_engine_specs.engines.get",
  "superset.db_engines.hive.Cursor.fetch_logs",
  "superset.db_engines.hive.TCLIService",
  "superset.db_engines.hive.constants",
  "superset.db_engines.hive.ttypes",
  "superset.errors.ErrorLevel.ERROR",
  "superset.errors.SupersetErrorType.BACKEND_TIMEOUT_ERROR",
  "superset.errors.SupersetErrorType.COLUMN_DOES_NOT_EXIST_ERROR",
  "superset.errors.SupersetErrorType.DATABASE_SECURITY_ACCESS_ERROR",
  "superset.errors.SupersetErrorType.DATASOURCE_SECURITY_ACCESS_ERROR",
  "superset.errors.SupersetErrorType.FAILED_FETCHING_DATASOURCE_INFO_ERROR",
  "superset.errors.SupersetErrorType.GENERIC_DB_ENGINE_ERROR",
  "superset.errors.SupersetErrorType.MISSING_OWNERSHIP_ERROR",
  "superset.errors.SupersetErrorType.TABLE_DOES_NOT_EXIST_ERROR",
  "superset.errors.SupersetErrorType.TABLE_SECURITY_ACCESS_ERROR",
  "superset.errors.SupersetErrorType.UNKNOWN_DATASOURCE_TYPE_ERROR",
  "superset.errors.SupersetErrorType.VIZ_GET_DF_ERROR",
  "superset.event_logger.log_this",
  "superset.event_logger.log_this_with_context",
  "superset.event_logger.log_this_with_extra_payload",
  "superset.examples.helpers.misc_dash_slices",
  "superset.extensions._event_logger",
  "superset.extensions.appbuilder.add_api",
  "superset.extensions.appbuilder.add_link",
  "superset.extensions.appbuilder.add_separator",
  "superset.extensions.appbuilder.add_view",
  "superset.extensions.appbuilder.add_view_no_menu",
  "superset.extensions.appbuilder.app.config",
  "superset.extensions.appbuilder.base_template",
  "superset.extensions.appbuilder.indexview",
  "superset.extensions.appbuilder.init_app",
  "superset.extensions.appbuilder.security_manager_class",
  "superset.extensions.async_query_manager.STATUS_DONE",
  "superset.extensions.async_query_manager.STATUS_ERROR",
  "superset.extensions.async_query_manager.init_app",
  "superset.extensions.async_query_manager.init_job",
  "superset.extensions.async_query_manager.parse_jwt_from_request",
  "superset.extensions.async_query_manager.read_events",
  "superset.extensions.async_query_manager.update_job",
  "superset.extensions.cache_manager.cache",
  "superset.extensions.cache_manager.cache.delete_many",
  "superset.extensions.cache_manager.cache.delete_memoized",
  "superset.extensions.cache_manager.cache.get",
  "superset.extensions.cache_manager.cache.memoize",
  "superset.extensions.cache_manager.data_cache",
  "superset.extensions.cache_manager.data_cache.get",
  "superset.extensions.cache_manager.init_app",
  "superset.extensions.cache_manager.thumbnail_cache",
  "superset.extensions.celery_app.Task",
  "superset.extensions.celery_app.Worker",
  "superset.extensions.celery_app.conf.BROKER_URL",
  "superset.extensions.celery_app.conf.update",
  "superset.extensions.celery_app.config_from_object",
  "superset.extensions.celery_app.set_default",
  "superset.extensions.celery_app.task",
  "superset.extensions.csrf.exempt",
  "superset.extensions.csrf.init_app",
  "superset.extensions.db.engine",
  "superset.extensions.db.engine.dispose",
  "superset.extensions.db.init_app",
  "superset.extensions.db.session",
  "superset.extensions.db.session.add",
  "superset.extensions.db.session.commit",
  "superset.extensions.db.session.delete",
  "superset.extensions.db.session.execute",
  "superset.extensions.db.session.merge",
  "superset.extensions.db.session.query",
  "superset.extensions.db.session.rollback",
  "superset.extensions.event_logger.log_context",
  "superset.extensions.event_logger.log_this",
  "superset.extensions.event_logger.log_this_with_context",
  "superset.extensions.feature_flag_manager.get_feature_flags",
  "superset.extensions.feature_flag_manager.init_app",
  "superset.extensions.feature_flag_manager.is_feature_enabled",
  "superset.extensions.machine_auth_provider_factory.init_app",
  "superset.extensions.machine_auth_provider_factory.instance.authenticate_webdriver",
  "superset.extensions.machine_auth_provider_factory.instance.get_auth_cookies",
  "superset.extensions.manifest_processor.get_manifest_files",
  "superset.extensions.manifest_processor.init_app",
  "superset.extensions.migrate.init_app",
  "superset.extensions.results_backend_manager.init_app",
  "superset.extensions.results_backend_manager.results_backend",
  "superset.extensions.results_backend_manager.should_use_msgpack",
  "superset.extensions.security_manager.add_permission_view_menu",
  "superset.extensions.security_manager.current_user",
  "superset.extensions.security_manager.find_roles_by_id",
  "superset.extensions.security_manager.find_view_menu",
  "superset.extensions.security_manager.get_rls_ids",
  "superset.extensions.security_manager.get_schema_perm",
  "superset.extensions.security_manager.get_schemas_accessible_by_user",
  "superset.extensions.security_manager.get_user_by_id",
  "superset.extensions.security_manager.permissionview_model",
  "superset.extensions.security_manager.raise_for_access",
  "superset.extensions.security_manager.set_perm",
  "superset.extensions.security_manager.user_model",
  "superset.extensions.talisman.init_app",
  "superset.jinja_context.ExtraCache.regex.search",
  "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models.items",
  "superset.models.annotations.Annotation.end_dttm",
  "superset.models.annotations.Annotation.id",
  "superset.models.annotations.Annotation.id.in_",
  "superset.models.annotations.Annotation.layer_id",
  "superset.models.annotations.Annotation.long_descr.ilike",
  "superset.models.annotations.Annotation.short_descr",
  "superset.models.annotations.Annotation.short_descr.ilike",
  "superset.models.annotations.Annotation.start_dttm",
  "superset.models.annotations.AnnotationLayer.descr.ilike",
  "superset.models.annotations.AnnotationLayer.id",
  "superset.models.annotations.AnnotationLayer.id.in_",
  "superset.models.annotations.AnnotationLayer.name",
  "superset.models.annotations.AnnotationLayer.name.ilike",
  "superset.models.cache.CacheKey.__table__.delete",
  "superset.models.cache.CacheKey.cache_key.in_",
  "superset.models.cache.CacheKey.datasource_uid.in_",
  "superset.models.core.CssTemplate.css.ilike",
  "superset.models.core.CssTemplate.id.in_",
  "superset.models.core.CssTemplate.template_name.ilike",
  "superset.models.core.Database.database_name",
  "superset.models.core.Database.export_schema",
  "superset.models.core.Database.id",
  "superset.models.core.Database.import_from_dict",
  "superset.models.core.Database.password",
  "superset.models.core.Database.uuid",
  "superset.models.core.FavStar.class_name",
  "superset.models.core.FavStar.dttm",
  "superset.models.core.FavStar.dttm.desc",
  "superset.models.core.FavStar.obj_id",
  "superset.models.core.FavStar.obj_id.in_",
  "superset.models.core.FavStar.user_id",
  "superset.models.core.FavStarClassName.CHART",
  "superset.models.core.FavStarClassName.DASHBOARD",
  "superset.models.core.Log.action",
  "superset.models.core.Log.action.in_",
  "superset.models.core.Log.dashboard_id",
  "superset.models.core.Log.dashboard_id.isnot",
  "superset.models.core.Log.dttm",
  "superset.models.core.Log.dttm.desc",
  "superset.models.core.Log.slice_id",
  "superset.models.core.Log.slice_id.isnot",
  "superset.models.core.Log.user_id",
  "superset.models.dashboard.Dashboard.dashboard_title",
  "superset.models.dashboard.Dashboard.dashboard_title.ilike",
  "superset.models.dashboard.Dashboard.id",
  "superset.models.dashboard.Dashboard.id.in_",
  "superset.models.dashboard.Dashboard.import_from_dict",
  "superset.models.dashboard.Dashboard.owners",
  "superset.models.dashboard.Dashboard.published.is_",
  "superset.models.dashboard.Dashboard.roles",
  "superset.models.dashboard.Dashboard.roles.any",
  "superset.models.dashboard.Dashboard.slices",
  "superset.models.dashboard.Dashboard.slug",
  "superset.models.dashboard.Dashboard.slug.ilike",
  "superset.models.dashboard.Dashboard.slug.label",
  "superset.models.dashboard.dashboard_slices.c.dashboard_id",
  "superset.models.dashboard.dashboard_slices.c.slice_id",
  "superset.models.dashboard.dashboard_slices.insert",
  "superset.models.reports.ReportExecutionLog.end_dttm",
  "superset.models.reports.ReportExecutionLog.end_dttm.desc",
  "superset.models.reports.ReportExecutionLog.report_schedule",
  "superset.models.reports.ReportExecutionLog.state",
  "superset.models.reports.ReportRecipientType.EMAIL",
  "superset.models.reports.ReportRecipientType.SLACK",
  "superset.models.reports.ReportSchedule.active.is_",
  "superset.models.reports.ReportSchedule.chart_id",
  "superset.models.reports.ReportSchedule.chart_id.in_",
  "superset.models.reports.ReportSchedule.dashboard_id",
  "superset.models.reports.ReportSchedule.dashboard_id.in_",
  "superset.models.reports.ReportSchedule.database_id",
  "superset.models.reports.ReportSchedule.database_id.in_",
  "superset.models.reports.ReportSchedule.description.ilike",
  "superset.models.reports.ReportSchedule.id",
  "superset.models.reports.ReportSchedule.id.in_",
  "superset.models.reports.ReportSchedule.name",
  "superset.models.reports.ReportSchedule.name.ilike",
  "superset.models.reports.ReportSchedule.sql.ilike",
  "superset.models.reports.ReportSchedule.type",
  "superset.models.reports.ReportScheduleType.ALERT",
  "superset.models.reports.ReportScheduleType.REPORT",
  "superset.models.reports.ReportScheduleValidatorType.NOT_NULL",
  "superset.models.reports.ReportScheduleValidatorType.OPERATOR",
  "superset.models.reports.ReportState.ERROR",
  "superset.models.reports.ReportState.GRACE",
  "superset.models.reports.ReportState.NOOP",
  "superset.models.reports.ReportState.SUCCESS",
  "superset.models.reports.ReportState.WORKING",
  "superset.models.schedules.EmailDeliveryType.attachment",
  "superset.models.schedules.EmailDeliveryType.inline",
  "superset.models.schedules.ScheduleType.alert",
  "superset.models.schedules.ScheduleType.dashboard",
  "superset.models.schedules.ScheduleType.slice",
  "superset.models.schedules.SliceEmailReportFormat.data",
  "superset.models.schedules.SliceEmailReportFormat.visualization",
  "superset.models.slice.Slice.changed_by_fk",
  "superset.models.slice.Slice.changed_on.desc",
  "superset.models.slice.Slice.created_by_fk",
  "superset.models.slice.Slice.datasource_id",
  "superset.models.slice.Slice.datasource_id.in_",
  "superset.models.slice.Slice.datasource_type",
  "superset.models.slice.Slice.description.ilike",
  "superset.models.slice.Slice.id",
  "superset.models.slice.Slice.id.in_",
  "superset.models.slice.Slice.import_from_dict",
  "superset.models.slice.Slice.owners",
  "superset.models.slice.Slice.perm.in_",
  "superset.models.slice.Slice.schema_perm.in_",
  "superset.models.slice.Slice.slice_name",
  "superset.models.slice.Slice.slice_name.asc",
  "superset.models.slice.Slice.slice_name.ilike",
  "superset.models.slice.Slice.slice_name.in_",
  "superset.models.slice.Slice.table",
  "superset.models.slice.Slice.viz_type.ilike",
  "superset.models.sql_lab.Query.changed_on",
  "superset.models.sql_lab.Query.database_id",
  "superset.models.sql_lab.Query.sql.like",
  "superset.models.sql_lab.Query.sql_editor_id.in_",
  "superset.models.sql_lab.Query.start_time",
  "superset.models.sql_lab.Query.start_time.asc",
  "superset.models.sql_lab.Query.status",
  "superset.models.sql_lab.Query.user_id",
  "superset.models.sql_lab.SavedQuery.created_by",
  "superset.models.sql_lab.SavedQuery.database",
  "superset.models.sql_lab.SavedQuery.description.ilike",
  "superset.models.sql_lab.SavedQuery.id",
  "superset.models.sql_lab.SavedQuery.id.in_",
  "superset.models.sql_lab.SavedQuery.label.ilike",
  "superset.models.sql_lab.SavedQuery.schema.ilike",
  "superset.models.sql_lab.SavedQuery.sql",
  "superset.models.sql_lab.SavedQuery.sql.ilike",
  "superset.models.sql_lab.TabState.active.desc",
  "superset.models.sql_lab.TabState.id",
  "superset.models.sql_lab.TabState.label",
  "superset.models.sql_lab.TabState.user_id",
  "superset.models.sql_lab.TableSchema.database_id",
  "superset.models.sql_lab.TableSchema.id",
  "superset.models.sql_lab.TableSchema.schema",
  "superset.models.sql_lab.TableSchema.tab_state_id",
  "superset.models.sql_lab.TableSchema.table",
  "superset.models.tags.ChartUpdater.after_delete",
  "superset.models.tags.ChartUpdater.after_insert",
  "superset.models.tags.ChartUpdater.after_update",
  "superset.models.tags.DashboardUpdater.after_delete",
  "superset.models.tags.DashboardUpdater.after_insert",
  "superset.models.tags.DashboardUpdater.after_update",
  "superset.models.tags.ObjectTypes.__members__",
  "superset.models.tags.ObjectTypes.chart",
  "superset.models.tags.ObjectTypes.chart.name",
  "superset.models.tags.ObjectTypes.dashboard",
  "superset.models.tags.ObjectTypes.dashboard.name",
  "superset.models.tags.ObjectTypes.query",
  "superset.models.tags.ObjectTypes.query.name",
  "superset.models.tags.QueryUpdater.after_delete",
  "superset.models.tags.QueryUpdater.after_insert",
  "superset.models.tags.QueryUpdater.after_update",
  "superset.models.tags.Tag.id",
  "superset.models.tags.Tag.name",
  "superset.models.tags.Tag.name.in_",
  "superset.models.tags.TagTypes.custom",
  "superset.models.tags.TagTypes.owner",
  "superset.models.tags.TagTypes.type",
  "superset.models.tags.TaggedObject.object_id",
  "superset.models.tags.TaggedObject.object_type",
  "superset.models.tags.TaggedObject.tag.has",
  "superset.models.tags.TaggedObject.tag_id",
  "superset.models.tags.TaggedObject.tag_id.in_",
  "superset.models.user_attributes.UserAttribute.welcome_dashboard_id",
  "superset.queries.saved_queries.dao.SavedQueryDAO.find_by_ids",
  "superset.reports.dao.ReportScheduleDAO.delete",
  "superset.reports.dao.ReportScheduleDAO.find_by_id",
  "superset.reports.dao.ReportScheduleDAO.find_by_ids",
  "superset.reports.notifications.base.BaseNotification.plugins",
  "superset.results_backend.get",
  "superset.results_backend.set",
  "superset.security_manager.add_permission_role",
  "superset.security_manager.add_permission_view_menu",
  "superset.security_manager.can_access",
  "superset.security_manager.can_access_all_databases",
  "superset.security_manager.can_access_all_datasources",
  "superset.security_manager.can_access_all_queries",
  "superset.security_manager.can_access_database",
  "superset.security_manager.can_access_datasource",
  "superset.security_manager.find_permission_view_menu",
  "superset.security_manager.find_role",
  "superset.security_manager.find_user",
  "superset.security_manager.find_view_menu",
  "superset.security_manager.get_datasource_access_error_msg",
  "superset.security_manager.get_datasources_accessible_by_user",
  "superset.security_manager.get_rls_filters",
  "superset.security_manager.get_schema_perm",
  "superset.security_manager.get_schemas_accessible_by_user",
  "superset.security_manager.get_session.commit",
  "superset.security_manager.get_session.delete",
  "superset.security_manager.get_session.query",
  "superset.security_manager.get_user_by_username",
  "superset.security_manager.permissionview_model",
  "superset.security_manager.raise_for_access",
  "superset.security_manager.role_model",
  "superset.security_manager.schemas_accessible_by_user",
  "superset.security_manager.set_perm",
  "superset.security_manager.sync_role_definitions",
  "superset.security_manager.unpack_schema_perm",
  "superset.security_manager.user_model",
  "superset.security_manager.user_model.get_user_id",
  "superset.security_manager.user_model.id",
  "superset.security_manager.user_model.username",
  "superset.security_manager.user_view_menu_names",
  "superset.sql_lab.get_sql_results.delay",
  "superset.sql_parse.CtasMethod.TABLE",
  "superset.sql_parse.CtasMethod.VIEW",
  "superset.tasks.async_queries.load_chart_data_into_cache.delay",
  "superset.tasks.async_queries.load_explore_json_into_cache.delay",
  "superset.tasks.schedules.schedule_email_report.apply_async",
  "superset.tasks.thumbnails.cache_chart_thumbnail.delay",
  "superset.tasks.thumbnails.cache_dashboard_thumbnail.delay",
  "superset.utils.core.AdhocMetricExpressionType.SIMPLE",
  "superset.utils.core.AdhocMetricExpressionType.SQL",
  "superset.utils.core.ChartDataResultFormat.CSV",
  "superset.utils.core.ChartDataResultFormat.JSON",
  "superset.utils.core.ChartDataResultFormat.JSON.value",
  "superset.utils.core.ChartDataResultType.COLUMNS",
  "superset.utils.core.ChartDataResultType.FULL",
  "superset.utils.core.ChartDataResultType.QUERY",
  "superset.utils.core.ChartDataResultType.RESULTS",
  "superset.utils.core.ChartDataResultType.SAMPLES",
  "superset.utils.core.ChartDataResultType.TIMEGRAINS",
  "superset.utils.core.DTTM_ALIAS.apply",
  "superset.utils.core.DTTM_ALIAS.max",
  "superset.utils.core.DTTM_ALIAS.rank",
  "superset.utils.core.DTTM_ALIAS.rename",
  "superset.utils.core.FilterOperator.EQUALS.value",
  "superset.utils.core.FilterOperator.GREATER_THAN.value",
  "superset.utils.core.FilterOperator.GREATER_THAN_OR_EQUALS.value",
  "superset.utils.core.FilterOperator.IN.value",
  "superset.utils.core.FilterOperator.IS_NOT_NULL.value",
  "superset.utils.core.FilterOperator.IS_NULL.value",
  "superset.utils.core.FilterOperator.LESS_THAN.value",
  "superset.utils.core.FilterOperator.LESS_THAN_OR_EQUALS.value",
  "superset.utils.core.FilterOperator.LIKE.value",
  "superset.utils.core.FilterOperator.NOT_EQUALS.value",
  "superset.utils.core.FilterOperator.NOT_IN.value",
  "superset.utils.core.FilterOperator.REGEX.value",
  "superset.utils.core.GenericDataType.NUMERIC",
  "superset.utils.core.GenericDataType.STRING",
  "superset.utils.core.GenericDataType.TEMPORAL",
  "superset.utils.core.PostProcessingBoxplotWhiskerType.PERCENTILE",
  "superset.utils.core.PostProcessingBoxplotWhiskerType.TUKEY",
  "superset.utils.core.PostProcessingContributionOrientation.COLUMN",
  "superset.utils.core.QueryMode.AGGREGATE",
  "superset.utils.core.QueryMode.RAW",
  "superset.utils.core.QueryMode.get",
  "superset.utils.core.QuerySource.CHART",
  "superset.utils.core.QuerySource.DASHBOARD",
  "superset.utils.core.QuerySource.SQL_LAB",
  "superset.utils.core.QueryStatus.FAILED",
  "superset.utils.core.QueryStatus.PENDING",
  "superset.utils.core.QueryStatus.RUNNING",
  "superset.utils.core.QueryStatus.STOPPED",
  "superset.utils.core.QueryStatus.SUCCESS",
  "superset.utils.core.ReservedUrlParameters.EDIT_MODE.value",
  "superset.utils.core.ReservedUrlParameters.STANDALONE",
  "superset.utils.core.RowLevelSecurityFilterType.BASE",
  "superset.utils.core.RowLevelSecurityFilterType.REGULAR",
  "superset.utils.core.RowLevelSecurityFilterType.REGULAR.value",
  "superset.utils.core.TemporalType.DATE",
  "superset.utils.core.TemporalType.DATETIME",
  "superset.utils.core.TemporalType.SMALLDATETIME",
  "superset.utils.core.TemporalType.TEXT",
  "superset.utils.core.TemporalType.TIME",
  "superset.utils.core.TemporalType.TIMESTAMP",
  "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE",
  "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE.value",
  "superset.utils.core.TimeRangeEndpoint.INCLUSIVE",
  "superset.utils.core.TimeRangeEndpoint.INCLUSIVE.value",
  "superset.utils.core.timeout",
  "superset.utils.date_parser.DateRangeMigration.x_dateunit",
  "superset.utils.date_parser.DateRangeMigration.x_dateunit_in_since",
  "superset.utils.date_parser.DateRangeMigration.x_dateunit_in_until",
  "superset.utils.dates.EPOCH.date",
  "superset.utils.screenshots.ChartScreenshot.get_from_cache_key",
  "superset.viz.viz_types.get",
  "superset_config",
  "superset_config.__file__",
  "sys",
  "sys.getsizeof",
  "sys.maxsize",
  "sys.modules",
  "sys.stdout",
  "template_processor",
  "threading",
  "threading.current_thread",
  "threading.main_thread",
  "time",
  "time.sleep",
  "time.struct_time",
  "time.time",
  "to_lower",
  "trigger_celery",
  "type_validator",
  "visit",
  "viz_class",
  "vstringify",
  "whisker_high",
  "whisker_low",
  "wtforms.BooleanField",
  "wtforms.Field",
  "wtforms.IntegerField",
  "wtforms.SelectField",
  "wtforms.StringField",
  "wtforms.fields.StringField"
 ],
 "deps": {
  "ChunkedEncodingFix": [],
  "DruidMetric": [],
  "MySQLdb": [],
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "RefreshResults": [],
  "TCLIService": [
   "pyhive/conda-forge/noarch/pyhive-0.6.3-pyhd3deb0d_0"
  ],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "_log_query": [],
  "_thread": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "action": [],
  "add_filter_scope": [],
  "alembic": [
   "alembic/conda-forge/noarch/alembic-1.0.7-py_0"
  ],
  "alter_positions": [],
  "apispec": [
   "apispec/conda-forge/noarch/apispec-4.7.0-pyhd8ed1ab_0"
  ],
  "auth_provider_class": [],
  "backoff": [
   "backoff/conda-forge/noarch/backoff-1.10.0-py_0"
  ],
  "base": [],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bleach": [
   "bleach/conda-forge/noarch/bleach-3.1.0-py_0"
  ],
  "boto3": [
   "boto3/conda-forge/noarch/boto3-1.13.1-pyh9f0ad1d_0"
  ],
  "cachelib": [
   "cachelib/conda-forge/noarch/cachelib-0.1.1-pyh9f0ad1d_0"
  ],
  "calendar": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "celery": [
   "celery/conda-forge/noarch/celery-4.4.0rc1-py_0"
  ],
  "check": [],
  "check_perms": [],
  "class_": [],
  "clean_fulfilled_requests": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "colorama": [
   "colorama/conda-forge/noarch/colorama-0.4.4-pyh9f0ad1d_0"
  ],
  "compute_generic_thumbnail": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "contextlib2": [
   "contextlib2/conda-forge/noarch/contextlib2-21.6.0-pyhd8ed1ab_0"
  ],
  "convert_to_hive_type": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cron_descriptor": [
   "cron-descriptor/conda-forge/noarch/cron-descriptor-1.2.24-pyhd8ed1ab_0"
  ],
  "croniter": [
   "croniter/conda-forge/noarch/croniter-0.3.35-pyh9f0ad1d_0"
  ],
  "cryptography": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "dataclasses": [
   "dataclasses/conda-forge/noarch/dataclasses-0.8-pyh787bdff_0",
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "decimal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "deser": [],
  "dict": [],
  "direction": [],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "driver_class": [],
  "email": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "errno": [],
  "es": [
   "elasticsearch-dbapi/conda-forge/noarch/elasticsearch-dbapi-0.2.3-pyhd8ed1ab_0"
  ],
  "event_logger_type": [],
  "f": [],
  "fbprophet": [],
  "filter": [],
  "find_cycle": [],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "flask_app_mutator": [],
  "flask_appbuilder": [
   "flask-appbuilder/conda-forge/noarch/flask-appbuilder-2.1.12-py_0"
  ],
  "flask_babel": [
   "flask-babel/conda-forge/noarch/flask-babel-1.0.0-py_0"
  ],
  "flask_caching": [
   "flask-caching/conda-forge/noarch/flask-caching-1.7.1-py_0"
  ],
  "flask_compress": [
   "flask-compress/conda-forge/noarch/flask-compress-1.10.0-pyhd8ed1ab_0"
  ],
  "flask_cors": [
   "flask-cors/conda-forge/noarch/flask-cors-3.0.10-pyhd8ed1ab_0",
   "flask_cors/conda-forge/noarch/flask_cors-3.0.9-pyh9f0ad1d_0"
  ],
  "flask_login": [
   "flask-login/conda-forge/noarch/flask-login-0.5.0-pyh9f0ad1d_0"
  ],
  "flask_migrate": [
   "flask-migrate/conda-forge/noarch/flask-migrate-3.0.1-pyhd8ed1ab_0"
  ],
  "flask_sqlalchemy": [
   "flask-sqlalchemy/conda-forge/noarch/flask-sqlalchemy-2.4.3-pyh9f0ad1d_0"
  ],
  "flask_talisman": [
   "flask-talisman/conda-forge/noarch/flask-talisman-0.7.0-py_0"
  ],
  "flask_wtf": [
   "flask-wtf/conda-forge/noarch/flask-wtf-0.14.2-py_1"
  ],
  "fn": [],
  "format_seconds": [],
  "formatter": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "geohash": [],
  "geopy": [
   "geopy/conda-forge/noarch/geopy-1.15.0-py_0"
  ],
  "get_datasource_label": [],
  "get_files": [],
  "get_filter_key": [],
  "google": [],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "handle_single_value": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "helpers": [],
  "holidays": [
   "holidays/conda-forge/noarch/holidays-0.10.2-pyh9f0ad1d_0"
  ],
  "humanize": [
   "humanize/conda-forge/noarch/humanize-2.4.1-py_0"
  ],
  "imp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "import_simple_obj": [],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "isodate": [
   "isodate/conda-forge/noarch/isodate-0.6.0-py_1"
  ],
  "itertools": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.10-py_1"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "jwt": [
   "pyjwt/conda-forge/noarch/pyjwt-1.6.3-py_0"
  ],
  "key": [],
  "log": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "markdown": [
   "markdown/conda-forge/noarch/markdown-3.3.1-pyh9f0ad1d_0"
  ],
  "markupsafe": [],
  "marshmallow": [
   "marshmallow/conda-forge/noarch/marshmallow-2.13.1-py_1",
   "toastedmarshmallow/conda-forge/noarch/toastedmarshmallow-0.2.6-py_0"
  ],
  "marshmallow_enum": [
   "marshmallow-enum/conda-forge/noarch/marshmallow-enum-1.5.1-pyh9f0ad1d_3"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "merge_pv": [],
  "middleware": [],
  "msgpack": [
   "msgpack-python/conda-forge/linux-64/msgpack-python-0.5.6-py27h2d50403_3"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "needs_conversion": [],
  "new_exception": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object_ref": [],
  "on_error": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pandas_gbq": [
   "pandas-gbq/conda-forge/noarch/pandas-gbq-0.6.1-py_0"
  ],
  "parsedatetime": [
   "parsedatetime/conda-forge/noarch/parsedatetime-2.6-pyh9f0ad1d_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pathlib2": [
   "pathlib2/conda-forge/linux-64/pathlib2-2.3.5-py36h5fab9bb_3"
  ],
  "pgsanity": [],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "pkgutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "plugin": [],
  "polyline": [
   "polyline/conda-forge/noarch/polyline-1.4.0-py_0"
  ],
  "postgres": [],
  "presto_db": [],
  "pyarrow": [
   "pyarrow/conda-forge/linux-64/pyarrow-0.11.0-py36hfc679d8_0",
   "pyarrow/conda-forge/linux-64/pyarrow-0.17.1-py36h57d41e7_33_cpu",
   "pyarrow/conda-forge/linux-64/pyarrow-1.0.1-py37he2832ee_38_cpu"
  ],
  "pydruid": [
   "pydruid/conda-forge/noarch/pydruid-0.4.3-py_0"
  ],
  "pyhive": [
   "pyhive/conda-forge/noarch/pyhive-0.6.3-pyhd3deb0d_0"
  ],
  "pyparsing": [
   "pyparsing/conda-forge/noarch/pyparsing-2.4.3-py_0"
  ],
  "pytz": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pytz/conda-forge/noarch/pytz-2018.4-py_0"
  ],
  "quartile1": [],
  "quartile3": [],
  "query_cost_formatter": [],
  "quote": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "redis": [
   "redis-py/conda-forge/noarch/redis-py-3.2.1-py_0"
  ],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "result_func": [],
  "retry": [
   "retry/conda-forge/noarch/retry-0.9.2-py_0"
  ],
  "selenium": [],
  "session_class": [],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "simplejson": [
   "simplejson/conda-forge/linux-64/simplejson-3.16.0-py36h14c3975_1002"
  ],
  "slack": [
   "slack-sdk/conda-forge/noarch/slack-sdk-3.4.1-pyhd8ed1ab_0",
   "slack_sdk/conda-forge/noarch/slack_sdk-3.5.0-pyhd8ed1ab_0"
  ],
  "slice": [],
  "smtplib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sql_query_mutator": [],
  "sqla_type": [],
  "sqlalchemy": [
   "sqlalchemy/conda-forge/linux-64/sqlalchemy-1.3.15-py36h8c4c3a4_1"
  ],
  "sqlalchemy_utils": [
   "sqlalchemy-utils/conda-forge/noarch/sqlalchemy-utils-0.36.8-pyhd3deb0d_0"
  ],
  "sqlparse": [
   "sqlparse/conda-forge/noarch/sqlparse-0.4.0-pyh9f0ad1d_0"
  ],
  "state_cls": [],
  "statsd": [
   "statsd/conda-forge/noarch/statsd-3.2.2-py_1"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "superset": [],
  "superset_config": [],
  "sys": [],
  "tableschema": [
   "tableschema-py/conda-forge/noarch/tableschema-py-1.0.3-py_0",
   "tableschema/conda-forge/noarch/tableschema-1.3.3-py_0"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "template_processor": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "threading": [],
  "thrift": [
   "hive-thrift-py/conda-forge/noarch/hive-thrift-py-0.0.1-py_1",
   "python-awips/conda-forge/noarch/python-awips-18.1.2-py_0",
   "thrift/conda-forge/linux-64/thrift-0.13.0-py38h709712a_2"
  ],
  "time": [],
  "timeit": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "to_lower": [],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "trigger_celery": [],
  "type_validator": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing_extensions": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "typing_extensions/conda-forge/noarch/typing_extensions-3.7.4.3-py_0"
  ],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib3": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "urllib3/conda-forge/noarch/urllib3-1.26.5-pyhd8ed1ab_0"
  ],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "validate": [
   "configobj/conda-forge/noarch/configobj-5.0.6-py_0"
  ],
  "version": [
   "telegram-send/conda-forge/noarch/telegram-send-0.25-py_0"
  ],
  "visit": [],
  "viz_class": [],
  "vstringify": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-1.0.0-py_0"
  ],
  "whisker_high": [],
  "whisker_low": [],
  "wtforms": [
   "wtforms/conda-forge/noarch/wtforms-2.3.2-pyh9f0ad1d_0"
  ],
  "wtforms_json": [
   "wtforms-json/conda-forge/noarch/wtforms-json-0.3.3-py_0"
  ],
  "xlrd": [
   "xlrd/conda-forge/noarch/xlrd-1.2.0-pyh9f0ad1d_1"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "pyyaml/conda-forge/linux-64/pyyaml-5.4.1-py36h70b1f00_0"
  ],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "zlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}