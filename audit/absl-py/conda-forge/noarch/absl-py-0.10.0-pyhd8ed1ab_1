{
 "bad": [
  "CheckEqual",
  "CheckOrder",
  "Repr",
  "Sorted",
  "_FlagAlias",
  "__name__.count",
  "_run_init.done",
  "absl._collections_abc.abc.Hashable",
  "absl._collections_abc.abc.Iterable",
  "absl._collections_abc.abc.Mapping",
  "absl._collections_abc.abc.Sequence",
  "absl._collections_abc.abc.Set",
  "absl._collections_abc.abc.Sized",
  "absl._enum_module.enum.Enum",
  "absl.app.EXCEPTION_HANDLERS",
  "absl.app.Error",
  "absl.app.ExceptionHandler",
  "absl.app.FLAGS",
  "absl.app.HelpFlag",
  "absl.app.HelpXMLFlag",
  "absl.app.HelpfullFlag",
  "absl.app.HelpshortFlag",
  "absl.app.UsageError",
  "absl.app._call_exception_handlers",
  "absl.app._define_help_flags_called",
  "absl.app._init_callbacks",
  "absl.app._register_and_parse_flags_with_usage",
  "absl.app._run_init",
  "absl.app._run_main",
  "absl.app.define_help_flags",
  "absl.app.faulthandler",
  "absl.app.parse_flags_with_usage",
  "absl.app.run",
  "absl.app.usage",
  "absl.command_name.make_process_name_useful",
  "absl.command_name.set_kernel_process_name",
  "absl.flags.ArgumentParser",
  "absl.flags.ArgumentSerializer",
  "absl.flags.BooleanFlag",
  "absl.flags.DEFINE_alias",
  "absl.flags.DEFINE_boolean",
  "absl.flags.DEFINE_flag",
  "absl.flags.DEFINE_integer",
  "absl.flags.DEFINE_string",
  "absl.flags.Error",
  "absl.flags.FLAGS",
  "absl.flags.FLAGS.write_help_in_xml_format",
  "absl.flags.Flag",
  "absl.flags.FlagValues",
  "absl.flags.IllegalFlagValueError",
  "absl.flags.IntegerParser",
  "absl.flags._argument_parser.ArgumentParser",
  "absl.flags._argument_parser.ArgumentSerializer",
  "absl.flags._argument_parser.BaseListParser",
  "absl.flags._argument_parser.BooleanParser",
  "absl.flags._argument_parser.CsvListSerializer",
  "absl.flags._argument_parser.EnumClassListSerializer",
  "absl.flags._argument_parser.EnumClassParser",
  "absl.flags._argument_parser.EnumClassSerializer",
  "absl.flags._argument_parser.EnumParser",
  "absl.flags._argument_parser.FloatParser",
  "absl.flags._argument_parser.IntegerParser",
  "absl.flags._argument_parser.ListParser",
  "absl.flags._argument_parser.ListSerializer",
  "absl.flags._argument_parser.NumericParser",
  "absl.flags._argument_parser.WhitespaceSeparatedListParser",
  "absl.flags._argument_parser._ArgumentParserCache",
  "absl.flags._argument_parser._is_integer_type",
  "absl.flags._defines.DEFINE",
  "absl.flags._defines.DEFINE_alias",
  "absl.flags._defines.DEFINE_boolean",
  "absl.flags._defines.DEFINE_enum",
  "absl.flags._defines.DEFINE_enum_class",
  "absl.flags._defines.DEFINE_flag",
  "absl.flags._defines.DEFINE_float",
  "absl.flags._defines.DEFINE_integer",
  "absl.flags._defines.DEFINE_list",
  "absl.flags._defines.DEFINE_multi",
  "absl.flags._defines.DEFINE_multi_enum",
  "absl.flags._defines.DEFINE_multi_enum_class",
  "absl.flags._defines.DEFINE_multi_float",
  "absl.flags._defines.DEFINE_multi_integer",
  "absl.flags._defines.DEFINE_multi_string",
  "absl.flags._defines.DEFINE_spaceseplist",
  "absl.flags._defines.DEFINE_string",
  "absl.flags._defines._internal_declare_key_flags",
  "absl.flags._defines._register_bounds_validator_if_needed",
  "absl.flags._defines.adopt_module_key_flags",
  "absl.flags._defines.declare_key_flag",
  "absl.flags._defines.disclaim_key_flags",
  "absl.flags._exceptions.CantOpenFlagFileError",
  "absl.flags._exceptions.DuplicateFlagError",
  "absl.flags._exceptions.DuplicateFlagError.from_flag",
  "absl.flags._exceptions.Error",
  "absl.flags._exceptions.FlagNameConflictsWithMethodError",
  "absl.flags._exceptions.IllegalFlagValueError",
  "absl.flags._exceptions.UnparsedFlagAccessError",
  "absl.flags._exceptions.UnrecognizedFlagError",
  "absl.flags._exceptions.ValidationError",
  "absl.flags._flag.BooleanFlag",
  "absl.flags._flag.EnumClassFlag",
  "absl.flags._flag.EnumFlag",
  "absl.flags._flag.Flag",
  "absl.flags._flag.MultiEnumClassFlag",
  "absl.flags._flag.MultiFlag",
  "absl.flags._flagvalues.FLAGS",
  "absl.flags._flagvalues.FlagHolder",
  "absl.flags._flagvalues.FlagValues",
  "absl.flags._flagvalues._Base",
  "absl.flags._flagvalues._T",
  "absl.flags._flagvalues.typing",
  "absl.flags._helpers.FLAGS_MODULE",
  "absl.flags._helpers.SPECIAL_FLAGS",
  "absl.flags._helpers.SPECIAL_FLAGS._flags",
  "absl.flags._helpers.SPECIAL_FLAGS.name",
  "absl.flags._helpers._DEFAULT_HELP_WIDTH",
  "absl.flags._helpers._ILLEGAL_XML_CHARS_REGEX",
  "absl.flags._helpers._MIN_HELP_WIDTH",
  "absl.flags._helpers._ModuleObjectAndName",
  "absl.flags._helpers._SUGGESTION_ERROR_RATE_THRESHOLD",
  "absl.flags._helpers._damerau_levenshtein",
  "absl.flags._helpers.create_xml_dom_element",
  "absl.flags._helpers.disclaim_module_ids",
  "absl.flags._helpers.disclaim_module_ids.add",
  "absl.flags._helpers.doc_to_help",
  "absl.flags._helpers.fcntl",
  "absl.flags._helpers.flag_dict_to_args",
  "absl.flags._helpers.get_calling_module",
  "absl.flags._helpers.get_calling_module_object_and_name",
  "absl.flags._helpers.get_flag_suggestions",
  "absl.flags._helpers.get_help_width",
  "absl.flags._helpers.get_module_object_and_name",
  "absl.flags._helpers.is_bytes_or_string",
  "absl.flags._helpers.str_or_unicode",
  "absl.flags._helpers.termios",
  "absl.flags._helpers.text_wrap",
  "absl.flags._helpers.trim_docstring",
  "absl.flags._validators.MultiFlagsValidator",
  "absl.flags._validators.SingleFlagValidator",
  "absl.flags._validators.Validator",
  "absl.flags._validators._add_validator",
  "absl.flags._validators.mark_bool_flags_as_mutual_exclusive",
  "absl.flags._validators.mark_flag_as_required",
  "absl.flags._validators.mark_flags_as_mutual_exclusive",
  "absl.flags._validators.mark_flags_as_required",
  "absl.flags._validators.multi_flags_validator",
  "absl.flags._validators.register_multi_flags_validator",
  "absl.flags._validators.register_validator",
  "absl.flags._validators.validator",
  "absl.flags.argparse_flags.ArgumentParser",
  "absl.flags.argparse_flags._BUILT_IN_FLAGS",
  "absl.flags.argparse_flags._BooleanFlagAction",
  "absl.flags.argparse_flags._FlagAction",
  "absl.flags.argparse_flags._HelpFullAction",
  "absl.flags.argparse_flags._is_undefok",
  "absl.flags.argparse_flags._strip_undefok_args",
  "absl.flags.text_wrap",
  "absl.logging.ABSLHandler",
  "absl.logging.ABSLLogger",
  "absl.logging.DEBUG",
  "absl.logging.ERROR",
  "absl.logging.FATAL",
  "absl.logging.FLAGS",
  "absl.logging.INFO",
  "absl.logging.PythonFormatter",
  "absl.logging.PythonHandler",
  "absl.logging.WARNING",
  "absl.logging._ABSL_LOG_FATAL",
  "absl.logging._CPP_LEVEL_TO_NAMES",
  "absl.logging._CPP_NAME_TO_LEVELS",
  "absl.logging._CRITICAL_PREFIX",
  "absl.logging._LOGGING_FILE_PREFIX",
  "absl.logging._LoggerLevelsFlag",
  "absl.logging._LoggerLevelsParser",
  "absl.logging._LoggerLevelsSerializer",
  "absl.logging._StderrthresholdFlag",
  "absl.logging._THREAD_ID_MASK",
  "absl.logging._VerbosityFlag",
  "absl.logging._absl_handler",
  "absl.logging._absl_logger",
  "absl.logging._attempted_to_remove_stderr_stream_handlers",
  "absl.logging._get_next_log_count_per_token",
  "absl.logging._get_thread_id",
  "absl.logging._initialize",
  "absl.logging._is_absl_fatal_record",
  "absl.logging._is_non_absl_fatal_record",
  "absl.logging._log_counter_per_token",
  "absl.logging._log_timer_per_token",
  "absl.logging._seconds_have_elapsed",
  "absl.logging._warn_preinit_stderr",
  "absl.logging.converter.ABSL_DEBUG",
  "absl.logging.converter.ABSL_ERROR",
  "absl.logging.converter.ABSL_FATAL",
  "absl.logging.converter.ABSL_INFO",
  "absl.logging.converter.ABSL_LEVELS",
  "absl.logging.converter.ABSL_NAMES",
  "absl.logging.converter.ABSL_TO_STANDARD",
  "absl.logging.converter.ABSL_WARNING",
  "absl.logging.converter.STANDARD_CRITICAL",
  "absl.logging.converter.STANDARD_DEBUG",
  "absl.logging.converter.STANDARD_ERROR",
  "absl.logging.converter.STANDARD_INFO",
  "absl.logging.converter.STANDARD_WARNING",
  "absl.logging.converter.absl_to_cpp",
  "absl.logging.converter.absl_to_standard",
  "absl.logging.converter.get_initial_for_level",
  "absl.logging.converter.standard_to_absl",
  "absl.logging.converter.string_to_standard",
  "absl.logging.error",
  "absl.logging.find_log_dir",
  "absl.logging.find_log_dir_and_names",
  "absl.logging.get_absl_handler",
  "absl.logging.get_absl_log_prefix",
  "absl.logging.get_absl_logger",
  "absl.logging.get_verbosity",
  "absl.logging.info",
  "absl.logging.level_warning",
  "absl.logging.log",
  "absl.logging.log_if",
  "absl.logging.os",
  "absl.logging.use_absl_handler",
  "absl.logging.warning",
  "absl.testing._bazel_selected_py3",
  "absl.testing._bazelize_command.FLAGS",
  "absl.testing._parameterized_async",
  "absl.testing._parameterized_async.async_wrapped",
  "absl.testing._parameterized_async.iscoroutinefunction",
  "absl.testing._pretty_print_reporter.TextTestResult",
  "absl.testing._pretty_print_reporter.TextTestRunner",
  "absl.testing.absltest.FLAGS",
  "absl.testing.absltest.TempFileCleanup",
  "absl.testing.absltest.TestCase",
  "absl.testing.absltest.TestLoader",
  "absl.testing.absltest._SavedFlag",
  "absl.testing.absltest._TEXT_OR_BINARY_TYPES",
  "absl.testing.absltest._TempDir",
  "absl.testing.absltest._TempFile",
  "absl.testing.absltest._are_both_of_integer_type",
  "absl.testing.absltest._are_both_of_mapping_type",
  "absl.testing.absltest._are_both_of_sequence_type",
  "absl.testing.absltest._are_both_of_set_type",
  "absl.testing.absltest._get_default_randomize_ordering_seed",
  "absl.testing.absltest._get_default_test_random_seed",
  "absl.testing.absltest._get_first_part",
  "absl.testing.absltest._get_qualname",
  "absl.testing.absltest._is_in_app_main",
  "absl.testing.absltest._is_suspicious_attribute",
  "absl.testing.absltest._makedirs_exist_ok",
  "absl.testing.absltest._monkey_patch_test_result_for_unexpected_passes",
  "absl.testing.absltest._open",
  "absl.testing.absltest._quote_long_string",
  "absl.testing.absltest._register_sigterm_with_faulthandler",
  "absl.testing.absltest._rmtree_ignore_errors",
  "absl.testing.absltest._run_and_get_tests_result",
  "absl.testing.absltest._run_in_app",
  "absl.testing.absltest._setup_filtering",
  "absl.testing.absltest._setup_sharding",
  "absl.testing.absltest._setup_test_runner_fail_fast",
  "absl.testing.absltest._sorted_list_difference",
  "absl.testing.absltest._walk_structure_for_problems",
  "absl.testing.absltest.contextlib",
  "absl.testing.absltest.faulthandler",
  "absl.testing.absltest.get_command_stderr",
  "absl.testing.absltest.get_command_string",
  "absl.testing.absltest.get_default_test_srcdir",
  "absl.testing.absltest.get_default_test_tmpdir",
  "absl.testing.absltest.get_default_xml_output_filename",
  "absl.testing.absltest.print_python_version",
  "absl.testing.flagsaver.FLAGS",
  "absl.testing.flagsaver._FlagOverrider",
  "absl.testing.flagsaver._copy_flag_dict",
  "absl.testing.flagsaver._wrap",
  "absl.testing.flagsaver.restore_flag_values",
  "absl.testing.flagsaver.save_flag_values",
  "absl.testing.parameterized.DuplicateTestNameError",
  "absl.testing.parameterized.NoTestsError",
  "absl.testing.parameterized.TestCase",
  "absl.testing.parameterized.TestGeneratorMetaclass",
  "absl.testing.parameterized._ADDR_RE",
  "absl.testing.parameterized._ARGUMENT_REPR",
  "absl.testing.parameterized._NAMED",
  "absl.testing.parameterized._NAMED_DICT_KEY",
  "absl.testing.parameterized._ParameterizedTestIter",
  "absl.testing.parameterized._clean_repr",
  "absl.testing.parameterized._format_parameter_list",
  "absl.testing.parameterized._modify_class",
  "absl.testing.parameterized._non_string_or_bytes_iterable",
  "absl.testing.parameterized._parameter_decorator",
  "absl.testing.parameterized._update_class_dict_for_param_test_case",
  "absl.testing.xml_reporter.TextAndXMLTestRunner",
  "absl.testing.xml_reporter._CLASS_OR_MODULE_LEVEL_TEST_DESC_REGEX",
  "absl.testing.xml_reporter._TestCaseResult",
  "absl.testing.xml_reporter._TestSuiteResult",
  "absl.testing.xml_reporter._TextAndXMLTestResult",
  "absl.testing.xml_reporter._bad_control_character_codes",
  "absl.testing.xml_reporter._control_character_conversions",
  "absl.testing.xml_reporter._escape_cdata",
  "absl.testing.xml_reporter._escape_xml_attr",
  "absl.testing.xml_reporter._escape_xml_attr_conversions",
  "absl.testing.xml_reporter._iso8601_timestamp",
  "absl.testing.xml_reporter._print_xml_element_header",
  "absl.testing.xml_reporter._safe_str",
  "absl.testing.xml_reporter._time_copy",
  "absl.testing.xml_reporter.traceback",
  "absl.third_party.unittest3_backport.TestCase",
  "absl.third_party.unittest3_backport.TextTestResult",
  "absl.third_party.unittest3_backport.case.TestCase",
  "absl.third_party.unittest3_backport.case._Outcome",
  "absl.third_party.unittest3_backport.case._ShouldStop",
  "absl.third_party.unittest3_backport.case._SubTest",
  "absl.third_party.unittest3_backport.case._subtest_msg_sentinel",
  "addExpectedFailure",
  "addSkip",
  "addUnexpectedSuccess",
  "argparse.Action",
  "argparse.ArgumentParser",
  "argparse.SUPPRESS",
  "atexit.register",
  "cProfile.Profile",
  "callback",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.deque",
  "collections.namedtuple",
  "contextlib.ExitStack",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "csv.Error",
  "csv.reader",
  "csv.writer",
  "ctypes.CDLL",
  "ctypes.c_ulong",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.utcfromtimestamp",
  "datetime.timezone.utc",
  "delegate_get_names",
  "difflib.ndiff",
  "distance",
  "enum.Enum",
  "errno.EEXIST",
  "errno.EPIPE",
  "func",
  "function",
  "functools.total_ordering",
  "functools.wraps",
  "get_value",
  "getpass.getuser",
  "inspect.getargspec",
  "inspect.getfullargspec",
  "inspect.isclass",
  "inspect.iscoroutinefunction",
  "inspect.isfunction",
  "inspect.ismethod",
  "io.BytesIO",
  "io.StringIO",
  "io.open",
  "itertools.chain",
  "itertools.count",
  "itertools.cycle",
  "itertools.product",
  "json.loads",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.FATAL",
  "logging.Formatter",
  "logging.Handler",
  "logging.INFO",
  "logging.NOTSET",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.WARNING",
  "logging.basicConfig",
  "logging.error",
  "logging.getLogger",
  "logging.getLoggerClass",
  "logging.info",
  "logging.root.addHandler",
  "logging.root.handlers",
  "logging.root.removeHandler",
  "logging.root.setLevel",
  "logging.setLoggerClass",
  "make_bound_param_test",
  "metaclass",
  "object.__new__",
  "os.W_OK",
  "os.abort",
  "os.access",
  "os.chmod",
  "os.close",
  "os.environ",
  "os.environ.get",
  "os.getenv",
  "os.getpid",
  "os.getuid",
  "os.makedirs",
  "os.name",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.splitext",
  "os.sep",
  "os.stat",
  "os.symlink",
  "os.unlink",
  "pdb.post_mortem",
  "pdb.runcall",
  "predicate",
  "random.Random",
  "re.M",
  "re.MULTILINE",
  "re.compile",
  "re.search",
  "re.sub",
  "retired_flag_func",
  "safe_repr",
  "setter",
  "shlex.split",
  "shutil.rmtree",
  "signal.SIGTERM",
  "six.PY2",
  "six.PY3",
  "six.StringIO",
  "six.add_metaclass",
  "six.binary_type",
  "six.get_function_code",
  "six.integer_types",
  "six.iteritems",
  "six.itervalues",
  "six.moves.range",
  "six.moves.urllib.parse.parse_qs",
  "six.moves.urllib.parse.urlparse",
  "six.moves.xrange",
  "six.string_types",
  "six.text_type",
  "six.with_metaclass",
  "socket.gethostname",
  "startTestRun",
  "stat.S_IWUSR",
  "stopTestRun",
  "string.whitespace",
  "struct.calcsize",
  "struct.error",
  "struct.unpack",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "sys.__stderr__",
  "sys.__stdout__",
  "sys._getframe",
  "sys.argv",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.getrecursionlimit",
  "sys.modules",
  "sys.modules.__doc__",
  "sys.modules.get",
  "sys.path",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdout",
  "sys.stdout.isatty",
  "sys.version_info",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "testMethod",
  "test_method",
  "test_method.__doc__",
  "textwrap.TextWrapper",
  "textwrap.dedent",
  "threading.RLock",
  "threading.get_ident",
  "time.localtime",
  "time.strftime",
  "time.time",
  "timeit.default_timer",
  "traceback._some_str",
  "traceback.format_exc",
  "traceback.format_exception",
  "traceback.print_exc",
  "traceback.print_stack",
  "type.__call__",
  "type.__new__",
  "types.FunctionType",
  "types.GeneratorType",
  "types.ModuleType",
  "typing.TYPE_CHECKING",
  "typing.TypeVar",
  "unicode",
  "unittest.FunctionTestCase",
  "unittest.SkipTest",
  "unittest.TestCase",
  "unittest.TestLoader",
  "unittest.TestLoader.testMethodPrefix",
  "unittest.TestProgram",
  "unittest.TestResult",
  "unittest.TestResult.wasSuccessful",
  "unittest.TextTestResult",
  "unittest.TextTestRunner",
  "unittest.case._ExpectedFailure",
  "unittest.case._Outcome",
  "unittest.case._SubTest",
  "unittest.case._UnexpectedSuccess",
  "unittest.expectedFailure",
  "unittest.mock",
  "unittest.skip",
  "unittest.skipIf",
  "unittest.skipUnless",
  "unittest.util.safe_repr",
  "unittest.util.strclass",
  "warnings.warn",
  "xml.dom.minidom.Document",
  "xml.sax.saxutils.escape"
 ],
 "deps": {
  "CheckEqual": [],
  "CheckOrder": [],
  "Repr": [],
  "Sorted": [],
  "_FlagAlias": [],
  "__name__": [],
  "_run_init": [],
  "absl": [],
  "addExpectedFailure": [],
  "addSkip": [],
  "addUnexpectedSuccess": [],
  "argparse": [],
  "atexit": [],
  "cProfile": [],
  "callback": [],
  "collections": [],
  "contextlib": [],
  "copy": [],
  "csv": [],
  "ctypes": [],
  "datetime": [],
  "delegate_get_names": [],
  "difflib": [],
  "distance": [],
  "enum": [],
  "errno": [],
  "func": [],
  "function": [],
  "functools": [],
  "get_value": [],
  "getpass": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "logging": [],
  "make_bound_param_test": [],
  "metaclass": [],
  "object": [],
  "os": [],
  "pdb": [],
  "predicate": [],
  "random": [],
  "re": [],
  "retired_flag_func": [],
  "safe_repr": [],
  "setter": [],
  "shlex": [],
  "shutil": [],
  "signal": [],
  "six": [],
  "socket": [],
  "startTestRun": [],
  "stat": [],
  "stopTestRun": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "tempfile": [],
  "testMethod": [],
  "test_method": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "timeit": [],
  "traceback": [],
  "type": [],
  "types": [],
  "typing": [],
  "unicode": [],
  "unittest": [],
  "warnings": [],
  "xml": []
 }
}