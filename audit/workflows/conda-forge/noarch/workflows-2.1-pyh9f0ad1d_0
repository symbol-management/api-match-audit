{
 "bad": [
  "Comparator",
  "CrashOnInitService",
  "EnvironmentPassingService",
  "LogAdapter",
  "NameChangingService",
  "QueueListenerThread",
  "RecipeA",
  "SafeDict",
  "SafeString",
  "UnstableService",
  "_recursive_apply",
  "argparse.Action",
  "argparse.ArgumentParser",
  "callback",
  "configparser.ConfigParser",
  "configparser.NoOptionError",
  "contextlib.contextmanager",
  "copy.deepcopy",
  "crashfunction",
  "curses.A_BOLD",
  "curses.COLOR_BLACK",
  "curses.COLOR_GREEN",
  "curses.COLOR_RED",
  "curses.COLS",
  "curses.color_pair",
  "curses.curs_set",
  "curses.doupdate",
  "curses.init_pair",
  "curses.newwin",
  "curses.use_default_colors",
  "curses.wrapper",
  "downstream_message",
  "enum.Enum",
  "enum.IntEnum",
  "find_cycles",
  "flatten_links",
  "fn",
  "frontend_with_message",
  "handler",
  "imp.reload",
  "inspect.isclass",
  "itertools.count",
  "json.JSONDecodeError",
  "json.dumps",
  "json.loads",
  "linecache.checkcache",
  "linecache.getline",
  "log_extender",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.Handler",
  "logging.INFO",
  "logging.LogRecord",
  "logging.Logger.manager.loggerDict.keys",
  "logging.LoggerAdapter",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.error",
  "logging.exception",
  "logging.getLogger",
  "message_handler",
  "mock.ANY",
  "mock.MagicMock",
  "mock.Mock",
  "mock.call",
  "mock.call.broadcast",
  "mock.call.send",
  "mock.create_autospec",
  "mock.patch",
  "mock.patch.object",
  "mock.sentinel.GUID",
  "mock.sentinel.ID",
  "mock.sentinel.NA",
  "mock.sentinel.ack",
  "mock.sentinel.another_message_text",
  "mock.sentinel.band",
  "mock.sentinel.channel",
  "mock.sentinel.channel1",
  "mock.sentinel.channel2",
  "mock.sentinel.channel3",
  "mock.sentinel.checkpoint",
  "mock.sentinel.command",
  "mock.sentinel.crash",
  "mock.sentinel.destination",
  "mock.sentinel.different_host",
  "mock.sentinel.different_service",
  "mock.sentinel.environment",
  "mock.sentinel.exclusive",
  "mock.sentinel.expiration",
  "mock.sentinel.failure1",
  "mock.sentinel.failure2",
  "mock.sentinel.header",
  "mock.sentinel.headers",
  "mock.sentinel.idle_time",
  "mock.sentinel.initial_parameter",
  "mock.sentinel.irrelevant_extra_arg",
  "mock.sentinel.keyword_arg",
  "mock.sentinel.logmessage",
  "mock.sentinel.message",
  "mock.sentinel.message1",
  "mock.sentinel.message2",
  "mock.sentinel.message3",
  "mock.sentinel.message_id",
  "mock.sentinel.message_id1",
  "mock.sentinel.message_id2",
  "mock.sentinel.message_id3",
  "mock.sentinel.message_id4",
  "mock.sentinel.message_id5",
  "mock.sentinel.message_id6",
  "mock.sentinel.message_text",
  "mock.sentinel.messageid",
  "mock.sentinel.msg1",
  "mock.sentinel.msg2",
  "mock.sentinel.newname",
  "mock.sentinel.payload",
  "mock.sentinel.recipe",
  "mock.sentinel.recipe_pointer",
  "mock.sentinel.retro",
  "mock.sentinel.selector",
  "mock.sentinel.something",
  "mock.sentinel.source",
  "mock.sentinel.status",
  "mock.sentinel.subid",
  "mock.sentinel.subscription_id1",
  "mock.sentinel.subscription_id2",
  "mock.sentinel.subscription_id3",
  "mock.sentinel.subscription_id4",
  "mock.sentinel.subscription_id5",
  "mock.sentinel.subscription_id6",
  "mock.sentinel.test_default_named_output",
  "mock.sentinel.test_default_output",
  "mock.sentinel.test_unnamed_output",
  "mock.sentinel.timestamp",
  "mock.sentinel.trace",
  "mock.sentinel.transaction",
  "mock.sentinel.transformation",
  "mock.sentinel.transport",
  "mock.sentinel.txid",
  "mock.sentinel.txn",
  "mock.sentinel.undeserializable",
  "mock.sentinel.unnamed_output",
  "mock.sentinel.unnamed_output_with_default_name",
  "mock.sentinel.unserializable",
  "mock.sentinel.user",
  "mock.sentinel.version",
  "multiprocessing.Pipe",
  "multiprocessing.Process",
  "optparse.OptionParser",
  "optparse.SUPPRESS_HELP",
  "original_status_update_fn",
  "os.getpid",
  "os.path.basename",
  "os.remove",
  "pkg_resources.iter_entry_points",
  "pprint.pprint",
  "processor",
  "pytest.mark.parametrize",
  "pytest.mark.timeout",
  "pytest.raises",
  "queue.Empty",
  "queue.Full",
  "queue.PriorityQueue",
  "random.uniform",
  "run_method",
  "socket.gethostname",
  "status_fn",
  "stomp",
  "stomp.Connection",
  "stomp._ack",
  "stomp._broadcast",
  "stomp._nack",
  "stomp._send",
  "stomp._subscribe",
  "stomp._subscribe_broadcast",
  "stomp._transaction_abort",
  "stomp._transaction_begin",
  "stomp._transaction_commit",
  "stomp._unsubscribe",
  "stomp.add_command_line_options",
  "stomp.broadcast",
  "stomp.broadcast_status",
  "stomp.connect",
  "stomp.disconnect",
  "stomp.exception",
  "stomp.exception.ConnectFailedException",
  "stomp.exception.NotConnectedException",
  "stomp.get_namespace",
  "stomp.is_connected",
  "stomp.listener.ConnectionListener",
  "stomp.raw_broadcast",
  "stomp.raw_send",
  "stomp.send",
  "stomp.subscribe",
  "stomp.subscribe_broadcast",
  "stomp.subscription_callback",
  "string.Formatter",
  "sys.exc_info",
  "sys.exit",
  "target",
  "target_function",
  "tempfile.NamedTemporaryFile",
  "thread_function",
  "threading.Event",
  "threading.RLock",
  "threading.Thread",
  "time.sleep",
  "time.time",
  "translate",
  "transport",
  "true_transport_factory_call",
  "workflows.Disconnected",
  "workflows.Error",
  "workflows.__version__",
  "workflows.contrib.start_service.ServiceStarter",
  "workflows.contrib.status_monitor.Monitor",
  "workflows.contrib.status_monitor.basestring",
  "workflows.frontend.Frontend",
  "workflows.frontend.basestring",
  "workflows.frontend.test_frontend.MockPipe",
  "workflows.frontend.test_frontend.ServiceCrashingOnInit",
  "workflows.frontend.test_frontend.assert_single_call_only",
  "workflows.frontend.test_utilization.about",
  "workflows.frontend.utilization.UtilizationStatistics",
  "workflows.logging.CallbackHandler",
  "workflows.logging.get_exception_source",
  "workflows.recipe.Recipe",
  "workflows.recipe._wrap_subscription",
  "workflows.recipe.recipe.Recipe",
  "workflows.recipe.recipe.basestring",
  "workflows.recipe.recipe.string",
  "workflows.recipe.test_recipe.generate_recipes",
  "workflows.recipe.test_validate.sys",
  "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper",
  "workflows.recipe.test_wrapped_recipe.generate_recipe_message",
  "workflows.recipe.validate.main",
  "workflows.recipe.validate.validate_recipe",
  "workflows.recipe.wrap_subscribe",
  "workflows.recipe.wrap_subscribe_broadcast",
  "workflows.recipe.wrapper.RecipeWrapper",
  "workflows.services.common_service.Commands.SHUTDOWN",
  "workflows.services.common_service.CommonService",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_SHUTDOWN",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN",
  "workflows.services.common_service.CommonService.SERVICE_STATUS_TIMER",
  "workflows.services.common_service.CommonService.human_readable_state.get",
  "workflows.services.common_service.Priority",
  "workflows.services.common_service.Priority.COMMAND",
  "workflows.services.common_service.Priority.TRANSPORT",
  "workflows.services.common_service.Status",
  "workflows.services.common_service.Status.IDLE.intval",
  "workflows.services.common_service.Status.NEW.intval",
  "workflows.services.get_known_services",
  "workflows.services.lookup",
  "workflows.services.test_sample_service_transaction.setup_txnservice",
  "workflows.transport.add_command_line_options",
  "workflows.transport.common_transport.CommonTransport",
  "workflows.transport.default_transport",
  "workflows.transport.get_known_transports",
  "workflows.transport.lookup",
  "workflows.transport.stomp_transport",
  "workflows.transport.stomp_transport.StompTransport",
  "workflows.transport.stomp_transport.StompTransport.defaults",
  "workflows.util.generate_unique_host_id",
  "workflows.version"
 ],
 "deps": {
  "Comparator": [],
  "CrashOnInitService": [],
  "EnvironmentPassingService": [],
  "LogAdapter": [],
  "NameChangingService": [],
  "QueueListenerThread": [],
  "RecipeA": [],
  "SafeDict": [],
  "SafeString": [],
  "UnstableService": [],
  "_recursive_apply": [],
  "argparse": [],
  "callback": [],
  "configparser": [],
  "contextlib": [],
  "copy": [],
  "crashfunction": [],
  "curses": [],
  "downstream_message": [],
  "enum": [],
  "find_cycles": [],
  "flatten_links": [],
  "fn": [],
  "frontend_with_message": [],
  "handler": [],
  "imp": [],
  "inspect": [],
  "itertools": [],
  "json": [],
  "linecache": [],
  "log_extender": [],
  "logging": [],
  "message_handler": [],
  "mock": [],
  "multiprocessing": [],
  "optparse": [],
  "original_status_update_fn": [],
  "os": [],
  "pkg_resources": [],
  "pprint": [],
  "processor": [],
  "pytest": [],
  "queue": [],
  "random": [],
  "run_method": [],
  "socket": [],
  "status_fn": [],
  "stomp": [],
  "string": [],
  "sys": [],
  "target": [],
  "target_function": [],
  "tempfile": [],
  "thread_function": [],
  "threading": [],
  "time": [],
  "translate": [],
  "transport": [],
  "true_transport_factory_call": [],
  "workflows": []
 }
}