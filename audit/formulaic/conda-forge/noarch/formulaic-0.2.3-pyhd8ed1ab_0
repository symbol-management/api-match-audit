{
 "bad": [
  "abc.abstractmethod",
  "algos.infix_to_ast.infix_to_ast",
  "algos.tokenize.tokenize",
  "alpha",
  "ast.AST",
  "ast.Call",
  "ast.fix_missing_locations",
  "ast.keyword",
  "ast.literal_eval",
  "ast.parse",
  "ast.walk",
  "astor.to_source",
  "base.FormulaMaterializer",
  "basis_spline.basis_spline",
  "collections.OrderedDict",
  "collections.abc.Mapping",
  "collections.abc.MutableMapping",
  "collections.defaultdict",
  "collections.namedtuple",
  "encode_categorical.encode_categorical",
  "enum.Enum",
  "errors.FormulaInvalidError",
  "errors.FormulaMaterializerInvalidError",
  "f",
  "factor.Factor",
  "formula.Formula",
  "formula.Formula.from_spec",
  "formulaic.errors.DataMismatchWarning",
  "formulaic.errors.FactorEncodingError",
  "formulaic.errors.FactorEvaluationError",
  "formulaic.errors.FormulaMaterializationError",
  "formulaic.errors.FormulaMaterializerNotFoundError",
  "formulaic.errors.FormulaParsingError",
  "formulaic.errors.FormulaSyntaxError",
  "formulaic.errors.FormulaicError",
  "formulaic.errors.FormulaicWarning",
  "formulaic.formula.Formula",
  "formulaic.materializers.arrow.LazyArrowTableProxy",
  "formulaic.materializers.base.FormulaMaterializerMeta",
  "formulaic.materializers.transforms.basis_spline.SplineExtrapolation",
  "formulaic.materializers.transforms.scale.scale",
  "formulaic.materializers.types.evaluated_factor.EvaluatedFactor",
  "formulaic.materializers.types.scoped_factor.ScopedFactor",
  "formulaic.materializers.types.scoped_term.ScopedTerm",
  "formulaic.model_matrix.ModelMatrix",
  "formulaic.model_spec.ModelSpec",
  "formulaic.parser.algos.infix_to_ast.OrderedOperator",
  "formulaic.parser.algos.tokenize.tokenize",
  "formulaic.parser.parser.DefaultOperatorResolver",
  "formulaic.parser.types.Factor",
  "formulaic.parser.types.Factor.Kind",
  "formulaic.parser.types.Factor.Kind.UNKNOWN",
  "formulaic.parser.types.Term",
  "formulaic.parser.types.Token",
  "formulaic.parser.types.ast_node.ASTNode",
  "formulaic.parser.types.factor.Factor",
  "formulaic.parser.types.operator.Operator",
  "formulaic.parser.types.term.Term",
  "formulaic.parser.types.token.Token",
  "formulaic.parser.utils.__get_token_for_ast",
  "formulaic.parser.utils.__get_tokens_for_gap",
  "formulaic.parser.utils.exc_for_token",
  "formulaic.sugar.sys",
  "formulaic.utils.calculus._differentiate_factors",
  "formulaic.utils.calculus._factor_symbols",
  "formulaic.utils.layered_mapping.LayeredMapping",
  "formulaic.utils.sparse.categorical_encode_series_to_sparse_csc_matrix",
  "formulaic.utils.stateful_transforms._is_stateful_transform",
  "formulaic.utils.stateful_transforms.sanitize_variable_names",
  "formulaic.utils.stateful_transforms.stateful_eval",
  "formulaic.utils.stateful_transforms.stateful_transform",
  "func",
  "functools.reduce",
  "functools.singledispatch",
  "functools.wraps",
  "identity.identity",
  "inspect.isclass",
  "inspect.signature",
  "interface_meta.InterfaceMeta",
  "interface_meta.inherit_docs",
  "interface_meta.override",
  "itertools.chain",
  "itertools.product",
  "keyword.iskeyword",
  "layered_mapping.LayeredMapping",
  "map_dict",
  "materializer",
  "materializers.FormulaMaterializer",
  "materializers.FormulaMaterializer.for_data",
  "materializers.FormulaMaterializer.for_materializer",
  "materializers.NAAction",
  "materializers.base.FormulaMaterializer",
  "materializers.base.FormulaMaterializer.for_data",
  "materializers.base.FormulaMaterializer.for_materializer",
  "numpy.any",
  "numpy.array",
  "numpy.clip",
  "numpy.empty",
  "numpy.flatnonzero",
  "numpy.inf.astype",
  "numpy.linspace",
  "numpy.max",
  "numpy.mean",
  "numpy.min",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ones",
  "numpy.pad",
  "numpy.quantile",
  "numpy.random.choice",
  "numpy.sqrt",
  "numpy.stack",
  "numpy.sum",
  "numpy.where",
  "numpy.zeros",
  "operate",
  "operator.Operator",
  "operator.Operator.Fixity.PREFIX",
  "operator.mul",
  "pandas.Categorical",
  "pandas.CategoricalDtype",
  "pandas.DataFrame",
  "pandas.PandasMaterializer",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.get_dummies",
  "parser.FormulaParser",
  "parser.types.Term",
  "re.compile",
  "re.match",
  "re.sub",
  "scale.center",
  "scale.scale",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csc_matrix.multiply",
  "scipy.sparse.hstack",
  "scipy.sparse.spmatrix",
  "stack_operator",
  "sympy.S",
  "sys._getframe",
  "term.Term",
  "token.Token",
  "transforms.TRANSFORMS",
  "transforms.encode_categorical",
  "types.ASTNode",
  "types.EvaluatedFactor",
  "types.Factor",
  "types.NAAction.DROP",
  "types.NAAction.IGNORE",
  "types.NAAction.RAISE",
  "types.Operator",
  "types.Operator.Associativity.LEFT",
  "types.Operator.Fixity.INFIX",
  "types.Operator.Fixity.PREFIX",
  "types.OperatorResolver",
  "types.ScopedFactor",
  "types.ScopedTerm",
  "types.Term",
  "types.Token",
  "types.Token.Kind.NAME",
  "types.Token.Kind.OPERATOR",
  "types.Token.Kind.PYTHON",
  "types.Token.Kind.VALUE",
  "types.ast_node.ASTNode",
  "types.token.Token",
  "typing.Iterable",
  "typing.List",
  "typing.Optional",
  "typing.Union",
  "utils.calculus.differentiate_term",
  "utils.exc_for_missing_operator",
  "utils.exc_for_token",
  "utils.layered_mapping.LayeredMapping",
  "warnings.warn",
  "wrapped",
  "wrapper",
  "wrapper.__is_stateful_transform__",
  "wrapt.ObjectProxy",
  "wrapt.ObjectProxy.__init__"
 ],
 "deps": {
  "abc": [],
  "algos": [],
  "alpha": [],
  "ast": [],
  "astor": [],
  "base": [],
  "basis_spline": [],
  "collections": [],
  "encode_categorical": [],
  "enum": [],
  "errors": [],
  "f": [],
  "factor": [],
  "formula": [],
  "formulaic": [],
  "func": [],
  "functools": [],
  "identity": [],
  "inspect": [],
  "interface_meta": [],
  "itertools": [],
  "keyword": [],
  "layered_mapping": [],
  "map_dict": [],
  "materializer": [],
  "materializers": [],
  "numpy": [],
  "operate": [],
  "operator": [],
  "pandas": [],
  "parser": [],
  "re": [],
  "scale": [],
  "scipy": [],
  "stack_operator": [],
  "sympy": [],
  "sys": [],
  "term": [],
  "token": [],
  "transforms": [],
  "types": [],
  "typing": [],
  "utils": [],
  "warnings": [],
  "wrapped": [],
  "wrapper": [],
  "wrapt": []
 }
}