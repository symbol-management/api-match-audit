{
 "bad": [
  "NaiveOptimizer",
  "NaiveRandomOptimizer",
  "_assess_candidate",
  "_branch_iterate",
  "_optimal_iterate",
  "backends.build_expression",
  "backends.evaluate_constants",
  "backends.get_func",
  "backends.has_backend",
  "backends.has_einsum",
  "backends.has_tensordot",
  "blas.can_blas",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "concurrent.futures.ProcessPoolExecutor",
  "contextlib",
  "contextlib.contextmanager",
  "cupy",
  "cupy.asarray",
  "cupy.asnumpy",
  "cupy.build_expression",
  "cupy.evaluate_constants",
  "cupy.ndarray",
  "decimal.Decimal",
  "einsum",
  "expr",
  "expr.__repr__",
  "expr.__str__",
  "expr._evaluated_constants",
  "expr.contraction_list",
  "fn",
  "frozenset.intersection",
  "frozenset.union",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "gen",
  "gen_inner_sum",
  "grad_expr",
  "graph",
  "heapq",
  "heapq.heapify",
  "heapq.heappop",
  "heapq.heappush",
  "heapq.heappushpop",
  "helpers.compute_size_by_dict",
  "helpers.find_contraction",
  "helpers.flop_count",
  "importlib",
  "importlib.import_module",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.combinations",
  "itertools.count",
  "itertools.cycle",
  "itertools.permutations",
  "jax.build_expression",
  "jax.evaluate_constants",
  "jax_expr",
  "jit_expr",
  "json",
  "json.loads",
  "math",
  "math.exp",
  "method1",
  "method2",
  "multiprocessing.pool.ThreadPool",
  "numbers",
  "numbers.Number",
  "numpy",
  "numpy.allclose",
  "numpy.arange",
  "numpy.array",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.dot",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.full",
  "numpy.int32",
  "numpy.ndarray",
  "numpy.ndindex",
  "numpy.ones",
  "numpy.random.choice",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.seed",
  "numpy.squeeze",
  "numpy.tensordot",
  "numpy.transpose",
  "object_arrays.object_einsum",
  "operator",
  "operator.add",
  "operator.mul",
  "opt_einsum.__init__.get_versions",
  "opt_einsum.__init__.versions",
  "optimizer",
  "os",
  "os.environ",
  "parser.convert_interleaved_input",
  "parser.convert_to_valid_einsum_chars",
  "parser.find_output_shape",
  "parser.find_output_str",
  "parser.has_valid_einsum_chars_only",
  "parser.parse_einsum_input",
  "path_func",
  "path_optimizer",
  "path_random.random_greedy",
  "path_random.random_greedy_128",
  "path_type",
  "paths.PathOptimizer",
  "paths.calc_k12_flops",
  "paths.get_path_fn",
  "paths.register_path_fn",
  "paths.ssa_greedy_optimize",
  "paths.ssa_to_linear",
  "pytest",
  "pytest.approx",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.param",
  "pytest.raises",
  "random",
  "random.choices",
  "random.choices.append",
  "random.choices.pop",
  "random.gauss",
  "random.seed",
  "set.union",
  "sharing.einsum_cache_wrap",
  "sharing.tensordot_cache_wrap",
  "sharing.transpose_cache_wrap",
  "sys",
  "sys.version_info",
  "tensordot",
  "tensorflow",
  "tensorflow.ConfigProto",
  "tensorflow.Session",
  "tensorflow.Tensor",
  "tensorflow.build_expression",
  "tensorflow.contrib.eager.in_eager_mode",
  "tensorflow.convert_to_tensor",
  "tensorflow.device",
  "tensorflow.evaluate_constants",
  "tensorflow.executing_eagerly",
  "tensorflow.get_default_session",
  "tensorflow.placeholder",
  "tensorflow.test.gpu_device_name",
  "theano",
  "theano.build_expression",
  "theano.evaluate_constants",
  "theano.function",
  "theano.tensor.TensorConstant",
  "theano.tensor.TensorType",
  "theano.tensor.TensorVariable",
  "theano.tensor.constant",
  "threading",
  "threading.get_ident",
  "time",
  "time.time",
  "to_backend",
  "to_backend.__name__",
  "to_jax",
  "torch",
  "torch.Tensor",
  "torch.build_expression",
  "torch.cuda.is_available",
  "torch.einsum",
  "torch.evaluate_constants",
  "torch.from_numpy",
  "torch.tensordot",
  "transpose",
  "trial_fn",
  "weakref",
  "weakref.WeakValueDictionary"
 ],
 "deps": {
  "NaiveOptimizer": [],
  "NaiveRandomOptimizer": [],
  "_assess_candidate": [],
  "_branch_iterate": [],
  "_optimal_iterate": [],
  "autograd": [
   "autograd/conda-forge/noarch/autograd-1.2-py_1"
  ],
  "backends": [],
  "blas": [],
  "collections": [],
  "concurrent": [],
  "contextlib": [],
  "cupy": [],
  "decimal": [],
  "einsum": [],
  "expr": [],
  "fn": [],
  "frozenset": [],
  "functools": [],
  "gen": [],
  "gen_inner_sum": [],
  "grad_expr": [],
  "graph": [],
  "heapq": [],
  "helpers": [],
  "importlib": [],
  "itertools": [],
  "jax": [
   "jax/conda-forge/noarch/jax-0.1.73-py_0"
  ],
  "jax_expr": [],
  "jit_expr": [],
  "json": [],
  "math": [],
  "method1": [],
  "method2": [],
  "multiprocessing": [],
  "numbers": [],
  "numpy": [],
  "object_arrays": [],
  "operator": [],
  "opt_einsum": [],
  "optimizer": [],
  "os": [],
  "parser": [],
  "path_func": [],
  "path_optimizer": [],
  "path_random": [],
  "path_type": [],
  "paths": [],
  "pytest": [],
  "random": [],
  "set": [],
  "sharing": [],
  "sys": [],
  "tensordot": [],
  "tensorflow": [],
  "theano": [],
  "threading": [],
  "time": [],
  "to_backend": [],
  "to_jax": [],
  "torch": [],
  "transpose": [],
  "trial_fn": [],
  "weakref": []
 }
}