{
 "bad": [
  "altair.Chart.from_dict",
  "altair.VEGAEMBED_VERSION",
  "altair.VEGALITE_VERSION",
  "altair.VEGA_VERSION",
  "case_fn",
  "case_statements._add_as_gamma_to_case_statement",
  "case_statements._check_jaro_registered",
  "case_statements._check_no_obvious_problem_with_case_statement",
  "case_statements.sql_gen_case_smnt_strict_equality_2",
  "case_statements.sql_gen_case_stmt_levenshtein_3",
  "case_statements.sql_gen_case_stmt_levenshtein_4",
  "case_statements.sql_gen_case_stmt_numeric_2",
  "case_statements.sql_gen_case_stmt_numeric_perc_3",
  "case_statements.sql_gen_gammas_case_stmt_jaro_2",
  "case_statements.sql_gen_gammas_case_stmt_jaro_3",
  "case_statements.sql_gen_gammas_case_stmt_jaro_4",
  "chart_definitions.bayes_factor_chart_def",
  "chart_definitions.bayes_factor_history_chart_def",
  "chart_definitions.gamma_distribution_chart_def",
  "chart_definitions.lambda_iteration_chart_def",
  "chart_definitions.ll_iteration_chart_def",
  "chart_definitions.multi_chart_template.format",
  "chart_definitions.probability_distribution_chart",
  "check_types.check_types",
  "collections.OrderedDict",
  "copy.deepcopy",
  "expectation_step._column_order_df_e_select_expr",
  "expectation_step.run_expectation_step",
  "field_value_to_probs",
  "func",
  "functools.reduce",
  "functools.wraps",
  "gammas._add_left_right",
  "gammas.complete_settings_dict",
  "json.dump",
  "json.dumps",
  "json.load",
  "jsonschema.ValidationError",
  "jsonschema.validate",
  "logging.getLogger",
  "logging_utils._format_sql",
  "math.isclose",
  "maximisation_step.run_maximisation_step",
  "os.path.isfile",
  "params.Params",
  "pkg_resources.resource_stream",
  "pyspark.sql.dataframe.DataFrame",
  "pyspark.sql.dataframe.DataFrame.unionAll",
  "pyspark.sql.session.SparkSession",
  "re.split",
  "settings.complete_settings_dict",
  "splink.Splink",
  "splink.blocking._get_columns_to_retain_blocking",
  "splink.blocking._sql_gen_and_not_previous_rules",
  "splink.blocking._sql_gen_block_using_rules",
  "splink.blocking._sql_gen_cartesian_block",
  "splink.blocking._sql_gen_vertically_concatenate",
  "splink.blocking._vertically_concatenate_datasets",
  "splink.blocking.block_using_rules",
  "splink.blocking.cartesian_block",
  "splink.blocking.logger",
  "splink.blocking.sql_gen_comparison_columns",
  "splink.break_lineage.cutLineage",
  "splink.break_lineage.default_break_lineage_blocked_comparisons",
  "splink.break_lineage.default_break_lineage_scored_comparisons",
  "splink.case_statements._add_as_gamma_to_case_statement",
  "splink.case_statements._check_jaro_registered",
  "splink.case_statements._sql_gen_abs_diff",
  "splink.case_statements._sql_gen_get_or_list",
  "splink.case_statements._sql_gen_max_of_two_cols",
  "splink.check_types.check_types",
  "splink.expectation_step._calculate_log_likelihood_df",
  "splink.expectation_step._case_when_col_alias",
  "splink.expectation_step._column_order_df_e_select_expr",
  "splink.expectation_step._sql_gen_expected_match_prob",
  "splink.expectation_step._sql_gen_gamma_case_when",
  "splink.expectation_step._sql_gen_gamma_prob_columns",
  "splink.expectation_step.get_overall_log_likelihood",
  "splink.expectation_step.logger",
  "splink.expectation_step.run_expectation_step",
  "splink.gammas._add_left_right",
  "splink.gammas._get_select_expression_gammas",
  "splink.gammas._sql_gen_add_gammas",
  "splink.gammas.add_gammas",
  "splink.gammas.logger",
  "splink.intuition._get_bayes_factors",
  "splink.intuition.altair_installed",
  "splink.intuition.col_template",
  "splink.intuition.end_template",
  "splink.intuition.initial_template",
  "splink.iterate.iterate",
  "splink.iterate.logger",
  "splink.logging_utils.sqlparse_exists",
  "splink.maximisation_step._get_new_lambda",
  "splink.maximisation_step._get_new_pi_df",
  "splink.maximisation_step._sql_gen_intermediate_pi_aggregate",
  "splink.maximisation_step._sql_gen_new_lambda",
  "splink.maximisation_step._sql_gen_pi_df",
  "splink.maximisation_step.logger",
  "splink.params.Params",
  "splink.params._flatten_dict",
  "splink.params.altair_installed",
  "splink.params.get_or_update_settings",
  "splink.params.load_params_from_dict",
  "splink.params.load_params_from_json",
  "splink.params.logger",
  "splink.settings._complete_case_expression",
  "splink.settings._complete_probabilities",
  "splink.settings._get_default_case_statement_fn",
  "splink.settings._get_default_case_statements_functions",
  "splink.settings._get_probabilities",
  "splink.settings._normalise_prob_list",
  "splink.settings.complete_settings_dict",
  "splink.term_frequencies.logger",
  "splink.term_frequencies.make_adjustment_for_term_frequencies",
  "splink.term_frequencies.sql_gen_add_adjumentments_to_df_e",
  "splink.term_frequencies.sql_gen_bayes_string",
  "splink.term_frequencies.sql_gen_compute_final_group_membership_prob_from_adjustments",
  "splink.term_frequencies.sql_gen_generate_adjusted_lambda",
  "splink.truth._categorise_scores_into_truth_cats",
  "splink.truth._check_df_labels",
  "splink.truth._get_score_colname",
  "splink.truth._join_labels_to_results",
  "splink.truth._sql_gen_unique_id_keygen",
  "splink.truth._summarise_truth_cats",
  "splink.truth.altair_installed",
  "splink.truth.truth_space_table",
  "splink.validate.SCHEMA_CACHE",
  "splink.validate._get_schema",
  "splink.validate.jsonschema_installed",
  "splink.validate.validate_settings",
  "sqlparse.format",
  "textwrap.dedent",
  "typing.Callable",
  "typing.Union",
  "typing.get_type_hints",
  "validate._get_default_value",
  "validate.validate_settings",
  "warnings.warn"
 ],
 "deps": {
  "altair": [],
  "case_fn": [],
  "case_statements": [],
  "chart_definitions": [],
  "check_types": [],
  "collections": [],
  "copy": [],
  "expectation_step": [],
  "field_value_to_probs": [],
  "func": [],
  "functools": [],
  "gammas": [],
  "json": [],
  "jsonschema": [],
  "logging": [],
  "logging_utils": [],
  "math": [],
  "maximisation_step": [],
  "os": [],
  "params": [],
  "pkg_resources": [],
  "pyspark": [],
  "re": [],
  "settings": [],
  "splink": [],
  "sqlparse": [],
  "textwrap": [],
  "typing": [],
  "validate": [],
  "warnings": []
 }
}