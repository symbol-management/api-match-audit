{
 "bad": [
  "abc.ABC",
  "abc.abstractmethod",
  "asyncio.AbstractEventLoop",
  "asyncio.CancelledError",
  "asyncio.Handle",
  "asyncio.Queue",
  "asyncio.QueueEmpty",
  "asyncio.Semaphore",
  "asyncio.Task",
  "asyncio.TimeoutError",
  "asyncio.ensure_future",
  "asyncio.gather",
  "asyncio.get_event_loop",
  "asyncio.new_event_loop",
  "asyncio.run_coroutine_threadsafe",
  "asyncio.set_event_loop",
  "asyncio.sleep",
  "asyncio.wait_for",
  "concat.concat",
  "concurrent.futures.Future",
  "coro_f",
  "cytoolz.filter",
  "cytoolz.mapcat",
  "cytoolz.partition_all",
  "dataclasses.dataclass",
  "dataclasses.field",
  "did_timeout",
  "exception",
  "exception.args",
  "f",
  "from_iterable.from_iterable",
  "functools.wraps",
  "generator",
  "hypothesis.given",
  "hypothesis.settings",
  "hypothesis.strategies.integers",
  "hypothesis.strategies.lists",
  "inspect.signature",
  "iterable",
  "multiprocessing.Lock",
  "multiprocessing.Manager",
  "multiprocessing.Process",
  "multiprocessing.get_context",
  "multiprocessing.queues.Empty",
  "multiprocessing.queues.Queue",
  "multiprocessing.synchronize.Lock",
  "nums_generator",
  "pypeln.process.IterableQueue",
  "pypeln.process.Namespace",
  "pypeln.process.OutputQueues",
  "pypeln.process.StageParams",
  "pypeln.process.Supervisor",
  "pypeln.process.Worker",
  "pypeln.process.api.concat.Concat",
  "pypeln.process.api.concat_process_test.MAX_EXAMPLES",
  "pypeln.process.api.each.Each",
  "pypeln.process.api.each.EachFn",
  "pypeln.process.api.each_process_test.MAX_EXAMPLES",
  "pypeln.process.api.filter.Filter",
  "pypeln.process.api.filter.FilterFn",
  "pypeln.process.api.filter_process_test.MAX_EXAMPLES",
  "pypeln.process.api.flat_map.FlatMap",
  "pypeln.process.api.flat_map.FlatMapFn",
  "pypeln.process.api.flat_map_process_test.MAX_EXAMPLES",
  "pypeln.process.api.from_iterable.FromIterable",
  "pypeln.process.api.from_iterable_process_test.MAX_EXAMPLES",
  "pypeln.process.api.map.Map",
  "pypeln.process.api.map.MapFn",
  "pypeln.process.api.map_process_test.MAX_EXAMPLES",
  "pypeln.process.api.map_process_test.MyError",
  "pypeln.process.api.ordered.Ordered",
  "pypeln.process.api.ordered_process_test.MAX_EXAMPLES",
  "pypeln.process.api.to_iterable_process_test.MAX_EXAMPLES",
  "pypeln.process.concat",
  "pypeln.process.each",
  "pypeln.process.filter",
  "pypeln.process.flat_map",
  "pypeln.process.from_iterable",
  "pypeln.process.map",
  "pypeln.process.ordered",
  "pypeln.process.queue.IterableQueue",
  "pypeln.process.queue.PipelineException",
  "pypeln.process.queue.T",
  "pypeln.process.queue_process_test.MAX_EXAMPLES",
  "pypeln.process.queue_process_test.MyException",
  "pypeln.process.run",
  "pypeln.process.start_workers",
  "pypeln.process.to_iterable",
  "pypeln.process.utils.MANAGER",
  "pypeln.process.worker.Applicable",
  "pypeln.process.worker.Kwargs",
  "pypeln.process.worker.ProcessFn",
  "pypeln.process.worker.StageParams",
  "pypeln.process.worker.StageStatus",
  "pypeln.process.worker.T",
  "pypeln.process.worker.Worker",
  "pypeln.process.worker.WorkerInfo",
  "pypeln.process.worker.start_workers",
  "pypeln.process.worker_process_test.MAX_EXAMPLES",
  "pypeln.process.worker_process_test.MyException",
  "pypeln.sync.Namespace",
  "pypeln.sync.api.concat.Concat",
  "pypeln.sync.api.concat_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.each.Each",
  "pypeln.sync.api.each.EachFn",
  "pypeln.sync.api.each_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.filter.Filter",
  "pypeln.sync.api.filter.FilterFn",
  "pypeln.sync.api.filter_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.flat_map.FlatMap",
  "pypeln.sync.api.flat_map.FlatMapFn",
  "pypeln.sync.api.flat_map_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.from_iterable.FromIterable",
  "pypeln.sync.api.from_iterable_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.map.Map",
  "pypeln.sync.api.map.MapFn",
  "pypeln.sync.api.map_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.ordered.Ordered",
  "pypeln.sync.api.ordered_sync_test.MAX_EXAMPLES",
  "pypeln.sync.api.to_iterable_sync_test.MAX_EXAMPLES",
  "pypeln.sync.concat",
  "pypeln.sync.each",
  "pypeln.sync.filter",
  "pypeln.sync.flat_map",
  "pypeln.sync.from_iterable",
  "pypeln.sync.map",
  "pypeln.sync.ordered",
  "pypeln.sync.run",
  "pypeln.sync.stage.Applicable",
  "pypeln.sync.stage.ProcessFn",
  "pypeln.sync.stage.Stage",
  "pypeln.sync.stage.StageStatus",
  "pypeln.sync.stage.WorkerInfo",
  "pypeln.sync.to_iterable",
  "pypeln.task.IterableQueue",
  "pypeln.task.Namespace",
  "pypeln.task.OutputQueues",
  "pypeln.task.StageParams",
  "pypeln.task.Supervisor",
  "pypeln.task.TaskPool.create",
  "pypeln.task.Worker",
  "pypeln.task.api.concat.Concat",
  "pypeln.task.api.concat_task_test.MAX_EXAMPLES",
  "pypeln.task.api.concat_task_test.nums_pl",
  "pypeln.task.api.concat_task_test.nums_pl1",
  "pypeln.task.api.concat_task_test.nums_pl2",
  "pypeln.task.api.concat_task_test.nums_py",
  "pypeln.task.api.concat_task_test.nums_py1",
  "pypeln.task.api.concat_task_test.nums_py2",
  "pypeln.task.api.each.Each",
  "pypeln.task.api.each.EachFn",
  "pypeln.task.api.each_task_test.MAX_EXAMPLES",
  "pypeln.task.api.filter.Filter",
  "pypeln.task.api.filter.FilterFn",
  "pypeln.task.api.filter_task_test.MAX_EXAMPLES",
  "pypeln.task.api.filter_task_test._generator",
  "pypeln.task.api.filter_task_test.nums_pl",
  "pypeln.task.api.filter_task_test.nums_py",
  "pypeln.task.api.flat_map.FlatMap",
  "pypeln.task.api.flat_map.FlatMapFn",
  "pypeln.task.api.flat_map_task_test.MAX_EXAMPLES",
  "pypeln.task.api.flat_map_task_test._generator",
  "pypeln.task.api.flat_map_task_test.nums_pl",
  "pypeln.task.api.flat_map_task_test.nums_py",
  "pypeln.task.api.from_iterable.FromIterable",
  "pypeln.task.api.from_iterable_task_test.MAX_EXAMPLES",
  "pypeln.task.api.from_iterable_task_test.nums_pl",
  "pypeln.task.api.from_iterable_task_test.nums_py",
  "pypeln.task.api.map.Map",
  "pypeln.task.api.map.MapFn",
  "pypeln.task.api.map_task_test.MAX_EXAMPLES",
  "pypeln.task.api.map_task_test.MyError",
  "pypeln.task.api.map_task_test.error",
  "pypeln.task.api.map_task_test.letters",
  "pypeln.task.api.map_task_test.n_workers",
  "pypeln.task.api.map_task_test.namespace",
  "pypeln.task.api.map_task_test.nums",
  "pypeln.task.api.map_task_test.nums_pl",
  "pypeln.task.api.map_task_test.nums_py",
  "pypeln.task.api.map_task_test.on_done",
  "pypeln.task.api.map_task_test.on_start",
  "pypeln.task.api.map_task_test.raise_error",
  "pypeln.task.api.map_task_test.stage",
  "pypeln.task.api.ordered.Ordered",
  "pypeln.task.api.ordered_task_test.MAX_EXAMPLES",
  "pypeln.task.api.ordered_task_test.nums_pl",
  "pypeln.task.api.ordered_task_test.nums_py",
  "pypeln.task.api.to_iterable_task_test.MAX_EXAMPLES",
  "pypeln.task.api.to_iterable_task_test.nums_pl",
  "pypeln.task.api.to_iterable_task_test.nums_py",
  "pypeln.task.concat",
  "pypeln.task.each",
  "pypeln.task.filter",
  "pypeln.task.flat_map",
  "pypeln.task.from_iterable",
  "pypeln.task.map",
  "pypeln.task.ordered",
  "pypeln.task.queue.IterableQueue",
  "pypeln.task.queue.PipelineException",
  "pypeln.task.queue.T",
  "pypeln.task.queue_task_test.MAX_EXAMPLES",
  "pypeln.task.queue_task_test.MyException",
  "pypeln.task.run",
  "pypeln.task.start_workers",
  "pypeln.task.supervisor_task_test.queue",
  "pypeln.task.supervisor_task_test.supervisor",
  "pypeln.task.to_async_iterable",
  "pypeln.task.to_iterable",
  "pypeln.task.utils.get_running_loop",
  "pypeln.task.utils.run_coroutine_in_loop",
  "pypeln.task.utils.run_test_async",
  "pypeln.task.worker.Applicable",
  "pypeln.task.worker.Kwargs",
  "pypeln.task.worker.ProcessFn",
  "pypeln.task.worker.StageParams",
  "pypeln.task.worker.StageStatus",
  "pypeln.task.worker.T",
  "pypeln.task.worker.Worker",
  "pypeln.task.worker.WorkerInfo",
  "pypeln.task.worker.start_workers",
  "pypeln.task.worker_task_test.CustomProcess",
  "pypeln.task.worker_task_test.MAX_EXAMPLES",
  "pypeln.task.worker_task_test.MyException",
  "pypeln.task.worker_task_test.input_queue",
  "pypeln.task.worker_task_test.namespace",
  "pypeln.task.worker_task_test.nums_pl",
  "pypeln.task.worker_task_test.output_queue",
  "pypeln.task.worker_task_test.output_queues",
  "pypeln.task.worker_task_test.task",
  "pypeln.task.worker_task_test.worker",
  "pypeln.thread.IterableQueue",
  "pypeln.thread.Namespace",
  "pypeln.thread.OutputQueues",
  "pypeln.thread.StageParams",
  "pypeln.thread.Supervisor",
  "pypeln.thread.Worker",
  "pypeln.thread.api.concat.Concat",
  "pypeln.thread.api.concat_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.each.Each",
  "pypeln.thread.api.each.EachFn",
  "pypeln.thread.api.each_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.filter.Filter",
  "pypeln.thread.api.filter.FilterFn",
  "pypeln.thread.api.filter_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.flat_map.FlatMap",
  "pypeln.thread.api.flat_map.FlatMapFn",
  "pypeln.thread.api.flat_map_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.from_iterable.FromIterable",
  "pypeln.thread.api.from_iterable_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.map.Map",
  "pypeln.thread.api.map.MapFn",
  "pypeln.thread.api.map_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.map_thread_test.MyError",
  "pypeln.thread.api.ordered.Ordered",
  "pypeln.thread.api.ordered_thread_test.MAX_EXAMPLES",
  "pypeln.thread.api.to_iterable_thread_test.MAX_EXAMPLES",
  "pypeln.thread.concat",
  "pypeln.thread.each",
  "pypeln.thread.filter",
  "pypeln.thread.flat_map",
  "pypeln.thread.from_iterable",
  "pypeln.thread.map",
  "pypeln.thread.ordered",
  "pypeln.thread.queue.IterableQueue",
  "pypeln.thread.queue.PipelineException",
  "pypeln.thread.queue.T",
  "pypeln.thread.queue_thread_test.MAX_EXAMPLES",
  "pypeln.thread.queue_thread_test.MyException",
  "pypeln.thread.run",
  "pypeln.thread.start_workers",
  "pypeln.thread.to_iterable",
  "pypeln.thread.worker.Applicable",
  "pypeln.thread.worker.Kwargs",
  "pypeln.thread.worker.ProcessFn",
  "pypeln.thread.worker.StageParams",
  "pypeln.thread.worker.StageStatus",
  "pypeln.thread.worker.T",
  "pypeln.thread.worker.Worker",
  "pypeln.thread.worker.WorkerInfo",
  "pypeln.thread.worker.start_workers",
  "pypeln.thread.worker_thread_test.MAX_EXAMPLES",
  "pypeln.thread.worker_thread_test.MyException",
  "pypeln.utils.A",
  "pypeln.utils.B",
  "pypeln.utils.BaseStage",
  "pypeln.utils.CONTINUE",
  "pypeln.utils.Continue",
  "pypeln.utils.DONE",
  "pypeln.utils.Done",
  "pypeln.utils.Element",
  "pypeln.utils.Kwargs",
  "pypeln.utils.Namespace",
  "pypeln.utils.Partial",
  "pypeln.utils.Protocol",
  "pypeln.utils.StopThreadException",
  "pypeln.utils.T",
  "pypeln.utils.TIMEOUT",
  "pypeln.utils.UNDEFINED",
  "pypeln.utils.Undefined",
  "pypeln.utils.function_args",
  "pypeln.utils.get_callable",
  "pytest.raises",
  "queue.IterableQueue",
  "queue.OutputQueues",
  "stage.ApplyProcess",
  "stage.ProcessFn",
  "stage.Stage",
  "start_worker",
  "stopit.ThreadingTimeout",
  "stopit.async_raise",
  "supervisor.Supervisor",
  "sys.exc_info",
  "sys.version_info",
  "threading.Lock",
  "threading.Thread",
  "time.sleep",
  "time.time",
  "to_iterable.to_iterable",
  "to_stage.to_stage",
  "traceback.format_exception",
  "typing.Any",
  "typing.AsyncIterable",
  "typing.AsyncIterator",
  "typing.Awaitable",
  "typing.Callable",
  "typing.Dict",
  "typing.Generator",
  "typing.Generic",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Set",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "unittest.TestCase",
  "unittest.mock.Mock",
  "utils.Namespace",
  "utils.NoOpContext",
  "utils.get_running_loop",
  "utils.run_coroutine_in_loop",
  "utils.run_function_in_loop",
  "worker.ApplyProcess",
  "worker.ProcessFn",
  "worker.StageParams.create",
  "worker.TaskPool.create",
  "worker.Worker"
 ],
 "deps": {
  "abc": [],
  "asyncio": [],
  "concat": [],
  "concurrent": [],
  "coro_f": [],
  "cytoolz": [],
  "dataclasses": [],
  "did_timeout": [],
  "exception": [],
  "f": [],
  "from_iterable": [],
  "functools": [],
  "generator": [],
  "hypothesis": [],
  "inspect": [],
  "iterable": [],
  "multiprocessing": [],
  "nums_generator": [],
  "pypeln": [],
  "pytest": [],
  "queue": [],
  "stage": [],
  "start_worker": [],
  "stopit": [],
  "supervisor": [],
  "sys": [],
  "threading": [],
  "time": [],
  "to_iterable": [],
  "to_stage": [],
  "traceback": [],
  "typing": [],
  "unittest": [],
  "utils": [],
  "worker": []
 }
}