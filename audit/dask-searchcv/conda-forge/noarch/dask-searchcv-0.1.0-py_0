{
 "bad": [
  "InputFeatureType",
  "TargetType",
  "__future__.absolute_import",
  "__future__.division",
  "__future__.print_function",
  "_do_pipeline",
  "collections.defaultdict",
  "copy",
  "copy.deepcopy",
  "cytoolz.get",
  "cytoolz.pluck",
  "dask",
  "dask.base.normalize_token.register",
  "dask.context._globals.get",
  "dask.get",
  "dask.multiprocessing.get.get",
  "dask.visualize",
  "dask_searchcv.__init__.get_versions",
  "dask_searchcv.utils_test.FailingClassifier.FAILING_PARAMETER",
  "dict.fromkeys",
  "distutils.version.LooseVersion",
  "f",
  "functools.wraps",
  "get_cand_scores",
  "itertools.product",
  "itertools.repeat",
  "json",
  "json.loads",
  "multiprocessing.cpu_count",
  "n_samples_append",
  "numbers",
  "numbers.Integral",
  "numbers.Number",
  "numpy",
  "numpy.__version__",
  "numpy.all",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.average",
  "numpy.bool",
  "numpy.broadcast_to",
  "numpy.dot",
  "numpy.empty",
  "numpy.flatnonzero",
  "numpy.float64",
  "numpy.hstack",
  "numpy.in1d",
  "numpy.int",
  "numpy.int32",
  "numpy.isnan",
  "numpy.ix_",
  "numpy.ma.MaskedArray",
  "numpy.ma.getmaskarray",
  "numpy.mean",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.newaxis",
  "numpy.ones",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.randint",
  "numpy.sqrt",
  "numpy.std",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.unique",
  "numpy.where",
  "numpy.zeros",
  "operator.getitem",
  "os",
  "os.path.exists",
  "os.path.join",
  "out_append",
  "out_ests_append",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pickle",
  "pickle.dumps",
  "pickle.loads",
  "pytest",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.raises",
  "pytest.warns",
  "scipy.sparse",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.hstack",
  "scipy.sparse.issparse",
  "scipy.stats.expon",
  "scipy.stats.rankdata",
  "scores_append",
  "sklearn.base.BaseEstimator",
  "sklearn.base.ClassifierMixin",
  "sklearn.base.MetaEstimatorMixin",
  "sklearn.base.clone",
  "sklearn.base.is_classifier",
  "sklearn.cluster.KMeans",
  "sklearn.datasets.load_iris",
  "sklearn.datasets.make_blobs",
  "sklearn.datasets.make_classification",
  "sklearn.datasets.make_multilabel_classification",
  "sklearn.decomposition.PCA",
  "sklearn.exceptions.FitFailedWarning",
  "sklearn.exceptions.NotFittedError",
  "sklearn.feature_selection.SelectKBest",
  "sklearn.linear_model.Ridge",
  "sklearn.metrics.f1_score",
  "sklearn.metrics.make_scorer",
  "sklearn.metrics.roc_auc_score",
  "sklearn.metrics.scorer.check_scoring",
  "sklearn.model_selection",
  "sklearn.model_selection.GridSearchCV",
  "sklearn.model_selection.GroupKFold",
  "sklearn.model_selection.GroupShuffleSplit",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.LeaveOneGroupOut",
  "sklearn.model_selection.LeaveOneOut",
  "sklearn.model_selection.LeavePGroupsOut",
  "sklearn.model_selection.LeavePOut",
  "sklearn.model_selection.ParameterGrid",
  "sklearn.model_selection.ParameterSampler",
  "sklearn.model_selection.PredefinedSplit",
  "sklearn.model_selection.ShuffleSplit",
  "sklearn.model_selection.StratifiedKFold",
  "sklearn.model_selection.StratifiedShuffleSplit",
  "sklearn.model_selection.TimeSeriesSplit",
  "sklearn.model_selection._search.BaseSearchCV",
  "sklearn.model_selection._search._check_param_grid",
  "sklearn.model_selection._split.BaseShuffleSplit",
  "sklearn.model_selection._split.KFold",
  "sklearn.model_selection._split.LeaveOneGroupOut",
  "sklearn.model_selection._split.LeaveOneOut",
  "sklearn.model_selection._split.LeavePGroupsOut",
  "sklearn.model_selection._split.LeavePOut",
  "sklearn.model_selection._split.PredefinedSplit",
  "sklearn.model_selection._split.StratifiedKFold",
  "sklearn.model_selection._split._BaseKFold",
  "sklearn.model_selection._split._CVIterableWrapper",
  "sklearn.model_selection.check_cv",
  "sklearn.neighbors.KernelDensity",
  "sklearn.pipeline.FeatureUnion",
  "sklearn.pipeline.Pipeline",
  "sklearn.preprocessing.Imputer",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVC",
  "sklearn.tree.DecisionTreeClassifier",
  "sklearn.tree.DecisionTreeRegressor",
  "sklearn.utils.metaestimators.if_delegate_has_method",
  "sklearn.utils.multiclass.type_of_target",
  "sklearn.utils.safe_indexing",
  "sklearn.utils.validation._is_arraylike",
  "sklearn.utils.validation._num_samples",
  "sklearn.utils.validation.check_array",
  "sklearn.utils.validation.check_consistent_length",
  "sklearn.utils.validation.check_is_fitted",
  "sklearn.utils.validation.indexable",
  "threading.Lock",
  "timeit.default_timer",
  "warnings",
  "warnings.catch_warnings",
  "warnings.warn"
 ],
 "deps": {
  "InputFeatureType": [],
  "TargetType": [],
  "__future__": [],
  "_do_pipeline": [],
  "collections": [],
  "copy": [],
  "cytoolz": [],
  "dask": [
   "dask-core/conda-forge/noarch/dask-core-0.15.3-py_0"
  ],
  "dask_searchcv": [],
  "dict": [],
  "distributed": [
   "distributed/conda-forge/noarch/distributed-2.1.0-py_0"
  ],
  "distutils": [],
  "f": [],
  "functools": [],
  "get_cand_scores": [],
  "itertools": [],
  "json": [],
  "multiprocessing": [],
  "n_samples_append": [],
  "numbers": [],
  "numpy": [],
  "operator": [],
  "os": [],
  "out_append": [],
  "out_ests_append": [],
  "pandas": [],
  "pickle": [],
  "pytest": [],
  "scipy": [],
  "scores_append": [],
  "sklearn": [],
  "threading": [],
  "timeit": [],
  "toolz": [
   "toolz/conda-forge/noarch/toolz-0.8.2-py_3"
  ],
  "warnings": []
 }
}