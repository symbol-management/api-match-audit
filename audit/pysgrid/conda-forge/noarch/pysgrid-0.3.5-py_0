{
 "bad": [
  "cell_tree2d.CellTree",
  "collections.OrderedDict",
  "hashlib.sha1",
  "lookup.LAT_GRID_CELL_CENTER_LONG_NAME",
  "lookup.LAT_GRID_CELL_NODE_LONG_NAME",
  "lookup.LON_GRID_CELL_CENTER_LONG_NAME",
  "lookup.LON_GRID_CELL_NODE_LONG_NAME",
  "lookup.X_COORDINATES",
  "lookup.Y_COORDINATES",
  "msg",
  "netCDF4.Dataset",
  "numpy.all",
  "numpy.append",
  "numpy.arctan2",
  "numpy.array",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bool_",
  "numpy.choose",
  "numpy.column_stack",
  "numpy.cos",
  "numpy.dot",
  "numpy.dtype",
  "numpy.empty",
  "numpy.errstate",
  "numpy.float64",
  "numpy.indices",
  "numpy.int32",
  "numpy.int64",
  "numpy.linalg.inv",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.logical_xor",
  "numpy.ma.MaskedArray",
  "numpy.ma.array",
  "numpy.ma.empty",
  "numpy.ma.masked_all",
  "numpy.ma.masked_array",
  "numpy.ma.masked_equal",
  "numpy.ma.masked_less",
  "numpy.ma.sqrt",
  "numpy.matrix",
  "numpy.max",
  "numpy.mgrid",
  "numpy.min",
  "numpy.newaxis",
  "numpy.pi",
  "numpy.random.random",
  "numpy.ravel_multi_index",
  "numpy.s_",
  "numpy.sin",
  "numpy.stack",
  "numpy.sum",
  "numpy.take",
  "numpy.testing.assert_almost_equal",
  "numpy.transpose",
  "numpy.unravel_index",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.remove",
  "pysgrid.SGrid",
  "pysgrid.processing_2d.avg_to_cell_center",
  "pysgrid.processing_2d.rotate_vectors",
  "pysgrid.processing_2d.vector_sum",
  "pysgrid.read_netcdf.find_grid_topology_var",
  "pysgrid.sgrid.SGrid",
  "pysgrid.sgrid.SGridAttributes",
  "pysgrid.tests.test_interpolation.center_lat",
  "pysgrid.tests.test_interpolation.center_lon",
  "pysgrid.tests.test_interpolation.edge1_lat",
  "pysgrid.tests.test_interpolation.edge1_lon",
  "pysgrid.tests.test_interpolation.edge2_lat",
  "pysgrid.tests.test_interpolation.edge2_lon",
  "pysgrid.tests.test_interpolation.node_lat",
  "pysgrid.tests.test_interpolation.node_lon",
  "pysgrid.tests.test_interpolation.sgrid",
  "pysgrid.tests.test_processing_2d.avg_center_data",
  "pysgrid.tests.test_processing_2d.rotate_vectors_data",
  "pysgrid.tests.test_sgrid_deltares.sgrid",
  "pysgrid.tests.test_sgrid_deltares.sgrid_no_node",
  "pysgrid.tests.test_sgrid_deltares.sgrid_obj",
  "pysgrid.tests.test_sgrid_parsing.parse_pad",
  "pysgrid.tests.test_sgrid_roms.sgrid",
  "pysgrid.tests.test_sgrid_variable_deltares.sgrid_vars_deltares",
  "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms",
  "pysgrid.tests.test_sgrid_variable_wrf.sgrid_var_wrf",
  "pysgrid.tests.test_sgrid_wrf.sgrid",
  "pysgrid.tests.test_utils.check_element",
  "pysgrid.tests.test_utils.intersection_data",
  "pysgrid.utils.calculate_angle_from_true_east",
  "pysgrid.utils.calculate_bearing",
  "pysgrid.utils.check_element_equal",
  "pysgrid.utils.does_intersection_exist",
  "pysgrid.utils.pair_arrays",
  "pysgrid.utils.points_in_polys",
  "pytest.fixture",
  "pytest.raises",
  "pytest.yield_fixture",
  "quad_eqn",
  "re.compile",
  "re.sub",
  "read_netcdf.NetCDFDataset",
  "read_netcdf.find_grid_topology_var",
  "read_netcdf.parse_axes",
  "read_netcdf.parse_padding",
  "read_netcdf.parse_vector_axis",
  "scipy.spatial.KDTree",
  "sgrid.SGrid",
  "sgrid.load_grid",
  "tempfile.mktemp",
  "utils.GridPadding",
  "utils.calculate_angle_from_true_east",
  "utils.determine_variable_slicing",
  "utils.infer_avg_axes",
  "utils.infer_variable_location",
  "utils.pair_arrays",
  "variables.SGridVariable",
  "variables.SGridVariable.create_variable",
  "write_nc_test_files.deltares_sgrid",
  "write_nc_test_files.deltares_sgrid.variables",
  "write_nc_test_files.deltares_sgrid_no_optional_attr",
  "write_nc_test_files.non_compliant_sgrid",
  "write_nc_test_files.roms_sgrid",
  "write_nc_test_files.roms_sgrid.variables",
  "write_nc_test_files.wrf_sgrid",
  "write_nc_test_files.wrf_sgrid.variables",
  "x_to_l"
 ],
 "deps": {
  "cell_tree2d": [],
  "collections": [],
  "hashlib": [],
  "lookup": [],
  "msg": [],
  "netCDF4": [],
  "numpy": [],
  "os": [],
  "pysgrid": [],
  "pytest": [],
  "quad_eqn": [],
  "re": [],
  "read_netcdf": [],
  "scipy": [],
  "sgrid": [],
  "tempfile": [],
  "utils": [],
  "variables": [],
  "write_nc_test_files": [],
  "x_to_l": []
 }
}