{
 "bad": [
  "IPython.embed",
  "IPython.get_ipython",
  "Tuple",
  "arg_gen",
  "argparse.ArgumentParser",
  "argparse.RawDescriptionHelpFormatter",
  "ast.literal_eval",
  "block_gen",
  "blocks",
  "blocks._blocks",
  "blocks._shape",
  "blocks.values",
  "blocks_constructor",
  "build_frame",
  "builtins.__IPYTHON__",
  "cProfile.Profile",
  "cls",
  "cls.from_labels",
  "code.interact",
  "collections.OrderedDict",
  "collections.abc.KeysView",
  "collections.abc.KeysView._from_iterable",
  "collections.abc.Set",
  "collections.abc.Sized",
  "collections.abc.ValuesView",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "column_gen",
  "column_name_getter",
  "columns_arrays",
  "columns_constructor",
  "concurrent.futures.ProcessPoolExecutor",
  "concurrent.futures.ThreadPoolExecutor",
  "condition",
  "constructor",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.timedelta",
  "dict.fromkeys",
  "f",
  "file_like",
  "filter_func",
  "fnmatch.fnmatch",
  "fractions.Fraction",
  "func",
  "func.__name__",
  "func_single",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "gen",
  "get_col_dtype",
  "get_group",
  "get_index",
  "get_level",
  "get_widths",
  "getitem",
  "hashlib.sha224",
  "html.escape",
  "index_constructor",
  "inspect.isclass",
  "io.StringIO",
  "items",
  "itertools.chain",
  "itertools.combinations",
  "itertools.product",
  "itertools.repeat",
  "itertools.zip_longest",
  "json.dumps",
  "json.loads",
  "lines",
  "numpy",
  "numpy.False_",
  "numpy.all",
  "numpy.all.__doc__",
  "numpy.any",
  "numpy.any.__doc__",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.array",
  "numpy.array_str",
  "numpy.bool_",
  "numpy.clip",
  "numpy.complex128",
  "numpy.complexfloating",
  "numpy.concatenate",
  "numpy.cumprod",
  "numpy.cumsum",
  "numpy.datetime64",
  "numpy.datetime_data",
  "numpy.delete",
  "numpy.dtype",
  "numpy.empty",
  "numpy.equal",
  "numpy.flatnonzero",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.fromiter",
  "numpy.full",
  "numpy.genfromtxt",
  "numpy.hstack",
  "numpy.in1d",
  "numpy.inexact",
  "numpy.inf",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.intersect1d",
  "numpy.isin",
  "numpy.isnan",
  "numpy.isnat",
  "numpy.isneginf",
  "numpy.isposinf",
  "numpy.lexsort",
  "numpy.logical_not",
  "numpy.ma.MaskedArray",
  "numpy.matmul",
  "numpy.max",
  "numpy.mean",
  "numpy.median",
  "numpy.min",
  "numpy.nan",
  "numpy.nanargmax",
  "numpy.nanargmin",
  "numpy.nancumprod",
  "numpy.nancumsum",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmedian",
  "numpy.nanmin",
  "numpy.nanprod",
  "numpy.nanstd",
  "numpy.nansum",
  "numpy.nanvar",
  "numpy.ndarray",
  "numpy.ndenumerate",
  "numpy.ndindex",
  "numpy.nonzero",
  "numpy.not_equal",
  "numpy.number",
  "numpy.prod",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.result_type",
  "numpy.roll",
  "numpy.sort",
  "numpy.std",
  "numpy.str_",
  "numpy.sum",
  "numpy.testing.assert_almost_equal",
  "numpy.timedelta64",
  "numpy.union1d",
  "numpy.unique",
  "numpy.var",
  "numpy.vectorize",
  "numpy.vstack",
  "operation",
  "operator",
  "operator.__name__",
  "operator.add",
  "operator.or_",
  "os.close",
  "os.environ",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.join",
  "os.path.splitext",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_records",
  "pandas.DatetimeIndex",
  "pandas.Index",
  "pandas.IndexSlice",
  "pandas.IndexSlice.max",
  "pandas.IndexSlice.mean",
  "pandas.MultiIndex",
  "pandas.MultiIndex.from_product",
  "pandas.MultiIndex.from_tuples",
  "pandas.Panel",
  "pandas.Series",
  "pandas.concat",
  "pandas.read_csv",
  "pandas.read_json",
  "pickle.dump",
  "pickle.dumps",
  "pickle.load",
  "pickle.loads",
  "platform.system",
  "pool_executor",
  "pstats.Stats",
  "pyarrow.Table.from_arrays",
  "random.sample",
  "random.seed",
  "re.compile",
  "row_gen_final",
  "row_source",
  "sqlite3.Connection",
  "sqlite3.Cursor",
  "sqlite3.PARSE_DECLTYPES",
  "sqlite3.connect",
  "sqlite3.register_adapter",
  "sqlite3.register_converter",
  "static_frame.Frame.from_concat",
  "static_frame.Frame.from_csv",
  "static_frame.Frame.from_dict",
  "static_frame.Frame.from_json_url",
  "static_frame.Frame.from_pandas",
  "static_frame.Frame.from_records",
  "static_frame.FrameGO.from_dict_records",
  "static_frame.HLoc.loc_max",
  "static_frame.HLoc.max",
  "static_frame.HLoc.mean",
  "static_frame.IndexHierarchy.from_labels",
  "static_frame.IndexHierarchy.from_product",
  "static_frame.IndexHierarchy.from_tree",
  "static_frame.IndexHierarchyGO.from_labels",
  "static_frame.TypeBlocks.from_blocks",
  "static_frame.core.display.Display.DATA_MARGINS",
  "static_frame.core.display.Display.ELLIPSIS",
  "static_frame.core.display.Display.ELLIPSIS_CENTER_SENTINEL",
  "static_frame.core.display.DisplayFormats.HTML_DATATABLES",
  "static_frame.core.display.DisplayFormats.HTML_TABLE",
  "static_frame.core.display.DisplayFormats.LATEX",
  "static_frame.core.display.DisplayFormats.MARKDOWN",
  "static_frame.core.display.DisplayFormats.RST",
  "static_frame.core.doc_str.DOC_TEMPLATE.ufunc_skipna.format",
  "static_frame.core.index_hierarchy.IndexHierarchyGO.from_labels",
  "static_frame.core.index_hierarchy.IndexHierarchyGO.from_labels_delimited",
  "static_frame.core.iter_node.IterNodeApplyType.FRAME_ELEMENTS",
  "static_frame.core.iter_node.IterNodeApplyType.INDEX_LABELS",
  "static_frame.core.iter_node.IterNodeApplyType.SERIES_ITEMS_FLAT",
  "static_frame.core.iter_node.IterNodeType.ITEMS",
  "static_frame.core.iter_node.IterNodeType.VALUES",
  "static_frame.core.util.EMPTY_SET",
  "static_frame.core.util.NULL_SLICE.values",
  "static_frame.performance.perf_test.PerfTest.PD_NAME",
  "static_frame.performance.perf_test.PerfTest.SF_NAME",
  "string.ascii_lowercase",
  "sys.modules",
  "sys.platform",
  "sys.stdout",
  "sys.version",
  "sys.version.split",
  "tables.Col.from_dtype",
  "tables.Table.__name__",
  "tables.open_file",
  "target_gen",
  "tempfile.mkstemp",
  "timeit.Timer",
  "timeit.timeit",
  "to_hashable",
  "trim_outer",
  "type.__new__",
  "types.ModuleType",
  "typing.Any",
  "typing.Callable",
  "typing.DefaultDict",
  "typing.Dict",
  "typing.FrozenSet",
  "typing.Generator",
  "typing.Generic",
  "typing.Hashable",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.MutableMapping",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Sequence",
  "typing.TYPE_CHECKING",
  "typing.TextIO",
  "typing.Tuple",
  "typing.Type",
  "typing.TypeVar",
  "typing.Union",
  "typing.cast",
  "ufunc",
  "unreversed_operator_func",
  "unreversed_operator_func.__name__",
  "urllib.request.urlopen",
  "value_gen",
  "values",
  "values.dtype",
  "values.flags.writeable",
  "values.ndim",
  "values.shape",
  "values_constructor",
  "webbrowser.open_new_tab",
  "writer",
  "writer_columns",
  "writer_native",
  "zipfile.ZIP_DEFLATED",
  "zipfile.ZipFile"
 ],
 "deps": {
  "IPython": [],
  "Tuple": [],
  "arg_gen": [],
  "argparse": [],
  "ast": [],
  "block_gen": [],
  "blocks": [],
  "blocks_constructor": [],
  "build_frame": [],
  "builtins": [],
  "cProfile": [],
  "cls": [],
  "code": [],
  "collections": [],
  "column_gen": [],
  "column_name_getter": [],
  "columns_arrays": [],
  "columns_constructor": [],
  "concurrent": [],
  "condition": [],
  "constructor": [],
  "datetime": [],
  "dict": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "f": [],
  "file_like": [],
  "filter_func": [],
  "fnmatch": [],
  "fractions": [],
  "func": [],
  "func_single": [],
  "functools": [],
  "gen": [],
  "get_col_dtype": [],
  "get_group": [],
  "get_index": [],
  "get_level": [],
  "get_widths": [],
  "getitem": [],
  "hashlib": [],
  "html": [],
  "index_constructor": [],
  "inspect": [],
  "io": [],
  "items": [],
  "itertools": [],
  "json": [],
  "lines": [],
  "numpy": [],
  "openpyxl": [
   "openpyxl/conda-forge/noarch/openpyxl-2.5.11-py_0"
  ],
  "operation": [],
  "operator": [],
  "os": [],
  "pandas": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pickle": [],
  "platform": [],
  "pool_executor": [],
  "pstats": [],
  "pyarrow": [
   "pyarrow/conda-forge/linux-64/pyarrow-2.0.0-py37h4aec6bf_9_cpu"
  ],
  "random": [],
  "re": [],
  "row_gen_final": [],
  "row_source": [],
  "sqlite3": [],
  "static_frame": [
   "static-frame/conda-forge/noarch/static-frame-0.5.8-py_0"
  ],
  "string": [],
  "sys": [],
  "tables": [],
  "target_gen": [],
  "tempfile": [],
  "timeit": [],
  "to_hashable": [],
  "trim_outer": [],
  "type": [],
  "types": [],
  "typing": [],
  "ufunc": [],
  "unreversed_operator_func": [],
  "urllib": [],
  "value_gen": [],
  "values": [],
  "values_constructor": [],
  "webbrowser": [],
  "writer": [],
  "writer_columns": [],
  "writer_native": [],
  "xarray": [
   "xarray/conda-forge/noarch/xarray-0.13.0-py_0",
   "xarray/conda-forge/noarch/xarray-0.17.0-pyhd8ed1ab_0"
  ],
  "xlsxwriter": [
   "xlsxwriter/conda-forge/noarch/xlsxwriter-1.3.7-pyh9f0ad1d_0"
  ],
  "zipfile": []
 }
}