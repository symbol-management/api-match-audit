{
 "bad": [
  "AR",
  "AR1",
  "ArrayNormal",
  "ArrayNormal.dist",
  "ArrayOrdering",
  "AssertionError",
  "AttributeError",
  "B",
  "BaseException",
  "Beta",
  "Binomial",
  "Bound",
  "BoundPoisson",
  "BoundedKappa",
  "BoundedNormal",
  "Categorical",
  "ChiSquared",
  "CompoundStep",
  "DeprecationWarning",
  "Deterministic",
  "DictToArrayBijection",
  "DictToVarBijection",
  "DifferentialEquation",
  "DiscreteUniform",
  "DivergenceInfo",
  "Domain",
  "DtypeError",
  "Ellipsis",
  "EulerMaruyama",
  "ExGaussian",
  "ExGaussian.dist",
  "Exception",
  "Flat",
  "Flat.dist",
  "FloatingPointError",
  "FreeRV",
  "FutureWarning",
  "GARCH11",
  "GeneratorAdapter",
  "H",
  "HMCStepData",
  "HalfFlat",
  "HalfFlat.dist",
  "HalfNormal",
  "ImportError",
  "IncorrectArgumentsError",
  "IndexError",
  "KeyError",
  "KeyboardInterrupt",
  "LKJCorr",
  "Model",
  "MultiSimplex",
  "MultiTrace",
  "Multinomial",
  "MvNormal",
  "MvNormal.dist",
  "MvNormalLogp",
  "NDArray",
  "NonZeroPoisson",
  "Normal",
  "Normal.dist",
  "NotImplementedError",
  "OSError",
  "OrderedLogistic",
  "PdMatrix",
  "PdMatrixChol",
  "PdMatrixCholUpper",
  "Point",
  "PositiveNormal",
  "Potential",
  "QuadPotentialDiagAdapt",
  "RandomPdMatrix",
  "RealMatrix",
  "RuntimeError",
  "SMC",
  "ShapeError",
  "Simplex",
  "SortedVector",
  "SplineWrapper",
  "StopIteration",
  "TensorType",
  "TypeError",
  "UnitSortedVector",
  "UserWarning",
  "ValueError",
  "VarMap",
  "Vector",
  "Wald",
  "_DrawValuesContext",
  "_DrawValuesContext.get_context",
  "_DrawValuesContextBlocker",
  "_ExtendableTrace",
  "__doc__",
  "__name__",
  "_approx",
  "_compile_theano_function",
  "_cpu_count",
  "_infmean",
  "a",
  "a.flow.formula",
  "a.groups",
  "abs",
  "actual_ljd",
  "all",
  "alltrue",
  "alltrue_elemwise",
  "alltrue_scalar",
  "any",
  "any_to_tensor_and_labels",
  "apply_slice",
  "approx",
  "approx.model.p",
  "approx.sample",
  "approx.sample_node",
  "arbitrary_det",
  "arr_for",
  "arviz.InferenceData",
  "arviz.bfmi",
  "arviz.compare",
  "arviz.ess",
  "arviz.from_pymc3",
  "arviz.geweke",
  "arviz.hpd",
  "arviz.loo",
  "arviz.mcse",
  "arviz.plot_autocorr",
  "arviz.plot_compare",
  "arviz.plot_density",
  "arviz.plot_energy",
  "arviz.plot_forest",
  "arviz.plot_kde",
  "arviz.plot_pair",
  "arviz.plot_posterior",
  "arviz.plot_trace",
  "arviz.r2_score",
  "arviz.rhat",
  "arviz.summary",
  "arviz.waic",
  "augment_system",
  "augmented_ode_func",
  "axpy",
  "betaln",
  "binomln",
  "bool",
  "bound",
  "boundary",
  "broadcast_dist_samples_shape",
  "broadcast_distribution_samples",
  "build_model",
  "build_named_node_tree",
  "build_toy_dataset",
  "callable",
  "callback",
  "cartesian",
  "cb",
  "chains_and_samples",
  "change_flags",
  "check",
  "chi2",
  "cholesky",
  "classmethod",
  "clipped_beta_rvs",
  "close_to",
  "close_to_logical",
  "cls",
  "cmap",
  "collect_shared_to_list",
  "collections.OrderedDict",
  "collections.UserDict",
  "collections.abc.Iterable",
  "collections.deque",
  "collections.namedtuple",
  "computed_ljd",
  "const_mean",
  "contextlib.AbstractContextManager",
  "contextlib.contextmanager",
  "copy.copy",
  "cov",
  "cov.square_dist",
  "cov1",
  "cov2",
  "cov_func",
  "cov_total",
  "cov_true",
  "d2logp",
  "dataset_to_point_dict",
  "deriv",
  "dict",
  "dict.__contains__",
  "dict.__setitem__",
  "dict.keys",
  "dict.shape",
  "dict.update",
  "dict.varnames",
  "distfam",
  "distribution",
  "divmod",
  "dlogp",
  "dlogp_func",
  "draw_values",
  "dtype",
  "enum.IntEnum",
  "enum.unique",
  "enumerate",
  "eval",
  "f",
  "f.profile",
  "f.setup",
  "f_dlogp",
  "f_logp",
  "factln",
  "fast_sample_posterior_predictive",
  "fastprogress.fastprogress.progress_bar",
  "filter_warns",
  "float",
  "floatX",
  "flow_cls",
  "fmin",
  "fn",
  "format",
  "formula",
  "formula.flows",
  "forward",
  "forward_f",
  "frozenset",
  "func",
  "func_noargs",
  "func_noargs2",
  "func_onearg",
  "func_onearg2",
  "func_twoarg",
  "func_twoarg2",
  "functools.partial",
  "functools.reduce",
  "gammaln",
  "gen",
  "gen.dot",
  "gen.dtype",
  "gen.shape",
  "generate_samples",
  "generator",
  "get_broadcastable_dist_samples",
  "get_default_varnames",
  "get_named_nodes_and_relations",
  "get_tau_sigma",
  "get_transformed_name",
  "get_untransformed_name",
  "getattr",
  "getter",
  "glob.glob",
  "grad1",
  "grad2",
  "gradient",
  "h",
  "hasattr",
  "hash",
  "hessian",
  "hessian_diag",
  "i0e",
  "id",
  "identity_f",
  "incomplete_beta",
  "input",
  "inputvars",
  "inspect.getargspec",
  "int",
  "intX",
  "invlogit",
  "is_fast_drawable",
  "is_shared",
  "is_transformed_name",
  "isgenerator",
  "isinstance",
  "issubclass",
  "iter",
  "itertools.combinations",
  "itertools.product",
  "jacobian",
  "join_nonshared_inputs",
  "kill_grad",
  "kron_diag",
  "kron_dot",
  "kron_solve_lower",
  "kron_solve_upper",
  "kron_vector_op",
  "kronecker",
  "len",
  "lgamma",
  "linear_mean",
  "list",
  "list.__contains__",
  "list.__iadd__",
  "list.__imul__",
  "list.__mul__",
  "list.append",
  "list.extend",
  "lm",
  "locals",
  "log_i0",
  "log_warning",
  "logdiffexp",
  "logging.handlers.BufferingHandler",
  "logging.handlers.BufferingHandler.__init__",
  "logit",
  "logp",
  "logp_f",
  "logp_reference",
  "logpow",
  "logsumexp",
  "lp",
  "lparray",
  "make_comparable",
  "make_getter",
  "make_setter",
  "make_shared_replacements",
  "map",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.get_cmap",
  "matplotlib.pyplot.plot",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.title",
  "matplotlib.pyplot.ylim",
  "max",
  "mean",
  "mean_total",
  "memoize",
  "meth",
  "meth.__name__",
  "min",
  "mixmixlogp",
  "modelcontext",
  "multigammaln",
  "multiprocessing.Pool",
  "mv_prior_simple",
  "mv_simple",
  "mv_simple_discrete",
  "next",
  "non_normal",
  "normal_lccdf",
  "normal_lcdf",
  "not_raises",
  "numbers.Real",
  "numpy.MachAr",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.any",
  "numpy.arange",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.array",
  "numpy.asarray",
  "numpy.asscalar",
  "numpy.atleast_1d",
  "numpy.atleast_2d",
  "numpy.bitwise_xor",
  "numpy.broadcast",
  "numpy.broadcast_arrays",
  "numpy.broadcast_to",
  "numpy.c_",
  "numpy.can_cast",
  "numpy.ceil",
  "numpy.choose",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.copyto",
  "numpy.corrcoef",
  "numpy.cos",
  "numpy.cov",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diag_indices_from",
  "numpy.diff",
  "numpy.dot",
  "numpy.dtype",
  "numpy.einsum",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.equal",
  "numpy.euler_gamma",
  "numpy.exp",
  "numpy.expand_dims",
  "numpy.expm1",
  "numpy.eye",
  "numpy.finfo",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.floor",
  "numpy.frombuffer",
  "numpy.full",
  "numpy.generic",
  "numpy.histogram2d",
  "numpy.hstack",
  "numpy.identity",
  "numpy.indices",
  "numpy.inf",
  "numpy.inf.eval",
  "numpy.insert",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.issubdtype",
  "numpy.linalg.LinAlgError",
  "numpy.linalg.cholesky",
  "numpy.linalg.det",
  "numpy.linalg.eigh",
  "numpy.linalg.inv",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.linalg.svd",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.log10",
  "numpy.log1p",
  "numpy.logaddexp",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.ma.MaskedArray",
  "numpy.ma.array",
  "numpy.ma.core.MaskedArray",
  "numpy.ma.masked_values",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.mean",
  "numpy.median",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.minimum",
  "numpy.mod",
  "numpy.moveaxis",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.ndarray",
  "numpy.nested_iters",
  "numpy.newaxis",
  "numpy.nextafter",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.percentile",
  "numpy.pi",
  "numpy.power",
  "numpy.prod",
  "numpy.quantile",
  "numpy.r_",
  "numpy.random.RandomState",
  "numpy.random.binomial",
  "numpy.random.chisquare",
  "numpy.random.choice",
  "numpy.random.exponential",
  "numpy.random.gamma",
  "numpy.random.geometric",
  "numpy.random.laplace",
  "numpy.random.multinomial",
  "numpy.random.multivariate_normal",
  "numpy.random.normal",
  "numpy.random.poisson",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.random.standard_exponential",
  "numpy.random.standard_normal",
  "numpy.random.uniform",
  "numpy.ravel",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.resize",
  "numpy.round",
  "numpy.searchsorted",
  "numpy.seterr",
  "numpy.shape",
  "numpy.sin",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.stack",
  "numpy.std",
  "numpy.sum",
  "numpy.take_along_axis",
  "numpy.tan",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.tril",
  "numpy.tril_indices",
  "numpy.tril_indices_from",
  "numpy.triu",
  "numpy.triu_indices",
  "numpy.triu_indices_from",
  "numpy.unique",
  "numpy.var",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "obj",
  "obj.cache.clear",
  "obj_optimizer",
  "object",
  "object.__new__",
  "ode_func",
  "ode_model",
  "op",
  "open",
  "operator.add",
  "opt",
  "ord",
  "p0",
  "p1",
  "p2",
  "p3",
  "p4",
  "p5",
  "pandas.DataFrame.from_dict",
  "ppc_sampler",
  "print",
  "product",
  "prop",
  "property",
  "pymc3.Bernoulli",
  "pymc3.Beta",
  "pymc3.BetaBinomial",
  "pymc3.BinaryGibbsMetropolis",
  "pymc3.BinaryMetropolis",
  "pymc3.Binomial",
  "pymc3.Bound",
  "pymc3.Categorical",
  "pymc3.Categorical.dist",
  "pymc3.Cauchy",
  "pymc3.ChiSquared",
  "pymc3.CompoundStep",
  "pymc3.Constant",
  "pymc3.DEMetropolis",
  "pymc3.Data",
  "pymc3.DensityDist",
  "pymc3.Deterministic",
  "pymc3.Dirichlet",
  "pymc3.Discrete",
  "pymc3.DiscreteUniform",
  "pymc3.DiscreteWeibull",
  "pymc3.ExGaussian",
  "pymc3.Exponential",
  "pymc3.Flat",
  "pymc3.GLM",
  "pymc3.GLM.from_formula",
  "pymc3.Gamma",
  "pymc3.GaussianRandomWalk",
  "pymc3.GeneratorAdapter",
  "pymc3.Geometric",
  "pymc3.Gumbel",
  "pymc3.HalfCauchy",
  "pymc3.HalfCauchy.dist",
  "pymc3.HalfFlat",
  "pymc3.HalfNormal",
  "pymc3.HalfNormal.dist",
  "pymc3.HamiltonianMC",
  "pymc3.ImputationWarning",
  "pymc3.Interpolated",
  "pymc3.InverseGamma",
  "pymc3.KLqp",
  "pymc3.KroneckerNormal",
  "pymc3.Kumaraswamy",
  "pymc3.LKJCholeskyCov",
  "pymc3.LKJCorr",
  "pymc3.Laplace",
  "pymc3.LinearComponent.from_formula",
  "pymc3.Logistic",
  "pymc3.LogitNormal",
  "pymc3.Lognormal",
  "pymc3.Lognormal.dist",
  "pymc3.MatrixNormal",
  "pymc3.Metropolis",
  "pymc3.Minibatch",
  "pymc3.Mixture",
  "pymc3.Mixture.dist",
  "pymc3.Model",
  "pymc3.Model.get_context",
  "pymc3.Moyal",
  "pymc3.Multinomial",
  "pymc3.MvNormal",
  "pymc3.MvNormal.dist",
  "pymc3.MvStudentT",
  "pymc3.NUTS",
  "pymc3.NegativeBinomial",
  "pymc3.Normal",
  "pymc3.Normal.dist",
  "pymc3.NormalMixture",
  "pymc3.Pareto",
  "pymc3.Point",
  "pymc3.Poisson",
  "pymc3.Poisson.dist",
  "pymc3.Potential",
  "pymc3.Rice",
  "pymc3.ShapeError",
  "pymc3.Simulator",
  "pymc3.SkewNormal",
  "pymc3.Slice",
  "pymc3.StudentT",
  "pymc3.TraceDirectoryError",
  "pymc3.Triangular",
  "pymc3.TruncatedNormal",
  "pymc3.Uniform",
  "pymc3.VonMises",
  "pymc3.Wald",
  "pymc3.Weibull",
  "pymc3.ZeroInflatedBinomial",
  "pymc3.ZeroInflatedNegativeBinomial",
  "pymc3.ZeroInflatedPoisson",
  "pymc3._log.debug",
  "pymc3._log.exception",
  "pymc3._log.info",
  "pymc3._log.warning",
  "pymc3.adagrad_window",
  "pymc3.align_minibatches",
  "pymc3.approximations.EmpiricalGroup",
  "pymc3.backends.ndarray.point_list_to_multitrace",
  "pymc3.backends.report.WarningType.BAD_ACCEPTANCE",
  "pymc3.backends.report.WarningType.BAD_ENERGY",
  "pymc3.backends.report.WarningType.DIVERGENCE",
  "pymc3.backends.report.WarningType.DIVERGENCES",
  "pymc3.backends.report.WarningType.TREEDEPTH",
  "pymc3.backends.report.WarningType.TUNING_DIVERGENCE",
  "pymc3.backends.sqlite.SQLite",
  "pymc3.backends.sqlite.load",
  "pymc3.callbacks.Tracker",
  "pymc3.discrete_types",
  "pymc3.distributions.Normal.dist",
  "pymc3.distributions.distribution._DrawValuesContext.get_context",
  "pymc3.distributions.distribution._DrawValuesContextBlocker.get_context",
  "pymc3.ess",
  "pymc3.families.Binomial",
  "pymc3.families.logit",
  "pymc3.fast_sample_posterior_predictive",
  "pymc3.find_MAP",
  "pymc3.fit",
  "pymc3.floatX",
  "pymc3.flows.AbstractFlow",
  "pymc3.generator",
  "pymc3.get_data",
  "pymc3.glm.GLM.from_formula",
  "pymc3.glm.LinearComponent.from_formula",
  "pymc3.gp.cov.Constant",
  "pymc3.gp.cov.Coregion",
  "pymc3.gp.cov.Cosine",
  "pymc3.gp.cov.Covariance",
  "pymc3.gp.cov.ExpQuad",
  "pymc3.gp.cov.Exponential",
  "pymc3.gp.cov.Gibbs",
  "pymc3.gp.cov.Kron",
  "pymc3.gp.cov.Linear",
  "pymc3.gp.cov.Matern12",
  "pymc3.gp.cov.Matern32",
  "pymc3.gp.cov.Matern52",
  "pymc3.gp.cov.Periodic",
  "pymc3.gp.cov.Polynomial",
  "pymc3.gp.cov.RatQuad",
  "pymc3.gp.cov.ScaledCov",
  "pymc3.gp.cov.WarpedInput",
  "pymc3.gp.cov.WhiteNoise",
  "pymc3.gp.cov.handle_args",
  "pymc3.init_nuts",
  "pymc3.intX",
  "pymc3.loo",
  "pymc3.modelcontext",
  "pymc3.operators.KL",
  "pymc3.opvi.AEVBInferenceError",
  "pymc3.opvi.BatchedGroupError",
  "pymc3.rhat",
  "pymc3.sample",
  "pymc3.sample_posterior_predictive",
  "pymc3.sample_posterior_predictive_w",
  "pymc3.sample_prior_predictive",
  "pymc3.sample_smc",
  "pymc3.sampling.MultiTrace",
  "pymc3.sampling._check_start_shape",
  "pymc3.sampling._choose_backend",
  "pymc3.sampling.assign_step_methods",
  "pymc3.sampling.init_nuts",
  "pymc3.sampling.iter_sample",
  "pymc3.sampling.sample",
  "pymc3.set_data",
  "pymc3.set_tt_rng",
  "pymc3.smartfloatX",
  "pymc3.step_methods.DEMetropolisZ.competence",
  "pymc3.step_methods.hmc.quadpotential.PositiveDefiniteError",
  "pymc3.step_methods.hmc.quadpotential.QuadPotentialDiag",
  "pymc3.step_methods.hmc.quadpotential.QuadPotentialFull",
  "pymc3.step_methods.hmc.quadpotential.QuadPotentialFullAdapt",
  "pymc3.step_methods.hmc.quadpotential.QuadPotentialFullInv",
  "pymc3.step_methods.hmc.quadpotential.QuadPotential_Sparse",
  "pymc3.step_methods.hmc.quadpotential._WeightedCovariance",
  "pymc3.step_methods.hmc.quadpotential.chol_available",
  "pymc3.step_methods.hmc.quadpotential.quad_potential",
  "pymc3.summary",
  "pymc3.tests.backend_fixtures.BackendEqualityTestCase",
  "pymc3.tests.backend_fixtures.DumpLoadTestCase",
  "pymc3.tests.backend_fixtures.ModelBackendSampledTestCase",
  "pymc3.tests.backend_fixtures.ModelBackendSetupTestCase",
  "pymc3.tests.backend_fixtures.SamplingTestCase",
  "pymc3.tests.backend_fixtures.SelectionTestCase",
  "pymc3.tests.backend_fixtures.StatsTestCase",
  "pymc3.tests.backend_fixtures.remove_file_or_directory",
  "pymc3.total_norm_constraint",
  "pymc3.trace_to_dataframe",
  "pymc3.traceplot",
  "pymc3.tt_rng",
  "pymc3.updates.get_or_compute_grads",
  "pymc3.updates.momentum",
  "pymc3.variational.approximations.FullRankGroup.get_param_spec_for",
  "pymc3.variational.approximations.NormalizingFlowGroup.default_flow",
  "quad_potential",
  "random",
  "random_choice",
  "random_sample",
  "range",
  "ref_rand",
  "repr",
  "resolve_type",
  "reversed",
  "rho2sigma",
  "round",
  "sample",
  "sample_fn",
  "sample_posterior_predictive",
  "sample_prior_predictive",
  "sampler",
  "scipy.integrate.dblquad",
  "scipy.integrate.odeint",
  "scipy.integrate.quad",
  "scipy.integrate.tplquad",
  "scipy.interpolate.InterpolatedUnivariateSpline",
  "scipy.linalg.LinAlgError",
  "scipy.linalg.block_diag",
  "scipy.linalg.cholesky",
  "scipy.linalg.inv",
  "scipy.linalg.solve_triangular",
  "scipy.optimize.minimize",
  "scipy.sparse.block_diag",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.issparse",
  "scipy.special.expit",
  "scipy.special.logit",
  "scipy.special.logsumexp",
  "scipy.stats.bernoulli.rvs",
  "scipy.stats.beta",
  "scipy.stats.beta.rvs",
  "scipy.stats.binom.rvs",
  "scipy.stats.cauchy.rvs",
  "scipy.stats.chi2.rvs",
  "scipy.stats.chisquare",
  "scipy.stats.combine_pvalues",
  "scipy.stats.dirichlet.logpdf",
  "scipy.stats.dirichlet.rvs",
  "scipy.stats.distributions.bernoulli.logpmf",
  "scipy.stats.distributions.beta.logcdf",
  "scipy.stats.distributions.beta.logpdf",
  "scipy.stats.distributions.binom.logpmf",
  "scipy.stats.distributions.cauchy.logcdf",
  "scipy.stats.distributions.cauchy.logpdf",
  "scipy.stats.distributions.chi2.logpdf",
  "scipy.stats.distributions.expon.logcdf",
  "scipy.stats.distributions.expon.logpdf",
  "scipy.stats.distributions.exponweib.logcdf",
  "scipy.stats.distributions.exponweib.logpdf",
  "scipy.stats.distributions.gamma.logcdf",
  "scipy.stats.distributions.gamma.logpdf",
  "scipy.stats.distributions.geom.pmf",
  "scipy.stats.distributions.gumbel_r.logcdf",
  "scipy.stats.distributions.gumbel_r.logpdf",
  "scipy.stats.distributions.halfcauchy.logcdf",
  "scipy.stats.distributions.halfcauchy.logpdf",
  "scipy.stats.distributions.halfnorm.logcdf",
  "scipy.stats.distributions.halfnorm.logpdf",
  "scipy.stats.distributions.invgamma.logpdf",
  "scipy.stats.distributions.invgauss.logcdf",
  "scipy.stats.distributions.invgauss.logpdf",
  "scipy.stats.distributions.laplace.logcdf",
  "scipy.stats.distributions.laplace.logpdf",
  "scipy.stats.distributions.logistic.logcdf",
  "scipy.stats.distributions.logistic.logpdf",
  "scipy.stats.distributions.lognorm.logcdf",
  "scipy.stats.distributions.lognorm.logpdf",
  "scipy.stats.distributions.moyal.logcdf",
  "scipy.stats.distributions.moyal.logpdf",
  "scipy.stats.distributions.nbinom.logpmf",
  "scipy.stats.distributions.norm",
  "scipy.stats.distributions.norm.logcdf",
  "scipy.stats.distributions.norm.logpdf",
  "scipy.stats.distributions.norm.pdf",
  "scipy.stats.distributions.pareto.logcdf",
  "scipy.stats.distributions.pareto.logpdf",
  "scipy.stats.distributions.poisson.logpmf",
  "scipy.stats.distributions.randint.logpmf",
  "scipy.stats.distributions.rice.logpdf",
  "scipy.stats.distributions.skewnorm.logpdf",
  "scipy.stats.distributions.t.logcdf",
  "scipy.stats.distributions.t.logpdf",
  "scipy.stats.distributions.triang.logcdf",
  "scipy.stats.distributions.triang.logpdf",
  "scipy.stats.distributions.truncnorm.logpdf",
  "scipy.stats.distributions.uniform.logcdf",
  "scipy.stats.distributions.uniform.logpdf",
  "scipy.stats.distributions.vonmises.logpdf",
  "scipy.stats.expon.logpdf",
  "scipy.stats.gamma.rvs",
  "scipy.stats.gumbel_r.rvs",
  "scipy.stats.halfcauchy.rvs",
  "scipy.stats.halfnorm.rvs",
  "scipy.stats.invgamma.rvs",
  "scipy.stats.ks_2samp",
  "scipy.stats.kstest",
  "scipy.stats.laplace.rvs",
  "scipy.stats.logistic.rvs",
  "scipy.stats.lognorm.logpdf",
  "scipy.stats.matrix_normal.rvs",
  "scipy.stats.moyal.rvs",
  "scipy.stats.multivariate_normal",
  "scipy.stats.multivariate_normal.logpdf",
  "scipy.stats.multivariate_normal.rvs",
  "scipy.stats.nbinom.rvs",
  "scipy.stats.norm",
  "scipy.stats.norm.logpdf",
  "scipy.stats.norm.pdf",
  "scipy.stats.norm.rvs",
  "scipy.stats.pareto.rvs",
  "scipy.stats.poisson.rvs",
  "scipy.stats.randint.rvs",
  "scipy.stats.rice.rvs",
  "scipy.stats.skewnorm.rvs",
  "scipy.stats.t",
  "scipy.stats.t.rvs",
  "scipy.stats.triang.rvs",
  "scipy.stats.truncnorm.rvs",
  "scipy.stats.uniform",
  "scipy.stats.uniform.rvs",
  "scipy.stats.vonmises.rvs",
  "scipy.stats.wald.rvs",
  "scipy.stats.wishart.rvs",
  "scipy_dist",
  "scipy_logcdf",
  "sde",
  "select_by_precision",
  "self",
  "self.__class__",
  "self.__class__.__name__",
  "self.__init_group__",
  "self.__param_spec__",
  "self._batched",
  "self._inited",
  "self._initial_type",
  "self._input_type",
  "self._kwargs",
  "self._local",
  "self._new_initial",
  "self._new_initial_shape",
  "self._rng",
  "self._scale_cost_to_minibatch",
  "self._scale_cost_to_minibatch.set_value",
  "self._single_symbolic_varlogp_and_datalogp",
  "self._sized_symbolic_varlogp_and_datalogp",
  "self._user_params",
  "self._vfam",
  "self.all_histograms",
  "self.approx",
  "self.approx.__class__.__name__",
  "self.approx.any_histograms",
  "self.approx.datalogp",
  "self.approx.datalogp_norm",
  "self.approx.inputs",
  "self.approx.logp",
  "self.approx.logp_norm",
  "self.approx.logq",
  "self.approx.logq_norm",
  "self.approx.model",
  "self.approx.set_size_and_deterministic",
  "self.approx.varlogp",
  "self.approx.varlogp_norm",
  "self.batched",
  "self.bdim",
  "self.bij",
  "self.collect",
  "self.datalogp",
  "self.ddim",
  "self.get_optimization_replacements",
  "self.get_param_spec_for",
  "self.group",
  "self.group.scaling",
  "self.groups",
  "self.groups.append",
  "self.has_test_function",
  "self.initial_dist_map",
  "self.initial_dist_name",
  "self.input",
  "self.input.reshape",
  "self.inputs",
  "self.local",
  "self.logp",
  "self.logq",
  "self.make_size_and_deterministic_replacements",
  "self.model",
  "self.model.datalogpt",
  "self.model.free_RVs",
  "self.model.observed_RVs",
  "self.model.unobserved_RVs",
  "self.model.varlogpt",
  "self.obj_params",
  "self.objective_class",
  "self.op",
  "self.op.T",
  "self.op.apply",
  "self.op.returns_loss",
  "self.options",
  "self.ordering",
  "self.ordering.by_name",
  "self.ordering.size",
  "self.ordering.vmap.append",
  "self.ordering.vmap.shp",
  "self.params_dict.values",
  "self.replacements",
  "self.require_logq",
  "self.rslice",
  "self.sample_dict_fn",
  "self.set_size_and_deterministic",
  "self.shared_params",
  "self.single_symbolic_datalogp",
  "self.single_symbolic_varlogp",
  "self.sized_symbolic_datalogp",
  "self.sized_symbolic_datalogp.mean",
  "self.sized_symbolic_varlogp",
  "self.sized_symbolic_varlogp.mean",
  "self.supports_aevb",
  "self.supports_batched",
  "self.symbolic_initial",
  "self.symbolic_initial.broadcastable",
  "self.symbolic_initial.dtype",
  "self.symbolic_logq.mean",
  "self.symbolic_logq_not_scaled",
  "self.symbolic_normalizing_constant",
  "self.symbolic_random",
  "self.symbolic_random.astype",
  "self.symbolic_random.flatten",
  "self.symbolic_randoms",
  "self.symbolic_sample_over_posterior",
  "self.symbolic_single_sample",
  "self.test_params",
  "self.tf",
  "self.to_flat_input",
  "self.updates",
  "self.user_params",
  "self.user_params.items",
  "self.varlogp",
  "set",
  "set_tt_rng",
  "setattr",
  "simple_2model_continuous",
  "simple_arbitrary_det",
  "simple_categorical",
  "simple_model",
  "slice",
  "solve_lower",
  "solve_upper",
  "sorted",
  "spec",
  "spline",
  "stat",
  "staticmethod",
  "std_cdf",
  "step_cls",
  "step_func",
  "step_func.profile",
  "step_method",
  "stepper",
  "str",
  "sum",
  "super",
  "sys.modules",
  "take_along_axis",
  "tensor_type",
  "test_optimizer",
  "theano.gof.Op.__call__",
  "theano.scalar.UnaryScalarOp",
  "theano.scalar.basic_scipy.GammaLn",
  "theano.scalar.basic_scipy.Psi",
  "theano.scalar.upgrade_to_float",
  "theano.scalar.upgrade_to_float_no_complex",
  "theano.sparse.basic._is_sparse_variable",
  "theano.sparse.basic.as_sparse",
  "theano.tensor.Apply",
  "theano.tensor.Constant",
  "theano.tensor.Op",
  "theano.tensor.Tensor",
  "theano.tensor.TensorType",
  "theano.tensor.Variable",
  "theano.tensor.abs_",
  "theano.tensor.add",
  "theano.tensor.advanced_set_subtensor1",
  "theano.tensor.all",
  "theano.tensor.allclose",
  "theano.tensor.alloc",
  "theano.tensor.and_",
  "theano.tensor.arange",
  "theano.tensor.arctan",
  "theano.tensor.arctan2",
  "theano.tensor.arctanh",
  "theano.tensor.argmax",
  "theano.tensor.as_tensor",
  "theano.tensor.as_tensor_variable",
  "theano.tensor.batched_dot",
  "theano.tensor.bscalar",
  "theano.tensor.cast",
  "theano.tensor.ceil",
  "theano.tensor.clip",
  "theano.tensor.concatenate",
  "theano.tensor.constant",
  "theano.tensor.cos",
  "theano.tensor.diag",
  "theano.tensor.dmatrix",
  "theano.tensor.dot",
  "theano.tensor.dscalar",
  "theano.tensor.dvector",
  "theano.tensor.eq",
  "theano.tensor.erf",
  "theano.tensor.erfc",
  "theano.tensor.erfcinv",
  "theano.tensor.erfcx",
  "theano.tensor.exp",
  "theano.tensor.expm1",
  "theano.tensor.eye",
  "theano.tensor.fill",
  "theano.tensor.flatten",
  "theano.tensor.floor",
  "theano.tensor.fscalar",
  "theano.tensor.gammainc",
  "theano.tensor.gammaln",
  "theano.tensor.ge",
  "theano.tensor.gt",
  "theano.tensor.i0",
  "theano.tensor.i1",
  "theano.tensor.identity_like",
  "theano.tensor.inc_subtensor",
  "theano.tensor.inv",
  "theano.tensor.iscalar",
  "theano.tensor.isclose",
  "theano.tensor.ivector",
  "theano.tensor.le",
  "theano.tensor.log",
  "theano.tensor.log1p",
  "theano.tensor.lscalar",
  "theano.tensor.lt",
  "theano.tensor.matrix",
  "theano.tensor.max",
  "theano.tensor.maximum",
  "theano.tensor.mean",
  "theano.tensor.mul",
  "theano.tensor.nlinalg.det",
  "theano.tensor.nlinalg.diag",
  "theano.tensor.nlinalg.eigh",
  "theano.tensor.nlinalg.matrix_dot",
  "theano.tensor.nlinalg.matrix_inverse",
  "theano.tensor.nlinalg.trace",
  "theano.tensor.nnet.sigmoid",
  "theano.tensor.nnet.softplus",
  "theano.tensor.ones",
  "theano.tensor.ones_like",
  "theano.tensor.or_",
  "theano.tensor.outer",
  "theano.tensor.patternbroadcast",
  "theano.tensor.pow",
  "theano.tensor.power",
  "theano.tensor.prod",
  "theano.tensor.reshape",
  "theano.tensor.round",
  "theano.tensor.scalar",
  "theano.tensor.set_subtensor",
  "theano.tensor.shape",
  "theano.tensor.shape_padleft",
  "theano.tensor.shape_padright",
  "theano.tensor.sin",
  "theano.tensor.sqr",
  "theano.tensor.sqrt",
  "theano.tensor.square",
  "theano.tensor.stack",
  "theano.tensor.sum",
  "theano.tensor.switch",
  "theano.tensor.tanh",
  "theano.tensor.tensor3",
  "theano.tensor.transpose",
  "theano.tensor.unbroadcast",
  "theano.tensor.vector",
  "theano.tensor.zeros",
  "theano.tensor.zeros_like",
  "theano.theano.Apply",
  "theano.theano.clone",
  "theano.theano.compile.view_op",
  "theano.theano.config.compute_test_value",
  "theano.theano.config.floatX",
  "theano.theano.config.warn_float64",
  "theano.theano.configparser._config_var_list",
  "theano.theano.configparser.change_flags",
  "theano.theano.function",
  "theano.theano.gof.Apply",
  "theano.theano.gof.graph.Variable",
  "theano.theano.grad",
  "theano.theano.map",
  "theano.theano.scan",
  "theano.theano.shared",
  "to_tuple",
  "tracker",
  "tracker.hist",
  "true_dens",
  "tt_rng",
  "tuple",
  "two_gaussians",
  "type",
  "typefilter",
  "unittest.mock.Mock",
  "unittest.mock.patch",
  "update_input_map",
  "update_start_vals",
  "vars",
  "vars.items",
  "vars.remove",
  "vars_names",
  "warnings.warn",
  "wrapper",
  "xarray.Dataset",
  "zero_mean",
  "zip",
  "zvalue"
 ],
 "deps": [
  [
   "arviz-0.10.0-py_0",
   "arviz-0.11.0-pyhd8ed1ab_0",
   "arviz-0.11.1-pyhd8ed1ab_0",
   "arviz-0.11.2-pyhd8ed1ab_0",
   "arviz-0.4.0-py_0",
   "arviz-0.4.1-py_0",
   "arviz-0.5.1-py_0",
   "arviz-0.5.1-py_1",
   "arviz-0.6.0-py_0",
   "arviz-0.6.1-py_0",
   "arviz-0.7.0-py_0",
   "arviz-0.8.0-py_0",
   "arviz-0.8.1-py_0",
   "arviz-0.8.2-py_0",
   "arviz-0.8.3-py_0",
   "arviz-0.9.0-py_0"
  ],
  [
   "constructor-1.3.0-py27_0",
   "constructor-1.3.0-py34_0",
   "constructor-1.3.1-py34_1",
   "constructor-1.3.3-py35_0",
   "constructor-2.0.1-py36_0",
   "constructor-2.0.2-py27_0",
   "constructor-2.2.0-py27_0",
   "constructor-2.2.0-py27_1000",
   "constructor-3.0.1-py37_0",
   "constructor-3.0.2-py37hc8dfbb8_0",
   "constructor-3.1.0-py36h9f0ad1d_0",
   "constructor-3.1.0-py37hc8dfbb8_3",
   "constructor-3.1.0-py38h32f6830_0",
   "constructor-3.2.0-py36hd000896_1",
   "constructor-3.2.0-py37h89c1867_1",
   "constructor-3.2.0-py38h578d9bd_0"
  ],
  [
   "fastprogress-0.2.3-py_0",
   "fastprogress-0.2.4-py_0",
   "fastprogress-0.2.5-py_0",
   "fastprogress-0.2.6-py_0",
   "fastprogress-1.0.0-py_0"
  ],
  [
   "noise-1.2.2-py27_0",
   "noise-1.2.2-py27h14c3975_1000",
   "noise-1.2.2-py27h516909a_1000",
   "noise-1.2.2-py36h470a237_0",
   "noise-1.2.2-py37h8f50634_1001"
  ],
  [
   "numpy-1.10.4-py27_blas_openblas_200",
   "numpy-1.10.4-py27_blas_openblas_204",
   "numpy-1.10.4-py35_blas_openblas_203",
   "numpy-1.11.1-py27_blas_openblas_201",
   "numpy-1.11.2-py27_blas_openblas_201",
   "numpy-1.11.2-py35_blas_openblas_202",
   "numpy-1.11.3-py27_blas_openblas_201",
   "numpy-1.11.3-py27_blas_openblashd3ea46f_205",
   "numpy-1.11.3-py34_blas_openblas_200",
   "numpy-1.11.3-py35_blas_openblas_202",
   "numpy-1.11.3-py36h8b7e671_1206",
   "numpy-1.11.3-py36he5ce36f_1207",
   "numpy-1.12.1-py35_blas_openblas_201",
   "numpy-1.13.0-py34_blas_openblas_200",
   "numpy-1.13.2-py36_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblas_200",
   "numpy-1.13.3-py27_blas_openblash1522bff_1201",
   "numpy-1.13.3-py35_blas_openblas_200",
   "numpy-1.13.3-py35_blas_openblas_201",
   "numpy-1.13.3-py36_blas_openblash1522bff_1201",
   "numpy-1.13.3-py36_blas_openblashb06ca3d_201",
   "numpy-1.14.2-py27_blas_openblas_200",
   "numpy-1.14.5-py27_blas_openblashd3ea46f_200",
   "numpy-1.14.5-py35_blas_openblashd3ea46f_202",
   "numpy-1.14.5-py36_blas_openblashd3ea46f_202",
   "numpy-1.14.6-py27_blas_openblashb06ca3d_200",
   "numpy-1.14.6-py27he5ce36f_1201",
   "numpy-1.14.6-py37h95a1406_1201",
   "numpy-1.15.2-py27_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py27_blas_openblashd3ea46f_1",
   "numpy-1.15.2-py35_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashb06ca3d_201",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_0",
   "numpy-1.15.2-py36_blas_openblashd3ea46f_1",
   "numpy-1.15.4-py27_blas_openblash1522bff_1000",
   "numpy-1.15.4-py27_blas_openblashb06ca3d_0",
   "numpy-1.15.4-py27h8b7e671_1001",
   "numpy-1.15.4-py27h8b7e671_1002",
   "numpy-1.15.4-py37_blas_openblashb06ca3d_0",
   "numpy-1.16.1-py37_blas_openblash1522bff_0",
   "numpy-1.16.2-py36h8b7e671_1",
   "numpy-1.16.4-py27h95a1406_0",
   "numpy-1.16.5-py27h95a1406_0",
   "numpy-1.16.6-py38h18fd61f_0",
   "numpy-1.17.1-py36h95a1406_0",
   "numpy-1.17.3-py37h95a1406_0",
   "numpy-1.17.5-py37h95a1406_0",
   "numpy-1.17.5-py38h18fd61f_1",
   "numpy-1.18.1-py37h8960a57_1",
   "numpy-1.18.4-py36h7314795_0",
   "numpy-1.18.4-py36he0f5f23_0",
   "numpy-1.19.0-py36he0f5f23_0",
   "numpy-1.19.1-py36h3849536_2",
   "numpy-1.19.1-py37h7ea13bd_2",
   "numpy-1.19.1-py37h8960a57_0",
   "numpy-1.19.2-py36h68c22af_1",
   "numpy-1.19.2-py37h7008fea_1",
   "numpy-1.19.2-py38hf89b668_1",
   "numpy-1.19.4-py37haa41c4c_2",
   "numpy-1.19.4-py38h18fd61f_2",
   "numpy-1.19.5-py36h2aa4a07_1",
   "numpy-1.19.5-py39hdbf815f_1",
   "numpy-1.8.2-py34_blas_openblas_201",
   "numpy-1.8.2-py35_blas_openblas_200",
   "numpy-1.8.2-py36_blas_openblas_201",
   "numpy-1.9.3-py27_blas_openblas_203",
   "numpy-1.9.3-py27_blas_openblash1522bff_1207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py27_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py27_blas_openblashd3ea46f_206",
   "numpy-1.9.3-py34_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblas_200",
   "numpy-1.9.3-py36_blas_openblash1522bff_1007",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_6",
   "numpy-1.9.3-py36_blas_openblashb06ca3d_7",
   "numpy-1.9.3-py37_blas_openblash1522bff_1007",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_207",
   "numpy-1.9.3-py37_blas_openblashb06ca3d_7"
  ],
  [
   "packaging-16.7-py27_0",
   "packaging-17.1-py_0",
   "packaging-18.0-py_0",
   "packaging-19.0-py_0",
   "packaging-19.2-py_0",
   "packaging-20.0-py_0",
   "packaging-20.1-py_0",
   "packaging-20.4-pyh9f0ad1d_0",
   "packaging-20.7-pyhd3deb0d_0",
   "packaging-20.8-pyhd3deb0d_0",
   "packaging-20.9-pyh44b312d_0"
  ],
  [
   "pandas-0.25.2-py37hb3f55d8_0",
   "pandas-1.0.0-py37hb3f55d8_0",
   "pandas-1.0.1-py38hb3f55d8_0",
   "pandas-1.0.2-py36h830a2c2_0",
   "pandas-1.0.4-py36h01e7d0c_0",
   "pandas-1.0.5-py37h0da4684_0",
   "pandas-1.0.5-py38hcb8c335_0",
   "pandas-1.1.0-py37h3340039_0",
   "pandas-1.1.1-py38h950e882_0",
   "pandas-1.1.2-py38h950e882_0",
   "pandas-1.1.3-py36h01e7d0c_1",
   "pandas-1.1.3-py36h01e7d0c_2",
   "pandas-1.1.3-py36h7c3b610_2",
   "pandas-1.1.3-py36h831f99a_0",
   "pandas-1.1.3-py39h1670d02_2",
   "pandas-1.1.3-py39hd56b5f2_2",
   "pandas-1.1.5-py36hcf32051_0",
   "pandas-1.1.5-py37hdc94413_0",
   "pandas-1.1.5-py38h51da96c_0",
   "pandas-1.2.0-py37hdc94413_0",
   "pandas-1.2.0-py37hdc94413_1",
   "pandas-1.2.0-py39hde0f152_1",
   "pandas-1.2.1-py38h51da96c_0",
   "pandas-1.2.2-py37h40f5888_0",
   "pandas-1.2.2-py37hdc94413_0"
  ],
  [],
  [
   "pytest-3.1.0-py35_0",
   "pytest-3.1.1-py35_0",
   "pytest-3.1.1-py36_0",
   "pytest-3.1.2-py35_0",
   "pytest-3.1.3-py35_0",
   "pytest-3.10.1-py37_1000",
   "pytest-3.2.0-py27_0",
   "pytest-3.2.0-py36_0",
   "pytest-3.2.2-py35_1",
   "pytest-3.2.4-py27_0",
   "pytest-3.2.4-py35_0",
   "pytest-3.3.1-py36_0",
   "pytest-3.3.2-py35_0",
   "pytest-3.3.2-py36_0",
   "pytest-3.4.0-py27_0",
   "pytest-3.4.0-py35_0",
   "pytest-3.5.1-py35_0",
   "pytest-3.6.0-py35_1",
   "pytest-3.6.1-py27_0",
   "pytest-3.6.2-py27_0",
   "pytest-3.6.2-py35_0",
   "pytest-3.7.1-py35_0",
   "pytest-3.7.1-py37_0",
   "pytest-3.7.3-py27_0",
   "pytest-3.8.0-py27_0",
   "pytest-3.8.0-py36_0",
   "pytest-3.8.2-py27_0",
   "pytest-3.8.2-py27_1000",
   "pytest-3.8.2-py37_1000",
   "pytest-3.9.3-py27_1000",
   "pytest-3.9.3-py37_1000",
   "pytest-4.1.0-py37_1000",
   "pytest-4.3.0-py36_0",
   "pytest-4.3.0-py37_0",
   "pytest-4.3.1-py37_0",
   "pytest-4.4.0-py37_0",
   "pytest-4.4.1-py37_0",
   "pytest-4.5.0-py36_0",
   "pytest-4.6.0-py27_0",
   "pytest-4.6.0-py37_0",
   "pytest-4.6.1-py27_0",
   "pytest-4.6.1-py36_0",
   "pytest-4.6.2-py36_0",
   "pytest-4.6.4-py37_0",
   "pytest-4.6.4-py38_0",
   "pytest-5.0.1-py36_1",
   "pytest-5.0.1-py37_1",
   "pytest-5.1.0-py36_0",
   "pytest-5.1.0-py37_0",
   "pytest-5.2.4-py38_0",
   "pytest-5.3.2-py37_0",
   "pytest-5.3.3-py37_0",
   "pytest-5.3.5-py36_0",
   "pytest-5.3.5-py37_0",
   "pytest-5.4.0-py36h9f0ad1d_0",
   "pytest-5.4.1-py37hc8dfbb8_0",
   "pytest-5.4.3-py36h9f0ad1d_0",
   "pytest-5.4.3-py36hc560c46_0",
   "pytest-6.0.0-py37hc8dfbb8_0",
   "pytest-6.0.1-py37hc8dfbb8_0",
   "pytest-6.1.0-py36h9f0ad1d_0",
   "pytest-6.1.0-py38h32f6830_0",
   "pytest-6.1.1-py36h9f0ad1d_1",
   "pytest-6.1.1-py37he5f6b98_1",
   "pytest-6.1.1-py38h32f6830_1",
   "pytest-6.1.1-py39hde42818_1",
   "pytest-6.2.0-py36h5fab9bb_0",
   "pytest-6.2.0-py38h578d9bd_0",
   "pytest-6.2.0-py39hf3d152e_0",
   "pytest-6.2.1-py36h5fab9bb_1",
   "pytest-6.2.1-py36hd000896_1",
   "pytest-6.2.2-py39hf3d152e_0"
  ],
  [
   "scipy-0.17.1-np110py27_blas_openblas_202",
   "scipy-0.17.1-np110py27_blas_openblas_203",
   "scipy-0.17.1-np110py34_blas_openblas_201",
   "scipy-0.17.1-np110py34_blas_openblas_204",
   "scipy-0.17.1-np110py34_blas_openblas_205",
   "scipy-0.17.1-np110py35_blas_openblas_200",
   "scipy-0.17.1-np111py34_blas_openblas_200",
   "scipy-0.17.1-np111py35_blas_openblas_202",
   "scipy-0.17.1-np111py35_blas_openblas_203",
   "scipy-0.18.0-np110py27_blas_openblas_200",
   "scipy-0.18.0-np110py34_blas_openblas_202",
   "scipy-0.18.0-np110py35_blas_openblas_201",
   "scipy-0.18.1-np110py27_blas_openblas_200",
   "scipy-0.18.1-np110py27_blas_openblas_201",
   "scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy-0.19.0-np111py35_blas_openblas_200",
   "scipy-0.19.0-np112py36_blas_openblas_200",
   "scipy-0.19.0-np113py27_blas_openblas_202",
   "scipy-0.19.0-np113py35_blas_openblas_202",
   "scipy-0.19.1-np111py27_blas_openblas_200",
   "scipy-0.19.1-np113py27_blas_openblas_200",
   "scipy-0.19.1-py35_blas_openblas_201",
   "scipy-0.19.1-py36_blas_openblas_202",
   "scipy-1.0.1-py27_blas_openblas_200",
   "scipy-1.0.1-py36_blas_openblas_200",
   "scipy-1.1.0-py27_blas_openblas_200",
   "scipy-1.1.0-py35_blas_openblash7943236_201",
   "scipy-1.1.0-py36_blas_openblas_200",
   "scipy-1.2.0-py37_blas_openblash1522bff_1201",
   "scipy-1.2.1-py27h09a28d5_1",
   "scipy-1.2.1-py37_blas_openblash1522bff_0",
   "scipy-1.2.1-py37h09a28d5_1",
   "scipy-1.4.0-py36h921218d_0",
   "scipy-1.4.0-py37h921218d_0",
   "scipy-1.4.1-py36h832618f_2",
   "scipy-1.4.1-py38h921218d_0",
   "scipy-1.5.0-py36h2d22cac_0",
   "scipy-1.5.0-py37ha3d9a3c_0",
   "scipy-1.5.1-py36h2d22cac_0",
   "scipy-1.5.2-py36h3a855aa_1",
   "scipy-1.5.2-py36h3a855aa_2",
   "scipy-1.5.2-py36h832618f_0",
   "scipy-1.5.2-py36h8c9ae74_2",
   "scipy-1.5.2-py36h976291a_2",
   "scipy-1.5.2-py37h00869fa_2",
   "scipy-1.5.2-py38hd9480d8_2",
   "scipy-1.5.2-py39hee8e79c_2",
   "scipy-1.5.2-py39hf6ce272_2",
   "scipy-1.5.3-py38h828c644_0"
  ],
  [
   "theano-0.9.0-py27_1",
   "theano-0.9.0-py27_2",
   "theano-0.9.0-py35_1",
   "theano-0.9.0-py35_2",
   "theano-0.9.0-py35_3"
  ],
  [
   "typing-3.6.1-py35_0",
   "typing-3.6.2-py36_0",
   "typing-3.6.4-py27_0",
   "typing-3.6.6-py27_0",
   "typing-3.6.6-py35_0"
  ],
  [
   "typing_extensions-3.7.4.1-py27_0"
  ]
 ]
}