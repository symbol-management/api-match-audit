{
 "bad": [
  "Probe",
  "StringIO.StringIO",
  "_chunk_read_",
  "_get_resampled_img",
  "_utils.CacheMixin",
  "_utils._compose_err_msg",
  "_utils._repr_niimgs",
  "_utils.as_ndarray",
  "_utils.cache_mixin.CacheMixin",
  "_utils.cache_mixin._check_memory",
  "_utils.cache_mixin.cache",
  "_utils.check_niimg",
  "_utils.check_niimg_3d",
  "_utils.check_niimg_4d",
  "_utils.class_inspect.enclosing_scope_name",
  "_utils.class_inspect.get_params",
  "_utils.compat.BytesIO",
  "_utils.compat._basestring",
  "_utils.compat._urllib.error.HTTPError",
  "_utils.compat._urllib.error.URLError",
  "_utils.compat._urllib.parse.quote",
  "_utils.compat._urllib.parse.urlparse",
  "_utils.compat._urllib.request.Request",
  "_utils.compat._urllib.request.build_opener",
  "_utils.compat.cPickle.dumps",
  "_utils.compat.izip",
  "_utils.compat.md5_hash",
  "_utils.copy_img",
  "_utils.extmath.fast_abs_percentile",
  "_utils.extmath.is_spd",
  "_utils.fixes.center_data",
  "_utils.fixes.check_X_y",
  "_utils.fixes.check_cv",
  "_utils.fixes.cross_val_score",
  "_utils.fixes.matplotlib_backports.cbar_outline_get_xy",
  "_utils.fixes.matplotlib_backports.cbar_outline_set_xy",
  "_utils.logger.log",
  "_utils.ndimage._peak_local_max",
  "_utils.ndimage.get_border_data",
  "_utils.ndimage.largest_connected_component",
  "_utils.niimg._safe_get_data",
  "_utils.niimg_conversions._check_same_fov",
  "_utils.niimg_conversions._index_img",
  "_utils.niimg_conversions._iter_check_niimg",
  "_utils.niimg_conversions._resolve_globbing",
  "_utils.niimg_conversions.check_niimg_3d",
  "_utils.niimg_conversions.check_niimg_4d",
  "_utils.niimg_conversions.concat_niimgs",
  "_utils.numpy_conversions._asarray",
  "_utils.numpy_conversions.as_ndarray",
  "_utils.numpy_conversions.csv_to_array",
  "_utils.param_validation._adjust_screening_percentile",
  "_utils.param_validation.check_threshold",
  "_utils.segmentation._random_walker",
  "_utils.testing.is_nose_running",
  "_utils.testing.skip_if_running_nose",
  "abc.abstractmethod",
  "abs_norm",
  "base.BaseDecomposition",
  "base.BaseDecomposition.__init__",
  "base64.b64encode",
  "base_masker.BaseMasker",
  "base_masker.filter_and_extract",
  "cache_mixin.cache",
  "callable_filter",
  "canica.CanICA",
  "cls",
  "cm.alpha_cmap",
  "cm.bwr",
  "cm.cold_hot",
  "cm.cold_white_hot",
  "cmap",
  "collections.Container",
  "collections.Iterable",
  "collections.Sequence",
  "collections.namedtuple",
  "compat._basestring",
  "compat._urllib.errors.HTTPError",
  "compat.izip",
  "contextlib.closing",
  "contextlib.contextmanager",
  "copy.copy",
  "copy.deepcopy",
  "cos",
  "csv.Error",
  "csv.Sniffer",
  "datasets.load_mni152_template",
  "datasets.utils._fetch_files",
  "decomposition.multi_pca.MultiPCA",
  "decomposition.multi_pca.MultiPCA.__init__",
  "decomposition.multi_pca.MultiPCA._raw_fit",
  "dimmer",
  "displays.get_projector",
  "displays.get_slicer",
  "distutils.version.LooseVersion",
  "edge_detect._edge_map",
  "escb",
  "escb.test_scores",
  "exceptions.AuthorizedException",
  "exceptions.DimensionError",
  "f1",
  "f2",
  "fcomb",
  "filt",
  "filt1",
  "filt2",
  "filter_0",
  "filter_0.AND",
  "filter_0.NOT",
  "filter_0.OR",
  "filter_0.XOR",
  "filter_0_and_1",
  "filter_0_or_1",
  "filter_0_xor_1",
  "filter_1",
  "filter_1.add_filter",
  "filter_2",
  "find_cuts.find_cut_slices",
  "find_cuts.find_xyz_cut_coords",
  "fista.mfista",
  "fnmatch.fnmatch",
  "func",
  "functools.partial",
  "functools.wraps",
  "gc.collect",
  "glass_brain.plot_brain_schematics",
  "glob.glob",
  "glob.has_magic",
  "gzip.GzipFile",
  "gzip.GzipFile.max_read_chunk",
  "gzip.open",
  "hashlib.md5",
  "image.clean_img",
  "image.crop_img",
  "image.image._compute_mean",
  "image.image._smooth_array",
  "image.image.threshold_img",
  "image.index_img",
  "image.iter_img",
  "image.load_img",
  "image.new_img_like",
  "image.resample_img",
  "image.resampling.coord_transform",
  "image.resampling.get_bounds",
  "image.resampling.get_mask_bounds",
  "image.resampling.reorder_img",
  "image.resampling.resample_to_img",
  "image.smooth_img",
  "img_plotting._get_colorbar_and_data_ranges",
  "input_data.NiftiLabelsMasker",
  "input_data.NiftiMapsMasker",
  "input_data.masker_validation.check_embedded_nifti_masker",
  "input_data.nifti_spheres_masker._apply_mask_and_get_affinity",
  "inspect.currentframe",
  "inspect.stack",
  "interpolator",
  "io.BytesIO",
  "io.StringIO",
  "itertools.combinations",
  "itertools.izip",
  "itertools.permutations",
  "itertools.product",
  "itertools.repeat",
  "itertools.tee",
  "joblib.Memory",
  "json.dump",
  "json.dumps",
  "json.load",
  "json.loads",
  "l2_norm",
  "logger.log",
  "masker_type",
  "masking._apply_mask_fmri",
  "masking._extrapolate_out_mask",
  "masking._load_mask_img",
  "masking.apply_mask",
  "masking.compute_background_mask",
  "masking.compute_epi_mask",
  "masking.compute_multi_background_mask",
  "masking.compute_multi_epi_mask",
  "masking.unmask",
  "maskvec",
  "math.ceil",
  "math.cos",
  "math.cosh",
  "math.exp",
  "math.floor",
  "math.log",
  "math.pi",
  "math.sin",
  "math.sinh",
  "math.sqrt",
  "matplotlib.__version__",
  "matplotlib.cm.LUTSIZE",
  "matplotlib.cm.Set2",
  "matplotlib.cm.get_cmap",
  "matplotlib.colorbar.ColorbarBase",
  "matplotlib.colorbar.make_axes",
  "matplotlib.colors",
  "matplotlib.colors.ColorConverter",
  "matplotlib.colors.LinearSegmentedColormap",
  "matplotlib.colors.LinearSegmentedColormap.from_list",
  "matplotlib.colors.ListedColormap",
  "matplotlib.colors.Normalize",
  "matplotlib.colors.colorConverter.to_rgb",
  "matplotlib.colors.colorConverter.to_rgba",
  "matplotlib.get_backend",
  "matplotlib.lines.Line2D",
  "matplotlib.patches.PathPatch",
  "matplotlib.path.Path",
  "matplotlib.path.Path.LINETO",
  "matplotlib.path.Path.MOVETO",
  "matplotlib.pyplot.Axes",
  "matplotlib.pyplot.Figure",
  "matplotlib.pyplot.NullFormatter",
  "matplotlib.pyplot.axes",
  "matplotlib.pyplot.close",
  "matplotlib.pyplot.cm",
  "matplotlib.pyplot.cm.RdBu_r",
  "matplotlib.pyplot.cm.ScalarMappable",
  "matplotlib.pyplot.cm.get_cmap",
  "matplotlib.pyplot.cm.gist_ncar",
  "matplotlib.pyplot.cm.gist_rainbow",
  "matplotlib.pyplot.cm.gnuplot",
  "matplotlib.pyplot.cm.gnuplot2",
  "matplotlib.pyplot.cm.gray",
  "matplotlib.pyplot.cm.gray_r",
  "matplotlib.pyplot.cm.hsv",
  "matplotlib.pyplot.cm.jet",
  "matplotlib.pyplot.cm.nipy_spectral",
  "matplotlib.pyplot.draw_if_interactive",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.gcf",
  "matplotlib.pyplot.imshow",
  "matplotlib.pyplot.rcParamsDefault",
  "matplotlib.pyplot.sca",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplot",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.tight_layout",
  "matplotlib.ticker.MaxNLocator",
  "matplotlib.tight_layout.get_renderer",
  "matplotlib.transforms.Affine2D.from_values",
  "matplotlib.transforms.Bbox",
  "matplotlib.use",
  "memory_profiler.memory_usage",
  "model",
  "multi_nifti_masker.MultiNiftiMasker",
  "multi_pca.MultiPCA",
  "multi_pca.MultiPCA._raw_fit",
  "new_filter",
  "nibabel.Nifti1Header",
  "nibabel.Nifti1Image",
  "nibabel.Nifti2Image",
  "nibabel.__version__",
  "nibabel.four_to_three",
  "nibabel.freesurfer.io.read_annot",
  "nibabel.freesurfer.io.read_geometry",
  "nibabel.freesurfer.io.read_label",
  "nibabel.freesurfer.io.read_morph_data",
  "nibabel.freesurfer.io.write_morph_data",
  "nibabel.freesurfer.read_annot",
  "nibabel.freesurfer.write_annot",
  "nibabel.freesurfer.write_geometry",
  "nibabel.gifti.GiftiDataArray",
  "nibabel.gifti.GiftiDataArray.from_array",
  "nibabel.gifti.GiftiImage",
  "nibabel.gifti.read",
  "nibabel.gifti.write",
  "nibabel.load",
  "nibabel.nifti1.Nifti1Extension",
  "nibabel.nifti1.Nifti1Extensions",
  "nibabel.nifti1.intent_codes",
  "nibabel.save",
  "nibabel.spatialimages.SpatialImage",
  "nifti_masker.NiftiMasker",
  "nifti_masker.filter_and_mask",
  "niimg._safe_get_data",
  "niimg.load_niimg",
  "nilearn.CHECK_CACHE_VERSION",
  "nilearn.EXPAND_PATH_WILDCARDS",
  "nilearn._utils.CacheMixin",
  "nilearn._utils._repr_niimgs",
  "nilearn._utils.as_ndarray",
  "nilearn._utils.cache_mixin.MEMORY_CLASSES",
  "nilearn._utils.cache_mixin._ShelvedFunc",
  "nilearn._utils.cache_mixin.__CACHE_CHECKED",
  "nilearn._utils.cache_mixin._check_memory",
  "nilearn._utils.cache_mixin._safe_cache",
  "nilearn._utils.cache_mixin.cache",
  "nilearn._utils.cache_mixin.nibabel",
  "nilearn._utils.check_niimg",
  "nilearn._utils.check_niimg_3d",
  "nilearn._utils.check_niimg_4d",
  "nilearn._utils.class_inspect.enclosing_scope_name",
  "nilearn._utils.class_inspect.get_params",
  "nilearn._utils.compat.BytesIO",
  "nilearn._utils.compat.StringIO",
  "nilearn._utils.compat._basestring",
  "nilearn._utils.compat._module_lookup",
  "nilearn._utils.compat._urllib.request.pathname2url",
  "nilearn._utils.compat.module_lookup",
  "nilearn._utils.compat.pickle",
  "nilearn._utils.compat.urllib",
  "nilearn._utils.compat.urllib2",
  "nilearn._utils.compat.urlparse",
  "nilearn._utils.concat_niimgs",
  "nilearn._utils.exceptions.DimensionError",
  "nilearn._utils.extmath.fast_abs_percentile",
  "nilearn._utils.extmath.is_spd",
  "nilearn._utils.fixes.sklearn_validation.DataConversionWarning",
  "nilearn._utils.fixes.sklearn_validation.NotFittedError",
  "nilearn._utils.fixes.sklearn_validation._assert_all_finite",
  "nilearn._utils.fixes.sklearn_validation._ensure_sparse_format",
  "nilearn._utils.fixes.sklearn_validation._num_samples",
  "nilearn._utils.fixes.sklearn_validation._shape_repr",
  "nilearn._utils.fixes.sklearn_validation.check_array",
  "nilearn._utils.fixes.sklearn_validation.check_consistent_length",
  "nilearn._utils.fixes.sklearn_validation.column_or_1d",
  "nilearn._utils.logger.log",
  "nilearn._utils.ndimage._peak_local_max",
  "nilearn._utils.ndimage.largest_connected_component",
  "nilearn._utils.niimg._get_target_dtype",
  "nilearn._utils.niimg._repr_niimgs",
  "nilearn._utils.niimg._safe_get_data",
  "nilearn._utils.niimg.copy_img",
  "nilearn._utils.niimg.short_repr",
  "nilearn._utils.niimg_conversions._check_fov",
  "nilearn._utils.niimg_conversions._check_same_fov",
  "nilearn._utils.niimg_conversions._index_img",
  "nilearn._utils.niimg_conversions._iter_check_niimg",
  "nilearn._utils.niimg_conversions._resolve_globbing",
  "nilearn._utils.niimg_conversions.check_niimg",
  "nilearn._utils.niimg_conversions.concat_niimgs",
  "nilearn._utils.numpy_conversions._asarray",
  "nilearn._utils.numpy_conversions.as_ndarray",
  "nilearn._utils.numpy_conversions.csv_to_array",
  "nilearn._utils.param_validation.MNI152_BRAIN_VOLUME",
  "nilearn._utils.param_validation._adjust_screening_percentile",
  "nilearn._utils.param_validation._get_mask_volume",
  "nilearn._utils.param_validation.check_feature_screening",
  "nilearn._utils.param_validation.check_threshold",
  "nilearn._utils.segmentation._buildAB",
  "nilearn._utils.segmentation._build_laplacian",
  "nilearn._utils.segmentation._clean_labels_ar",
  "nilearn._utils.segmentation._compute_gradients_3d",
  "nilearn._utils.segmentation._compute_weights_3d",
  "nilearn._utils.segmentation._make_graph_edges_3d",
  "nilearn._utils.segmentation._make_laplacian_sparse",
  "nilearn._utils.segmentation._mask_edges_weights",
  "nilearn._utils.segmentation._random_walker",
  "nilearn._utils.segmentation._solve_cg",
  "nilearn._utils.testing.FetchFilesMock",
  "nilearn._utils.testing.MockOpener",
  "nilearn._utils.testing.MockRequest",
  "nilearn._utils.testing.assert_less",
  "nilearn._utils.testing.assert_less_equal",
  "nilearn._utils.testing.assert_memory_less_than",
  "nilearn._utils.testing.assert_raises_regex",
  "nilearn._utils.testing.assert_warns",
  "nilearn._utils.testing.generate_fake_fmri",
  "nilearn._utils.testing.generate_group_sparse_gaussian_graphs",
  "nilearn._utils.testing.generate_labeled_regions",
  "nilearn._utils.testing.generate_maps",
  "nilearn._utils.testing.generate_regions_ts",
  "nilearn._utils.testing.generate_signals_from_precisions",
  "nilearn._utils.testing.generate_timeseries",
  "nilearn._utils.testing.is_nose_running",
  "nilearn._utils.testing.memory_used",
  "nilearn._utils.testing.mock_request",
  "nilearn._utils.testing.with_memory_profiler",
  "nilearn._utils.testing.wrap_chunk_read_",
  "nilearn._utils.testing.write_tmp_imgs",
  "nilearn.connectome.GroupSparseCovariance",
  "nilearn.connectome.GroupSparseCovarianceCV",
  "nilearn.connectome.connectivity_matrices.ConnectivityMeasure",
  "nilearn.connectome.connectivity_matrices._check_spd",
  "nilearn.connectome.connectivity_matrices._check_square",
  "nilearn.connectome.connectivity_matrices._form_symmetric",
  "nilearn.connectome.connectivity_matrices._geometric_mean",
  "nilearn.connectome.connectivity_matrices._map_eigenvalues",
  "nilearn.connectome.connectivity_matrices.cov_to_corr",
  "nilearn.connectome.connectivity_matrices.prec_to_partial",
  "nilearn.connectome.connectivity_matrices.sym_matrix_to_vec",
  "nilearn.connectome.connectivity_matrices.vec_to_sym_matrix",
  "nilearn.connectome.group_sparse_cov.EarlyStopProbe",
  "nilearn.connectome.group_sparse_cov._assert_submatrix",
  "nilearn.connectome.group_sparse_cov._group_sparse_covariance",
  "nilearn.connectome.group_sparse_cov._update_submatrix",
  "nilearn.connectome.group_sparse_cov.compute_alpha_max",
  "nilearn.connectome.group_sparse_cov.empirical_covariances",
  "nilearn.connectome.group_sparse_cov.group_sparse_covariance",
  "nilearn.connectome.group_sparse_cov.group_sparse_covariance_path",
  "nilearn.connectome.group_sparse_cov.group_sparse_scores",
  "nilearn.connectome.tests.test_connectivity_matrices.grad_geometric_mean",
  "nilearn.connectome.tests.test_connectivity_matrices.random_diagonal",
  "nilearn.connectome.tests.test_connectivity_matrices.random_non_singular",
  "nilearn.connectome.tests.test_connectivity_matrices.random_spd",
  "nilearn.datasets.atlas",
  "nilearn.datasets.atlas._TALAIRACH_LEVELS",
  "nilearn.datasets.atlas._fetch_files",
  "nilearn.datasets.atlas._get_talairach_all_levels",
  "nilearn.datasets.atlas._separate_talairach_levels",
  "nilearn.datasets.atlas.fetch_atlas_aal",
  "nilearn.datasets.atlas.fetch_atlas_allen_2011",
  "nilearn.datasets.atlas.fetch_atlas_basc_multiscale_2015",
  "nilearn.datasets.atlas.fetch_atlas_craddock_2012",
  "nilearn.datasets.atlas.fetch_atlas_destrieux_2009",
  "nilearn.datasets.atlas.fetch_atlas_harvard_oxford",
  "nilearn.datasets.atlas.fetch_atlas_msdl",
  "nilearn.datasets.atlas.fetch_atlas_smith_2009",
  "nilearn.datasets.atlas.fetch_atlas_surf_destrieux",
  "nilearn.datasets.atlas.fetch_atlas_talairach",
  "nilearn.datasets.atlas.fetch_atlas_yeo_2011",
  "nilearn.datasets.atlas.fetch_coords_dosenbach_2010",
  "nilearn.datasets.atlas.fetch_coords_power_2011",
  "nilearn.datasets.fetch_surf_fsaverage5",
  "nilearn.datasets.func",
  "nilearn.datasets.func._load_mixed_gambles",
  "nilearn.datasets.func.fetch_abide_pcp",
  "nilearn.datasets.func.fetch_adhd",
  "nilearn.datasets.func.fetch_cobre",
  "nilearn.datasets.func.fetch_haxby",
  "nilearn.datasets.func.fetch_localizer_button_task",
  "nilearn.datasets.func.fetch_localizer_calculation_task",
  "nilearn.datasets.func.fetch_localizer_contrasts",
  "nilearn.datasets.func.fetch_megatrawls_netmats",
  "nilearn.datasets.func.fetch_mixed_gambles",
  "nilearn.datasets.func.fetch_miyawaki2008",
  "nilearn.datasets.func.fetch_nyu_rest",
  "nilearn.datasets.func.fetch_surf_nki_enhanced",
  "nilearn.datasets.load_mni152_brain_mask",
  "nilearn.datasets.load_mni152_template",
  "nilearn.datasets.neurovault.Contains",
  "nilearn.datasets.neurovault.GreaterOrEqual",
  "nilearn.datasets.neurovault.GreaterThan",
  "nilearn.datasets.neurovault.IsIn",
  "nilearn.datasets.neurovault.IsNull",
  "nilearn.datasets.neurovault.LessOrEqual",
  "nilearn.datasets.neurovault.LessThan",
  "nilearn.datasets.neurovault.NotContains",
  "nilearn.datasets.neurovault.NotEqual",
  "nilearn.datasets.neurovault.NotIn",
  "nilearn.datasets.neurovault.NotNull",
  "nilearn.datasets.neurovault.Pattern",
  "nilearn.datasets.neurovault.Request",
  "nilearn.datasets.neurovault.ResultFilter",
  "nilearn.datasets.neurovault.URLError",
  "nilearn.datasets.neurovault._COL_FILTERS_AVAILABLE_ON_SERVER",
  "nilearn.datasets.neurovault._DEBUG",
  "nilearn.datasets.neurovault._DEFAULT_BATCH_SIZE",
  "nilearn.datasets.neurovault._DEFAULT_MAX_IMAGES",
  "nilearn.datasets.neurovault._ERROR",
  "nilearn.datasets.neurovault._IM_FILTERS_AVAILABLE_ON_SERVER",
  "nilearn.datasets.neurovault._INFO",
  "nilearn.datasets.neurovault._MAX_CONSECUTIVE_FAILS",
  "nilearn.datasets.neurovault._MAX_FAILS_IN_COLLECTION",
  "nilearn.datasets.neurovault._NEUROSYNTH_FETCH_WORDS_URL",
  "nilearn.datasets.neurovault._NEUROVAULT_BASE_URL",
  "nilearn.datasets.neurovault._NEUROVAULT_COLLECTIONS_URL",
  "nilearn.datasets.neurovault._NEUROVAULT_IMAGES_URL",
  "nilearn.datasets.neurovault._OrderComp",
  "nilearn.datasets.neurovault._SpecialValue",
  "nilearn.datasets.neurovault._TemporaryDirectory",
  "nilearn.datasets.neurovault._add_absolute_paths",
  "nilearn.datasets.neurovault._append_filters_to_query",
  "nilearn.datasets.neurovault._check_has_words",
  "nilearn.datasets.neurovault._download_collection",
  "nilearn.datasets.neurovault._download_image",
  "nilearn.datasets.neurovault._download_image_nii_file",
  "nilearn.datasets.neurovault._download_image_terms",
  "nilearn.datasets.neurovault._empty_filter",
  "nilearn.datasets.neurovault._fetch_collection_for_image",
  "nilearn.datasets.neurovault._fetch_file",
  "nilearn.datasets.neurovault._fetch_neurovault_implementation",
  "nilearn.datasets.neurovault._get_batch",
  "nilearn.datasets.neurovault._get_encoding",
  "nilearn.datasets.neurovault._json_add_collection_dir",
  "nilearn.datasets.neurovault._json_add_im_files_paths",
  "nilearn.datasets.neurovault._json_from_file",
  "nilearn.datasets.neurovault._move_col_id",
  "nilearn.datasets.neurovault._move_unknown_terms_to_local_filter",
  "nilearn.datasets.neurovault._prepare_download_params",
  "nilearn.datasets.neurovault._prepare_explicit_ids_download_params",
  "nilearn.datasets.neurovault._prepare_filtered_download_params",
  "nilearn.datasets.neurovault._print_if",
  "nilearn.datasets.neurovault._print_progress",
  "nilearn.datasets.neurovault._read_download_params",
  "nilearn.datasets.neurovault._remove_none_strings",
  "nilearn.datasets.neurovault._result_list_to_bunch",
  "nilearn.datasets.neurovault._scroll",
  "nilearn.datasets.neurovault._scroll_collection",
  "nilearn.datasets.neurovault._scroll_collection_ids",
  "nilearn.datasets.neurovault._scroll_explicit",
  "nilearn.datasets.neurovault._scroll_filtered",
  "nilearn.datasets.neurovault._scroll_image_ids",
  "nilearn.datasets.neurovault._scroll_local",
  "nilearn.datasets.neurovault._scroll_server_results",
  "nilearn.datasets.neurovault._simple_download",
  "nilearn.datasets.neurovault._split_terms",
  "nilearn.datasets.neurovault._update",
  "nilearn.datasets.neurovault._update_image",
  "nilearn.datasets.neurovault._write_metadata",
  "nilearn.datasets.neurovault._yield_from_url_list",
  "nilearn.datasets.neurovault.basic_collection_terms",
  "nilearn.datasets.neurovault.basic_image_terms",
  "nilearn.datasets.neurovault.build_opener",
  "nilearn.datasets.neurovault.fetch_neurovault",
  "nilearn.datasets.neurovault.fetch_neurovault_ids",
  "nilearn.datasets.neurovault.neurosynth_words_vectorized",
  "nilearn.datasets.struct",
  "nilearn.datasets.struct.MNI152_FILE_PATH",
  "nilearn.datasets.struct._package_directory",
  "nilearn.datasets.struct.fetch_icbm152_2009",
  "nilearn.datasets.struct.fetch_icbm152_brain_gm_mask",
  "nilearn.datasets.struct.fetch_oasis_vbm",
  "nilearn.datasets.struct.fetch_surf_fsaverage5",
  "nilearn.datasets.struct.load_mni152_brain_mask",
  "nilearn.datasets.struct.load_mni152_template",
  "nilearn.datasets.tests.test_atlas._get_small_fake_talairach",
  "nilearn.datasets.tests.test_atlas._mock_talairach_fetch_files",
  "nilearn.datasets.tests.test_atlas.setup_mock",
  "nilearn.datasets.tests.test_atlas.teardown_mock",
  "nilearn.datasets.tests.test_func.setup_mock",
  "nilearn.datasets.tests.test_func.teardown_mock",
  "nilearn.datasets.tests.test_neurovault._FailingDownloads",
  "nilearn.datasets.tests.test_neurovault._FakeResponse",
  "nilearn.datasets.tests.test_neurovault._TestTemporaryDirectory",
  "nilearn.datasets.tests.test_neurovault._fail",
  "nilearn.datasets.tests.test_neurovault._same_stat",
  "nilearn.datasets.tests.test_neurovault.ignore_connection_errors",
  "nilearn.datasets.tests.test_struct.setup_mock",
  "nilearn.datasets.tests.test_struct.teardown_mock",
  "nilearn.datasets.tests.test_utils.currdir",
  "nilearn.datasets.tests.test_utils.setup_mock",
  "nilearn.datasets.tests.test_utils.setup_tmpdata",
  "nilearn.datasets.tests.test_utils.teardown_mock",
  "nilearn.datasets.tests.test_utils.teardown_tmpdata",
  "nilearn.datasets.tests.test_utils.tmpdir",
  "nilearn.datasets.utils",
  "nilearn.datasets.utils._chunk_read_",
  "nilearn.datasets.utils._chunk_report_",
  "nilearn.datasets.utils._fetch_file",
  "nilearn.datasets.utils._fetch_files",
  "nilearn.datasets.utils._filter_column",
  "nilearn.datasets.utils._filter_columns",
  "nilearn.datasets.utils._format_time",
  "nilearn.datasets.utils._get_dataset_dir",
  "nilearn.datasets.utils._md5_sum_file",
  "nilearn.datasets.utils._read_md5_sum_file",
  "nilearn.datasets.utils._tree",
  "nilearn.datasets.utils._uncompress_file",
  "nilearn.datasets.utils.get_data_dirs",
  "nilearn.datasets.utils.movetree",
  "nilearn.datasets.utils.readlinkabs",
  "nilearn.decoding.fista._check_lipschitz_continuous",
  "nilearn.decoding.fista.mfista",
  "nilearn.decoding.objective_functions._div",
  "nilearn.decoding.objective_functions._div_id",
  "nilearn.decoding.objective_functions._gradient",
  "nilearn.decoding.objective_functions._gradient_id",
  "nilearn.decoding.objective_functions._logistic",
  "nilearn.decoding.objective_functions._logistic_loss_grad",
  "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant",
  "nilearn.decoding.objective_functions._sigmoid",
  "nilearn.decoding.objective_functions._squared_loss",
  "nilearn.decoding.objective_functions._squared_loss_grad",
  "nilearn.decoding.objective_functions._unmask",
  "nilearn.decoding.objective_functions.spectral_norm_squared",
  "nilearn.decoding.proximal_operators._dual_gap_prox_tvl1",
  "nilearn.decoding.proximal_operators._objective_function_prox_tvl1",
  "nilearn.decoding.proximal_operators._projector_on_tvl1_dual",
  "nilearn.decoding.proximal_operators._prox_l1",
  "nilearn.decoding.proximal_operators._prox_tvl1",
  "nilearn.decoding.searchlight.ESTIMATOR_CATALOG",
  "nilearn.decoding.searchlight.GroupIterator",
  "nilearn.decoding.searchlight.SearchLight",
  "nilearn.decoding.searchlight.search_light",
  "nilearn.decoding.space_net.BaseSpaceNet",
  "nilearn.decoding.space_net.SpaceNetClassifier",
  "nilearn.decoding.space_net.SpaceNetRegressor",
  "nilearn.decoding.space_net._EarlyStoppingCallback",
  "nilearn.decoding.space_net._crop_mask",
  "nilearn.decoding.space_net._space_net_alpha_grid",
  "nilearn.decoding.space_net._univariate_feature_screening",
  "nilearn.decoding.space_net.path_scores",
  "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function",
  "nilearn.decoding.space_net_solvers._graph_net_data_function",
  "nilearn.decoding.space_net_solvers._graph_net_logistic",
  "nilearn.decoding.space_net_solvers._graph_net_squared_loss",
  "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad",
  "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative",
  "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant",
  "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad",
  "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative",
  "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant",
  "nilearn.decoding.space_net_solvers._tvl1_objective",
  "nilearn.decoding.space_net_solvers._tvl1_objective_from_gradient",
  "nilearn.decoding.space_net_solvers.mfista",
  "nilearn.decoding.space_net_solvers.tvl1_solver",
  "nilearn.decoding.tests.test_graph_net._make_data",
  "nilearn.decoding.tests.test_graph_net.get_gradient_matrix",
  "nilearn.decoding.tests.test_objective_functions.test_grad_div_adjoint_arbitrary_ndim",
  "nilearn.decoding.tests.test_same_api._make_data",
  "nilearn.decoding.tests.test_same_api.to_niimgs",
  "nilearn.decoding.tests.test_space_net.logistic_path_scores",
  "nilearn.decoding.tests.test_space_net.size",
  "nilearn.decoding.tests.test_space_net.squared_loss_path_scores",
  "nilearn.decomposition.base.fast_svd",
  "nilearn.decomposition.base.mask_and_reduce",
  "nilearn.decomposition.canica.CanICA",
  "nilearn.decomposition.dict_learning.DictLearning",
  "nilearn.decomposition.dict_learning._compute_loadings",
  "nilearn.decomposition.multi_pca.MultiPCA",
  "nilearn.decomposition.tests.test_canica._make_canica_components",
  "nilearn.decomposition.tests.test_canica._make_canica_test_data",
  "nilearn.decomposition.tests.test_canica._make_data_from_components",
  "nilearn.decomposition.tests.test_multi_pca._tmp_dir",
  "nilearn.image.concat_imgs",
  "nilearn.image.crop_img",
  "nilearn.image.image._compute_mean",
  "nilearn.image.image._crop_img_to",
  "nilearn.image.image._fast_smooth_array",
  "nilearn.image.image._smooth_array",
  "nilearn.image.image.clean_img",
  "nilearn.image.image.copy",
  "nilearn.image.image.crop_img",
  "nilearn.image.image.high_variance_confounds",
  "nilearn.image.image.index_img",
  "nilearn.image.image.iter_img",
  "nilearn.image.image.mean_img",
  "nilearn.image.image.new_img_like",
  "nilearn.image.image.smooth_img",
  "nilearn.image.image.swap_img_hemispheres",
  "nilearn.image.index_img",
  "nilearn.image.iter_img",
  "nilearn.image.largest_connected_component_img",
  "nilearn.image.math_img",
  "nilearn.image.new_img_like",
  "nilearn.image.resample_img",
  "nilearn.image.resampling.BoundingBoxError",
  "nilearn.image.resampling._resample_one_img",
  "nilearn.image.resampling.coord_transform",
  "nilearn.image.resampling.from_matrix_vector",
  "nilearn.image.resampling.get_bounds",
  "nilearn.image.resampling.reorder_img",
  "nilearn.image.resampling.resample_img",
  "nilearn.image.resampling.resample_to_img",
  "nilearn.image.resampling.to_matrix_vector",
  "nilearn.image.tests.test_image.X64",
  "nilearn.image.tests.test_image.currdir",
  "nilearn.image.tests.test_image.datadir",
  "nilearn.image.tests.test_resampling.copy",
  "nilearn.image.tests.test_resampling.pad",
  "nilearn.image.tests.test_resampling.rotation",
  "nilearn.image.threshold_img",
  "nilearn.input_data.MultiNiftiMasker",
  "nilearn.input_data.NiftiMasker",
  "nilearn.input_data.NiftiSpheresMasker",
  "nilearn.input_data.masker_validation.check_embedded_nifti_masker",
  "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
  "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker",
  "nilearn.input_data.nifti_labels_masker._ExtractionFunctor",
  "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker",
  "nilearn.input_data.nifti_maps_masker._ExtractionFunctor",
  "nilearn.input_data.nifti_masker.NiftiMasker",
  "nilearn.input_data.nifti_masker._ExtractionFunctor",
  "nilearn.input_data.nifti_masker.filter_and_mask",
  "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker",
  "nilearn.input_data.nifti_spheres_masker._ExtractionFunctor",
  "nilearn.input_data.nifti_spheres_masker._apply_mask_and_get_affinity",
  "nilearn.input_data.nifti_spheres_masker._iter_signals_from_spheres",
  "nilearn.input_data.tests.test_masker_validation.OwningClass",
  "nilearn.input_data.tests.test_nifti_labels_masker.generate_random_img",
  "nilearn.input_data.tests.test_nifti_maps_masker.generate_random_img",
  "nilearn.masking.MaskWarning",
  "nilearn.masking._apply_mask_fmri",
  "nilearn.masking._load_mask_img",
  "nilearn.masking._post_process_mask",
  "nilearn.masking._unmask_3d",
  "nilearn.masking._unmask_4d",
  "nilearn.masking.apply_mask",
  "nilearn.masking.compute_background_mask",
  "nilearn.masking.compute_epi_mask",
  "nilearn.masking.compute_multi_epi_mask",
  "nilearn.masking.intersect_masks",
  "nilearn.masking.unmask",
  "nilearn.mass_univariate.permuted_least_squares._permuted_ols_on_chunk",
  "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design",
  "nilearn.mass_univariate.permuted_least_squares.normalize_matrix_on_axis",
  "nilearn.mass_univariate.permuted_least_squares.orthonormalize_matrix",
  "nilearn.mass_univariate.permuted_ols",
  "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
  "nilearn.plotting.__all__",
  "nilearn.plotting._set_mpl_backend",
  "nilearn.plotting.cm.dim_cmap",
  "nilearn.plotting.cm.replace_inside",
  "nilearn.plotting.displays.BaseAxes",
  "nilearn.plotting.displays.BaseSlicer",
  "nilearn.plotting.displays.BaseStackedSlicer",
  "nilearn.plotting.displays.CutAxes",
  "nilearn.plotting.displays.GlassBrainAxes",
  "nilearn.plotting.displays.LProjector",
  "nilearn.plotting.displays.LRProjector",
  "nilearn.plotting.displays.LYRProjector",
  "nilearn.plotting.displays.LYRZProjector",
  "nilearn.plotting.displays.LZRProjector",
  "nilearn.plotting.displays.LZRYProjector",
  "nilearn.plotting.displays.OrthoProjector",
  "nilearn.plotting.displays.OrthoProjector.init_with_figure",
  "nilearn.plotting.displays.OrthoSlicer",
  "nilearn.plotting.displays.PROJECTORS",
  "nilearn.plotting.displays.RProjector",
  "nilearn.plotting.displays.SLICERS",
  "nilearn.plotting.displays.XProjector",
  "nilearn.plotting.displays.XSlicer",
  "nilearn.plotting.displays.XSlicer.init_with_figure",
  "nilearn.plotting.displays.XZProjector",
  "nilearn.plotting.displays.XZSlicer",
  "nilearn.plotting.displays.YProjector",
  "nilearn.plotting.displays.YSlicer",
  "nilearn.plotting.displays.YXProjector",
  "nilearn.plotting.displays.YXSlicer",
  "nilearn.plotting.displays.YZProjector",
  "nilearn.plotting.displays.YZSlicer",
  "nilearn.plotting.displays.ZProjector",
  "nilearn.plotting.displays.ZSlicer",
  "nilearn.plotting.displays._coords_3d_to_2d",
  "nilearn.plotting.displays._get_index_from_direction",
  "nilearn.plotting.displays.get_create_display_fun",
  "nilearn.plotting.edge_detect._edge_detect",
  "nilearn.plotting.edge_detect._orientation_kernel",
  "nilearn.plotting.find_cuts._transform_cut_coords",
  "nilearn.plotting.find_cuts.find_cut_slices",
  "nilearn.plotting.find_cuts.find_xyz_cut_coords",
  "nilearn.plotting.glass_brain._codes",
  "nilearn.plotting.glass_brain._codes_bezier",
  "nilearn.plotting.glass_brain._codes_segment",
  "nilearn.plotting.glass_brain._get_json_and_transform",
  "nilearn.plotting.glass_brain._get_mpl_patches",
  "nilearn.plotting.glass_brain._get_object_bounds",
  "nilearn.plotting.glass_brain._invert_color",
  "nilearn.plotting.glass_brain.plot_brain_schematics",
  "nilearn.plotting.glass_brain_files.plot_align_svg.add_brain_schematics",
  "nilearn.plotting.glass_brain_files.plot_align_svg.display",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter._import_svg",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter.converter",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter.json_filename",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg",
  "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg_filename",
  "nilearn.plotting.img_plotting.MNI152TEMPLATE",
  "nilearn.plotting.img_plotting.MNI152TEMPLATE.get_affine",
  "nilearn.plotting.img_plotting._MNI152Template",
  "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
  "nilearn.plotting.img_plotting._load_anat",
  "nilearn.plotting.img_plotting._plot_img_with_bg",
  "nilearn.plotting.img_plotting.plot_anat",
  "nilearn.plotting.img_plotting.plot_connectome",
  "nilearn.plotting.img_plotting.plot_epi",
  "nilearn.plotting.img_plotting.plot_glass_brain",
  "nilearn.plotting.img_plotting.plot_img",
  "nilearn.plotting.img_plotting.plot_prob_atlas",
  "nilearn.plotting.img_plotting.plot_roi",
  "nilearn.plotting.img_plotting.plot_stat_map",
  "nilearn.plotting.matrix_plotting.fit_axes",
  "nilearn.plotting.matrix_plotting.plot_matrix",
  "nilearn.plotting.plot_anat",
  "nilearn.plotting.show",
  "nilearn.plotting.surf_plotting.plot_surf",
  "nilearn.plotting.surf_plotting.plot_surf_roi",
  "nilearn.plotting.surf_plotting.plot_surf_stat_map",
  "nilearn.plotting.tests.test_img_plotting._generate_img",
  "nilearn.plotting.tests.test_img_plotting.demo_plot_roi",
  "nilearn.plotting.tests.test_img_plotting.mni_affine",
  "nilearn.regions.RegionExtractor",
  "nilearn.regions.connected_label_regions",
  "nilearn.regions.connected_regions",
  "nilearn.regions.parcellations.Parcellations",
  "nilearn.regions.parcellations._check_parameters_transform",
  "nilearn.regions.parcellations._estimator_fit",
  "nilearn.regions.parcellations._labels_masker_extraction",
  "nilearn.regions.region_extractor.RegionExtractor",
  "nilearn.regions.region_extractor._remove_small_regions",
  "nilearn.regions.region_extractor._threshold_maps_ratio",
  "nilearn.regions.region_extractor.connected_regions",
  "nilearn.regions.signal_extraction._trim_maps",
  "nilearn.regions.signal_extraction.img_to_signals_labels",
  "nilearn.regions.signal_extraction.img_to_signals_maps",
  "nilearn.regions.signal_extraction.signals_to_img_labels",
  "nilearn.regions.signal_extraction.signals_to_img_maps",
  "nilearn.regions.tests.test_region_extractor._make_random_data",
  "nilearn.regions.tests.test_signal_extraction._TEST_DIM_ERROR_MSG",
  "nilearn.signal.NP_VERSION",
  "nilearn.signal._check_wn",
  "nilearn.signal._detrend",
  "nilearn.signal._ensure_float",
  "nilearn.signal._mean_of_squares",
  "nilearn.signal._standardize",
  "nilearn.signal.butterworth",
  "nilearn.signal.clean",
  "nilearn.signal.high_variance_confounds",
  "nilearn.surface.load_surf_data",
  "nilearn.surface.load_surf_mesh",
  "nilearn.surface.surface.EfficiencyWarning",
  "nilearn.surface.surface._ball_sample_locations",
  "nilearn.surface.surface._face_outer_normals",
  "nilearn.surface.surface._interpolation_sampling",
  "nilearn.surface.surface._line_sample_locations",
  "nilearn.surface.surface._load_uniform_ball_cloud",
  "nilearn.surface.surface._masked_indices",
  "nilearn.surface.surface._nearest_voxel_sampling",
  "nilearn.surface.surface._projection_matrix",
  "nilearn.surface.surface._sample_locations",
  "nilearn.surface.surface._surrounding_faces",
  "nilearn.surface.surface._uniform_ball_cloud",
  "nilearn.surface.surface._vertex_outer_normals",
  "nilearn.surface.surface.load_surf_mesh",
  "nilearn.surface.tests.test_surface._check_vol_to_surf_results",
  "nilearn.surface.tests.test_surface._flat_mesh",
  "nilearn.surface.tests.test_surface._generate_surf",
  "nilearn.surface.tests.test_surface._z_const_img",
  "nilearn.surface.tests.test_surface.currdir",
  "nilearn.surface.tests.test_surface.datadir",
  "nilearn.surface.vol_to_surf",
  "nilearn.tests.test_cache_mixin.CacheMixinTest",
  "nilearn.tests.test_cache_mixin.f",
  "nilearn.tests.test_class_inspect.A",
  "nilearn.tests.test_class_inspect.B",
  "nilearn.tests.test_class_inspect.C",
  "nilearn.tests.test_class_inspect.get_scope_name",
  "nilearn.tests.test_logger.Run",
  "nilearn.tests.test_logger.Run2",
  "nilearn.tests.test_logger.Run3",
  "nilearn.tests.test_logger.capture_output",
  "nilearn.tests.test_logger.other_run",
  "nilearn.tests.test_logger.run",
  "nilearn.tests.test_masking._TEST_DIM_ERROR_MSG",
  "nilearn.tests.test_niimg_conversions.PhonyNiimage",
  "nilearn.tests.test_niimg_conversions._check_memory",
  "nilearn.tests.test_niimg_conversions._remove_if_exists",
  "nilearn.tests.test_niimg_conversions.nifti_generator",
  "nilearn.tests.test_numpy_conversions.are_arrays_identical",
  "nilearn.tests.test_param_validation.mni152_brain_mask",
  "nilearn.tests.test_signal.generate_signals",
  "nilearn.tests.test_signal.generate_trends",
  "nilearn.tests.test_testing.create_object",
  "nilearn.version.REQUIRED_MODULE_METADATA",
  "nilearn.version._NILEARN_INSTALL_MSG",
  "nilearn.version._import_module_with_version_check",
  "nose.SkipTest",
  "nose.loader.__file__",
  "nose.tools.assert_almost_equal",
  "nose.tools.assert_equal",
  "nose.tools.assert_false",
  "nose.tools.assert_not_equal",
  "nose.tools.assert_raises",
  "nose.tools.assert_true",
  "nose.tools.nottest",
  "nose.tools.raises",
  "nose.with_setup",
  "not_filter_0",
  "numbers.Number",
  "numbers.Real",
  "numpy",
  "numpy.NaN",
  "numpy.VisibleDeprecationWarning",
  "numpy.__version__",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.amax",
  "numpy.amin",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argsort",
  "numpy.argwhere",
  "numpy.array",
  "numpy.array_split",
  "numpy.asanyarray",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.asfortranarray",
  "numpy.atleast_1d",
  "numpy.atleast_2d",
  "numpy.atleast_3d",
  "numpy.bincount",
  "numpy.bool",
  "numpy.c_.T",
  "numpy.ceil",
  "numpy.concatenate",
  "numpy.copy",
  "numpy.corrcoef",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.cross",
  "numpy.cumsum",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.diagonal",
  "numpy.diff",
  "numpy.dot",
  "numpy.dstack",
  "numpy.dtype",
  "numpy.empty",
  "numpy.empty_like",
  "numpy.exp",
  "numpy.eye",
  "numpy.fabs",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.float",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor",
  "numpy.genfromtxt",
  "numpy.hstack",
  "numpy.identity",
  "numpy.iinfo",
  "numpy.in1d",
  "numpy.indices",
  "numpy.inf",
  "numpy.int",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.isfinite",
  "numpy.isnan",
  "numpy.lib.recfunctions.join_by",
  "numpy.linalg.det",
  "numpy.linalg.eigh",
  "numpy.linalg.eigvalsh",
  "numpy.linalg.inv",
  "numpy.linalg.lstsq",
  "numpy.linalg.norm",
  "numpy.linalg.pinv",
  "numpy.linalg.qr",
  "numpy.linspace",
  "numpy.loadtxt",
  "numpy.log",
  "numpy.log10",
  "numpy.log1p",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.logical_xor",
  "numpy.logspace",
  "numpy.ma.masked",
  "numpy.ma.masked_array",
  "numpy.ma.masked_equal",
  "numpy.ma.masked_greater",
  "numpy.ma.masked_inside",
  "numpy.ma.masked_less",
  "numpy.ma.max",
  "numpy.ma.min",
  "numpy.max",
  "numpy.maximum",
  "numpy.may_share_memory",
  "numpy.mean",
  "numpy.median",
  "numpy.memmap",
  "numpy.mgrid",
  "numpy.mgrid.ravel",
  "numpy.min",
  "numpy.minimum",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.nanmax",
  "numpy.nanmean",
  "numpy.nanmin",
  "numpy.nansum",
  "numpy.ndarray",
  "numpy.ndenumerate",
  "numpy.ndim",
  "numpy.ndindex",
  "numpy.newaxis",
  "numpy.newaxis.T",
  "numpy.ones",
  "numpy.ones_like",
  "numpy.outer",
  "numpy.partition",
  "numpy.pi",
  "numpy.polyfit",
  "numpy.prod",
  "numpy.r_",
  "numpy.random.RandomState",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.ravel",
  "numpy.ravel_multi_index",
  "numpy.rec.array",
  "numpy.recarray",
  "numpy.recfromcsv",
  "numpy.reciprocal",
  "numpy.repeat",
  "numpy.reshape",
  "numpy.rollaxis",
  "numpy.rot90",
  "numpy.round",
  "numpy.savetxt",
  "numpy.searchsorted",
  "numpy.set_printoptions",
  "numpy.seterr",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.squeeze",
  "numpy.sum",
  "numpy.swapaxes",
  "numpy.testing.assert_allclose",
  "numpy.testing.assert_almost_equal",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_array_less",
  "numpy.testing.assert_equal",
  "numpy.testing.assert_raises",
  "numpy.tile",
  "numpy.tri",
  "numpy.tril",
  "numpy.tril_indices_from",
  "numpy.triu",
  "numpy.typecodes",
  "numpy.uint",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.unique",
  "numpy.unravel_index",
  "numpy.var",
  "numpy.version",
  "numpy.version.full_version",
  "numpy.version.short_version",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "objective_functions._div",
  "objective_functions._div_id",
  "objective_functions._gradient",
  "objective_functions._gradient_id",
  "objective_functions._logistic",
  "objective_functions._logistic_loss_grad",
  "objective_functions._logistic_loss_lipschitz_constant",
  "objective_functions._squared_loss",
  "objective_functions._squared_loss_grad",
  "objective_functions._tv_l1_from_gradient",
  "objective_functions._unmask",
  "objective_functions.spectral_norm_squared",
  "operator.itemgetter",
  "os.W_OK",
  "os.access",
  "os.chmod",
  "os.close",
  "os.environ",
  "os.environ.get",
  "os.environ.pop",
  "os.error",
  "os.getenv",
  "os.getpid",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.samefile",
  "os.path.split",
  "os.path.splitext",
  "os.pathsep",
  "os.readlink",
  "os.remove",
  "os.removedirs",
  "os.rename",
  "os.rmdir",
  "os.sep",
  "os.stat",
  "os.unlink",
  "os.walk",
  "os.write",
  "our_cmap",
  "our_cmap.N",
  "pandas.DataFrame",
  "platform.architecture",
  "plot_func",
  "projector",
  "proximal_operators._prox_l1",
  "proximal_operators._prox_l1_with_intercept",
  "proximal_operators._prox_tvl1_with_intercept",
  "re.I",
  "re.IGNORECASE",
  "re.escape",
  "re.match",
  "re.search",
  "re.sub",
  "regions.signal_extraction.img_to_signals_labels",
  "regions.signal_extraction.img_to_signals_maps",
  "regions.signal_extraction.signals_to_img_labels",
  "regions.signal_extraction.signals_to_img_maps",
  "resampling.reorder_img",
  "resampling.resample_img",
  "sampling",
  "scipy.__version__",
  "scipy.cluster.hierarchy.leaves_list",
  "scipy.cluster.hierarchy.linkage",
  "scipy.cluster.hierarchy.optimal_leaf_ordering",
  "scipy.interpolate.RegularGridInterpolator",
  "scipy.linalg.eigh",
  "scipy.linalg.inv",
  "scipy.linalg.lstsq",
  "scipy.linalg.norm",
  "scipy.linalg.pinv",
  "scipy.linalg.qr",
  "scipy.linalg.svd",
  "scipy.linalg.svdvals",
  "scipy.ndimage.affine_transform",
  "scipy.ndimage.binary_closing",
  "scipy.ndimage.binary_dilation",
  "scipy.ndimage.binary_erosion",
  "scipy.ndimage.binary_propagation",
  "scipy.ndimage.center_of_mass",
  "scipy.ndimage.distance_transform_cdt",
  "scipy.ndimage.filters.gaussian_filter",
  "scipy.ndimage.find_objects",
  "scipy.ndimage.gaussian_filter",
  "scipy.ndimage.gaussian_filter1d",
  "scipy.ndimage.label",
  "scipy.ndimage.maximum_filter",
  "scipy.ndimage.measurements.mean",
  "scipy.ndimage.morphology.binary_fill_holes",
  "scipy.ndimage.sobel",
  "scipy.optimize.check_grad",
  "scipy.signal",
  "scipy.signal.butter",
  "scipy.signal.copy",
  "scipy.signal.filtfilt",
  "scipy.signal.wiener",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.issparse",
  "scipy.sparse.linalg.cg",
  "scipy.spatial.Delaunay",
  "scipy.stats.kstest",
  "scipy.stats.scoreatpercentile",
  "scipy.stats.spearmanr",
  "scipy.stats.t",
  "set_func",
  "shutil.copyfileobj",
  "shutil.move",
  "shutil.rmtree",
  "signal._standardize",
  "signal.clean",
  "signal.high_variance_confounds",
  "signal_extraction.signals_to_img_labels",
  "simulate_graph_net_data.create_graph_net_simulation_data",
  "sin",
  "sklearn.__version__",
  "sklearn.base.BaseEstimator",
  "sklearn.base.RegressorMixin",
  "sklearn.base.TransformerMixin",
  "sklearn.base.clone",
  "sklearn.cluster.AgglomerativeClustering",
  "sklearn.cluster.MiniBatchKMeans",
  "sklearn.covariance.EmpiricalCovariance",
  "sklearn.covariance.LedoitWolf",
  "sklearn.covariance.empirical_covariance",
  "sklearn.cross_validation.KFold",
  "sklearn.datasets.base.Bunch",
  "sklearn.datasets.load_iris",
  "sklearn.decomposition.dict_learning_online",
  "sklearn.decomposition.fastica",
  "sklearn.exceptions.EfficiencyWarning",
  "sklearn.externals.joblib.Memory",
  "sklearn.externals.joblib.Parallel",
  "sklearn.externals.joblib.cpu_count",
  "sklearn.externals.joblib.delayed",
  "sklearn.externals.joblib.hash",
  "sklearn.feature_extraction.DictVectorizer",
  "sklearn.feature_extraction.image.grid_to_graph",
  "sklearn.feature_selection.SelectPercentile",
  "sklearn.feature_selection.f_classif",
  "sklearn.feature_selection.f_regression",
  "sklearn.linear_model.Lasso",
  "sklearn.linear_model.LinearRegression",
  "sklearn.linear_model.LogisticRegression",
  "sklearn.linear_model.Ridge",
  "sklearn.linear_model.base.LinearModel",
  "sklearn.linear_model.base.LinearModel.decision_function",
  "sklearn.linear_model.base.LinearModel.predict",
  "sklearn.linear_model.coordinate_descent._alpha_grid",
  "sklearn.metrics.accuracy_score",
  "sklearn.model_selection.KFold",
  "sklearn.model_selection.LeaveOneGroupOut",
  "sklearn.neighbors.NearestNeighbors",
  "sklearn.preprocessing.LabelBinarizer",
  "sklearn.svm.LinearSVC",
  "sklearn.svm.SVR",
  "sklearn.utils.as_float_array",
  "sklearn.utils.check_array",
  "sklearn.utils.check_random_state",
  "sklearn.utils.deprecated",
  "sklearn.utils.extmath.fast_logdet",
  "sklearn.utils.extmath.norm",
  "sklearn.utils.extmath.randomized_svd",
  "sklearn.utils.extmath.safe_sparse_dot",
  "sklearn.utils.extmath.svd_flip",
  "sklearn.utils.gen_even_slices",
  "sklearn.utils.testing.assert_less",
  "sklearn.utils.testing.assert_warns",
  "space_net_solvers._graph_net_logistic",
  "space_net_solvers._graph_net_squared_loss",
  "space_net_solvers.tvl1_solver",
  "stat.S_IEXEC",
  "stat.S_IREAD",
  "stat.S_IRUSR",
  "stat.S_IWUSR",
  "stat.S_IXUSR",
  "statsmodels.regression.linear_model.OLS",
  "str.join",
  "str.replace",
  "str.split",
  "surface.load_surf_data",
  "surface.load_surf_mesh",
  "sys._getframe",
  "sys.argv",
  "sys.modules",
  "sys.platform",
  "sys.stderr",
  "sys.stderr.write",
  "sys.stdout",
  "sys.version_info",
  "tarfile.is_tarfile",
  "tarfile.open",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "tempfile.mktemp",
  "tempfile.tempdir",
  "test_same_api.to_niimgs",
  "test_utils.datadir",
  "test_utils.mock_fetch_files.add_csv",
  "test_utils.mock_url_request.reset",
  "test_utils.mock_url_request.urls",
  "test_utils.setup_mock",
  "test_utils.setup_tmpdata",
  "test_utils.teardown_mock",
  "test_utils.teardown_tmpdata",
  "test_utils.tmpdir",
  "time.time",
  "traceback.format_exc",
  "traceback.print_exc",
  "types.ModuleType",
  "unmaskvec",
  "urllib.urlencode",
  "urllib2.Request",
  "urllib2.URLError",
  "urllib2.build_opener",
  "urlparse.urljoin",
  "utils._fetch_file",
  "utils._fetch_files",
  "utils._filter_columns",
  "utils._get_dataset_descr",
  "utils._get_dataset_dir",
  "utils._read_md5_sum_file",
  "utils._tree",
  "value_to_color",
  "version.OPTIONAL_MATPLOTLIB_MIN_VERSION",
  "version._check_module_dependencies",
  "version._import_module_with_version_check",
  "warnings.catch_warnings",
  "warnings.filterwarnings",
  "warnings.simplefilter",
  "warnings.warn",
  "xml.etree.ElementTree.parse",
  "zipfile.ZipFile",
  "zipfile.is_zipfile"
 ],
 "deps": {
  "Probe": [],
  "StringIO": [],
  "_chunk_read_": [],
  "_get_resampled_img": [],
  "_utils": [],
  "abc": [],
  "abs_norm": [],
  "base": [],
  "base64": [],
  "base_masker": [],
  "cache_mixin": [],
  "callable_filter": [],
  "canica": [],
  "cls": [],
  "cm": [],
  "cmap": [],
  "collections": [],
  "compat": [],
  "contextlib": [],
  "copy": [],
  "cos": [],
  "csv": [],
  "datasets": [],
  "decomposition": [],
  "dimmer": [],
  "displays": [],
  "distutils": [],
  "edge_detect": [],
  "escb": [],
  "exceptions": [],
  "f1": [],
  "f2": [],
  "fcomb": [],
  "filt": [],
  "filt1": [],
  "filt2": [],
  "filter_0": [],
  "filter_0_and_1": [],
  "filter_0_or_1": [],
  "filter_0_xor_1": [],
  "filter_1": [],
  "filter_2": [],
  "find_cuts": [],
  "fista": [],
  "fnmatch": [],
  "func": [],
  "functools": [],
  "gc": [],
  "glass_brain": [],
  "glob": [],
  "gzip": [],
  "hashlib": [],
  "image": [],
  "img_plotting": [],
  "input_data": [],
  "inspect": [],
  "interpolator": [],
  "io": [],
  "itertools": [],
  "joblib": [],
  "json": [],
  "l2_norm": [],
  "logger": [],
  "masker_type": [],
  "masking": [],
  "maskvec": [],
  "math": [],
  "matplotlib": [],
  "memory_profiler": [],
  "model": [],
  "multi_nifti_masker": [],
  "multi_pca": [],
  "new_filter": [],
  "nibabel": [],
  "nifti_masker": [],
  "niimg": [],
  "nilearn": [],
  "nose": [],
  "not_filter_0": [],
  "numbers": [],
  "numpy": [],
  "objective_functions": [],
  "operator": [],
  "os": [],
  "our_cmap": [],
  "pandas": [],
  "platform": [],
  "plot_func": [],
  "projector": [],
  "proximal_operators": [],
  "re": [],
  "regions": [],
  "resampling": [],
  "sampling": [],
  "scipy": [],
  "set_func": [],
  "shutil": [],
  "signal": [],
  "signal_extraction": [],
  "simulate_graph_net_data": [],
  "sin": [],
  "sklearn": [],
  "space_net_solvers": [],
  "stat": [],
  "statsmodels": [],
  "str": [],
  "surface": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "test_same_api": [],
  "test_utils": [],
  "time": [],
  "traceback": [],
  "types": [],
  "unmaskvec": [],
  "urllib": [],
  "urllib2": [],
  "urlparse": [],
  "utils": [],
  "value_to_color": [],
  "version": [],
  "warnings": [],
  "xml": [],
  "zipfile": []
 }
}