{
 "bad": [
  "AnsibleModule",
  "abc.ABCMeta",
  "abc.abstractmethod",
  "abc.abstractproperty",
  "ansible.module_utils.parsing.convert_bool.boolean",
  "anyconfig.MS_DICTS",
  "anyconfig.merge",
  "cerberus.Validator",
  "click.Choice",
  "click.UNPROCESSED",
  "click.argument",
  "click.command",
  "click.group",
  "click.option",
  "click.pass_context",
  "click.version_option",
  "click_completion.init",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "colorama.Back.RESET",
  "colorama.Back.WHITE",
  "colorama.Fore.BLACK",
  "colorama.Fore.CYAN",
  "colorama.Fore.GREEN",
  "colorama.Fore.RED",
  "colorama.Fore.RESET",
  "colorama.Fore.YELLOW",
  "colorama.Style.BRIGHT",
  "colorama.Style.RESET_ALL",
  "colorama.init",
  "command",
  "contextlib.contextmanager",
  "cookiecutter.main.cookiecutter",
  "copy.deepcopy",
  "datetime.datetime.now",
  "fcntl.ioctl",
  "fnmatch.fnmatch",
  "func",
  "function",
  "functools.partial",
  "glob.glob",
  "jinja2.Environment",
  "json.dumps",
  "json.loads",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.Formatter",
  "logging.INFO",
  "logging.NOTSET",
  "logging.StreamHandler",
  "logging.WARN",
  "logging.addLevelName",
  "logging.getLogger",
  "logging.getLoggerClass",
  "logging.setLoggerClass",
  "molecule.__version__",
  "molecule.command.base.Base",
  "molecule.command.base.LOG",
  "molecule.command.base.MOLECULE_DEFAULT_SCENARIO_NAME",
  "molecule.command.base.MOLECULE_GLOB",
  "molecule.command.base._get_subcommand",
  "molecule.command.base._verify_configs",
  "molecule.command.base.execute_subcommand",
  "molecule.command.base.get_configs",
  "molecule.command.check.check",
  "molecule.command.cleanup.LOG",
  "molecule.command.cleanup.cleanup",
  "molecule.command.converge.converge",
  "molecule.command.create.LOG",
  "molecule.command.create.create",
  "molecule.command.dependency.dependency",
  "molecule.command.destroy.LOG",
  "molecule.command.destroy.destroy",
  "molecule.command.idempotence.LOG",
  "molecule.command.idempotence.idempotence",
  "molecule.command.init.base.Base",
  "molecule.command.init.init",
  "molecule.command.init.init.init",
  "molecule.command.init.role.LOG",
  "molecule.command.init.role.Role",
  "molecule.command.init.role.role",
  "molecule.command.init.scenario.LOG",
  "molecule.command.init.scenario.Scenario",
  "molecule.command.init.scenario._default_scenario_exists",
  "molecule.command.init.scenario._role_exists",
  "molecule.command.init.scenario.scenario",
  "molecule.command.init.template.LOG",
  "molecule.command.init.template.Template",
  "molecule.command.init.template.template",
  "molecule.command.lint.lint",
  "molecule.command.list._print_tabulate_data",
  "molecule.command.list._print_yaml_data",
  "molecule.command.list.list",
  "molecule.command.login.Login",
  "molecule.command.login.login",
  "molecule.command.login.termios",
  "molecule.command.matrix.matrix",
  "molecule.command.prepare.LOG",
  "molecule.command.prepare.prepare",
  "molecule.command.side_effect.LOG",
  "molecule.command.side_effect.side_effect",
  "molecule.command.syntax.syntax",
  "molecule.command.test.LOG",
  "molecule.command.test.test",
  "molecule.command.verify.verify",
  "molecule.config",
  "molecule.config.Config",
  "molecule.config.LOG",
  "molecule.config.MOLECULE_DEBUG",
  "molecule.config.MOLECULE_DIRECTORY",
  "molecule.config.MOLECULE_FILE",
  "molecule.config.MOLECULE_KEEP_STRING",
  "molecule.config.NewInitCaller",
  "molecule.config.molecule_directory",
  "molecule.config.molecule_drivers",
  "molecule.config.molecule_verifiers",
  "molecule.config.set_env_from_file",
  "molecule.dependency.ansible_galaxy.AnsibleGalaxy",
  "molecule.dependency.ansible_galaxy.LOG",
  "molecule.dependency.ansible_galaxy.sh",
  "molecule.dependency.base.Base",
  "molecule.dependency.gilt.Gilt",
  "molecule.dependency.gilt.LOG",
  "molecule.dependency.gilt.sh",
  "molecule.dependency.shell.LOG",
  "molecule.dependency.shell.Shell",
  "molecule.dependency.shell.sh",
  "molecule.driver.azure.Azure",
  "molecule.driver.base.Base",
  "molecule.driver.base.Status",
  "molecule.driver.delegated.Delegated",
  "molecule.driver.docker.Docker",
  "molecule.driver.ec2.EC2",
  "molecule.driver.gce.GCE",
  "molecule.driver.linode.Linode",
  "molecule.driver.lxc.LXC",
  "molecule.driver.lxd.LXD",
  "molecule.driver.openstack.Openstack",
  "molecule.driver.vagrant.Vagrant",
  "molecule.interpolation.Interpolator",
  "molecule.interpolation.InvalidInterpolation",
  "molecule.interpolation.TemplateWithDefaults",
  "molecule.interpolation.string",
  "molecule.lint.base.Base",
  "molecule.lint.yamllint.LOG",
  "molecule.lint.yamllint.Yamllint",
  "molecule.logger.CustomLogger",
  "molecule.logger.LogFilter",
  "molecule.logger.OUT",
  "molecule.logger.SUCCESS",
  "molecule.logger.TrailingNewlineFormatter",
  "molecule.logger._get_critical_handler",
  "molecule.logger._get_error_handler",
  "molecule.logger._get_info_handler",
  "molecule.logger._get_out_handler",
  "molecule.logger._get_success_handler",
  "molecule.logger._get_warn_handler",
  "molecule.logger.color_text",
  "molecule.logger.cyan_text",
  "molecule.logger.get_logger",
  "molecule.logger.green_text",
  "molecule.logger.red_text",
  "molecule.logger.should_do_markup",
  "molecule.logger.yellow_text",
  "molecule.migrate.LOG",
  "molecule.migrate.MyDumper",
  "molecule.model.schema_v1.base_schema",
  "molecule.model.schema_v1.validate",
  "molecule.model.schema_v2.Validator",
  "molecule.model.schema_v2.base_schema",
  "molecule.model.schema_v2.coerce_env",
  "molecule.model.schema_v2.dependency_command_nullable_schema",
  "molecule.model.schema_v2.driver_vagrant_provider_section_schema",
  "molecule.model.schema_v2.platforms_docker_schema",
  "molecule.model.schema_v2.platforms_linode_schema",
  "molecule.model.schema_v2.platforms_lxd_schema",
  "molecule.model.schema_v2.platforms_vagrant_schema",
  "molecule.model.schema_v2.pre_validate",
  "molecule.model.schema_v2.pre_validate_base_schema",
  "molecule.model.schema_v2.validate",
  "molecule.model.schema_v2.verifier_goss_mutually_exclusive_schema",
  "molecule.model.schema_v2.verifier_inspec_mutually_exclusive_schema",
  "molecule.model.schema_v2.verifier_options_readonly_schema",
  "molecule.model.schema_v2.verifier_testinfra_mutually_exclusive_schema",
  "molecule.platforms.Platforms",
  "molecule.provisioner.ansible.Ansible",
  "molecule.provisioner.ansible.LOG",
  "molecule.provisioner.ansible.plugins.filters.molecule_core.from_yaml",
  "molecule.provisioner.ansible.plugins.filters.molecule_core.get_docker_networks",
  "molecule.provisioner.ansible.plugins.filters.molecule_core.header",
  "molecule.provisioner.ansible.plugins.filters.molecule_core.to_yaml",
  "molecule.provisioner.ansible.plugins.libraries.molecule_vagrant.VAGRANTFILE_TEMPLATE",
  "molecule.provisioner.ansible.plugins.libraries.molecule_vagrant.VagrantClient",
  "molecule.provisioner.ansible.plugins.libraries.molecule_vagrant.main",
  "molecule.provisioner.ansible_playbook.AnsiblePlaybook",
  "molecule.provisioner.ansible_playbook.LOG",
  "molecule.provisioner.ansible_playbooks.AnsiblePlaybooks",
  "molecule.provisioner.base.Base",
  "molecule.provisioner.lint.ansible_lint.AnsibleLint",
  "molecule.provisioner.lint.ansible_lint.LOG",
  "molecule.provisioner.lint.base.Base",
  "molecule.scenario.Scenario",
  "molecule.scenario.ephemeral_directory",
  "molecule.scenarios.LOG",
  "molecule.scenarios.Scenarios",
  "molecule.shell.ENV_FILE",
  "molecule.shell.LOCAL_CONFIG",
  "molecule.shell.main",
  "molecule.state.InvalidState",
  "molecule.state.State",
  "molecule.state.VALID_KEYS",
  "molecule.status.get_status",
  "molecule.util.LOG",
  "molecule.util.MERGE_STRATEGY",
  "molecule.util.SafeDumper",
  "molecule.util.abs_path",
  "molecule.util.camelize",
  "molecule.util.file_prepender",
  "molecule.util.filter_verbose_permutation",
  "molecule.util.memoize",
  "molecule.util.merge_dicts",
  "molecule.util.molecule_prepender",
  "molecule.util.open_file",
  "molecule.util.os_walk",
  "molecule.util.print_debug",
  "molecule.util.print_environment_vars",
  "molecule.util.render_template",
  "molecule.util.run_command",
  "molecule.util.safe_dump",
  "molecule.util.safe_load",
  "molecule.util.safe_load_file",
  "molecule.util.strip_ansi_escape",
  "molecule.util.sysexit",
  "molecule.util.sysexit_with_message",
  "molecule.util.title",
  "molecule.util.underscore",
  "molecule.util.verbose_flag",
  "molecule.util.write_file",
  "molecule.verifier.base.Base",
  "molecule.verifier.goss.Goss",
  "molecule.verifier.goss.LOG",
  "molecule.verifier.inspec.Inspec",
  "molecule.verifier.inspec.LOG",
  "molecule.verifier.lint.base.Base",
  "molecule.verifier.lint.flake8.Flake8",
  "molecule.verifier.lint.flake8.LOG",
  "molecule.verifier.lint.rubocop.LOG",
  "molecule.verifier.lint.rubocop.RuboCop",
  "molecule.verifier.lint.yamllint.LOG",
  "molecule.verifier.lint.yamllint.Yamllint",
  "molecule.verifier.testinfra.LOG",
  "molecule.verifier.testinfra.Testinfra",
  "molecule.version_info",
  "operator.itemgetter",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.getcwd",
  "os.getenv",
  "os.makedirs",
  "os.mkdir",
  "os.pardir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.pardir",
  "os.popen",
  "os.remove",
  "os.removedirs",
  "os.sep",
  "os.symlink",
  "os.unlink",
  "os.walk",
  "pexpect.spawn",
  "re.compile",
  "re.match",
  "re.search",
  "re.sub",
  "sh.Command",
  "sh.ErrorReturnCode",
  "sh.ansible_lint.bake",
  "sh.ansible_playbook.bake",
  "sh.flake8.bake",
  "sh.rubocop.bake",
  "sh.yamllint.bake",
  "shell.main",
  "shutil.rmtree",
  "signal.SIGWINCH",
  "signal.signal",
  "six.add_metaclass",
  "string.Template",
  "struct.pack",
  "struct.unpack",
  "subprocess.CalledProcessError",
  "sys.exit",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.fileno",
  "sys.stdout.isatty",
  "tabulate.tabulate",
  "tempfile.gettempdir",
  "termios.TIOCGWINSZ",
  "tree_format.format_tree",
  "type.__call__",
  "vagrant.Vagrant",
  "yaml.Dumper",
  "yaml.SafeDumper",
  "yaml.add_representer",
  "yaml.dump",
  "yaml.safe_load",
  "yaml.scanner.ScannerError"
 ],
 "deps": {
  "AnsibleModule": [],
  "abc": [],
  "ansible": [],
  "anyconfig": [],
  "cerberus": [],
  "click": [],
  "click_completion": [],
  "collections": [],
  "colorama": [],
  "command": [],
  "contextlib": [],
  "cookiecutter": [],
  "copy": [],
  "datetime": [],
  "fcntl": [],
  "fnmatch": [],
  "func": [],
  "function": [],
  "functools": [],
  "glob": [],
  "jinja2": [],
  "json": [],
  "logging": [],
  "molecule": [],
  "operator": [],
  "os": [],
  "pexpect": [],
  "re": [],
  "sh": [],
  "shell": [],
  "shutil": [],
  "signal": [],
  "six": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "tabulate": [],
  "tempfile": [],
  "termios": [],
  "tree_format": [],
  "type": [],
  "vagrant": [],
  "yaml": []
 }
}