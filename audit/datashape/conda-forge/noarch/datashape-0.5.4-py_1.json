{
 "bad": [
  "__builtin__.basestring",
  "__builtin__.reduce",
  "__builtin__.unicode",
  "abc.ABCMeta",
  "ast.literal_eval",
  "ast.parse",
  "collections.namedtuple",
  "ctypes.alignment",
  "ctypes.c_double",
  "ctypes.c_float",
  "ctypes.c_int16",
  "ctypes.c_int32",
  "ctypes.c_int64",
  "ctypes.c_long",
  "ctypes.c_uint16",
  "ctypes.c_uint32",
  "ctypes.c_uint64",
  "ctypes.c_void_p",
  "ctypes.py_object",
  "ctypes.pythonapi",
  "ctypes.pythonapi.PyDictProxy_New",
  "ctypes.sizeof",
  "datashape.Bytes",
  "datashape.CType.from_numpy_dtype",
  "datashape.DataShape",
  "datashape.DataShapeSyntaxError",
  "datashape.Fixed",
  "datashape.Option",
  "datashape.Record",
  "datashape.String",
  "datashape.Tuple",
  "datashape.TypeSet",
  "datashape.TypeSymbolTable",
  "datashape.Units",
  "datashape.Var",
  "datashape.__version__",
  "datashape.bool_",
  "datashape.cat_dshapes",
  "datashape.complex128",
  "datashape.complex64",
  "datashape.coretypes.R",
  "datashape.coretypes._unit_aliases",
  "datashape.coretypes._units",
  "datashape.coretypes.bool_",
  "datashape.coretypes.complex128",
  "datashape.coretypes.complex_",
  "datashape.coretypes.complex_float32",
  "datashape.coretypes.complex_float64",
  "datashape.coretypes.date_",
  "datashape.coretypes.datetime_",
  "datashape.coretypes.float16",
  "datashape.coretypes.float32",
  "datashape.coretypes.float64",
  "datashape.coretypes.int16",
  "datashape.coretypes.int32",
  "datashape.coretypes.int32.alignment",
  "datashape.coretypes.int64",
  "datashape.coretypes.int8",
  "datashape.coretypes.int_",
  "datashape.coretypes.intptr",
  "datashape.coretypes.null",
  "datashape.coretypes.object_",
  "datashape.coretypes.real",
  "datashape.coretypes.string",
  "datashape.coretypes.time_",
  "datashape.coretypes.timedelta_",
  "datashape.coretypes.uint16",
  "datashape.coretypes.uint32",
  "datashape.coretypes.uint64",
  "datashape.coretypes.uint8",
  "datashape.coretypes.uintptr",
  "datashape.coretypes.var",
  "datashape.coretypes.void",
  "datashape.date_",
  "datashape.datetime_",
  "datashape.discover",
  "datashape.discovery.null",
  "datashape.dispatch.dispatch",
  "datashape.dshape",
  "datashape.error.DataShapeTypeError",
  "datashape.float32",
  "datashape.float64",
  "datashape.floating",
  "datashape.from_numpy",
  "datashape.has_ellipsis",
  "datashape.has_var_dim",
  "datashape.int16",
  "datashape.int32",
  "datashape.int32.subarray",
  "datashape.int64",
  "datashape.int8",
  "datashape.integral",
  "datashape.json",
  "datashape.lexer.ASTERISK",
  "datashape.lexer.COLON",
  "datashape.lexer.EQUAL",
  "datashape.lexer.INTEGER",
  "datashape.lexer.NAME_OTHER",
  "datashape.lexer.RARROW",
  "datashape.lexer.STRING",
  "datashape.lexer.Token",
  "datashape.optionify",
  "datashape.py2help.CPYTHON",
  "datashape.py2help.PY2",
  "datashape.py2help.unicode",
  "datashape.string",
  "datashape.string.subarray",
  "datashape.time_",
  "datashape.timedelta_",
  "datashape.to_numpy",
  "datashape.to_numpy_dtype",
  "datashape.typesets.register_typeset",
  "datashape.typesets.registry",
  "datashape.uint16",
  "datashape.uint32",
  "datashape.uint64",
  "datashape.uint8",
  "datashape.var",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "datetime.time",
  "datetime.timedelta",
  "datetime.tzinfo",
  "functools.partial",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.starmap",
  "json.loads",
  "keyword.iskeyword",
  "math.ceil",
  "multipledispatch.dispatch",
  "numpy.array",
  "numpy.bytes_",
  "numpy.datetime64",
  "numpy.datetime_data",
  "numpy.dtype",
  "numpy.float32",
  "numpy.float64",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.integer",
  "numpy.issubdtype",
  "numpy.number",
  "numpy.ones",
  "numpy.result_type",
  "numpy.s_",
  "numpy.str_",
  "numpy.timedelta64",
  "numpy.unicode_",
  "numpy.zeros",
  "operator.getitem",
  "operator.index",
  "operator.methodcaller",
  "pickle.dumps",
  "pickle.loads",
  "platform.python_implementation",
  "pytest.fixture",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "pytest.raises",
  "re.MULTILINE",
  "re.compile",
  "re.match",
  "re.split",
  "sys.version_info",
  "types.MappingProxyType",
  "unittest.TestCase",
  "warnings.catch_warnings",
  "warnings.simplefilter"
 ],
 "deps": [
  [
   "datashape-0.5.4-py_1"
  ],
  [
   "mock-1.0.1-py27_0"
  ]
 ]
}