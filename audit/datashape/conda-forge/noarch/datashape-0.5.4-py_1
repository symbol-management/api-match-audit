{
 "bad": [
  "DataShape",
  "Fixed",
  "MyArray",
  "MyClass",
  "__builtin__",
  "__builtin__.basestring",
  "__builtin__.reduce",
  "__builtin__.unicode",
  "assertExpectedParse",
  "coretypes.CType",
  "coretypes.Categorical",
  "coretypes.DataShape",
  "coretypes.Date",
  "coretypes.DateTime",
  "coretypes.Decimal",
  "coretypes.Ellipsis",
  "coretypes.Fixed",
  "coretypes.Function",
  "coretypes.JSON",
  "coretypes.Map",
  "coretypes.Mono",
  "coretypes.Option",
  "coretypes.Record",
  "coretypes.String",
  "coretypes.Time",
  "coretypes.TimeDelta",
  "coretypes.Tuple",
  "coretypes.TypeVar",
  "coretypes.Unit",
  "coretypes.Units",
  "coretypes.Var",
  "coretypes.bool_",
  "coretypes.complex128",
  "coretypes.complex64",
  "coretypes.complex_float32",
  "coretypes.complex_float64",
  "coretypes.date_",
  "coretypes.datetime_",
  "coretypes.float16",
  "coretypes.float32",
  "coretypes.float64",
  "coretypes.int16",
  "coretypes.int32",
  "coretypes.int64",
  "coretypes.int8",
  "coretypes.json",
  "coretypes.null",
  "coretypes.object_",
  "coretypes.string",
  "coretypes.time_",
  "coretypes.timedelta_",
  "coretypes.uint16",
  "coretypes.uint32",
  "coretypes.uint64",
  "coretypes.uint8",
  "coretypes.void",
  "ctypes.pythonapi.PyDictProxy_New",
  "datashape.CType.from_numpy_dtype",
  "datashape.__init__.get_versions",
  "datashape.coretypes.int32.alignment",
  "datashape.coretypes.intptr",
  "datashape.coretypes.object_",
  "datashape.coretypes.uintptr",
  "datashape.error.DataShapeTypeError",
  "datashape.int32.subarray",
  "datashape.lexer.ASTERISK",
  "datashape.lexer.COLON",
  "datashape.lexer.EQUAL",
  "datashape.lexer.INTEGER",
  "datashape.lexer.NAME_OTHER",
  "datashape.lexer.RARROW",
  "datashape.lexer.STRING",
  "datashape.string.subarray",
  "datashape.util.__init__.dshape",
  "datashape.util.__init__.has",
  "datashape.util.__init__.validate",
  "dtype_constr",
  "error.DataShapeSyntaxError",
  "f",
  "from_numpy",
  "func",
  "issubschema",
  "itertools",
  "itertools.chain",
  "itertools.chain.from_iterable",
  "itertools.starmap",
  "lexer.ASTERISK",
  "lexer.BOOLEAN",
  "lexer.COLON",
  "lexer.COMMA",
  "lexer.ELLIPSIS",
  "lexer.EQUAL",
  "lexer.INTEGER",
  "lexer.LBRACE",
  "lexer.LBRACKET",
  "lexer.LPAREN",
  "lexer.NAME_LOWER",
  "lexer.NAME_OTHER",
  "lexer.NAME_UPPER",
  "lexer.QUESTIONMARK",
  "lexer.RARROW",
  "lexer.RBRACE",
  "lexer.RBRACKET",
  "lexer.RPAREN",
  "lexer.STRING",
  "lexer.Token",
  "mock.Mock",
  "numpy.bytes_",
  "numpy.datetime64",
  "numpy.float32",
  "numpy.float64",
  "numpy.str_",
  "numpy.timedelta64",
  "numpy.unicode_",
  "option",
  "parser.parse",
  "predicates.isdimension",
  "py2help._strtypes",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.xfail",
  "re.MULTILINE",
  "set.intersection",
  "set.union",
  "sys",
  "sys.version_info",
  "tconstr",
  "to_numpy_dtype",
  "type_symbol_table.sym",
  "types.DictProxyType",
  "unite"
 ],
 "deps": {
  "DataShape": [],
  "Fixed": [],
  "MyArray": [],
  "MyClass": [],
  "__builtin__": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "assertExpectedParse": [],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "coretypes": [],
  "ctypes": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "datashape": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dateutil": [
   "python-dateutil/conda-forge/noarch/python-dateutil-2.7.4-py_0"
  ],
  "dtype_constr": [],
  "error": [],
  "f": [],
  "from_numpy": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "issubschema": [],
  "itertools": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "keyword": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "lexer": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mock": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "option": [],
  "parser": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pprint": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "predicates": [],
  "py2help": [],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "set": [],
  "sys": [],
  "tconstr": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "to_numpy_dtype": [],
  "type_symbol_table": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unite": [],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "validate": [
   "configobj/conda-forge/noarch/configobj-5.0.6-py_0"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}