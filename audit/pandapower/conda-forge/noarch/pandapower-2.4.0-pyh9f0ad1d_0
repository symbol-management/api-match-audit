{
 "bad": [
  "BODY",
  "ControllerTester",
  "DIV",
  "DivergentController",
  "H2",
  "HEAD",
  "HTML",
  "IPython.get_ipython",
  "SCRIPT",
  "STYLE",
  "TABLE",
  "TR",
  "_EmptyClass",
  "_iterencode",
  "adapt_element_idx_references",
  "arctan",
  "argparse.ArgumentParser",
  "base64.urlsafe_b64encode",
  "calc_sm",
  "cgi.escape",
  "check_callable_equality",
  "check_dictionary_equality",
  "check_elm_number",
  "check_equality",
  "check_subnet_correctness",
  "class_",
  "cmap",
  "cmath.rect",
  "collections.Counter",
  "collections.UserDict",
  "collections.abc.Iterable",
  "collections.abc.MutableMapping",
  "collections.defaultdict",
  "collections.deque",
  "consider_callable",
  "copy.copy",
  "copy.deepcopy",
  "cos",
  "dict.fromkeys",
  "doctest.testmod",
  "fiona.Collection",
  "fiona.crs.from_epsg",
  "float.__repr__",
  "func",
  "functools.partial",
  "gc.collect",
  "gc.get_objects",
  "geo_data_to_latlong",
  "geopandas.GeoDataFrame.from_features",
  "graph_tool.Graph",
  "graph_tool.Graph.__init__",
  "hashlib.sha256",
  "hsv",
  "idx_brch.F_BUS",
  "idx_brch.T_BUS",
  "idx_bus.BUS_I",
  "idx_bus.BUS_TYPE",
  "idx_bus.REF",
  "igraph.Graph",
  "importlib.import_module",
  "inspect._findclass",
  "inspect.getfullargspec",
  "inspect.getmro",
  "inspect.isclass",
  "inspect.signature",
  "io.StringIO",
  "itertools.chain",
  "itertools.combinations",
  "json.JSONDecodeError",
  "json.JSONDecoder",
  "json.JSONEncoder",
  "json.JSONEncoder.default",
  "json.dump",
  "json.dumps",
  "json.encoder.INFINITY",
  "json.encoder._make_iterencode",
  "json.encoder.encode_basestring",
  "json.encoder.encode_basestring_ascii",
  "json.load",
  "json.loads",
  "julia.Julia",
  "julia.Main.include",
  "julia.core.UnsupportedPythonError",
  "lightsim2grid.newtonpf.newtonpf",
  "logging.CRITICAL",
  "logging.DEBUG",
  "logging.ERROR",
  "logging.StreamHandler",
  "logging.WARNING",
  "logging.getLogger",
  "makeBdc.makeBdc",
  "makeYbus",
  "math.degrees",
  "math.hypot",
  "math.isnan",
  "math.pi",
  "math.radians",
  "matplotlib.backend_bases.GraphicsContextBase",
  "matplotlib.backend_bases.RendererBase",
  "matplotlib.backend_bases.RendererBase.new_gc",
  "matplotlib.cm.get_cmap",
  "matplotlib.collections.Collection",
  "matplotlib.collections.LineCollection",
  "matplotlib.collections.PatchCollection",
  "matplotlib.colors.BoundaryNorm",
  "matplotlib.colors.LinearSegmentedColormap.from_list",
  "matplotlib.colors.ListedColormap",
  "matplotlib.colors.LogNorm",
  "matplotlib.colors.Normalize",
  "matplotlib.colors.to_rgb",
  "matplotlib.colors.to_rgba",
  "matplotlib.font_manager.FontProperties",
  "matplotlib.patches.Arc",
  "matplotlib.patches.Circle",
  "matplotlib.patches.Ellipse",
  "matplotlib.patches.PathPatch",
  "matplotlib.patches.Rectangle",
  "matplotlib.patches.RegularPolygon",
  "matplotlib.pyplot.colorbar",
  "matplotlib.pyplot.draw",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.gca",
  "matplotlib.pyplot.get_cmap",
  "matplotlib.pyplot.setp",
  "matplotlib.pyplot.show",
  "matplotlib.pyplot.subplots",
  "matplotlib.pyplot.subplots_adjust",
  "matplotlib.textpath.TextPath",
  "matplotlib.textpath.TextPath.__init__",
  "matplotlib.transforms.Affine2D",
  "minmax",
  "multiprocessing.cpu_count",
  "networkx.Graph",
  "networkx.MultiGraph",
  "networkx.NetworkXNoPath",
  "networkx.all_simple_paths",
  "networkx.connected_components",
  "networkx.readwrite.json_graph.adjacency_data",
  "networkx.readwrite.json_graph.adjacency_graph",
  "networkx.shortest_path",
  "networkx.single_source_dijkstra_path_length",
  "newton",
  "norm",
  "nprect",
  "numba._version.version_version",
  "numba.jit",
  "numbers.Number",
  "numpy.Inf",
  "numpy.NaN",
  "numpy.abs",
  "numpy.absolute",
  "numpy.all",
  "numpy.allclose",
  "numpy.alltrue",
  "numpy.angle",
  "numpy.any",
  "numpy.append",
  "numpy.arange",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.arctan2",
  "numpy.argmax",
  "numpy.argmin",
  "numpy.argsort",
  "numpy.argwhere",
  "numpy.array",
  "numpy.array_equal",
  "numpy.asarray",
  "numpy.asmatrix",
  "numpy.bincount",
  "numpy.c_",
  "numpy.ceil",
  "numpy.clip",
  "numpy.column_stack",
  "numpy.complex128",
  "numpy.concatenate",
  "numpy.conj",
  "numpy.conjugate",
  "numpy.copy",
  "numpy.core.multiarray.array",
  "numpy.core.multiarray.empty",
  "numpy.core.multiarray.zeros",
  "numpy.core.numeric.copyto",
  "numpy.core.umath.exp",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.deg2rad",
  "numpy.delete",
  "numpy.diag",
  "numpy.diagflat",
  "numpy.diff",
  "numpy.divide",
  "numpy.dot",
  "numpy.dtype",
  "numpy.empty",
  "numpy.equal",
  "numpy.errstate",
  "numpy.exp",
  "numpy.eye",
  "numpy.fill_diagonal",
  "numpy.finfo",
  "numpy.flatnonzero",
  "numpy.float",
  "numpy.float64",
  "numpy.floating",
  "numpy.full",
  "numpy.generic",
  "numpy.hstack",
  "numpy.imag",
  "numpy.in1d",
  "numpy.inf",
  "numpy.int",
  "numpy.int32",
  "numpy.int64",
  "numpy.integer",
  "numpy.intersect1d",
  "numpy.isclose",
  "numpy.isfinite",
  "numpy.isin",
  "numpy.isnan",
  "numpy.isscalar",
  "numpy.ix_",
  "numpy.linalg.inv",
  "numpy.linalg.linalg.LinAlgError",
  "numpy.linalg.norm",
  "numpy.linalg.solve",
  "numpy.linspace",
  "numpy.log",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.ma.masked_invalid",
  "numpy.matmul",
  "numpy.max",
  "numpy.maximum",
  "numpy.maximum.reduce",
  "numpy.min",
  "numpy.minimum",
  "numpy.multiply",
  "numpy.nan",
  "numpy.nan_to_num",
  "numpy.nanmax",
  "numpy.nanmin",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.newaxis",
  "numpy.nonzero",
  "numpy.number",
  "numpy.ones",
  "numpy.pi",
  "numpy.r_",
  "numpy.r_.T",
  "numpy.r_.astype",
  "numpy.r_.ravel",
  "numpy.r_.real",
  "numpy.rad2deg",
  "numpy.radians",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.randint",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.real",
  "numpy.repeat",
  "numpy.resize",
  "numpy.roots",
  "numpy.setdiff1d",
  "numpy.setxor1d",
  "numpy.shape",
  "numpy.sign",
  "numpy.sin",
  "numpy.sort",
  "numpy.split",
  "numpy.sqrt",
  "numpy.square",
  "numpy.stack",
  "numpy.sum",
  "numpy.tan",
  "numpy.tile",
  "numpy.transpose",
  "numpy.unique",
  "numpy.vectorize",
  "numpy.vstack",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "of",
  "of.__name__",
  "os.makedirs",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.remove",
  "os.walk",
  "pandapower.F_BUS",
  "pandapower.LoadflowNotConverged",
  "pandapower.T_BUS",
  "pandapower.__file__",
  "pandapower.add_column_from_element_to_elements",
  "pandapower.add_column_from_node_to_elements",
  "pandapower.add_temperature_coefficient",
  "pandapower.add_zero_impedance_parameters",
  "pandapower.change_std_type",
  "pandapower.clear_result_tables",
  "pandapower.compare_arrays",
  "pandapower.control.util.diagnostic.logger.addHandler",
  "pandapower.control.util.diagnostic.logger.removeHandler",
  "pandapower.converter.convert_pp_to_pm",
  "pandapower.converter.from_mpc",
  "pandapower.converter.from_ppc",
  "pandapower.converter.logger.warning",
  "pandapower.converter.to_mpc",
  "pandapower.converter.to_ppc",
  "pandapower.converter.validate_from_ppc",
  "pandapower.copy_std_types",
  "pandapower.cosphi_from_pq",
  "pandapower.create_asymmetric_load",
  "pandapower.create_bus",
  "pandapower.create_buses",
  "pandapower.create_dcline",
  "pandapower.create_empty_network",
  "pandapower.create_ext_grid",
  "pandapower.create_gen",
  "pandapower.create_gens",
  "pandapower.create_impedance",
  "pandapower.create_line",
  "pandapower.create_line_from_parameters",
  "pandapower.create_lines",
  "pandapower.create_lines_from_parameters",
  "pandapower.create_load",
  "pandapower.create_load_from_cosphi",
  "pandapower.create_loads",
  "pandapower.create_measurement",
  "pandapower.create_motor",
  "pandapower.create_poly_cost",
  "pandapower.create_pwl_cost",
  "pandapower.create_series_reactor_as_impedance",
  "pandapower.create_sgen",
  "pandapower.create_sgen_from_cosphi",
  "pandapower.create_sgens",
  "pandapower.create_shunt",
  "pandapower.create_shunt_as_capacitor",
  "pandapower.create_std_type",
  "pandapower.create_std_types",
  "pandapower.create_storage",
  "pandapower.create_switch",
  "pandapower.create_switches",
  "pandapower.create_transformer",
  "pandapower.create_transformer3w",
  "pandapower.create_transformer3w_from_parameters",
  "pandapower.create_transformer_from_parameters",
  "pandapower.create_transformers3w_from_parameters",
  "pandapower.create_transformers_from_parameters",
  "pandapower.create_ward",
  "pandapower.create_xward",
  "pandapower.dataframes_equal",
  "pandapower.deviation_from_std_type",
  "pandapower.different_voltage_levels_connected",
  "pandapower.disconnected_elements",
  "pandapower.drop_trafos",
  "pandapower.estimation.StateEstimation",
  "pandapower.estimation.chi2_analysis",
  "pandapower.estimation.estimate",
  "pandapower.estimation.remove_bad_data",
  "pandapower.find_std_type_by_parameter",
  "pandapower.from_excel",
  "pandapower.from_json",
  "pandapower.from_json_string",
  "pandapower.from_pickle",
  "pandapower.from_sqlite",
  "pandapower.get_connected_elements",
  "pandapower.get_connected_elements_dict",
  "pandapower.get_element_index",
  "pandapower.get_element_indices",
  "pandapower.get_free_id",
  "pandapower.impedance_values_close_to_zero",
  "pandapower.invalid_values",
  "pandapower.load_std_type",
  "pandapower.merge_nets",
  "pandapower.missing_bus_indices",
  "pandapower.multiple_voltage_controlling_elements_per_bus",
  "pandapower.nets_equal",
  "pandapower.networks.GBnetwork",
  "pandapower.networks.GBreducednetwork",
  "pandapower.networks.case118",
  "pandapower.networks.case1354pegase",
  "pandapower.networks.case14",
  "pandapower.networks.case145",
  "pandapower.networks.case1888rte",
  "pandapower.networks.case24_ieee_rts",
  "pandapower.networks.case2848rte",
  "pandapower.networks.case2869pegase",
  "pandapower.networks.case30",
  "pandapower.networks.case300",
  "pandapower.networks.case3120sp",
  "pandapower.networks.case33bw",
  "pandapower.networks.case39",
  "pandapower.networks.case4gs",
  "pandapower.networks.case5",
  "pandapower.networks.case57",
  "pandapower.networks.case6470rte",
  "pandapower.networks.case6495rte",
  "pandapower.networks.case6515rte",
  "pandapower.networks.case6ww",
  "pandapower.networks.case89pegase",
  "pandapower.networks.case9",
  "pandapower.networks.case9241pegase",
  "pandapower.networks.case_ieee30",
  "pandapower.networks.case_illinois200",
  "pandapower.networks.create_cigre_network_hv",
  "pandapower.networks.create_cigre_network_lv",
  "pandapower.networks.create_cigre_network_mv",
  "pandapower.networks.create_dickert_lv_network",
  "pandapower.networks.create_kerber_dorfnetz",
  "pandapower.networks.create_kerber_landnetz_freileitung_1",
  "pandapower.networks.create_kerber_landnetz_freileitung_2",
  "pandapower.networks.create_kerber_landnetz_kabel_1",
  "pandapower.networks.create_kerber_landnetz_kabel_2",
  "pandapower.networks.create_kerber_vorstadtnetz_kabel_1",
  "pandapower.networks.create_kerber_vorstadtnetz_kabel_2",
  "pandapower.networks.create_synthetic_voltage_control_lv_network",
  "pandapower.networks.example_multivoltage",
  "pandapower.networks.example_simple",
  "pandapower.networks.four_loads_with_branches_out",
  "pandapower.networks.iceland",
  "pandapower.networks.kb_extrem_dorfnetz",
  "pandapower.networks.kb_extrem_dorfnetz_trafo",
  "pandapower.networks.kb_extrem_landnetz_freileitung",
  "pandapower.networks.kb_extrem_landnetz_freileitung_trafo",
  "pandapower.networks.kb_extrem_landnetz_kabel",
  "pandapower.networks.kb_extrem_landnetz_kabel_trafo",
  "pandapower.networks.kb_extrem_vorstadtnetz_1",
  "pandapower.networks.kb_extrem_vorstadtnetz_2",
  "pandapower.networks.kb_extrem_vorstadtnetz_trafo_1",
  "pandapower.networks.kb_extrem_vorstadtnetz_trafo_2",
  "pandapower.networks.panda_four_load_branch",
  "pandapower.networks.simple_four_bus_system",
  "pandapower.networks.simple_mv_open_ring_net",
  "pandapower.no_ext_grid",
  "pandapower.nominal_voltages_dont_match",
  "pandapower.numba_comparison",
  "pandapower.opf_task",
  "pandapower.overload",
  "pandapower.parallel_switches",
  "pandapower.parameter_from_std_type",
  "pandapower.ppException",
  "pandapower.pp_elements",
  "pandapower.pq_from_cosphi",
  "pandapower.pypower.idx_area.PRICE_REF_BUS.astype",
  "pandapower.pypower.idx_brch.ANGMAX.real",
  "pandapower.pypower.idx_brch.ANGMIN.real",
  "pandapower.pypower.idx_brch.BR_B.flatten",
  "pandapower.pypower.idx_brch.BR_B.imag",
  "pandapower.pypower.idx_brch.BR_B.real",
  "pandapower.pypower.idx_brch.BR_R.flatten",
  "pandapower.pypower.idx_brch.BR_R.real",
  "pandapower.pypower.idx_brch.BR_STATUS.astype",
  "pandapower.pypower.idx_brch.BR_STATUS.real",
  "pandapower.pypower.idx_brch.BR_X.flatten",
  "pandapower.pypower.idx_brch.BR_X.real",
  "pandapower.pypower.idx_brch.F_BUS.astype",
  "pandapower.pypower.idx_brch.F_BUS.real",
  "pandapower.pypower.idx_brch.F_BUS.real.astype",
  "pandapower.pypower.idx_brch.PF.real",
  "pandapower.pypower.idx_brch.PF.sum",
  "pandapower.pypower.idx_brch.PT.real",
  "pandapower.pypower.idx_brch.PT.sum",
  "pandapower.pypower.idx_brch.QF.real",
  "pandapower.pypower.idx_brch.QF.sum",
  "pandapower.pypower.idx_brch.QT.real",
  "pandapower.pypower.idx_brch.QT.sum",
  "pandapower.pypower.idx_brch.RATE_A.real",
  "pandapower.pypower.idx_brch.RATE_B.real",
  "pandapower.pypower.idx_brch.RATE_C.real",
  "pandapower.pypower.idx_brch.SHIFT.any",
  "pandapower.pypower.idx_brch.SHIFT.real",
  "pandapower.pypower.idx_brch.SHIFT.real.astype",
  "pandapower.pypower.idx_brch.TAP.real",
  "pandapower.pypower.idx_brch.T_BUS.astype",
  "pandapower.pypower.idx_brch.T_BUS.real",
  "pandapower.pypower.idx_brch.T_BUS.real.astype",
  "pandapower.pypower.idx_bus.BASE_KV.flatten",
  "pandapower.pypower.idx_bus.BUS_I.astype",
  "pandapower.pypower.idx_bus.BUS_TYPE.astype",
  "pandapower.pypower.idx_bus.BUS_TYPE.ravel",
  "pandapower.pypower.idx_bus.PD.sum",
  "pandapower.pypower.idx_bus.QD.sum",
  "pandapower.pypower.idx_bus.REF.real.astype",
  "pandapower.pypower.idx_bus.VM.copy",
  "pandapower.pypower.idx_bus.VM.flatten",
  "pandapower.pypower.idx_cost.COST.tolist",
  "pandapower.pypower.idx_cost.NCOST.astype",
  "pandapower.pypower.idx_gen.GEN_BUS.astype",
  "pandapower.reindex_buses",
  "pandapower.reindex_elements",
  "pandapower.replace_ext_grid_by_gen",
  "pandapower.replace_gen_by_ext_grid",
  "pandapower.replace_gen_by_sgen",
  "pandapower.replace_impedance_by_line",
  "pandapower.replace_line_by_impedance",
  "pandapower.replace_sgen_by_gen",
  "pandapower.replace_ward_by_internal_elements",
  "pandapower.replace_xward_by_internal_elements",
  "pandapower.reset_results",
  "pandapower.rundcopp",
  "pandapower.rundcpp",
  "pandapower.runopp",
  "pandapower.runpm_ac_opf",
  "pandapower.runpm_dc_opf",
  "pandapower.runpm_ots",
  "pandapower.runpm_storage_opf",
  "pandapower.runpm_tnep",
  "pandapower.runpp",
  "pandapower.select_subnet",
  "pandapower.set_user_pf_options",
  "pandapower.shortcircuit.idx_brch.IKSS_F.real",
  "pandapower.shortcircuit.idx_brch.IKSS_T.real",
  "pandapower.shortcircuit.idx_brch.IP_F.real",
  "pandapower.shortcircuit.idx_brch.IP_T.real",
  "pandapower.shortcircuit.idx_brch.ITH_F.real",
  "pandapower.shortcircuit.idx_brch.ITH_T.real",
  "pandapower.std_type_exists",
  "pandapower.test.__file__",
  "pandapower.test.add_grid_connection",
  "pandapower.to_excel",
  "pandapower.to_json",
  "pandapower.to_pickle",
  "pandapower.to_sqlite",
  "pandapower.toolbox.logger.setLevel",
  "pandapower.topology.calc_distance_to_bus",
  "pandapower.topology.connected_component",
  "pandapower.topology.connected_components",
  "pandapower.topology.create_nxgraph",
  "pandapower.topology.unsupplied_buses",
  "pandapower.wrong_reference_system",
  "pandapower.wrong_switch_configuration",
  "pandapower_function",
  "pandas",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.ExcelFile",
  "pandas.ExcelWriter",
  "pandas.Index",
  "pandas.Int64Index",
  "pandas.MultiIndex.from_product",
  "pandas.Series",
  "pandas.__version__",
  "pandas.concat",
  "pandas.isnull",
  "pandas.item",
  "pandas.notnull",
  "pandas.options.mode.chained_assignment",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.read_sql_query",
  "pandas.set_option",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_numeric",
  "pf.no_numba.jit",
  "pickle.dump",
  "pickle.load",
  "plotting.create_line_collection",
  "pplog.CRITICAL",
  "pplog.DEBUG",
  "pplog.INFO",
  "pplog.WARNING",
  "pplog.getLogger",
  "pypower.case24_ieee_rts.case24_ieee_rts",
  "pypower.ppoption.ppoption",
  "pypower.rundcopf.rundcopf",
  "pypower.rundcpf.rundcpf",
  "pypower.runopf.runopf",
  "pypower.runpf.runpf",
  "pyproj.Proj",
  "pyproj.transform",
  "pytest.fail",
  "pytest.fixture",
  "pytest.main",
  "pytest.mark.filterwarnings",
  "pytest.mark.parametrize",
  "pytest.mark.skipif",
  "pytest.mark.slow",
  "pytest.mark.xfail",
  "pytest.raises",
  "random.random",
  "read",
  "run",
  "run_powermodels",
  "scaleit",
  "scipy.io.savemat",
  "scipy.linalg.inv",
  "scipy.optimize.linprog",
  "scipy.optimize.minimize",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csc.csc_matrix",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csgraph.breadth_first_order",
  "scipy.sparse.csgraph.breadth_first_tree",
  "scipy.sparse.csgraph.shortest_path",
  "scipy.sparse.csr.csr_matrix",
  "scipy.sparse.csr_matrix",
  "scipy.sparse.eye",
  "scipy.sparse.hstack",
  "scipy.sparse.issparse",
  "scipy.sparse.lil_matrix",
  "scipy.sparse.linalg.inv",
  "scipy.sparse.linalg.splu",
  "scipy.sparse.linalg.spsolve",
  "scipy.sparse.vstack",
  "scipy.stats.chi2.ppf",
  "seaborn.color_palette",
  "sin",
  "sqlite3.connect",
  "sys.modules",
  "sys.stderr.write",
  "sys.stdout",
  "sys.stdout.write",
  "sys.version_info",
  "tempfile._get_candidate_names",
  "tempfile.gettempdir",
  "time.time",
  "traceback.print_exc",
  "type.keys",
  "type.pop",
  "types.FunctionType",
  "types.MethodType",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "warnings.warn",
  "weakref.ref",
  "zlib.compress",
  "zlib.decompress"
 ],
 "deps": {
  "BODY": [],
  "ControllerTester": [],
  "DIV": [],
  "DivergentController": [],
  "H2": [],
  "HEAD": [],
  "HTML": [],
  "IPython": [],
  "SCRIPT": [],
  "STYLE": [],
  "TABLE": [],
  "TR": [],
  "_EmptyClass": [],
  "_iterencode": [],
  "adapt_element_idx_references": [],
  "arctan": [],
  "argparse": [],
  "base64": [],
  "calc_sm": [],
  "cgi": [],
  "check_callable_equality": [],
  "check_dictionary_equality": [],
  "check_elm_number": [],
  "check_equality": [],
  "check_subnet_correctness": [],
  "class_": [],
  "cmap": [],
  "cmath": [],
  "collections": [],
  "consider_callable": [],
  "copy": [],
  "cos": [],
  "cryptography": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0"
  ],
  "dict": [],
  "doctest": [],
  "fiona": [],
  "float": [],
  "func": [],
  "functools": [],
  "gc": [],
  "geo_data_to_latlong": [],
  "geopandas": [
   "geopandas/conda-forge/noarch/geopandas-0.3.0-py_1"
  ],
  "geopy": [
   "geopy/conda-forge/noarch/geopy-1.17.0-py_0"
  ],
  "graph_tool": [],
  "hashlib": [],
  "hsv": [],
  "idx_brch": [],
  "idx_bus": [],
  "igraph": [],
  "importlib": [],
  "inspect": [],
  "io": [],
  "itertools": [],
  "json": [],
  "julia": [],
  "lightsim2grid": [],
  "logging": [],
  "makeBdc": [],
  "makeYbus": [],
  "math": [],
  "matplotlib": [],
  "minmax": [],
  "multiprocessing": [],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "newton": [],
  "norm": [],
  "nprect": [],
  "numba": [],
  "numbers": [],
  "numpy": [],
  "of": [],
  "os": [],
  "packaging": [
   "packaging/conda-forge/noarch/packaging-20.4-pyh9f0ad1d_0",
   "packaging/conda-forge/noarch/packaging-20.8-pyhd3deb0d_0"
  ],
  "pandapower": [
   "pandapower/conda-forge/noarch/pandapower-2.4.0-pyh9f0ad1d_0"
  ],
  "pandapower_function": [],
  "pandas": [],
  "pf": [],
  "pickle": [],
  "plotly": [
   "plotly/conda-forge/noarch/plotly-3.7.0-py_0",
   "plotly/conda-forge/noarch/plotly-4.14.0-pyhd3deb0d_0",
   "plotly/conda-forge/noarch/plotly-4.5.4-pyh8c360ce_0",
   "plotly/conda-forge/noarch/plotly-4.7.1-pyh9f0ad1d_0"
  ],
  "plotting": [],
  "pplog": [],
  "pypower": [],
  "pyproj": [],
  "pytest": [],
  "random": [],
  "read": [],
  "run": [],
  "run_powermodels": [],
  "scaleit": [],
  "scipy": [],
  "seaborn": [],
  "shapely": [
   "solaris/conda-forge/noarch/solaris-0.4.0-pyhe05a262_0"
  ],
  "sin": [],
  "singledispatch": [
   "singledispatch/conda-forge/noarch/singledispatch-3.5.0-pyh44b312d_0"
  ],
  "six": [
   "six/conda-forge/noarch/six-1.14.0-py_1"
  ],
  "sparse": [
   "sparse/conda-forge/noarch/sparse-0.7.0-py_0"
  ],
  "sqlite3": [],
  "sys": [],
  "tempfile": [],
  "time": [],
  "traceback": [],
  "type": [],
  "types": [],
  "warnings": [],
  "weakref": [],
  "zlib": []
 }
}