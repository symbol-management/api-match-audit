{
 "bad": [
  "_DocSpan",
  "_NbestPrediction",
  "_PrelimPrediction",
  "_decode_record",
  "_strip_spaces",
  "bert.create_pretraining_data.FLAGS",
  "bert.create_pretraining_data.MaskedLmInstance",
  "bert.create_pretraining_data.TrainingInstance",
  "bert.create_pretraining_data.create_float_feature",
  "bert.create_pretraining_data.create_instances_from_document",
  "bert.create_pretraining_data.create_int_feature",
  "bert.create_pretraining_data.create_masked_lm_predictions",
  "bert.create_pretraining_data.create_training_instances",
  "bert.create_pretraining_data.flags",
  "bert.create_pretraining_data.truncate_seq_pair",
  "bert.create_pretraining_data.write_instance_to_example_files",
  "bert.extract_features.FLAGS",
  "bert.extract_features.InputExample",
  "bert.extract_features.InputFeatures",
  "bert.extract_features._truncate_seq_pair",
  "bert.extract_features.convert_examples_to_features",
  "bert.extract_features.flags",
  "bert.extract_features.input_fn_builder",
  "bert.extract_features.model_fn_builder",
  "bert.extract_features.read_examples",
  "bert.modeling.BertConfig",
  "bert.modeling.BertConfig.from_json_file",
  "bert.modeling.BertModel",
  "bert.modeling.assert_rank",
  "bert.modeling.attention_layer",
  "bert.modeling.create_attention_mask_from_input_mask",
  "bert.modeling.create_initializer",
  "bert.modeling.dropout",
  "bert.modeling.embedding_lookup",
  "bert.modeling.embedding_postprocessor",
  "bert.modeling.gelu",
  "bert.modeling.get_activation",
  "bert.modeling.get_assignment_map_from_checkpoint",
  "bert.modeling.get_shape_list",
  "bert.modeling.layer_norm",
  "bert.modeling.layer_norm_and_dropout",
  "bert.modeling.reshape_from_matrix",
  "bert.modeling.reshape_to_matrix",
  "bert.modeling.transformer_model",
  "bert.modeling_test.BertModelTest",
  "bert.optimization.AdamWeightDecayOptimizer",
  "bert.optimization.create_optimizer",
  "bert.run_classifier.ColaProcessor",
  "bert.run_classifier.DataProcessor",
  "bert.run_classifier.FLAGS",
  "bert.run_classifier.InputExample",
  "bert.run_classifier.InputFeatures",
  "bert.run_classifier.MnliProcessor",
  "bert.run_classifier.MrpcProcessor",
  "bert.run_classifier.PaddingInputExample",
  "bert.run_classifier.XnliProcessor",
  "bert.run_classifier._truncate_seq_pair",
  "bert.run_classifier.convert_examples_to_features",
  "bert.run_classifier.convert_single_example",
  "bert.run_classifier.create_model",
  "bert.run_classifier.file_based_convert_examples_to_features",
  "bert.run_classifier.file_based_input_fn_builder",
  "bert.run_classifier.flags",
  "bert.run_classifier.input_fn_builder",
  "bert.run_classifier.model_fn_builder",
  "bert.run_classifier_with_tfhub.FLAGS",
  "bert.run_classifier_with_tfhub.create_model",
  "bert.run_classifier_with_tfhub.create_tokenizer_from_hub_module",
  "bert.run_classifier_with_tfhub.flags",
  "bert.run_classifier_with_tfhub.model_fn_builder",
  "bert.run_pretraining.FLAGS",
  "bert.run_pretraining._decode_record",
  "bert.run_pretraining.flags",
  "bert.run_pretraining.gather_indexes",
  "bert.run_pretraining.get_masked_lm_output",
  "bert.run_pretraining.get_next_sentence_output",
  "bert.run_pretraining.input_fn_builder",
  "bert.run_pretraining.model_fn_builder",
  "bert.run_squad.FLAGS",
  "bert.run_squad.FeatureWriter",
  "bert.run_squad.InputFeatures",
  "bert.run_squad.RawResult",
  "bert.run_squad.SquadExample",
  "bert.run_squad._check_is_max_context",
  "bert.run_squad._compute_softmax",
  "bert.run_squad._get_best_indexes",
  "bert.run_squad._improve_answer_span",
  "bert.run_squad.convert_examples_to_features",
  "bert.run_squad.create_model",
  "bert.run_squad.flags",
  "bert.run_squad.get_final_text",
  "bert.run_squad.input_fn_builder",
  "bert.run_squad.model_fn_builder",
  "bert.run_squad.read_squad_examples",
  "bert.run_squad.validate_flags_or_throw",
  "bert.run_squad.write_predictions",
  "bert.tokenization.BasicTokenizer",
  "bert.tokenization.FullTokenizer",
  "bert.tokenization.WordpieceTokenizer",
  "bert.tokenization._is_control",
  "bert.tokenization._is_punctuation",
  "bert.tokenization._is_whitespace",
  "bert.tokenization.convert_by_vocab",
  "bert.tokenization.convert_to_unicode",
  "bert.tokenization.convert_tokens_to_ids",
  "bert.tokenization.load_vocab",
  "bert.tokenization.printable_text",
  "bert.tokenization.validate_case_matches_checkpoint",
  "bert.tokenization.whitespace_tokenize",
  "bert_module",
  "codecs.getwriter",
  "collections.OrderedDict",
  "collections.defaultdict",
  "collections.namedtuple",
  "compute_loss",
  "copy.deepcopy",
  "create_int_feature",
  "csv.reader",
  "is_whitespace",
  "json.dumps",
  "json.load",
  "json.loads",
  "math.exp",
  "math.sqrt",
  "numpy.pi",
  "numpy.sqrt",
  "os.path.join",
  "os.unlink",
  "random.Random",
  "re.compile",
  "re.match",
  "re.search",
  "six.PY2",
  "six.PY3",
  "six.integer_types",
  "six.iteritems",
  "six.string_types",
  "tempfile.NamedTemporaryFile",
  "tensorflow.FixedLenFeature",
  "tensorflow.Graph",
  "tensorflow.Session",
  "tensorflow.app.run",
  "tensorflow.argmax",
  "tensorflow.assert_less_equal",
  "tensorflow.cast",
  "tensorflow.clip_by_global_norm",
  "tensorflow.concat",
  "tensorflow.constant",
  "tensorflow.constant_initializer",
  "tensorflow.contrib.cluster_resolver.TPUClusterResolver",
  "tensorflow.contrib.data.map_and_batch",
  "tensorflow.contrib.data.parallel_interleave",
  "tensorflow.contrib.layers.layer_norm",
  "tensorflow.contrib.tpu.CrossShardOptimizer",
  "tensorflow.contrib.tpu.InputPipelineConfig.PER_HOST_V2",
  "tensorflow.contrib.tpu.RunConfig",
  "tensorflow.contrib.tpu.TPUConfig",
  "tensorflow.contrib.tpu.TPUEstimator",
  "tensorflow.contrib.tpu.TPUEstimatorSpec",
  "tensorflow.control_dependencies",
  "tensorflow.data.Dataset.from_tensor_slices",
  "tensorflow.data.TFRecordDataset",
  "tensorflow.estimator.ModeKeys.EVAL",
  "tensorflow.estimator.ModeKeys.PREDICT",
  "tensorflow.estimator.ModeKeys.TRAIN",
  "tensorflow.expand_dims",
  "tensorflow.flags",
  "tensorflow.flags.DEFINE_string",
  "tensorflow.float32",
  "tensorflow.gather",
  "tensorflow.get_variable",
  "tensorflow.get_variable_scope",
  "tensorflow.gfile.GFile",
  "tensorflow.gfile.Glob",
  "tensorflow.gfile.MakeDirs",
  "tensorflow.gfile.Open",
  "tensorflow.global_variables_initializer",
  "tensorflow.gradients",
  "tensorflow.group",
  "tensorflow.int32",
  "tensorflow.int64",
  "tensorflow.layers.dense",
  "tensorflow.local_variables_initializer",
  "tensorflow.logging.INFO",
  "tensorflow.logging.info",
  "tensorflow.logging.set_verbosity",
  "tensorflow.logging.warning",
  "tensorflow.matmul",
  "tensorflow.metrics.accuracy",
  "tensorflow.metrics.mean",
  "tensorflow.multiply",
  "tensorflow.nn.bias_add",
  "tensorflow.nn.dropout",
  "tensorflow.nn.embedding_lookup",
  "tensorflow.nn.log_softmax",
  "tensorflow.nn.relu",
  "tensorflow.nn.softmax",
  "tensorflow.one_hot",
  "tensorflow.ones",
  "tensorflow.parse_single_example",
  "tensorflow.pow",
  "tensorflow.python_io.TFRecordWriter",
  "tensorflow.range",
  "tensorflow.reduce_mean",
  "tensorflow.reduce_sum",
  "tensorflow.reshape",
  "tensorflow.shape",
  "tensorflow.slice",
  "tensorflow.sqrt",
  "tensorflow.square",
  "tensorflow.squeeze",
  "tensorflow.tanh",
  "tensorflow.test.TestCase",
  "tensorflow.test.main",
  "tensorflow.to_int32",
  "tensorflow.train.Example",
  "tensorflow.train.Feature",
  "tensorflow.train.Features",
  "tensorflow.train.FloatList",
  "tensorflow.train.Int64List",
  "tensorflow.train.Optimizer",
  "tensorflow.train.Scaffold",
  "tensorflow.train.get_or_create_global_step",
  "tensorflow.train.init_from_checkpoint",
  "tensorflow.train.list_variables",
  "tensorflow.train.polynomial_decay",
  "tensorflow.trainable_variables",
  "tensorflow.transpose",
  "tensorflow.truncated_normal_initializer",
  "tensorflow.unstack",
  "tensorflow.variable_scope",
  "tensorflow.zeros",
  "tensorflow.zeros_initializer",
  "tensorflow_hub.Module",
  "transpose_for_scores",
  "unicodedata.category",
  "unicodedata.normalize"
 ],
 "deps": {
  "_DocSpan": [],
  "_NbestPrediction": [],
  "_PrelimPrediction": [],
  "_decode_record": [],
  "_strip_spaces": [],
  "bert": [],
  "bert_module": [],
  "codecs": [],
  "collections": [],
  "compute_loss": [],
  "copy": [],
  "create_int_feature": [],
  "csv": [],
  "is_whitespace": [],
  "json": [],
  "math": [],
  "numpy": [],
  "os": [],
  "random": [],
  "re": [],
  "six": [],
  "tempfile": [],
  "tensorflow": [],
  "tensorflow_hub": [],
  "transpose_for_scores": [],
  "unicodedata": []
 }
}