{
 "bad": [
  "abc.ABCMeta",
  "additive_stats_dataframe",
  "argparse.ArgumentParser",
  "ast.NodeVisitor",
  "ast.Tuple",
  "ast.parse",
  "ast.walk",
  "bokeh.io.output_file",
  "bokeh.io.save",
  "bokeh.models.PrintfTickFormatter",
  "bokeh.plotting.figure",
  "collections.OrderedDict",
  "collections.defaultdict",
  "convert_year_to_int",
  "copy.deepcopy",
  "diagnostic_table_odict",
  "difflib.unified_diff",
  "distribution_table_dataframe",
  "fnc",
  "func",
  "gc.collect",
  "have_same_income_measure",
  "high_level_fn",
  "inspect.getfullargspec",
  "inspect.getsourcelines",
  "io.StringIO",
  "jitted_apply",
  "json.loads",
  "lines",
  "marshmallow.Schema",
  "marshmallow.fields.Boolean",
  "marshmallow.fields.Nested",
  "math.ceil",
  "math.exp",
  "math.log",
  "math.pow",
  "numba.jit",
  "numpy.all",
  "numpy.allclose",
  "numpy.arange",
  "numpy.array",
  "numpy.column_stack",
  "numpy.cumsum",
  "numpy.divide",
  "numpy.float32",
  "numpy.float64",
  "numpy.greater",
  "numpy.greater_equal",
  "numpy.inner",
  "numpy.int32",
  "numpy.less",
  "numpy.less_equal",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.maximum",
  "numpy.multiply",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.ndindex",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.round",
  "numpy.sort",
  "numpy.sqrt",
  "numpy.std",
  "numpy.where",
  "numpy.zeros",
  "numpy.zeros_like",
  "os.environ",
  "os.getenv",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.remove",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.concat",
  "pandas.cut",
  "pandas.read_csv",
  "param_doc",
  "paramtools.Parameters",
  "paramtools.ValidationError",
  "paramtools.ValueObject",
  "paramtools.consistent_labels",
  "paramtools.read_json",
  "paramtools.register_custom_type",
  "pkg_resources.Requirement.parse",
  "pkg_resources.resource_stream",
  "sqlite3.connect",
  "stat_dataframe",
  "sys.exit",
  "sys.stderr.write",
  "sys.stdout.write",
  "sys.stdout.writelines",
  "taxcalc.TaxCalcIO",
  "taxcalc.__version__",
  "taxcalc.calcfunctions.AGI",
  "taxcalc.calcfunctions.AGIsurtax",
  "taxcalc.calcfunctions.ALD_InvInc_ec_base",
  "taxcalc.calcfunctions.AMT",
  "taxcalc.calcfunctions.AdditionalCTC",
  "taxcalc.calcfunctions.AdditionalMedicareTax",
  "taxcalc.calcfunctions.Adj",
  "taxcalc.calcfunctions.AfterTaxIncome",
  "taxcalc.calcfunctions.AmOppCreditParts",
  "taxcalc.calcfunctions.BenefitLimitation",
  "taxcalc.calcfunctions.BenefitPrograms",
  "taxcalc.calcfunctions.BenefitSurtax",
  "taxcalc.calcfunctions.C1040",
  "taxcalc.calcfunctions.CTC_new",
  "taxcalc.calcfunctions.CapGains",
  "taxcalc.calcfunctions.CharityCredit",
  "taxcalc.calcfunctions.ChildDepTaxCredit",
  "taxcalc.calcfunctions.ComputeBenefit",
  "taxcalc.calcfunctions.DependentCare",
  "taxcalc.calcfunctions.EITC",
  "taxcalc.calcfunctions.EITCamount",
  "taxcalc.calcfunctions.EI_PayrollTax",
  "taxcalc.calcfunctions.EducationTaxCredit",
  "taxcalc.calcfunctions.ExpandIncome",
  "taxcalc.calcfunctions.F2441",
  "taxcalc.calcfunctions.FairShareTax",
  "taxcalc.calcfunctions.GainsTax",
  "taxcalc.calcfunctions.IITAX",
  "taxcalc.calcfunctions.ItemDed",
  "taxcalc.calcfunctions.ItemDedCap",
  "taxcalc.calcfunctions.LumpSumTax",
  "taxcalc.calcfunctions.NetInvIncTax",
  "taxcalc.calcfunctions.NonrefundableCredits",
  "taxcalc.calcfunctions.PersonalTaxCredit",
  "taxcalc.calcfunctions.RefundablePayrollTaxCredit",
  "taxcalc.calcfunctions.SSBenefits",
  "taxcalc.calcfunctions.SchR",
  "taxcalc.calcfunctions.SchXYZ",
  "taxcalc.calcfunctions.SchXYZTax",
  "taxcalc.calcfunctions.StdDed",
  "taxcalc.calcfunctions.TaxInc",
  "taxcalc.calcfunctions.Taxes",
  "taxcalc.calcfunctions.UBI",
  "taxcalc.calculator.Calculator",
  "taxcalc.calculator.Calculator.read_json_param_objects",
  "taxcalc.calculator.Calculator.reform_documentation",
  "taxcalc.cli.tc.ACTUAL_TEST_OUTPUT_FILENAME",
  "taxcalc.cli.tc.EXPECTED_TEST_OUTPUT_FILENAME",
  "taxcalc.cli.tc.TEST_INPUT_FILENAME",
  "taxcalc.cli.tc.TEST_TAXYEAR",
  "taxcalc.cli.tc._compare_test_output_files",
  "taxcalc.cli.tc._write_expected_test_output",
  "taxcalc.cli.tc.cli_tc_main",
  "taxcalc.consumption.Consumption",
  "taxcalc.consumption.Consumption.read_json_update",
  "taxcalc.data.Data",
  "taxcalc.decorators.DO_JIT",
  "taxcalc.decorators.GetReturnNode",
  "taxcalc.decorators.JIT",
  "taxcalc.decorators.create_apply_function_string",
  "taxcalc.decorators.create_toplevel_function_string",
  "taxcalc.decorators.id_wrapper",
  "taxcalc.decorators.iterate_jit",
  "taxcalc.decorators.make_apply_function",
  "taxcalc.growdiff.GrowDiff",
  "taxcalc.growdiff.GrowDiff.read_json_update",
  "taxcalc.growdiff.GrowDiff.years_in_revision",
  "taxcalc.growfactors.GrowFactors",
  "taxcalc.growfactors.GrowFactors.VALID_NAMES",
  "taxcalc.parameters.CompatibleDataSchema",
  "taxcalc.parameters.ParamToolsAdjustment",
  "taxcalc.parameters.Parameters",
  "taxcalc.parameters.Parameters._read_json_revision",
  "taxcalc.parameters.TaxcalcReform",
  "taxcalc.parameters.is_paramtools_format",
  "taxcalc.policy.Policy",
  "taxcalc.policy.Policy.DEFAULT_NUM_YEARS",
  "taxcalc.policy.Policy.JSON_START_YEAR",
  "taxcalc.policy.Policy.parameter_list",
  "taxcalc.policy.Policy.read_json_reform",
  "taxcalc.policy.Policy.years_in_revision",
  "taxcalc.records.Records",
  "taxcalc.records.Records.cps_constructor",
  "taxcalc.taxcalcio.TaxCalcIO",
  "taxcalc.utils.DECILE_ROW_NAMES",
  "taxcalc.utils.DIFF_TABLE_COLUMNS",
  "taxcalc.utils.DIFF_VARIABLES",
  "taxcalc.utils.DIST_TABLE_COLUMNS",
  "taxcalc.utils.DIST_VARIABLES",
  "taxcalc.utils.SOI_AGI_BINS",
  "taxcalc.utils.STANDARD_INCOME_BINS",
  "taxcalc.utils.STANDARD_ROW_NAMES",
  "taxcalc.utils.add_income_table_row_variable",
  "taxcalc.utils.add_quantile_table_row_variable",
  "taxcalc.utils.atr_graph_data",
  "taxcalc.utils.ce_aftertax_expanded_income",
  "taxcalc.utils.certainty_equivalent",
  "taxcalc.utils.create_diagnostic_table",
  "taxcalc.utils.create_difference_table",
  "taxcalc.utils.create_distribution_table",
  "taxcalc.utils.delete_file",
  "taxcalc.utils.expected_utility",
  "taxcalc.utils.get_sums",
  "taxcalc.utils.isoelastic_utility_function",
  "taxcalc.utils.json_to_dict",
  "taxcalc.utils.mtr_graph_data",
  "taxcalc.utils.pch_graph_data",
  "taxcalc.utils.pch_graph_plot",
  "taxcalc.utils.read_egg_csv",
  "taxcalc.utils.read_egg_json",
  "taxcalc.utils.unweighted_sum",
  "taxcalc.utils.weighted_sum",
  "taxcalc.utils.write_graph_file",
  "taxcalc.utils.xtr_graph_plot",
  "taxcalc.utilsprvt.EPSILON",
  "taxcalc.utilsprvt.agi_weighted",
  "taxcalc.utilsprvt.expanded_income_weighted",
  "taxcalc.utilsprvt.wage_weighted",
  "taxcalc.utilsprvt.weighted_mean",
  "typing.Any",
  "typing.List",
  "typing.Mapping",
  "typing.Union"
 ],
 "deps": {
  "abc": [],
  "additive_stats_dataframe": [],
  "argparse": [],
  "ast": [],
  "bokeh": [],
  "collections": [],
  "convert_year_to_int": [],
  "copy": [],
  "diagnostic_table_odict": [],
  "difflib": [],
  "distribution_table_dataframe": [],
  "fnc": [],
  "func": [],
  "gc": [],
  "have_same_income_measure": [],
  "high_level_fn": [],
  "inspect": [],
  "io": [],
  "jitted_apply": [],
  "json": [],
  "lines": [],
  "marshmallow": [],
  "math": [],
  "numba": [],
  "numpy": [],
  "os": [],
  "pandas": [],
  "param_doc": [],
  "paramtools": [],
  "pkg_resources": [],
  "sqlite3": [],
  "stat_dataframe": [],
  "sys": [],
  "taxcalc": [],
  "typing": []
 }
}