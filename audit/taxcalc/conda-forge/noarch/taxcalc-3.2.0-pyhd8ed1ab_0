{
 "bad": [
  "additive_stats_dataframe",
  "ast.Tuple",
  "collections.defaultdict",
  "convert_year_to_int",
  "diagnostic_table_odict",
  "distribution_table_dataframe",
  "fnc",
  "func",
  "gc",
  "have_same_income_measure",
  "high_level_fn",
  "io.StringIO",
  "jitted_apply",
  "lines",
  "marshmallow",
  "marshmallow.Schema",
  "marshmallow.fields.Boolean",
  "marshmallow.fields.Nested",
  "numba",
  "numba.jit",
  "numpy.arange",
  "numpy.divide",
  "numpy.float32",
  "numpy.float64",
  "numpy.greater",
  "numpy.int32",
  "numpy.less",
  "numpy.less_equal",
  "numpy.logical_and",
  "numpy.logical_or",
  "numpy.maximum",
  "numpy.multiply",
  "numpy.nan",
  "numpy.random.randint",
  "numpy.random.seed",
  "numpy.sqrt",
  "numpy.zeros",
  "os.path.exists",
  "os.path.isfile",
  "os.remove",
  "pandas",
  "pandas.DataFrame",
  "pandas.Series",
  "pandas.concat",
  "pandas.cut",
  "pandas.read_csv",
  "param_doc",
  "paramtools",
  "paramtools.Parameters",
  "paramtools.ValidationError",
  "paramtools.ValueObject",
  "paramtools.consistent_labels",
  "paramtools.read_json",
  "paramtools.register_custom_type",
  "pkg_resources",
  "pkg_resources.Requirement.parse",
  "pkg_resources.resource_stream",
  "requests",
  "sqlite3",
  "sqlite3.connect",
  "stat_dataframe",
  "sys",
  "sys.stderr.write",
  "sys.stdout.write",
  "sys.stdout.writelines",
  "taxcalc.TaxCalcIO",
  "taxcalc.growdiff.GrowDiff.years_in_revision",
  "taxcalc.growfactors.GrowFactors.VALID_NAMES",
  "taxcalc.policy.Policy.DEFAULT_NUM_YEARS",
  "taxcalc.policy.Policy.JSON_START_YEAR",
  "taxcalc.policy.Policy.years_in_revision"
 ],
 "deps": {
  "abc": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "argparse": [
   "argparse/conda-forge/osx-64/argparse-1.4.0-py26_0",
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "bokeh": [
   "bokeh/conda-forge/linux-64/bokeh-1.3.1-py27_0"
  ],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "difflib": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "io": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "json": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "math": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "ntpath": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.17.5-py36h95a1406_0",
   "numpy/conda-forge/linux-64/numpy-1.18.4-py37h8960a57_0",
   "numpy/conda-forge/linux-64/numpy-1.19.2-py36h68c22af_1"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.10-he5300dc_1011_cpython",
   "python/conda-forge/linux-64/python-3.8.5-h1103e12_6_cpython"
  ]
 }
}