{
 "bad": [
  "AdvancedAlgebra",
  "ColonDotVar",
  "CustomAlgebra",
  "CustomSymbol",
  "PlainVar",
  "S",
  "StringIO.StringIO",
  "boolean.BooleanAlgebra",
  "boolean.ParseError",
  "boolean.Symbol",
  "boolean.TOKEN_AND",
  "boolean.TOKEN_FALSE",
  "boolean.TOKEN_LPAR",
  "boolean.TOKEN_NOT",
  "boolean.TOKEN_OR",
  "boolean.TOKEN_RPAR",
  "boolean.TOKEN_SYMBOL",
  "boolean.TOKEN_TRUE",
  "boolean.boolean.AND",
  "boolean.boolean.BaseElement",
  "boolean.boolean.DualBase",
  "boolean.boolean.Expression",
  "boolean.boolean.Function",
  "boolean.boolean.NOT",
  "boolean.boolean.OR",
  "boolean.boolean.PARSE_ERRORS",
  "boolean.boolean.PARSE_INVALID_EXPRESSION",
  "boolean.boolean.PARSE_INVALID_NESTING",
  "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE",
  "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE",
  "boolean.boolean.PARSE_UNBALANCED_CLOSING_PARENS",
  "boolean.boolean.PARSE_UNKNOWN_TOKEN",
  "boolean.boolean.ParseError",
  "boolean.boolean.Symbol",
  "boolean.boolean.TOKEN_AND",
  "boolean.boolean.TOKEN_FALSE",
  "boolean.boolean.TOKEN_LPAR",
  "boolean.boolean.TOKEN_NOT",
  "boolean.boolean.TOKEN_OR",
  "boolean.boolean.TOKEN_RPAR",
  "boolean.boolean.TOKEN_SYMBOL",
  "boolean.boolean.TOKEN_TRUE",
  "boolean.boolean.TRACE_PARSE",
  "boolean.boolean._FALSE",
  "boolean.boolean._TRUE",
  "boolean.boolean.basestring",
  "boolean.test_boolean.basestring",
  "build_symbol",
  "dual",
  "expr_class",
  "inspect.isclass",
  "is_operator",
  "is_sym",
  "itertools.chain.from_iterable",
  "itertools.product",
  "parse",
  "tokenize.COMMENT",
  "tokenize.DEDENT",
  "tokenize.ENDMARKER",
  "tokenize.INDENT",
  "tokenize.NAME",
  "tokenize.NEWLINE",
  "tokenize.NL",
  "tokenize.OP",
  "tokenize.generate_tokens",
  "unittest.TestCase",
  "unittest.case.expectedFailure",
  "unittest.main"
 ],
 "deps": {
  "AdvancedAlgebra": [],
  "ColonDotVar": [],
  "CustomAlgebra": [],
  "CustomSymbol": [],
  "PlainVar": [],
  "S": [],
  "StringIO": [],
  "boolean": [],
  "build_symbol": [],
  "dual": [],
  "expr_class": [],
  "inspect": [],
  "is_operator": [],
  "is_sym": [],
  "itertools": [],
  "parse": [],
  "tokenize": [],
  "unittest": []
 }
}