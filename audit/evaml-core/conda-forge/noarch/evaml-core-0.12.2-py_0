{
 "bad": [
  "CoolBinaryClassificationPipeline",
  "FakePipeline",
  "Funky_Name1DataCheck",
  "Funky_Name1DataCheck.name",
  "MockBinaryClassificationPipeline",
  "MockBinaryClassificationPipelineWithoutEstimator",
  "MockComponent",
  "MockComponent.model_family",
  "MockComponentModelFamily",
  "MockComponentName",
  "MockDataCheck",
  "MockDataCheckError",
  "MockDataCheckErrorAndWarning",
  "MockDataCheckWarning",
  "MockDataCheckWithParam",
  "MockEmptyObjective",
  "MockEstimator",
  "MockEstimator.model_family",
  "MockEstimatorWithOverrides",
  "MockEstimatorWithOverridesSubclass",
  "MockEstimatorWithoutAttribute",
  "MockFeatureSelector",
  "MockMulticlassClassificationPipeline",
  "MockNoObjectiveFunctionObjective",
  "MockPipeline",
  "MockPipeline.summary",
  "MockPipelineNone",
  "MockPipelineOverRide",
  "MockPrecision",
  "MockRandomState",
  "MockRegressionPipeline",
  "MockResults",
  "MockTransformer",
  "MockTransformer.model_family",
  "MockTransformerWithFit",
  "MockTransformerWithFitAndTransform",
  "MockTransformerWithFitTransform",
  "MockTransformerWithFitTransformButError",
  "MockTransformerWithOnlyFit",
  "MockTransformerWithOverride",
  "MockTransformerWithOverrideSubclass",
  "NonComponent",
  "PipelineWithDropCol",
  "TestDefinedNamePipeline",
  "TestPipeline",
  "TestPipelineWithoutComponentGraph",
  "_get_funct_name",
  "_handle_predictions",
  "_print_list",
  "check1",
  "check2",
  "check3",
  "check4",
  "check_equal_dicts",
  "cloudpickle.DEFAULT_PROTOCOL",
  "cloudpickle.load",
  "cls",
  "cls.__name__",
  "component_class",
  "component_class.__init__",
  "component_class.__name__",
  "component_class.name",
  "component_class.supported_problem_types",
  "data_check_message_type.DataCheckMessageType.ERROR",
  "data_check_message_type.DataCheckMessageType.WARNING",
  "estimator_class",
  "estimator_class.supported_problem_types",
  "evalml.__file__",
  "evalml.data_checks.data_check_message_type.DataCheckMessageType.ERROR",
  "evalml.data_checks.data_check_message_type.DataCheckMessageType.WARNING",
  "evalml.data_checks.no_variance_data_check.NoVarianceDataCheck.name",
  "evalml.model_family.ModelFamily.BASELINE",
  "evalml.model_family.ModelFamily.CATBOOST",
  "evalml.model_family.ModelFamily.EXTRA_TREES",
  "evalml.model_family.ModelFamily.LINEAR_MODEL",
  "evalml.model_family.ModelFamily.NONE",
  "evalml.model_family.ModelFamily.RANDOM_FOREST",
  "evalml.model_family.ModelFamily.XGBOOST",
  "evalml.model_family.model_family.ModelFamily.BASELINE",
  "evalml.model_family.model_family.ModelFamily.CATBOOST",
  "evalml.model_family.model_family.ModelFamily.XGBOOST",
  "evalml.objectives.utils.OPTIONS.values",
  "evalml.pipelines.ExtraTreesClassifier.model_family",
  "evalml.pipelines.ExtraTreesClassifier.supported_problem_types",
  "evalml.pipelines.ExtraTreesRegressor.model_family",
  "evalml.pipelines.ExtraTreesRegressor.supported_problem_types",
  "evalml.pipelines.PipelineBase.load",
  "evalml.pipelines.classification_pipeline.ClassificationPipeline._score",
  "evalml.pipelines.components.CatBoostClassifier.SEED_MAX",
  "evalml.pipelines.components.CatBoostClassifier.SEED_MIN",
  "evalml.pipelines.components.CatBoostRegressor.SEED_MAX",
  "evalml.pipelines.components.CatBoostRegressor.SEED_MIN",
  "evalml.pipelines.components.ComponentBase.load",
  "evalml.pipelines.components.ComponentBaseMeta.NO_FITTING_REQUIRED",
  "evalml.pipelines.components.LinearRegressor.name",
  "evalml.pipelines.components.LogisticRegressionClassifier.name",
  "evalml.pipelines.components.Transformer.name",
  "evalml.pipelines.components.XGBoostClassifier.SEED_MAX",
  "evalml.pipelines.components.XGBoostClassifier.SEED_MIN",
  "evalml.pipelines.components.XGBoostRegressor.SEED_MAX",
  "evalml.pipelines.components.XGBoostRegressor.SEED_MIN",
  "evalml.pipelines.components.estimators.classifiers.ElasticNetClassifier.model_family",
  "evalml.pipelines.components.estimators.classifiers.ElasticNetClassifier.supported_problem_types",
  "evalml.pipelines.components.estimators.regressors.ElasticNetRegressor.model_family",
  "evalml.pipelines.components.estimators.regressors.ElasticNetRegressor.supported_problem_types",
  "evalml.problem_types.ProblemTypes.BINARY",
  "evalml.problem_types.ProblemTypes.MULTICLASS",
  "evalml.problem_types.ProblemTypes.REGRESSION",
  "evalml.problem_types.problem_types.ProblemTypes.BINARY",
  "evalml.problem_types.problem_types.ProblemTypes.MULTICLASS",
  "evalml.problem_types.problem_types.ProblemTypes.REGRESSION",
  "evalml.utils.SEED_BOUNDS.max_bound",
  "evalml.utils.SEED_BOUNDS.min_bound",
  "evalml.utils.gen_utils.SEED_BOUNDS.max_bound",
  "evalml.utils.gen_utils.SEED_BOUNDS.min_bound",
  "get_IQR",
  "get_pipeline_base_class",
  "get_random_seed_vec",
  "itertools",
  "itertools.product",
  "logging.Logger.manager.loggerDict",
  "make_expected_values",
  "make_mock_random_state",
  "method",
  "method.__name__",
  "numpy.datetime64",
  "numpy.float64",
  "numpy.inf",
  "numpy.isinf",
  "numpy.logical_or",
  "numpy.nan",
  "numpy.random.RandomState",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.stack",
  "os.W_OK",
  "os.access",
  "os.environ.get",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.isfile",
  "os.path.join",
  "os.path.splitext",
  "pandas.DataFrame.from_dict",
  "pandas.api.types.is_categorical_dtype",
  "pipeline_class",
  "pipeline_class.component_graph",
  "pipeline_class.name.propose",
  "pytest.mark.parametrize",
  "shap.sample",
  "standard_metrics.AUC",
  "standard_metrics.AUCMacro",
  "standard_metrics.AUCMicro",
  "standard_metrics.AUCWeighted",
  "standard_metrics.AccuracyBinary",
  "standard_metrics.AccuracyMulticlass",
  "standard_metrics.BalancedAccuracyBinary",
  "standard_metrics.BalancedAccuracyMulticlass",
  "standard_metrics.ExpVariance",
  "standard_metrics.F1",
  "standard_metrics.F1Macro",
  "standard_metrics.F1Micro",
  "standard_metrics.F1Weighted",
  "standard_metrics.LogLossBinary",
  "standard_metrics.LogLossMulticlass",
  "standard_metrics.MAE",
  "standard_metrics.MCCBinary",
  "standard_metrics.MCCMulticlass",
  "standard_metrics.MSE",
  "standard_metrics.MaxError",
  "standard_metrics.MedianAE",
  "standard_metrics.Precision",
  "standard_metrics.PrecisionMacro",
  "standard_metrics.PrecisionMicro",
  "standard_metrics.PrecisionWeighted",
  "standard_metrics.R2",
  "standard_metrics.RootMeanSquaredError",
  "str.maketrans",
  "struct.calcsize",
  "sys",
  "sys.byteorder",
  "sys.exc_info",
  "sys.stdout",
  "sys.version_info",
  "texttable.Texttable.HEADER",
  "time",
  "time.time",
  "tqdm.std.tqdm.format_interval"
 ],
 "deps": {
  "CoolBinaryClassificationPipeline": [],
  "FakePipeline": [],
  "Funky_Name1DataCheck": [],
  "MockBinaryClassificationPipeline": [],
  "MockBinaryClassificationPipelineWithoutEstimator": [],
  "MockComponent": [],
  "MockComponentModelFamily": [],
  "MockComponentName": [],
  "MockDataCheck": [],
  "MockDataCheckError": [],
  "MockDataCheckErrorAndWarning": [],
  "MockDataCheckWarning": [],
  "MockDataCheckWithParam": [],
  "MockEmptyObjective": [],
  "MockEstimator": [],
  "MockEstimatorWithOverrides": [],
  "MockEstimatorWithOverridesSubclass": [],
  "MockEstimatorWithoutAttribute": [],
  "MockFeatureSelector": [],
  "MockMulticlassClassificationPipeline": [],
  "MockNoObjectiveFunctionObjective": [],
  "MockPipeline": [],
  "MockPipelineNone": [],
  "MockPipelineOverRide": [],
  "MockPrecision": [],
  "MockRandomState": [],
  "MockRegressionPipeline": [],
  "MockResults": [],
  "MockTransformer": [],
  "MockTransformerWithFit": [],
  "MockTransformerWithFitAndTransform": [],
  "MockTransformerWithFitTransform": [],
  "MockTransformerWithFitTransformButError": [],
  "MockTransformerWithOnlyFit": [],
  "MockTransformerWithOverride": [],
  "MockTransformerWithOverrideSubclass": [],
  "NonComponent": [],
  "PipelineWithDropCol": [],
  "TestDefinedNamePipeline": [],
  "TestPipeline": [],
  "TestPipelineWithoutComponentGraph": [],
  "_get_funct_name": [],
  "_handle_predictions": [],
  "_print_list": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "check1": [],
  "check2": [],
  "check3": [],
  "check4": [],
  "check_equal_dicts": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "cloudpickle": [
   "cloudpickle/conda-forge/noarch/cloudpickle-1.4.1-py_0"
  ],
  "cls": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "component_class": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "data_check_message_type": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "estimator_class": [],
  "evalml": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "get_IQR": [],
  "get_pipeline_base_class": [],
  "get_random_seed_vec": [],
  "graphviz": [
   "python-graphviz/conda-forge/noarch/python-graphviz-0.14.2-pyh9f0ad1d_0"
  ],
  "importlib": [
   "importlib/conda-forge/linux-64/importlib-1.0.4-py26_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "itertools": [],
  "locale": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "make_expected_values": [],
  "make_mock_random_state": [],
  "method": [],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pandas": [
   "pandas/conda-forge/linux-64/pandas-0.25.0-py37hb3f55d8_0"
  ],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pipeline_class": [],
  "pkg_resources": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "psutil": [
   "psutil/conda-forge/linux-64/psutil-5.8.0-py37h5e8e339_1"
  ],
  "pytest": [
   "pytest/conda-forge/linux-64/pytest-4.6.0-py37_0",
   "pytest/conda-forge/linux-64/pytest-4.6.3-py27_0",
   "pytest/conda-forge/linux-64/pytest-6.0.2-py36hc560c46_0",
   "pytest/conda-forge/linux-64/pytest-6.1.1-py37hc8dfbb8_0"
  ],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "requirements": [
   "requirements-parser/conda-forge/noarch/requirements-parser-0.2.0-py_0"
  ],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "shap": [
   "shap/conda-forge/linux-64/shap-v0.22.2-py36h7eb728f_0"
  ],
  "sklearn": [
   "scikit-learn/conda-forge/linux-64/scikit-learn-0.23.1-py37h8a51577_0"
  ],
  "skopt": [
   "scikit-optimize/conda-forge/noarch/scikit-optimize-0.4-py_0"
  ],
  "standard_metrics": [],
  "str": [],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "texttable": [
   "texttable/conda-forge/noarch/texttable-1.6.2-py_0"
  ],
  "time": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}