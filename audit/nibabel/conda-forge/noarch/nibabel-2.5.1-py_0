{
 "bad": [
  "AnalyzeImage.from_image",
  "ArrGiver",
  "BabyBio",
  "C",
  "CheckScaling",
  "ConfigParser.ConfigParser",
  "ConfigParser.RawConfigParser",
  "D",
  "DC",
  "DataTag",
  "DimIdxSeqElem",
  "DistutilsRefactoringTool",
  "DummyTractogramFile",
  "E",
  "FORMATS.items",
  "FORMATS.keys",
  "FORMATS.values",
  "Fake",
  "FakeData",
  "FakeData2",
  "FakeImage",
  "FakeImage.filespec_to_files",
  "FakeImage.from_files",
  "FakeImage.make_file_map",
  "FunkyHeader2",
  "H",
  "H.from_header",
  "H1",
  "H2",
  "H3",
  "H4",
  "H5",
  "H6",
  "H7",
  "HC",
  "HC.has_data_intercept",
  "HC.has_data_slope",
  "IC",
  "IC.from_file_map",
  "IC.header_class",
  "IC.load",
  "LD",
  "MFW",
  "MakeTotalDestroy",
  "Minc1Image",
  "MincImage",
  "MyHdr",
  "MyHeader",
  "MyOpener",
  "NP",
  "Nifti1Image.from_file_map",
  "Nifti1Image.from_image",
  "Nifti1Pair.from_file_map",
  "NoStringIO",
  "PerFrmFuncGrpSeqElem",
  "SAW",
  "SIAW",
  "StrictOpener",
  "StringIO",
  "StringIO.StringIO",
  "TestObject",
  "__builtin__",
  "__name__.split",
  "_apply_affine",
  "_check_gifti",
  "_check_hdr_points_space",
  "_chk_trunc",
  "_data_gen",
  "_db_nochange",
  "_err_or_warn",
  "_ftype4scaled_finite",
  "_gen",
  "_gen_data",
  "_gen_straight_streamline",
  "_h5py_compat.h5py.File",
  "_h5py_compat.have_h5py",
  "_print_me",
  "_rt",
  "analyze.AnalyzeHeader",
  "analyze.AnalyzeHeader.from_header",
  "analyze.AnalyzeHeader.get_data_shape",
  "analyze.AnalyzeHeader.set_data_shape",
  "analyze.AnalyzeHeader.sizeof_hdr",
  "analyze.AnalyzeImage",
  "analyze.AnalyzeImage.__init__.__doc__",
  "analyze.AnalyzeImage.from_image",
  "analyze.data_history_dtd",
  "analyze.header_key_dtd",
  "analyze.image_dimension_dtd",
  "ap",
  "array_sequence.ArraySequence.load",
  "arraywriters.WriterError",
  "arraywriters.get_slope_inter",
  "arraywriters.make_array_writer",
  "assert_array_equal_",
  "assert_copy_ok",
  "assert_rt",
  "assert_set_dtype",
  "atype",
  "awt",
  "big_floater",
  "brikhead.AFNIHeaderError",
  "brikhead.AFNIImage",
  "brikhead.AFNIImageError",
  "brikhead.load",
  "builtins",
  "bytes.tell",
  "bytes.write",
  "casting.OK_FLOATS.index",
  "check",
  "check_against",
  "check_img",
  "check_version",
  "checkwarns.ErrorWarnings",
  "checkwarns.IgnoreWarnings",
  "cifti2.CIFTI_BRAIN_STRUCTURES",
  "cifti2.Cifti2BrainModel",
  "cifti2.Cifti2Header",
  "cifti2.Cifti2LabelTable",
  "cifti2.Cifti2Matrix",
  "cifti2.Cifti2MatrixIndicesMap",
  "cifti2.Cifti2MetaData",
  "cifti2.Cifti2NamedMap",
  "cifti2.Cifti2Parcel",
  "cifti2.Cifti2Surface",
  "cifti2.Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ",
  "cifti2.Cifti2VertexIndices",
  "cifti2.Cifti2Vertices",
  "cifti2.Cifti2Volume",
  "cifti2.Cifti2VoxelIndicesIJK",
  "cifti2_axes.from_index_mapping",
  "cifti2_axes.to_header",
  "cls",
  "cmp",
  "collections.Iterable",
  "collections.MutableMapping",
  "collections.MutableSequence",
  "collections.MutableSet",
  "collections.abc.Iterable",
  "collections.abc.MutableMapping",
  "collections.abc.MutableSequence",
  "collections.abc.MutableSet",
  "converter",
  "cos",
  "csareader.CSAError",
  "csareader.CSAReadError",
  "csareader.MAX_CSA_ITEMS",
  "csareader.get_acq_mat_txt",
  "csareader.get_b_matrix",
  "csareader.get_b_value",
  "csareader.get_csa_header",
  "csareader.get_g_vector",
  "csareader.get_ice_dims",
  "csareader.get_n_mosaic",
  "csareader.get_slice_normal",
  "csareader.is_mosaic",
  "csareader.read",
  "d1",
  "data.datasource_or_bomber",
  "data.get_nipy_system_dir",
  "data.get_nipy_user_dir",
  "data_func",
  "dec",
  "dec_func",
  "dec_func.__doc__",
  "decimal.Decimal",
  "dft.clear_cache",
  "dft.get_studies",
  "dft.update_cache",
  "dicom",
  "dicom.datadict.tag_for_keyword",
  "dicom.datadict.tag_for_name",
  "dicom.read_file",
  "dicom.sequence.Sequence",
  "dicom.values",
  "dicomreaders.DPCS_TO_TAL",
  "dicomreaders.DicomReadError",
  "dicomreaders.mosaic_to_nii",
  "dicomreaders.read_mosaic_dir",
  "dicomreaders.read_mosaic_dwi_dir",
  "dicomreaders.slices_to_series",
  "dicomreaders.wrapper_from_file",
  "dicomwrappers.MosaicWrapper",
  "dicomwrappers.MultiframeWrapper",
  "dicomwrappers.SiemensWrapper",
  "dicomwrappers.Wrapper",
  "dicomwrappers.WrapperError",
  "dicomwrappers.WrapperPrecisionError",
  "dicomwrappers.wrapper_from_data",
  "dicomwrappers.wrapper_from_file",
  "display_diff",
  "dtype",
  "dwiparams.B2q",
  "dxer",
  "ecat.EcatImage.from_filespec",
  "ecat.EcatImage.load",
  "ecat.EcatImageArrayProxy",
  "ecat.load",
  "endswith",
  "environment.get_home_dir",
  "environment.get_nipy_system_dir",
  "environment.get_nipy_user_dir",
  "errno",
  "errno.EFTYPE",
  "errno.ENFILE",
  "errno.ENOENT",
  "error_class",
  "eulerangles.euler2mat",
  "eulerangles.euler2quat",
  "eulerangles.mat2euler",
  "eulerangles.quat2euler",
  "f",
  "f32",
  "f64",
  "filter.search",
  "fix_sliceobj",
  "fmt_sliceobj",
  "format.is_correct_format",
  "frombytes",
  "ft",
  "func",
  "func.__doc__",
  "gc",
  "gc.collect",
  "gda",
  "gen_old_annot_file",
  "get_data_diff",
  "get_data_func",
  "get_data_hash_diff",
  "get_expected",
  "get_headers_diff",
  "get_test_label",
  "gifti.GiftiCoordSystem",
  "hashlib.md5",
  "hashlib.sha1",
  "hdr_class",
  "hdr_klass",
  "header.Field.DIMENSIONS",
  "header.Field.ENDIANNESS",
  "header.Field.MAGIC_NUMBER",
  "header.Field.NB_PROPERTIES_PER_STREAMLINE",
  "header.Field.NB_SCALARS_PER_POINT",
  "header.Field.NB_STREAMLINES",
  "header.Field.ORIGIN",
  "header.Field.VOXEL_ORDER",
  "header.Field.VOXEL_ORDER.item",
  "header.Field.VOXEL_SIZES",
  "header.Field.VOXEL_TO_RASMM",
  "ie3",
  "image_maker",
  "imageglobals.ErrorLevel",
  "imageglobals.LoggingOutputSuppressor",
  "imageglobals.error_level",
  "imageglobals.logger",
  "img_class",
  "img_class.from_file_map",
  "img_class.header_class",
  "img_klass",
  "img_klass.__name__",
  "img_klass.files_types",
  "img_klass.from_file_map",
  "img_klass.from_filename",
  "img_klass.load",
  "in_meth",
  "in_type",
  "indexed_gzip.SafeIndexedGzipFile",
  "inklass",
  "input.endswith",
  "input.seek",
  "int_ceex",
  "int_flex",
  "inter_type",
  "islock",
  "itertools",
  "itertools.chain",
  "itertools.product",
  "itertools.tee",
  "itp",
  "klass",
  "klass.from_file_map",
  "klass.from_header",
  "klass.make_file_map",
  "klass.makeable",
  "klass.rw",
  "kw_func",
  "kw_func.__doc__",
  "link",
  "loadsave.guessed_image_type",
  "loadsave.load",
  "loadsave.save",
  "loadsave.which_analyze_type",
  "long",
  "lower_t",
  "make_array",
  "make_dist",
  "make_imaker",
  "make_prox_imaker",
  "make_test",
  "maker",
  "method",
  "mghformat.MGHHeader._HeaderData",
  "mghformat.MGHHeader.default_structarr",
  "mghformat.MGHImage.from_file_map",
  "mghformat.MGHImage.load",
  "mghformat.MGHImage.make_file_map",
  "minc",
  "minc.Minc1Image",
  "minc1.Minc1File",
  "minc1.MincFile",
  "minc1.MincImageArrayProxy",
  "minc1.load",
  "minc2.Minc2File",
  "minc2.load",
  "mock.MagicMock",
  "mock.Mock",
  "mock.patch",
  "mock.patch.object",
  "my_table",
  "netcdf_variable",
  "nibabel.Nifti1Header.diagnose_binaryblock",
  "nibabel.__file__",
  "nibabel.__init__._ModuleProxy",
  "nibabel.__init__.__doc__",
  "nibabel.__init__._get_pkg_info",
  "nibabel.__init__._test_states",
  "nibabel._h5py_compat.have_h5py",
  "nibabel.cifti2.Cifti2Image.from_file_map",
  "nibabel.cifti2.Cifti2Image.from_filename",
  "nibabel.cifti2.Cifti2Image.make_file_map",
  "nibabel.cmdline.parrec2nii.io_orientation.return_value",
  "nibabel.cmdline.parrec2nii.nifti1.Nifti1Image.return_value",
  "nibabel.cmdline.parrec2nii.pr.load.return_value",
  "nibabel.cmdline.parrec2nii.verbose.switch",
  "nibabel.externals.__init__._ModuleProxy",
  "nibabel.externals.six.BytesIO",
  "nibabel.gifti.GiftiDataArray.from_array",
  "nibabel.gifti.GiftiImage.from_bytes",
  "nibabel.gifti.GiftiImage.from_file_map",
  "nibabel.gifti.GiftiMetaData.from_dict",
  "nibabel.gifti.util.gifti_endian_codes.byteorder",
  "nibabel.imageglobals.logger.level",
  "nibabel.info.cmp_pkg_version.__defaults__",
  "nibabel.nifti1.data_type_codes.dtype",
  "nibabel.nifti1.data_type_codes.type",
  "nibabel.nifti1.data_type_codes.value_set",
  "nibabel.nifti1.extension_codes.keys",
  "nibabel.nifti1.header_dtype.itemsize",
  "nibabel.nifti1.xform_codes.keys",
  "nibabel.nifti1.xform_codes.niistring",
  "nibabel.py3k.builtins.__import__",
  "nibabel.pydicom_compat.pydicom.__version__",
  "nibabel.pydicom_compat.pydicom.dataset.Dataset",
  "nibabel.pydicom_compat.pydicom.dataset.Tag",
  "nibabel.pydicom_compat.pydicom.filereader.InvalidDicomError",
  "nibabel.streamlines.FORMATS.items",
  "nibabel.streamlines.Field.DIMENSIONS",
  "nibabel.streamlines.Field.VOXEL_ORDER",
  "nibabel.streamlines.Field.VOXEL_SIZES",
  "nibabel.streamlines.Field.VOXEL_TO_RASMM",
  "nibabel.streamlines.__init__.ExtensionWarning",
  "nibabel.streamlines.__init__.FORMATS",
  "nibabel.streamlines.__init__.TckFile",
  "nibabel.streamlines.__init__.Tractogram",
  "nibabel.streamlines.__init__.TrkFile",
  "nibabel.streamlines.__init__.detect_format",
  "nibabel.streamlines.header.Field.DIMENSIONS",
  "nibabel.streamlines.header.Field.VOXEL_ORDER",
  "nibabel.streamlines.header.Field.VOXEL_SIZES",
  "nibabel.streamlines.header.Field.VOXEL_TO_RASMM",
  "nibabel.testing.__init__.EXTRA_SET",
  "nibabel.testing.__init__._deprecate_with_version",
  "nibabel.testing.__init__.clear_and_catch_warnings",
  "nibabel.testing.__init__.error_warnings",
  "nibabel.testing.__init__.skipif",
  "nibabel_data.environ",
  "nibabel_data.get_nibabel_data",
  "nifti1.Nifti1Header",
  "nifti1.Nifti1Image",
  "nifti1.Nifti1Image.from_image",
  "nifti1.Nifti1Pair",
  "nifti1.Nifti1Pair.from_image",
  "nifti1.data_type_codes.code",
  "nifti1.data_type_codes.dtype",
  "nifti1.data_type_codes.niistring",
  "nifti1.data_type_codes.type",
  "nifti1.extension_codes.add_codes",
  "nifti1.header_dtype",
  "nifti1.intent_codes.add_codes",
  "nifti1.intent_codes.code",
  "nifti1.intent_codes.niistring",
  "nifti1.save",
  "nifti1.xform_codes.code",
  "nifti1.xform_codes.niistring",
  "nifti2.Nifti2Header.sizeof_hdr",
  "nifti2.Nifti2Image",
  "nifti2.Nifti2Image.files_types",
  "nifti2.Nifti2Image.valid_exts",
  "nifti2.Nifti2Pair",
  "nose.tools.assert_equal",
  "nose.tools.assert_false",
  "nose.tools.assert_is_none",
  "nose.tools.assert_not_equal",
  "nose.tools.assert_raises",
  "nose.tools.assert_true",
  "nose.tools.raises",
  "np_type",
  "npa",
  "numpy.absolute",
  "numpy.complex128",
  "numpy.complex256",
  "numpy.complex64",
  "numpy.distutils.ccompiler.get_default_compiler",
  "numpy.fabs",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.inexact",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.isinf",
  "numpy.log",
  "numpy.logical_and",
  "numpy.logical_not",
  "numpy.logical_or",
  "numpy.longcomplex",
  "numpy.longdouble",
  "numpy.mgrid.reshape",
  "numpy.nan",
  "numpy.ndarray.__new__",
  "numpy.random.RandomState",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.random_integers",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.rint",
  "numpy.sctypes.items",
  "numpy.subtract",
  "numpy.testing.dec.skipif",
  "numpy.testing.dec.slow",
  "numpy.true_divide",
  "numpy.uint",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uintp",
  "object.__getattribute__",
  "old_a2h",
  "old_afh",
  "op",
  "opener",
  "openers.HAVE_INDEXED_GZIP",
  "openers.ImageOpener",
  "openers.ImageOpener.compress_ext_map",
  "openers.ImageOpener.compress_ext_map.copy",
  "openers.ImageOpener.gz_def",
  "openers.IndexedGzipFile",
  "openers.Opener.__doc__",
  "openers.Opener.compress_ext_map",
  "openers.Opener.compress_ext_map.copy",
  "openers.Opener.gz_def",
  "opp",
  "orig_import",
  "os.__file__",
  "os.chdir",
  "os.environ.copy",
  "os.environ.get",
  "os.environ.keys",
  "os.environ.update",
  "os.getcwd",
  "os.getgid",
  "os.getuid",
  "os.listdir",
  "os.lstat",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.pathsep",
  "os.path.pathsep.join",
  "os.path.realpath",
  "os.path.sep.join",
  "os.path.split",
  "os.path.splitext",
  "os.stat",
  "os.unlink",
  "other_method",
  "out_meth",
  "parrec.PARRECArrayProxy",
  "parrec.PARRECHeader.from_fileobj",
  "parrec.PARRECImage",
  "parrec.PARRECImage.from_file_map",
  "parrec.PARRECImage.from_filename",
  "parrec.PARRECImage.load",
  "parrec.load",
  "parse_cifti2.Cifti2Extension",
  "parse_cifti2._Cifti2AsNiftiHeader.may_contain_header",
  "parse_cifti2._Cifti2AsNiftiImage.from_file_map",
  "pkg_chk_sta",
  "proc_ext",
  "pydicom_compat.pydicom.filebase.DicomFileLike",
  "pydicom_compat.pydicom.filereader.InvalidDicomError",
  "pydicom_compat.pydicom.filereader.read_dataset",
  "pydicom_compat.pydicom.filewriter.write_dataset",
  "pydicom_compat.pydicom.values.converters.keys",
  "pydicom_compat.read_file",
  "quaternions.angle_axis2mat",
  "quaternions.angle_axis2quat",
  "quaternions.conjugate",
  "quaternions.eye",
  "quaternions.fillpositive",
  "quaternions.inverse",
  "quaternions.isunit",
  "quaternions.mat2quat",
  "quaternions.mult",
  "quaternions.nearly_equivalent",
  "quaternions.norm",
  "quaternions.quat2angle_axis",
  "quaternions.quat2mat",
  "quaternions.rotate_vector",
  "r_class",
  "random_segments",
  "re.MULTILINE",
  "ref",
  "safe_get",
  "save",
  "sin",
  "six.moves.configparser",
  "six.moves.configparser.ConfigParser",
  "six.moves.configparser.Error",
  "six.moves.reduce",
  "six.moves.xrange",
  "six.moves.zip",
  "six.moves.zip_longest",
  "slope_type",
  "spatialimages.Header.from_header",
  "spatialimages.SpatialImage.__init__.__doc__",
  "spatialimages.supported_np_types.add",
  "spm2analyze.Spm2AnalyzeHeader.from_header",
  "spm2analyze.Spm2AnalyzeImage",
  "spm2analyze.Spm2AnalyzeImage.from_image",
  "spm2analyze.save",
  "spm99analyze.Spm99AnalyzeHeader",
  "spm99analyze.Spm99AnalyzeHeader.from_header",
  "spm99analyze.Spm99AnalyzeImage",
  "spm99analyze.Spm99AnalyzeImage.from_image",
  "spm99analyze.data_history_dtd",
  "spm99analyze.header_key_dtd",
  "spm99analyze.image_dimension_dtd",
  "spm99analyze.save",
  "sqlite3.connect",
  "st",
  "struct.Struct",
  "struct.pack",
  "struct.unpack",
  "subhdr_class",
  "sys",
  "sys.argv",
  "sys.byteorder",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.modules",
  "sys.platform",
  "sys.prefix",
  "sys.stderr.write",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.version",
  "sys.version_info",
  "t",
  "table2string",
  "tck.TckFile.EOF_DELIMITER.tostring",
  "tck.TckFile.FIBER_DELIMITER.tostring",
  "tck.TckFile._read",
  "tck.TckFile._read_header",
  "tck.TckFile.load",
  "tck.header",
  "tck.save",
  "tck.streamlines",
  "tck.tractogram",
  "tck.tractogram.streamlines",
  "test_analyze.TestAnalyzeHeader",
  "test_analyze.TestAnalyzeHeader.supported_np_types.union",
  "test_analyze.TestAnalyzeHeader.test_empty",
  "test_analyze.TestAnalyzeImage",
  "test_analyze.TestAnalyzeImage.test_big_offset_exts",
  "test_analyze.TestAnalyzeImage.test_data_hdr_cache",
  "test_analyze.TestAnalyzeImage.test_header_updating",
  "test_analyze.TestAnalyzeImage.test_offset_to_zero",
  "test_analyze.add_intp",
  "test_image_class",
  "test_minc1.TestMinc1Image",
  "test_minc1._TestMincFile",
  "test_spatialimages.MmapImageMixin",
  "test_spatialimages.TestSpatialImage",
  "test_spm99analyze.HeaderScalingMixin",
  "test_spm99analyze.ImageScalingMixin",
  "test_spm99analyze.TestSpm99AnalyzeHeader",
  "test_spm99analyze.TestSpm99AnalyzeImage",
  "tests.test_spatialimages.MmapImageMixin",
  "tests.test_spatialimages.TestSpatialImage",
  "time",
  "time.ctime",
  "time.shape",
  "time.sleep",
  "time.time",
  "time.units",
  "track_gen",
  "trackvis.DataError",
  "trackvis.HeaderError",
  "trackvis.TrackvisFile",
  "trackvis.TrackvisFile.from_file",
  "trackvis.TrackvisFileError",
  "trackvis._check_hdr_points_space",
  "trackvis.aff_from_hdr",
  "trackvis.aff_to_hdr",
  "trackvis.empty_header",
  "trackvis.endian_codes",
  "trackvis.native_code",
  "trackvis.read",
  "trackvis.write",
  "tractogram.LazyTractogram.from_data_func",
  "tractogram._affine_to_apply",
  "tractogram._data_per_point",
  "tractogram._data_per_streamline",
  "tractogram._nb_streamlines",
  "tractogram._streamlines",
  "tractogram.affine_to_rasmm",
  "tractogram.apply_affine",
  "tractogram.data_per_point",
  "tractogram.data_per_point.store",
  "tractogram.data_per_streamline",
  "tractogram.data_per_streamline.store",
  "tractogram.streamlines",
  "tractogram.to_world",
  "tractogram_file.TractogramFile.is_correct_format",
  "tractogram_file.TractogramFile.load",
  "tractogram_file_class",
  "trk.TrkFile",
  "trk.TrkFile._read_header",
  "trk.TrkFile.load",
  "trk.affine",
  "trk.header",
  "trk.header_2_dtype.newbyteorder",
  "trk.save",
  "trk.streamlines",
  "trk.tractogram",
  "trk.tractogram.streamlines",
  "type.__new__",
  "type.char",
  "type.itemsize",
  "type.newbyteorder",
  "uip",
  "util.array_index_order_codes.code",
  "util.array_index_order_codes.label",
  "util.array_index_order_codes.npcode",
  "util.gifti_encoding_codes.code",
  "util.gifti_encoding_codes.label",
  "util.gifti_encoding_codes.specs",
  "util.gifti_endian_codes.byteorder",
  "util.gifti_endian_codes.code",
  "util.gifti_endian_codes.specs",
  "validator",
  "vars.items",
  "viewers.OrthoSlicer3D.clim.fset",
  "viewers.OrthoSlicer3D.cmap.fset",
  "volumeutils.default_compresslevel",
  "wat",
  "working_type",
  "write",
  "write_return",
  "write_string",
  "wt",
  "xml.parsers.expat.ExpatError",
  "xml.parsers.expat.ParserCreate",
  "xmlutils.Element",
  "xmlutils.SubElement",
  "xmlutils.XmlParser",
  "xmlutils.XmlParser.__init__.__doc__",
  "xmlutils.XmlSerializable",
  "xmlutils.XmlSerializable.to_xml"
 ],
 "deps": {
  "AnalyzeImage": [],
  "ArrGiver": [],
  "BabyBio": [],
  "C": [],
  "CheckScaling": [],
  "ConfigParser": [],
  "D": [],
  "DC": [],
  "DataTag": [],
  "DimIdxSeqElem": [],
  "DistutilsRefactoringTool": [],
  "DummyTractogramFile": [],
  "E": [],
  "FORMATS": [],
  "Fake": [],
  "FakeData": [],
  "FakeData2": [],
  "FakeImage": [],
  "FunkyHeader2": [],
  "H": [],
  "H1": [],
  "H2": [],
  "H3": [],
  "H4": [],
  "H5": [],
  "H6": [],
  "H7": [],
  "HC": [],
  "IC": [],
  "LD": [],
  "MFW": [],
  "MakeTotalDestroy": [],
  "Minc1Image": [],
  "MincImage": [],
  "MyHdr": [],
  "MyHeader": [],
  "MyOpener": [],
  "NP": [],
  "Nifti1Image": [],
  "Nifti1Pair": [],
  "NoStringIO": [],
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "PerFrmFuncGrpSeqElem": [],
  "SAW": [],
  "SIAW": [],
  "StrictOpener": [],
  "StringIO": [],
  "TestObject": [],
  "__builtin__": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "__name__": [],
  "_apply_affine": [],
  "_check_gifti": [],
  "_check_hdr_points_space": [],
  "_chk_trunc": [],
  "_data_gen": [],
  "_db_nochange": [],
  "_err_or_warn": [],
  "_ftype4scaled_finite": [],
  "_gen": [],
  "_gen_data": [],
  "_gen_straight_streamline": [],
  "_h5py_compat": [],
  "_print_me": [],
  "_rt": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "analyze": [],
  "ap": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "array_sequence": [],
  "arraywriters": [],
  "assert_array_equal_": [],
  "assert_copy_ok": [],
  "assert_rt": [],
  "assert_set_dtype": [],
  "atype": [],
  "awt": [],
  "base64": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "big_floater": [],
  "brikhead": [],
  "builtins": [],
  "bytes": [],
  "bz2": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bz2file": [
   "bz2file/conda-forge/noarch/bz2file-0.98-py_0"
  ],
  "casting": [],
  "check": [],
  "check_against": [],
  "check_img": [],
  "check_version": [],
  "checkwarns": [],
  "cifti2": [],
  "cifti2_axes": [],
  "cls": [],
  "cmp": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "constructor": [
   "constructor/conda-forge/linux-64/constructor-1.3.4-py35_0"
  ],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "converter": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cos": [],
  "csareader": [],
  "csv": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "d1": [],
  "data": [],
  "data_func": [],
  "dec": [],
  "dec_func": [],
  "decimal": [],
  "dft": [],
  "dicom": [],
  "dicomreaders": [],
  "dicomwrappers": [],
  "display_diff": [],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dtype": [],
  "dwiparams": [],
  "dxer": [],
  "ecat": [],
  "endswith": [],
  "environment": [],
  "errno": [],
  "error_class": [],
  "eulerangles": [],
  "f": [],
  "f32": [],
  "f64": [],
  "filter": [],
  "fix_sliceobj": [],
  "fmt_sliceobj": [],
  "format": [],
  "frombytes": [],
  "ft": [],
  "func": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "fuse": [
   "fusepy/conda-forge/noarch/fusepy-2.0.4-py_0"
  ],
  "gc": [],
  "gda": [],
  "gen_old_annot_file": [],
  "get_data_diff": [],
  "get_data_func": [],
  "get_data_hash_diff": [],
  "get_expected": [],
  "get_headers_diff": [],
  "get_test_label": [],
  "getpass": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gifti": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "gzip": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "hdr_class": [],
  "hdr_klass": [],
  "header": [],
  "ie3": [],
  "image_maker": [],
  "imageglobals": [],
  "img_class": [],
  "img_klass": [],
  "in_meth": [],
  "in_type": [],
  "indexed_gzip": [
   "indexed_gzip/conda-forge/linux-64/indexed_gzip-1.3.0-py36hfaf6566_0"
  ],
  "inklass": [],
  "input": [],
  "int_ceex": [],
  "int_flex": [],
  "inter_type": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "islock": [],
  "itertools": [],
  "itp": [],
  "klass": [],
  "kw_func": [],
  "lib2to3": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "link": [],
  "loadsave": [],
  "locale": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "long": [],
  "lower_t": [],
  "main": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "make_array": [],
  "make_dist": [],
  "make_imaker": [],
  "make_prox_imaker": [],
  "make_test": [],
  "maker": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "memory_profiler": [
   "memory_profiler/conda-forge/noarch/memory_profiler-0.54.0-py_0"
  ],
  "method": [],
  "mghformat": [],
  "minc": [],
  "minc1": [],
  "minc2": [],
  "mmap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mock": [
   "mock/conda-forge/linux-64/mock-4.0.3-py37h9c2f6ca_1"
  ],
  "my_table": [],
  "netcdf_variable": [],
  "nibabel": [],
  "nibabel_data": [],
  "nifti1": [],
  "nifti2": [],
  "nose": [
   "nose/conda-forge/noarch/nose-1.3.7-py_1006"
  ],
  "np_type": [],
  "npa": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object": [],
  "old_a2h": [],
  "old_afh": [],
  "op": [],
  "opener": [],
  "openers": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "opp": [],
  "optparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "orig_import": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "other_method": [],
  "out_meth": [],
  "parrec": [],
  "parse_cifti2": [],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pkg_chk_sta": [],
  "pkgutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "proc_ext": [],
  "pydicom": [
   "pydicom/conda-forge/noarch/pydicom-1.0.1-py_1"
  ],
  "pydicom_compat": [],
  "quaternions": [],
  "r_class": [],
  "random_segments": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ref": [],
  "resource": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "safe_get": [],
  "save": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200",
   "scipy/conda-forge/linux-64/scipy-0.19.0-np112py36_blas_openblas_201"
  ],
  "setup": [
   "climatecontrol/conda-forge/noarch/climatecontrol-0.10.0-pyhd8ed1ab_0",
   "pycalverter/conda-forge/noarch/pycalverter-1.6.1-py_0"
  ],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sin": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "lldb/conda-forge/linux-64/lldb-5.0.0-py36_0",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "slope_type": [],
  "spatialimages": [],
  "spm2analyze": [],
  "spm99analyze": [],
  "sqlite3": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "st": [],
  "stat": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subhdr_class": [],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sys": [],
  "t": [],
  "table2string": [],
  "tck": [],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "test_analyze": [],
  "test_image_class": [],
  "test_minc1": [],
  "test_spatialimages": [],
  "test_spm99analyze": [],
  "tests": [],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "timeit": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "track_gen": [],
  "trackvis": [],
  "tractogram": [],
  "tractogram_file": [],
  "tractogram_file_class": [],
  "trk": [],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "uip": [],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "util": [],
  "validator": [],
  "vars": [],
  "viewers": [],
  "volumeutils": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "wat": [],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "working_type": [],
  "write": [],
  "write_return": [],
  "write_string": [],
  "wt": [],
  "xml": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "xmlutils": [],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "zlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}