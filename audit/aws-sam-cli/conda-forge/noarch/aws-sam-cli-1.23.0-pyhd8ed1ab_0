{
 "bad": [
  "DockerImagePullFailedException",
  "Metric",
  "Transformer",
  "_construct_cli_page",
  "_fetch_available_registries",
  "_fetch_available_schemas",
  "_get_build_dir",
  "_get_metric",
  "_key",
  "_parse_key_value_pair",
  "_resolve_relative_to",
  "_run_given_tasks_async",
  "abc.ABC",
  "abc.abstractmethod",
  "add_metric_data",
  "add_metric_list_data",
  "add_options_to_route",
  "argparse.ArgumentParser",
  "asyncio",
  "asyncio.gather",
  "asyncio.get_event_loop",
  "asyncio.new_event_loop",
  "atexit",
  "atexit.register",
  "attribute_resolver",
  "base64",
  "base64.b64decode",
  "base64.b64encode",
  "calculate_checksum",
  "collections.OrderedDict",
  "collections.abc",
  "collections.abc.Mapping",
  "collections.defaultdict",
  "collections.namedtuple",
  "composed_decorator",
  "concurrent.futures.thread.ThreadPoolExecutor",
  "contextlib",
  "contextlib.closing",
  "contextlib.contextmanager",
  "cookiecutter.config",
  "cookiecutter.config.BUILTIN_ABBREVIATIONS",
  "cookiecutter.exceptions",
  "cookiecutter.exceptions.CookiecutterException",
  "cookiecutter.exceptions.RepositoryNotFound",
  "cookiecutter.exceptions.UnknownRepoType",
  "cookiecutter.main.cookiecutter",
  "cookiecutter.repository",
  "cookiecutter.repository.clone",
  "cookiecutter.repository.expand_abbreviations",
  "cookiecutter.repository.is_repo_url",
  "cookiecutter.repository.is_zip_file",
  "cookiecutter.repository.unzip",
  "copy",
  "copy.deepcopy",
  "datetime",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.utcfromtimestamp",
  "datetime.datetime.utcnow",
  "datetime.timedelta",
  "datetime.timezone.utc",
  "deco",
  "docker",
  "docker.DockerClient",
  "docker.errors",
  "docker.errors.APIError",
  "docker.errors.BuildError",
  "docker.errors.ImageNotFound",
  "docker.errors.NotFound",
  "docker.errors.NullResource",
  "docker.from_env",
  "docker.types.CancellableStream",
  "duration_fn",
  "enum.Enum",
  "enum.auto",
  "env_var_or_callable",
  "errno",
  "errno.ENOENT",
  "exc_raise",
  "exporter_class",
  "exporter_class.ARTIFACT_TYPE",
  "exporter_class.RESOURCE_TYPE",
  "func",
  "functools",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "get_full_path",
  "hashlib",
  "hashlib.md5",
  "hashlib.sha256",
  "importlib",
  "importlib.import_module",
  "io",
  "io.BytesIO",
  "itertools",
  "itertools.chain",
  "itertools.count",
  "itertools.zip_longest",
  "json",
  "json.JSONDecodeError",
  "json.dumps",
  "json.load",
  "json.loads",
  "klass",
  "lambda_error_responses.LambdaErrorResponses.generic_method_not_allowed",
  "lambda_error_responses.LambdaErrorResponses.generic_path_not_found",
  "lambda_error_responses.LambdaErrorResponses.generic_service_exception",
  "lambda_error_responses.LambdaErrorResponses.invalid_request_content",
  "lambda_error_responses.LambdaErrorResponses.not_implemented_locally",
  "lambda_error_responses.LambdaErrorResponses.resource_not_found",
  "lambda_image.Runtime.go1x.value",
  "lib.exceptions.InvalidSamDocumentException",
  "lib.sam_template_validator.SamTemplateValidator",
  "logging",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.INFO",
  "logging.NullHandler",
  "logging.StreamHandler",
  "logging.basicConfig",
  "logging.getLogger",
  "logging.root",
  "logging.root.handlers",
  "logs_context.LogsCommandContext",
  "math",
  "math.pow",
  "option",
  "os",
  "os.chmod",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.getenv",
  "os.linesep.encode",
  "os.listdir",
  "os.makedirs",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.lexists",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.path.sep",
  "os.remove",
  "os.symlink",
  "os.walk",
  "path_converter.PathConverter.convert_path_to_api_gateway",
  "path_converter.PathConverter.convert_path_to_flask",
  "pathlib",
  "pathlib.Path",
  "pathlib.Path.cwd",
  "pathlib.PurePath",
  "pathlib.PureWindowsPath",
  "platform",
  "platform.python_version",
  "platform.system",
  "posixpath",
  "posixpath.join",
  "posixpath.sep",
  "pywintypes",
  "pywintypes.error",
  "question.QuestionFactory.create_question_from_json",
  "random",
  "random.randrange",
  "re",
  "re.compile",
  "re.findall",
  "re.match",
  "re.search",
  "re.sub",
  "resolve_sub_attribute",
  "resolver",
  "sam_base_provider.SamBaseProvider.CODE_PROPERTY_KEYS",
  "sam_base_provider.SamBaseProvider.LAMBDA_LAYER",
  "sam_base_provider.SamBaseProvider.SERVERLESS_LAYER",
  "sam_base_provider.SamBaseProvider._extract_codeuri",
  "sam_base_provider.SamBaseProvider._is_s3_location",
  "sam_base_provider.SamBaseProvider._warn_code_extraction",
  "sam_stack_provider.SamLocalStackProvider.normalize_resource_path",
  "samcli.cli.main.global_cfg.config_dir",
  "samcli.commands.init.__init__.HELP_TEXT",
  "samcli.commands.init.__init__.LOG",
  "samcli.commands.init.__init__.PackageType",
  "samcli.commands.init.__init__._deprecate_notification",
  "samcli.commands.init.__init__._get_cookiecutter_template_context",
  "samcli.commands.init.__init__.do_cli",
  "samcli.commands.init.__init__.non_interactive_validation",
  "samcli.commands.local.cli_common.invoke_context.ContainersInitializationMode.__members__",
  "samcli.commands.local.lib.swagger.integration_uri.IntegrationType.aws_proxy.value",
  "samcli.lib.init.__init__.GenerateProjectFailedError",
  "samcli.lib.init.__init__.InvalidLocationError",
  "samcli.lib.init.__init__.LOG",
  "samcli.lib.init.__init__.generate_non_cookiecutter_project",
  "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF",
  "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.DEFAULT_PSEUDO_PARAM_VALUES",
  "samcli.lib.package.packageable_resources.ResourceZip.EXPORT_DESTINATION",
  "samcli.lib.package.stream_cursor_utils.cursor_left.encode",
  "samcli.lib.package.uploaders.Destination.ECR",
  "samcli.lib.package.uploaders.Destination.S3",
  "samcli.lib.providers.cfn_api_provider.CfnApiProvider.TYPES",
  "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE",
  "samcli.lib.providers.sam_api_provider.SamApiProvider.TYPES",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.CLOUDFORMATION_STACK",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_FUNCTION",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_LAYER",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_APPLICATION",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_FUNCTION",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_LAYER",
  "samcli.lib.warnings.sam_cli_warning.CodeDeployConditionWarning.__name__",
  "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning.__name__",
  "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS",
  "samcli.local.apigw.local_apigw_service.Route.API",
  "samcli.local.apigw.local_apigw_service.Route.HTTP",
  "samcli.local.common.runtime_template.RUNTIMES",
  "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values",
  "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS.get",
  "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING.get",
  "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS",
  "samcli.local.docker.lambda_image.Runtime.dotnetcore21.value",
  "samcli.local.docker.lambda_image.Runtime.dotnetcore31.value",
  "samcli.local.docker.lambda_image.Runtime.go1x.value",
  "samcli.local.docker.lambda_image.Runtime.java11.value",
  "samcli.local.docker.lambda_image.Runtime.java8.value",
  "samcli.local.docker.lambda_image.Runtime.java8al2.value",
  "samcli.local.docker.lambda_image.Runtime.nodejs10x.value",
  "samcli.local.docker.lambda_image.Runtime.nodejs12x.value",
  "samcli.local.docker.lambda_image.Runtime.nodejs14x.value",
  "samcli.local.docker.lambda_image.Runtime.python27.value",
  "samcli.local.docker.lambda_image.Runtime.python36.value",
  "samcli.local.docker.lambda_image.Runtime.python37.value",
  "samcli.local.docker.lambda_image.Runtime.python38.value",
  "samtranslator.plugins.LifeCycleEvents.before_transform_template",
  "samtranslator.translator.arn_generator.NoRegionFound",
  "serverlessrepo.exceptions.InvalidS3UriError",
  "serverlessrepo.exceptions.ServerlessRepoError",
  "serverlessrepo.parser.METADATA",
  "serverlessrepo.parser.SERVERLESS_REPO_APPLICATION",
  "serverlessrepo.publish.CREATE_APPLICATION",
  "serverlessrepo.publish_application",
  "service_error_responses.ServiceErrorResponses.lambda_failure_response",
  "service_error_responses.ServiceErrorResponses.lambda_not_found_response",
  "service_error_responses.ServiceErrorResponses.route_not_found",
  "shutil",
  "shutil.Error",
  "shutil.copy2",
  "shutil.copyfile",
  "shutil.copystat",
  "shutil.copytree",
  "shutil.ignore_patterns",
  "shutil.rmtree",
  "signal",
  "signal.SIGTERM",
  "signal.signal",
  "socket",
  "socket.socket",
  "start_lambda.cli.cli.add_command",
  "stat",
  "stat.S_IWRITE",
  "str.encode",
  "str.format",
  "subprocess",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.check_output",
  "sys",
  "sys.stderr",
  "sys.stderr.buffer",
  "sys.stderr.flush",
  "sys.stderr.write",
  "sys.stdout.buffer",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version_info.major",
  "tarfile",
  "tarfile.open",
  "tempfile",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "template_click_option",
  "textwrap",
  "textwrap.indent",
  "textwrap.wrap",
  "threading",
  "threading.Lock",
  "threading.Thread",
  "threading.Timer",
  "time",
  "time.sleep",
  "time.time",
  "timeit.default_timer",
  "tomlkit",
  "tomlkit.comment",
  "tomlkit.document",
  "tomlkit.dumps",
  "tomlkit.exceptions.KeyAlreadyPresent",
  "tomlkit.exceptions.TOMLKitError",
  "tomlkit.items.Table",
  "tomlkit.loads",
  "tomlkit.table",
  "typing.Any",
  "typing.Callable",
  "typing.Dict",
  "typing.IO",
  "typing.Iterable",
  "typing.Iterator",
  "typing.List",
  "typing.Mapping",
  "typing.NamedTuple",
  "typing.Optional",
  "typing.Set",
  "typing.Sized",
  "typing.TYPE_CHECKING",
  "typing.Tuple",
  "typing.Type",
  "typing.Union",
  "typing.cast",
  "urllib.parse.parse_qs",
  "urllib.parse.quote",
  "urllib.parse.unquote",
  "urllib.parse.urlparse",
  "uuid",
  "uuid.uuid4",
  "verify_intrinsic_type",
  "warnings",
  "warnings.catch_warnings",
  "warnings.simplefilter",
  "watchdog.events.FileSystemEvent",
  "watchdog.events.FileSystemEventHandler",
  "watchdog.events.PatternMatchingEventHandler",
  "watchdog.observers.Observer",
  "watchdog.observers.api.BaseObserver",
  "watchdog.observers.api.ObservedWatch",
  "yaml.SafeLoader.add_constructor",
  "yaml.SafeLoader.add_multi_constructor",
  "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
  "zipfile",
  "zipfile.ZIP_DEFLATED",
  "zipfile.ZipFile",
  "zipfile.ZipInfo",
  "zipfile.is_zipfile"
 ],
 "deps": {
  "DockerImagePullFailedException": [],
  "Metric": [],
  "Transformer": [],
  "_construct_cli_page": [],
  "_fetch_available_registries": [],
  "_fetch_available_schemas": [],
  "_get_build_dir": [],
  "_get_metric": [],
  "_key": [],
  "_parse_key_value_pair": [],
  "_resolve_relative_to": [],
  "_run_given_tasks_async": [],
  "abc": [],
  "add_metric_data": [],
  "add_metric_list_data": [],
  "add_options_to_route": [],
  "argparse": [],
  "asyncio": [],
  "atexit": [],
  "attribute_resolver": [],
  "aws_lambda_builders": [
   "aws_lambda_builders/conda-forge/noarch/aws_lambda_builders-1.2.0-pyhd8ed1ab_0"
  ],
  "base64": [],
  "boto3": [
   "boto3/conda-forge/noarch/boto3-1.13.1-pyh9f0ad1d_0"
  ],
  "botocore": [
   "botocore/conda-forge/noarch/botocore-1.10.82-py_0"
  ],
  "calculate_checksum": [],
  "chevron": [
   "chevron/conda-forge/noarch/chevron-0.14.0-pyhd3deb0d_1"
  ],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "collections": [],
  "composed_decorator": [],
  "concurrent": [],
  "contextlib": [],
  "cookiecutter": [],
  "copy": [],
  "dateparser": [
   "dateparser/conda-forge/noarch/dateparser-0.7.0-py_0"
  ],
  "datetime": [],
  "deco": [],
  "docker": [],
  "duration_fn": [],
  "enum": [],
  "env_var_or_callable": [],
  "errno": [],
  "exc_raise": [],
  "exporter_class": [],
  "flask": [
   "flask/conda-forge/noarch/flask-2.0.0-pyhd8ed1ab_0"
  ],
  "func": [],
  "functools": [],
  "get_full_path": [],
  "hashlib": [],
  "importlib": [],
  "io": [],
  "itertools": [],
  "jmespath": [
   "jmespath/conda-forge/noarch/jmespath-0.9.5-py_0"
  ],
  "json": [],
  "klass": [],
  "lambda_error_responses": [],
  "lambda_image": [],
  "lib": [],
  "logging": [],
  "logs_context": [],
  "math": [],
  "option": [],
  "os": [],
  "path_converter": [],
  "pathlib": [],
  "platform": [],
  "posixpath": [],
  "pywintypes": [],
  "question": [],
  "random": [],
  "re": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "resolve_sub_attribute": [],
  "resolver": [],
  "sam_base_provider": [],
  "sam_stack_provider": [],
  "samcli": [],
  "samtranslator": [
   "aws-sam-translator/conda-forge/noarch/aws-sam-translator-1.13.1-py_0"
  ],
  "serverlessrepo": [],
  "service_error_responses": [],
  "shutil": [],
  "signal": [],
  "socket": [],
  "start_lambda": [],
  "stat": [],
  "str": [],
  "subprocess": [],
  "sys": [],
  "tarfile": [],
  "tempfile": [],
  "template_click_option": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "timeit": [],
  "tomlkit": [],
  "typing": [],
  "urllib": [],
  "uuid": [],
  "verify_intrinsic_type": [],
  "warnings": [],
  "watchdog": [],
  "werkzeug": [
   "werkzeug/conda-forge/noarch/werkzeug-1.0.0-py_0"
  ],
  "yaml": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1"
  ],
  "zipfile": []
 }
}