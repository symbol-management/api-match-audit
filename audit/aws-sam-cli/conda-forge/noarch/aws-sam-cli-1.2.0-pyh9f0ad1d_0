{
 "bad": [
  "Exception.__init__",
  "_key",
  "add_options_to_route",
  "arbitrary_project.generate_non_cookiecutter_project",
  "attribute_resolver",
  "aws_lambda_builders.RPC_PROTOCOL_VERSION",
  "aws_lambda_builders.builder.LambdaBuilder",
  "aws_lambda_builders.exceptions.LambdaBuilderError",
  "base64.b64decode",
  "base64.b64encode",
  "boto3.Session",
  "boto3.client",
  "boto3.s3.transfer.TransferConfig",
  "boto3.s3.transfer.create_transfer_manager",
  "boto3.session.Session",
  "boto3.setup_default_session",
  "botocore.compat.OrderedDict",
  "botocore.config.Config",
  "botocore.credentials.JSONFileCache",
  "botocore.exceptions.BotoCoreError",
  "botocore.exceptions.ClientError",
  "botocore.exceptions.EndpointConnectionError",
  "botocore.exceptions.NoCredentialsError",
  "botocore.exceptions.NoRegionError",
  "botocore.exceptions.ProfileNotFound",
  "botocore.exceptions.WaiterError",
  "botocore.session.get_session",
  "botocore.utils.set_value_from_jmespath",
  "build_method",
  "builtins.map",
  "chevron.renderer.render",
  "click.BadOptionUsage",
  "click.Choice",
  "click.ClickException",
  "click.ClickException.__init__",
  "click.Command",
  "click.INT",
  "click.MultiCommand",
  "click.Option",
  "click.ParamType",
  "click.Path",
  "click.STRING",
  "click.UsageError",
  "click.argument",
  "click.command",
  "click.confirm",
  "click.echo",
  "click.get_app_dir",
  "click.get_current_context",
  "click.get_terminal_size",
  "click.group",
  "click.make_pass_decorator",
  "click.open_file",
  "click.option",
  "click.progressbar",
  "click.prompt",
  "click.secho",
  "click.style",
  "click.types.FuncParamType",
  "click.version_option",
  "collections.OrderedDict",
  "collections.abc.Mapping",
  "collections.defaultdict",
  "collections.namedtuple",
  "command.BaseCommand",
  "container.Container",
  "context.Context",
  "contextlib.closing",
  "contextlib.contextmanager",
  "cookiecutter.config.BUILTIN_ABBREVIATIONS",
  "cookiecutter.exceptions.CookiecutterException",
  "cookiecutter.exceptions.RepositoryNotFound",
  "cookiecutter.main.cookiecutter",
  "cookiecutter.repository.clone",
  "cookiecutter.repository.expand_abbreviations",
  "cookiecutter.repository.is_repo_url",
  "cookiecutter.repository.is_zip_file",
  "cookiecutter.repository.unzip",
  "copy.deepcopy",
  "dateparser.parse",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.utcfromtimestamp",
  "datetime.datetime.utcnow",
  "dateutil.tz.tzutc",
  "docker.errors.APIError",
  "docker.errors.BuildError",
  "docker.errors.ImageNotFound",
  "docker.errors.NotFound",
  "docker.from_env",
  "duration_fn",
  "enum.Enum",
  "env_vars.EnvironmentVariables",
  "errno.ENOENT",
  "event.LogEvent",
  "events",
  "events.add",
  "exceptions.ArbitraryProjectDownloadFailed",
  "exceptions.GenerateProjectFailedError",
  "exceptions.InvalidSamDocumentException",
  "exporter_class",
  "exporter_class.RESOURCE_TYPE",
  "flask.Flask",
  "flask.Response",
  "flask.jsonify",
  "flask.make_response",
  "flask.request",
  "func",
  "functools.partial",
  "functools.reduce",
  "functools.wraps",
  "generate_event.cli.cli",
  "global_config.GlobalConfig",
  "hashlib.md5",
  "hashlib.sha256",
  "hello_world.app.lambda_handler",
  "importlib.import_module",
  "invoke.cli.cli",
  "io.BytesIO",
  "itertools.chain",
  "itertools.count",
  "itertools.zip_longest",
  "jmespath.search",
  "json.JSONDecodeError",
  "json.dumps",
  "json.load",
  "json.loads",
  "lambda_error_responses.LambdaErrorResponses.generic_method_not_allowed",
  "lambda_error_responses.LambdaErrorResponses.generic_path_not_found",
  "lambda_error_responses.LambdaErrorResponses.generic_service_exception",
  "lambda_error_responses.LambdaErrorResponses.invalid_request_content",
  "lambda_error_responses.LambdaErrorResponses.not_implemented_locally",
  "lambda_error_responses.LambdaErrorResponses.resource_not_found",
  "lambda_image.Runtime.go1x.value",
  "lambda_image.Runtime.has_value",
  "lib.exceptions.InvalidSamDocumentException",
  "lib.sam_template_validator.SamTemplateValidator",
  "local_uri_plugin.SupportLocalUriPlugin",
  "logging.DEBUG",
  "logging.Formatter",
  "logging.INFO",
  "logging.NullHandler",
  "logging.StreamHandler",
  "logging.basicConfig",
  "logging.getLogger",
  "logs_context.LogsCommandContext",
  "math.pow",
  "option",
  "options.debug_option",
  "options.profile_option",
  "options.region_option",
  "os.chdir",
  "os.chmod",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.getenv",
  "os.listdir",
  "os.makedirs",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.getsize",
  "os.path.isabs",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.islink",
  "os.path.join",
  "os.path.lexists",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.relpath",
  "os.remove",
  "os.symlink",
  "os.walk",
  "path_converter.PathConverter.convert_path_to_api_gateway",
  "path_converter.PathConverter.convert_path_to_flask",
  "pathlib.Path",
  "pathlib.Path.cwd",
  "pathlib.PurePath",
  "pathlib.PureWindowsPath",
  "platform.python_version",
  "platform.system",
  "posixpath.sep",
  "provider.Function",
  "provider.LayerVersion",
  "pytest.fixture",
  "re.compile",
  "re.findall",
  "re.match",
  "re.search",
  "re.sub",
  "requests.exceptions.ConnectionError",
  "requests.exceptions.Timeout",
  "requests.get",
  "requests.post",
  "requests.utils.quote",
  "resolve_sub_attribute",
  "resolver",
  "sam_base_provider.SamBaseProvider",
  "samcli.__version__",
  "samcli.cli.cli_config_file.LOG",
  "samcli.cli.cli_config_file.TomlProvider",
  "samcli.cli.cli_config_file.configuration_callback",
  "samcli.cli.cli_config_file.configuration_option",
  "samcli.cli.cli_config_file.get_ctx_defaults",
  "samcli.cli.command.BaseCommand",
  "samcli.cli.command._SAM_CLI_COMMAND_PACKAGES",
  "samcli.cli.command.logger",
  "samcli.cli.context.Context",
  "samcli.cli.context.Context.get_current_context",
  "samcli.cli.context.get_cmd_names",
  "samcli.cli.global_config.CONFIG_FILENAME",
  "samcli.cli.global_config.GlobalConfig",
  "samcli.cli.global_config.INSTALLATION_ID_KEY",
  "samcli.cli.global_config.LOG",
  "samcli.cli.main.LOG",
  "samcli.cli.main.TELEMETRY_PROMPT",
  "samcli.cli.main.aws_creds_options",
  "samcli.cli.main.cli",
  "samcli.cli.main.common_options",
  "samcli.cli.main.global_cfg",
  "samcli.cli.main.global_cfg.config_dir",
  "samcli.cli.main.pass_context",
  "samcli.cli.main.print_info",
  "samcli.cli.options.debug_option",
  "samcli.cli.types.CfnMetadataType",
  "samcli.cli.types.CfnParameterOverridesType",
  "samcli.cli.types.CfnTags",
  "samcli.cli.types.PARAM_AND_METADATA_KEY_REGEX",
  "samcli.cli.types._generate_match_regex",
  "samcli.cli.types._unquote_wrapped_quotes",
  "samcli.commands._utils.custom_options.option_nargs.OptionNargs",
  "samcli.commands._utils.options.DEFAULT_STACK_NAME",
  "samcli.commands._utils.options.LOG",
  "samcli.commands._utils.options._TEMPLATE_OPTION_DEFAULT_VALUE",
  "samcli.commands._utils.options._space_separated_list_func_type",
  "samcli.commands._utils.options.capabilities_click_option",
  "samcli.commands._utils.options.capabilities_override_option",
  "samcli.commands._utils.options.docker_click_options",
  "samcli.commands._utils.options.docker_common_options",
  "samcli.commands._utils.options.get_or_default_template_file_name",
  "samcli.commands._utils.options.guided_deploy_stack_name",
  "samcli.commands._utils.options.metadata_click_option",
  "samcli.commands._utils.options.metadata_override_option",
  "samcli.commands._utils.options.notification_arns_click_option",
  "samcli.commands._utils.options.notification_arns_override_option",
  "samcli.commands._utils.options.parameter_override_click_option",
  "samcli.commands._utils.options.parameter_override_option",
  "samcli.commands._utils.options.tags_click_option",
  "samcli.commands._utils.options.tags_override_option",
  "samcli.commands._utils.options.template_click_option",
  "samcli.commands._utils.options.template_common_option",
  "samcli.commands._utils.options.template_option_without_build",
  "samcli.commands._utils.resources.AWS_APIGATEWAY_RESTAPI",
  "samcli.commands._utils.resources.AWS_APPSYNC_FUNCTIONCONFIGURATION",
  "samcli.commands._utils.resources.AWS_APPSYNC_GRAPHQLSCHEMA",
  "samcli.commands._utils.resources.AWS_APPSYNC_RESOLVER",
  "samcli.commands._utils.resources.AWS_CLOUDFORMATION_STACK",
  "samcli.commands._utils.resources.AWS_ELASTICBEANSTALK_APPLICATIONVERSION",
  "samcli.commands._utils.resources.AWS_GLUE_JOB",
  "samcli.commands._utils.resources.AWS_LAMBDA_FUNCTION",
  "samcli.commands._utils.resources.AWS_LAMBDA_LAYERVERSION",
  "samcli.commands._utils.resources.AWS_SERVERLESSREPO_APPLICATION",
  "samcli.commands._utils.resources.AWS_SERVERLESS_API",
  "samcli.commands._utils.resources.AWS_SERVERLESS_APPLICATION",
  "samcli.commands._utils.resources.AWS_SERVERLESS_FUNCTION",
  "samcli.commands._utils.resources.AWS_SERVERLESS_HTTPAPI",
  "samcli.commands._utils.resources.AWS_SERVERLESS_LAYERVERSION",
  "samcli.commands._utils.resources.AWS_SERVERLESS_STATEMACHINE",
  "samcli.commands._utils.resources.AWS_STEPFUNCTIONS_STATEMACHINE",
  "samcli.commands._utils.resources.METADATA_WITH_LOCAL_PATHS",
  "samcli.commands._utils.resources.RESOURCES_WITH_LOCAL_PATHS",
  "samcli.commands._utils.resources.resources_generator",
  "samcli.commands._utils.table_print.MIN_OFFSET",
  "samcli.commands._utils.table_print.newline_per_item",
  "samcli.commands._utils.table_print.pprint_column_names",
  "samcli.commands._utils.table_print.pprint_columns",
  "samcli.commands._utils.table_print.wrapped_text_generator",
  "samcli.commands._utils.template.METADATA_WITH_LOCAL_PATHS",
  "samcli.commands._utils.template.RESOURCES_WITH_LOCAL_PATHS",
  "samcli.commands._utils.template.TemplateFailedParsingException",
  "samcli.commands._utils.template.TemplateNotFoundException",
  "samcli.commands._utils.template._resolve_relative_to",
  "samcli.commands._utils.template._update_aws_include_relative_path",
  "samcli.commands._utils.template._update_relative_paths",
  "samcli.commands._utils.template.get_template_data",
  "samcli.commands._utils.template.get_template_parameters",
  "samcli.commands._utils.template.move_template",
  "samcli.commands.bootstrap.command.HELP_TEXT",
  "samcli.commands.bootstrap.command.SHORT_HELP",
  "samcli.commands.bootstrap.command.do_cli",
  "samcli.commands.bootstrap.exceptions.ManagedStackError",
  "samcli.commands.build.build_context.BuildContext",
  "samcli.commands.build.build_context.LOG",
  "samcli.commands.build.command.DEFAULT_BUILD_DIR",
  "samcli.commands.build.command.HELP_TEXT",
  "samcli.commands.build.command.LOG",
  "samcli.commands.build.command._get_mode_value_from_envvar",
  "samcli.commands.build.command.do_cli",
  "samcli.commands.build.command.gen_success_msg",
  "samcli.commands.build.exceptions.InvalidBuildDirException",
  "samcli.commands.build.exceptions.MissingBuildMethodException",
  "samcli.commands.deploy.auth_utils.LOG",
  "samcli.commands.deploy.auth_utils._auth_definition_body_and_uri",
  "samcli.commands.deploy.auth_utils._auth_id",
  "samcli.commands.deploy.auth_utils._auth_resource_event",
  "samcli.commands.deploy.auth_utils.auth_per_resource",
  "samcli.commands.deploy.command.CONFIG_SECTION",
  "samcli.commands.deploy.command.HELP_TEXT",
  "samcli.commands.deploy.command.SHORT_HELP",
  "samcli.commands.deploy.command.do_cli",
  "samcli.commands.deploy.deploy_context.DeployContext",
  "samcli.commands.deploy.exceptions.ChangeEmptyError",
  "samcli.commands.deploy.exceptions.ChangeSetError",
  "samcli.commands.deploy.exceptions.DeployBucketInDifferentRegionError",
  "samcli.commands.deploy.exceptions.DeployBucketRequiredError",
  "samcli.commands.deploy.exceptions.DeployFailedError",
  "samcli.commands.deploy.exceptions.DeployResolveS3AndS3SetError",
  "samcli.commands.deploy.exceptions.DeployStackOutPutFailedError",
  "samcli.commands.deploy.exceptions.GuidedDeployFailedError",
  "samcli.commands.deploy.guided_config.GuidedConfig",
  "samcli.commands.deploy.guided_context.GuidedContext",
  "samcli.commands.deploy.guided_context.LOG",
  "samcli.commands.deploy.utils.print_deploy_args",
  "samcli.commands.deploy.utils.sanitize_parameter_overrides",
  "samcli.commands.exceptions.AppTemplateUpdateException",
  "samcli.commands.exceptions.ConfigException",
  "samcli.commands.exceptions.CredentialsError",
  "samcli.commands.exceptions.RegionError",
  "samcli.commands.exceptions.SchemasApiException",
  "samcli.commands.exceptions.UserException",
  "samcli.commands.init.HELP_TEXT",
  "samcli.commands.init.LOG",
  "samcli.commands.init._deprecate_notification",
  "samcli.commands.init._get_cookiecutter_template_context",
  "samcli.commands.init.do_cli",
  "samcli.commands.init.init_generator.do_generate",
  "samcli.commands.init.init_templates.InitTemplates",
  "samcli.commands.init.init_templates.InvalidInitTemplateError",
  "samcli.commands.init.init_templates.LOG",
  "samcli.commands.init.interactive_event_bridge_flow._construct_cli_page",
  "samcli.commands.init.interactive_event_bridge_flow._fetch_available_registries",
  "samcli.commands.init.interactive_event_bridge_flow._fetch_available_schemas",
  "samcli.commands.init.interactive_event_bridge_flow._get_registry_cli_choice",
  "samcli.commands.init.interactive_event_bridge_flow._get_schema_cli_choice",
  "samcli.commands.init.interactive_event_bridge_flow._prompt_for_registry_choice",
  "samcli.commands.init.interactive_event_bridge_flow._prompt_for_schemas_choice",
  "samcli.commands.init.interactive_event_bridge_flow.get_schema_template_details",
  "samcli.commands.init.interactive_event_bridge_flow.get_schemas_api_caller",
  "samcli.commands.init.interactive_event_bridge_flow.get_schemas_template_parameter",
  "samcli.commands.init.interactive_init_flow._generate_from_app_template",
  "samcli.commands.init.interactive_init_flow._generate_from_location",
  "samcli.commands.init.interactive_init_flow._get_dependency_manager",
  "samcli.commands.init.interactive_init_flow._get_runtime",
  "samcli.commands.init.interactive_init_flow._get_schema_template_details",
  "samcli.commands.init.interactive_init_flow._package_schemas_code",
  "samcli.commands.init.interactive_init_flow.do_interactive",
  "samcli.commands.local.cli_common.invoke_context.InvokeContext",
  "samcli.commands.local.cli_common.options.get_application_dir",
  "samcli.commands.local.cli_common.options.get_default_layer_cache_dir",
  "samcli.commands.local.cli_common.options.invoke_common_options",
  "samcli.commands.local.cli_common.options.service_common_options",
  "samcli.commands.local.cli_common.user_exceptions.CredentialsRequired",
  "samcli.commands.local.cli_common.user_exceptions.ImageBuildException",
  "samcli.commands.local.cli_common.user_exceptions.InvalidLayerVersionArn",
  "samcli.commands.local.cli_common.user_exceptions.InvalidSamTemplateException",
  "samcli.commands.local.cli_common.user_exceptions.NotAvailableInRegion",
  "samcli.commands.local.cli_common.user_exceptions.ResourceNotFound",
  "samcli.commands.local.cli_common.user_exceptions.SamTemplateNotFoundException",
  "samcli.commands.local.cli_common.user_exceptions.UnsupportedIntrinsic",
  "samcli.commands.local.cli_common.user_exceptions.UserException",
  "samcli.commands.local.generate_event.cli.HELP_TEXT",
  "samcli.commands.local.generate_event.event_generation.EventTypeSubCommand",
  "samcli.commands.local.generate_event.event_generation.GenerateEventCommand",
  "samcli.commands.local.generate_event.event_generation.ServiceCommand",
  "samcli.commands.local.invoke.cli.HELP_TEXT",
  "samcli.commands.local.invoke.cli.LOG",
  "samcli.commands.local.invoke.cli.STDIN_FILE_NAME",
  "samcli.commands.local.invoke.cli._get_event",
  "samcli.commands.local.invoke.cli.do_cli",
  "samcli.commands.local.lib.debug_context.DebugContext",
  "samcli.commands.local.lib.exceptions.NoApisDefined",
  "samcli.commands.local.lib.exceptions.NoPrivilegeException",
  "samcli.commands.local.lib.exceptions.OverridesNotWellDefinedError",
  "samcli.commands.local.lib.local_api_service.LOG",
  "samcli.commands.local.lib.local_api_service.LocalApiService",
  "samcli.commands.local.lib.local_lambda.LOG",
  "samcli.commands.local.lib.local_lambda.LocalLambdaRunner",
  "samcli.commands.local.lib.local_lambda_service.LOG",
  "samcli.commands.local.lib.local_lambda_service.LocalLambdaService",
  "samcli.commands.local.lib.swagger.integration_uri.IntegrationType.aws_proxy.value",
  "samcli.commands.local.lib.swagger.integration_uri.LOG",
  "samcli.commands.local.lib.swagger.integration_uri.LambdaUri",
  "samcli.commands.local.lib.swagger.integration_uri.LambdaUri.get_function_name",
  "samcli.commands.local.lib.swagger.parser.LOG",
  "samcli.commands.local.lib.swagger.parser.SwaggerParser",
  "samcli.commands.local.lib.swagger.reader.LOG",
  "samcli.commands.local.lib.swagger.reader.SwaggerReader",
  "samcli.commands.local.lib.swagger.reader._FN_TRANSFORM",
  "samcli.commands.local.lib.swagger.reader.parse_aws_include_transform",
  "samcli.commands.local.start_api.cli.HELP_TEXT",
  "samcli.commands.local.start_api.cli.LOG",
  "samcli.commands.local.start_api.cli.do_cli",
  "samcli.commands.local.start_lambda.cli.HELP_TEXT",
  "samcli.commands.local.start_lambda.cli.LOG",
  "samcli.commands.local.start_lambda.cli.do_cli",
  "samcli.commands.logs.command.HELP_TEXT",
  "samcli.commands.logs.command.LOG",
  "samcli.commands.logs.command.do_cli",
  "samcli.commands.logs.logs_context.InvalidTimestampError",
  "samcli.commands.logs.logs_context.LOG",
  "samcli.commands.package.command.HELP_TEXT",
  "samcli.commands.package.command.SHORT_HELP",
  "samcli.commands.package.command.do_cli",
  "samcli.commands.package.command.resources_and_properties_help_string",
  "samcli.commands.package.exceptions.BucketNotSpecifiedError",
  "samcli.commands.package.exceptions.ExportFailedError",
  "samcli.commands.package.exceptions.InvalidLocalPathError",
  "samcli.commands.package.exceptions.InvalidTemplateUrlParameterError",
  "samcli.commands.package.exceptions.NoSuchBucketError",
  "samcli.commands.package.exceptions.PackageFailedError",
  "samcli.commands.package.exceptions.PackageResolveS3AndS3NotSetError",
  "samcli.commands.package.exceptions.PackageResolveS3AndS3SetError",
  "samcli.commands.package.package_context.PackageContext",
  "samcli.commands.publish.command.HELP_TEXT",
  "samcli.commands.publish.command.LOG",
  "samcli.commands.publish.command.SAM_PACKAGE_DOC",
  "samcli.commands.publish.command.SAM_PUBLISH_DOC",
  "samcli.commands.publish.command.SEMANTIC_VERSION",
  "samcli.commands.publish.command.SEMANTIC_VERSION_HELP",
  "samcli.commands.publish.command.SERVERLESSREPO_CONSOLE_URL",
  "samcli.commands.publish.command.SHORT_HELP",
  "samcli.commands.publish.command._gen_success_message",
  "samcli.commands.publish.command._print_console_link",
  "samcli.commands.publish.command.do_cli",
  "samcli.commands.validate.lib.exceptions.InvalidSamDocumentException",
  "samcli.commands.validate.lib.sam_template_validator.LOG",
  "samcli.commands.validate.lib.sam_template_validator.SamTemplateValidator",
  "samcli.commands.validate.validate._read_sam_file",
  "samcli.commands.validate.validate.do_cli",
  "samcli.lib.bootstrap.bootstrap.LOG",
  "samcli.lib.bootstrap.bootstrap.SAM_CLI_STACK_NAME",
  "samcli.lib.bootstrap.bootstrap._check_sanity_of_stack",
  "samcli.lib.bootstrap.bootstrap._create_or_get_stack",
  "samcli.lib.bootstrap.bootstrap._create_stack",
  "samcli.lib.bootstrap.bootstrap._get_stack_template",
  "samcli.lib.bootstrap.bootstrap.manage_stack",
  "samcli.lib.build.app_builder.ApplicationBuilder",
  "samcli.lib.build.app_builder.BuildError",
  "samcli.lib.build.app_builder.BuildInsideContainerError",
  "samcli.lib.build.app_builder.ContainerBuildNotSupported",
  "samcli.lib.build.app_builder.LOG",
  "samcli.lib.build.app_builder.UnsupportedBuilderLibraryVersionError",
  "samcli.lib.build.workflow_config.BasicWorkflowSelector",
  "samcli.lib.build.workflow_config.CONFIG",
  "samcli.lib.build.workflow_config.DOTNET_CLIPACKAGE_CONFIG",
  "samcli.lib.build.workflow_config.GO_MOD_CONFIG",
  "samcli.lib.build.workflow_config.JAVA_GRADLE_CONFIG",
  "samcli.lib.build.workflow_config.JAVA_KOTLIN_GRADLE_CONFIG",
  "samcli.lib.build.workflow_config.JAVA_MAVEN_CONFIG",
  "samcli.lib.build.workflow_config.LOG",
  "samcli.lib.build.workflow_config.ManifestWorkflowSelector",
  "samcli.lib.build.workflow_config.NODEJS_NPM_CONFIG",
  "samcli.lib.build.workflow_config.PROVIDED_MAKE_CONFIG",
  "samcli.lib.build.workflow_config.PYTHON_PIP_CONFIG",
  "samcli.lib.build.workflow_config.RUBY_BUNDLER_CONFIG",
  "samcli.lib.build.workflow_config.UnsupportedBuilderException",
  "samcli.lib.build.workflow_config.UnsupportedRuntimeException",
  "samcli.lib.build.workflow_config.get_selector",
  "samcli.lib.config.exceptions.SamConfigVersionException",
  "samcli.lib.config.samconfig.DEFAULT_CONFIG_FILE_NAME",
  "samcli.lib.config.samconfig.DEFAULT_ENV",
  "samcli.lib.config.samconfig.SamConfig",
  "samcli.lib.config.samconfig.SamConfig.config_dir",
  "samcli.lib.config.version.SAM_CONFIG_VERSION",
  "samcli.lib.config.version.VERSION_KEY",
  "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_DEFAULT_ARGS",
  "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_FORMAT_STRING",
  "samcli.lib.deploy.deployer.DESCRIBE_CHANGESET_TABLE_HEADER_NAME",
  "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_DEFAULT_ARGS",
  "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_FORMAT_STRING",
  "samcli.lib.deploy.deployer.DESCRIBE_STACK_EVENTS_TABLE_HEADER_NAME",
  "samcli.lib.deploy.deployer.Deployer",
  "samcli.lib.deploy.deployer.LOG",
  "samcli.lib.deploy.deployer.OUTPUTS_DEFAULTS_ARGS",
  "samcli.lib.deploy.deployer.OUTPUTS_FORMAT_STRING",
  "samcli.lib.deploy.deployer.OUTPUTS_TABLE_HEADER_NAME",
  "samcli.lib.deploy.utils.DeployColor",
  "samcli.lib.generated_sample_events.events.Events",
  "samcli.lib.init.LOG",
  "samcli.lib.init.arbitrary_project.BAD_LOCATION_ERROR_MSG",
  "samcli.lib.init.arbitrary_project.LOG",
  "samcli.lib.init.arbitrary_project._download_and_copy",
  "samcli.lib.init.exceptions.ArbitraryProjectDownloadFailed",
  "samcli.lib.init.exceptions.GenerateProjectFailedError",
  "samcli.lib.init.exceptions.InitErrorException",
  "samcli.lib.init.generate_project",
  "samcli.lib.init.templates.cookiecutter-aws-sam-hello-python.{{cookiecutter.project_name}}.tests.unit.test_handler.apigw_event",
  "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver",
  "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.IntrinsicResolver.REF",
  "samcli.lib.intrinsic_resolver.intrinsic_property_resolver.LOG",
  "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable",
  "samcli.lib.intrinsic_resolver.intrinsics_symbol_table.IntrinsicsSymbolTable.DEFAULT_PSEUDO_PARAM_VALUES",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidIntrinsicException",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_exception.InvalidSymbolException",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_all_list_intrinsic_type",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_in_bounds",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_bool",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_dict",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_int",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_list",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_intrinsic_type_str",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_non_null",
  "samcli.lib.intrinsic_resolver.invalid_intrinsic_validation.verify_number_arguments",
  "samcli.lib.logs.event.LogEvent",
  "samcli.lib.logs.fetcher.LOG",
  "samcli.lib.logs.fetcher.LogsFetcher",
  "samcli.lib.logs.formatter.JSONMsgFormatter.format_json",
  "samcli.lib.logs.formatter.KeywordHighlighter",
  "samcli.lib.logs.formatter.LambdaLogMsgFormatters.colorize_errors",
  "samcli.lib.logs.formatter.LogsFormatter",
  "samcli.lib.logs.provider.LogGroupProvider.for_lambda_function",
  "samcli.lib.package.artifact_exporter.ApiGatewayRestApiResource",
  "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationRequestTemplateResource",
  "samcli.lib.package.artifact_exporter.AppSyncFunctionConfigurationResponseTemplateResource",
  "samcli.lib.package.artifact_exporter.AppSyncResolverRequestTemplateResource",
  "samcli.lib.package.artifact_exporter.AppSyncResolverResponseTemplateResource",
  "samcli.lib.package.artifact_exporter.CloudFormationStackResource",
  "samcli.lib.package.artifact_exporter.ElasticBeanstalkApplicationVersion",
  "samcli.lib.package.artifact_exporter.GLOBAL_EXPORT_DICT",
  "samcli.lib.package.artifact_exporter.GlueJobCommandScriptLocationResource",
  "samcli.lib.package.artifact_exporter.GraphQLSchemaResource",
  "samcli.lib.package.artifact_exporter.LOG",
  "samcli.lib.package.artifact_exporter.LambdaFunctionResource",
  "samcli.lib.package.artifact_exporter.LambdaLayerVersionResource",
  "samcli.lib.package.artifact_exporter.METADATA_EXPORT_LIST",
  "samcli.lib.package.artifact_exporter.RESOURCES_EXPORT_LIST",
  "samcli.lib.package.artifact_exporter.Resource",
  "samcli.lib.package.artifact_exporter.ResourceWithS3UrlDict",
  "samcli.lib.package.artifact_exporter.ServerlessApiResource",
  "samcli.lib.package.artifact_exporter.ServerlessApplicationResource",
  "samcli.lib.package.artifact_exporter.ServerlessFunctionResource",
  "samcli.lib.package.artifact_exporter.ServerlessHttpApiResource",
  "samcli.lib.package.artifact_exporter.ServerlessLayerVersionResource",
  "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationLicense",
  "samcli.lib.package.artifact_exporter.ServerlessRepoApplicationReadme",
  "samcli.lib.package.artifact_exporter.ServerlessStateMachineResource",
  "samcli.lib.package.artifact_exporter.StepFunctionsStateMachineResource",
  "samcli.lib.package.artifact_exporter.Template",
  "samcli.lib.package.artifact_exporter.copy_to_temp_dir",
  "samcli.lib.package.artifact_exporter.include_transform_export_handler",
  "samcli.lib.package.artifact_exporter.is_local_file",
  "samcli.lib.package.artifact_exporter.is_local_folder",
  "samcli.lib.package.artifact_exporter.is_path_value_valid",
  "samcli.lib.package.artifact_exporter.is_s3_url",
  "samcli.lib.package.artifact_exporter.is_zip_file",
  "samcli.lib.package.artifact_exporter.make_abs_path",
  "samcli.lib.package.artifact_exporter.make_zip",
  "samcli.lib.package.artifact_exporter.mktempfile",
  "samcli.lib.package.artifact_exporter.parse_s3_url",
  "samcli.lib.package.artifact_exporter.resource_not_packageable",
  "samcli.lib.package.artifact_exporter.upload_local_artifacts",
  "samcli.lib.package.artifact_exporter.zip_and_upload",
  "samcli.lib.package.artifact_exporter.zip_folder",
  "samcli.lib.package.s3_uploader.LOG",
  "samcli.lib.package.s3_uploader.ProgressPercentage",
  "samcli.lib.package.s3_uploader.S3Uploader",
  "samcli.lib.providers.api_collector.ApiCollector",
  "samcli.lib.providers.api_collector.LOG",
  "samcli.lib.providers.api_provider.ApiProvider",
  "samcli.lib.providers.api_provider.LOG",
  "samcli.lib.providers.cfn_api_provider.CfnApiProvider",
  "samcli.lib.providers.cfn_api_provider.CfnApiProvider.TYPES",
  "samcli.lib.providers.cfn_api_provider.LOG",
  "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider",
  "samcli.lib.providers.cfn_base_api_provider.CfnBaseApiProvider.RESOURCE_TYPE",
  "samcli.lib.providers.cfn_base_api_provider.LOG",
  "samcli.lib.providers.exceptions.InvalidLayerReference",
  "samcli.lib.providers.provider.AbstractApiProvider",
  "samcli.lib.providers.provider.Api",
  "samcli.lib.providers.provider.Cors",
  "samcli.lib.providers.provider.Cors.cors_to_headers",
  "samcli.lib.providers.provider.LayerVersion",
  "samcli.lib.providers.provider.ResourcesToBuildCollector",
  "samcli.lib.providers.provider._CorsTuple",
  "samcli.lib.providers.sam_api_provider.LOG",
  "samcli.lib.providers.sam_api_provider.SamApiProvider",
  "samcli.lib.providers.sam_api_provider.SamApiProvider.TYPES",
  "samcli.lib.providers.sam_base_provider.LOG",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_FUNCTION",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.LAMBDA_LAYER",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_FUNCTION",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.SERVERLESS_LAYER",
  "samcli.lib.providers.sam_base_provider.SamBaseProvider.get_template",
  "samcli.lib.providers.sam_function_provider.LOG",
  "samcli.lib.providers.sam_function_provider.SamFunctionProvider",
  "samcli.lib.providers.sam_layer_provider.SamLayerProvider",
  "samcli.lib.samlib.local_uri_plugin.SupportLocalUriPlugin",
  "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PATH_METADATA_KEY",
  "samcli.lib.samlib.resource_metadata_normalizer.ASSET_PROPERTY_METADATA_KEY",
  "samcli.lib.samlib.resource_metadata_normalizer.LOG",
  "samcli.lib.samlib.resource_metadata_normalizer.METADATA_KEY",
  "samcli.lib.samlib.resource_metadata_normalizer.PROPERTIES_KEY",
  "samcli.lib.samlib.resource_metadata_normalizer.RESOURCES_KEY",
  "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer",
  "samcli.lib.samlib.resource_metadata_normalizer.ResourceMetadataNormalizer.normalize",
  "samcli.lib.samlib.wrapper.SamTranslatorWrapper",
  "samcli.lib.samlib.wrapper._SamParserReimplemented",
  "samcli.lib.schemas.cli_paginator.do_paginate_cli",
  "samcli.lib.schemas.schemas_api_caller.SCHEMAS_NOT_AVAILABLE_IN_REGION_ERROR",
  "samcli.lib.schemas.schemas_api_caller.SchemasApiCaller",
  "samcli.lib.schemas.schemas_aws_config._get_aws_profile_choice",
  "samcli.lib.schemas.schemas_aws_config._get_aws_region_choice",
  "samcli.lib.schemas.schemas_aws_config.get_aws_configuration_choice",
  "samcli.lib.schemas.schemas_aws_config.get_schemas_client",
  "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_registries",
  "samcli.lib.schemas.schemas_cli_message_generator.construct_cli_display_message_for_schemas",
  "samcli.lib.schemas.schemas_code_manager.do_download_source_code_binding",
  "samcli.lib.schemas.schemas_code_manager.do_extract_and_merge_schemas_code",
  "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_DETAIL_TYPE",
  "samcli.lib.schemas.schemas_constants.DEFAULT_EVENT_SOURCE",
  "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE",
  "samcli.lib.schemas.schemas_constants.EVENT_BRIDGE_SOURCE_DETAIL_TYPE",
  "samcli.lib.schemas.schemas_constants.PAGE_LIMIT",
  "samcli.lib.schemas.schemas_constants.SCHEMAS_REGISTRY",
  "samcli.lib.schemas.schemas_constants.SCHEMA_NAME",
  "samcli.lib.schemas.schemas_constants.SCHEMA_ROOT",
  "samcli.lib.schemas.schemas_directory_hierarchy_builder.CHARACTER_TO_SANITIZE",
  "samcli.lib.schemas.schemas_directory_hierarchy_builder.POTENTIAL_PACKAGE_SEPARATOR",
  "samcli.lib.schemas.schemas_directory_hierarchy_builder.get_package_hierarchy",
  "samcli.lib.schemas.schemas_directory_hierarchy_builder.sanitize_name",
  "samcli.lib.telemetry.metrics.LOG",
  "samcli.lib.telemetry.metrics.WARNING_ANNOUNCEMENT",
  "samcli.lib.telemetry.metrics._build_warning_metric",
  "samcli.lib.telemetry.metrics._telemetry_enabled",
  "samcli.lib.telemetry.metrics._timer",
  "samcli.lib.telemetry.metrics.send_installed_metric",
  "samcli.lib.telemetry.metrics.track_command",
  "samcli.lib.telemetry.metrics.track_template_warnings",
  "samcli.lib.telemetry.telemetry.LOG",
  "samcli.lib.utils.botoconfig.get_boto_config_with_user_agent",
  "samcli.lib.utils.codeuri.LOG",
  "samcli.lib.utils.codeuri.PRESENT_DIR",
  "samcli.lib.utils.codeuri.resolve_code_path",
  "samcli.lib.utils.colors.Colored",
  "samcli.lib.utils.hash.BLOCK_SIZE",
  "samcli.lib.utils.hash.dir_checksum",
  "samcli.lib.utils.hash.file_checksum",
  "samcli.lib.utils.osutils.LOG",
  "samcli.lib.utils.osutils.copytree",
  "samcli.lib.utils.osutils.mkdir_temp",
  "samcli.lib.utils.osutils.remove",
  "samcli.lib.utils.osutils.rmtree_callback",
  "samcli.lib.utils.osutils.stderr",
  "samcli.lib.utils.osutils.stdout",
  "samcli.lib.utils.osutils.tempfile_platform_independent",
  "samcli.lib.utils.progressbar.progressbar",
  "samcli.lib.utils.sam_logging.SamCliLogger.configure_logger",
  "samcli.lib.utils.sam_logging.SamCliLogger.configure_null_logger",
  "samcli.lib.utils.stream_writer.StreamWriter",
  "samcli.lib.utils.tar.create_tarball",
  "samcli.lib.utils.time.parse_date",
  "samcli.lib.utils.time.timestamp_to_iso",
  "samcli.lib.utils.time.to_datetime",
  "samcli.lib.utils.time.to_timestamp",
  "samcli.lib.utils.time.to_utc",
  "samcli.lib.utils.time.utc_to_timestamp",
  "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning",
  "samcli.lib.warnings.sam_cli_warning.CodeDeployWarning.__name__",
  "samcli.lib.warnings.sam_cli_warning.LOG",
  "samcli.lib.warnings.sam_cli_warning.TemplateWarning",
  "samcli.lib.warnings.sam_cli_warning.TemplateWarningsChecker",
  "samcli.lib.warnings.sam_cli_warning._get_deployment_preferences_status",
  "samcli.local.apigw.local_apigw_service.LOG",
  "samcli.local.apigw.local_apigw_service.LambdaResponseParseException",
  "samcli.local.apigw.local_apigw_service.LocalApigwService",
  "samcli.local.apigw.local_apigw_service.Route",
  "samcli.local.apigw.local_apigw_service.Route.ANY_HTTP_METHODS",
  "samcli.local.apigw.path_converter.APIGW_TO_FLASK_REGEX",
  "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH",
  "samcli.local.apigw.path_converter.FLASK_CAPTURE_ALL_PATH_REGEX",
  "samcli.local.apigw.path_converter.FLASK_TO_APIGW_REGEX",
  "samcli.local.apigw.path_converter.LEFT_ANGLE_BRACKET",
  "samcli.local.apigw.path_converter.LEFT_BRACKET",
  "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS",
  "samcli.local.apigw.path_converter.PROXY_PATH_PARAMS_ESCAPED",
  "samcli.local.apigw.path_converter.RIGHT_ANGLE_BRACKET",
  "samcli.local.apigw.path_converter.RIGHT_BRACKET",
  "samcli.local.apigw.service_error_responses.ServiceErrorResponses",
  "samcli.local.common.runtime_template.INIT_RUNTIMES",
  "samcli.local.common.runtime_template.RUNTIMES",
  "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING",
  "samcli.local.common.runtime_template.RUNTIME_DEP_TEMPLATE_MAPPING.values",
  "samcli.local.common.runtime_template.RUNTIME_TO_DEPENDENCY_MANAGERS.get",
  "samcli.local.common.runtime_template.SAM_RUNTIME_TO_SCHEMAS_CODE_LANG_MAPPING.get",
  "samcli.local.common.runtime_template.SUPPORTED_DEP_MANAGERS",
  "samcli.local.common.runtime_template._init_path",
  "samcli.local.common.runtime_template._templates",
  "samcli.local.docker.container.LOG",
  "samcli.local.docker.lambda_build_container.LOG",
  "samcli.local.docker.lambda_build_container.LambdaBuildContainer",
  "samcli.local.docker.lambda_container.LambdaContainer",
  "samcli.local.docker.lambda_debug_settings.DebugSettings",
  "samcli.local.docker.lambda_debug_settings.DebuggingNotSupported",
  "samcli.local.docker.lambda_debug_settings.LambdaDebugSettings.get_debug_settings",
  "samcli.local.docker.lambda_image.LOG",
  "samcli.local.docker.lambda_image.LambdaImage",
  "samcli.local.docker.lambda_image.Runtime.dotnetcore21.value",
  "samcli.local.docker.lambda_image.Runtime.go1x.value",
  "samcli.local.docker.lambda_image.Runtime.java11.value",
  "samcli.local.docker.lambda_image.Runtime.java8.value",
  "samcli.local.docker.lambda_image.Runtime.java8al2.value",
  "samcli.local.docker.lambda_image.Runtime.nodejs10x.value",
  "samcli.local.docker.lambda_image.Runtime.nodejs12x.value",
  "samcli.local.docker.lambda_image.Runtime.python27.value",
  "samcli.local.docker.lambda_image.Runtime.python36.value",
  "samcli.local.docker.lambda_image.Runtime.python37.value",
  "samcli.local.docker.lambda_image.Runtime.python38.value",
  "samcli.local.docker.manager.ContainerManager",
  "samcli.local.docker.manager.DockerImagePullFailedException",
  "samcli.local.docker.manager.LOG",
  "samcli.local.events.api_event.ApiGatewayLambdaEvent",
  "samcli.local.events.api_event.ContextIdentity",
  "samcli.local.events.api_event.RequestContext",
  "samcli.local.lambda_service.lambda_error_responses.LambdaErrorResponses",
  "samcli.local.lambda_service.local_lambda_invoke_service.LOG",
  "samcli.local.lambda_service.local_lambda_invoke_service.LocalLambdaInvokeService",
  "samcli.local.lambdafn.config.FunctionConfig",
  "samcli.local.lambdafn.env_vars.EnvironmentVariables",
  "samcli.local.lambdafn.exceptions.FunctionNotFound",
  "samcli.local.lambdafn.exceptions.ResourceNotFound",
  "samcli.local.lambdafn.runtime.LOG",
  "samcli.local.lambdafn.runtime.LambdaRuntime",
  "samcli.local.lambdafn.runtime._unzip_file",
  "samcli.local.lambdafn.zip.LOG",
  "samcli.local.lambdafn.zip._extract",
  "samcli.local.lambdafn.zip._is_symlink",
  "samcli.local.lambdafn.zip._override_permissions",
  "samcli.local.lambdafn.zip._set_permissions",
  "samcli.local.lambdafn.zip.unzip",
  "samcli.local.lambdafn.zip.unzip_from_uri",
  "samcli.local.layers.layer_downloader.LOG",
  "samcli.local.layers.layer_downloader.LayerDownloader",
  "samcli.local.services.base_local_service.BaseLocalService",
  "samcli.local.services.base_local_service.BaseLocalService.service_response",
  "samcli.local.services.base_local_service.LOG",
  "samcli.local.services.base_local_service.LambdaOutputParser",
  "samcli.local.services.base_local_service.LambdaOutputParser.get_lambda_output",
  "samcli.settings.telemetry_endpoint_url",
  "samcli.yamlhelper._dict_constructor",
  "samcli.yamlhelper._dict_representer",
  "samcli.yamlhelper.intrinsics_multi_constructor",
  "samcli.yamlhelper.yaml_dump",
  "samcli.yamlhelper.yaml_parse",
  "samtranslator.model.ResourceTypeResolver",
  "samtranslator.model.exceptions.InvalidDocumentException",
  "samtranslator.model.exceptions.InvalidEventException",
  "samtranslator.model.exceptions.InvalidResourceException",
  "samtranslator.model.exceptions.InvalidTemplateException",
  "samtranslator.model.sam_resources",
  "samtranslator.parser.parser.Parser",
  "samtranslator.plugins.LifeCycleEvents.before_transform_template",
  "samtranslator.public.exceptions.InvalidDocumentException",
  "samtranslator.public.plugins.BasePlugin",
  "samtranslator.translator.managed_policy_translator.ManagedPolicyLoader",
  "samtranslator.translator.translator.Translator",
  "samtranslator.translator.translator.prepare_plugins",
  "samtranslator.validator.validator.SamTemplateValidator.validate",
  "serverlessrepo.exceptions.InvalidS3UriError",
  "serverlessrepo.exceptions.ServerlessRepoError",
  "serverlessrepo.parser.METADATA",
  "serverlessrepo.parser.SERVERLESS_REPO_APPLICATION",
  "serverlessrepo.publish.CREATE_APPLICATION",
  "serverlessrepo.publish_application",
  "service_error_responses.ServiceErrorResponses.lambda_failure_response",
  "service_error_responses.ServiceErrorResponses.lambda_not_found_response",
  "service_error_responses.ServiceErrorResponses.route_not_found",
  "shutil.Error",
  "shutil.copy2",
  "shutil.copyfile",
  "shutil.copystat",
  "shutil.copytree",
  "shutil.ignore_patterns",
  "shutil.rmtree",
  "signal.SIGTERM",
  "signal.signal",
  "six.moves.urllib.parse.parse_qs",
  "six.moves.urllib.parse.urlparse",
  "six.string_types",
  "start_api.cli.cli",
  "start_lambda.cli.cli",
  "start_lambda.cli.cli.add_command",
  "stat.S_IWRITE",
  "str.format",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.check_output",
  "sys.stderr",
  "sys.stderr.buffer",
  "sys.stderr.flush",
  "sys.stderr.write",
  "sys.stdout.buffer",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version_info.major",
  "tarfile.open",
  "telemetry.Telemetry",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryFile",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "textwrap.wrap",
  "threading.Lock",
  "threading.Timer",
  "time.sleep",
  "time.time",
  "timeit.default_timer",
  "tomlkit.document",
  "tomlkit.dumps",
  "tomlkit.exceptions.KeyAlreadyPresent",
  "tomlkit.exceptions.TOMLKitError",
  "tomlkit.loads",
  "urllib.parse.parse_qs",
  "urllib.parse.urlparse",
  "user_exceptions.DebugContextException",
  "user_exceptions.InvokeContextException",
  "utils.to_posix_path",
  "uuid.uuid4",
  "werkzeug.datastructures.Headers",
  "workflow_config.get_layer_subfolder",
  "workflow_config.get_workflow_config",
  "workflow_config.supports_build_in_container",
  "yaml.SafeDumper",
  "yaml.SafeLoader.add_constructor",
  "yaml.SafeLoader.add_multi_constructor",
  "yaml.YAMLError",
  "yaml.dump",
  "yaml.resolver.BaseResolver.DEFAULT_MAPPING_TAG",
  "yaml.resolver.ScalarNode",
  "yaml.resolver.SequenceNode",
  "yaml.safe_load",
  "zip.unzip",
  "zipfile.ZIP_DEFLATED",
  "zipfile.ZipFile",
  "zipfile.is_zipfile"
 ],
 "deps": {
  "Exception": [],
  "_key": [],
  "add_options_to_route": [],
  "arbitrary_project": [],
  "attribute_resolver": [],
  "aws_lambda_builders": [],
  "base64": [],
  "boto3": [],
  "botocore": [],
  "build_method": [],
  "builtins": [],
  "chevron": [],
  "click": [],
  "collections": [],
  "command": [],
  "container": [],
  "context": [],
  "contextlib": [],
  "cookiecutter": [],
  "copy": [],
  "dateparser": [],
  "datetime": [],
  "dateutil": [],
  "docker": [],
  "duration_fn": [],
  "enum": [],
  "env_vars": [],
  "errno": [],
  "event": [],
  "events": [],
  "exceptions": [],
  "exporter_class": [],
  "flask": [],
  "func": [],
  "functools": [],
  "generate_event": [],
  "global_config": [],
  "hashlib": [],
  "hello_world": [],
  "importlib": [],
  "invoke": [],
  "io": [],
  "itertools": [],
  "jmespath": [],
  "json": [],
  "lambda_error_responses": [],
  "lambda_image": [],
  "lib": [],
  "local_uri_plugin": [],
  "logging": [],
  "logs_context": [],
  "math": [],
  "option": [],
  "options": [],
  "os": [],
  "path_converter": [],
  "pathlib": [],
  "platform": [],
  "posixpath": [],
  "provider": [],
  "pytest": [],
  "re": [],
  "requests": [],
  "resolve_sub_attribute": [],
  "resolver": [],
  "sam_base_provider": [],
  "samcli": [],
  "samtranslator": [],
  "serverlessrepo": [],
  "service_error_responses": [],
  "shutil": [],
  "signal": [],
  "six": [],
  "start_api": [],
  "start_lambda": [],
  "stat": [],
  "str": [],
  "subprocess": [],
  "sys": [],
  "tarfile": [],
  "telemetry": [],
  "tempfile": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "timeit": [],
  "tomlkit": [],
  "urllib": [],
  "user_exceptions": [],
  "utils": [],
  "uuid": [],
  "werkzeug": [],
  "workflow_config": [],
  "yaml": [],
  "zip": [],
  "zipfile": []
 }
}