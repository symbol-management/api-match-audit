{
 "bad": [
  "array",
  "ast.fix_missing_locations",
  "ast.parse",
  "cartesian.mlinspace",
  "codegen.get_code_cubic",
  "codegen.get_code_linear",
  "codegen.source_to_function",
  "collections.namedtuple",
  "compat.Tuple",
  "compat.UniTuple",
  "compat.overload_options",
  "concatenate",
  "cp",
  "cp.fit_values",
  "cs",
  "cs.interpolate",
  "cs.mvalues",
  "distutils.version.LooseVersion",
  "eval_cubic.get_grid",
  "eval_cubic.vec_eval_cubic_splines_G",
  "eval_cubic_numba.vec_eval_cubic_splines_G_1",
  "eval_cubic_numba.vec_eval_cubic_splines_G_2",
  "eval_cubic_numba.vec_eval_cubic_splines_G_3",
  "eval_cubic_numba.vec_eval_cubic_splines_G_4",
  "eval_splines.eval_cubic",
  "eval_splines.eval_linear",
  "f",
  "f2",
  "ff",
  "ff_c",
  "filter_cubic.filter_coeffs",
  "filter_cubic.filter_mcoeffs",
  "functools.reduce",
  "fungen.extract_row",
  "fungen.fmap",
  "fungen.funzip",
  "fungen.get_coeffs",
  "fungen.get_index",
  "fungen.tensor_reduction",
  "grid.SmolyakGrid",
  "grid.build_B",
  "interp.SmolyakInterp",
  "interpolation.cartesian._repeat_1d",
  "interpolation.cartesian.cartesian",
  "interpolation.cartesian.mlinspace",
  "interpolation.complete_poly.CompletePolynomial",
  "interpolation.complete_poly._complete_poly_der_impl",
  "interpolation.complete_poly._complete_poly_der_impl_vec",
  "interpolation.complete_poly._complete_poly_impl",
  "interpolation.complete_poly._complete_poly_impl_vec",
  "interpolation.complete_poly.complete_polynomial",
  "interpolation.complete_poly.complete_polynomial_der",
  "interpolation.complete_poly.n_complete",
  "interpolation.mlinterp",
  "interpolation.multilinear.fungen.clamp",
  "interpolation.multilinear.fungen.fmap",
  "interpolation.multilinear.fungen.gen_tensor_reduction",
  "interpolation.multilinear.fungen.get_index",
  "interpolation.multilinear.fungen.t_coord",
  "interpolation.multilinear.mlinterp.Scalar",
  "interpolation.multilinear.mlinterp.detect_types",
  "interpolation.multilinear.mlinterp.interp",
  "interpolation.multilinear.mlinterp.itt",
  "interpolation.multilinear.mlinterp.make_mlinterp",
  "interpolation.multilinear.mlinterp.mlinterp",
  "interpolation.multilinear.tests.test_multilinear.a2",
  "interpolation.multilinear.tests.test_multilinear.a3",
  "interpolation.multilinear.tests.test_multilinear.a4",
  "interpolation.multilinear.tests.test_multilinear.b1",
  "interpolation.multilinear.tests.test_multilinear.b2",
  "interpolation.multilinear.tests.test_multilinear.b3",
  "interpolation.multilinear.tests.test_multilinear.b4",
  "interpolation.multilinear.tests.test_multilinear.b5",
  "interpolation.multilinear.tests.test_multilinear.c1",
  "interpolation.multilinear.tests.test_multilinear.c2",
  "interpolation.multilinear.tests.test_multilinear.c3",
  "interpolation.multilinear.tests.test_multilinear.c4",
  "interpolation.multilinear.tests.test_multilinear.d1",
  "interpolation.multilinear.tests.test_multilinear.d2",
  "interpolation.multilinear.tests.test_multilinear.d3",
  "interpolation.multilinear.tests.test_multilinear.d4",
  "interpolation.multilinear.tests.test_multilinear.d5",
  "interpolation.multilinear.tests.test_multilinear.tests",
  "interpolation.smolyak.grid.a_chain",
  "interpolation.smolyak.grid.build_B",
  "interpolation.smolyak.grid.build_grid",
  "interpolation.smolyak.grid.cheby2n",
  "interpolation.smolyak.grid.m_i",
  "interpolation.smolyak.grid.phi_chain",
  "interpolation.smolyak.grid.poly_inds",
  "interpolation.smolyak.grid.s_n",
  "interpolation.smolyak.grid.smol_inds",
  "interpolation.smolyak.interp.find_theta",
  "interpolation.smolyak.tests.test_interp.func",
  "interpolation.smolyak.tests.test_interp.func1",
  "interpolation.smolyak.tests.test_interp.interp_2d",
  "interpolation.smolyak.tests.test_interp.interp_2d1",
  "interpolation.smolyak.tests.test_interp.msg",
  "interpolation.splines.CubicSpline",
  "interpolation.splines.CubicSplines",
  "interpolation.splines.basis_splines.B0",
  "interpolation.splines.codegen.blending_formula",
  "interpolation.splines.codegen.gen_trex",
  "interpolation.splines.codegen.get_code_spline",
  "interpolation.splines.codegen.get_values",
  "interpolation.splines.codegen.template_linear",
  "interpolation.splines.codegen.template_linear_vectorized",
  "interpolation.splines.eval_cubic.eval_cubic_spline",
  "interpolation.splines.eval_cubic.eval_cubic_splines",
  "interpolation.splines.eval_cubic.get_grid",
  "interpolation.splines.eval_cubic.vec_eval_cubic_spline",
  "interpolation.splines.eval_cubic.vec_eval_cubic_splines",
  "interpolation.splines.eval_cubic_numba.Ad",
  "interpolation.splines.eval_cubic_numba.d2Ad",
  "interpolation.splines.eval_cubic_numba.dAd",
  "interpolation.splines.eval_splines.Ad",
  "interpolation.splines.eval_splines._eval_cubic",
  "interpolation.splines.eval_splines._eval_linear",
  "interpolation.splines.eval_splines.dAd",
  "interpolation.splines.eval_splines.eval_cubic",
  "interpolation.splines.eval_splines.eval_linear",
  "interpolation.splines.filter_cubic.basis",
  "interpolation.splines.filter_cubic.coeffs_0",
  "interpolation.splines.filter_cubic.coeffs_1",
  "interpolation.splines.filter_cubic.dinv",
  "interpolation.splines.filter_cubic.filter_coeffs",
  "interpolation.splines.filter_cubic.filter_coeffs_1d",
  "interpolation.splines.filter_cubic.filter_coeffs_2d",
  "interpolation.splines.filter_cubic.filter_coeffs_3d",
  "interpolation.splines.filter_cubic.filter_coeffs_4d",
  "interpolation.splines.filter_cubic.filter_data",
  "interpolation.splines.filter_cubic.filter_mcoeffs",
  "interpolation.splines.filter_cubic.find_coefs_1d",
  "interpolation.splines.filter_cubic.solve_deriv_interp_1d",
  "interpolation.splines.filter_cubic.t1",
  "interpolation.splines.filter_cubic.t2",
  "interpolation.splines.filter_cubic.t3",
  "interpolation.splines.multilinear.LinearSpline",
  "interpolation.splines.multilinear.LinearSplines",
  "interpolation.splines.multilinear.mlinspace",
  "interpolation.splines.option_types.CONSTANT",
  "interpolation.splines.option_types.LINEAR",
  "interpolation.splines.option_types.NEAREST",
  "interpolation.splines.option_types._extrap",
  "interpolation.splines.option_types.options.CONSTANT",
  "interpolation.splines.option_types.options.LINEAR",
  "interpolation.splines.option_types.options.NEAREST",
  "interpolation.splines.option_types.t_CONSTANT",
  "interpolation.splines.option_types.t_LINEAR",
  "interpolation.splines.option_types.t_NEAREST",
  "interpolation.splines.prefilter_cubic._filter_cubic",
  "interpolation.splines.prefilter_cubic.basis",
  "interpolation.splines.prefilter_cubic.prefilter_cubic",
  "interpolation.splines.prefilter_cubic.solve_deriv_interp_1d",
  "interpolation.splines.tests.test_cubic_splines.K",
  "interpolation.splines.tests.test_cubic_splines.N",
  "interpolation.splines.tests.test_cubic_splines.Ng",
  "interpolation.splines.tests.test_cubic_splines.a",
  "interpolation.splines.tests.test_cubic_splines.b",
  "interpolation.splines.tests.test_cubic_splines.d",
  "interpolation.splines.tests.test_cubic_splines.f",
  "interpolation.splines.tests.test_cubic_splines.grid",
  "interpolation.splines.tests.test_cubic_splines.mvals",
  "interpolation.splines.tests.test_cubic_splines.orders",
  "interpolation.splines.tests.test_cubic_splines.point",
  "interpolation.splines.tests.test_cubic_splines.points",
  "interpolation.splines.tests.test_cubic_splines.test_cubic_multi_spline",
  "interpolation.splines.tests.test_cubic_splines.test_cubic_multi_spline_object",
  "interpolation.splines.tests.test_cubic_splines.test_cubic_spline",
  "interpolation.splines.tests.test_cubic_splines.test_cubic_spline_object",
  "interpolation.splines.tests.test_cubic_splines.vals",
  "interpolation.splines.tests.test_multilinear_extrap.K",
  "interpolation.splines.tests.test_multilinear_extrap.a",
  "interpolation.splines.tests.test_multilinear_extrap.b",
  "interpolation.splines.tests.test_multilinear_extrap.d",
  "interpolation.splines.tests.test_multilinear_extrap.f",
  "interpolation.splines.tests.test_multilinear_extrap.grid_u",
  "interpolation.splines.tests.test_multilinear_extrap.n",
  "interpolation.splines.tests.test_multilinear_extrap.pp",
  "interpolation.splines.tests.test_multilinear_extrap.s",
  "interpolation.splines.tests.test_multilinear_extrap.v",
  "interpolation.splines.tests.test_multilinear_extrap.x",
  "interpolation.splines.tests.test_multilinear_extrap.xx_",
  "interpolation.splines.tests.test_multilinear_extrap.xx_cst",
  "interpolation.splines.tests.test_multilinear_extrap.xx_lin",
  "interpolation.splines.tests.test_multilinear_extrap.xx_nea",
  "interpolation.splines.tests.test_multilinear_extrap.yy_",
  "interpolation.splines.tests.test_multilinear_extrap.yy_cst",
  "interpolation.splines.tests.test_multilinear_extrap.yy_lin",
  "interpolation.splines.tests.test_multilinear_extrap.yy_nea",
  "interpolation.splines.tests.test_multilinear_extrap.zz_",
  "interpolation.splines.tests.test_multilinear_extrap.zz_cst",
  "interpolation.splines.tests.test_multilinear_extrap.zz_lin",
  "interpolation.splines.tests.test_multilinear_extrap.zz_nea",
  "interpolation.splines.tests.test_object_api.K",
  "interpolation.splines.tests.test_object_api.N",
  "interpolation.splines.tests.test_object_api.Ng",
  "interpolation.splines.tests.test_object_api.a",
  "interpolation.splines.tests.test_object_api.b",
  "interpolation.splines.tests.test_object_api.d",
  "interpolation.splines.tests.test_object_api.f",
  "interpolation.splines.tests.test_object_api.grid",
  "interpolation.splines.tests.test_object_api.mvals",
  "interpolation.splines.tests.test_object_api.orders",
  "interpolation.splines.tests.test_object_api.point",
  "interpolation.splines.tests.test_object_api.points",
  "interpolation.splines.tests.test_object_api.test_objects",
  "interpolation.splines.tests.test_object_api.ttest_object_api",
  "interpolation.splines.tests.test_object_api.ttest_object_vector_api",
  "interpolation.splines.tests.test_object_api.ttest_object_vector_diff_api",
  "interpolation.splines.tests.test_object_api.vals",
  "interpolation.tests.test_complete.test_complete_derivative",
  "interpolation.tests.test_complete.test_complete_scalar",
  "interpolation.tests.test_complete.test_complete_vec_vs_mat",
  "interpolation.tests.test_complete.test_complete_vector",
  "isscalar",
  "itertools.chain.from_iterable",
  "itertools.combinations_with_replacement",
  "itertools.product",
  "math.floor",
  "matplotlib.pyplot.figure",
  "matplotlib.pyplot.show",
  "mattotup",
  "multilinear_numba.eval_linear",
  "numba.__version__",
  "numba.core.types.Array",
  "numba.core.types.Float",
  "numba.core.types.Integer",
  "numba.extending.overload",
  "numba.generated_jit",
  "numba.jit",
  "numba.njit",
  "numba.typeof",
  "numpy",
  "numpy.abs",
  "numpy.all",
  "numpy.allclose",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.atleast_2d",
  "numpy.column_stack",
  "numpy.concatenate",
  "numpy.cos",
  "numpy.count_nonzero",
  "numpy.cumprod",
  "numpy.dot",
  "numpy.empty",
  "numpy.float64",
  "numpy.int",
  "numpy.isfinite",
  "numpy.linalg.solve",
  "numpy.linspace",
  "numpy.max",
  "numpy.mean",
  "numpy.meshgrid",
  "numpy.min",
  "numpy.ndarray",
  "numpy.ndim",
  "numpy.ones",
  "numpy.pi",
  "numpy.prod",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.seed",
  "numpy.row_stack",
  "numpy.searchsorted",
  "numpy.sin",
  "numpy.sum",
  "numpy.tensordot",
  "numpy.where",
  "numpy.zeros",
  "operator.mul",
  "permute",
  "print_tuple",
  "row_stack",
  "scipy.linalg.lstsq",
  "scipy.linalg.lu",
  "sqrt",
  "str.join",
  "str.split",
  "tempita.Template",
  "time.time",
  "typing.Callable"
 ],
 "deps": {
  "array": [],
  "ast": [],
  "cartesian": [],
  "codegen": [],
  "collections": [],
  "compat": [],
  "concatenate": [],
  "cp": [],
  "cs": [],
  "distutils": [],
  "eval_cubic": [],
  "eval_cubic_numba": [],
  "eval_splines": [],
  "f": [],
  "f2": [],
  "ff": [],
  "ff_c": [],
  "filter_cubic": [],
  "functools": [],
  "fungen": [],
  "grid": [],
  "interp": [],
  "interpolation": [],
  "isscalar": [],
  "itertools": [],
  "math": [],
  "matplotlib": [],
  "mattotup": [],
  "multilinear_numba": [],
  "numba": [],
  "numpy": [],
  "operator": [],
  "permute": [],
  "print_tuple": [],
  "row_stack": [],
  "scipy": [],
  "sqrt": [],
  "str": [],
  "tempita": [],
  "time": [],
  "typing": []
 }
}