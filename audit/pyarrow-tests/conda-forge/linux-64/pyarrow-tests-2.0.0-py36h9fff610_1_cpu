{
 "bad": [
  "A",
  "BufferClass",
  "BuggyTimezone1",
  "BuggyTimezone2",
  "BuggyTimezone3",
  "ClassA",
  "CorrectTimezone1",
  "CorrectTimezone2",
  "CustomClass",
  "CustomFS",
  "CustomNDArray",
  "CustomType",
  "DuckReader",
  "DuckWriter",
  "DummyClass",
  "FromPlasma",
  "MyArray",
  "MyArray2",
  "MyArrayInvalid",
  "MyDate",
  "MyDatetime",
  "MyObj",
  "MyObject",
  "Path",
  "SubFoo",
  "TempClass",
  "ToPlasma",
  "_check",
  "_check_case",
  "_check_series",
  "_check_type",
  "_get_use",
  "_leak_check",
  "_make_table",
  "_visit_level",
  "allocate",
  "arrow_func",
  "assert_create_raises_plasma_full",
  "assert_opens",
  "assert_yields_projected",
  "ast.literal_eval",
  "base64.b64decode",
  "base64.b64encode",
  "bool_env",
  "bz2.BZ2File",
  "check",
  "check_data",
  "check_fields",
  "check_one_batch",
  "check_result",
  "clock",
  "cls",
  "collections.Counter",
  "collections.OrderedDict",
  "collections.UserList",
  "collections.abc.Iterable",
  "collections.abc.Iterator",
  "collections.defaultdict",
  "collections.deque",
  "collections.namedtuple",
  "con",
  "contextlib.contextmanager",
  "date",
  "datetime.date",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.fromtimestamp",
  "datetime.datetime.now",
  "datetime.datetime.today",
  "datetime.datetime.utcfromtimestamp",
  "datetime.time",
  "datetime.timedelta",
  "datetime.timezone",
  "datetime.timezone.utc",
  "datetime.tzinfo",
  "decimal.Decimal",
  "deserialize_or_output",
  "dict_type",
  "distutils.version.LooseVersion",
  "dt",
  "dt_ms",
  "dt_s",
  "dt_us",
  "eq",
  "expected_datetime_value",
  "expected_time_value",
  "f32",
  "filter.evaluate",
  "filter.llvm_ir.find",
  "format.make_write_options",
  "func",
  "func.arity",
  "func.kernels",
  "func.name",
  "func.num_kernels",
  "functools.lru_cache",
  "gc.collect",
  "get_buffer",
  "gzip.compress",
  "gzip.decompress",
  "gzip.open",
  "hypothesis.Verbosity.verbose",
  "hypothesis.settings.load_profile",
  "hypothesis.settings.register_profile",
  "illegal_assignment",
  "io.BufferedIOBase",
  "io.BytesIO",
  "io.IOBase",
  "io.StringIO",
  "io.TextIOWrapper",
  "is_pickleable",
  "iter_chunked_array",
  "itertools.count",
  "itertools.cycle",
  "itertools.islice",
  "itertools.product",
  "java.lang.IllegalArgumentException",
  "json.dumps",
  "json.loads",
  "jvm_vsr",
  "klass",
  "list_type_factory",
  "make_batches",
  "make_buffer",
  "make_schema",
  "math.ceil",
  "multiprocessing.Pool",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "multiprocessing.get_context",
  "ne",
  "normalized",
  "np_scalar",
  "numba.cuda.cudadrv.devicearray.DeviceNDArray",
  "numpy.NaN",
  "numpy.__name__",
  "numpy.__version__",
  "numpy.alltrue",
  "numpy.arange",
  "numpy.array",
  "numpy.array_equal",
  "numpy.array_split",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bool",
  "numpy.bool_",
  "numpy.concatenate",
  "numpy.datetime64",
  "numpy.dtype",
  "numpy.empty",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.frombuffer",
  "numpy.hstack",
  "numpy.iinfo",
  "numpy.int16",
  "numpy.int32",
  "numpy.int64",
  "numpy.int8",
  "numpy.int_",
  "numpy.isnan",
  "numpy.linspace",
  "numpy.ma.array",
  "numpy.ma.masked_array",
  "numpy.matrix",
  "numpy.nan",
  "numpy.ndarray",
  "numpy.object",
  "numpy.object_",
  "numpy.ones",
  "numpy.random.RandomState",
  "numpy.random.bytes",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random_sample",
  "numpy.random.seed",
  "numpy.repeat",
  "numpy.split",
  "numpy.str_",
  "numpy.testing.assert_array_equal",
  "numpy.testing.assert_equal",
  "numpy.tile",
  "numpy.timedelta64",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.uint64",
  "numpy.uint8",
  "numpy.unicode",
  "numpy.where",
  "numpy.zeros",
  "object.__sizeof__",
  "os.SEEK_CUR",
  "os.SEEK_END",
  "os.chdir",
  "os.environ",
  "os.environ.copy",
  "os.environ.get",
  "os.error",
  "os.getcwd",
  "os.getenv",
  "os.mkdir",
  "os.name",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.realpath",
  "os.path.supports_unicode_filenames",
  "os.pathsep.join",
  "os.remove",
  "os.stat",
  "os.umask",
  "os.unlink",
  "pandas",
  "pandas.Categorical",
  "pandas.Categorical.from_codes",
  "pandas.CategoricalIndex",
  "pandas.DataFrame",
  "pandas.DataFrame.from_dict",
  "pandas.DatetimeIndex",
  "pandas.Index",
  "pandas.Int32Dtype",
  "pandas.Int64Dtype",
  "pandas.MultiIndex.from_arrays",
  "pandas.MultiIndex.from_tuples",
  "pandas.NaT",
  "pandas.NaT.value",
  "pandas.PeriodDtype",
  "pandas.RangeIndex",
  "pandas.Series",
  "pandas.SparseArray",
  "pandas.Timedelta",
  "pandas.Timestamp",
  "pandas.Timestamp.now",
  "pandas.__version__",
  "pandas.array",
  "pandas.arrays.IntegerArray",
  "pandas.arrays.IntervalArray",
  "pandas.arrays.PeriodArray",
  "pandas.arrays.SparseArray",
  "pandas.concat",
  "pandas.core.arrays.integer._IntegerDtype",
  "pandas.core.internals.ExtensionBlock",
  "pandas.core.internals.IntBlock",
  "pandas.date_range",
  "pandas.interval_range",
  "pandas.isnull",
  "pandas.period_range",
  "pandas.read_csv",
  "pandas.read_json",
  "pandas.testing",
  "pandas.testing.assert_frame_equal",
  "pandas.testing.assert_series_equal",
  "pandas.to_datetime",
  "pandas.to_numeric",
  "pandas_examples.dataframe_with_arrays",
  "pandas_examples.dataframe_with_lists",
  "pickle.HIGHEST_PROTOCOL",
  "pickle.dumps",
  "pickle.loads",
  "psutil.Process",
  "put",
  "pyarrow.Array._import_from_c",
  "pyarrow.Array.from_buffers",
  "pyarrow.Array.from_pandas",
  "pyarrow.BooleanArray.from_buffers",
  "pyarrow.Codec.detect",
  "pyarrow.Codec.is_available",
  "pyarrow.DataType.__str__",
  "pyarrow.DataType._import_from_c",
  "pyarrow.DictionaryArray.from_arrays",
  "pyarrow.ExtensionArray.from_storage",
  "pyarrow.ExtensionType.__init__",
  "pyarrow.FixedSizeListArray.from_arrays",
  "pyarrow.LargeListArray.from_arrays",
  "pyarrow.ListArray.from_arrays",
  "pyarrow.MapArray.from_arrays",
  "pyarrow.MessageReader.open_stream",
  "pyarrow.MetadataVersion.V5",
  "pyarrow.PyExtensionType.__init__",
  "pyarrow.RecordBatch._import_from_c",
  "pyarrow.RecordBatch.from_arrays",
  "pyarrow.RecordBatch.from_pandas",
  "pyarrow.RecordBatch.from_struct_array",
  "pyarrow.Schema._import_from_c",
  "pyarrow.Schema.from_pandas",
  "pyarrow.SerializedPyObject.from_components",
  "pyarrow.SparseCOOTensor.from_dense_numpy",
  "pyarrow.SparseCOOTensor.from_numpy",
  "pyarrow.SparseCOOTensor.from_pydata_sparse",
  "pyarrow.SparseCOOTensor.from_scipy",
  "pyarrow.SparseCOOTensor.from_tensor",
  "pyarrow.SparseCSCMatrix.from_numpy",
  "pyarrow.SparseCSFTensor.from_dense_numpy",
  "pyarrow.SparseCSFTensor.from_numpy",
  "pyarrow.SparseCSFTensor.from_tensor",
  "pyarrow.SparseCSRMatrix.from_dense_numpy",
  "pyarrow.SparseCSRMatrix.from_numpy",
  "pyarrow.SparseCSRMatrix.from_scipy",
  "pyarrow.SparseCSRMatrix.from_tensor",
  "pyarrow.StringArray.from_buffers",
  "pyarrow.StructArray.from_arrays",
  "pyarrow.Table.from_arrays",
  "pyarrow.Table.from_batches",
  "pyarrow.Table.from_pandas",
  "pyarrow.Table.from_pydict",
  "pyarrow.Tensor.from_numpy",
  "pyarrow.UnionArray.from_dense",
  "pyarrow.UnionArray.from_sparse",
  "pyarrow.__file__",
  "pyarrow.cffi.ffi.cast",
  "pyarrow.cffi.ffi.new",
  "pyarrow.compute.__dict__.items",
  "pyarrow.compute.add",
  "pyarrow.compute.add.__doc__",
  "pyarrow.compute.and_kleene",
  "pyarrow.compute.equal",
  "pyarrow.compute.greater",
  "pyarrow.compute.greater_equal",
  "pyarrow.compute.invert",
  "pyarrow.compute.is_null",
  "pyarrow.compute.is_valid",
  "pyarrow.compute.less",
  "pyarrow.compute.less_equal",
  "pyarrow.compute.min_max",
  "pyarrow.compute.min_max.__doc__",
  "pyarrow.compute.multiply",
  "pyarrow.compute.not_equal",
  "pyarrow.compute.or_kleene",
  "pyarrow.compute.subtract",
  "pyarrow.compute.utf8_is_printable",
  "pyarrow.compute.variance",
  "pyarrow.compute.xor",
  "pyarrow.cpp_build_info.version_info",
  "pyarrow.cuda.IpcMemHandle.from_buffer",
  "pyarrow.dataset.DirectoryPartitioning.discover",
  "pyarrow.dataset.FileSystemDataset.from_paths",
  "pyarrow.dataset.HivePartitioning.discover",
  "pyarrow.dataset.Scanner.from_dataset",
  "pyarrow.flight.BasicAuth.deserialize",
  "pyarrow.flight.DescriptorType.CMD",
  "pyarrow.flight.FlightDescriptor.deserialize",
  "pyarrow.flight.FlightDescriptor.for_command",
  "pyarrow.flight.FlightDescriptor.for_path",
  "pyarrow.flight.FlightInfo.deserialize",
  "pyarrow.flight.FlightMethod.DO_ACTION",
  "pyarrow.flight.FlightMethod.DO_EXCHANGE",
  "pyarrow.flight.FlightMethod.DO_GET",
  "pyarrow.flight.FlightMethod.DO_PUT",
  "pyarrow.flight.FlightMethod.GET_FLIGHT_INFO",
  "pyarrow.flight.FlightMethod.GET_SCHEMA",
  "pyarrow.flight.FlightMethod.LIST_ACTIONS",
  "pyarrow.flight.FlightMethod.LIST_FLIGHTS",
  "pyarrow.flight.Location.for_grpc_tcp",
  "pyarrow.flight.Location.for_grpc_unix",
  "pyarrow.flight.Ticket.deserialize",
  "pyarrow.fs.FileSystem.from_uri",
  "pyarrow.fs.FileType.Directory",
  "pyarrow.fs.FileType.File",
  "pyarrow.fs.FileType.NotFound",
  "pyarrow.fs.FileType.Unknown",
  "pyarrow.fs.HadoopFileSystem.from_uri",
  "pyarrow.fs._path_join",
  "pyarrow.fs.create_dir",
  "pyarrow.fs.exists",
  "pyarrow.fs.mkdir",
  "pyarrow.fs.mode",
  "pyarrow.fs.open",
  "pyarrow.fs.open_output_stream",
  "pyarrow.fs.path",
  "pyarrow.fs.rm",
  "pyarrow.gandiva.TreeExprBuilder",
  "pyarrow.gandiva.get_registered_function_signatures",
  "pyarrow.gandiva.make_filter",
  "pyarrow.gandiva.make_projector",
  "pyarrow.ipc.MetadataVersion.V4",
  "pyarrow.ipc.MetadataVersion.V5",
  "pyarrow.ipc.RecordBatchReader._import_from_c",
  "pyarrow.ipc.RecordBatchReader.from_batches",
  "pyarrow.lib.Array",
  "pyarrow.lib.ArrowException",
  "pyarrow.lib.ArrowInvalid",
  "pyarrow.lib.ArrowNotImplementedError",
  "pyarrow.lib.ChunkedArray",
  "pyarrow.lib.Codec.is_available",
  "pyarrow.lib.DataType",
  "pyarrow.lib.Decimal128Type",
  "pyarrow.lib.DictionaryType",
  "pyarrow.lib.Field",
  "pyarrow.lib.FixedSizeBinaryType",
  "pyarrow.lib.FixedSizeListType",
  "pyarrow.lib.FloatArray",
  "pyarrow.lib.Int16Array",
  "pyarrow.lib.Int64Array",
  "pyarrow.lib.Int64Value",
  "pyarrow.lib.LargeListType",
  "pyarrow.lib.ListType",
  "pyarrow.lib.RecordBatch",
  "pyarrow.lib.Schema",
  "pyarrow.lib.SerializationContext",
  "pyarrow.lib.StringBuilder",
  "pyarrow.lib.StructType",
  "pyarrow.lib.Table",
  "pyarrow.lib.Time32Type",
  "pyarrow.lib.Time64Type",
  "pyarrow.lib.TimestampType",
  "pyarrow.lib.UnionMode_DENSE",
  "pyarrow.lib.UnionMode_SPARSE",
  "pyarrow.lib.UnionType",
  "pyarrow.lib.is_named_tuple",
  "pyarrow.lib.string_to_tzinfo",
  "pyarrow.lib.tobytes",
  "pyarrow.lib.tzinfo_to_string",
  "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
  "pyarrow.pandas_compat._pandas_api.get_rangeindex_attribute",
  "pyarrow.pandas_compat._pandas_api.has_sparse",
  "pyarrow.pandas_compat._pandas_api.have_pandas",
  "pyarrow.pandas_compat._pandas_api.is_data_frame",
  "pyarrow.tests.arrow_7980.cases",
  "pyarrow.tests.conftest.PyArrowConfig",
  "pyarrow.tests.conftest.defaults",
  "pyarrow.tests.conftest.groups",
  "pyarrow.tests.conftest.s3_connection",
  "pyarrow.tests.conftest.tempdir",
  "pyarrow.tests.deserialize_buffer.data",
  "pyarrow.tests.strategies._default_array_sizes",
  "pyarrow.tests.strategies._pylist",
  "pyarrow.tests.strategies._pymap",
  "pyarrow.tests.strategies.all_arrays",
  "pyarrow.tests.strategies.all_chunked_arrays",
  "pyarrow.tests.strategies.all_fields",
  "pyarrow.tests.strategies.all_record_batches",
  "pyarrow.tests.strategies.all_schemas",
  "pyarrow.tests.strategies.all_tables",
  "pyarrow.tests.strategies.all_types",
  "pyarrow.tests.strategies.arrays",
  "pyarrow.tests.strategies.binary_like_types",
  "pyarrow.tests.strategies.binary_type",
  "pyarrow.tests.strategies.bool_type",
  "pyarrow.tests.strategies.chunked_arrays",
  "pyarrow.tests.strategies.custom_text",
  "pyarrow.tests.strategies.date_types",
  "pyarrow.tests.strategies.decimal_type",
  "pyarrow.tests.strategies.dictionary_types",
  "pyarrow.tests.strategies.duration_types",
  "pyarrow.tests.strategies.fields",
  "pyarrow.tests.strategies.fixed_size_binary_type",
  "pyarrow.tests.strategies.floating_types",
  "pyarrow.tests.strategies.integer_types",
  "pyarrow.tests.strategies.large_binary_type",
  "pyarrow.tests.strategies.large_string_type",
  "pyarrow.tests.strategies.list_types",
  "pyarrow.tests.strategies.map_types",
  "pyarrow.tests.strategies.metadata",
  "pyarrow.tests.strategies.null_type",
  "pyarrow.tests.strategies.numeric_types",
  "pyarrow.tests.strategies.pandas_compatible_dictionary_value_types",
  "pyarrow.tests.strategies.pandas_compatible_list_types",
  "pyarrow.tests.strategies.pandas_compatible_primitive_types",
  "pyarrow.tests.strategies.pandas_compatible_types",
  "pyarrow.tests.strategies.primitive_types",
  "pyarrow.tests.strategies.record_batches",
  "pyarrow.tests.strategies.schemas",
  "pyarrow.tests.strategies.signed_integer_types",
  "pyarrow.tests.strategies.string_type",
  "pyarrow.tests.strategies.struct_types",
  "pyarrow.tests.strategies.tables",
  "pyarrow.tests.strategies.temporal_types",
  "pyarrow.tests.strategies.time_types",
  "pyarrow.tests.strategies.timestamp_types",
  "pyarrow.tests.strategies.unsigned_integer_types",
  "pyarrow.tests.test_array._check_cast_case",
  "pyarrow.tests.test_array.pickle",
  "pyarrow.tests.test_array.pickle5",
  "pyarrow.tests.test_array.pickle_test_parametrize",
  "pyarrow.tests.test_cffi._export_import_batch_reader",
  "pyarrow.tests.test_cffi.assert_array_released",
  "pyarrow.tests.test_cffi.assert_schema_released",
  "pyarrow.tests.test_cffi.assert_stream_released",
  "pyarrow.tests.test_cffi.make_batch",
  "pyarrow.tests.test_cffi.make_batches",
  "pyarrow.tests.test_cffi.make_ipc_stream_reader",
  "pyarrow.tests.test_cffi.make_py_record_batch_reader",
  "pyarrow.tests.test_cffi.make_schema",
  "pyarrow.tests.test_cffi.make_serialized",
  "pyarrow.tests.test_cffi.needs_cffi",
  "pyarrow.tests.test_compute._check_get_function",
  "pyarrow.tests.test_compute.all_array_types",
  "pyarrow.tests.test_compute.codepoints_ignore",
  "pyarrow.tests.test_compute.digit_info_missing",
  "pyarrow.tests.test_compute.exported_functions",
  "pyarrow.tests.test_compute.find_new_unicode_codepoints",
  "pyarrow.tests.test_compute.numeric_info_missing",
  "pyarrow.tests.test_compute.numerical_arrow_types",
  "pyarrow.tests.test_compute.unknown_issue_is_alpha",
  "pyarrow.tests.test_compute.utf8proc_issue_is_lower",
  "pyarrow.tests.test_convert_builtin.MyBrokenInt",
  "pyarrow.tests.test_convert_builtin.MyDate",
  "pyarrow.tests.test_convert_builtin.MyDatetime",
  "pyarrow.tests.test_convert_builtin.MyInt",
  "pyarrow.tests.test_convert_builtin.MyTimedelta",
  "pyarrow.tests.test_convert_builtin.StrangeIterable",
  "pyarrow.tests.test_convert_builtin._as_deque",
  "pyarrow.tests.test_convert_builtin._as_dict_values",
  "pyarrow.tests.test_convert_builtin._as_list",
  "pyarrow.tests.test_convert_builtin._as_numpy_array",
  "pyarrow.tests.test_convert_builtin._as_tuple",
  "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes",
  "pyarrow.tests.test_convert_builtin.check_struct_type",
  "pyarrow.tests.test_convert_builtin.int_type_pairs",
  "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
  "pyarrow.tests.test_csv.BaseTestCSVRead",
  "pyarrow.tests.test_csv.BaseTestCompressedCSVRead",
  "pyarrow.tests.test_csv.BaseTestStreamingCSVRead",
  "pyarrow.tests.test_csv.check_options_class",
  "pyarrow.tests.test_csv.check_options_class_pickling",
  "pyarrow.tests.test_csv.generate_col_names",
  "pyarrow.tests.test_csv.make_empty_csv",
  "pyarrow.tests.test_csv.make_random_csv",
  "pyarrow.tests.test_cuda.cuda",
  "pyarrow.tests.test_cuda.cuda_ipc",
  "pyarrow.tests.test_cuda.global_context",
  "pyarrow.tests.test_cuda.global_context1",
  "pyarrow.tests.test_cuda.has_ipc_support",
  "pyarrow.tests.test_cuda.make_random_buffer",
  "pyarrow.tests.test_cuda.make_recordbatch",
  "pyarrow.tests.test_cuda.make_table",
  "pyarrow.tests.test_cuda.other_process_for_test_IPC",
  "pyarrow.tests.test_cuda.platform",
  "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
  "pyarrow.tests.test_cuda_numba_interop.context_choices",
  "pyarrow.tests.test_cuda_numba_interop.cuda",
  "pyarrow.tests.test_cuda_numba_interop.dtypes",
  "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
  "pyarrow.tests.test_cuda_numba_interop.nb_cuda",
  "pyarrow.tests.test_cython.here",
  "pyarrow.tests.test_cython.setup_template",
  "pyarrow.tests.test_dataset._check_dataset",
  "pyarrow.tests.test_dataset._check_dataset_from_path",
  "pyarrow.tests.test_dataset._check_dataset_roundtrip",
  "pyarrow.tests.test_dataset._create_dataset_all_types",
  "pyarrow.tests.test_dataset._create_dataset_for_fragments",
  "pyarrow.tests.test_dataset._create_directory_of_files",
  "pyarrow.tests.test_dataset._create_metadata_file",
  "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned",
  "pyarrow.tests.test_dataset._create_parquet_dataset_simple",
  "pyarrow.tests.test_dataset._create_single_file",
  "pyarrow.tests.test_dataset._filesystem_uri",
  "pyarrow.tests.test_dataset._generate_data",
  "pyarrow.tests.test_dataset._table_from_pandas",
  "pyarrow.tests.test_dataset.dataset",
  "pyarrow.tests.test_dataset.mockfs",
  "pyarrow.tests.test_dataset.multisourcefs",
  "pyarrow.tests.test_dataset.open_logging_fs",
  "pyarrow.tests.test_dataset.s3_example_simple",
  "pyarrow.tests.test_extension_type.IntegerType",
  "pyarrow.tests.test_extension_type.MyListType",
  "pyarrow.tests.test_extension_type.MyStructType",
  "pyarrow.tests.test_extension_type.ParamExtType",
  "pyarrow.tests.test_extension_type.PeriodArray",
  "pyarrow.tests.test_extension_type.PeriodType",
  "pyarrow.tests.test_extension_type.PeriodTypeWithClass",
  "pyarrow.tests.test_extension_type.UuidType",
  "pyarrow.tests.test_extension_type.check_example_batch",
  "pyarrow.tests.test_extension_type.example_batch",
  "pyarrow.tests.test_extension_type.ipc_read_batch",
  "pyarrow.tests.test_extension_type.ipc_write_batch",
  "pyarrow.tests.test_extension_type.registered_period_type",
  "pyarrow.tests.test_feather.TEST_FILES",
  "pyarrow.tests.test_feather._assert_error_on_write",
  "pyarrow.tests.test_feather._check_arrow_roundtrip",
  "pyarrow.tests.test_feather._check_pandas_roundtrip",
  "pyarrow.tests.test_feather.compression",
  "pyarrow.tests.test_feather.random_path",
  "pyarrow.tests.test_feather.version",
  "pyarrow.tests.test_flight.CheckTicketFlightServer",
  "pyarrow.tests.test_flight.ConstantFlightServer",
  "pyarrow.tests.test_flight.ConvenienceServer",
  "pyarrow.tests.test_flight.EchoFlightServer",
  "pyarrow.tests.test_flight.EchoStreamFlightServer",
  "pyarrow.tests.test_flight.ErrorFlightServer",
  "pyarrow.tests.test_flight.ExchangeFlightServer",
  "pyarrow.tests.test_flight.GetInfoFlightServer",
  "pyarrow.tests.test_flight.HeaderFlightServer",
  "pyarrow.tests.test_flight.HeaderServerMiddleware",
  "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory",
  "pyarrow.tests.test_flight.HttpBasicClientAuthHandler",
  "pyarrow.tests.test_flight.HttpBasicServerAuthHandler",
  "pyarrow.tests.test_flight.InvalidStreamFlightServer",
  "pyarrow.tests.test_flight.ListActionsErrorFlightServer",
  "pyarrow.tests.test_flight.ListActionsFlightServer",
  "pyarrow.tests.test_flight.MetadataFlightServer",
  "pyarrow.tests.test_flight.MultiHeaderClientMiddleware",
  "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory",
  "pyarrow.tests.test_flight.MultiHeaderFlightServer",
  "pyarrow.tests.test_flight.MultiHeaderServerMiddleware",
  "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory",
  "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory",
  "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory",
  "pyarrow.tests.test_flight.SelectiveAuthClientMiddleware",
  "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory",
  "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory",
  "pyarrow.tests.test_flight.SlowFlightServer",
  "pyarrow.tests.test_flight.TokenClientAuthHandler",
  "pyarrow.tests.test_flight.TokenServerAuthHandler",
  "pyarrow.tests.test_flight.basic_auth_handler",
  "pyarrow.tests.test_flight.example_tls_certs",
  "pyarrow.tests.test_flight.pyarrow.flight",
  "pyarrow.tests.test_flight.read_flight_resource",
  "pyarrow.tests.test_flight.resource_root",
  "pyarrow.tests.test_flight.simple_dicts_table",
  "pyarrow.tests.test_flight.simple_ints_table",
  "pyarrow.tests.test_flight.token_auth_handler",
  "pyarrow.tests.test_fs.DummyHandler",
  "pyarrow.tests.test_fs.ProxyHandler",
  "pyarrow.tests.test_fs._check_root_dir_contents",
  "pyarrow.tests.test_fs.allow_append_to_file",
  "pyarrow.tests.test_fs.allow_copy_file",
  "pyarrow.tests.test_fs.allow_move_dir",
  "pyarrow.tests.test_fs.check_mtime",
  "pyarrow.tests.test_fs.check_mtime_absent",
  "pyarrow.tests.test_fs.check_mtime_or_absent",
  "pyarrow.tests.test_fs.filesystem_config",
  "pyarrow.tests.test_fs.fs",
  "pyarrow.tests.test_fs.hdfs",
  "pyarrow.tests.test_fs.identity",
  "pyarrow.tests.test_fs.localfs",
  "pyarrow.tests.test_fs.mockfs",
  "pyarrow.tests.test_fs.pathfn",
  "pyarrow.tests.test_fs.py_mockfs",
  "pyarrow.tests.test_fs.s3fs",
  "pyarrow.tests.test_fs.skip_fsspec_s3fs",
  "pyarrow.tests.test_hdfs.HdfsTestCases",
  "pyarrow.tests.test_hdfs._get_hdfs_uri",
  "pyarrow.tests.test_hdfs.hdfs_test_client",
  "pyarrow.tests.test_io._check_native_file_reader",
  "pyarrow.tests.test_io._try_delete",
  "pyarrow.tests.test_io.assert_file_not_found",
  "pyarrow.tests.test_io.check_compressed_concatenated",
  "pyarrow.tests.test_io.check_compressed_input",
  "pyarrow.tests.test_io.check_large_seeks",
  "pyarrow.tests.test_io.check_transcoding",
  "pyarrow.tests.test_io.make_compressed_output",
  "pyarrow.tests.test_io.sample_disk_data",
  "pyarrow.tests.test_io.unicode_transcoding_example",
  "pyarrow.tests.test_ipc.FileFormatFixture",
  "pyarrow.tests.test_ipc.IpcFixture",
  "pyarrow.tests.test_ipc.SocketStreamFixture",
  "pyarrow.tests.test_ipc.StreamFormatFixture",
  "pyarrow.tests.test_ipc.StreamReaderServer",
  "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip",
  "pyarrow.tests.test_ipc.example_messages",
  "pyarrow.tests.test_ipc.file_fixture",
  "pyarrow.tests.test_ipc.read_file",
  "pyarrow.tests.test_ipc.socket_fixture",
  "pyarrow.tests.test_ipc.stream_fixture",
  "pyarrow.tests.test_ipc.write_file",
  "pyarrow.tests.test_json.BaseTestJSONRead",
  "pyarrow.tests.test_json.generate_col_names",
  "pyarrow.tests.test_json.make_random_json",
  "pyarrow.tests.test_jvm._jvm_field",
  "pyarrow.tests.test_jvm._jvm_schema",
  "pyarrow.tests.test_jvm._string_to_varchar_holder",
  "pyarrow.tests.test_jvm.jpype",
  "pyarrow.tests.test_jvm.root_allocator",
  "pyarrow.tests.test_memory.allocate_bytes",
  "pyarrow.tests.test_memory.check_allocated_bytes",
  "pyarrow.tests.test_orc.check_example_file",
  "pyarrow.tests.test_orc.check_example_values",
  "pyarrow.tests.test_orc.datadir",
  "pyarrow.tests.test_orc.fix_example_values",
  "pyarrow.tests.test_pandas.DummyExtensionType",
  "pyarrow.tests.test_pandas.MyCustomIntegerType",
  "pyarrow.tests.test_pandas.PandasArray__arrow_array__",
  "pyarrow.tests.test_pandas._Int64Dtype__from_arrow__",
  "pyarrow.tests.test_pandas._alltypes_example",
  "pyarrow.tests.test_pandas._assert_nunique",
  "pyarrow.tests.test_pandas._check_array_from_pandas_roundtrip",
  "pyarrow.tests.test_pandas._check_array_roundtrip",
  "pyarrow.tests.test_pandas._check_blocks_created",
  "pyarrow.tests.test_pandas._check_pandas_roundtrip",
  "pyarrow.tests.test_pandas._check_serialize_components_roundtrip",
  "pyarrow.tests.test_pandas._check_series_roundtrip",
  "pyarrow.tests.test_pandas._check_to_pandas_memory_unchanged",
  "pyarrow.tests.test_pandas._fully_loaded_dataframe_example",
  "pyarrow.tests.test_pandas._generate_dedup_example",
  "pyarrow.tests.test_pandas._non_threaded_conversion",
  "pyarrow.tests.test_pandas._pytime_to_micros",
  "pyarrow.tests.test_pandas._threaded_conversion",
  "pyarrow.tests.test_pandas.make_df_with_timestamps",
  "pyarrow.tests.test_pandas.random_strings",
  "pyarrow.tests.test_parquet._assert_dataset_is_picklable",
  "pyarrow.tests.test_parquet._assert_dataset_paths",
  "pyarrow.tests.test_parquet._check_roundtrip",
  "pyarrow.tests.test_parquet._close",
  "pyarrow.tests.test_parquet._filter_partition",
  "pyarrow.tests.test_parquet._generate_partition_directories",
  "pyarrow.tests.test_parquet._make_dataset_for_pickling",
  "pyarrow.tests.test_parquet._make_example_multifile_dataset",
  "pyarrow.tests.test_parquet._partition_test_for_filesystem",
  "pyarrow.tests.test_parquet._random_integers",
  "pyarrow.tests.test_parquet._read_table",
  "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe",
  "pyarrow.tests.test_parquet._roundtrip_table",
  "pyarrow.tests.test_parquet._simple_table_roundtrip",
  "pyarrow.tests.test_parquet._simple_table_write_read",
  "pyarrow.tests.test_parquet._test_dataframe",
  "pyarrow.tests.test_parquet._test_read_common_metadata_files",
  "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
  "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
  "pyarrow.tests.test_parquet._write_table",
  "pyarrow.tests.test_parquet.alltypes_sample",
  "pyarrow.tests.test_parquet.datadir",
  "pyarrow.tests.test_parquet.make_sample_file",
  "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
  "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed",
  "pyarrow.tests.test_parquet.parametrize_legacy_dataset_not_supported",
  "pyarrow.tests.test_parquet.pickle",
  "pyarrow.tests.test_parquet.s3_bucket",
  "pyarrow.tests.test_parquet.s3_example_fs",
  "pyarrow.tests.test_parquet.s3_example_s3fs",
  "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
  "pyarrow.tests.test_plasma.EXTERNAL_STORE",
  "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE",
  "pyarrow.tests.test_plasma.USE_VALGRIND",
  "pyarrow.tests.test_plasma.create_object",
  "pyarrow.tests.test_plasma.create_object_with_id",
  "pyarrow.tests.test_plasma.generate_metadata",
  "pyarrow.tests.test_plasma.random_object_id",
  "pyarrow.tests.test_plasma.write_to_data_buffer",
  "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype",
  "pyarrow.tests.test_serialization.Bar",
  "pyarrow.tests.test_serialization.Baz",
  "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
  "pyarrow.tests.test_serialization.CUSTOM_OBJECTS",
  "pyarrow.tests.test_serialization.CustomError",
  "pyarrow.tests.test_serialization.Foo",
  "pyarrow.tests.test_serialization.NamedTupleExample",
  "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
  "pyarrow.tests.test_serialization.Point",
  "pyarrow.tests.test_serialization.Qux",
  "pyarrow.tests.test_serialization.Serializable",
  "pyarrow.tests.test_serialization.SerializableClass",
  "pyarrow.tests.test_serialization.SubQux",
  "pyarrow.tests.test_serialization.SubQuxPickle",
  "pyarrow.tests.test_serialization._check_component_roundtrip",
  "pyarrow.tests.test_serialization.assert_equal",
  "pyarrow.tests.test_serialization.deserialize_regex",
  "pyarrow.tests.test_serialization.deserialize_serializable",
  "pyarrow.tests.test_serialization.global_serialization_context",
  "pyarrow.tests.test_serialization.index_types",
  "pyarrow.tests.test_serialization.large_buffer",
  "pyarrow.tests.test_serialization.large_memory_map",
  "pyarrow.tests.test_serialization.make_serialization_context",
  "pyarrow.tests.test_serialization.serialization_roundtrip",
  "pyarrow.tests.test_serialization.serialize_serializable",
  "pyarrow.tests.test_serialization.sparse",
  "pyarrow.tests.test_serialization.tensor_types",
  "pyarrow.tests.test_serialization.torch",
  "pyarrow.tests.test_sparse_tensor.sparse",
  "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
  "pyarrow.tests.test_table._table_like_slice_tests",
  "pyarrow.tests.test_tensor.tensor_type_pairs",
  "pyarrow.tests.test_types.get_many_types",
  "pyarrow.tests.util.change_cwd",
  "pyarrow.tests.util.changed_environ",
  "pyarrow.tests.util.get_modified_env_with_pythonpath",
  "pyarrow.tests.util.invoke_script",
  "pyarrow.tests.util.make_dataframe",
  "pyarrow.tests.util.memory_leak_check",
  "pyarrow.tests.util.randdecimal",
  "pyarrow.tests.util.random_ascii",
  "pyarrow.tests.util.random_seed",
  "pyarrow.tests.util.rands",
  "pyarrow.util.pathlib.Path",
  "pytest.approx",
  "pytest.fail",
  "pytest.fixture",
  "pytest.importorskip",
  "pytest.lazy_fixture",
  "pytest.mark.cython",
  "pytest.mark.dataset",
  "pytest.mark.fastparquet",
  "pytest.mark.filterwarnings",
  "pytest.mark.flight",
  "pytest.mark.gandiva",
  "pytest.mark.hdfs",
  "pytest.mark.large_memory",
  "pytest.mark.memory_leak",
  "pytest.mark.nopandas",
  "pytest.mark.orc",
  "pytest.mark.pandas",
  "pytest.mark.parametrize",
  "pytest.mark.parquet",
  "pytest.mark.plasma",
  "pytest.mark.requires_testing_data",
  "pytest.mark.s3",
  "pytest.mark.skip",
  "pytest.mark.skipif",
  "pytest.mark.slow",
  "pytest.mark.tensorflow",
  "pytest.mark.xfail",
  "pytest.param",
  "pytest.raises",
  "pytest.skip",
  "pytest.warns",
  "pytest.xfail",
  "pytest.yield_fixture",
  "pytz.utc",
  "pytz.utc.localize",
  "random.choice",
  "random.getstate",
  "random.randint",
  "random.seed",
  "random.setstate",
  "re.compile",
  "read_multiple_files",
  "ref",
  "schema_cls",
  "scipy.sparse.coo_matrix",
  "scipy.sparse.csc_matrix",
  "scipy.sparse.csr_matrix",
  "shutil.copyfile",
  "shutil.rmtree",
  "signal.SIGTERM",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "socket.socket",
  "string.ascii_letters",
  "string.ascii_lowercase",
  "string.ascii_uppercase",
  "string.digits",
  "string.printable",
  "struct.pack",
  "struct.unpack",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.check_call",
  "subprocess.check_output",
  "sys.argv",
  "sys.executable",
  "sys.getrefcount",
  "sys.getsizeof",
  "sys.maxsize",
  "sys.modules",
  "sys.path",
  "sys.path.insert",
  "sys.platform",
  "sys.version_info",
  "sysconfig.get_platform",
  "tempfile.NamedTemporaryFile",
  "tempfile.TemporaryDirectory",
  "tempfile.mkdtemp",
  "tempfile.mktemp",
  "tensorflow",
  "test_fs.ProxyHandler",
  "test_writes",
  "textwrap.dedent",
  "threading.Event",
  "threading.Lock",
  "threading.Thread",
  "time",
  "time.sleep",
  "time.thread_time",
  "time.time",
  "traceback.format_exc",
  "truncate",
  "unittest.TestCase",
  "weakref.ref",
  "wr",
  "xml.etree.ElementTree.parse"
 ],
 "deps": {
  "A": [],
  "BufferClass": [],
  "BuggyTimezone1": [],
  "BuggyTimezone2": [],
  "BuggyTimezone3": [],
  "ClassA": [],
  "CorrectTimezone1": [],
  "CorrectTimezone2": [],
  "CustomClass": [],
  "CustomFS": [],
  "CustomNDArray": [],
  "CustomType": [],
  "DuckReader": [],
  "DuckWriter": [],
  "DummyClass": [],
  "FromPlasma": [],
  "MyArray": [],
  "MyArray2": [],
  "MyArrayInvalid": [],
  "MyDate": [],
  "MyDatetime": [],
  "MyObj": [],
  "MyObject": [],
  "Path": [],
  "SubFoo": [],
  "TempClass": [],
  "ToPlasma": [],
  "_check": [],
  "_check_case": [],
  "_check_series": [],
  "_check_type": [],
  "_get_use": [],
  "_leak_check": [],
  "_make_table": [],
  "_visit_level": [],
  "allocate": [],
  "arrow_func": [],
  "assert_create_raises_plasma_full": [],
  "assert_opens": [],
  "assert_yields_projected": [],
  "ast": [],
  "base64": [],
  "bool_env": [],
  "bz2": [],
  "check": [],
  "check_data": [],
  "check_fields": [],
  "check_one_batch": [],
  "check_result": [],
  "clock": [],
  "cls": [],
  "collections": [],
  "con": [],
  "contextlib": [],
  "date": [],
  "datetime": [],
  "decimal": [],
  "deserialize_or_output": [],
  "dict_type": [],
  "distutils": [],
  "dt": [],
  "dt_ms": [],
  "dt_s": [],
  "dt_us": [],
  "eq": [],
  "expected_datetime_value": [],
  "expected_time_value": [],
  "f32": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.10.0-py_0"
  ],
  "filter": [],
  "format": [],
  "func": [],
  "functools": [],
  "gc": [],
  "get_buffer": [],
  "gzip": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.1.2-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.23.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.23.6-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.27.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.28.0-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.1-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-5.4.2-py_0",
   "hypothesis/conda-forge/noarch/hypothesis-6.0.0-pyhd8ed1ab_0"
  ],
  "illegal_assignment": [],
  "io": [],
  "is_pickleable": [],
  "iter_chunked_array": [],
  "itertools": [],
  "java": [],
  "json": [],
  "jvm_vsr": [],
  "klass": [],
  "list_type_factory": [],
  "make_batches": [],
  "make_buffer": [],
  "make_schema": [],
  "math": [],
  "multiprocessing": [],
  "ne": [],
  "normalized": [],
  "np_scalar": [],
  "numba": [],
  "numpy": [],
  "object": [],
  "os": [],
  "pandas": [],
  "pandas_examples": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1"
  ],
  "pickle": [],
  "psutil": [],
  "put": [],
  "pyarrow": [
   "pyarrow/conda-forge/linux-64/pyarrow-2.0.0-py37h4aec6bf_9_cpu"
  ],
  "pytest": [],
  "pytz": [
   "pytz/conda-forge/noarch/pytz-2019.2-py_0"
  ],
  "random": [],
  "re": [],
  "read_multiple_files": [],
  "ref": [],
  "schema_cls": [],
  "scipy": [],
  "shutil": [],
  "signal": [],
  "socket": [],
  "string": [],
  "struct": [],
  "subprocess": [],
  "sys": [],
  "sysconfig": [],
  "tempfile": [],
  "tensorflow": [],
  "test_fs": [],
  "test_writes": [],
  "textwrap": [],
  "threading": [],
  "time": [],
  "traceback": [],
  "truncate": [],
  "unittest": [],
  "weakref": [],
  "wr": [],
  "xml": []
 }
}