{
 "bad": [
  "AddImageInput",
  "Apply",
  "Assert",
  "Assign",
  "Attribute",
  "AugAssign",
  "BinOp",
  "Const",
  "DLFCN",
  "Decl",
  "Def",
  "Do",
  "ExprStmt",
  "FalseLiteral",
  "For",
  "GetLoss",
  "GetNetName",
  "GetValue",
  "Ident",
  "If",
  "ListLiteral",
  "LiveRange",
  "ModuleRegister.constructTrainerClass",
  "ModuleRegister.getClassFromModule",
  "ModuleRegister.getModule",
  "ModuleRegister.overrideAdditionalMethods",
  "ModuleRegister.registerModuleMap",
  "Net",
  "NoneLiteral",
  "Output",
  "Parallelize",
  "Parallelize_BMUF",
  "Param",
  "Pass",
  "Queue",
  "Queue.Empty",
  "Queue.Queue",
  "Queue.get",
  "Raise",
  "ReduceOp.SUM",
  "Return",
  "RowwiseQuantized8BitsWeight",
  "S",
  "ScriptModule",
  "Select",
  "SliceExpr",
  "Starred",
  "StringIO",
  "StringIO.StringIO",
  "StringLiteral",
  "Subclass",
  "Subscript",
  "Task",
  "Task.current",
  "TernaryIf",
  "TrueLiteral",
  "TupleLiteral",
  "UnaryOp",
  "Var",
  "While",
  "_AddBarrierToModelNets",
  "_AddGradientOperators",
  "_AllReduceBlobs",
  "_BroadcastComputedParamsSingleHost",
  "_ComputeBlobsToSync",
  "_CreateOrCloneCommonWorld",
  "_GroupByDevice",
  "_InferBlobDevice",
  "_IsGPUBlob",
  "_LoadTest",
  "_OptimizeGradientMemorySimple",
  "_ReporterBuilder",
  "_RunWhileNet",
  "_SetupBuilder",
  "_SetupBuilder.EXIT",
  "_SetupBuilder.INIT",
  "_SyncAllParams",
  "_VF.alpha_dropout",
  "_VF.alpha_dropout_",
  "_VF.constant_pad_nd",
  "_VF.dropout",
  "_VF.dropout_",
  "_VF.feature_alpha_dropout",
  "_VF.feature_alpha_dropout_",
  "_VF.feature_dropout",
  "_VF.feature_dropout_",
  "_VF.threshold",
  "_VF.threshold_",
  "_ValidateParams",
  "__builtin__",
  "__name__.split",
  "_all_functions.append",
  "_arc_cosine_hypothesis_test",
  "_cast_Int",
  "_check_container_source",
  "_check_param_device",
  "_check_size_scale_factor",
  "_cpuReduce",
  "_create_model",
  "_device_pid",
  "_env_error",
  "_error",
  "_find_best",
  "_find_factor_simple",
  "_find_tensor_input_op",
  "_functions.Broadcast.apply",
  "_functions.Gather.apply",
  "_functions.Scatter.apply",
  "_functions.thnn._all_functions",
  "_functions.thnn.fold.Col2Im.apply",
  "_functions.thnn.fold.Im2Col.apply",
  "_functions.vision.affine_grid_generator",
  "_g",
  "_gen_new_name",
  "_gen_subgradient_pass",
  "_gen_subnet_gradient",
  "_generate_data",
  "_get_async_or_non_blocking",
  "_get_build_directory",
  "_get_compatible_prev",
  "_get_device_properties",
  "_get_height",
  "_get_max_live",
  "_get_net_argument",
  "_get_output_with_grad_names",
  "_get_sorted_leaves",
  "_gpuReduce",
  "_impl",
  "_initialize_buffers",
  "_is_cuda_file",
  "_is_value",
  "_iter",
  "_jit_compile",
  "_jit_internal._boolean_dispatched.get",
  "_jit_internal._compiled_weak_fns.get",
  "_jit_internal._weak_modules.get",
  "_jit_internal._weak_types.get",
  "_join_cuda_home",
  "_map",
  "_next_available_idx",
  "_output_size",
  "_pipe_step",
  "_process_batch",
  "_reduction.get_enum",
  "_reduction.legacy_get_enum",
  "_reduction.legacy_get_string",
  "_rff_hypothesis_test",
  "_rnn_full",
  "_rnn_packed",
  "_semi_random_hypothesis_test",
  "_test_backward_pass",
  "_test_forward_pass",
  "_test_reshape",
  "_unravel_index",
  "_update_range",
  "_v",
  "_v_prev",
  "_verify_bn_outputs",
  "_worker",
  "ac_output",
  "acc_grad_parameters_fn",
  "adagrad",
  "add_arg",
  "add_edge",
  "add_fusion_group",
  "add_graph_executor",
  "add_node",
  "add_op",
  "add_ops",
  "adjusted_time",
  "all_finite_value",
  "allreduce",
  "ann_to_type",
  "append",
  "array_type",
  "as_ann",
  "ast.Add",
  "ast.And",
  "ast.AnnAssign",
  "ast.Assert",
  "ast.AsyncFor",
  "ast.AsyncFunctionDef",
  "ast.AsyncWith",
  "ast.BitAnd",
  "ast.BitOr",
  "ast.BitXor",
  "ast.Break",
  "ast.ClassDef",
  "ast.Continue",
  "ast.Delete",
  "ast.Div",
  "ast.Eq",
  "ast.Exec",
  "ast.ExtSlice",
  "ast.FloorDiv",
  "ast.For",
  "ast.FunctionDef",
  "ast.Global",
  "ast.Gt",
  "ast.GtE",
  "ast.Import",
  "ast.ImportFrom",
  "ast.Index",
  "ast.Is",
  "ast.IsNot",
  "ast.List",
  "ast.Lt",
  "ast.LtE",
  "ast.MatMult",
  "ast.Mod",
  "ast.Mult",
  "ast.Nonlocal",
  "ast.Not",
  "ast.NotEq",
  "ast.Or",
  "ast.Pow",
  "ast.Print",
  "ast.Raise",
  "ast.Slice",
  "ast.Sub",
  "ast.Try",
  "ast.TryExcept",
  "ast.TryFinally",
  "ast.Tuple",
  "ast.USub",
  "ast.With",
  "atexit",
  "atexit.register",
  "auto_double_backwards.double_backwards_fns.get",
  "auto_symbolic.symbolic_fns.get",
  "bisect_percentile_op_ref",
  "broadcast",
  "build_ExtSlice",
  "build_Index",
  "build_SliceExpr",
  "build_expr",
  "builtins",
  "builtins.bytes",
  "cPickle",
  "cPickle.HIGHEST_PROTOCOL",
  "cPickle.dump",
  "cPickle.load",
  "caffe.proto.caffe_pb2.LRNParameter.ACROSS_CHANNELS",
  "caffe.proto.caffe_pb2.Pooling3DParameter.AVE",
  "caffe.proto.caffe_pb2.Pooling3DParameter.MAX",
  "caffe.proto.caffe_pb2.PoolingParameter.AVE",
  "caffe.proto.caffe_pb2.PoolingParameter.MAX",
  "caffe.proto.caffe_pb2.ReductionParameter.MEAN",
  "caffe.proto.caffe_pb2.ReductionParameter.SUM",
  "caffe2.proto.caffe2_pb2.COMPILE_TIME_MAX_DEVICE_TYPES",
  "caffe2.proto.caffe2_pb2.CPU",
  "caffe2.proto.caffe2_pb2.CPU.intersection",
  "caffe2.proto.caffe2_pb2.CUDA",
  "caffe2.proto.caffe2_pb2.HIP",
  "caffe2.proto.caffe2_pb2.IDEEP",
  "caffe2.proto.caffe2_pb2.MKLDNN",
  "caffe2.proto.caffe2_pb2.ONLY_FOR_TEST",
  "caffe2.proto.caffe2_pb2.OPENCL",
  "caffe2.proto.caffe2_pb2.OPENGL",
  "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
  "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
  "caffe2.proto.caffe2_pb2.TensorProto.DataType.Name",
  "caffe2.proto.caffe2_pb2.TensorProto.DataType.items",
  "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
  "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
  "caffe2.proto.caffe2_pb2.TensorProto.INT16",
  "caffe2.proto.caffe2_pb2.TensorProto.INT32",
  "caffe2.proto.caffe2_pb2.TensorProto.INT64",
  "caffe2.proto.caffe2_pb2.TensorProto.INT8",
  "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
  "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
  "caffe2.python.__init__.dll_paths",
  "caffe2.python.__init__.get_nvToolsExt_path",
  "caffe2.python.__init__.py_dll_path",
  "caffe2.python.__init__.th_dll_path",
  "caffe2.python.__init__.th_root",
  "caffe2.python._import_c_extension.Annotation",
  "caffe2.python._import_c_extension.Blob.feed",
  "caffe2.python._import_c_extension.Caffe2Backend",
  "caffe2.python._import_c_extension.DummyName",
  "caffe2.python._import_c_extension.GradientWrapper",
  "caffe2.python._import_c_extension.Graph",
  "caffe2.python._import_c_extension.NNMatchGraph",
  "caffe2.python._import_c_extension.NNSubgraph",
  "caffe2.python._import_c_extension.NeuralNetData",
  "caffe2.python._import_c_extension.NeuralNetOperator",
  "caffe2.python._import_c_extension.Predictor",
  "caffe2.python._import_c_extension.Workspace",
  "caffe2.python._import_c_extension.Workspace.current",
  "caffe2.python._import_c_extension.Workspace.current._last_failed_op_net_position",
  "caffe2.python._import_c_extension.Workspace.fetch_int8_blob",
  "caffe2.python._import_c_extension.add_observer_to_net",
  "caffe2.python._import_c_extension.apply_transform",
  "caffe2.python._import_c_extension.apply_transform_if_faster",
  "caffe2.python._import_c_extension.benchmark_net",
  "caffe2.python._import_c_extension.blobs",
  "caffe2.python._import_c_extension.create_blob",
  "caffe2.python._import_c_extension.create_net",
  "caffe2.python._import_c_extension.cudnn_convolution_bwd_data_algo_count",
  "caffe2.python._import_c_extension.cudnn_convolution_bwd_filter_algo_count",
  "caffe2.python._import_c_extension.cudnn_convolution_fwd_algo_count",
  "caffe2.python._import_c_extension.current_workspace",
  "caffe2.python._import_c_extension.define_caffe2_no_operator_schema",
  "caffe2.python._import_c_extension.deserialize_blob",
  "caffe2.python._import_c_extension.export_to_onnx",
  "caffe2.python._import_c_extension.fetch_blob",
  "caffe2.python._import_c_extension.get_blob_numa_node",
  "caffe2.python._import_c_extension.get_blob_size_bytes",
  "caffe2.python._import_c_extension.get_build_options",
  "caffe2.python._import_c_extension.get_cuda_version",
  "caffe2.python._import_c_extension.get_cudnn_version",
  "caffe2.python._import_c_extension.get_device_properties",
  "caffe2.python._import_c_extension.get_gradient_defs",
  "caffe2.python._import_c_extension.get_num_numa_nodes",
  "caffe2.python._import_c_extension.get_operator_cost",
  "caffe2.python._import_c_extension.get_stats",
  "caffe2.python._import_c_extension.global_init",
  "caffe2.python._import_c_extension.has_blob",
  "caffe2.python._import_c_extension.infer_op_input_output_device",
  "caffe2.python._import_c_extension.infer_shapes_and_types_from_map",
  "caffe2.python._import_c_extension.infer_shapes_and_types_from_workspace",
  "caffe2.python._import_c_extension.is_asan",
  "caffe2.python._import_c_extension.is_numa_enabled",
  "caffe2.python._import_c_extension.matchSubgraph",
  "caffe2.python._import_c_extension.memonger_compute_blob_recycling_for_dag",
  "caffe2.python._import_c_extension.memonger_optimize_inference_net",
  "caffe2.python._import_c_extension.num_cuda_devices",
  "caffe2.python._import_c_extension.num_hip_devices",
  "caffe2.python._import_c_extension.num_observers_on_net",
  "caffe2.python._import_c_extension.onnx_to_trt_op",
  "caffe2.python._import_c_extension.onnxifi",
  "caffe2.python._import_c_extension.op_registry_key",
  "caffe2.python._import_c_extension.register_python_gradient_op",
  "caffe2.python._import_c_extension.register_python_op",
  "caffe2.python._import_c_extension.registered_dbs",
  "caffe2.python._import_c_extension.registered_operators",
  "caffe2.python._import_c_extension.remove_observer_from_net",
  "caffe2.python._import_c_extension.replaceAllUsesWith",
  "caffe2.python._import_c_extension.replaceAsConsumer",
  "caffe2.python._import_c_extension.replaceProducer",
  "caffe2.python._import_c_extension.reset_workspace",
  "caffe2.python._import_c_extension.root_folder",
  "caffe2.python._import_c_extension.run_net",
  "caffe2.python._import_c_extension.run_net_once",
  "caffe2.python._import_c_extension.run_operator_once",
  "caffe2.python._import_c_extension.run_plan",
  "caffe2.python._import_c_extension.run_plan_in_background",
  "caffe2.python._import_c_extension.run_transform",
  "caffe2.python._import_c_extension.run_workspace_transform",
  "caffe2.python._import_c_extension.serialize_blob",
  "caffe2.python._import_c_extension.set_engine_pref",
  "caffe2.python._import_c_extension.set_global_engine_pref",
  "caffe2.python._import_c_extension.set_op_engine_pref",
  "caffe2.python._import_c_extension.set_per_op_engine_pref",
  "caffe2.python._import_c_extension.support_onnx_export",
  "caffe2.python._import_c_extension.switch_workspace",
  "caffe2.python._import_c_extension.transform_exists",
  "caffe2.python._import_c_extension.transform_fuseConvBN",
  "caffe2.python._import_c_extension.transform_fuseNNPACKConvRelu",
  "caffe2.python._import_c_extension.transform_optimizeForIDEEP",
  "caffe2.python._import_c_extension.transform_sinkMaxPool",
  "caffe2.python._import_c_extension.transform_trt",
  "caffe2.python._import_c_extension.workspace_transform_exists",
  "caffe2.python._import_c_extension.workspaces",
  "caffe2.python.attention.AttentionType.Dot",
  "caffe2.python.attention.AttentionType.Recurrent",
  "caffe2.python.attention.AttentionType.Regular",
  "caffe2.python.attention.AttentionType.SoftCoverage",
  "caffe2.python.brew.Register",
  "caffe2.python.brew.accuracy",
  "caffe2.python.brew.add_weight_decay",
  "caffe2.python.brew.arg_scope",
  "caffe2.python.brew.average_pool",
  "caffe2.python.brew.batch_mat_mul",
  "caffe2.python.brew.concat",
  "caffe2.python.brew.cond",
  "caffe2.python.brew.conv",
  "caffe2.python.brew.conv_nd",
  "caffe2.python.brew.conv_transpose",
  "caffe2.python.brew.dropout",
  "caffe2.python.brew.fc",
  "caffe2.python.brew.fc_decomp",
  "caffe2.python.brew.fc_prune",
  "caffe2.python.brew.fc_sparse",
  "caffe2.python.brew.group_conv",
  "caffe2.python.brew.group_conv_deprecated",
  "caffe2.python.brew.has_helper",
  "caffe2.python.brew.image_input",
  "caffe2.python.brew.instance_norm",
  "caffe2.python.brew.iter",
  "caffe2.python.brew.layer_norm",
  "caffe2.python.brew.loop",
  "caffe2.python.brew.lrn",
  "caffe2.python.brew.max_pool",
  "caffe2.python.brew.max_pool_with_index",
  "caffe2.python.brew.myhelper",
  "caffe2.python.brew.myhelper2",
  "caffe2.python.brew.packed_fc",
  "caffe2.python.brew.prelu",
  "caffe2.python.brew.relu",
  "caffe2.python.brew.softmax",
  "caffe2.python.brew.spatial_bn",
  "caffe2.python.brew.spatial_gn",
  "caffe2.python.brew.sum",
  "caffe2.python.brew.tanh",
  "caffe2.python.brew.transpose",
  "caffe2.python.brew.video_input",
  "caffe2.python.caffe2_pybind11_state",
  "caffe2.python.caffe2_pybind11_state_gpu",
  "caffe2.python.caffe2_pybind11_state_hip",
  "caffe2.python.checkpoint.Job.current",
  "caffe2.python.compatibility.container_abcs.Iterable",
  "caffe2.python.core.C.builtin_cpu_supports_avx2",
  "caffe2.python.core.DataType.BOOL",
  "caffe2.python.core.DataType.DOUBLE",
  "caffe2.python.core.DataType.FLOAT",
  "caffe2.python.core.DataType.FLOAT16",
  "caffe2.python.core.DataType.INT16",
  "caffe2.python.core.DataType.INT32",
  "caffe2.python.core.DataType.INT64",
  "caffe2.python.core.DataType.INT8",
  "caffe2.python.core.DataType.STRING",
  "caffe2.python.core.DataType.UINT16",
  "caffe2.python.core.DataType.UINT8",
  "caffe2.python.core.workspace.RunPlan",
  "caffe2.python.data_workers.global_coordinator._fetcher_id_seq",
  "caffe2.python.device_checker.CheckSimple",
  "caffe2.python.functional.Functional.Concat",
  "caffe2.python.functional.Functional.Relu",
  "caffe2.python.functional.Functional.Split",
  "caffe2.python.layers.__init__.find_subclasses_recursively",
  "caffe2.python.layers.__init__.import_recursive",
  "caffe2.python.layers.__init__.model_layer_subcls",
  "caffe2.python.layers.layers.InstantiationContext.ACCUMULATE_PRED",
  "caffe2.python.layers.layers.InstantiationContext.EVAL",
  "caffe2.python.layers.layers.InstantiationContext.PREDICTION",
  "caffe2.python.layers.layers.InstantiationContext.TRAINING",
  "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_EVAL",
  "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
  "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_TRAIN",
  "caffe2.python.mint.app",
  "caffe2.python.mint.app.main",
  "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
  "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
  "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
  "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
  "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.LinkConfig",
  "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.StateConfig",
  "caffe2.python.net_builder.NetBuilder.current",
  "caffe2.python.net_builder.ops.Add",
  "caffe2.python.net_builder.ops.Condition",
  "caffe2.python.net_builder.ops.Const",
  "caffe2.python.net_builder.ops.ConstantFill",
  "caffe2.python.net_builder.ops.Copy",
  "caffe2.python.net_builder.ops.CountUp",
  "caffe2.python.net_builder.ops.CreateCounter",
  "caffe2.python.net_builder.ops.DBExists",
  "caffe2.python.net_builder.ops.EQ",
  "caffe2.python.net_builder.ops.Else",
  "caffe2.python.net_builder.ops.FC",
  "caffe2.python.net_builder.ops.GE",
  "caffe2.python.net_builder.ops.GT",
  "caffe2.python.net_builder.ops.GaussianFill",
  "caffe2.python.net_builder.ops.GetAllBlobNames",
  "caffe2.python.net_builder.ops.GivenTensorFill",
  "caffe2.python.net_builder.ops.If",
  "caffe2.python.net_builder.ops.IfNet",
  "caffe2.python.net_builder.ops.LE",
  "caffe2.python.net_builder.ops.LT",
  "caffe2.python.net_builder.ops.Load",
  "caffe2.python.net_builder.ops.LogInfo",
  "caffe2.python.net_builder.ops.Mul",
  "caffe2.python.net_builder.ops.Pow",
  "caffe2.python.net_builder.ops.Python",
  "caffe2.python.net_builder.ops.RetrieveCount",
  "caffe2.python.net_builder.ops.Save",
  "caffe2.python.net_builder.ops.SquaredL2Distance",
  "caffe2.python.net_builder.ops.Sub",
  "caffe2.python.net_builder.ops.TimerBegin",
  "caffe2.python.net_builder.ops.TimerGetAndEnd",
  "caffe2.python.net_builder.ops.UniformFill",
  "caffe2.python.net_builder.ops.WhileNet",
  "caffe2.python.net_builder.ops.loop",
  "caffe2.python.net_builder.ops.net",
  "caffe2.python.net_builder.ops.stop",
  "caffe2.python.net_builder.ops.stop_guard",
  "caffe2.python.net_builder.ops.stop_if",
  "caffe2.python.net_builder.ops.task_exit",
  "caffe2.python.net_builder.ops.task_init",
  "caffe2.python.net_builder.ops.task_instance_exit",
  "caffe2.python.net_builder.ops.task_instance_init",
  "caffe2.python.normalizer_context.NormalizerContext.current",
  "caffe2.python.optimizer.get_auxiliary_parameters",
  "caffe2.python.optimizer_context.OptimizerContext.current",
  "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.INPUTS_BLOB_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.META_NET_DEF",
  "caffe2.python.predictor_constants.predictor_constants.OUTPUTS_BLOB_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.PARAMETERS_BLOB_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.PREDICTOR_DBREADER",
  "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.TRAIN_INIT_PLAN_TYPE",
  "caffe2.python.predictor_constants.predictor_constants.TRAIN_PLAN_TYPE",
  "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
  "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
  "caffe2.python.regularizer_context.RegularizerContext.current",
  "caffe2.python.scope._NAMESCOPE_SEPARATOR.join",
  "caffe2.python.serialized_test.serialized_test_util._output_context.__setattr__",
  "caffe2.python.task.Node.current",
  "caffe2.python.task.Task.REPORT_STEP",
  "caffe2.python.task.Task.TASK_INSTANCE_SETUP",
  "caffe2.python.task.Task.TASK_SETUP",
  "caffe2.python.task.TaskGroup.LOCAL_SETUP",
  "caffe2.python.task.TaskGroup.current",
  "caffe2.python.task.WorkspaceType.GLOBAL",
  "caffe2.python.task.WorkspaceType.PRIVATE",
  "caffe2.python.workspace.C.Mode.read",
  "caffe2.python.workspace.C.Mode.write",
  "caffe2.python.workspace.C.OpSchema",
  "caffe2.python.workspace.C.Workspace",
  "caffe2.python.workspace.C.Workspace.current",
  "caffe2.python.workspace.C.Workspace.current.blobs",
  "caffe2.python.workspace.C.create_db",
  "caffe2.python.workspace.C.has_mkldnn",
  "caffe2.python.workspace.C.nearby_opnames",
  "caffe2.python.workspace.C.use_mkldnn",
  "caffe2.python.workspace.C.use_trt",
  "caffe2.python.workspace.blobs.shape",
  "caffe2.python.workspace.operator_tracebacks.get",
  "cal_cross_entropy",
  "canonical",
  "canonical_axis",
  "canonical_name",
  "cast",
  "checkPath",
  "check_error",
  "check_hidden_size",
  "checkpoint.initialize_params_from_file",
  "checkpoint.save_model_params",
  "choose_state_per_hypo",
  "clean_op",
  "clone_input",
  "cls",
  "cmd_exists",
  "collections.Iterable",
  "compare",
  "compare_outputs",
  "compare_reference",
  "condition",
  "const_if_tensor",
  "constrain_internal",
  "constructor",
  "conv",
  "conversion",
  "copy_func",
  "createNets",
  "create_grad",
  "create_internal",
  "create_net",
  "create_path",
  "create_queue",
  "cross_entropy",
  "ctypes.cdll.LoadLibrary",
  "cudaStatus.ERROR_NOT_READY",
  "cv2",
  "cv2.COLOR_BGR2RGB",
  "cv2.COLOR_RGB2BGR",
  "cv2.INTER_AREA",
  "cv2.INTER_CUBIC",
  "cv2.cvtColor",
  "cv2.resize",
  "data_type",
  "dec_ref",
  "device_count",
  "dict.__setitem__",
  "dim_size",
  "do_set",
  "double_backwards_fn",
  "dtypes",
  "embedding_after_pooling",
  "emit_arg",
  "emit_args",
  "emit_block",
  "emit_ret",
  "emit_rets",
  "emit_schema",
  "emit_type",
  "err_fn",
  "errno",
  "errno.EINVAL",
  "errno.ENOENT",
  "errno.EPIPE",
  "event",
  "execution_step",
  "exp_lr",
  "f",
  "fail_test",
  "fake_requires_grad",
  "fc1_output",
  "fc2_output",
  "fc3_output",
  "feed",
  "fetch",
  "fetch_total",
  "filter.reshape",
  "filter.transpose",
  "fixed_lr",
  "fixed_seed_func",
  "fn",
  "forward_pass_builder_fun",
  "from_untyped",
  "fun",
  "func",
  "functional.adaptive_avg_pool1d",
  "functional.adaptive_avg_pool2d",
  "functional.adaptive_avg_pool3d",
  "functional.adaptive_max_pool1d",
  "functional.adaptive_max_pool2d",
  "functional.adaptive_max_pool3d",
  "functional.alpha_dropout",
  "functional.avg_pool1d",
  "functional.avg_pool2d",
  "functional.avg_pool3d",
  "functional.batch_norm",
  "functional.bilinear",
  "functional.binary_cross_entropy",
  "functional.binary_cross_entropy_with_logits",
  "functional.celu",
  "functional.conv1d",
  "functional.conv2d",
  "functional.conv3d",
  "functional.conv_transpose1d",
  "functional.conv_transpose2d",
  "functional.conv_transpose3d",
  "functional.cosine_embedding_loss",
  "functional.cosine_similarity",
  "functional.cross_entropy",
  "functional.ctc_loss",
  "functional.dropout",
  "functional.dropout2d",
  "functional.dropout3d",
  "functional.elu",
  "functional.embedding",
  "functional.embedding_bag",
  "functional.feature_alpha_dropout",
  "functional.fold",
  "functional.fractional_max_pool2d",
  "functional.glu",
  "functional.group_norm",
  "functional.hardshrink",
  "functional.hardtanh",
  "functional.hinge_embedding_loss",
  "functional.instance_norm",
  "functional.interpolate",
  "functional.kl_div",
  "functional.l1_loss",
  "functional.layer_norm",
  "functional.leaky_relu",
  "functional.linear",
  "functional.local_response_norm",
  "functional.log_softmax",
  "functional.logsigmoid",
  "functional.lp_pool1d",
  "functional.lp_pool2d",
  "functional.margin_ranking_loss",
  "functional.max_pool1d",
  "functional.max_pool2d",
  "functional.max_pool3d",
  "functional.max_unpool1d",
  "functional.max_unpool2d",
  "functional.max_unpool3d",
  "functional.mse_loss",
  "functional.multi_margin_loss",
  "functional.multilabel_margin_loss",
  "functional.multilabel_soft_margin_loss",
  "functional.nll_loss",
  "functional.pad",
  "functional.pairwise_distance",
  "functional.pixel_shuffle",
  "functional.poisson_nll_loss",
  "functional.prelu",
  "functional.rrelu",
  "functional.selu",
  "functional.smooth_l1_loss",
  "functional.soft_margin_loss",
  "functional.softmax",
  "functional.softmin",
  "functional.softplus",
  "functional.softshrink",
  "functional.softsign",
  "functional.tanhshrink",
  "functional.threshold",
  "functional.triplet_margin_loss",
  "functional.unfold",
  "future.utils.bytes_to_native_str",
  "future.utils.viewitems",
  "future.utils.viewkeys",
  "future.utils.viewvalues",
  "g",
  "g.node.extend",
  "gather_map",
  "gc",
  "gc.collect",
  "generate_input_state",
  "getModule",
  "getNorm",
  "get_allowed_errors",
  "get_blob_data",
  "get_blob_weighted_sum",
  "get_current_scope",
  "get_device_properties",
  "get_discounts",
  "get_initializer_args",
  "get_inplaces",
  "get_label",
  "get_name_list",
  "get_named_summaries",
  "get_nvidia_smi",
  "get_op_with_output",
  "get_platform",
  "get_remapped_str",
  "get_sharing_strategy",
  "google.protobuf.descriptor",
  "google.protobuf.descriptor.Descriptor",
  "google.protobuf.descriptor.EnumDescriptor",
  "google.protobuf.descriptor.EnumValueDescriptor",
  "google.protobuf.descriptor.FieldDescriptor",
  "google.protobuf.descriptor.FileDescriptor",
  "google.protobuf.descriptor._ParseOptions",
  "google.protobuf.descriptor_pb2",
  "google.protobuf.descriptor_pb2.FieldOptions",
  "google.protobuf.internal.enum_type_wrapper",
  "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
  "google.protobuf.message",
  "google.protobuf.message.DecodeError",
  "google.protobuf.message.Message",
  "google.protobuf.reflection",
  "google.protobuf.reflection.GeneratedProtocolMessageType",
  "google.protobuf.symbol_database",
  "google.protobuf.symbol_database.Default",
  "google.protobuf.text_format",
  "google.protobuf.text_format.Merge",
  "google.protobuf.text_format.Parse",
  "google.protobuf.text_format.ParseError",
  "graph_diagnostic_info",
  "has_argument",
  "hashlib.sha256",
  "hidden",
  "hook",
  "hyp_func",
  "hypothesis.HealthCheck.filter_too_much",
  "hypothesis.HealthCheck.too_slow",
  "hypothesis.Verbosity.verbose",
  "hypothesis.settings.load_profile",
  "hypothesis.settings.register_profile",
  "hypothesis.strategies.astype",
  "if_false",
  "if_false.__doc__",
  "if_step",
  "if_true",
  "if_true.__doc__",
  "include_paths",
  "indices",
  "indices_blob",
  "infer_blob_device",
  "inferred_histo",
  "init",
  "init._calculate_fan_in_and_fan_out",
  "init.kaiming_uniform_",
  "init.normal_",
  "init.ones_",
  "init.uniform_",
  "init.zeros_",
  "init_blob",
  "inline_graph",
  "input.Net",
  "input.abs",
  "input.contiguous",
  "input.copy_",
  "input.device",
  "input.device_option",
  "input.dim",
  "input.dtype",
  "input.exp",
  "input.get_device",
  "input.index_select",
  "input.is_cuda",
  "input.is_floating_point",
  "input.log_softmax",
  "input.matmul",
  "input.mul",
  "input.narrow",
  "input.nelement",
  "input.new",
  "input.new_empty",
  "input.new_zeros",
  "input.norm",
  "input.numel",
  "input.pow",
  "input.reader",
  "input.requires_grad",
  "input.reshape",
  "input.select",
  "input.shape",
  "input.sigmoid",
  "input.size",
  "input.softmax",
  "input.sum",
  "input.take",
  "input.tanh",
  "input.type",
  "input.type_as",
  "input.unsqueeze",
  "input.view",
  "input_builder_fun",
  "input_generater",
  "inspect.Parameter.empty",
  "int_array",
  "is_activation_blob",
  "is_compatible_all",
  "is_functional_layer",
  "is_grad_blob",
  "is_grad_op",
  "is_tensor_method",
  "itertools",
  "itertools.chain",
  "itertools.combinations",
  "itertools.cycle",
  "itertools.imap",
  "itertools.islice",
  "itertools.product",
  "itertools.repeat",
  "join",
  "layer_func",
  "layer_norm_ref",
  "layers.ModelLayer",
  "layers.register_layer",
  "lc_2d_nchw",
  "legacy_load",
  "lengths_to_ids",
  "lengths_to_segment_ids",
  "library_paths",
  "lmbda",
  "lmdb",
  "lmdb.open",
  "load",
  "log_sigm",
  "loss_fn",
  "make_blob_on_context",
  "make_builder",
  "make_default_double_backwards_fn",
  "make_rnn",
  "make_sparse",
  "map_location",
  "map_ops",
  "math.pi.log",
  "math.pi.pow",
  "matplotlib.cm.gray",
  "max.node",
  "maybe_start_on_next_line",
  "maybe_warn_nondeterministic",
  "merge_arrays",
  "meta",
  "meterClass",
  "meth",
  "method",
  "min.node",
  "mock.Mock",
  "model",
  "model.has_trace_for",
  "model.load_state_dict",
  "modifier",
  "modify_ops",
  "module",
  "modules.utils._ntuple",
  "momentum_sgd",
  "mpi4py.MPI.COMM_WORLD",
  "multiprocessing.Manager",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "multiprocessing.cpu_count",
  "multiprocessing.get_context",
  "multiprocessing.reduction.rebuild_handle",
  "multiprocessing.reduction.reduce_handle",
  "mx_grad",
  "name_for",
  "named_summaries_to_events",
  "nccl.is_available",
  "nccl.reduce",
  "net_assert",
  "net_modifier",
  "net_modifier.field_name_suffix",
  "networkx.DiGraph",
  "networkx.bellman_ford",
  "networkx.descendants",
  "networkx.is_directed_acyclic_graph",
  "networkx.topological_sort",
  "new_tensor",
  "new_type",
  "next.field",
  "np_ref",
  "num_bytes",
  "num_cuda_devices",
  "num_hip_devices",
  "num_visited",
  "numpy.absolute",
  "numpy.arccos",
  "numpy.arcsin",
  "numpy.arctan",
  "numpy.bitwise_and",
  "numpy.bitwise_or",
  "numpy.bitwise_xor",
  "numpy.bytes_",
  "numpy.cbrt",
  "numpy.cosh",
  "numpy.divide",
  "numpy.double",
  "numpy.float16",
  "numpy.float32",
  "numpy.float64",
  "numpy.floor_divide",
  "numpy.fmod",
  "numpy.inf",
  "numpy.isfinite",
  "numpy.log",
  "numpy.log2",
  "numpy.logical_and",
  "numpy.matmul",
  "numpy.maximum",
  "numpy.minimum",
  "numpy.nan",
  "numpy.newaxis.sum",
  "numpy.power",
  "numpy.random.choice",
  "numpy.random.normal",
  "numpy.random.permutation",
  "numpy.random.rand",
  "numpy.random.randint",
  "numpy.random.randn",
  "numpy.random.random",
  "numpy.random.random_integers",
  "numpy.random.random_sample",
  "numpy.random.ranf",
  "numpy.random.seed",
  "numpy.random.shuffle",
  "numpy.random.uniform",
  "numpy.reciprocal",
  "numpy.sign",
  "numpy.sinh",
  "numpy.square",
  "numpy.stack",
  "numpy.str_",
  "numpy.subtract",
  "numpy.tan",
  "numpy.tanh",
  "numpy.uint16",
  "numpy.uint32",
  "numpy.unicode_",
  "object.__delattr__",
  "object.__format__",
  "object.__getattribute__",
  "object.__setattr__",
  "onnx.TensorProto.BOOL",
  "onnx.TensorProto.DOUBLE",
  "onnx.TensorProto.FLOAT",
  "onnx.TensorProto.INT16",
  "onnx.TensorProto.INT32",
  "onnx.TensorProto.INT64",
  "onnx.TensorProto.INT8",
  "onnx.TensorProto.STRING",
  "onnx.TensorProto.UINT16",
  "onnx.TensorProto.UINT32",
  "onnx.TensorProto.UINT8",
  "onnx.backend.base.DeviceType.CPU",
  "onnx.backend.base.DeviceType.CUDA",
  "onnx.optimizer",
  "onnx.optimizer.optimize",
  "onnx.utils.polish_model",
  "op_ref",
  "optimizer",
  "original_compile",
  "original_init",
  "original_spawn",
  "os.O_CREAT",
  "os.O_EXCL",
  "os.X_OK",
  "os.abort",
  "os.access",
  "os.close",
  "os.environ.copy",
  "os.environ.get",
  "os.environ.split",
  "os.fstat",
  "os.getcwd",
  "os.getpid",
  "os.getppid",
  "os.kill",
  "os.listdir",
  "os.mkdir",
  "os.open",
  "os.path.abspath",
  "os.path.basename",
  "os.path.commonprefix",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.realpath",
  "os.path.splitext",
  "os.remove",
  "os.rmdir",
  "os.symlink",
  "output_record",
  "output_record.field_types",
  "pack_group",
  "param_update_builder_fun",
  "parent_list",
  "parse_args",
  "parse_net_def",
  "parse_proto",
  "parse_summary",
  "part",
  "part.event_dim",
  "part.log_abs_det_jacobian",
  "past.builtins.basestring",
  "powt_grad",
  "powt_op",
  "prepend",
  "previous_handler",
  "printer",
  "prod",
  "quantization_ref",
  "queued_call",
  "raise_err_msg",
  "randn_like",
  "raw_input",
  "recursive_path_builder",
  "ref",
  "ref_ctc_decoder",
  "ref_ctc_decoder_no_merge_arg",
  "ref_func",
  "ref_nchw",
  "ref_sum",
  "reform_weights",
  "register_all",
  "regularizer",
  "relax_fp16_check",
  "relu",
  "remap",
  "remap_list",
  "remap_op",
  "remove_from",
  "remove_suffix",
  "rename_list",
  "replace_bools",
  "replace_if_empty",
  "replace_nones",
  "res_mod",
  "reshape",
  "resolve_functional_layer",
  "restore_location",
  "result",
  "retrieve_state",
  "rff_output",
  "roialign_flip",
  "roialign_rot90",
  "run",
  "run_function",
  "run_fwd_bwd",
  "run_mod_and_filter_tensor_outputs",
  "run_prof",
  "run_with_pip",
  "s",
  "sampling_prob",
  "scatter_map",
  "set_names",
  "setuptools.command.build_ext.build_ext.build_extensions",
  "sgd_1",
  "sgd_2",
  "sharding",
  "sigm",
  "sigmoid",
  "signal.SIGCHLD",
  "signal.SIGINT",
  "signal.Signals",
  "simulation_hsm_search",
  "sinusoid_encoding",
  "six.moves.urllib.request.urlretrieve",
  "size_from_dim",
  "size_to_dim",
  "skimage.util",
  "smoothed_label",
  "socket.AF_INET",
  "socket.SOCK_STREAM",
  "sparse_lengths_sum_8BitsRowwiseOp_cpu_reg",
  "sparse_lengths_sum_ref",
  "sparse_lengths_weightedsum_8BitsRowwiseOp_cpu_ref",
  "sparse_lengths_weightedsum_ref",
  "split_net",
  "split_ref",
  "sqlite3.Row",
  "sqlite3.connect",
  "ssa_name",
  "step_lr",
  "str.split",
  "string.strip",
  "stripBlobName",
  "struct.Struct",
  "struct.pack",
  "struct.unpack",
  "substep_edge",
  "sumN",
  "swish",
  "symbolic_fn",
  "sys",
  "sys._current_frames",
  "sys._getframe",
  "sys.argv",
  "sys.byteorder",
  "sys.exc_info",
  "sys.executable",
  "sys.exit",
  "sys.float_info",
  "sys.getdlopenflags",
  "sys.getsizeof",
  "sys.modules",
  "sys.path.insert",
  "sys.platform",
  "sys.platform.startswith",
  "sys.setdlopenflags",
  "sys.stderr",
  "sys.stderr.flush",
  "sys.stderr.write",
  "sys.stdin",
  "sys.stdout",
  "sys.stdout.encoding",
  "sys.stdout.flush",
  "sys.stdout.write",
  "sys.version",
  "sys.version_info",
  "tagger",
  "tensor2list",
  "tensor_class",
  "tensor_type",
  "tensorflow.Event",
  "tensorflow.GraphDef",
  "tensorflow.HistogramProto",
  "tensorflow.NodeDef",
  "tensorflow.Summary",
  "tensorflow.Summary.Value",
  "tensorflow.core.framework.graph_pb2.NodeDef",
  "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim",
  "tensorflow.summary",
  "tensorflow.summary.FileWriter",
  "tensorflow.train.SummaryWriter",
  "tensorflow.train.summary_iterator",
  "test_map_func",
  "time",
  "time.sleep",
  "time.time",
  "to_str_list",
  "to_untyped",
  "torch.ByteTensor",
  "torch.CharTensor",
  "torch.DoubleTensor",
  "torch.FloatTensor",
  "torch.Generator",
  "torch.HalfTensor",
  "torch.IntTensor",
  "torch.LongTensor",
  "torch.ShortTensor",
  "torch.Size",
  "torch.Storage._expired",
  "torch.Tensor._make_subclass",
  "torch._C",
  "torch._C.CudaByteStorageBase",
  "torch._C.CudaCharStorageBase",
  "torch._C.CudaDoubleStorageBase",
  "torch._C.CudaFloatStorageBase",
  "torch._C.CudaHalfStorageBase",
  "torch._C.CudaIntStorageBase",
  "torch._C.CudaLongStorageBase",
  "torch._C.CudaShortStorageBase",
  "torch._C.DistributedByteStorageBase",
  "torch._C.DistributedCharStorageBase",
  "torch._C.DistributedDoubleStorageBase",
  "torch._C.DistributedFloatStorageBase",
  "torch._C.DistributedHalfStorageBase",
  "torch._C.DistributedIntStorageBase",
  "torch._C.DistributedLongStorageBase",
  "torch._C.DistributedShortStorageBase",
  "torch._C.DynamicType",
  "torch._C.DynamicType.get",
  "torch._C.FloatType",
  "torch._C.FloatType.get",
  "torch._C.Graph.at",
  "torch._C.Graph.constant",
  "torch._C.Graph.op",
  "torch._C.IntType",
  "torch._C.IntType.get",
  "torch._C.ListType",
  "torch._C.ListType.ofInts",
  "torch._C.ListType.ofTensors",
  "torch._C.Node.__getitem__",
  "torch._C.TupleType",
  "torch._C.Value",
  "torch._C._CudaStreamBase",
  "torch._C._FunctionBase",
  "torch._C._FunctionBase._do_forward",
  "torch._C._LegacyVariableBase",
  "torch._C._TensorBase",
  "torch._C._TensorBase.__idiv__",
  "torch._C._TensorBase.abs",
  "torch._C._TensorBase.detach",
  "torch._C._TensorBase.detach_",
  "torch._C._TensorBase.eq",
  "torch._C._TensorBase.ge",
  "torch._C._TensorBase.gt",
  "torch._C._TensorBase.le",
  "torch._C._TensorBase.lt",
  "torch._C._TensorBase.ne",
  "torch._C._TensorBase.neg",
  "torch._C._TensorBase.pow",
  "torch._C._VariableFunctions",
  "torch._C._VariableFunctions._pack_padded_sequence",
  "torch._C._VariableFunctions._pad_packed_sequence",
  "torch._C._VariableFunctions.broadcast_tensors",
  "torch._C._VariableFunctions.chain_matmul",
  "torch._C._VariableFunctions.einsum",
  "torch._C._VariableFunctions.frobenius_norm",
  "torch._C._VariableFunctions.meshgrid",
  "torch._C._VariableFunctions.norm",
  "torch._C._VariableFunctions.nuclear_norm",
  "torch._C._VariableFunctions.rsub",
  "torch._C._VariableFunctions.stft",
  "torch._C._VariableFunctions.tensordot",
  "torch._C.__dict__",
  "torch._C._add_docstr",
  "torch._C._autograd_init",
  "torch._C._broadcast",
  "torch._C._broadcast_coalesced",
  "torch._C._c10d_init",
  "torch._C._cuda_cudaHostAllocator",
  "torch._C._cuda_emptyCache",
  "torch._C._cuda_getCompiledVersion",
  "torch._C._cuda_getCurrentBlasHandle",
  "torch._C._cuda_getCurrentStream",
  "torch._C._cuda_getDevice",
  "torch._C._cuda_getDeviceCount",
  "torch._C._cuda_getDriverVersion",
  "torch._C._cuda_getRNGState",
  "torch._C._cuda_init",
  "torch._C._cuda_initialSeed",
  "torch._C._cuda_isDriverSufficient",
  "torch._C._cuda_lock_mutex",
  "torch._C._cuda_manualSeed",
  "torch._C._cuda_manualSeedAll",
  "torch._C._cuda_maxMemoryAllocated",
  "torch._C._cuda_maxMemoryCached",
  "torch._C._cuda_memoryAllocated",
  "torch._C._cuda_memoryCached",
  "torch._C._cuda_seed",
  "torch._C._cuda_seedAll",
  "torch._C._cuda_setDevice",
  "torch._C._cuda_setRNGState",
  "torch._C._cuda_setStream",
  "torch._C._cuda_sleep",
  "torch._C._cuda_synchronize",
  "torch._C._cuda_unlock_mutex",
  "torch._C._cudnn_version",
  "torch._C._demangle",
  "torch._C._dist_all_gather",
  "torch._C._dist_all_gather_multigpu",
  "torch._C._dist_all_reduce",
  "torch._C._dist_all_reduce_multigpu",
  "torch._C._dist_barrier",
  "torch._C._dist_broadcast",
  "torch._C._dist_broadcast_multigpu",
  "torch._C._dist_clear_group_cache",
  "torch._C._dist_destroy_process_group",
  "torch._C._dist_gather_recv",
  "torch._C._dist_gather_send",
  "torch._C._dist_get_num_processes",
  "torch._C._dist_get_rank",
  "torch._C._dist_init_extension",
  "torch._C._dist_init_master_worker",
  "torch._C._dist_init_process_group",
  "torch._C._dist_irecv",
  "torch._C._dist_isend",
  "torch._C._dist_new_group",
  "torch._C._dist_recv",
  "torch._C._dist_recv_any_source",
  "torch._C._dist_reduce",
  "torch._C._dist_reduce_multigpu",
  "torch._C._dist_register_stream",
  "torch._C._dist_request_is_completed",
  "torch._C._dist_request_wait",
  "torch._C._dist_scatter_recv",
  "torch._C._dist_scatter_send",
  "torch._C._dist_send",
  "torch._C._error_if_any_worker_fails",
  "torch._C._from_dlpack",
  "torch._C._functions.DelayedError",
  "torch._C._gather",
  "torch._C._get_backcompat_broadcast_warn",
  "torch._C._get_backcompat_keepdim_warn",
  "torch._C._get_cudnn_benchmark",
  "torch._C._get_cudnn_deterministic",
  "torch._C._get_cudnn_enabled",
  "torch._C._get_tracing_state",
  "torch._C._has_distributed",
  "torch._C._infer_size",
  "torch._C._init_names",
  "torch._C._is_default_type_cuda",
  "torch._C._jit_flatten",
  "torch._C._jit_pass_canonicalize",
  "torch._C._jit_pass_canonicalize_ops",
  "torch._C._jit_pass_constant_propagation",
  "torch._C._jit_pass_dce",
  "torch._C._jit_pass_erase_number_types",
  "torch._C._jit_pass_fixup_onnx_loops",
  "torch._C._jit_pass_lint",
  "torch._C._jit_pass_lower_all_tuples",
  "torch._C._jit_pass_onnx",
  "torch._C._jit_pass_onnx_block",
  "torch._C._jit_pass_onnx_peephole",
  "torch._C._jit_pass_peephole",
  "torch._C._jit_pass_prepare_division_for_onnx",
  "torch._C._jit_pass_remove_inplace_ops",
  "torch._C._jit_tree_views",
  "torch._C._multiprocessing_init",
  "torch._C._nn._parse_to",
  "torch._C._nn.adaptive_avg_pool2d",
  "torch._C._nn.adaptive_avg_pool3d",
  "torch._C._nn.adaptive_max_pool2d",
  "torch._C._nn.adaptive_max_pool3d",
  "torch._C._nn.avg_pool2d",
  "torch._C._nn.avg_pool3d",
  "torch._C._nn.binary_cross_entropy",
  "torch._C._nn.elu",
  "torch._C._nn.elu_",
  "torch._C._nn.fractional_max_pool2d",
  "torch._C._nn.glu",
  "torch._C._nn.hardtanh",
  "torch._C._nn.hardtanh_",
  "torch._C._nn.l1_loss",
  "torch._C._nn.leaky_relu",
  "torch._C._nn.leaky_relu_",
  "torch._C._nn.log_sigmoid",
  "torch._C._nn.max_pool2d_with_indices",
  "torch._C._nn.max_pool3d_with_indices",
  "torch._C._nn.max_unpool2d",
  "torch._C._nn.max_unpool3d",
  "torch._C._nn.mse_loss",
  "torch._C._nn.multi_margin_loss",
  "torch._C._nn.multilabel_margin_loss",
  "torch._C._nn.nll_loss",
  "torch._C._nn.nll_loss2d",
  "torch._C._nn.reflection_pad1d",
  "torch._C._nn.reflection_pad2d",
  "torch._C._nn.replication_pad1d",
  "torch._C._nn.replication_pad2d",
  "torch._C._nn.replication_pad3d",
  "torch._C._nn.smooth_l1_loss",
  "torch._C._nn.soft_margin_loss",
  "torch._C._nn.softplus",
  "torch._C._nn.softshrink",
  "torch._C._nn.upsample_bilinear2d",
  "torch._C._nn.upsample_linear1d",
  "torch._C._nn.upsample_nearest1d",
  "torch._C._nn.upsample_nearest2d",
  "torch._C._nn.upsample_nearest3d",
  "torch._C._nn.upsample_trilinear3d",
  "torch._C._onnx.OperatorExportTypes",
  "torch._C._onnx.PYTORCH_ONNX_CAFFE2_BUNDLE",
  "torch._C._onnx.TensorProtoDataType",
  "torch._C._remove_worker_pids",
  "torch._C._scatter",
  "torch._C._set_backcompat_broadcast_warn",
  "torch._C._set_backcompat_keepdim_warn",
  "torch._C._set_cudnn_benchmark",
  "torch._C._set_cudnn_deterministic",
  "torch._C._set_cudnn_enabled",
  "torch._C._set_worker_signal_handlers",
  "torch._C._to_dlpack",
  "torch._C._update_worker_pids",
  "torch._C.default_generator",
  "torch._C.default_generator.get_state",
  "torch._C.default_generator.initial_seed",
  "torch._C.default_generator.manual_seed",
  "torch._C.default_generator.set_state",
  "torch._C.has_cudnn",
  "torch._C.has_mkl",
  "torch._C.merge_type_from_type_comment",
  "torch._C.parse_type_comment",
  "torch._C.set_grad_enabled",
  "torch.__init__.ByteStorage",
  "torch.__init__.CharStorage",
  "torch.__init__.DoubleStorage",
  "torch.__init__.FloatStorage",
  "torch.__init__.HalfStorage",
  "torch.__init__.IntStorage",
  "torch.__init__.LongStorage",
  "torch.__init__.ShortStorage",
  "torch.__init__._StorageBase",
  "torch.__init__.__all__",
  "torch.__init__._import_dotted_name",
  "torch.__init__._storage_docs",
  "torch.__init__._string_classes",
  "torch.__init__._tensor_docs",
  "torch.__init__._torch_docs",
  "torch.__init__.dll_paths",
  "torch.__init__.get_file_path",
  "torch.__init__.get_nvToolsExt_path",
  "torch.__init__.manager_path",
  "torch.__init__.old_flags",
  "torch.__init__.prepare_multiprocessing_environment",
  "torch.__init__.py_dll_path",
  "torch.__init__.th_dll_path",
  "torch._argmax",
  "torch._argmin",
  "torch._cudnn_rnn_flatten_weight",
  "torch._cufft_clear_plan_cache",
  "torch._cufft_get_plan_cache_max_size",
  "torch._cufft_get_plan_cache_size",
  "torch._cufft_set_plan_cache_max_size",
  "torch._dirichlet_grad",
  "torch._dl",
  "torch._dl.RTLD_GLOBAL",
  "torch._dl.RTLD_LAZY",
  "torch._indices",
  "torch._nvrtc",
  "torch._reshape_from_tensor",
  "torch._shape_as_tensor",
  "torch._six.container_abcs.Iterable",
  "torch._six.container_abcs.Mapping",
  "torch._six.container_abcs.Sequence",
  "torch._sparse_addmm",
  "torch._sparse_mm",
  "torch._sparse_sum",
  "torch._standard_gamma",
  "torch._storage_classes.add",
  "torch._thnn.__init__.Backend",
  "torch._thnn.__init__.Backends",
  "torch._thnn.__init__.THCUNN_H_PATH",
  "torch._thnn.__init__.THNNCudaBackendStateMixin",
  "torch._thnn.__init__.THNN_H_PATH",
  "torch._thnn.__init__._thcunn_headers",
  "torch._thnn.__init__._thnn_headers",
  "torch._thnn.__init__.backend",
  "torch._thnn.__init__.load_backend",
  "torch._thnn.__init__.parse_header",
  "torch._thnn.__init__.py_name",
  "torch._thnn.__init__.type2backend",
  "torch._unique",
  "torch._unique_dim",
  "torch._values",
  "torch._weight_norm",
  "torch.abs",
  "torch.adaptive_avg_pool1d",
  "torch.adaptive_max_pool1d",
  "torch.add",
  "torch.addmm",
  "torch.affine_grid_generator",
  "torch.allclose",
  "torch.arange",
  "torch.as_tensor",
  "torch.atan",
  "torch.autograd.ProfilerState.CPU",
  "torch.autograd.ProfilerState.CUDA",
  "torch.autograd.ProfilerState.NVTX",
  "torch.autograd.Variable._execution_engine.queue_callback",
  "torch.autograd.__init__._make_grads",
  "torch.autograd._disable_profiler",
  "torch.autograd._enable_profiler",
  "torch.autograd._functions.Resize.apply",
  "torch.autograd._pop_range",
  "torch.autograd._push_range",
  "torch.avg_pool1d",
  "torch.backends.cuda.__init__.CUDAModule",
  "torch.backends.cuda.__init__.ContextProp",
  "torch.backends.cuda.__init__.cuFFTPlanCache",
  "torch.backends.cudnn.__init__.CUDNN_DATA_DOUBLE",
  "torch.backends.cudnn.__init__.CUDNN_DATA_FLOAT",
  "torch.backends.cudnn.__init__.CUDNN_DATA_HALF",
  "torch.backends.cudnn.__init__.CUDNN_TENSOR_NCHW",
  "torch.backends.cudnn.__init__.CUDNN_TENSOR_TYPES",
  "torch.backends.cudnn.__init__.ContextProp",
  "torch.backends.cudnn.__init__.CuDNNError",
  "torch.backends.cudnn.__init__.CuDNNHandle",
  "torch.backends.cudnn.__init__.CudnnModule",
  "torch.backends.cudnn.__init__.TensorDescriptor",
  "torch.backends.cudnn.__init__.TensorDescriptorArray",
  "torch.backends.cudnn.__init__.__allow_nonbracketed_mutation",
  "torch.backends.cudnn.__init__.__allow_nonbracketed_mutation_flag",
  "torch.backends.cudnn.__init__.__cudnn_version",
  "torch.backends.cudnn.__init__._handles",
  "torch.backends.cudnn.__init__._libcudnn",
  "torch.backends.cudnn.__init__._typemap",
  "torch.backends.cudnn.__init__.check_error",
  "torch.backends.cudnn.__init__.find_cudnn_windows_lib",
  "torch.backends.cudnn.__init__.flags_frozen",
  "torch.backends.cudnn.__init__.int_array",
  "torch.backends.cudnn.__init__.is_available",
  "torch.backends.cudnn.__init__.lib",
  "torch.backends.cudnn.__init__.set_flags",
  "torch.backends.cudnn.__init__.verbose",
  "torch.backends.cudnn.enabled",
  "torch.batch_norm",
  "torch.bernoulli",
  "torch.bilinear",
  "torch.binary_cross_entropy_with_logits",
  "torch.bmm",
  "torch.cat",
  "torch.celu",
  "torch.celu_",
  "torch.cholesky",
  "torch.conv1d",
  "torch.conv2d",
  "torch.conv3d",
  "torch.conv_tbc",
  "torch.conv_transpose1d",
  "torch.conv_transpose2d",
  "torch.conv_transpose3d",
  "torch.cosine_embedding_loss",
  "torch.cosine_similarity",
  "torch.ctc_loss",
  "torch.cuda.ByteTensor",
  "torch.cuda.DoubleTensor",
  "torch.cuda.FloatTensor",
  "torch.cuda.HalfTensor",
  "torch.cuda.LongTensor",
  "torch.cuda.__init__.ByteStorage",
  "torch.cuda.__init__.CharStorage",
  "torch.cuda.__init__.CudaError",
  "torch.cuda.__init__.DeferredCudaCallError",
  "torch.cuda.__init__.DoubleStorage",
  "torch.cuda.__init__.FloatStorage",
  "torch.cuda.__init__.HalfStorage",
  "torch.cuda.__init__.IntStorage",
  "torch.cuda.__init__.LongStorage",
  "torch.cuda.__init__.ShortStorage",
  "torch.cuda.__init__._CudaBase",
  "torch.cuda.__init__._StorageBase",
  "torch.cuda.__init__._after_fork",
  "torch.cuda.__init__._check_capability",
  "torch.cuda.__init__._check_driver",
  "torch.cuda.__init__._cudart",
  "torch.cuda.__init__._dummy_type",
  "torch.cuda.__init__._get_device_index",
  "torch.cuda.__init__._in_bad_fork",
  "torch.cuda.__init__._initialized",
  "torch.cuda.__init__._lazy_call",
  "torch.cuda.__init__._lazy_init",
  "torch.cuda.__init__._lazy_new",
  "torch.cuda.__init__._load_cudart",
  "torch.cuda.__init__._original_pid",
  "torch.cuda.__init__._queued_calls",
  "torch.cuda.__init__.cudaStatus",
  "torch.cuda.__init__.current_stream",
  "torch.cuda.__init__.device",
  "torch.cuda.__init__.device_count",
  "torch.cuda.__init__.find_cuda_windows_lib",
  "torch.cuda.__init__.get_device_capability",
  "torch.cuda.__init__.get_device_name",
  "torch.cuda.__init__.get_device_properties",
  "torch.cuda.__init__.init",
  "torch.cuda.__init__.is_available",
  "torch.cuda.__init__.storage_name",
  "torch.cuda.__init__.tensor_name",
  "torch.cudnn_affine_grid_generator",
  "torch.device",
  "torch.diag",
  "torch.diagonal",
  "torch.digamma",
  "torch.distributed.FileStore",
  "torch.distributed.TCPStore",
  "torch.distributed.__init__.is_available",
  "torch.distributed._dist_broadcast_coalesced",
  "torch.distributed._dist_bucket_tensors",
  "torch.distributed._queue_reduction",
  "torch.distributed._sync_reduction",
  "torch.distributed.deprecated.__init__._DistributedRequest",
  "torch.distributed.deprecated.__init__._INITIALIZED_MW",
  "torch.distributed.deprecated.__init__._INITIALIZED_PG",
  "torch.distributed.deprecated.__init__._backend",
  "torch.distributed.deprecated.__init__._extend_scope",
  "torch.distributed.deprecated.__init__._initialized",
  "torch.distributed.deprecated.__init__._scope",
  "torch.distributed.deprecated.__init__.all_gather_multigpu",
  "torch.distributed.deprecated.__init__.destroy_process_group",
  "torch.distributed.deprecated.__init__.dist_backend",
  "torch.distributed.deprecated.__init__.get_rank",
  "torch.distributed.deprecated.__init__.get_world_size",
  "torch.distributed.deprecated.__init__.group",
  "torch.distributed.deprecated.__init__.is_available",
  "torch.distributed.deprecated.__init__.reduce_op",
  "torch.distributed.deprecated.collectives",
  "torch.distributed.deprecated.dist_backend.NCCL",
  "torch.distributed.storage._StorageBase",
  "torch.distributions.__init__.__all__",
  "torch.div",
  "torch.dot",
  "torch.embedding",
  "torch.embedding_bag",
  "torch.embedding_renorm_",
  "torch.empty",
  "torch.empty_like",
  "torch.eq",
  "torch.erf",
  "torch.erfinv",
  "torch.exp",
  "torch.expm1",
  "torch.eye",
  "torch.float16",
  "torch.float32",
  "torch.float64",
  "torch.fmod",
  "torch.from_numpy",
  "torch.get_default_dtype",
  "torch.grid_sampler",
  "torch.group_norm",
  "torch.gt",
  "torch.hardshrink",
  "torch.hinge_embedding_loss",
  "torch.index_select",
  "torch.instance_norm",
  "torch.int",
  "torch.int16",
  "torch.int32",
  "torch.int64",
  "torch.int8",
  "torch.inverse",
  "torch.is_grad_enabled",
  "torch.isclose",
  "torch.jit.__init__.BatchTensor",
  "torch.jit.__init__.COMPILATION_PENDING",
  "torch.jit.__init__.COMPILED",
  "torch.jit.__init__.LegacyTracedModule",
  "torch.jit.__init__.OrderedDictWrapper",
  "torch.jit.__init__.ScriptMethodStub",
  "torch.jit.__init__.ScriptModule",
  "torch.jit.__init__.TopLevelTracedModule",
  "torch.jit.__init__.TracedModule",
  "torch.jit.__init__.TracerWarning",
  "torch.jit.__init__.TracingCheckError",
  "torch.jit.__init__.WeakScriptModuleProxy",
  "torch.jit.__init__._ConstModuleList",
  "torch.jit.__init__._ConstSequential",
  "torch.jit.__init__._JIT_DUMP",
  "torch.jit.__init__._JIT_TIME",
  "torch.jit.__init__._builtin_table",
  "torch.jit.__init__._check_trace",
  "torch.jit.__init__._clone_inputs",
  "torch.jit.__init__._compiled_methods_whitelist",
  "torch.jit.__init__._compiled_weak_fns",
  "torch.jit.__init__._constant_types",
  "torch.jit.__init__._create_interpreter_name_lookup_fn",
  "torch.jit.__init__._create_methods_from_stubs",
  "torch.jit.__init__._enabled",
  "torch.jit.__init__._flatten",
  "torch.jit.__init__._get_builtin_table",
  "torch.jit.__init__._get_methods",
  "torch.jit.__init__._get_valid_constant",
  "torch.jit.__init__._get_weak_stubs",
  "torch.jit.__init__._is_weak_type",
  "torch.jit.__init__._jit_script_compile",
  "torch.jit.__init__._list_with_default",
  "torch.jit.__init__._make_fail",
  "torch.jit.__init__._make_strong",
  "torch.jit.__init__._modules_containing_builtins",
  "torch.jit.__init__._pair",
  "torch.jit.__init__._parse_env",
  "torch.jit.__init__._quadruple",
  "torch.jit.__init__._register_builtin",
  "torch.jit.__init__._single",
  "torch.jit.__init__._triple",
  "torch.jit.__init__._unflatten",
  "torch.jit.__init__._unique_state_dict",
  "torch.jit.__init__._unwrap_optional",
  "torch.jit.__init__._verify_equal",
  "torch.jit.__init__._wait",
  "torch.jit.__init__._weak_modules",
  "torch.jit.__init__._weak_script_methods",
  "torch.jit.__init__._weak_types",
  "torch.jit.__init__.createResolutionCallback",
  "torch.jit.__init__.indent",
  "torch.jit.__init__.script",
  "torch.jit.__init__.script_method",
  "torch.kl_div",
  "torch.layer_norm",
  "torch.lgamma",
  "torch.log",
  "torch.log1p",
  "torch.long",
  "torch.lt",
  "torch.margin_ranking_loss",
  "torch.matmul",
  "torch.max",
  "torch.max_pool1d_with_indices",
  "torch.mean",
  "torch.multinomial",
  "torch.multiprocessing.__init__.__all__",
  "torch.multiprocessing.__init__._all_sharing_strategies",
  "torch.multiprocessing.__init__._sharing_strategy",
  "torch.multiprocessing.__init__.init_reductions",
  "torch.multiprocessing._prctl_pr_set_pdeathsig",
  "torch.mv",
  "torch.neg",
  "torch.nn.Module.__dir__",
  "torch.nn.Module.__getattr__",
  "torch.norm_except_dim",
  "torch.normal",
  "torch.ones",
  "torch.ones_like",
  "torch.onnx.ExportTypes.COMPRESSED_ZIP_ARCHIVE",
  "torch.onnx.ExportTypes.DIRECTORY",
  "torch.onnx.ExportTypes.PROTOBUF_FILE",
  "torch.onnx.ExportTypes.ZIP_ARCHIVE",
  "torch.onnx.OperatorExportTypes.ATEN",
  "torch.onnx.OperatorExportTypes.ONNX",
  "torch.onnx.OperatorExportTypes.ONNX_ATEN",
  "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
  "torch.onnx.OperatorExportTypes.RAW",
  "torch.onnx.TensorProtoDataType.DOUBLE",
  "torch.onnx.TensorProtoDataType.FLOAT",
  "torch.onnx.TensorProtoDataType.FLOAT16",
  "torch.onnx.TensorProtoDataType.INT16",
  "torch.onnx.TensorProtoDataType.INT32",
  "torch.onnx.TensorProtoDataType.INT64",
  "torch.onnx.TensorProtoDataType.INT8",
  "torch.onnx.TensorProtoDataType.UINT8",
  "torch.ops.load_library",
  "torch.pairwise_distance",
  "torch.pdist",
  "torch.pixel_shuffle",
  "torch.poisson",
  "torch.pow",
  "torch.prelu",
  "torch.qr",
  "torch.rand",
  "torch.rand_like",
  "torch.randint",
  "torch.randn_like",
  "torch.randperm",
  "torch.register_batch_operator",
  "torch.relu",
  "torch.relu_",
  "torch.rrelu",
  "torch.rrelu_",
  "torch.rsqrt",
  "torch.selu",
  "torch.selu_",
  "torch.set_anomaly_enabled",
  "torch.set_num_threads",
  "torch.sigmoid",
  "torch.sign",
  "torch.sort",
  "torch.stack",
  "torch.strided",
  "torch.sub",
  "torch.sum",
  "torch.tan",
  "torch.tanh",
  "torch.testing.__init__._default_tolerances",
  "torch.testing.__init__._get_default_tolerance",
  "torch.triplet_margin_loss",
  "torch.trtrs",
  "torch.uint8",
  "torch.utils.backcompat.__init__.Warning",
  "torch.where",
  "torch.zeros",
  "torch.zeros_like",
  "trainerClass",
  "transform",
  "transform.event_dim",
  "transform.inv",
  "transform.log_abs_det_jacobian",
  "transform.sign",
  "transform_weights",
  "translator",
  "trim",
  "tuple_fn",
  "type.__new__",
  "type.lower",
  "unflatten_helper",
  "unpack_triple",
  "unscope_name",
  "update_grad_input_fn",
  "update_group",
  "urllib2",
  "urllib2.HTTPError",
  "urllib2.URLError",
  "urllib2.urlopen",
  "urlparse.urlparse",
  "validate_op",
  "variable.Variable._execution_engine.is_checkpoint_valid",
  "variable.Variable._execution_engine.run_backward",
  "verify_graph_equality",
  "verify_inplace_blobs",
  "versionMismatchInfoIn",
  "versionMismatchInfoOut",
  "warn_imbalance",
  "weak_self",
  "while_step",
  "wrap_retval",
  "ws_output",
  "zero_fill"
 ],
 "deps": {
  "AddImageInput": [],
  "Apply": [],
  "Assert": [],
  "Assign": [],
  "Attribute": [],
  "AugAssign": [],
  "BinOp": [],
  "Const": [],
  "DLFCN": [],
  "Decl": [],
  "Def": [],
  "Do": [],
  "ExprStmt": [],
  "FalseLiteral": [],
  "For": [],
  "GetLoss": [],
  "GetNetName": [],
  "GetValue": [],
  "IPython": [
   "ipython/conda-forge/linux-64/ipython-7.23.0-py39hef51801_0"
  ],
  "Ident": [],
  "If": [],
  "ListLiteral": [],
  "LiveRange": [],
  "ModuleRegister": [],
  "Net": [],
  "NoneLiteral": [],
  "Output": [],
  "PIL": [
   "pillow/conda-forge/linux-64/pillow-7.2.0-py36hfc7c323_2"
  ],
  "Parallelize": [],
  "Parallelize_BMUF": [],
  "Param": [],
  "Pass": [],
  "Queue": [],
  "Raise": [],
  "ReduceOp": [],
  "Return": [],
  "RowwiseQuantized8BitsWeight": [],
  "S": [],
  "ScriptModule": [],
  "Select": [],
  "SliceExpr": [],
  "Starred": [],
  "StringIO": [],
  "StringLiteral": [],
  "Subclass": [],
  "Subscript": [],
  "Task": [],
  "TernaryIf": [],
  "TrueLiteral": [],
  "TupleLiteral": [],
  "UnaryOp": [],
  "Var": [],
  "While": [],
  "_AddBarrierToModelNets": [],
  "_AddGradientOperators": [],
  "_AllReduceBlobs": [],
  "_BroadcastComputedParamsSingleHost": [],
  "_ComputeBlobsToSync": [],
  "_CreateOrCloneCommonWorld": [],
  "_GroupByDevice": [],
  "_InferBlobDevice": [],
  "_IsGPUBlob": [],
  "_LoadTest": [],
  "_OptimizeGradientMemorySimple": [],
  "_ReporterBuilder": [],
  "_RunWhileNet": [],
  "_SetupBuilder": [],
  "_SyncAllParams": [],
  "_VF": [],
  "_ValidateParams": [],
  "__builtin__": [],
  "__future__": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "__name__": [],
  "_all_functions": [],
  "_arc_cosine_hypothesis_test": [],
  "_cast_Int": [],
  "_check_container_source": [],
  "_check_param_device": [],
  "_check_size_scale_factor": [],
  "_cpuReduce": [],
  "_create_model": [],
  "_device_pid": [],
  "_env_error": [],
  "_error": [],
  "_find_best": [],
  "_find_factor_simple": [],
  "_find_tensor_input_op": [],
  "_functions": [],
  "_g": [],
  "_gen_new_name": [],
  "_gen_subgradient_pass": [],
  "_gen_subnet_gradient": [],
  "_generate_data": [],
  "_get_async_or_non_blocking": [],
  "_get_build_directory": [],
  "_get_compatible_prev": [],
  "_get_device_properties": [],
  "_get_height": [],
  "_get_max_live": [],
  "_get_net_argument": [],
  "_get_output_with_grad_names": [],
  "_get_sorted_leaves": [],
  "_gpuReduce": [],
  "_impl": [],
  "_initialize_buffers": [],
  "_is_cuda_file": [],
  "_is_value": [],
  "_iter": [],
  "_jit_compile": [],
  "_jit_internal": [],
  "_join_cuda_home": [],
  "_map": [],
  "_next_available_idx": [],
  "_output_size": [],
  "_pipe_step": [],
  "_process_batch": [],
  "_reduction": [],
  "_rff_hypothesis_test": [],
  "_rnn_full": [],
  "_rnn_packed": [],
  "_semi_random_hypothesis_test": [],
  "_test_backward_pass": [],
  "_test_forward_pass": [],
  "_test_reshape": [],
  "_unravel_index": [],
  "_update_range": [],
  "_v": [],
  "_v_prev": [],
  "_verify_bn_outputs": [],
  "_worker": [],
  "abc": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ac_output": [],
  "acc_grad_parameters_fn": [],
  "adagrad": [],
  "add_arg": [],
  "add_edge": [],
  "add_fusion_group": [],
  "add_graph_executor": [],
  "add_node": [],
  "add_op": [],
  "add_ops": [],
  "adjusted_time": [],
  "all_finite_value": [],
  "allreduce": [],
  "ann_to_type": [],
  "append": [],
  "argparse": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "array_type": [],
  "as_ann": [],
  "ast": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "atexit": [],
  "auto_double_backwards": [],
  "auto_symbolic": [],
  "bisect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "bisect_percentile_op_ref": [],
  "broadcast": [],
  "build_ExtSlice": [],
  "build_Index": [],
  "build_SliceExpr": [],
  "build_expr": [],
  "builtins": [],
  "cPickle": [],
  "cProfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "caffe": [
   "caffe/conda-forge/linux-64/caffe-1.0-py37he7c8ffd_209"
  ],
  "caffe2": [],
  "cal_cross_entropy": [],
  "canonical": [],
  "canonical_axis": [],
  "canonical_name": [],
  "cast": [],
  "checkPath": [],
  "check_error": [],
  "check_hidden_size": [],
  "checkpoint": [],
  "choose_state_per_hypo": [],
  "clean_op": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "clone_input": [],
  "cls": [],
  "cmd_exists": [],
  "collections": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "compare": [],
  "compare_outputs": [],
  "compare_reference": [],
  "condition": [],
  "const_if_tensor": [],
  "constrain_internal": [],
  "constructor": [],
  "contextlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "conv": [],
  "conversion": [],
  "copy": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "copy_func": [],
  "createNets": [],
  "create_grad": [],
  "create_internal": [],
  "create_net": [],
  "create_path": [],
  "create_queue": [],
  "cross_entropy": [],
  "ctypes": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "cudaStatus": [],
  "cv2": [],
  "data_type": [],
  "datetime": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dec_ref": [],
  "device_count": [],
  "dict": [],
  "difflib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "dim_size": [],
  "distutils": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "do_set": [],
  "double_backwards_fn": [],
  "dtypes": [],
  "embedding_after_pooling": [],
  "emit_arg": [],
  "emit_args": [],
  "emit_block": [],
  "emit_ret": [],
  "emit_rets": [],
  "emit_schema": [],
  "emit_type": [],
  "enum": [
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "err_fn": [],
  "errno": [],
  "event": [],
  "execution_step": [],
  "exp_lr": [],
  "f": [],
  "factory": [
   "factory_boy/conda-forge/noarch/factory_boy-2.11.1-pyh9f0ad1d_1"
  ],
  "fail_test": [],
  "fake_requires_grad": [],
  "fc1_output": [],
  "fc2_output": [],
  "fc3_output": [],
  "feed": [],
  "fetch": [],
  "fetch_total": [],
  "filter": [],
  "fixed_lr": [],
  "fixed_seed_func": [],
  "fn": [],
  "forward_pass_builder_fun": [],
  "from_untyped": [],
  "fun": [],
  "func": [],
  "functional": [],
  "functools": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "future": [],
  "g": [],
  "gather_map": [],
  "gc": [],
  "generate_input_state": [],
  "getModule": [],
  "getNorm": [],
  "get_allowed_errors": [],
  "get_blob_data": [],
  "get_blob_weighted_sum": [],
  "get_current_scope": [],
  "get_device_properties": [],
  "get_discounts": [],
  "get_initializer_args": [],
  "get_inplaces": [],
  "get_label": [],
  "get_name_list": [],
  "get_named_summaries": [],
  "get_nvidia_smi": [],
  "get_op_with_output": [],
  "get_platform": [],
  "get_remapped_str": [],
  "get_sharing_strategy": [],
  "glob": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "google": [],
  "graph_diagnostic_info": [],
  "has_argument": [],
  "hashlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "hidden": [],
  "hook": [],
  "hyp_func": [],
  "hypothesis": [
   "hypothesis/conda-forge/noarch/hypothesis-5.23.12-py_0"
  ],
  "if_false": [],
  "if_step": [],
  "if_true": [],
  "imp": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "importlib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "include_paths": [],
  "indices": [],
  "indices_blob": [],
  "infer_blob_device": [],
  "inferred_histo": [],
  "init": [],
  "init_blob": [],
  "inline_graph": [],
  "input": [],
  "input_builder_fun": [],
  "input_generater": [],
  "inspect": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "int_array": [],
  "io": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "is_activation_blob": [],
  "is_compatible_all": [],
  "is_functional_layer": [],
  "is_grad_blob": [],
  "is_grad_op": [],
  "is_tensor_method": [],
  "itertools": [],
  "join": [],
  "json": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "layer_func": [],
  "layer_norm_ref": [],
  "layers": [],
  "lc_2d_nchw": [],
  "legacy_load": [],
  "lengths_to_ids": [],
  "lengths_to_segment_ids": [],
  "library_paths": [],
  "lmbda": [],
  "lmdb": [],
  "load": [],
  "log_sigm": [],
  "logging": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "loss_fn": [],
  "make_blob_on_context": [],
  "make_builder": [],
  "make_default_double_backwards_fn": [],
  "make_rnn": [],
  "make_sparse": [],
  "map_location": [],
  "map_ops": [],
  "math": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "matplotlib": [
   "matplotlib-base/conda-forge/linux-64/matplotlib-base-3.3.3-py36h159efd9_0"
  ],
  "max": [],
  "maybe_start_on_next_line": [],
  "maybe_warn_nondeterministic": [],
  "merge_arrays": [],
  "meta": [],
  "meterClass": [],
  "meth": [],
  "method": [],
  "min": [],
  "mock": [],
  "model": [],
  "modifier": [],
  "modify_ops": [],
  "module": [],
  "modules": [],
  "momentum_sgd": [],
  "mpi4py": [
   "mpi4py/conda-forge/linux-64/mpi4py-3.0.3-py36h7b8b12a_6"
  ],
  "multiprocessing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "mx_grad": [],
  "name_for": [],
  "named_summaries_to_events": [],
  "nccl": [],
  "net_assert": [],
  "net_modifier": [],
  "networkx": [
   "networkx/conda-forge/noarch/networkx-2.3-py_0"
  ],
  "new_tensor": [],
  "new_type": [],
  "next": [],
  "np_ref": [],
  "num_bytes": [],
  "num_cuda_devices": [],
  "num_hip_devices": [],
  "num_visited": [],
  "numbers": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "numpy": [
   "numpy/conda-forge/linux-64/numpy-1.9.3-py27_blas_openblashb06ca3d_7"
  ],
  "object": [],
  "onnx": [
   "onnx/conda-forge/linux-64/onnx-1.9.0-py37h284874a_0"
  ],
  "op_ref": [],
  "operator": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "optimizer": [],
  "original_compile": [],
  "original_init": [],
  "original_spawn": [],
  "os": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "output_record": [],
  "pack_group": [],
  "param": [
   "param/conda-forge/noarch/param-1.8.2-py_0"
  ],
  "param_update_builder_fun": [],
  "parent_list": [],
  "parse_args": [],
  "parse_net_def": [],
  "parse_proto": [],
  "parse_summary": [],
  "part": [],
  "past": [],
  "pathlib": [
   "pathlib/conda-forge/noarch/pathlib-1.0.1-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pdb": [
   "pdbpp/conda-forge/noarch/pdbpp-0.9.5-py_1",
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pickle": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pkgutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "platform": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "powt_grad": [],
  "powt_op": [],
  "prepend": [],
  "previous_handler": [],
  "printer": [],
  "prod": [],
  "pstats": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "pydot": [
   "pydot/conda-forge/noarch/pydot-1.2.3-py_0"
  ],
  "quantization_ref": [],
  "queue": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "queued_call": [],
  "raise_err_msg": [],
  "randn_like": [],
  "random": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "raw_input": [],
  "re": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "recursive_path_builder": [],
  "ref": [],
  "ref_ctc_decoder": [],
  "ref_ctc_decoder_no_merge_arg": [],
  "ref_func": [],
  "ref_nchw": [],
  "ref_sum": [],
  "reform_weights": [],
  "reg": [
   "reg/conda-forge/noarch/reg-0.12-py_0"
  ],
  "register_all": [],
  "regularizer": [],
  "relax_fp16_check": [],
  "relu": [],
  "remap": [],
  "remap_list": [],
  "remap_op": [],
  "remove_from": [],
  "remove_suffix": [],
  "rename_list": [],
  "replace_bools": [],
  "replace_if_empty": [],
  "replace_nones": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "res_mod": [],
  "reshape": [],
  "resolve_functional_layer": [],
  "restore_location": [],
  "result": [],
  "retrieve_state": [],
  "rff_output": [],
  "roialign_flip": [],
  "roialign_rot90": [],
  "run": [],
  "run_function": [],
  "run_fwd_bwd": [],
  "run_mod_and_filter_tensor_outputs": [],
  "run_prof": [],
  "run_with_pip": [],
  "s": [],
  "sampling_prob": [],
  "scatter_map": [],
  "scipy": [
   "scipy/conda-forge/linux-64/scipy-0.18.1-np111py34_blas_openblas_200"
  ],
  "set_names": [],
  "setuptools": [
   "setuptools/conda-forge/linux-64/setuptools-41.2.0-py27_0"
  ],
  "sgd_1": [],
  "sgd_2": [],
  "sharding": [],
  "shutil": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sigm": [],
  "sigmoid": [],
  "signal": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "simulation_hsm_search": [],
  "sinusoid_encoding": [],
  "six": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "privy/conda-forge/noarch/privy-6.0.0-py_0",
   "six/conda-forge/linux-64/six-1.14.0-py36_0"
  ],
  "size_from_dim": [],
  "size_to_dim": [],
  "skimage": [],
  "smoothed_label": [],
  "socket": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "sparse_lengths_sum_8BitsRowwiseOp_cpu_reg": [],
  "sparse_lengths_sum_ref": [],
  "sparse_lengths_weightedsum_8BitsRowwiseOp_cpu_ref": [],
  "sparse_lengths_weightedsum_ref": [],
  "split_net": [],
  "split_ref": [],
  "sqlite3": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "ssa_name": [],
  "step_lr": [],
  "str": [],
  "string": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "stripBlobName": [],
  "struct": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "subprocess": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "substep_edge": [],
  "sumN": [],
  "swish": [],
  "symbolic_fn": [],
  "sys": [],
  "sysconfig": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tagger": [],
  "tarfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tempfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "tensor2list": [],
  "tensor_class": [],
  "tensor_type": [],
  "tensorflow": [
   "tensorflow/conda-forge/linux-64/tensorflow-0.12.1-py27_2"
  ],
  "test_map_func": [],
  "textwrap": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "threading": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "time": [],
  "to_str_list": [],
  "to_untyped": [],
  "torch": [],
  "tqdm": [
   "tqdm/conda-forge/noarch/tqdm-4.20.0-py_0"
  ],
  "traceback": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "trainerClass": [],
  "transform": [],
  "transform_weights": [],
  "translator": [],
  "trim": [],
  "tuple_fn": [],
  "type": [],
  "types": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "typing": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unflatten_helper": [],
  "unittest": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "unpack_triple": [],
  "unscope_name": [],
  "update_grad_input_fn": [],
  "update_group": [],
  "urllib": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "urllib2": [],
  "urlparse": [],
  "uuid": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "validate_op": [],
  "variable": [],
  "verify_graph_equality": [],
  "verify_inplace_blobs": [],
  "versionMismatchInfoIn": [],
  "versionMismatchInfoOut": [],
  "warn_imbalance": [],
  "warnings": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "weak_self": [],
  "weakref": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ],
  "while_step": [],
  "wrap_retval": [],
  "ws_output": [],
  "zero_fill": [],
  "zipfile": [
   "python/conda-forge/linux-64/python-3.6.11-h4d41432_0_cpython"
  ]
 }
}