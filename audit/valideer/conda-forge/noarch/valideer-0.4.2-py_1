{
 "bad": [
  "C",
  "C.is_even_static",
  "C.is_odd_static",
  "DummyValidator",
  "MyValidator",
  "ObjectNullable",
  "additional_validate",
  "base.ValidationError",
  "base.Validator",
  "base.get_type_name",
  "base.parse",
  "collections.Mapping",
  "collections.Sequence",
  "compat.imap",
  "compat.iteritems",
  "compat.izip",
  "compat.string_types",
  "compat.with_metaclass",
  "contextlib.contextmanager",
  "datetime.date",
  "datetime.date.today",
  "datetime.datetime",
  "datetime.datetime.now",
  "datetime.datetime.utcfromtimestamp",
  "datetime.time",
  "decimal.Decimal",
  "decorator.decorator",
  "default",
  "dict.items",
  "dict.iteritems",
  "f",
  "factory",
  "fcall",
  "functools.partial",
  "get_schema",
  "inspect.getargspec",
  "inspect.getcallargs",
  "inspect.isclass",
  "inspect.isroutine",
  "is_even",
  "is_odd",
  "itertools.imap",
  "itertools.izip",
  "json.dumps",
  "mcls",
  "numbers.Integral",
  "numbers.Number",
  "re.compile",
  "register",
  "smallint",
  "str.isalnum",
  "sys.version_info",
  "threading.RLock",
  "type.__name__",
  "type.__new__",
  "unittest.TestCase",
  "unittest.main",
  "validate",
  "validate_item",
  "validate_key",
  "validate_value",
  "validator",
  "validator.__class__",
  "validators.Object",
  "valideer.AdaptBy",
  "valideer.AdaptTo",
  "valideer.AllOf",
  "valideer.AnyOf",
  "valideer.Boolean",
  "valideer.ChainOf",
  "valideer.Condition",
  "valideer.Enum",
  "valideer.HeterogeneousSequence",
  "valideer.HomogeneousSequence",
  "valideer.Integer",
  "valideer.Mapping",
  "valideer.NonNullable",
  "valideer.Nullable",
  "valideer.Number",
  "valideer.Object",
  "valideer.Object.REMOVE",
  "valideer.Object.REQUIRED_PROPERTIES",
  "valideer.Range",
  "valideer.SchemaError",
  "valideer.String",
  "valideer.Type",
  "valideer.ValidationError",
  "valideer.Validator",
  "valideer.Validator.parse",
  "valideer.Validator.register",
  "valideer.accepts",
  "valideer.adapts",
  "valideer.base.SchemaError",
  "valideer.base.ValidationError",
  "valideer.base._MetaValidator",
  "valideer.base._NAMED_VALIDATORS",
  "valideer.base._TYPE_NAMES",
  "valideer.base._VALIDATOR_FACTORIES",
  "valideer.base._VALIDATOR_FACTORIES_LOCK",
  "valideer.base.get_type_name",
  "valideer.base.parse",
  "valideer.base.parsing",
  "valideer.base.register",
  "valideer.base.register_factory",
  "valideer.base.reset_type_names",
  "valideer.compat.PY2",
  "valideer.compat.int_types",
  "valideer.compat.long",
  "valideer.compat.string_types",
  "valideer.compat.unicode",
  "valideer.compat.xrange",
  "valideer.parse",
  "valideer.parsing",
  "valideer.register",
  "valideer.returns",
  "valideer.set_name_for_types",
  "valideer.tests.test_validators.Date",
  "valideer.tests.test_validators.Fraction",
  "valideer.tests.test_validators.Gender",
  "valideer.tests.test_validators.OptionalPropertiesTestValidator",
  "valideer.tests.test_validators.TestValidator",
  "valideer.validators.AdaptBy",
  "valideer.validators.AdaptTo",
  "valideer.validators.Condition",
  "valideer.validators.Enum",
  "valideer.validators.HeterogeneousSequence",
  "valideer.validators.HomogeneousSequence",
  "valideer.validators.Mapping",
  "valideer.validators.NonNullable",
  "valideer.validators.Nullable",
  "valideer.validators.Object",
  "valideer.validators.Pattern",
  "valideer.validators.Range",
  "valideer.validators.String",
  "valideer.validators.Type",
  "valideer.validators._SRE_Pattern",
  "valideer.validators._format_types"
 ],
 "deps": {
  "C": [],
  "DummyValidator": [],
  "MyValidator": [],
  "ObjectNullable": [],
  "additional_validate": [],
  "base": [],
  "collections": [],
  "compat": [],
  "contextlib": [],
  "datetime": [],
  "decimal": [],
  "decorator": [],
  "default": [],
  "dict": [],
  "f": [],
  "factory": [],
  "fcall": [],
  "functools": [],
  "get_schema": [],
  "inspect": [],
  "is_even": [],
  "is_odd": [],
  "itertools": [],
  "json": [],
  "mcls": [],
  "numbers": [],
  "re": [],
  "register": [],
  "smallint": [],
  "str": [],
  "sys": [],
  "threading": [],
  "type": [],
  "unittest": [],
  "validate": [],
  "validate_item": [],
  "validate_key": [],
  "validate_value": [],
  "validator": [],
  "validators": [],
  "valideer": []
 }
}