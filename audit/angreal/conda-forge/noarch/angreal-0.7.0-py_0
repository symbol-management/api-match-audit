{
 "bad": [
  "Loader",
  "__future__.unicode_literals",
  "angreal.argument",
  "angreal.cli.__init__.AngrealCLI",
  "angreal.cli.__init__.get_base_commands",
  "angreal.cli.__init__.print_version",
  "angreal.command",
  "angreal.integrations.cookiecutter.__init__.REPO_REGEX",
  "angreal.integrations.cookiecutter.__init__.determine_repo_dir",
  "angreal.integrations.cookiecutter.__init__.dump",
  "angreal.integrations.cookiecutter.__init__.expand_abbreviations",
  "angreal.integrations.cookiecutter.__init__.get_file_name",
  "angreal.integrations.cookiecutter.__init__.is_repo_url",
  "angreal.integrations.cookiecutter.__init__.is_zip_file",
  "angreal.integrations.cookiecutter.__init__.repository_has_cookiecutter_json",
  "angreal.option",
  "collections.OrderedDict",
  "collections.abc.Callable",
  "collections.defaultdict",
  "cookiecutter.config.get_user_config",
  "cookiecutter.environment.StrictEnvironment",
  "cookiecutter.exceptions.NonTemplatedInputDirException",
  "cookiecutter.exceptions.OutputDirExistsException",
  "cookiecutter.exceptions.RepositoryNotFound",
  "cookiecutter.exceptions.UndefinedVariableInTemplate",
  "cookiecutter.generate.ensure_dir_is_templated",
  "cookiecutter.generate.generate_context",
  "cookiecutter.generate.generate_file",
  "cookiecutter.generate.is_copy_only_path",
  "cookiecutter.generate.render_and_create_dir",
  "cookiecutter.utils.make_sure_path_exists",
  "cookiecutter.utils.rmtree",
  "cookiecutter.utils.work_in",
  "cookiecutter.vcs.clone",
  "cookiecutter.zipfile.unzip",
  "datetime",
  "datetime.date",
  "datetime.datetime",
  "datetime.datetime.strptime",
  "distutils.spawn.find_executable",
  "docker",
  "docker.from_env",
  "doit.cmd_base.TaskLoader",
  "doit.doit_cmd.DoitMain",
  "doit.task.dict_to_task",
  "f",
  "f.__name__",
  "fnmatch",
  "fnmatch.fnmatch",
  "functools",
  "functools.wraps",
  "future.utils.iteritems",
  "gitlab.DEVELOPER_ACCESS",
  "gitlab.MASTER_ACCESS",
  "gitlab.OWNER_ACCESS",
  "importlib",
  "importlib.import_module",
  "importlib.util",
  "json",
  "json.dump",
  "json.load",
  "json.loads",
  "logging",
  "logging.getLogger",
  "os",
  "os.chdir",
  "os.environ",
  "os.environ.get",
  "os.environ.keys",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.isfile",
  "os.path.join",
  "os.path.normpath",
  "os.path.relpath",
  "os.path.split",
  "os.unlink",
  "os.walk",
  "past.builtins.basestring",
  "pathlib.Path",
  "platform",
  "platform.system",
  "re",
  "re.compile",
  "shutil",
  "shutil.copy",
  "shutil.copyfile",
  "shutil.copymode",
  "shutil.copytree",
  "shutil.rmtree",
  "subprocess",
  "subprocess.DEVNULL",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.run",
  "sys",
  "sys.executable",
  "sys.prefix",
  "sys.stderr",
  "task",
  "tempfile",
  "tempfile.mkdtemp",
  "text_in_file"
 ],
 "deps": {
  "Loader": [],
  "__future__": [],
  "angreal": [],
  "click": [
   "click/conda-forge/noarch/click-7.0-py_0"
  ],
  "collections": [],
  "cookiecutter": [],
  "datetime": [],
  "distutils": [],
  "docker": [],
  "doit": [],
  "f": [],
  "fnmatch": [],
  "functools": [],
  "future": [],
  "github": [
   "pygithub/conda-forge/noarch/pygithub-1.54.1-pyhd3deb0d_0"
  ],
  "gitlab": [
   "python-gitlab/conda-forge/noarch/python-gitlab-1.7.0-py_2001"
  ],
  "importlib": [],
  "jinja2": [
   "jinja2/conda-forge/noarch/jinja2-2.10-py_1"
  ],
  "json": [],
  "logging": [],
  "os": [],
  "past": [],
  "pathlib": [],
  "platform": [],
  "re": [],
  "requests": [
   "google-cloud-bigquery-storage-core/conda-forge/noarch/google-cloud-bigquery-storage-core-2.0.0-pyh9f0ad1d_1",
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "semver": [
   "semver/conda-forge/noarch/semver-2.9.1-py_0"
  ],
  "shutil": [],
  "subprocess": [],
  "sys": [],
  "task": [],
  "tempfile": [],
  "text_in_file": [],
  "validate": [
   "configobj/conda-forge/noarch/configobj-5.0.6-py_0"
  ]
 }
}