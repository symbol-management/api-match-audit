{
 "bad": [
  "argparse.ArgumentParser",
  "bs4.BeautifulSoup",
  "data.export_dict",
  "datetime.datetime.fromtimestamp",
  "errno.EEXIST",
  "func",
  "function",
  "functools.wraps",
  "get_list",
  "getpass.getuser",
  "helpers.get_headers",
  "helpers.get_params",
  "helpers.get_results",
  "helpers.parse_success_response",
  "itertools.repeat",
  "json.dumps",
  "json.load",
  "json.loads",
  "multiprocessing.Pool",
  "multiprocessing.Process",
  "multiprocessing.Queue",
  "os.chdir",
  "os.environ",
  "os.environ.get",
  "os.environ.items",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.mkdir",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.exists",
  "os.path.expanduser",
  "os.path.isdir",
  "os.path.join",
  "os.path.splitext",
  "os.remove",
  "psutil.Process",
  "psutil._common.pcputimes",
  "psutil._common.pctxsw",
  "psutil._common.pgids",
  "psutil._common.pionice",
  "psutil._common.puids",
  "psutil._pslinux.pfullmem",
  "psutil._pslinux.pio",
  "psutil._pslinux.pmem",
  "psutil.cpu_count",
  "psutil.cpu_freq",
  "psutil.cpu_percent",
  "psutil.cpu_stats",
  "psutil.cpu_times",
  "psutil.cpu_times_percent",
  "psutil.disk_io_counters",
  "psutil.disk_partitions",
  "psutil.disk_usage",
  "psutil.net_connections",
  "psutil.net_if_addrs",
  "psutil.net_if_stats",
  "psutil.net_io_counters",
  "psutil.os.sep",
  "psutil.os.sys",
  "psutil.os.sys.api_version",
  "psutil.os.sys.copyright",
  "psutil.os.sys.executable",
  "psutil.os.sys.int_info.bits_per_digit",
  "psutil.os.sys.int_info.sizeof_digit",
  "psutil.os.sys.maxsize",
  "psutil.os.sys.modules",
  "psutil.os.sys.path",
  "psutil.os.sys.platform",
  "psutil.os.sys.prefix",
  "psutil.os.sys.version",
  "psutil.os.sys.version_info",
  "psutil.os.uname",
  "psutil.sensors_battery",
  "psutil.sensors_fans",
  "psutil.sensors_temperatures",
  "psutil.users",
  "psutil.virtual_memory",
  "psutils.Task",
  "random.choice",
  "re.search",
  "re.sub",
  "results.Task",
  "schedule.clear_schedule",
  "schedule.get_crontab",
  "schedule.get_job",
  "schedule.has_schedule",
  "schedule.main",
  "schedule.remove_schedule",
  "schedule.schedule",
  "schedule.update_schedule",
  "settings.get_section",
  "settings.get_setting",
  "settings.has_section",
  "settings.has_setting",
  "settings.print_add_task",
  "settings.print_section",
  "settings.remove_section",
  "settings.remove_setting",
  "settings.set_setting",
  "shlex.split",
  "shutil.copyfile",
  "shutil.move",
  "shutil.rmtree",
  "signal.SIGINT",
  "signal.SIG_IGN",
  "signal.signal",
  "socket.gethostname",
  "spinner.Spinner",
  "subprocess.CalledProcessError",
  "subprocess.PIPE",
  "subprocess.Popen",
  "subprocess.STDOUT",
  "subprocess.check_output",
  "sys.exit",
  "sys.platform",
  "sys.platform.startswith",
  "sys.stderr",
  "sys.stdout",
  "sys.stdout.flush",
  "sys.stdout.write",
  "tasks.from_env_task",
  "tasks.get_url_selection",
  "tasks.users_task",
  "tempfile._get_candidate_names",
  "tempfile.gettempdir",
  "tempfile.mkdtemp",
  "tempfile.mkstemp",
  "threading.Thread",
  "time.gmtime",
  "time.sleep",
  "time.strftime",
  "time.time",
  "unittest.TestCase",
  "unittest.main",
  "watchme.__version__",
  "watchme.command.commit.get_earliest_commit",
  "watchme.command.commit.get_latest_commit",
  "watchme.command.commit.git_pwd",
  "watchme.command.create.create_watcher",
  "watchme.command.create.create_watcher_base",
  "watchme.command.create_watcher",
  "watchme.command.get_commits",
  "watchme.command.get_watchers",
  "watchme.command.git_add",
  "watchme.command.git_clone",
  "watchme.command.git_commit",
  "watchme.command.git_date",
  "watchme.command.git_show",
  "watchme.command.list_task",
  "watchme.command.list_watcher",
  "watchme.command.list_watcher_types",
  "watchme.command.utils._general_list",
  "watchme.command.write_timestamp",
  "watchme.config._get_config",
  "watchme.config.check_exists",
  "watchme.config.generate_watcher_config",
  "watchme.config.get_configfile_template",
  "watchme.config.read_config",
  "watchme.config.write_config",
  "watchme.defaults.USERHOME",
  "watchme.defaults.WATCHME_BASE_DIR",
  "watchme.defaults.WATCHME_DEFAULT_TYPE",
  "watchme.defaults.WATCHME_NOTALLOWED_PARAMS",
  "watchme.defaults.WATCHME_TASK_TYPES",
  "watchme.defaults.WATCHME_WATCHER",
  "watchme.defaults.WATCHME_WORKERS",
  "watchme.defaults._config",
  "watchme.defaults.getenv",
  "watchme.get_watcher",
  "watchme.logger.bot.custom",
  "watchme.logger.bot.debug",
  "watchme.logger.bot.error",
  "watchme.logger.bot.exit",
  "watchme.logger.bot.info",
  "watchme.logger.bot.newline",
  "watchme.logger.bot.show_progress",
  "watchme.logger.bot.verbose",
  "watchme.logger.bot.warning",
  "watchme.logger.message.ABORT",
  "watchme.logger.message.CRITICAL",
  "watchme.logger.message.CUSTOM",
  "watchme.logger.message.CYAN",
  "watchme.logger.message.DARKRED",
  "watchme.logger.message.DEBUG",
  "watchme.logger.message.ERROR",
  "watchme.logger.message.INFO",
  "watchme.logger.message.LOG",
  "watchme.logger.message.PURPLE",
  "watchme.logger.message.QUIET",
  "watchme.logger.message.RED",
  "watchme.logger.message.VERBOSE2",
  "watchme.logger.message.VERBOSE3",
  "watchme.logger.message.WARNING",
  "watchme.logger.message.WatchMeMessage",
  "watchme.logger.message.YELLOW",
  "watchme.logger.message.convert2boolean",
  "watchme.logger.message.get_logging_level",
  "watchme.logger.message.get_user_color_preference",
  "watchme.logger.namer.RobotNamer",
  "watchme.logger.namer.main",
  "watchme.logger.progress.BAR_EMPTY_CHAR",
  "watchme.logger.progress.BAR_FILLED_CHAR",
  "watchme.logger.progress.BAR_TEMPLATE",
  "watchme.logger.progress.ETA_INTERVAL",
  "watchme.logger.progress.ETA_SMA_WINDOW",
  "watchme.logger.progress.ProgressBar",
  "watchme.logger.progress.STREAM",
  "watchme.tasks.TaskBase",
  "watchme.tasks.decorators.DecoratorBase",
  "watchme.tasks.decorators.none_to_list",
  "watchme.tasks.worker.Workers",
  "watchme.tasks.worker.multi_package",
  "watchme.tests.test_psutils_decorator.myfunc",
  "watchme.tests.test_psutils_decorator.result",
  "watchme.utils.copyfile",
  "watchme.utils.fileio.print_json",
  "watchme.utils.generate_temporary_file",
  "watchme.utils.get_host",
  "watchme.utils.get_installdir",
  "watchme.utils.get_tmpdir",
  "watchme.utils.get_user",
  "watchme.utils.get_userhome",
  "watchme.utils.get_watchme_env",
  "watchme.utils.mkdir_p",
  "watchme.utils.print_json",
  "watchme.utils.read_file",
  "watchme.utils.run_command",
  "watchme.utils.terminal.run_command",
  "watchme.utils.which",
  "watchme.utils.write_file",
  "watchme.utils.write_json",
  "watchme.version.INSTALL_PSUTILS",
  "watchme.version.INSTALL_REQUIRES",
  "watchme.version.INSTALL_URLS_DYNAMIC",
  "watchme.version.__version__",
  "watchme.watchers.Watcher",
  "watchme.watchers.Watcher.name",
  "watchme.watchers.Watcher.quiet",
  "watchme.watchers.psutils.Task",
  "watchme.watchers.psutils.decorators.ProcessRunner",
  "watchme.watchers.psutils.decorators.TerminalRunner",
  "watchme.watchers.psutils.decorators.monitor_resources",
  "watchme.watchers.psutils.tasks._filter_result",
  "watchme.watchers.psutils.tasks._get_pid",
  "watchme.watchers.results.Task",
  "watchme.watchers.urls.Task"
 ],
 "deps": {
  "argparse": [],
  "bs4": [],
  "configparser": [
   "configparser/conda-forge/noarch/configparser-5.0.1-py_0"
  ],
  "crontab": [
   "python-crontab/conda-forge/noarch/python-crontab-2.3.6-py_0"
  ],
  "data": [],
  "datetime": [],
  "errno": [],
  "func": [],
  "function": [],
  "functools": [],
  "get_list": [],
  "getpass": [],
  "helpers": [],
  "itertools": [],
  "json": [],
  "multiprocessing": [],
  "os": [],
  "psutil": [],
  "psutils": [],
  "random": [],
  "re": [],
  "requests": [
   "requests/conda-forge/noarch/requests-2.23.0-pyh8c360ce_2"
  ],
  "results": [],
  "schedule": [],
  "settings": [],
  "shlex": [],
  "shutil": [],
  "signal": [],
  "socket": [],
  "spinner": [],
  "subprocess": [],
  "sys": [],
  "tasks": [],
  "tempfile": [],
  "threading": [],
  "time": [],
  "unittest": [],
  "watchme": []
 }
}