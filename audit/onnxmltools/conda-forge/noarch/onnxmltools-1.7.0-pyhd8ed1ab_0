{
 "bad": [
  "Convolution.calculate_convolution_and_pooling_1D_output_shape",
  "DictionaryType",
  "FloatTensorType",
  "FloatType",
  "Int64TensorType",
  "Int64Type",
  "Reshape.apply_reshape",
  "SVC.extract_support_vectors_as_dense_tensor",
  "Scale.deduce_broadcast_axis_and_shape",
  "SimpleRNN.extract_rnn_activation_info",
  "StringTensorType",
  "StringType",
  "_parse.WrappedBooster",
  "_parse.parse_coreml",
  "_parse.parse_h2o",
  "_parse.parse_libsvm",
  "_parse.parse_lightgbm",
  "_parse.parse_sparkml",
  "_parse.parse_xgboost",
  "apply_abs",
  "apply_affine",
  "apply_clip",
  "apply_exp",
  "apply_log",
  "apply_pow",
  "apply_reciprocal",
  "apply_sqrt",
  "apply_thresholded_relu",
  "caffe2.python.onnx.backend.run_model",
  "cntk.Function.load",
  "cntk.ModelFormat.ONNX",
  "collections.Counter",
  "collections.Iterable",
  "common._apply_operation.apply_add",
  "common._apply_operation.apply_affine",
  "common._apply_operation.apply_argmax",
  "common._apply_operation.apply_batch_norm",
  "common._apply_operation.apply_cast",
  "common._apply_operation.apply_concat",
  "common._apply_operation.apply_constant",
  "common._apply_operation.apply_crop_height_width",
  "common._apply_operation.apply_div",
  "common._apply_operation.apply_elu",
  "common._apply_operation.apply_exp",
  "common._apply_operation.apply_floor",
  "common._apply_operation.apply_hard_sigmoid",
  "common._apply_operation.apply_identity",
  "common._apply_operation.apply_instance_norm",
  "common._apply_operation.apply_leaky_relu",
  "common._apply_operation.apply_matmul",
  "common._apply_operation.apply_max",
  "common._apply_operation.apply_mean",
  "common._apply_operation.apply_min",
  "common._apply_operation.apply_mul",
  "common._apply_operation.apply_neg",
  "common._apply_operation.apply_pad",
  "common._apply_operation.apply_parametric_softplus",
  "common._apply_operation.apply_prelu",
  "common._apply_operation.apply_relu",
  "common._apply_operation.apply_reshape",
  "common._apply_operation.apply_scaled_tanh",
  "common._apply_operation.apply_sigmoid",
  "common._apply_operation.apply_split",
  "common._apply_operation.apply_sub",
  "common._apply_operation.apply_sum",
  "common._apply_operation.apply_tanh",
  "common._apply_operation.apply_tile",
  "common._apply_operation.apply_transpose",
  "common._apply_operation.apply_upsample",
  "common._container.CoremlModelContainer",
  "common._container.H2OModelContainer",
  "common._container.LibSvmModelContainer",
  "common._container.LightGbmModelContainer",
  "common._container.SparkmlModelContainer",
  "common._container.XGBoostModelContainer",
  "common._registration.register_converter",
  "common._registration.register_shape_calculator",
  "common._topology.Topology",
  "common._topology.convert_topology",
  "common.data_types.DictionaryType",
  "common.data_types.FloatTensorType",
  "common.data_types.FloatType",
  "common.data_types.Int64TensorType",
  "common.data_types.Int64Type",
  "common.data_types.SequenceType",
  "common.data_types.StringTensorType",
  "common.data_types.StringType",
  "common.data_types.TensorType",
  "common.get_xgb_params",
  "common.shape_calculator.calculate_linear_regressor_output_shapes",
  "common.tree_ensemble.add_tree_to_attribute_pairs",
  "common.tree_ensemble.get_default_tree_classifier_attribute_pairs",
  "common.tree_ensemble.get_default_tree_regressor_attribute_pairs",
  "common.utils.cast_list",
  "common.utils.check_input_and_output_numbers",
  "common.utils.check_input_and_output_types",
  "common.utils.coreml_installed",
  "common.utils.h2o_installed",
  "common.utils.keras2onnx_installed",
  "common.utils.libsvm_installed",
  "common.utils.lightgbm_installed",
  "common.utils.skl2onnx_installed",
  "common.utils.sklearn_installed",
  "common.utils.sparkml_installed",
  "common.utils.xgboost_installed",
  "convert.common.data_types.FloatTensorType",
  "convert.common.utils.is_numeric_type",
  "convert.common.utils.is_string_type",
  "convert.xgboost._parse._get_attributes",
  "copy.deepcopy",
  "copy_sv_coef",
  "coreml.convert.convert",
  "coremltools.models.MLModel",
  "coremltools.proto.GLMClassifier_pb2.GLMClassifier.Logit",
  "coremltools.proto.GLMClassifier_pb2.GLMClassifier.OneVsRest",
  "coremltools.proto.GLMClassifier_pb2.GLMClassifier.Probit",
  "coremltools.proto.GLMClassifier_pb2.GLMClassifier.ReferenceClass",
  "coremltools.proto.GLMRegressor_pb2.GLMRegressor.Logit",
  "coremltools.proto.GLMRegressor_pb2.GLMRegressor.NoTransform",
  "coremltools.proto.GLMRegressor_pb2.GLMRegressor.Probit",
  "coremltools.proto.NeuralNetwork_pb2.FlattenLayerParams.CHANNEL_LAST",
  "coremltools.proto.NeuralNetwork_pb2.PoolingLayerParams.AVERAGE",
  "coremltools.proto.NeuralNetwork_pb2.PoolingLayerParams.L2",
  "coremltools.proto.NeuralNetwork_pb2.PoolingLayerParams.MAX",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.ARGMAX",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.AVG",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.C",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.CHW",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.H",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.HW",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.L1",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.L2",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.LOGSUM",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.MAX",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.MIN",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.PROD",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.SUM",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.SUMSQUARE",
  "coremltools.proto.NeuralNetwork_pb2.ReduceLayerParams.W",
  "coremltools.proto.NeuralNetwork_pb2.ReorganizeDataLayerParams.DEPTH_TO_SPACE",
  "coremltools.proto.NeuralNetwork_pb2.ReorganizeDataLayerParams.SPACE_TO_DEPTH",
  "coremltools.proto.NeuralNetwork_pb2.ReshapeLayerParams.CHANNEL_LAST",
  "coremltools.proto.NeuralNetwork_pb2.SamePadding.BOTTOM_RIGHT_HEAVY",
  "coremltools.proto.NeuralNetwork_pb2.SamePadding.TOP_LEFT_HEAVY",
  "coremltools.proto.NeuralNetwork_pb2.SliceLayerParams.CHANNEL_AXIS",
  "coremltools.proto.NeuralNetwork_pb2.SliceLayerParams.HEIGHT_AXIS",
  "coremltools.proto.NeuralNetwork_pb2.SliceLayerParams.WIDTH_AXIS",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.ABS",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.EXP",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.INVERSE",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.LOG",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.POWER",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.RSQRT",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.SQRT",
  "coremltools.proto.NeuralNetwork_pb2.UnaryFunctionLayerParams.THRESHOLD",
  "coremltools.proto.NeuralNetwork_pb2.UpsampleLayerParams.BILINEAR",
  "coremltools.proto.NeuralNetwork_pb2.UpsampleLayerParams.NN",
  "decision_tree_classifier.save_read_sparkml_model_data",
  "decision_tree_regressor.convert_decision_tree_regressor",
  "dict_update",
  "find_type_conversion",
  "glob.iglob",
  "h2o.convert.convert",
  "input.shape",
  "input.type",
  "input.type.shape",
  "itertools.chain.from_iterable",
  "json.loads",
  "keras2onnx.convert_keras",
  "libsvm.convert.convert",
  "lightgbm.Booster",
  "lightgbm.LGBMClassifier",
  "lightgbm.LGBMRegressor",
  "lightgbm.convert.convert",
  "linear_classifier.convert_sparkml_linear_classifier",
  "main.save_model",
  "math.ceil",
  "math.cos",
  "math.factorial",
  "math.floor",
  "math.pi",
  "math.sqrt",
  "numbers.Integral",
  "numbers.Real",
  "numpy.abs",
  "numpy.arange",
  "numpy.array",
  "numpy.asarray",
  "numpy.ascontiguousarray",
  "numpy.bool_",
  "numpy.concatenate",
  "numpy.exp",
  "numpy.finfo",
  "numpy.float32",
  "numpy.float64",
  "numpy.floating",
  "numpy.hstack",
  "numpy.int64",
  "numpy.isnan",
  "numpy.issubdtype",
  "numpy.log",
  "numpy.matmul",
  "numpy.ndarray",
  "numpy.number",
  "numpy.ones",
  "numpy.random.rand",
  "numpy.signedinteger",
  "numpy.split",
  "numpy.squeeze",
  "numpy.testing.assert_array_almost_equal",
  "numpy.testing.assert_array_equal",
  "numpy.transpose",
  "numpy.vstack",
  "numpy.zeros",
  "onnx.__version__",
  "onnx.defs.onnx_opset_version",
  "onnx.helper.make_tensor",
  "onnx.helper.split_complex_to_pairs",
  "onnx.load",
  "onnx.mapping.STORAGE_TENSOR_TYPE_TO_FIELD",
  "onnx.mapping.TENSOR_TYPE_TO_STORAGE_TENSOR_TYPE",
  "onnx.onnx_pb.TensorProto",
  "onnx.onnx_pb.TensorProto.COMPLEX128",
  "onnx.onnx_pb.TensorProto.COMPLEX64",
  "onnx.onnx_pb.TensorProto.FLOAT",
  "onnx.onnx_pb.TensorProto.INT32",
  "onnx.onnx_pb.TensorProto.INT64",
  "onnx.onnx_pb.TensorProto.STRING",
  "onnxconverter_common.onnx_ex.get_maximum_opset_supported",
  "onnxruntime.InferenceSession",
  "ops_input_output.get_input_names",
  "ops_input_output.get_output_names",
  "ops_names.get_sparkml_operator_name",
  "os.environ.get",
  "os.getcwd",
  "os.listdir",
  "os.makedirs",
  "os.path.abspath",
  "os.path.dirname",
  "os.path.exists",
  "os.path.join",
  "os.path.normpath",
  "os.path.realpath",
  "os.path.splitext",
  "pandas.DataFrame",
  "pandas.Series",
  "pickle.dump",
  "pickle.load",
  "pkg_resources.get_distribution",
  "pkg_resources.parse_version",
  "pkgutil.find_loader",
  "pprint.pformat",
  "pprint.pprint",
  "proto.helper.make_tensor",
  "proto.onnx_proto.ModelProto",
  "proto.onnx_proto.StringStringEntryProto",
  "proto.onnx_proto.TensorProto.FLOAT",
  "proto.onnx_proto.TensorProto.INT64",
  "proto.onnx_proto.TensorProto.STRING",
  "recursive_call",
  "scipy.sparse.csr.csr_matrix",
  "shutil.copy",
  "skl2onnx.convert.convert_sklearn",
  "sklearn.base.BaseEstimator",
  "sparkml.convert.convert",
  "sparkml.operator_converters.decision_tree_classifier.save_read_sparkml_model_data",
  "sparkml.operator_converters.tree_ensemble_common.sparkml_tree_dataset_to_sklearn",
  "str2number",
  "svm.C_SVC",
  "svm.EPSILON_SVR",
  "svm.LINEAR",
  "svm.NU_SVC",
  "svm.NU_SVR",
  "svm.POLY",
  "svm.RBF",
  "svm.SIGMOID",
  "sys.modules.__path__",
  "sys.version_info",
  "tempfile.mkstemp",
  "tempfile.tempdir",
  "tensorflow.Graph",
  "tensorflow.import_graph_def",
  "tf2onnx.optimizer.optimize_graph",
  "tf2onnx.tfonnx.process_tf_graph",
  "tf2onnx.tfonnx.tf_optimize",
  "time.time",
  "to_array",
  "tree_ensemble_common.save_read_sparkml_model_data",
  "tree_ensemble_common.sparkml_tree_dataset_to_sklearn",
  "utils.SparkMlConversionError",
  "utils_backend.ExpectedAssertionError",
  "utils_backend.OnnxRuntimeAssertionError",
  "utils_backend.compare_backend",
  "utils_backend.compare_outputs",
  "utils_backend.evaluate_condition",
  "utils_backend.extract_options",
  "utils_backend.is_backend_enabled",
  "utils_backend.load_data_and_model",
  "utils_backend_onnxruntime.compare_runtime",
  "uuid.uuid4",
  "warnings.warn",
  "webbrowser.open_new_tab",
  "xgboost.Booster",
  "xgboost.DMatrix",
  "xgboost.XGBClassifier",
  "xgboost.XGBRegressor",
  "xgboost.convert.convert"
 ],
 "deps": {
  "Convolution": [],
  "DictionaryType": [],
  "FloatTensorType": [],
  "FloatType": [],
  "Int64TensorType": [],
  "Int64Type": [],
  "Reshape": [],
  "SVC": [],
  "Scale": [],
  "SimpleRNN": [],
  "StringTensorType": [],
  "StringType": [],
  "_parse": [],
  "apply_abs": [],
  "apply_affine": [],
  "apply_clip": [],
  "apply_exp": [],
  "apply_log": [],
  "apply_pow": [],
  "apply_reciprocal": [],
  "apply_sqrt": [],
  "apply_thresholded_relu": [],
  "caffe2": [],
  "cntk": [],
  "collections": [],
  "common": [],
  "convert": [],
  "copy": [],
  "copy_sv_coef": [],
  "coreml": [],
  "coremltools": [],
  "decision_tree_classifier": [],
  "decision_tree_regressor": [],
  "dict_update": [],
  "find_type_conversion": [],
  "glob": [],
  "h2o": [
   "h2o-py/conda-forge/noarch/h2o-py-3.30.0.6-pyh9f0ad1d_0"
  ],
  "input": [],
  "itertools": [],
  "json": [],
  "keras2onnx": [],
  "libsvm": [],
  "lightgbm": [],
  "linear_classifier": [],
  "main": [],
  "math": [],
  "numbers": [],
  "numpy": [],
  "onnx": [],
  "onnxconverter_common": [
   "onnxconverter-common/conda-forge/noarch/onnxconverter-common-1.6.0-pyhd8ed1ab_0"
  ],
  "onnxmltools": [
   "onnxmltools/conda-forge/noarch/onnxmltools-1.7.0-pyhd8ed1ab_0"
  ],
  "onnxruntime": [],
  "ops_input_output": [],
  "ops_names": [],
  "os": [],
  "pandas": [],
  "pickle": [],
  "pkg_resources": [],
  "pkgutil": [],
  "pprint": [],
  "proto": [],
  "pyspark": [
   "pyspark/conda-forge/noarch/pyspark-2.4.5-py_0"
  ],
  "recursive_call": [],
  "scipy": [],
  "shutil": [],
  "skl2onnx": [],
  "sklearn": [],
  "sparkml": [],
  "str2number": [],
  "svm": [],
  "sys": [],
  "tempfile": [],
  "tensorflow": [],
  "tf2onnx": [],
  "time": [],
  "to_array": [],
  "tree_ensemble_common": [],
  "utils": [],
  "utils_backend": [],
  "utils_backend_onnxruntime": [],
  "uuid": [],
  "warnings": [],
  "webbrowser": [],
  "xgboost": []
 }
}