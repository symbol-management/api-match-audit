{
 "bad": [
  "_pytest",
  "_pytest.__file__",
  "_pytest._code.code.ReprEntry",
  "_pytest._code.code.ReprEntryNative",
  "_pytest._code.code.ReprExceptionInfo",
  "_pytest._code.code.ReprFileLocation",
  "_pytest._code.code.ReprFuncArgs",
  "_pytest._code.code.ReprLocals",
  "_pytest._code.code.ReprTraceback",
  "_pytest.config.Config",
  "_pytest.config.Config.fromdictargs",
  "_pytest.hookspec",
  "_pytest.runner",
  "_pytest.runner.CollectReport",
  "_pytest.runner.TestReport",
  "assembled_report",
  "call",
  "collections.OrderedDict",
  "difflib.unified_diff",
  "disassembled_report",
  "execnet",
  "execnet.RSync",
  "execnet.XSpec",
  "execnet.makegateway",
  "fnmatch",
  "itertools.cycle",
  "method",
  "multiprocessing.cpu_count",
  "notify",
  "os",
  "os.cpu_count",
  "os.environ",
  "os.environ.get",
  "os.getcwd",
  "os.path.abspath",
  "os.path.basename",
  "os.path.dirname",
  "os.path.isabs",
  "os.pathsep",
  "platform",
  "platform.platform",
  "pprint.pprint",
  "py",
  "py._pydir",
  "py.builtin._totext",
  "py.builtin._tryimport",
  "py.builtin.print_",
  "py.code.ExceptionInfo",
  "py.error.ENOENT",
  "py.io.TerminalWriter",
  "py.io.TextIO",
  "py.log.Producer",
  "py.path.local",
  "py.std.time.sleep",
  "pytest",
  "pytest.UsageError",
  "pytest.__file__.rstrip",
  "pytest.fixture",
  "pytest.hookimpl",
  "pytest.mark.firstresult",
  "pytest.mark.tryfirst",
  "pytest.mark.trylast",
  "re",
  "serialize_report",
  "sys",
  "sys.exc_info",
  "sys.executable",
  "sys.path",
  "sys.path.insert",
  "sys.platform",
  "sys.stderr",
  "sys.stdout",
  "sys.version",
  "sys.version_info",
  "time",
  "time.time",
  "val"
 ],
 "deps": {
  "_pytest": [],
  "assembled_report": [],
  "call": [],
  "collections": [],
  "difflib": [],
  "disassembled_report": [],
  "execnet": [],
  "fnmatch": [],
  "itertools": [],
  "method": [],
  "multiprocessing": [],
  "notify": [],
  "os": [],
  "platform": [],
  "pprint": [],
  "py": [],
  "pytest": [],
  "re": [],
  "serialize_report": [],
  "sys": [],
  "time": [],
  "val": []
 }
}