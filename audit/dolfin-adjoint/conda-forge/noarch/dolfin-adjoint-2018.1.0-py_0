{
 "bad": [
  "Functional",
  "ROL.Bounds",
  "ROL.Constraint",
  "ROL.Constraint.__init__",
  "ROL.Objective",
  "ROL.OptimizationProblem",
  "ROL.OptimizationSolver",
  "ROL.ParameterList",
  "ROL.Vector",
  "adjfloat.AdjFloat",
  "algo",
  "algorithm",
  "backend.CompiledExpression",
  "backend.CompiledExpression.__init__",
  "backend.CompiledExpression.__setattr__",
  "backend.Constant",
  "backend.Constant.__init__",
  "backend.Constant.assign",
  "backend.DirichletBC",
  "backend.DirichletBC.__init__",
  "backend.DirichletBC.apply",
  "backend.Expression",
  "backend.Expression.__init__",
  "backend.Expression.__setattr__",
  "backend.Function",
  "backend.Function.__init__",
  "backend.Function.assign",
  "backend.Function.copy",
  "backend.Function.function_space",
  "backend.Function.split",
  "backend.Function.sub",
  "backend.Function.vector",
  "backend.FunctionSpace",
  "backend.GenericVector",
  "backend.GenericVector._ad_to_list",
  "backend.HDF5File.read",
  "backend.LUSolver",
  "backend.LUSolver.__init__",
  "backend.LUSolver.set_operator",
  "backend.LUSolver.solve",
  "backend.LinearVariationalProblem",
  "backend.LinearVariationalSolver",
  "backend.MPI.comm_world",
  "backend.NewtonSolver",
  "backend.NewtonSolver.solve",
  "backend.NonlinearVariationalProblem",
  "backend.NonlinearVariationalSolver",
  "backend.TestFunction",
  "backend.TrialFunction",
  "backend.UserExpression",
  "backend.UserExpression.__init__",
  "backend.UserExpression.__setattr__",
  "backend.__name__",
  "backend.action",
  "backend.adjoint",
  "backend.as_backend_type",
  "backend.assemble",
  "backend.assemble_system",
  "backend.assign",
  "backend.cpp.la.GenericMatrix.__mul__",
  "backend.cpp.la.GenericVector",
  "backend.cpp.la.Vector",
  "backend.derivative",
  "backend.dx",
  "backend.grad",
  "backend.inner",
  "backend.interpolate",
  "backend.project",
  "backend.solve",
  "block.Block",
  "block.__class__.__name__",
  "block.get_dependencies",
  "block.get_outputs",
  "block.output.__class__.__name__",
  "block_variable.BlockVariable",
  "collections.Iterable",
  "compat.constant_function_firedrake_compat",
  "compat.create_bc",
  "compat.extract_bc_subvector",
  "compat.function_from_vector",
  "compat.gather",
  "constant.Constant",
  "constraint_ub",
  "constraints.Constraint",
  "constraints.EqualityConstraint",
  "constraints.InequalityConstraint",
  "constraints.canonicalise",
  "contextlib.contextmanager",
  "control.Control",
  "drivers.compute_gradient",
  "drivers.compute_hessian",
  "e",
  "enlisting.Enlist",
  "fenics_adjoint.assembly.AssembleBlock",
  "fenics_adjoint.backend",
  "fenics_adjoint.backend.DirichletBC",
  "fenics_adjoint.backend.Expression",
  "fenics_adjoint.backend.Function",
  "fenics_adjoint.backend.FunctionAssigner",
  "fenics_adjoint.backend.FunctionSpace",
  "fenics_adjoint.backend.FunctionSpace.sub",
  "fenics_adjoint.backend.Vector",
  "fenics_adjoint.backend.__name__",
  "fenics_adjoint.backend.assemble",
  "fenics_adjoint.backend.cpp.function.Function",
  "fenics_adjoint.backend.cpp.function.FunctionSpace",
  "fenics_adjoint.backend.cpp.la.GenericMatrix",
  "fenics_adjoint.backend.cpp.la.GenericVector",
  "fenics_adjoint.backend.cpp.la.Matrix",
  "fenics_adjoint.backend.cpp.la.PETScVector",
  "fenics_adjoint.backend.cpp.la.Vector",
  "fenics_adjoint.backend.function.expression.BaseExpression",
  "fenics_adjoint.backend.functionspaceimpl.FunctionSpace",
  "fenics_adjoint.backend.functionspaceimpl.FunctionSpace._ad_parent_space",
  "fenics_adjoint.backend.functionspaceimpl.MixedFunctionSpace",
  "fenics_adjoint.backend.functionspaceimpl.WithGeometry",
  "fenics_adjoint.backend.functionspaceimpl.WithGeometry._ad_parent_space",
  "fenics_adjoint.backend.matrix.MatrixBase",
  "fenics_adjoint.backend.solve",
  "fenics_adjoint.backend.vector.Vector",
  "fenics_adjoint.fenics",
  "fenics_adjoint.projection.ProjectBlock",
  "fenics_adjoint.solving.Form",
  "fenics_adjoint.solving.SolveBlock",
  "fenics_adjoint.types.Constant",
  "fenics_adjoint.types.compat._fs_sub",
  "fenics_adjoint.types.compat.backend_fs_sub",
  "fenics_adjoint.types.compat.extract_subfunction",
  "fenics_adjoint.types.constant.AssignBlock",
  "fenics_adjoint.types.constant.Constant",
  "fenics_adjoint.types.dirichletbc.DirichletBC",
  "fenics_adjoint.types.dirichletbc._build_subindices",
  "fenics_adjoint.types.dirichletbc._extract_subindices",
  "fenics_adjoint.types.expression.BaseExpression",
  "fenics_adjoint.types.expression.ExpressionBlock",
  "fenics_adjoint.types.expression._IGNORED_EXPRESSION_ATTRIBUTES",
  "fenics_adjoint.types.expression._REMEMBERED_EXPRESSION_ATTRIBUTES",
  "fenics_adjoint.types.function.AssignBlock",
  "fenics_adjoint.types.function.Function",
  "fenics_adjoint.types.function.MergeBlock",
  "fenics_adjoint.types.function.SplitBlock",
  "fenics_adjoint.types.function._extract_functions_from_lincom",
  "fenics_adjoint.types.genericmatrix.adjoint_genericmatrix_mul",
  "fenics_adjoint.types.genericmatrix.backend_genericmatrix_mul",
  "fenics_adjoint.types.genericvector._ad_to_list",
  "fenics_adjoint.types.io.HDF5File_read",
  "fenics_adjoint.types.io.__HDF5File_read__",
  "fenics_adjoint.ufl_constraints.UFLConstraint",
  "fenics_adjoint.ui.tape",
  "fenics_adjoint.variational_solver.LinearVariationalProblem",
  "fenics_adjoint.variational_solver.LinearVariationalSolver",
  "fenics_adjoint.variational_solver.NonlinearVariationalProblem",
  "fenics_adjoint.variational_solver.NonlinearVariationalSolver",
  "firedrake_adjoint.firedrake",
  "firedrake_adjoint.types.Constant",
  "firedrake_adjoint.types.Function",
  "firedrake_adjoint.types.function.Function",
  "firedrake_adjoint.ui.tape",
  "float.__add__",
  "float.__mul__",
  "float.__neg__",
  "float.__new__",
  "float.__pow__",
  "float.__sub__",
  "float.__truediv__",
  "float_op",
  "function",
  "function.Function",
  "functools.partial",
  "gather",
  "info",
  "logging.warning",
  "moola.BFGS.solve",
  "moola.Functional",
  "moola.HybridCG.solve",
  "moola.NewtonCG.solve",
  "moola.NonLinearCG.solve",
  "moola.Problem",
  "moola.SteepestDescent.solve",
  "moola.TrustRegionNewtonCG.solve",
  "moola.convert_to_moola_dual_vector",
  "moola.events.increment",
  "numpy.arange",
  "numpy.array",
  "numpy.concatenate",
  "numpy.double",
  "numpy.finfo",
  "numpy.float32",
  "numpy.float64",
  "numpy.inf",
  "numpy.int32",
  "numpy.int64",
  "numpy.intc",
  "numpy.log",
  "numpy.ones",
  "numpy.prod",
  "numpy.reshape",
  "numpy.zeros",
  "object.__setattr__",
  "operator",
  "optimization.constraints",
  "optimization.constraints.function",
  "optimization_problem.MaximizationProblem",
  "optimization_problem.OptimizationProblem",
  "optimization_solver.OptimizationSolver",
  "optimization_solver.OptimizationSolver.__init__",
  "os.system",
  "overloaded_type.OverloadedType",
  "overloaded_type.create_overloaded_object",
  "overloaded_type.register_overloaded_type",
  "perturbe",
  "pyOpt.Optimization",
  "pyadjoint.Tape",
  "pyadjoint.__version__",
  "pyadjoint.adjfloat.AddBlock",
  "pyadjoint.adjfloat.AdjFloat",
  "pyadjoint.adjfloat.DivBlock",
  "pyadjoint.adjfloat.FloatOperatorBlock",
  "pyadjoint.adjfloat.MulBlock",
  "pyadjoint.adjfloat.NegBlock",
  "pyadjoint.adjfloat.PowBlock",
  "pyadjoint.adjfloat.SubBlock",
  "pyadjoint.adjfloat.annotate_operator",
  "pyadjoint.block.Block",
  "pyadjoint.block.Block.__init__",
  "pyadjoint.enlisting.Enlist",
  "pyadjoint.optimization.constraints.Constraint",
  "pyadjoint.optimization.constraints.EqualityConstraint",
  "pyadjoint.optimization.constraints.InequalityConstraint",
  "pyadjoint.optimization.constraints.MergedConstraints",
  "pyadjoint.optimization.constraints.numpify",
  "pyadjoint.optimization.moola_problem._moola_installed",
  "pyadjoint.optimization.optimization.maximize",
  "pyadjoint.optimization.optimization.minimize_custom",
  "pyadjoint.optimization.optimization.minimize_scipy_generic",
  "pyadjoint.optimization.optimization.optimization_algorithms_dict",
  "pyadjoint.optimization.optimization.serialise_bounds",
  "pyadjoint.optimization.optimization_problem.OptimizationProblem",
  "pyadjoint.optimization.rol_solver.ROLConstraint",
  "pyadjoint.optimization.rol_solver.ROLObjective",
  "pyadjoint.optimization.rol_solver.ROLVector",
  "pyadjoint.overloaded_type.FloatingType",
  "pyadjoint.overloaded_type.FloatingType.__init__",
  "pyadjoint.overloaded_type.OverloadedType",
  "pyadjoint.overloaded_type._overloaded_types",
  "pyadjoint.overloaded_type.create_overloaded_object",
  "pyadjoint.overloaded_type.get_overloaded_class",
  "pyadjoint.overloaded_type.register_overloaded_type",
  "pyadjoint.placeholder.Placeholder",
  "pyadjoint.reduced_functional.marked_controls",
  "pyadjoint.reduced_functional_numpy.gather",
  "pyadjoint.set_working_tape",
  "pyadjoint.tape.Tape",
  "pyadjoint.tape._find_relevant_nodes",
  "pyadjoint.tape._stop_annotating",
  "pyadjoint.tape._working_tape",
  "pyadjoint.tape.annotate_tape",
  "pyadjoint.tape.block",
  "pyadjoint.tape.continue_annotation",
  "pyadjoint.tape.get_working_tape",
  "pyadjoint.tape.no_annotations",
  "pyadjoint.tape.pause_annotation",
  "pyadjoint.tape.set_working_tape",
  "pyadjoint.tape.stop_annotating",
  "pyadjoint.verification.convergence_rates",
  "pyipopt.create",
  "pyipopt.set_loglevel",
  "re.compile",
  "reduced_functional.ReducedFunctional",
  "reduced_functional_numpy.ReducedFunctionalNumPy",
  "reduced_functional_numpy.gather",
  "rf",
  "rf.derivative",
  "rf.hessian",
  "riesz_representation",
  "scipy.__file__",
  "scipy.__version__",
  "scipy.optimize.basinhopping",
  "scipy.optimize.minimize",
  "self",
  "self.derivative",
  "self.get_controls",
  "six.iteritems",
  "solving.SolveBlock",
  "sys.modules",
  "tape.annotate_tape",
  "tape.get_working_tape",
  "tape.no_annotations",
  "tape.stop_annotating",
  "tensorflow.Session",
  "tensorflow.float64",
  "tensorflow.name_scope",
  "tensorflow.py_func",
  "tensorflow.reset_default_graph",
  "tensorflow.summary.FileWriter",
  "threading.Thread",
  "types.Function",
  "types.compat.ExpressionType",
  "types.compat.MatrixType",
  "types.compat.VectorType",
  "types.compat.assemble_adjoint_value",
  "types.compat.create_bc",
  "types.compat.extract_mesh_from_form",
  "types.compat.function_from_vector",
  "types.compat.linalg_solve",
  "types.function_space.extract_subfunction",
  "ufl.Coefficient",
  "ufl.Form",
  "ufl.algorithms.expand_derivatives",
  "ufl.algorithms.extract_arguments",
  "ufl.core.operator.Operator",
  "ufl.derivative",
  "ufl.equation.Equation",
  "ufl.replace",
  "warnings.warn",
  "webbrowser.open_new_tab"
 ],
 "deps": {
  "Functional": [],
  "ROL": [],
  "adjfloat": [],
  "algo": [],
  "algorithm": [],
  "backend": [],
  "block": [],
  "block_variable": [],
  "collections": [],
  "compat": [],
  "constant": [],
  "constraint_ub": [],
  "constraints": [],
  "contextlib": [],
  "control": [],
  "drivers": [],
  "e": [],
  "enlisting": [],
  "fenics_adjoint": [],
  "firedrake_adjoint": [],
  "float": [],
  "float_op": [],
  "function": [],
  "functools": [],
  "gather": [],
  "info": [],
  "logging": [],
  "moola": [],
  "numpy": [],
  "object": [],
  "operator": [],
  "optimization": [],
  "optimization_problem": [],
  "optimization_solver": [],
  "os": [],
  "overloaded_type": [],
  "perturbe": [],
  "pyOpt": [],
  "pyadjoint": [],
  "pyipopt": [],
  "re": [],
  "reduced_functional": [],
  "reduced_functional_numpy": [],
  "rf": [],
  "riesz_representation": [],
  "scipy": [],
  "self": [],
  "six": [],
  "solving": [],
  "sys": [],
  "tape": [],
  "tensorflow": [],
  "threading": [],
  "types": [],
  "ufl": [],
  "warnings": [],
  "webbrowser": []
 }
}